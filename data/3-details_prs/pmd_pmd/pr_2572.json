{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNzMxMjQ2", "number": 2572, "title": "[cpd] Allow CPD tests based on a text dump", "bodyText": "Describe the PR\nSimilar to #2388, for CPD.\n\nExtract a base class from BaseTreeDumpTest, and add a new derived class in pmd-lang-test, CpdTextComparisonTest.\nUpdate the existing tests\nAdd documentation to the website\nDeprecate AbstractTokenizerTest from pmd-test. It has complicated data-flow for nearly zero functionality, and isn't documented\n\nThis also fixes several bugs\n\nin AntlrToken: End line/column were wrong if the token spans several lines\nin AbstractTokenizer: Begin line was wrong if the token spanned multiple lines, begin column was nearly always wrong (the begin column of one token in the test file was even negative)\nScala: line/column were 0-based, the tokenizer threw the wrong kind of exception\nGroovy end columns were completely wrong, start columns were 0-based\nApex end columns are exclusive\n\nCPD also normalizes newlines to \\n now, otherwise the tests are not platform-independent. This legacy behavior was really weird tbh, and already hit me in the face several times, eg in #2294 (jsp tokenizer tests)\nRelated issues\n\n\nFixes #2483\nRefs #2388\n\nReady?\n\n\n Added unit tests for fixed bug/feature\n Passing all unit tests\n Complete build ./mvnw clean verify passes (checked automatically by travis)\n Added (in-code) documentation (if needed)", "createdAt": "2020-06-12T14:58:27Z", "url": "https://github.com/pmd/pmd/pull/2572", "merged": true, "mergeCommit": {"oid": "2592c56229a5030d380b37ecfc7afefa08cafc2c"}, "closed": true, "closedAt": "2020-06-18T18:21:19Z", "author": {"login": "oowekyala"}, "timelineItems": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqjVcWAH2gAyNDMzNzMxMjQ2OmI0NzAwMWM5MGRiODVlZWRhMWI2N2ZjNDc3N2ZhYWJjMWI4ZWMzYmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcshs-4gFqTQzMzQ1MzMzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b47001c90db85eeda1b67fc4777faabc1b8ec3bc", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/b47001c90db85eeda1b67fc4777faabc1b8ec3bc", "committedDate": "2020-06-12T14:01:00Z", "message": "Add text comparison tests for CPD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecc869926972f5437d20a72dce261497cbd2c44a", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/ecc869926972f5437d20a72dce261497cbd2c44a", "committedDate": "2020-06-12T14:27:40Z", "message": "Add doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1540ec6d9148fc14fc1673f4df1d33030d2ffcf7", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/1540ec6d9148fc14fc1673f4df1d33030d2ffcf7", "committedDate": "2020-06-12T14:56:43Z", "message": "Port remaining dart tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "826bc36331600de1c8f8e83d971e68994edfd52b", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/826bc36331600de1c8f8e83d971e68994edfd52b", "committedDate": "2020-06-12T15:27:11Z", "message": "Normalize text before tokenizing\n\nOtherwise column numbers are messed up on windows"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43412b532bf92e5a1c3cb825cdd6d8a5a5ecf1a8", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/43412b532bf92e5a1c3cb825cdd6d8a5a5ecf1a8", "committedDate": "2020-06-12T16:15:33Z", "message": "Fix column problem with Antlr multiline tokens"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d405eab97f7ede6ea6a8f59f3f435ed391704529", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/d405eab97f7ede6ea6a8f59f3f435ed391704529", "committedDate": "2020-06-12T16:22:21Z", "message": "Fix java 7 incompatibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ebe4c8775b92c3bbc8fb7c6c85d17f80a27cd74", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/6ebe4c8775b92c3bbc8fb7c6c85d17f80a27cd74", "committedDate": "2020-06-13T00:29:50Z", "message": "Port xml tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4fad9b5e3c9a11fb3eadadf2d64217336ae55538", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/4fad9b5e3c9a11fb3eadadf2d64217336ae55538", "committedDate": "2020-06-12T23:31:26Z", "message": "Port xml tests"}, "afterCommit": {"oid": "6ebe4c8775b92c3bbc8fb7c6c85d17f80a27cd74", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/6ebe4c8775b92c3bbc8fb7c6c85d17f80a27cd74", "committedDate": "2020-06-13T00:29:50Z", "message": "Port xml tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceda6bb96534a0004fdd00bd9e436069e264405a", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/ceda6bb96534a0004fdd00bd9e436069e264405a", "committedDate": "2020-06-13T11:46:55Z", "message": "Fix newline-only tokens\n\nThis happens eg in XML. Previously the end column would have been zero. We can't blindly make it 1 because the end column is inclusive. So we instead use the last column of the previous line."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ee33c7c20d61f2f66fcc7e5ed5471242a9ba5a7", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/1ee33c7c20d61f2f66fcc7e5ed5471242a9ba5a7", "committedDate": "2020-06-13T14:57:57Z", "message": "Normalize CPD newlines\n\nOtherwise tests are not platform-independent.\nDenormalizing to a platform-specific delimiter\nshould be done in the renderers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a976e9af475fbd805a7a846d0f6e3618e0df8dba", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/a976e9af475fbd805a7a846d0f6e3618e0df8dba", "committedDate": "2020-06-13T15:11:47Z", "message": "Fix sourceCode test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30f3d11795969938fd7bcda047691bdaba561796", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/30f3d11795969938fd7bcda047691bdaba561796", "committedDate": "2020-06-13T16:00:57Z", "message": "Fix java test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e21c1a94776002778b88985529a009b0a9e56f3", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/4e21c1a94776002778b88985529a009b0a9e56f3", "committedDate": "2020-06-13T17:02:35Z", "message": "Fix js tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e48fc7cca259f0efcae7135ae27e5143b3e092af", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/e48fc7cca259f0efcae7135ae27e5143b3e092af", "committedDate": "2020-06-13T17:16:22Z", "message": "Convert JS tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a1e82efad8a838da894ba8cbdbfa8d60a5fe005", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/0a1e82efad8a838da894ba8cbdbfa8d60a5fe005", "committedDate": "2020-06-13T17:21:27Z", "message": "Rename dir"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "551ab453fdf7a96f91f45cb71a209e98c26691fb", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/551ab453fdf7a96f91f45cb71a209e98c26691fb", "committedDate": "2020-06-13T18:14:08Z", "message": "Convert CPP tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b9ddc3a520334d81e709f426f8701d7b74e38cc", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/4b9ddc3a520334d81e709f426f8701d7b74e38cc", "committedDate": "2020-06-13T18:30:43Z", "message": "Finish cpp module"}, "afterCommit": {"oid": "78cadd9ef31b6b51b169ba2f7702101798005d4b", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/78cadd9ef31b6b51b169ba2f7702101798005d4b", "committedDate": "2020-06-13T18:32:14Z", "message": "Finish cpp module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "709996fddc68c5c2ef791eb4cc9d4a18dfd9213b", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/709996fddc68c5c2ef791eb4cc9d4a18dfd9213b", "committedDate": "2020-06-13T18:34:30Z", "message": "Finish cpp module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78cadd9ef31b6b51b169ba2f7702101798005d4b", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/78cadd9ef31b6b51b169ba2f7702101798005d4b", "committedDate": "2020-06-13T18:32:14Z", "message": "Finish cpp module"}, "afterCommit": {"oid": "709996fddc68c5c2ef791eb4cc9d4a18dfd9213b", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/709996fddc68c5c2ef791eb4cc9d4a18dfd9213b", "committedDate": "2020-06-13T18:34:30Z", "message": "Finish cpp module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "344d02600c4e8551ec9b07c88eef10946aa9d07d", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/344d02600c4e8551ec9b07c88eef10946aa9d07d", "committedDate": "2020-06-13T19:09:31Z", "message": "Convert java tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8c3831db8a6cf03d903fe9bce56d5c967b42b49", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/d8c3831db8a6cf03d903fe9bce56d5c967b42b49", "committedDate": "2020-06-13T19:24:36Z", "message": "Fix getSlice\n\nThe method path for when the\ncode is not loaded yet was incorrect.\n\nThis was hidden by the fact that tests\nuse a dummy tokenizer *before* cutting\nout a slice, so that the code is in the\nsoft reference, and that code path is\nnever taken in the relevant tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ff4a1c4d44589faf435af56500727bacea7f182", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/6ff4a1c4d44589faf435af56500727bacea7f182", "committedDate": "2020-06-13T19:37:47Z", "message": "Rename test file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d23c04c1b193e8d027fb5c8d73407a1138788da", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/0d23c04c1b193e8d027fb5c8d73407a1138788da", "committedDate": "2020-06-13T19:47:49Z", "message": "Check-in reference files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b3d58d4c98e78ab61b9b0d5c31ede6c32707715", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/4b3d58d4c98e78ab61b9b0d5c31ede6c32707715", "committedDate": "2020-06-13T19:52:45Z", "message": "Normalize path to avoid surprises"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da371182aadaec625274f651e2a28ee6a71ff161", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/da371182aadaec625274f651e2a28ee6a71ff161", "committedDate": "2020-06-13T20:00:58Z", "message": "Convert Go tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da764abb1ee6019ba4aef1572ef4bdd8022de3b0", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/da764abb1ee6019ba4aef1572ef4bdd8022de3b0", "committedDate": "2020-06-13T20:04:33Z", "message": "Convert kotlin tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50725a95fc222723cc4efa89c19cbe4b574a9f52", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/50725a95fc222723cc4efa89c19cbe4b574a9f52", "committedDate": "2020-06-13T20:08:58Z", "message": "Port ruby tests\n\nTODO there's a bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eba9a827fac10720d8ca9f35412c5988e4c9256", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/6eba9a827fac10720d8ca9f35412c5988e4c9256", "committedDate": "2020-06-13T20:51:00Z", "message": "Fix ruby lexer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e594e390a05230e91d063eea7edf5d48f0da608", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/7e594e390a05230e91d063eea7edf5d48f0da608", "committedDate": "2020-06-13T20:57:18Z", "message": "Convert fortran tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff2aa9c038f519f0fcd49112167def7e56fad610", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/ff2aa9c038f519f0fcd49112167def7e56fad610", "committedDate": "2020-06-13T21:01:14Z", "message": "Convert lua tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3df4506365c0bce73d45bc426e3d8c75f3590aa4", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/3df4506365c0bce73d45bc426e3d8c75f3590aa4", "committedDate": "2020-06-13T21:25:24Z", "message": "Convert scala tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fc15f0b915267404df6a8e25d0977f96130d9e3", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/9fc15f0b915267404df6a8e25d0977f96130d9e3", "committedDate": "2020-06-13T21:34:00Z", "message": "Remove test\n\nThis is already tested in SourceCodeTest in pmd-core"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60d028a28212be292d670253b5027824a197805b", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/60d028a28212be292d670253b5027824a197805b", "committedDate": "2020-06-13T21:39:35Z", "message": "Convert matlab tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15d6515278453aafe3d59b8b0124c2ab8a611c55", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/15d6515278453aafe3d59b8b0124c2ab8a611c55", "committedDate": "2020-06-13T21:44:34Z", "message": "Convert ObjC tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c563436e41067fa253f824ca0e768500dc29d34", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/2c563436e41067fa253f824ca0e768500dc29d34", "committedDate": "2020-06-13T21:48:21Z", "message": "Convert plsql tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aedd2ce49376042e3dbdcb1d9147754214ff4697", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/aedd2ce49376042e3dbdcb1d9147754214ff4697", "committedDate": "2020-06-13T21:56:55Z", "message": "Convert python tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "394b8665249d7c2f7f372ec754e97483d3860199", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/394b8665249d7c2f7f372ec754e97483d3860199", "committedDate": "2020-06-13T21:58:17Z", "message": "Convert swift tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c378b56318541c126451db8d6ae9188c0d8cfb5", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/4c378b56318541c126451db8d6ae9188c0d8cfb5", "committedDate": "2020-06-13T22:20:14Z", "message": "Convert C# module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6056c4c3a970bae1a7293353bb2886b969085312", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/6056c4c3a970bae1a7293353bb2886b969085312", "committedDate": "2020-06-13T22:11:37Z", "message": "Convert C# module"}, "afterCommit": {"oid": "4c378b56318541c126451db8d6ae9188c0d8cfb5", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/4c378b56318541c126451db8d6ae9188c0d8cfb5", "committedDate": "2020-06-13T22:20:14Z", "message": "Convert C# module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb0819f31906b0727414d8cf76bb2e9a56855b24", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/fb0819f31906b0727414d8cf76bb2e9a56855b24", "committedDate": "2020-06-13T22:29:58Z", "message": "Convert Apex tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b976d6550dfeaf66f32a7efcca2c27beb8610f15", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/b976d6550dfeaf66f32a7efcca2c27beb8610f15", "committedDate": "2020-06-13T22:42:15Z", "message": "Preserve column numbers in AnyTokenizer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59dfa15269710bc7aeeb81b00c6e1fe63512fe4e", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/59dfa15269710bc7aeeb81b00c6e1fe63512fe4e", "committedDate": "2020-06-13T23:04:32Z", "message": "Fix groovy columns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bdbd4883c2751a3f4900ade0fc958d626e6e0c4", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/1bdbd4883c2751a3f4900ade0fc958d626e6e0c4", "committedDate": "2020-06-13T23:09:49Z", "message": "Convert groovy tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "332e2369f5b7b6b8e63e449883c07ba05d2fb75a", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/332e2369f5b7b6b8e63e449883c07ba05d2fb75a", "committedDate": "2020-06-13T23:22:17Z", "message": "Fix pmd warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05f3740832f17225b58c48399845a887b57dafa7", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/05f3740832f17225b58c48399845a887b57dafa7", "committedDate": "2020-06-14T00:31:28Z", "message": "Make method private"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87797f76215e5a7222d68a545c2bfccd6e4b9d92", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/87797f76215e5a7222d68a545c2bfccd6e4b9d92", "committedDate": "2020-06-14T03:27:46Z", "message": "Port JSP tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e47ed3188039163d82903b9f3c43221d111141d", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/8e47ed3188039163d82903b9f3c43221d111141d", "committedDate": "2020-06-17T18:00:50Z", "message": "Merge branch 'master' into cpd-text-comp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2592c56229a5030d380b37ecfc7afefa08cafc2c", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/2592c56229a5030d380b37ecfc7afefa08cafc2c", "committedDate": "2020-06-17T18:03:16Z", "message": "Make apex end column inclusive"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMjk3ODc2", "url": "https://github.com/pmd/pmd/pull/2572#pullrequestreview-433297876", "createdAt": "2020-06-18T13:45:01Z", "commit": {"oid": "2592c56229a5030d380b37ecfc7afefa08cafc2c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0NTowMVrOGlv__A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0NTowMVrOGlv__A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzNjkyNA==", "bodyText": "Note that the override is necessary because test classes are in the same package as the tested tokenizer (n.s.pmd.cpd), while test files are in this new package. For 7.0 it would be best to move all tokenizers into the language-specific package:\n#2457 (comment)\nAnd these resource prefixes could be removed", "url": "https://github.com/pmd/pmd/pull/2572#discussion_r442236924", "createdAt": "2020-06-18T13:45:01Z", "author": {"login": "oowekyala"}, "path": "pmd-apex/src/test/java/net/sourceforge/pmd/cpd/ApexTokenizerTest.java", "diffHunk": "@@ -4,89 +4,57 @@\n \n package net.sourceforge.pmd.cpd;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.fail;\n-\n-import java.io.IOException;\n-import java.nio.charset.StandardCharsets;\n-import java.util.ArrayList;\n-import java.util.List;\n import java.util.Properties;\n \n-import org.apache.commons.io.IOUtils;\n import org.junit.Test;\n \n-import net.sourceforge.pmd.PMD;\n-import net.sourceforge.pmd.cpd.SourceCode.StringCodeLoader;\n+import net.sourceforge.pmd.cpd.test.CpdTextComparisonTest;\n+\n+public class ApexTokenizerTest extends CpdTextComparisonTest {\n+\n+    public ApexTokenizerTest() {\n+        super(\".cls\");\n+    }\n+\n+    @Override\n+    protected String getResourcePrefix() {\n+        return \"../lang/apex/cpd/testdata\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2592c56229a5030d380b37ecfc7afefa08cafc2c"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDUzMzM5", "url": "https://github.com/pmd/pmd/pull/2572#pullrequestreview-433453339", "createdAt": "2020-06-18T16:29:26Z", "commit": {"oid": "2592c56229a5030d380b37ecfc7afefa08cafc2c"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjoyOToyNlrOGl3IkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzoxMDoyOFrOGl4oSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1MzgwOQ==", "bodyText": "\ud83d\ude04", "url": "https://github.com/pmd/pmd/pull/2572#discussion_r442353809", "createdAt": "2020-06-18T16:29:26Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/TokenEntry.java", "diffHunk": "@@ -48,7 +48,10 @@ private TokenEntry() {\n      * @param image\n      * @param tokenSrcID\n      * @param beginLine the linenumber, 1-based.\n+     *\n+     * @deprecated Use {@link #TokenEntry(String, String, int, int, int)}, don't be lazy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2592c56229a5030d380b37ecfc7afefa08cafc2c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3MzY2MA==", "bodyText": "Does \\\\R work here? It maybe just doesn't match anything (and we don't have anything else than \\n anyway...).\nI'll change it to \\\\u000D\\\\u000A|[\\\\u000A\\\\u000B\\\\u000C\\\\u000D\\\\u0085\\\\u2028\\\\u2029] with the comment \"java8+ ...\"", "url": "https://github.com/pmd/pmd/pull/2572#discussion_r442373660", "createdAt": "2020-06-18T17:02:00Z", "author": {"login": "adangel"}, "path": "pmd-lang-test/src/main/kotlin/net/sourceforge/pmd/cpd/test/CpdTextComparisonTest.kt", "diffHunk": "@@ -0,0 +1,146 @@\n+/*\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.cpd.test\n+\n+import net.sourceforge.pmd.cpd.SourceCode\n+import net.sourceforge.pmd.cpd.TokenEntry\n+import net.sourceforge.pmd.cpd.Tokenizer\n+import net.sourceforge.pmd.cpd.Tokens\n+import net.sourceforge.pmd.test.BaseTextComparisonTest\n+import org.apache.commons.lang3.StringUtils\n+import java.util.*\n+\n+/**\n+ * CPD test comparing a dump of a file against a saved baseline.\n+ * Each token is printed on a separate line.\n+ *\n+ * @param extensionIncludingDot File extension for the language.\n+ *                              Baseline files are saved in txt files.\n+ */\n+abstract class CpdTextComparisonTest(\n+        override val extensionIncludingDot: String\n+) : BaseTextComparisonTest() {\n+\n+    abstract fun newTokenizer(properties: Properties): Tokenizer\n+\n+    override val resourceLoader: Class<*>\n+        get() = javaClass\n+\n+    override val resourcePrefix: String\n+        get() = \"testdata\"\n+\n+\n+    open fun defaultProperties() = Properties()\n+\n+    /**\n+     * A test comparing the output of the tokenizer.\n+     *\n+     * @param fileBaseName   Name of the source file (without extension or resource prefix)\n+     * @param expectedSuffix Suffix to append to the expected file. This allows reusing the same source file\n+     *                       with different configurations, provided the suffix is different\n+     * @param properties     Properties to configure [newTokenizer]\n+     */\n+    @JvmOverloads\n+    fun doTest(fileBaseName: String, expectedSuffix: String = \"\", properties: Properties = defaultProperties()) {\n+        super.doTest(fileBaseName, expectedSuffix) { sourceText ->\n+            val sourceCode = SourceCode(SourceCode.StringCodeLoader(sourceText, \"$fileBaseName$extensionIncludingDot\"))\n+            val tokens = Tokens().also {\n+                val tokenizer = newTokenizer(properties)\n+                tokenizer.tokenize(sourceCode, it)\n+            }\n+\n+            buildString { format(tokens) }\n+        }\n+    }\n+\n+\n+    private fun StringBuilder.format(tokens: Tokens) {\n+        appendHeader().appendln()\n+\n+        var curLine = -1\n+\n+        for (token in tokens.iterator()) {\n+\n+            if (token === TokenEntry.EOF) {\n+                append(\"EOF\").appendln()\n+                continue\n+            }\n+\n+            if (curLine != token.beginLine) {\n+                curLine = token.beginLine\n+                append('L').append(curLine).appendln()\n+            }\n+\n+            formatLine(token).appendln()\n+        }\n+    }\n+\n+\n+    private fun StringBuilder.appendHeader() =\n+            formatLine(\n+                    escapedImage = \"[Image] or [Truncated image[\",\n+                    bcol = \"Bcol\",\n+                    ecol = \"Ecol\"\n+            )\n+\n+\n+    private fun StringBuilder.formatLine(token: TokenEntry) =\n+            formatLine(\n+                    escapedImage = escapeImage(token.toString()),\n+                    bcol = token.beginColumn,\n+                    ecol = token.endColumn\n+            )\n+\n+\n+    private fun StringBuilder.formatLine(escapedImage: String, bcol: Any, ecol: Any): StringBuilder {\n+        var colStart = length\n+        colStart = append(Indent).append(escapedImage).padCol(colStart, Col0Width)\n+        colStart = append(Indent).append(bcol).padCol(colStart, Col1Width)\n+        return append(ecol)\n+    }\n+\n+    private fun StringBuilder.padCol(colStart: Int, colWidth: Int): Int {\n+        for (i in 1..(colStart + colWidth - this.length))\n+            append(' ')\n+\n+        return length\n+    }\n+\n+\n+    private fun escapeImage(str: String): String {\n+        val escaped = str\n+                .replace(\"\\\\\", \"\\\\\\\\\")                 // escape backslashes\n+                .replace(\"\\r\\n\", \"\\\\r\\\\n\")             // CRLF (treated specially because it has a different length)\n+                .replace(\"\\t\", \"\\\\t\")                  // TAB\n+                .replace(Regex(\"\\\\R\"), \"\\\\\\\\n\")       // escape other newlines (normalizing)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2592c56229a5030d380b37ecfc7afefa08cafc2c"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3NzQ3OA==", "bodyText": "That should not be necessary, thanks to \n  \n    \n      pmd/pom.xml\n    \n    \n         Line 259\n      in\n      e435037\n    \n    \n    \n    \n\n        \n          \n           <mvn.project.src.test.resources>${project.build.testResources[0].directory}</mvn.project.src.test.resources> \n        \n    \n  \n\n\nI'll test, whether it works without this config...", "url": "https://github.com/pmd/pmd/pull/2572#discussion_r442377478", "createdAt": "2020-06-18T17:09:01Z", "author": {"login": "adangel"}, "path": "pmd-scala-modules/pmd-scala-common/pom.xml", "diffHunk": "@@ -74,6 +74,16 @@\n                     </executions>\n                 </plugin>\n \n+                <plugin>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <artifactId>maven-surefire-plugin</artifactId>\n+                    <configuration>\n+                        <systemPropertyVariables>\n+                            <mvn.project.src.test.resources>${project.basedir}/../pmd-scala-common/src/test/resources</mvn.project.src.test.resources>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2592c56229a5030d380b37ecfc7afefa08cafc2c"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3ODMxMg==", "bodyText": "really? wow...", "url": "https://github.com/pmd/pmd/pull/2572#discussion_r442378312", "createdAt": "2020-06-18T17:10:28Z", "author": {"login": "adangel"}, "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -74,12 +76,26 @@ public void tokenize(SourceCode sourceCode, Tokens tokenEntries) throws IOExcept\n \n             Token token;\n             while ((token = filter.getNextToken()) != null) {\n-                String tokenText = token.text() != null ? token.text() : token.name();\n-                Position tokenPosition = token.pos();\n-                TokenEntry cpdToken = new TokenEntry(tokenText, filename, tokenPosition.startLine(),\n-                        tokenPosition.startColumn(), tokenPosition.endColumn());\n+                if (StringUtils.isEmpty(token.text())) {\n+                    continue;\n+                }\n+                Position pos = token.pos();\n+                TokenEntry cpdToken = new TokenEntry(token.text(),\n+                                                     filename,\n+                                                     pos.startLine() + 1,\n+                                                     pos.startColumn() + 1,\n+                                                     pos.endColumn() + 1);\n                 tokenEntries.add(cpdToken);\n             }\n+        } catch (Exception e) {\n+            if (e instanceof TokenizeException) { // NOPMD\n+                // cannot catch it as it's a checked exception and Scala sneaky throws", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2592c56229a5030d380b37ecfc7afefa08cafc2c"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4817, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}