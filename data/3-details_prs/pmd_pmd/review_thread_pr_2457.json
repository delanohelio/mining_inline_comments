{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNzg0NzY4", "number": 2457, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTo0MjozOFrOD6LBow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwODo0NTowOFrOD6kQ2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzI0NjQzOnYy", "diffSide": "RIGHT", "path": "pmd-xml/src/main/java/net/sourceforge/pmd/cpd/XmlLanguage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTo0MjozOFrOGR2wfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTo0NToyMVrOGSE0qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3NjEyNA==", "bodyText": "This is not described yet anywhere but since this is a new class, we should try to use better package names. Could you please use net.sourceforge.pmd.xml.cpd for this class and the others?", "url": "https://github.com/pmd/pmd/pull/2457#discussion_r421376124", "createdAt": "2020-05-07T09:42:38Z", "author": {"login": "adangel"}, "path": "pmd-xml/src/main/java/net/sourceforge/pmd/cpd/XmlLanguage.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/**\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.cpd;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2cd3fd8e5dd6e0811e6c9a90b9546feb66f8d03"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYwNjU3MQ==", "bodyText": "I was wondering about that. This is better, but I had to change the visibility in one of the methods in AntlrTokenizer.java", "url": "https://github.com/pmd/pmd/pull/2457#discussion_r421606571", "createdAt": "2020-05-07T15:45:21Z", "author": {"login": "xnYi9wRezm"}, "path": "pmd-xml/src/main/java/net/sourceforge/pmd/cpd/XmlLanguage.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/**\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.cpd;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3NjEyNA=="}, "originalCommit": {"oid": "a2cd3fd8e5dd6e0811e6c9a90b9546feb66f8d03"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzI1MDEwOnYy", "diffSide": "RIGHT", "path": "pmd-xml/src/test/java/net/sourceforge/pmd/cpd/XmlCPDTokenizerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTo0MzozOFrOGR2y3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTo0MzozOFrOGR2y3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3NjczNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return IOUtils.toString(XmlTokenizer.class.getResourceAsStream(FILENAME));\n          \n          \n            \n                    return IOUtils.toString(XmlTokenizer.class.getResourceAsStream(FILENAME), StandardCharsets.UTF_8);", "url": "https://github.com/pmd/pmd/pull/2457#discussion_r421376734", "createdAt": "2020-05-07T09:43:38Z", "author": {"login": "adangel"}, "path": "pmd-xml/src/test/java/net/sourceforge/pmd/cpd/XmlCPDTokenizerTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.cpd;\n+\n+import java.io.IOException;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import net.sourceforge.pmd.testframework.AbstractTokenizerTest;\n+\n+public class XmlCPDTokenizerTest extends AbstractTokenizerTest {\n+\n+    private static final String FILENAME = \"hello.xml\";\n+\n+    @Before\n+    @Override\n+    public void buildTokenizer() throws IOException {\n+        this.tokenizer = new XmlTokenizer();\n+        this.sourceCode = new SourceCode(new SourceCode.StringCodeLoader(this.getSampleCode(), FILENAME));\n+    }\n+\n+    @Override\n+    public String getSampleCode() throws IOException {\n+        return IOUtils.toString(XmlTokenizer.class.getResourceAsStream(FILENAME));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2cd3fd8e5dd6e0811e6c9a90b9546feb66f8d03"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzMxMTMyOnYy", "diffSide": "RIGHT", "path": "pmd-xml/src/main/antlr4/net/sourceforge/pmd/lang/xml/antlr4/XMLLexer.g4", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTo1OTo0NlrOGR3ZLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwODozNzoyOVrOGSeF5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4NjU0MA==", "bodyText": "Note that this seems to be more restrictive than the standard: https://www.w3.org/TR/xml/#NT-NameStartChar", "url": "https://github.com/pmd/pmd/pull/2457#discussion_r421386540", "createdAt": "2020-05-07T09:59:46Z", "author": {"login": "adangel"}, "path": "pmd-xml/src/main/antlr4/net/sourceforge/pmd/lang/xml/antlr4/XMLLexer.g4", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ [The \"BSD licence\"]\n+ Copyright (c) 2013 Terence Parr\n+ All rights reserved.\n+\n+ Redistribution and use in source and binary forms, with or without\n+ modification, are permitted provided that the following conditions\n+ are met:\n+ 1. Redistributions of source code must retain the above copyright\n+    notice, this list of conditions and the following disclaimer.\n+ 2. Redistributions in binary form must reproduce the above copyright\n+    notice, this list of conditions and the following disclaimer in the\n+    documentation and/or other materials provided with the distribution.\n+ 3. The name of the author may not be used to endorse or promote products\n+    derived from this software without specific prior written permission.\n+\n+ THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n+ IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n+ IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n+ INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n+ NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n+ THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+*/\n+\n+/** XML lexer derived from ANTLR v4 ref guide book example */\n+lexer grammar XMLLexer;\n+\n+// Default \"mode\": Everything OUTSIDE of a tag\n+COMMENT     :   '<!--' .*? '-->' ;\n+CDATA       :   '<![CDATA[' .*? ']]>' ;\n+/** Scarf all DTD stuff, Entity Declarations like <!ENTITY ...>,\n+ *  and Notation Declarations <!NOTATION ...>\n+ */\n+DTD         :   '<!' .*? '>'            -> skip ;\n+EntityRef   :   '&' Name ';' ;\n+CharRef     :   '&#' DIGIT+ ';'\n+            |   '&#x' HEXDIGIT+ ';'\n+            ;\n+SEA_WS      :   (' '|'\\t'|'\\r'? '\\n')+ ;\n+\n+OPEN        :   '<'                     -> pushMode(INSIDE) ;\n+XMLDeclOpen :   '<?xml' S               -> pushMode(INSIDE) ;\n+SPECIAL_OPEN:   '<?' Name               -> more, pushMode(PROC_INSTR) ;\n+\n+TEXT        :   ~[<&]+ ;        // match any 16 bit char other than < and &\n+\n+// ----------------- Everything INSIDE of a tag ---------------------\n+mode INSIDE;\n+\n+CLOSE       :   '>'                     -> popMode ;\n+SPECIAL_CLOSE:  '?>'                    -> popMode ; // close <?xml...?>\n+SLASH_CLOSE :   '/>'                    -> popMode ;\n+SLASH       :   '/' ;\n+EQUALS      :   '=' ;\n+STRING      :   '\"' ~[<\"]* '\"'\n+            |   '\\'' ~[<']* '\\''\n+            ;\n+Name        :   NameStartChar NameChar* ;\n+S           :   [ \\t\\r\\n]               -> skip ;\n+\n+fragment\n+HEXDIGIT    :   [a-fA-F0-9] ;\n+\n+fragment\n+DIGIT       :   [0-9] ;\n+\n+fragment\n+NameChar    :   NameStartChar\n+            |   '-' | '_' | '.' | DIGIT\n+            |   '\\u00B7'\n+            |   '\\u0300'..'\\u036F'\n+            |   '\\u203F'..'\\u2040'\n+            ;\n+\n+fragment\n+NameStartChar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2cd3fd8e5dd6e0811e6c9a90b9546feb66f8d03"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU1MzEwMw==", "bodyText": "I'm not 100% sure what I am doing here, but I will try something.", "url": "https://github.com/pmd/pmd/pull/2457#discussion_r421553103", "createdAt": "2020-05-07T14:33:50Z", "author": {"login": "xnYi9wRezm"}, "path": "pmd-xml/src/main/antlr4/net/sourceforge/pmd/lang/xml/antlr4/XMLLexer.g4", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ [The \"BSD licence\"]\n+ Copyright (c) 2013 Terence Parr\n+ All rights reserved.\n+\n+ Redistribution and use in source and binary forms, with or without\n+ modification, are permitted provided that the following conditions\n+ are met:\n+ 1. Redistributions of source code must retain the above copyright\n+    notice, this list of conditions and the following disclaimer.\n+ 2. Redistributions in binary form must reproduce the above copyright\n+    notice, this list of conditions and the following disclaimer in the\n+    documentation and/or other materials provided with the distribution.\n+ 3. The name of the author may not be used to endorse or promote products\n+    derived from this software without specific prior written permission.\n+\n+ THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n+ IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n+ IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n+ INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n+ NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n+ THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+*/\n+\n+/** XML lexer derived from ANTLR v4 ref guide book example */\n+lexer grammar XMLLexer;\n+\n+// Default \"mode\": Everything OUTSIDE of a tag\n+COMMENT     :   '<!--' .*? '-->' ;\n+CDATA       :   '<![CDATA[' .*? ']]>' ;\n+/** Scarf all DTD stuff, Entity Declarations like <!ENTITY ...>,\n+ *  and Notation Declarations <!NOTATION ...>\n+ */\n+DTD         :   '<!' .*? '>'            -> skip ;\n+EntityRef   :   '&' Name ';' ;\n+CharRef     :   '&#' DIGIT+ ';'\n+            |   '&#x' HEXDIGIT+ ';'\n+            ;\n+SEA_WS      :   (' '|'\\t'|'\\r'? '\\n')+ ;\n+\n+OPEN        :   '<'                     -> pushMode(INSIDE) ;\n+XMLDeclOpen :   '<?xml' S               -> pushMode(INSIDE) ;\n+SPECIAL_OPEN:   '<?' Name               -> more, pushMode(PROC_INSTR) ;\n+\n+TEXT        :   ~[<&]+ ;        // match any 16 bit char other than < and &\n+\n+// ----------------- Everything INSIDE of a tag ---------------------\n+mode INSIDE;\n+\n+CLOSE       :   '>'                     -> popMode ;\n+SPECIAL_CLOSE:  '?>'                    -> popMode ; // close <?xml...?>\n+SLASH_CLOSE :   '/>'                    -> popMode ;\n+SLASH       :   '/' ;\n+EQUALS      :   '=' ;\n+STRING      :   '\"' ~[<\"]* '\"'\n+            |   '\\'' ~[<']* '\\''\n+            ;\n+Name        :   NameStartChar NameChar* ;\n+S           :   [ \\t\\r\\n]               -> skip ;\n+\n+fragment\n+HEXDIGIT    :   [a-fA-F0-9] ;\n+\n+fragment\n+DIGIT       :   [0-9] ;\n+\n+fragment\n+NameChar    :   NameStartChar\n+            |   '-' | '_' | '.' | DIGIT\n+            |   '\\u00B7'\n+            |   '\\u0300'..'\\u036F'\n+            |   '\\u203F'..'\\u2040'\n+            ;\n+\n+fragment\n+NameStartChar", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4NjU0MA=="}, "originalCommit": {"oid": "a2cd3fd8e5dd6e0811e6c9a90b9546feb66f8d03"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyMDU4MQ==", "bodyText": "That was actually just meant as a heads-up for the future. Basically, we would also need to fix this upstream, since https://github.com/antlr/grammars-v4/blob/master/xml/XMLLexer.g4 has the same potential problem.", "url": "https://github.com/pmd/pmd/pull/2457#discussion_r422020581", "createdAt": "2020-05-08T08:37:29Z", "author": {"login": "adangel"}, "path": "pmd-xml/src/main/antlr4/net/sourceforge/pmd/lang/xml/antlr4/XMLLexer.g4", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ [The \"BSD licence\"]\n+ Copyright (c) 2013 Terence Parr\n+ All rights reserved.\n+\n+ Redistribution and use in source and binary forms, with or without\n+ modification, are permitted provided that the following conditions\n+ are met:\n+ 1. Redistributions of source code must retain the above copyright\n+    notice, this list of conditions and the following disclaimer.\n+ 2. Redistributions in binary form must reproduce the above copyright\n+    notice, this list of conditions and the following disclaimer in the\n+    documentation and/or other materials provided with the distribution.\n+ 3. The name of the author may not be used to endorse or promote products\n+    derived from this software without specific prior written permission.\n+\n+ THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n+ IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n+ IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n+ INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n+ NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n+ THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+*/\n+\n+/** XML lexer derived from ANTLR v4 ref guide book example */\n+lexer grammar XMLLexer;\n+\n+// Default \"mode\": Everything OUTSIDE of a tag\n+COMMENT     :   '<!--' .*? '-->' ;\n+CDATA       :   '<![CDATA[' .*? ']]>' ;\n+/** Scarf all DTD stuff, Entity Declarations like <!ENTITY ...>,\n+ *  and Notation Declarations <!NOTATION ...>\n+ */\n+DTD         :   '<!' .*? '>'            -> skip ;\n+EntityRef   :   '&' Name ';' ;\n+CharRef     :   '&#' DIGIT+ ';'\n+            |   '&#x' HEXDIGIT+ ';'\n+            ;\n+SEA_WS      :   (' '|'\\t'|'\\r'? '\\n')+ ;\n+\n+OPEN        :   '<'                     -> pushMode(INSIDE) ;\n+XMLDeclOpen :   '<?xml' S               -> pushMode(INSIDE) ;\n+SPECIAL_OPEN:   '<?' Name               -> more, pushMode(PROC_INSTR) ;\n+\n+TEXT        :   ~[<&]+ ;        // match any 16 bit char other than < and &\n+\n+// ----------------- Everything INSIDE of a tag ---------------------\n+mode INSIDE;\n+\n+CLOSE       :   '>'                     -> popMode ;\n+SPECIAL_CLOSE:  '?>'                    -> popMode ; // close <?xml...?>\n+SLASH_CLOSE :   '/>'                    -> popMode ;\n+SLASH       :   '/' ;\n+EQUALS      :   '=' ;\n+STRING      :   '\"' ~[<\"]* '\"'\n+            |   '\\'' ~[<']* '\\''\n+            ;\n+Name        :   NameStartChar NameChar* ;\n+S           :   [ \\t\\r\\n]               -> skip ;\n+\n+fragment\n+HEXDIGIT    :   [a-fA-F0-9] ;\n+\n+fragment\n+DIGIT       :   [0-9] ;\n+\n+fragment\n+NameChar    :   NameStartChar\n+            |   '-' | '_' | '.' | DIGIT\n+            |   '\\u00B7'\n+            |   '\\u0300'..'\\u036F'\n+            |   '\\u203F'..'\\u2040'\n+            ;\n+\n+fragment\n+NameStartChar", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4NjU0MA=="}, "originalCommit": {"oid": "a2cd3fd8e5dd6e0811e6c9a90b9546feb66f8d03"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzMxNzI4OnYy", "diffSide": "RIGHT", "path": "pmd-xml/src/main/java/net/sourceforge/pmd/cpd/XmlLanguage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDowMToyMlrOGR3dCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo0Njo0OFrOGR_Vhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4NzUzMA==", "bodyText": "You can remove these javadocs - they don't add any information.", "url": "https://github.com/pmd/pmd/pull/2457#discussion_r421387530", "createdAt": "2020-05-07T10:01:22Z", "author": {"login": "adangel"}, "path": "pmd-xml/src/main/java/net/sourceforge/pmd/cpd/XmlLanguage.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/**\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.cpd;\n+\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2cd3fd8e5dd6e0811e6c9a90b9546feb66f8d03"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUxNjY3OA==", "bodyText": "Agreed! I was just looking at Go! :)", "url": "https://github.com/pmd/pmd/pull/2457#discussion_r421516678", "createdAt": "2020-05-07T13:46:48Z", "author": {"login": "xnYi9wRezm"}, "path": "pmd-xml/src/main/java/net/sourceforge/pmd/cpd/XmlLanguage.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/**\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.cpd;\n+\n+/**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4NzUzMA=="}, "originalCommit": {"oid": "a2cd3fd8e5dd6e0811e6c9a90b9546feb66f8d03"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNzM4MTM4OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/AntlrTokenizer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwODo0NTowOFrOGSeTMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwODo0NTowOFrOGSeTMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyMzk4Ng==", "bodyText": "ok, for now we'll make it public. I'll remove the comment /* default */ when merging, because that's now wrong.\nThe whole class is currently marked as @InternalApi, so the API can be changed (probably this static helper methods is moved somewhere else...)", "url": "https://github.com/pmd/pmd/pull/2457#discussion_r422023986", "createdAt": "2020-05-08T08:45:08Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/AntlrTokenizer.java", "diffHunk": "@@ -53,7 +53,7 @@ protected AntlrTokenFilter getTokenFilter(final AntlrTokenManager tokenManager)\n         return new AntlrTokenFilter(tokenManager);\n     }\n \n-    /* default */ static CharStream getCharStreamFromSourceCode(final SourceCode sourceCode) {\n+    public /* default */ static CharStream getCharStreamFromSourceCode(final SourceCode sourceCode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f9628690261e5ed80e5868e92a7aaed3ff495a0"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 391, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}