{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3Mzk3NTIz", "number": 2945, "title": "[cs] Add option to ignore sequences of literals", "bodyText": "Describe the PR\nIn some cases, code may include sequences of literals that represent lists or tables of constants, such as lookup tables. Large sequences of these (particularly parts with many zeroes) will be identified by CPD as duplicates, but in practice, these are not the types of duplicates that are considered interesting.\nThis introduces a new option for CPD (--ignore-literal-sequences) that ignores these sequences of literals, in a very similar way to how using directives for C# can already be skipped as well. For now, this functionality is restricted to C#, but it could be added for other languages as well.\nRelated issues\nNone that I'm aware of.\nReady?\n\n\n Added unit tests for fixed bug/feature\n Passing all unit tests\n Complete build ./mvnw clean verify passes (checked automatically by travis)\n Added (in-code) documentation (if needed)", "createdAt": "2020-11-25T12:04:59Z", "url": "https://github.com/pmd/pmd/pull/2945", "merged": true, "mergeCommit": {"oid": "dc597827b8070de5a23ebc129da52d7c08a02553"}, "closed": true, "closedAt": "2020-11-30T17:07:19Z", "author": {"login": "maikelsteneker"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdf8vdnAH2gAyNTI3Mzk3NTIzOmFhZWYwZmRlNGUwZmRkNzUyMTJiOGI5M2RiMThhOTFmMzJmMjg2MmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdf_sUhgFqTUzODU4Njg1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aaef0fde4e0fdd75212b8b93db18a91f32f2862d", "author": {"user": {"login": "maikelsteneker", "name": "Maikel Steneker"}}, "url": "https://github.com/pmd/pmd/commit/aaef0fde4e0fdd75212b8b93db18a91f32f2862d", "committedDate": "2020-11-25T11:35:02Z", "message": "Add option to ignore sequences of literals\n\nIn some cases, code may include sequences of literals that represent lists or tables of constants, such as lookup tables. Large sequences of these (particularly parts with many zeroes) will be identified by CPD as duplicates, but in practice, these are not the types of duplicates that are considered interesting.\n\nThis introduces a new option for CPD (--ignore-literal-sequences) that ignores these sequences of literals, in a very similar way to how using directives for C# can already be skipped as well. For now, this functionality is restricted to C#, but it could be added for other languages as well."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NTg2ODUw", "url": "https://github.com/pmd/pmd/pull/2945#pullrequestreview-538586850", "createdAt": "2020-11-25T15:01:19Z", "commit": {"oid": "aaef0fde4e0fdd75212b8b93db18a91f32f2862d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNTowMToxOVrOH53X7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNTowMToxOVrOH53X7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQzODEyNQ==", "bodyText": "Isn't there a library method to initialize a list with copies of the same value? In Java you can write eg new ArrayList<>(Collections.nCopies(120, 0)).\nEdit:\nFound it: https://stackoverflow.com/a/17169142/6245827\nSo 2 questions:\n\nare there some cases where this AddRange method is inappropriate, and you'd really like to duplicate your literals?\nif so, then in those cases, isn't it more informative to CPD-OFF locally, and explain why you're not using AddRange with a comment, rather than use a global --ignore-literal-sequences?", "url": "https://github.com/pmd/pmd/pull/2945#discussion_r530438125", "createdAt": "2020-11-25T15:01:19Z", "author": {"login": "oowekyala"}, "path": "pmd-cs/src/test/resources/net/sourceforge/pmd/lang/cs/cpd/testdata/listOfNumbers.cs", "diffHunk": "@@ -0,0 +1,8 @@\n+using System;\n+using System.Collections;\n+using System.Collections.Generic;\n+public class LongLists {\n+    List<byte> l = new List<byte> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaef0fde4e0fdd75212b8b93db18a91f32f2862d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4597, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}