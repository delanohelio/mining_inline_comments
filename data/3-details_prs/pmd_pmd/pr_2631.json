{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTUzNDEz", "number": 2631, "title": "[java] NPathComplexity can't handle switch expressions", "bodyText": "Describe the PR\nAdd support for multiple case labels, switch expressions and switch blocks in NPATH and CYCLO metrics.\nRelated issues\n\nFixes #2625\n\nReady?\n\n\n Added unit tests for fixed bug/feature\n Passing all unit tests\n Complete build ./mvnw clean verify passes (checked automatically by travis)\n Added (in-code) documentation (if needed)", "createdAt": "2020-07-03T17:59:06Z", "url": "https://github.com/pmd/pmd/pull/2631", "merged": true, "mergeCommit": {"oid": "4444ef279d920cff368a8cb24b77eb72fb9cc01b"}, "closed": true, "closedAt": "2020-07-24T08:32:31Z", "author": {"login": "adangel"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxXTMQgH2gAyNDQ0MTUzNDEzOmRiNjc1YzM3ZDkxZTBmZGY0YjQzZjE2NTFkNDg1YjQyMjY0YzA0NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3u6fLAH2gAyNDQ0MTUzNDEzOjZhOWE4MzRjNjcyZGMyNDEwNTNiNWFlZmY1ZWFhNWUxOTllMzA3NDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "db675c37d91e0fdf4b43f1651d485b42264c0451", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/db675c37d91e0fdf4b43f1651d485b42264c0451", "committedDate": "2020-07-03T17:57:09Z", "message": "[java] NPathComplexity can't handle switch expressions\n\nFixes #2625"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/25bfb9d90995b72706af8ba30117df92eb55f97b", "committedDate": "2020-07-03T17:57:12Z", "message": "[java] Support switch labels/rules/expressions for CYCLO"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjg4MzY2", "url": "https://github.com/pmd/pmd/pull/2631#pullrequestreview-451688366", "createdAt": "2020-07-20T14:57:45Z", "commit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1Nzo0NVrOG0Rezg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowNTozOVrOG0R7ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NTU1MA==", "bodyText": "I think, this would ignore the complexity of the block under the default label.\nCorrection: it probably does handle it, since descendants are counted, but a test case would be nice. Here's one that uses a switch expression, which is relevant to the other comment\nclass Foo {\n    void foo(int x) {     // +1\n        foo(switch (x) {\n            default -> {\n                if (a) { // +1\n                    yield 1;\n                } else {\n                    yield 2;\n                }\n            }\n        });\n    }\n}", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457465550", "createdAt": "2020-07-20T14:57:45Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/internal/CycloVisitor.java", "diffHunk": "@@ -65,13 +67,24 @@ public Object visit(ASTSwitchStatement node, Object data) {\n             }\n \n             if (considerBooleanPaths) {\n-                ((MutableInt) data).increment();\n+                ((MutableInt) data).add(label.findChildrenOfType(ASTExpression.class).size());\n             } else if (node.getNumChildren() > 1 + label.getIndexInParent()\n                     && node.getChild(label.getIndexInParent() + 1) instanceof ASTBlockStatement) {\n                 // an empty label is only counted if we count boolean paths\n                 ((MutableInt) data).increment();\n             }\n         }\n+\n+        for (ASTSwitchLabeledRule rule : node.findChildrenOfType(ASTSwitchLabeledRule.class)) {\n+            ASTSwitchLabel label = rule.getFirstChildOfType(ASTSwitchLabel.class);\n+            if (label.isDefault()) {\n+                continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NzQwNA==", "bodyText": "I see, all this applies only to switch statements? You added support for non-fallthrough switch branches, but this still needs to handle switch expressions", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457467404", "createdAt": "2020-07-20T14:59:43Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/internal/CycloVisitor.java", "diffHunk": "@@ -65,13 +67,24 @@ public Object visit(ASTSwitchStatement node, Object data) {\n             }\n \n             if (considerBooleanPaths) {\n-                ((MutableInt) data).increment();\n+                ((MutableInt) data).add(label.findChildrenOfType(ASTExpression.class).size());\n             } else if (node.getNumChildren() > 1 + label.getIndexInParent()\n                     && node.getChild(label.getIndexInParent() + 1) instanceof ASTBlockStatement) {\n                 // an empty label is only counted if we count boolean paths\n                 ((MutableInt) data).increment();\n             }\n         }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MTYyOQ==", "bodyText": "Just being picky, the +1 is not for the switch, but for the method block\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    switch (x) {                            // +1\n          \n          \n            \n                    switch (x) {", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457471629", "createdAt": "2020-07-20T15:04:16Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "diffHunk": "@@ -389,6 +389,71 @@ class Foo {\n         for (int i = 0; i != import1Tokens.length && i != import2Tokens.length; i++) {\n         }\n     }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Multiple switch labels should count each</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 3.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                 // +1\n+            case 1, 2: foo(); break; // +2\n+            default: bar(); break;\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled blocks should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        boolean a, b;\n+        switch (x) {                            // +1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MTg0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void foo() {\n          \n          \n            \n                void foo() { // +1", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457471844", "createdAt": "2020-07-20T15:04:28Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "diffHunk": "@@ -389,6 +389,71 @@ class Foo {\n         for (int i = 0; i != import1Tokens.length && i != import2Tokens.length; i++) {\n         }\n     }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Multiple switch labels should count each</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 3.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                 // +1\n+            case 1, 2: foo(); break; // +2\n+            default: bar(); break;\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled blocks should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MjcxMA==", "bodyText": "Same\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    switch (x) {                // +1\n          \n          \n            \n                    switch (x) {", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457472710", "createdAt": "2020-07-20T15:05:24Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "diffHunk": "@@ -389,6 +389,71 @@ class Foo {\n         for (int i = 0; i != import1Tokens.length && i != import2Tokens.length; i++) {\n         }\n     }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Multiple switch labels should count each</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 3.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                 // +1\n+            case 1, 2: foo(); break; // +2\n+            default: bar(); break;\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled blocks should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        boolean a, b;\n+        switch (x) {                            // +1\n+            case 1, 2 -> { if (a && b) bar(); } // +4\n+            default -> { bar(); }\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled expressions should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                // +1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MjkzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void foo() {\n          \n          \n            \n                void foo() { // +1", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457472931", "createdAt": "2020-07-20T15:05:39Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "diffHunk": "@@ -389,6 +389,71 @@ class Foo {\n         for (int i = 0; i != import1Tokens.length && i != import2Tokens.length; i++) {\n         }\n     }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Multiple switch labels should count each</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 3.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                 // +1\n+            case 1, 2: foo(); break; // +2\n+            default: bar(); break;\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled blocks should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        boolean a, b;\n+        switch (x) {                            // +1\n+            case 1, 2 -> { if (a && b) bar(); } // +4\n+            default -> { bar(); }\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled expressions should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "677bfd4ae4e29fa63d14c23b3719aa8b7af5be5e", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/677bfd4ae4e29fa63d14c23b3719aa8b7af5be5e", "committedDate": "2020-07-23T07:46:50Z", "message": "[java] Added additional test case for CycloMetric\n\nAnd fixed comments in test cases\n\nRefs #2631"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7941d8d6102e41208bff3f18f40b0f54347e8f91", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/7941d8d6102e41208bff3f18f40b0f54347e8f91", "committedDate": "2020-07-23T07:57:57Z", "message": "Merge branch 'master' into issue-2625"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbeaa5bc748613b13455cfb2a2b65a1d7b5b0928", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/fbeaa5bc748613b13455cfb2a2b65a1d7b5b0928", "committedDate": "2020-07-23T12:26:33Z", "message": "Merge branch 'master' into issue-2625"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a47d658e690e08b2b73e8f70c088730ff15c551", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/9a47d658e690e08b2b73e8f70c088730ff15c551", "committedDate": "2020-07-23T12:42:29Z", "message": "Handle switch exprs properly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a9a834c672dc241053b5aeff5eaa5e199e30746", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/6a9a834c672dc241053b5aeff5eaa5e199e30746", "committedDate": "2020-07-23T12:51:26Z", "message": "Same for NPath"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4626, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}