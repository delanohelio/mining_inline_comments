{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMDM0MTgw", "number": 2920, "title": "[java] Fix memory-leak in type resolution", "bodyText": "Describe the PR\n\nRemove the static type definition cache\nMake the constructor of JavaTypeDefinitionSimple cheaper\nStop trying to load method names as class names\n\nNote that this does nothing for the parallelLockMap issue (except reducing the number of wrong class names we try to load). This looks like it's specific to JDK 1.7. We could \"fix\" it in PMDAsmClassLoader by overriding getClassLoadingLock and returning always the same instance. But this would make us give up concurrent classloading, and would not prevent other kinds of classloaders to create their own lock. I think this particular sub-issue is a wont fix.\nRelated issues\n\n\nFixes #2911 (in pmd 7 there is no problem and this should be thrown away when merging)\n\nReady?\n\n\n Added unit tests for fixed bug/feature\n Passing all unit tests\n Complete build ./mvnw clean verify passes (checked automatically by travis)\n Added (in-code) documentation (if needed)", "createdAt": "2020-11-14T17:15:23Z", "url": "https://github.com/pmd/pmd/pull/2920", "merged": true, "mergeCommit": {"oid": "b509e9b9a447883965a0220a185949fb65d3dd29"}, "closed": true, "closedAt": "2020-11-23T14:44:05Z", "author": {"login": "oowekyala"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdccL3YgH2gAyNTIxMDM0MTgwOjRmZTM4NzQ4MjRmMzczNjU0N2Q4MDhhZDM3ZGIyZTFiYmM0N2Q1Y2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfWCdSgFqTUzNjUyMzM3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4fe3874824f3736547d808ad37db2e1bbc47d5cd", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/4fe3874824f3736547d808ad37db2e1bbc47d5cd", "committedDate": "2020-11-14T13:57:25Z", "message": "Simplify constructor of JavaTypeDefinitionSimple"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00d76b03ab1bfd7b6eb517be1f565464d26dcf72", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/00d76b03ab1bfd7b6eb517be1f565464d26dcf72", "committedDate": "2020-11-14T14:02:15Z", "message": "Restrict caching to classes loaded by the bootstrap loader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "307eacd20aecd7cabda70e3df27f78b5bd9d91a5", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/307eacd20aecd7cabda70e3df27f78b5bd9d91a5", "committedDate": "2020-11-14T14:37:04Z", "message": "Fix errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ee7b7ae027fee6755fd4c6375fbfb37cd22149b", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/4ee7b7ae027fee6755fd4c6375fbfb37cd22149b", "committedDate": "2020-11-14T15:44:27Z", "message": "Load fewer class names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30124fef118e215d04cd7f67f186155bd6213088", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/30124fef118e215d04cd7f67f186155bd6213088", "committedDate": "2020-11-14T15:54:11Z", "message": "Don't cache enclosing class (pretty rare to hit it)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ccdb5597a751d055b67f2501f05413e359b8b92", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/3ccdb5597a751d055b67f2501f05413e359b8b92", "committedDate": "2020-11-14T16:15:42Z", "message": "Make overload without varargs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51c0df8770e4aa22f9d50212be675f022c16b011", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/51c0df8770e4aa22f9d50212be675f022c16b011", "committedDate": "2020-11-14T16:48:14Z", "message": "Remove cache entirely"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b70462b79a5595c6921dc13a4c66517964ee52bb", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/b70462b79a5595c6921dc13a4c66517964ee52bb", "committedDate": "2020-11-14T17:16:20Z", "message": "Update release notes, refs #2920"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2Mjk5NzUy", "url": "https://github.com/pmd/pmd/pull/2920#pullrequestreview-536299752", "createdAt": "2020-11-23T09:36:03Z", "commit": {"oid": "b70462b79a5595c6921dc13a4c66517964ee52bb"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTozNjowM1rOH4FYHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo1NDo1N1rOH4GGEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3MDM5Nw==", "bodyText": "I think, we should also catch here TypeNotPresentException, see also #2940", "url": "https://github.com/pmd/pmd/pull/2920#discussion_r528570397", "createdAt": "2020-11-23T09:36:03Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinition.java", "diffHunk": "@@ -52,33 +51,22 @@ public static JavaTypeDefinition forClass(TypeDefinitionType type, JavaTypeDefin\n         }\n     }\n \n+    public static JavaTypeDefinition forClass(final Class<?> clazz) {\n+        return clazz == Object.class ? JavaTypeDefinitionSimple.OBJECT_DEFINITION\n+                                     : forClass(clazz, NO_GENERICS); // very common\n+\n+    }\n+\n     public static JavaTypeDefinition forClass(final Class<?> clazz, JavaTypeDefinition... boundGenerics) {\n         if (clazz == null) {\n             return null;\n         }\n \n-        // deal with generic types\n-        if (boundGenerics.length != 0) {\n-            // With generics there is no cache\n-            return new JavaTypeDefinitionSimple(clazz, boundGenerics);\n-        }\n-\n-        final JavaTypeDefinition typeDef = CLASS_EXACT_TYPE_DEF_CACHE.get(clazz);\n-\n-        if (typeDef != null) {\n-            return typeDef;\n-        }\n-\n-        final JavaTypeDefinition newDef;\n         try {\n-            newDef = new JavaTypeDefinitionSimple(clazz);\n-        } catch (final NoClassDefFoundError e) {\n+            return new JavaTypeDefinitionSimple(clazz, boundGenerics);\n+        } catch (final LinkageError e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70462b79a5595c6921dc13a4c66517964ee52bb"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MDY2Nw==", "bodyText": "Hm... maybe not - we don't seem to load anything here anymore. So I think, not even LinkageError would occur here... but somewhere else....", "url": "https://github.com/pmd/pmd/pull/2920#discussion_r528580667", "createdAt": "2020-11-23T09:52:39Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinition.java", "diffHunk": "@@ -52,33 +51,22 @@ public static JavaTypeDefinition forClass(TypeDefinitionType type, JavaTypeDefin\n         }\n     }\n \n+    public static JavaTypeDefinition forClass(final Class<?> clazz) {\n+        return clazz == Object.class ? JavaTypeDefinitionSimple.OBJECT_DEFINITION\n+                                     : forClass(clazz, NO_GENERICS); // very common\n+\n+    }\n+\n     public static JavaTypeDefinition forClass(final Class<?> clazz, JavaTypeDefinition... boundGenerics) {\n         if (clazz == null) {\n             return null;\n         }\n \n-        // deal with generic types\n-        if (boundGenerics.length != 0) {\n-            // With generics there is no cache\n-            return new JavaTypeDefinitionSimple(clazz, boundGenerics);\n-        }\n-\n-        final JavaTypeDefinition typeDef = CLASS_EXACT_TYPE_DEF_CACHE.get(clazz);\n-\n-        if (typeDef != null) {\n-            return typeDef;\n-        }\n-\n-        final JavaTypeDefinition newDef;\n         try {\n-            newDef = new JavaTypeDefinitionSimple(clazz);\n-        } catch (final NoClassDefFoundError e) {\n+            return new JavaTypeDefinitionSimple(clazz, boundGenerics);\n+        } catch (final LinkageError e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3MDM5Nw=="}, "originalCommit": {"oid": "b70462b79a5595c6921dc13a4c66517964ee52bb"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MTA2Ng==", "bodyText": "I think, this method might throw LinkageError when loading the interfaces or superclass.", "url": "https://github.com/pmd/pmd/pull/2920#discussion_r528581066", "createdAt": "2020-11-23T09:53:19Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinitionSimple.java", "diffHunk": "@@ -26,21 +26,38 @@\n \n \n /* default */ class JavaTypeDefinitionSimple extends JavaTypeDefinition {\n+\n+    static final JavaTypeDefinitionSimple OBJECT_DEFINITION = new JavaTypeDefinitionSimple(Object.class);\n     private final Class<?> clazz;\n-    private final JavaTypeDefinition[] genericArgs;\n+    private JavaTypeDefinition[] genericArgs;\n     // cached because calling clazz.getTypeParameters().length create a new array every time\n-    private final int typeParameterCount;\n-    private final boolean isGeneric;\n-    private final boolean isRawType;\n-    private final JavaTypeDefinition enclosingClass;\n+    private int typeParameterCount = -1;\n+    private final int typeArgumentCount;\n \n     private static final Logger LOG = Logger.getLogger(JavaTypeDefinitionSimple.class.getName());\n-    private static final JavaTypeDefinition[] NO_GENERICS = {};\n \n     protected JavaTypeDefinitionSimple(Class<?> clazz, JavaTypeDefinition... boundGenerics) {\n         super(EXACT);\n         this.clazz = clazz;\n \n+        typeArgumentCount = boundGenerics.length;\n+        if (boundGenerics.length > 0) {\n+            genericArgs = Arrays.copyOf(boundGenerics, boundGenerics.length);\n+        } // otherwise stays null\n+    }\n+\n+    private Class<?> loadEnclosing(Class<?> clazz) {\n+        try {\n+            return clazz.getEnclosingClass();\n+        } catch (LinkageError e) {\n+            if (LOG.isLoggable(Level.WARNING)) {\n+                LOG.log(Level.WARNING, \"Could not load enclosing class of \" + clazz.getName() + \", due to: \" + e);\n+            }\n+            return null;\n+        }\n+    }\n+\n+    private TypeVariable<?>[] getTypeParameters(Class<?> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70462b79a5595c6921dc13a4c66517964ee52bb"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MjE2MQ==", "bodyText": "I think, we should add here a try-catch for LinkageError. In case, we couldn't determine the type parameters, can we then set typeParametersCount=0 ?", "url": "https://github.com/pmd/pmd/pull/2920#discussion_r528582161", "createdAt": "2020-11-23T09:54:57Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinitionSimple.java", "diffHunk": "@@ -83,12 +80,25 @@ protected JavaTypeDefinitionSimple(Class<?> clazz, JavaTypeDefinition... boundGe\n \n     @Override\n     public JavaTypeDefinition getEnclosingClass() {\n-        return enclosingClass;\n+        return JavaTypeDefinition.forClass(loadEnclosing(clazz));\n+    }\n+\n+    @Override\n+    public boolean isRawType() {\n+        return isGeneric() && typeArgumentCount == 0;\n     }\n \n     @Override\n     public boolean isGeneric() {\n-        return isGeneric;\n+        return getTypeParameterCount() != 0;\n+    }\n+\n+    @Override\n+    public int getTypeParameterCount() {\n+        if (typeParameterCount == -1) {\n+            typeParameterCount = getTypeParameters(clazz).length;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70462b79a5595c6921dc13a4c66517964ee52bb"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5bcdb328a46ea253005f7ea15150f06f82ce715", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/a5bcdb328a46ea253005f7ea15150f06f82ce715", "committedDate": "2020-11-23T13:37:17Z", "message": "Merge branch 'master' into issue-2911-class-leak"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9aaae814c482e9261b64545670df0e81b5dd5020", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/9aaae814c482e9261b64545670df0e81b5dd5020", "committedDate": "2020-11-23T13:40:32Z", "message": "Handle TNPE and LinkageE when loading type params"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NTIzMzc1", "url": "https://github.com/pmd/pmd/pull/2920#pullrequestreview-536523375", "createdAt": "2020-11-23T14:29:29Z", "commit": {"oid": "9aaae814c482e9261b64545670df0e81b5dd5020"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4583, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}