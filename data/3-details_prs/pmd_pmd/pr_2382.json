{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NzM3OTE4", "number": 2382, "title": "[core] Saxon rulechain excludes for path expressions", "bodyText": "Before submitting a PR, please check that:\n\n The PR is submitted against master. The PMD team will merge back to support branches as needed.\n ./mvnw clean verify passes. This will build and test PMD, execute PMD and checkstyle rules. Check this for more info\n\nPR Description:\nThis doesn't optimize rules that use a separate unbounded path expression. It assumes, that Saxon has factored it out already into a own let/lazyexpression. In that case, if any path expression in such a lazy expression is found, rule chain is not used.\nThis fixes the performance issues found in #2377", "createdAt": "2020-03-27T12:55:41Z", "url": "https://github.com/pmd/pmd/pull/2382", "merged": true, "mergeCommit": {"oid": "b308cc12c68421e74679ef46792e114308cb1643"}, "closed": true, "closedAt": "2020-03-28T14:08:49Z", "author": {"login": "adangel"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRvbvbAH2gAyMzk0NzM3OTE4OmEwZTFlNDBiY2I3NTc2MmQ1OGJiOGRhN2M3ZTA3ZDE2ZTkxOTBkNmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSF3jBgFqTM4MzMxNTk3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a0e1e40bcb75762d58bb8da7c7e07d16e9190d6e", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/a0e1e40bcb75762d58bb8da7c7e07d16e9190d6e", "committedDate": "2020-03-27T11:58:38Z", "message": "[core] saxon rulechain: don't use rule chain for other path expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ffe160f12fcef076265e73eb2a3eea899bf78c9", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/8ffe160f12fcef076265e73eb2a3eea899bf78c9", "committedDate": "2020-03-27T12:35:51Z", "message": "[core] saxon rulechain: consider boolean expr"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTU1Mzc4", "url": "https://github.com/pmd/pmd/pull/2382#pullrequestreview-382955378", "createdAt": "2020-03-27T15:20:20Z", "commit": {"oid": "8ffe160f12fcef076265e73eb2a3eea899bf78c9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNToyMDoyMFrOF8165A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNToyNDoyM1rOF82GVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM0MjMwOA==", "bodyText": "I'm only mentioning this, because this kind of pattern is common in the parser (maybe it's not relevant here). In the parser when we have an attribute like \"inInterface\", which must be true inside of some context, then it's usually necessary to save the previous state and restore it. Like\nboolean prevCtx = insideLazyExpression;\ninsideLazyExpression = true;\nExpression result = super.visit(e);\ninsideLazyExpression = prevCtx;\nOtherwise you risk overwriting the \"true\" value if the bit was already set when entering the method.\nNow I don't know if nested lazy expressions are a thing in the saxon expression tree, but this may be a bug that comes up later to bite us", "url": "https://github.com/pmd/pmd/pull/2382#discussion_r399342308", "createdAt": "2020-03-27T15:20:20Z", "author": {"login": "oowekyala"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/xpath/internal/RuleChainAnalyzer.java", "diffHunk": "@@ -96,6 +105,14 @@ public Expression visit(AxisExpression e) {\n         return super.visit(e);\n     }\n \n+    @Override\n+    public Expression visit(LazyExpression e) {\n+        insideLazyExpression = true;\n+        Expression result = super.visit(e);\n+        insideLazyExpression = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ffe160f12fcef076265e73eb2a3eea899bf78c9"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM0NTIzNw==", "bodyText": "Just fyi, I think it would be nice if this class had a more descriptive name, eg SaxonExprVisitor or something. I'll change the name when merging unless you disagree", "url": "https://github.com/pmd/pmd/pull/2382#discussion_r399345237", "createdAt": "2020-03-27T15:24:23Z", "author": {"login": "oowekyala"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/xpath/internal/Visitor.java", "diffHunk": "@@ -5,8 +5,10 @@\n package net.sourceforge.pmd.lang.rule.xpath.internal;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ffe160f12fcef076265e73eb2a3eea899bf78c9"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "263c6e0d091cc9e0f292b538e51ebdcf83dbc6c6", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/263c6e0d091cc9e0f292b538e51ebdcf83dbc6c6", "committedDate": "2020-03-27T16:46:07Z", "message": "[core] Apply PR review suggestions, refs #2382"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzE1OTcw", "url": "https://github.com/pmd/pmd/pull/2382#pullrequestreview-383315970", "createdAt": "2020-03-28T14:06:55Z", "commit": {"oid": "263c6e0d091cc9e0f292b538e51ebdcf83dbc6c6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4735, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}