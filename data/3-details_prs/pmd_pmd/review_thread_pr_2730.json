{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMzkzMTkz", "number": 2730, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODoyMzo0N1rOEbsNeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMjo0ODowOVrOEcjwlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDcxMzUyOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/TextColorRenderer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODoyMzo0N1rOHFxJwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxOTowODozM1rOHFynVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMDI0MA==", "bodyText": "This line is way too long", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r475810240", "createdAt": "2020-08-24T18:23:47Z", "author": {"login": "oowekyala"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/TextColorRenderer.java", "diffHunk": "@@ -125,17 +125,12 @@ public void end() throws IOException {\n             String nextFile = determineFileName(rv.getFilename());\n             if (!nextFile.equals(lastFile)) {\n                 lastFile = nextFile;\n-                buf.append(this.yellowBold + \"*\" + this.colorReset + \" file: \" + this.whiteBold\n-                        + this.getRelativePath(lastFile) + this.colorReset + PMD.EOL);\n+                buf.append(this.yellowBold).append(\"*\").append(this.colorReset).append(\" file: \").append(this.whiteBold).append(this.getRelativePath(lastFile)).append(this.colorReset).append(PMD.EOL);\n             }\n-            buf.append(\n-                    this.green + \"    src:  \" + this.cyan + lastFile.substring(lastFile.lastIndexOf(File.separator) + 1)\n-                            + this.colorReset + \":\" + this.cyan + rv.getBeginLine()\n-                            + (rv.getEndLine() == -1 ? \"\" : \":\" + rv.getEndLine()) + this.colorReset + PMD.EOL);\n-            buf.append(this.green + \"    rule: \" + this.colorReset + rv.getRule().getName() + PMD.EOL);\n-            buf.append(this.green + \"    msg:  \" + this.colorReset + rv.getDescription() + PMD.EOL);\n-            buf.append(this.green + \"    code: \" + this.colorReset + this.getLine(lastFile, rv.getBeginLine()) + PMD.EOL\n-                    + PMD.EOL);\n+            buf.append(this.green).append(\"    src:  \").append(this.cyan).append(lastFile.substring(lastFile.lastIndexOf(File.separator) + 1)).append(this.colorReset).append(\":\").append(this.cyan).append(rv.getBeginLine()).append(rv.getEndLine() == -1 ? \"\" : \":\" + rv.getEndLine()).append(this.colorReset).append(PMD.EOL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53ab816e4f7a506d8a357cd98ad0b782c1166629"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgzNDE5Nw==", "bodyText": "@oowekyala line splited.", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r475834197", "createdAt": "2020-08-24T19:08:33Z", "author": {"login": "XenoAmess"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/TextColorRenderer.java", "diffHunk": "@@ -125,17 +125,12 @@ public void end() throws IOException {\n             String nextFile = determineFileName(rv.getFilename());\n             if (!nextFile.equals(lastFile)) {\n                 lastFile = nextFile;\n-                buf.append(this.yellowBold + \"*\" + this.colorReset + \" file: \" + this.whiteBold\n-                        + this.getRelativePath(lastFile) + this.colorReset + PMD.EOL);\n+                buf.append(this.yellowBold).append(\"*\").append(this.colorReset).append(\" file: \").append(this.whiteBold).append(this.getRelativePath(lastFile)).append(this.colorReset).append(PMD.EOL);\n             }\n-            buf.append(\n-                    this.green + \"    src:  \" + this.cyan + lastFile.substring(lastFile.lastIndexOf(File.separator) + 1)\n-                            + this.colorReset + \":\" + this.cyan + rv.getBeginLine()\n-                            + (rv.getEndLine() == -1 ? \"\" : \":\" + rv.getEndLine()) + this.colorReset + PMD.EOL);\n-            buf.append(this.green + \"    rule: \" + this.colorReset + rv.getRule().getName() + PMD.EOL);\n-            buf.append(this.green + \"    msg:  \" + this.colorReset + rv.getDescription() + PMD.EOL);\n-            buf.append(this.green + \"    code: \" + this.colorReset + this.getLine(lastFile, rv.getBeginLine()) + PMD.EOL\n-                    + PMD.EOL);\n+            buf.append(this.green).append(\"    src:  \").append(this.cyan).append(lastFile.substring(lastFile.lastIndexOf(File.separator) + 1)).append(this.colorReset).append(\":\").append(this.cyan).append(rv.getBeginLine()).append(rv.getEndLine() == -1 ? \"\" : \":\" + rv.getEndLine()).append(this.colorReset).append(PMD.EOL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMDI0MA=="}, "originalCommit": {"oid": "53ab816e4f7a506d8a357cd98ad0b782c1166629"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDcxNTM3OnYy", "diffSide": "RIGHT", "path": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/AccessNodeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODoyNDoyNVrOHFxLAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxOTowODowOVrOHFymeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMDU2MA==", "bodyText": "Please don't edit this file as it has been removed in another branch", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r475810560", "createdAt": "2020-08-24T18:24:25Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/AccessNodeTest.java", "diffHunk": "@@ -139,9 +139,9 @@ public void testPackagePrivate() {\n \n \n     private static String makeAccessJavaCode(String[] access, String declRest) {\n-        String result = \"public class Test { \";\n+        StringBuilder result = new StringBuilder(\"public class Test { \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53ab816e4f7a506d8a357cd98ad0b782c1166629"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgzMzk3OA==", "bodyText": "@oowekyala reverted&rebased", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r475833978", "createdAt": "2020-08-24T19:08:09Z", "author": {"login": "XenoAmess"}, "path": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/AccessNodeTest.java", "diffHunk": "@@ -139,9 +139,9 @@ public void testPackagePrivate() {\n \n \n     private static String makeAccessJavaCode(String[] access, String declRest) {\n-        String result = \"public class Test { \";\n+        StringBuilder result = new StringBuilder(\"public class Test { \");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMDU2MA=="}, "originalCommit": {"oid": "53ab816e4f7a506d8a357cd98ad0b782c1166629"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDcxNzk2OnYy", "diffSide": "RIGHT", "path": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/TokenMgrError.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODoyNTowNlrOHFxMpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxOTowODoyMFrOHFym4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMDk4MA==", "bodyText": "Please don't edit this file as it has been removed in another branch", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r475810980", "createdAt": "2020-08-24T18:25:06Z", "author": {"login": "oowekyala"}, "path": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/TokenMgrError.java", "diffHunk": "@@ -101,7 +101,7 @@ protected static final String addEscapes(final String str) {\n                 ch = str.charAt(i);\n                 if (ch < 0x20 || ch > 0x7e) {\n                     final String s = \"0000\" + Integer.toString(ch, 16);\n-                    retval.append(\"\\\\u\" + s.substring(s.length() - 4, s.length()));\n+                    retval.append(\"\\\\u\").append(s.substring(s.length() - 4, s.length()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53ab816e4f7a506d8a357cd98ad0b782c1166629"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgzNDA4MA==", "bodyText": "@oowekyala reverted&rebased", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r475834080", "createdAt": "2020-08-24T19:08:20Z", "author": {"login": "XenoAmess"}, "path": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/TokenMgrError.java", "diffHunk": "@@ -101,7 +101,7 @@ protected static final String addEscapes(final String str) {\n                 ch = str.charAt(i);\n                 if (ch < 0x20 || ch > 0x7e) {\n                     final String s = \"0000\" + Integer.toString(ch, 16);\n-                    retval.append(\"\\\\u\" + s.substring(s.length() - 4, s.length()));\n+                    retval.append(\"\\\\u\").append(s.substring(s.length() - 4, s.length()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMDk4MA=="}, "originalCommit": {"oid": "53ab816e4f7a506d8a357cd98ad0b782c1166629"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDcyMjI5OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/CodeClimateRenderer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODoyNjoyNlrOHFxPeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxOTowODo1M1rOHFyoEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMTcwNQ==", "bodyText": "This stringbuilder uses a concatenation as an argument", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r475811705", "createdAt": "2020-08-24T18:26:26Z", "author": {"login": "oowekyala"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/CodeClimateRenderer.java", "diffHunk": "@@ -145,27 +145,27 @@ private int getRemediationPoints() {\n     }\n \n     private <T> String getBody() {\n-        String result = \"## \" + rule.getName() + \"\\\\n\\\\n\" + \"Since: PMD \" + rule.getSince() + \"\\\\n\\\\n\" + \"Priority: \"\n-            + rule.getPriority() + \"\\\\n\\\\n\"\n-            + \"[Categories](https://github.com/codeclimate/platform/blob/master/spec/analyzers/SPEC.md#categories): \"\n-            + Arrays.toString(getCategories()).replaceAll(\"[\\\\[\\\\]]\", \"\") + \"\\\\n\\\\n\"\n-            + \"[Remediation Points](https://github.com/codeclimate/platform/blob/master/spec/analyzers/SPEC.md#remediation-points): \"\n-            + getRemediationPoints() + \"\\\\n\\\\n\" + cleaned(rule.getDescription());\n+        StringBuilder result = new StringBuilder(\"## \" + rule.getName() + \"\\\\n\\\\n\" + \"Since: PMD \" + rule.getSince() + \"\\\\n\\\\n\" + \"Priority: \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53ab816e4f7a506d8a357cd98ad0b782c1166629"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgzNDM4Nw==", "bodyText": "@oowekyala my bad. re-done&rebased.", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r475834387", "createdAt": "2020-08-24T19:08:53Z", "author": {"login": "XenoAmess"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/CodeClimateRenderer.java", "diffHunk": "@@ -145,27 +145,27 @@ private int getRemediationPoints() {\n     }\n \n     private <T> String getBody() {\n-        String result = \"## \" + rule.getName() + \"\\\\n\\\\n\" + \"Since: PMD \" + rule.getSince() + \"\\\\n\\\\n\" + \"Priority: \"\n-            + rule.getPriority() + \"\\\\n\\\\n\"\n-            + \"[Categories](https://github.com/codeclimate/platform/blob/master/spec/analyzers/SPEC.md#categories): \"\n-            + Arrays.toString(getCategories()).replaceAll(\"[\\\\[\\\\]]\", \"\") + \"\\\\n\\\\n\"\n-            + \"[Remediation Points](https://github.com/codeclimate/platform/blob/master/spec/analyzers/SPEC.md#remediation-points): \"\n-            + getRemediationPoints() + \"\\\\n\\\\n\" + cleaned(rule.getDescription());\n+        StringBuilder result = new StringBuilder(\"## \" + rule.getName() + \"\\\\n\\\\n\" + \"Since: PMD \" + rule.getSince() + \"\\\\n\\\\n\" + \"Priority: \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMTcwNQ=="}, "originalCommit": {"oid": "53ab816e4f7a506d8a357cd98ad0b782c1166629"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzgxNDYwOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/cli/PMDCommandLineInterface.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMjo0ODowOVrOHHKcFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMzoxMDozNlrOHHLUGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI3MzExMQ==", "bodyText": "@XenoAmess This introduces a NPE.", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r477273111", "createdAt": "2020-08-26T12:48:09Z", "author": {"login": "tweimer"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/cli/PMDCommandLineInterface.java", "diffHunk": "@@ -60,10 +60,10 @@ public static String buildUsageText() {\n     public static String buildUsageText(JCommander jcommander) {\n         StringBuilder usage = new StringBuilder();\n \n-        String allCommandsDescription = null;\n+        StringBuilder allCommandsDescription = null;\n         if (jcommander != null && jcommander.getCommands() != null) {\n             for (String command : jcommander.getCommands().keySet()) {\n-                allCommandsDescription += jcommander.getCommandDescription(command) + PMD.EOL;\n+                allCommandsDescription.append(jcommander.getCommandDescription(command)).append(PMD.EOL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f53f892f6f6fd1f54a206147bc48018285d46d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI4NDMyMA==", "bodyText": "@tweimer\nmy bad.\nbtw: is this funtion covered by any test?\nAnd is there any, coverage report for this repo?", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r477284320", "createdAt": "2020-08-26T13:05:42Z", "author": {"login": "XenoAmess"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/cli/PMDCommandLineInterface.java", "diffHunk": "@@ -60,10 +60,10 @@ public static String buildUsageText() {\n     public static String buildUsageText(JCommander jcommander) {\n         StringBuilder usage = new StringBuilder();\n \n-        String allCommandsDescription = null;\n+        StringBuilder allCommandsDescription = null;\n         if (jcommander != null && jcommander.getCommands() != null) {\n             for (String command : jcommander.getCommands().keySet()) {\n-                allCommandsDescription += jcommander.getCommandDescription(command) + PMD.EOL;\n+                allCommandsDescription.append(jcommander.getCommandDescription(command)).append(PMD.EOL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI3MzExMQ=="}, "originalCommit": {"oid": "90f53f892f6f6fd1f54a206147bc48018285d46d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI4NzQ0OQ==", "bodyText": "@XenoAmess This introduces a NPE.\n\n@tweimer fixed in #2745.", "url": "https://github.com/pmd/pmd/pull/2730#discussion_r477287449", "createdAt": "2020-08-26T13:10:36Z", "author": {"login": "XenoAmess"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/cli/PMDCommandLineInterface.java", "diffHunk": "@@ -60,10 +60,10 @@ public static String buildUsageText() {\n     public static String buildUsageText(JCommander jcommander) {\n         StringBuilder usage = new StringBuilder();\n \n-        String allCommandsDescription = null;\n+        StringBuilder allCommandsDescription = null;\n         if (jcommander != null && jcommander.getCommands() != null) {\n             for (String command : jcommander.getCommands().keySet()) {\n-                allCommandsDescription += jcommander.getCommandDescription(command) + PMD.EOL;\n+                allCommandsDescription.append(jcommander.getCommandDescription(command)).append(PMD.EOL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI3MzExMQ=="}, "originalCommit": {"oid": "90f53f892f6f6fd1f54a206147bc48018285d46d"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 310, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}