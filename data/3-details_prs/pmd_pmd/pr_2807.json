{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MzM4MzA4", "number": 2807, "title": "[core] Pmd7 test cleanups", "bodyText": "Describe the PR\nCleanup tests by introducing new utilities, like BaseParsingHelper#executeRule(Rule,String) -> Report. This removes a lot of usage sites of RuleContext, and prepares further refactoring of this object.\nThis also makes many places in the violation reporting codebase more defensive in requiring their parameters be non-null. Many tests build dysfunctional violations by passing a null node or null file name or whatnot, so these needed to be cleaned up.\nParametricRuleViolation is changed to not require a rule context, but instead a file name. This removes a lot of places where we create a rule context just to set the filename or the language version. The RuleViolationFactory interface is also changed, to only require an implementation of createViolation and suppressOrNull.\nThe longer-term idea, is to expunge RuleContext of all state, by moving getSourceCodeFile and getLanguageVersion onto the Node interface. Given that, RuleContext doesn't need to store this state, and so has no purpose anymore. I think, we can repurpose it to be the API for rules to report violations. It would basically have the overloads of addViolation that AbstractRule has for now, but clearer. In the end, the idea is for rules to have type-safe access to a RuleContext and report violations directly on it instead of using AbstractRule#addViolation(Object, ...).\nRelated issues\n\n\nFixes #\n\nReady?\n\n\n Added unit tests for fixed bug/feature\n Passing all unit tests\n Complete build ./mvnw clean verify passes (checked automatically by travis)\n Added (in-code) documentation (if needed)", "createdAt": "2020-09-28T18:55:29Z", "url": "https://github.com/pmd/pmd/pull/2807", "merged": true, "mergeCommit": {"oid": "4dee15c8c363d01de12f8232185e6c5e2769d0d9"}, "closed": true, "closedAt": "2020-10-17T16:16:39Z", "author": {"login": "oowekyala"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNWmysAH2gAyNDk0MzM4MzA4OmQyNWM2NjEzN2I0M2QyZjk1NmY5NDc4OTU0NzkxNzI5ODMxMGI1N2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVCN2bgFqTUxNDcxMTY5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d25c66137b43d2f956f94789547917298310b57e", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/d25c66137b43d2f956f94789547917298310b57e", "committedDate": "2020-09-28T16:58:32Z", "message": "Extract some test cleanups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05602452981517fc2ebdc02e7a0875535763606c", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/05602452981517fc2ebdc02e7a0875535763606c", "committedDate": "2020-09-28T17:32:54Z", "message": "Refactor DefaultRVFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c59de5d5277b23abb763f821de1e6b1f9d9a67a", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/5c59de5d5277b23abb763f821de1e6b1f9d9a67a", "committedDate": "2020-09-28T17:46:34Z", "message": "Checkout changes to test utils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f4c48c00a3a614a8f9a5a5bb8546c47b9f1a706", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/8f4c48c00a3a614a8f9a5a5bb8546c47b9f1a706", "committedDate": "2020-09-28T17:49:33Z", "message": "Require non null suppress marker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "020fa899d515697f6383d1d53d399beda5352015", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/020fa899d515697f6383d1d53d399beda5352015", "committedDate": "2020-09-28T18:12:04Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c047b0e3e55999ea9aab0b4317cc1c976a93d60", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/5c047b0e3e55999ea9aab0b4317cc1c976a93d60", "committedDate": "2020-09-28T18:20:32Z", "message": "Fix java tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3d2591a80a4b642eaf5b364eacc6356b82bf21b", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/f3d2591a80a4b642eaf5b364eacc6356b82bf21b", "committedDate": "2020-09-28T18:37:30Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64e8dc66bcab38ae3cb852b57ba422988a1fb5bc", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/64e8dc66bcab38ae3cb852b57ba422988a1fb5bc", "committedDate": "2020-09-28T18:40:05Z", "message": "Be more defensive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afb3a9e387959d059af8cd52fe1d966922d30082", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/afb3a9e387959d059af8cd52fe1d966922d30082", "committedDate": "2020-09-28T19:05:29Z", "message": "Fix js tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1089da7da2ea38e8551f70bfda9bc267b4fd5dbc", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/1089da7da2ea38e8551f70bfda9bc267b4fd5dbc", "committedDate": "2020-09-30T11:21:02Z", "message": "Hide most methods of RuleTst\n\nThe supported API is now just the junit integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36d6896221a3caa70da0bbabe2ef96f267ece519", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/36d6896221a3caa70da0bbabe2ef96f267ece519", "committedDate": "2020-10-17T14:28:39Z", "message": "Merge branch '7.0.x' into pmd7-test-cleanups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/649ad9975519da276a33840a29ce446f7dc46483", "committedDate": "2020-10-17T14:37:04Z", "message": "Remove some changes to RuleTst"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NzExNjk3", "url": "https://github.com/pmd/pmd/pull/2807#pullrequestreview-514711697", "createdAt": "2020-10-22T13:14:58Z", "commit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzoxNDo1OFrOHmhKig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzozODoxOVrOHmiNqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE1MTMwNg==", "bodyText": "Deprecated or DeprecatedUntil700?\nIf deprecated, we need to merge this back to master -> API change...", "url": "https://github.com/pmd/pmd/pull/2807#discussion_r510151306", "createdAt": "2020-10-22T13:14:58Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/ParametricRuleViolation.java", "diffHunk": "@@ -34,26 +35,39 @@\n     // RuleViolationFactory to support identifying without a Node, and update\n     // Rule base classes too.\n     // TODO we never need a node. We just have to have a \"position\", ie line/column, or offset, + file, whatever\n+\n+    /**\n+     * @deprecated Use {@link #ParametricRuleViolation(Rule, String, Node, String)}\n+     */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE1NDMzNQ==", "bodyText": "I think, we don't need a null check here anymore, do we?", "url": "https://github.com/pmd/pmd/pull/2807#discussion_r510154335", "createdAt": "2020-10-22T13:19:09Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ParserOptions.java", "diffHunk": "@@ -30,11 +37,11 @@ public boolean equals(Object obj) {\n             return false;\n         }\n         final ParserOptions that = (ParserOptions) obj;\n-        return this.suppressMarker.equals(that.suppressMarker);\n+        return this.getSuppressMarker().equals(that.getSuppressMarker());\n     }\n \n     @Override\n     public int hashCode() {\n-        return suppressMarker != null ? suppressMarker.hashCode() : 0;\n+        return getSuppressMarker() != null ? getSuppressMarker().hashCode() : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE1NjQ4NA==", "bodyText": "ruleContext.getSourceCodeFilename() only returns the simple name. We need to use here String.valueOf(ruleContext.getSourceCodeFile()). I'll fix that on pmd/7.0.x and add a unit test (hopefully not forgetting that there is also windows...)", "url": "https://github.com/pmd/pmd/pull/2807#discussion_r510156484", "createdAt": "2020-10-22T13:21:59Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/RuleViolationFactory.java", "diffHunk": "@@ -34,8 +44,43 @@\n      * @param args\n      *            arguments to embed in the rule violation message\n      */\n-    void addViolation(RuleContext ruleContext, Rule rule, @Nullable Node node, String message, Object[] args);\n+    @Deprecated\n+    default void addViolation(RuleContext ruleContext, Rule rule, @NonNull Node node, @NonNull String message, Object[] args) {\n+        addViolation(ruleContext, rule, node, message, node.getBeginLine(), node.getEndLine(), args);\n+    }\n+\n+\n+    @Deprecated\n+    default void addViolation(RuleContext ruleContext, Rule rule, @NonNull Node node, @NonNull String message, int beginLine, int endLine, @NonNull Object[] args) {\n+        Objects.requireNonNull(node);\n+        Objects.requireNonNull(message);\n+        Objects.requireNonNull(args);\n+        RuleViolation rv = formatViolation(rule, node, ruleContext.getSourceCodeFilename(), message, args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE1NzQ2NQ==", "bodyText": "Probably DeprecatedUntil700 as well?", "url": "https://github.com/pmd/pmd/pull/2807#discussion_r510157465", "createdAt": "2020-10-22T13:23:23Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/RuleViolationFactory.java", "diffHunk": "@@ -34,8 +44,43 @@\n      * @param args\n      *            arguments to embed in the rule violation message\n      */\n-    void addViolation(RuleContext ruleContext, Rule rule, @Nullable Node node, String message, Object[] args);\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE2ODQ4OQ==", "bodyText": "I think, we should deprecate this field on master...", "url": "https://github.com/pmd/pmd/pull/2807#discussion_r510168489", "createdAt": "2020-10-22T13:38:19Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ParserOptions.java", "diffHunk": "@@ -4,20 +4,27 @@\n \n package net.sourceforge.pmd.lang;\n \n+import java.util.Objects;\n+\n+import org.checkerframework.checker.nullness.qual.NonNull;\n+\n+import net.sourceforge.pmd.PMD;\n+\n /**\n  * Represents a set of configuration options for a {@link Parser}. For each\n  * unique combination of ParserOptions a Parser will be used to create an AST.\n  * Therefore, implementations must implement {@link Object#equals(Object)} and\n  * {@link Object#hashCode()}.\n  */\n public class ParserOptions {\n-    protected String suppressMarker;\n+    private String suppressMarker = PMD.SUPPRESS_MARKER;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4533, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}