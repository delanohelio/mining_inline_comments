{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MDUxMzE4", "number": 2259, "title": "[java] Rework AccessNode", "bodyText": "Introduce an enum to represent modifiers (JModifier)\nIntroduce a ModifierList node, that ranges over the modifiers of a declaration (including annotations). This has methods to query which JModifiers were present, and which are here implicitly.\nDeclarations always have a ModifierList as a child, even if no explicit modifiers are mentioned. The node is implicit in these cases, which is why this PR needed #2211\nThis allows removing the methods isSyntactically* on ASTFieldDeclaration, ASTMethodDeclaration, which were inconsistent and don't account for all modifiers. Now you can just call eg node.hasExplicitModifier(JModifier.PUBLIC). Things like field.isInterfaceMember() can be replaced with field.getEnclosingType().isInterface().\nThis also makes AccessNode trivial to implement, so we can remove some base classes. ASTAnonymousClassDeclaration can also finally extend AbstractAnyTypeDeclaration, which fixes #905 for good\n\nThe implementation of AST-based symbols depends on this PR.", "createdAt": "2020-01-28T14:41:28Z", "url": "https://github.com/pmd/pmd/pull/2259", "merged": true, "mergeCommit": {"oid": "e3200a8ecba14775c07364a71d4b8aecce12854d"}, "closed": true, "closedAt": "2020-02-07T13:36:52Z", "author": {"login": "oowekyala"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-yNm4gH2gAyMzY4MDUxMzE4OjMxOTFlZjM2MGRhZDk0OGZmZWI3YjY1YzljMGQ0NWRmYTNiY2M0MGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_xVepAFqTM1MTU5NTcyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3191ef360dad948ffeb7b65c9c0d45dfa3bcc40c", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/3191ef360dad948ffeb7b65c9c0d45dfa3bcc40c", "committedDate": "2020-01-28T14:28:21Z", "message": "Rework AccessNode\n\nIntroduce a ModifierList node, that ranges\n over the modifiers of a declaration (including\nannotations).\n\nThis is a combination of a few old commits:\n\nFigure out modifiers\n\nFix tests\n\nRemove AccessTypeNode\n\nDocument\n\nRemove specific methods\n\nFix symboltable test\n\nFix tests\n\nRename to JModifier\n\nFix copypaste default/abstract\n\nImprove doc\n\nTest anon classes\n\nRemove useless impl\n\nStatic modifier should not be present on toplevel classes\n\nSimplify impl\n\nAdd visibility enum\n\nPort some tests\n\nFix test ranges\n\nFix modifier ordering\n\nCleanup\n\nFix unnecessary modifier rule\n\nRename to use plural\n\nImprove visibility doc\n\nSimplify some things\n\nCheckstyle\n\nRemove some usages of typekind\n\nFix missing import\n\nRemove irrelevant method\n\nREmove some duplication\n\nReplace AccessNode with ModifierOwner\n\nRename to AccessNode to reduce diff\n\nRemove changes to rules\n\nAdd convenience methods\n\nMake VariableDeclaratorId a ModifierOwner\n\nFix variable name decl\n\nMake enum constant an implicit AccessNode\n\nFix compil\n\nCheckstyle\n\nCleanup\n\nDeprecate TypeKind\n\nCleanup\n\nRemove TypeKind\n\nRevert \"Remove TypeKind\"\n\nThis reverts commit 222c169c3401a01507726f339ae9f9b2b20dc69a.\n\nFix doc\n\nFix UnnecessaryModifierRule\n\nUse special node instead of ModifierSet\n\nRemove useless tests\n\nFix tests WIP\n\nWork should be resumed when #2211 is merged into java-grammar\n\nFix some tests\n\nDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "147a0981414f312023e91327b2a5a76744f96fca", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/147a0981414f312023e91327b2a5a76744f96fca", "committedDate": "2020-01-28T14:36:48Z", "message": "Remove TypeKind"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1b6048d60d74e6104a85305fdab078195f6063d", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/a1b6048d60d74e6104a85305fdab078195f6063d", "committedDate": "2020-01-28T15:06:13Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3200a8ecba14775c07364a71d4b8aecce12854d", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/e3200a8ecba14775c07364a71d4b8aecce12854d", "committedDate": "2020-01-28T15:30:02Z", "message": "Make scala end-column exclusive\n\nJavacc nodes now use this convention,\nand since this PR updates the test\nmodule to take implicit nodes into\naccount, the scala module needs to\nbe ported too.\n\nRefs #2021"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNTk1NzI1", "url": "https://github.com/pmd/pmd/pull/2259#pullrequestreview-351595725", "createdAt": "2020-01-31T15:48:17Z", "commit": {"oid": "e3200a8ecba14775c07364a71d4b8aecce12854d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNTo0ODoxN1rOFkPh4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNTo0ODoxN1rOFkPh4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0NzQ4OA==", "bodyText": "Is there anything we can provide on master? The methods isSyntactically* will be gone, but deprecation doesn't make sense IMHO unless we can tell, what to do instead....", "url": "https://github.com/pmd/pmd/pull/2259#discussion_r373547488", "createdAt": "2020-01-31T15:48:17Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration.java", "diffHunk": "@@ -55,86 +45,6 @@ public Object jjtAccept(JavaParserVisitor visitor, Object data) {\n         visitor.visit(this, data);\n     }\n \n-\n-    public boolean isSyntacticallyPublic() {\n-        return super.isPublic();\n-    }\n-\n-    @Override\n-    public boolean isPublic() {\n-        if (isAnnotationMember() || isInterfaceMember()) {\n-            return true;\n-        }\n-        return super.isPublic();\n-    }\n-\n-    public boolean isSyntacticallyStatic() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3200a8ecba14775c07364a71d4b8aecce12854d"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4863, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}