{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMzAxMTQ0", "number": 2405, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjo1OTo0NFrODx8Gxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzowOTo0OVrODx8SAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjkxNTkwOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/Node.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjo1OTo0NFrOGFsRSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToxNjoxNlrOGF-tHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyMTM4Nw==", "bodyText": "I'm just wondering: In the above Node methods, we use the type parameter \"T\", here we use \"R\". For the sake of not surprising any users of the API - we should use the same. Here at least, it has exactly the same meaning (R/T extends Node). We could even settle with \"N\" as in \"Node\" for all methods in Node... N extends Node. Wdyt?\nUpdate: I see now, where this comes from: from NodeStream. Don't know, what's easier to grasp here...", "url": "https://github.com/pmd/pmd/pull/2405#discussion_r408621387", "createdAt": "2020-04-15T06:59:44Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/Node.java", "diffHunk": "@@ -651,7 +648,7 @@ default void removeChildAtIndex(int childIndex) {\n      *\n      * @see NodeStream#children(Class)\n      */\n-    default <R extends Node> NodeStream<R> children(Class<R> rClass) {\n+    default <R extends Node> NodeStream<R> children(Class<? extends R> rClass) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50b708ac5f4e45e66d3425fce97fc42638eaeb45"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyMzQyMQ==", "bodyText": "Maybe we could use R for all methods in Node? Those would be aligned with those in NodeStream then. I think more \"semantic\" names might be easier to grasp (R for Ts that are in a return type, maybe change NodeStream's type param T into N).", "url": "https://github.com/pmd/pmd/pull/2405#discussion_r408923421", "createdAt": "2020-04-15T15:16:16Z", "author": {"login": "oowekyala"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/Node.java", "diffHunk": "@@ -651,7 +648,7 @@ default void removeChildAtIndex(int childIndex) {\n      *\n      * @see NodeStream#children(Class)\n      */\n-    default <R extends Node> NodeStream<R> children(Class<R> rClass) {\n+    default <R extends Node> NodeStream<R> children(Class<? extends R> rClass) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyMTM4Nw=="}, "originalCommit": {"oid": "50b708ac5f4e45e66d3425fce97fc42638eaeb45"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjk0NDY2OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/NodeStream.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzowOTo0OVrOGFsjGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDozNDozMFrOGGoZVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyNTk0Nw==", "bodyText": "Only one of <pre> or {@code is needed, isn't it?", "url": "https://github.com/pmd/pmd/pull/2405#discussion_r408625947", "createdAt": "2020-04-15T07:09:49Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/NodeStream.java", "diffHunk": "@@ -975,7 +1001,62 @@ default boolean isEmpty() {\n         return upstream.cached().flatMap(aggregate);\n     }\n \n-\n+    /**\n+     * Returns a map function, that checks whether the parameter is an\n+     * instance of any of the given classes. If so, it returns the parameter,\n+     * otherwise it returns null.\n+     *\n+     * <p>This may be used to filter a node stream to those specific\n+     * classes, for example:\n+     *\n+     * <pre>{@code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50b708ac5f4e45e66d3425fce97fc42638eaeb45"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxNjcyOQ==", "bodyText": "Without {@code}, HTML special characters like < need to be replaced with entities", "url": "https://github.com/pmd/pmd/pull/2405#discussion_r408916729", "createdAt": "2020-04-15T15:07:35Z", "author": {"login": "oowekyala"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/NodeStream.java", "diffHunk": "@@ -975,7 +1001,62 @@ default boolean isEmpty() {\n         return upstream.cached().flatMap(aggregate);\n     }\n \n-\n+    /**\n+     * Returns a map function, that checks whether the parameter is an\n+     * instance of any of the given classes. If so, it returns the parameter,\n+     * otherwise it returns null.\n+     *\n+     * <p>This may be used to filter a node stream to those specific\n+     * classes, for example:\n+     *\n+     * <pre>{@code", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyNTk0Nw=="}, "originalCommit": {"oid": "50b708ac5f4e45e66d3425fce97fc42638eaeb45"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNjQ4Ng==", "bodyText": "Ah, ok, didn't know that.", "url": "https://github.com/pmd/pmd/pull/2405#discussion_r409606486", "createdAt": "2020-04-16T14:34:30Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/NodeStream.java", "diffHunk": "@@ -975,7 +1001,62 @@ default boolean isEmpty() {\n         return upstream.cached().flatMap(aggregate);\n     }\n \n-\n+    /**\n+     * Returns a map function, that checks whether the parameter is an\n+     * instance of any of the given classes. If so, it returns the parameter,\n+     * otherwise it returns null.\n+     *\n+     * <p>This may be used to filter a node stream to those specific\n+     * classes, for example:\n+     *\n+     * <pre>{@code", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyNTk0Nw=="}, "originalCommit": {"oid": "50b708ac5f4e45e66d3425fce97fc42638eaeb45"}, "originalPosition": 155}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 367, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}