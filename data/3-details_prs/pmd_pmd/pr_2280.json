{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MjQ2MTMz", "number": 2280, "title": "[cs] CPD: Replace C# tokenizer by an Antlr-based one", "bodyText": "Before submitting a PR, please check that:\n\n The PR is submitted against master. The PMD team will merge back to support branches as needed.\n ./mvnw clean verify passes. This will build and test PMD, execute PMD and checkstyle rules. Check this for more info\n\nPR Description:\nThis replaces the C# tokenizer by one based on Antlr, in line to how it's done for many other languages already.\nThis has a couple of advantages, including adding column information and fixing #2139\nIn order to correctly filter using directives as the previous tokenizer did, I had to extend the BaseTokenFilter class. Existing subclasses should not be impacted by this, but the new functionality might be useful for other languages as well.\nFixes #2139", "createdAt": "2020-02-12T11:08:18Z", "url": "https://github.com/pmd/pmd/pull/2280", "merged": true, "mergeCommit": {"oid": "4bd5a159e504b7f92e00e779da214c4ca102f0b8"}, "closed": true, "closedAt": "2020-02-29T10:51:38Z", "author": {"login": "maikelsteneker"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDjihDAH2gAyMzc0MjQ2MTMzOjY1OWU3MDlmNzk4OGE1Y2RhNjMzOGQ4ODIwYmRlMjg5YTIyZDVmNjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJB_fJgFqTM2Njc5MDc1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "659e709f7988a5cda6338d8820bde289a22d5f62", "author": {"user": {"login": "maikelsteneker", "name": "Maikel Steneker"}}, "url": "https://github.com/pmd/pmd/commit/659e709f7988a5cda6338d8820bde289a22d5f62", "committedDate": "2020-02-12T10:12:14Z", "message": "Adjusted BaseTokenFilter to allow filtering on more than one token.\n\nWhen filtering tokens, the analyzeToken method can be overriden to access the current token. This can then be used to implement isLanguageSpecificDiscarding. However, it may be desirable to \"look ahead\" and base the decision of whether to filter or not on multiple tokens. In order to support this new use case, a new extension point analyzeTokens is provided, which not only has access to the current token, but can also iterate over the upcoming tokens.\n\nThe functionality of iterating over remaining tokens uses Guava for its implementation. Since pmd-core targets Java 7, the Android flavour of Guava is used. In order to stay consistent with pmd-apex-jorje, this has also been adjusted to the Android flavour. For PMD 7.0, the jre flavour can be used instead."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdfbfae231ce437f6c9a6a67e7a313b6295a9632", "author": {"user": {"login": "maikelsteneker", "name": "Maikel Steneker"}}, "url": "https://github.com/pmd/pmd/commit/bdfbfae231ce437f6c9a6a67e7a313b6295a9632", "committedDate": "2020-02-12T10:46:12Z", "message": "C# tokenizer is now Antlr-based.\n\nThis is based on the Antlr grammar from https://github.com/antlr/grammars-v4/tree/master/csharp.\n\nThis adds column information for C# and fixes #2139."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzE3OTMx", "url": "https://github.com/pmd/pmd/pull/2280#pullrequestreview-358317931", "createdAt": "2020-02-13T15:37:25Z", "commit": {"oid": "bdfbfae231ce437f6c9a6a67e7a313b6295a9632"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTozNzoyNVrOFpYlbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTo0MzozNVrOFpY2Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkzODczMw==", "bodyText": "To avoid the dependency to guava, we can also write\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Iterator<String> iterator = ImmutableList.of(\"a\", \"b\", \"c\").iterator();\n          \n          \n            \n                    Iterator<String> iterator = Collections.unmodifiableList(Arrays.asList(\"a\", \"b\", \"c\")).iterator();", "url": "https://github.com/pmd/pmd/pull/2280#discussion_r378938733", "createdAt": "2020-02-13T15:37:25Z", "author": {"login": "adangel"}, "path": "pmd-core/src/test/java/net/sourceforge/pmd/cpd/token/internal/BaseTokenFilterTest.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/**\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.cpd.token.internal;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.ConcurrentModificationException;\n+import java.util.Iterator;\n+import java.util.NoSuchElementException;\n+\n+import org.junit.Test;\n+\n+import net.sourceforge.pmd.lang.TokenManager;\n+import net.sourceforge.pmd.lang.ast.GenericToken;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+public class BaseTokenFilterTest {\n+\n+    class StringToken implements GenericToken {\n+\n+        private final String text;\n+\n+        StringToken(final String text) {\n+            this.text = text;\n+        }\n+\n+        @Override\n+        public GenericToken getNext() {\n+            return null;\n+        }\n+\n+        @Override\n+        public GenericToken getPreviousComment() {\n+            return null;\n+        }\n+\n+        @Override\n+        public String getImage() {\n+            return text;\n+        }\n+\n+        @Override\n+        public int getBeginLine() {\n+            return 0;\n+        }\n+\n+        @Override\n+        public int getEndLine() {\n+            return 0;\n+        }\n+\n+        @Override\n+        public int getBeginColumn() {\n+            return 0;\n+        }\n+\n+        @Override\n+        public int getEndColumn() {\n+            return 0;\n+        }\n+    }\n+\n+    class StringTokenManager implements TokenManager {\n+\n+        Iterator<String> iterator = ImmutableList.of(\"a\", \"b\", \"c\").iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdfbfae231ce437f6c9a6a67e7a313b6295a9632"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkzOTg2NQ==", "bodyText": "why android?", "url": "https://github.com/pmd/pmd/pull/2280#discussion_r378939865", "createdAt": "2020-02-13T15:38:48Z", "author": {"login": "adangel"}, "path": "pmd-apex-jorje/pom.xml", "diffHunk": "@@ -81,7 +81,7 @@\n     <dependency>\n         <groupId>com.google.guava</groupId>\n         <artifactId>guava</artifactId>\n-        <version>26.0-jre</version>\n+        <version>26.0-android</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdfbfae231ce437f6c9a6a67e7a313b6295a9632"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk0MDYyMA==", "bodyText": "Do we really need this dependency? I think, you added it to use AbstractIterator. Would it be possible to write the RemainingTokensIterator without this?", "url": "https://github.com/pmd/pmd/pull/2280#discussion_r378940620", "createdAt": "2020-02-13T15:40:01Z", "author": {"login": "adangel"}, "path": "pmd-core/pom.xml", "diffHunk": "@@ -186,6 +186,12 @@\n             <artifactId>system-rules</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdfbfae231ce437f6c9a6a67e7a313b6295a9632"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk0Mjk5OA==", "bodyText": "Can we simply use this? According to the faq https://www.eclipse.org/legal/epl-2.0/faq.php#h.5ucozq4kvv7o we would need the permission from the owner in order to include it here as BSD...", "url": "https://github.com/pmd/pmd/pull/2280#discussion_r378942998", "createdAt": "2020-02-13T15:43:35Z", "author": {"login": "adangel"}, "path": "pmd-cs/src/main/antlr4/net/sourceforge/pmd/lang/cs/antlr4/CSharpLexer.g4", "diffHunk": "@@ -0,0 +1,1105 @@\n+// Eclipse Public License - v 1.0, http://www.eclipse.org/legal/epl-v10.html", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdfbfae231ce437f6c9a6a67e7a313b6295a9632"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bd5a159e504b7f92e00e779da214c4ca102f0b8", "author": {"user": {"login": "maikelsteneker", "name": "Maikel Steneker"}}, "url": "https://github.com/pmd/pmd/commit/4bd5a159e504b7f92e00e779da214c4ca102f0b8", "committedDate": "2020-02-27T10:36:28Z", "message": "Rewrite to avoid Guava dependency."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzkwNzUw", "url": "https://github.com/pmd/pmd/pull/2280#pullrequestreview-366790750", "createdAt": "2020-02-29T10:30:39Z", "commit": {"oid": "4bd5a159e504b7f92e00e779da214c4ca102f0b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4876, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}