{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTQxNzA1", "number": 2281, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwODo1MjozM1rODhcEhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOToyNzo1MlrODhc1aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Mzg5NTExOnYy", "diffSide": "RIGHT", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAnyTypeDeclaration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwODo1MjozM1rOFsKygw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwODo1MjozM1rOFsKygw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg1ODQzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns the canonical name of this class, it it exists.\n          \n          \n            \n                 * Returns the canonical name of this class, if it exists.", "url": "https://github.com/pmd/pmd/pull/2281#discussion_r381858435", "createdAt": "2020-02-20T08:52:33Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAnyTypeDeclaration.java", "diffHunk": "@@ -49,9 +55,57 @@ default String getSimpleName() {\n      * Returns the binary name of this type declaration. This\n      * is like {@link Class#getName()}.\n      */\n-    // @NotNull\n+    @NonNull\n     String getBinaryName();\n \n+\n+    /**\n+     * Returns the canonical name of this class, it it exists.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "184b368c8249ae7556002b3d4977be1ac9c95bb6"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MzkyOTEyOnYy", "diffSide": "RIGHT", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeParameter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTowMjoyOVrOFsLHOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMzozNDoyNVrOFs3Azw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2MzczOQ==", "bodyText": "This is a bit surprising in comparison the formal parameters - in ASTFormalParameter, the owner node is the direct parent and not the grand parent. Maybe something to consider later?\nASTFormalParameter::getOwnerList() vs. ASTTypeParameter::getOwner() ...", "url": "https://github.com/pmd/pmd/pull/2281#discussion_r381863739", "createdAt": "2020-02-20T09:02:29Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeParameter.java", "diffHunk": "@@ -62,6 +64,13 @@ public ASTType getTypeBoundNode() {\n         return getFirstChildOfType(ASTType.class);\n     }\n \n+    /**\n+     * Returns the node to which this type parameter belongs.\n+     */\n+    public TypeParamOwnerNode getOwner() {\n+        return (TypeParamOwnerNode) jjtGetParent().jjtGetParent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "184b368c8249ae7556002b3d4977be1ac9c95bb6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4Mjk5MQ==", "bodyText": "That's true, I'll add a TODO on the wiki to review that", "url": "https://github.com/pmd/pmd/pull/2281#discussion_r382582991", "createdAt": "2020-02-21T13:34:25Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeParameter.java", "diffHunk": "@@ -62,6 +64,13 @@ public ASTType getTypeBoundNode() {\n         return getFirstChildOfType(ASTType.class);\n     }\n \n+    /**\n+     * Returns the node to which this type parameter belongs.\n+     */\n+    public TypeParamOwnerNode getOwner() {\n+        return (TypeParamOwnerNode) jjtGetParent().jjtGetParent();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2MzczOQ=="}, "originalCommit": {"oid": "184b368c8249ae7556002b3d4977be1ac9c95bb6"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Mzk2ODA1OnYy", "diffSide": "RIGHT", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/qname/QualifiedNameResolver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOToxMzo0MVrOFsLecg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOToxMzo0MVrOFsLecg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2OTY4Mg==", "bodyText": "So this will become what previously was called \"SymbolTableFacade\"? \ud83d\udc4d", "url": "https://github.com/pmd/pmd/pull/2281#discussion_r381869682", "createdAt": "2020-02-20T09:13:41Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/qname/QualifiedNameResolver.java", "diffHunk": "@@ -18,20 +20,30 @@\n import net.sourceforge.pmd.lang.java.ast.ASTAnyTypeDeclaration;\n import net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit;\n import net.sourceforge.pmd.lang.java.ast.ASTConstructorDeclaration;\n+import net.sourceforge.pmd.lang.java.ast.ASTFormalParameter;\n import net.sourceforge.pmd.lang.java.ast.ASTFormalParameters;\n import net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration;\n+import net.sourceforge.pmd.lang.java.ast.ASTMethodOrConstructorDeclaration;\n import net.sourceforge.pmd.lang.java.ast.ASTPackageDeclaration;\n+import net.sourceforge.pmd.lang.java.ast.ASTVariableDeclaratorId;\n import net.sourceforge.pmd.lang.java.ast.InternalApiBridge;\n import net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter;\n import net.sourceforge.pmd.lang.java.ast.JavaQualifiableNode;\n import net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtil;\n import net.sourceforge.pmd.lang.java.qname.ImmutableList.ListFactory;\n-import net.sourceforge.pmd.lang.java.typeresolution.PMDASMClassLoader;\n+import net.sourceforge.pmd.lang.java.symbols.JClassSymbol;\n+import net.sourceforge.pmd.lang.java.symbols.JExecutableSymbol;\n+import net.sourceforge.pmd.lang.java.symbols.JTypeParameterOwnerSymbol;\n+import net.sourceforge.pmd.lang.java.symbols.internal.impl.ast.AstSymFactory;\n \n \n /**\n  * Populates {@link JavaQualifiableNode} instances with their qualified names.\n  *\n+ * <p>In fact, populates symbols on declaration nodes.\n+ * TODO in the near future we'll get rid of qualified names, and can\n+ * reuse this class just to build symbols (moving it to symbols.impl.ast).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "184b368c8249ae7556002b3d4977be1ac9c95bb6"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Mzk4OTk1OnYy", "diffSide": "RIGHT", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/SymbolVisitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOToxOTo0NVrOFsLrhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOToxOTo0NVrOFsLrhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3MzAzMA==", "bodyText": "This looks like another API PMD provides now... we'll definitively need good documentations and usage examples...", "url": "https://github.com/pmd/pmd/pull/2281#discussion_r381873030", "createdAt": "2020-02-20T09:19:45Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/SymbolVisitor.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.lang.java.symbols;\n+\n+/**\n+ * Visitor over symbols.\n+ */\n+public interface SymbolVisitor<R, P> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "184b368c8249ae7556002b3d4977be1ac9c95bb6"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDAyMDI1OnYy", "diffSide": "RIGHT", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/internal/impl/ast/AbstractAstBackedSymbol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOToyNzo1MlrOFsL91A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOToyNzo1MlrOFsL91A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3NzcxNg==", "bodyText": "I'm wondering, whether we really want to have both internal and impl - what's the difference? Looks to me the same...", "url": "https://github.com/pmd/pmd/pull/2281#discussion_r381877716", "createdAt": "2020-02-20T09:27:52Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symbols/internal/impl/ast/AbstractAstBackedSymbol.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.lang.java.symbols.internal.impl.ast;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "184b368c8249ae7556002b3d4977be1ac9c95bb6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 490, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}