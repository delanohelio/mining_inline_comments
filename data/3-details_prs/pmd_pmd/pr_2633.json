{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NDAzMTI1", "number": 2633, "title": "[core] Fix XMLRenderer encoding issues", "bodyText": "Describe the PR\nThis PR tries to fix #2615 . In order to use the correct encoding through the rendering process, the new API Renderer::setReportFile is added.\nI'm not entirely sure about CPD renderer, whether we have a similar issue there. But as far as I can see, only the default platform encoding is used, there is no way to change the encoding. There is also no way to specify a output file as a command line option, so CPD renderers always render to Sysout and hence should use the default platform encoding.\nRelated issues\n\nFixes #2615\n\nReady?\n\n Added unit tests for fixed bug/feature\n Passing all unit tests\n Complete build ./mvnw clean verify passes (checked automatically by travis)\n Added (in-code) documentation (if needed).", "createdAt": "2020-07-05T12:47:21Z", "url": "https://github.com/pmd/pmd/pull/2633", "merged": true, "mergeCommit": {"oid": "d239987d2667c42d2e65c309690237f76959d453"}, "closed": true, "closedAt": "2020-07-23T12:16:25Z", "author": {"login": "adangel"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxYXrEgH2gAyNDQ0NDAzMTI1OjMwMDRlNzYyNTdkM2JlNzNjZDI3Mjc1M2ZmZjA3Mzg1OTNiOWFhODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2yvmJAFqTQ1MTY3MjU0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3004e76257d3be73cd272753fff0738593b9aa88", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/3004e76257d3be73cd272753fff0738593b9aa88", "committedDate": "2020-07-03T19:11:57Z", "message": "[core] CPD: Add correct XML 1.0 escaping for code snippets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bb091e26d71c10179c2b40f122dd862c843e9a5", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/3bb091e26d71c10179c2b40f122dd862c843e9a5", "committedDate": "2020-07-05T09:20:17Z", "message": "[core] CPD: Also escape filename, explicitly set XML 1.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9279732443f899d05dbec533bbf0ab3aab4fddb", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/d9279732443f899d05dbec533bbf0ab3aab4fddb", "committedDate": "2020-07-05T12:21:46Z", "message": "[core] PMD XMLRenderer - correctly support encoding\n\nThe XMLRenderer uses by default UTF-8 encoding, but the\nwriter uses the system default encoding, which doesn't work\nwell together.\n\nProvide new experimental API Renderer::setReportFile, so that\nrenderer implementations can create their own writers.\nThe default implementation in AbstractRenderer is backwards compatible."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60f905b0ef01843dde9d43e6ee5cb80b5b6b6a3c", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/60f905b0ef01843dde9d43e6ee5cb80b5b6b6a3c", "committedDate": "2020-07-05T12:46:04Z", "message": "[doc] Update release notes, fixes #2615"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjc0NDI5", "url": "https://github.com/pmd/pmd/pull/2633#pullrequestreview-442674429", "createdAt": "2020-07-05T12:49:20Z", "commit": {"oid": "60f905b0ef01843dde9d43e6ee5cb80b5b6b6a3c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMjo0OToyMFrOGtCH3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMjo0OToyMFrOGtCH3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3Mzg4Ng==", "bodyText": "StringEscapeUtils escape basic chars like \"<\" and remove invalid chars like U+000C. But the DOM impl already escapes \"<\" by itself in attribute values, but doesn't remove invalid chars. In order to avoid double escaping, this escapes it once with StringEscapeUtils and unescapes it again - result is, that only invalid chars are removed (no escaping).", "url": "https://github.com/pmd/pmd/pull/2633#discussion_r449873886", "createdAt": "2020-07-05T12:49:20Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/XMLRenderer.java", "diffHunk": "@@ -119,7 +121,8 @@ private Element addFilesToDuplicationElement(Document doc, Element duplication,\n             mark = iterator.next();\n             final Element file = doc.createElement(\"file\");\n             file.setAttribute(\"line\", String.valueOf(mark.getBeginLine()));\n-            file.setAttribute(\"path\", mark.getFilename());\n+            String filenameXml10 = StringEscapeUtils.unescapeXml(StringEscapeUtils.escapeXml10(mark.getFilename()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60f905b0ef01843dde9d43e6ee5cb80b5b6b6a3c"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjc0NjQw", "url": "https://github.com/pmd/pmd/pull/2633#pullrequestreview-442674640", "createdAt": "2020-07-05T12:52:18Z", "commit": {"oid": "60f905b0ef01843dde9d43e6ee5cb80b5b6b6a3c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMjo1MjoxOFrOGtCI8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMjo1MjoxOFrOGtCI8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NDE2Mg==", "bodyText": "this and a non unicode based encoding like ISO-8859-1 or cp1252 cannot encode codepoints > 255.\nHm... so, we should probably escape chars additionally as soon as c > 0xff, because then you need unicode...", "url": "https://github.com/pmd/pmd/pull/2633#discussion_r449874162", "createdAt": "2020-07-05T12:52:18Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/XMLRenderer.java", "diffHunk": "@@ -179,6 +182,41 @@ private void createTimestampAttr(StringBuilder buffer) {\n                 .append('\"');\n     }\n \n+    @Override\n+    public void setReportFile(String reportFilename) {\n+        String encoding = getProperty(ENCODING);\n+\n+        try {\n+            Charset charset = Charset.forName(encoding);\n+            this.writer = StringUtils.isBlank(reportFilename) ? new OutputStreamWriter(System.out, charset)\n+                    : Files.newBufferedWriter(new File(reportFilename).toPath(), charset);\n+        } catch (IOException | UnsupportedCharsetException e) {\n+            throw new IllegalArgumentException(e);\n+        }\n+    }\n+\n+    /**\n+     * Escape unicode characters for non UTF-8 encodings.\n+     */\n+    private String escape(String text) {\n+        String result = StringEscapeUtils.escapeXml10(text);\n+        String encoding = getProperty(ENCODING);\n+        if (!\"UTF-8\".equalsIgnoreCase(encoding)) {\n+            StringBuilder sb = new StringBuilder(result);\n+            for (int i = 0; i < sb.length(); i++) {\n+                char c = sb.charAt(i);\n+                // surrogate characters are not allowed in XML", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60f905b0ef01843dde9d43e6ee5cb80b5b6b6a3c"}, "originalPosition": 152}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bd9b1db6b5bf2b11859ab2114e8398e2a7d507a", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/0bd9b1db6b5bf2b11859ab2114e8398e2a7d507a", "committedDate": "2020-07-05T20:10:14Z", "message": "[core] XMLRenderer - avoid unmappable characters for non UTF-8 encodings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53c581b69a0ff78959f97ae29e5a8afb15f4ef9b", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/53c581b69a0ff78959f97ae29e5a8afb15f4ef9b", "committedDate": "2020-07-06T19:44:47Z", "message": "Update pmd-regression-tester"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb97b693f226c5ddc13c5b8acb274d497f3bbfdd", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/bb97b693f226c5ddc13c5b8acb274d497f3bbfdd", "committedDate": "2020-07-08T18:29:26Z", "message": "Update pmd-regression-tester 1.0.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e006697e0aac3594de2d0df618d0db0e2c5534e", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/2e006697e0aac3594de2d0df618d0db0e2c5534e", "committedDate": "2020-07-09T08:56:44Z", "message": "[core] Refactor XMLRenderer to use XMLStreamWriter\n\nIn order to properly support different encodings, a OutputStream\nis needed. Then Java will take care of unmappaple characters\nand encode them as entities for XML.\n\nFor backwards compatibility, a writer is still created and exposed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6600ec8560d85df738d5622416563f8e3f2fe7d", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/e6600ec8560d85df738d5622416563f8e3f2fe7d", "committedDate": "2020-07-09T09:07:06Z", "message": "[core] Provide StringUtil.removeInvalidXml10Characters\n\nAnd use it in both CPD/PMD XMLRenderers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e9f5ad8978f0c6c12d207a801f24b6816e8cf26", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/2e9f5ad8978f0c6c12d207a801f24b6816e8cf26", "committedDate": "2020-07-20T14:36:16Z", "message": "Merge branch 'master' into issue-2615"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjcyNTQ5", "url": "https://github.com/pmd/pmd/pull/2633#pullrequestreview-451672549", "createdAt": "2020-07-20T14:41:20Z", "commit": {"oid": "e6600ec8560d85df738d5622416563f8e3f2fe7d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo0MToyMFrOG0QjlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo0MToyMFrOG0QjlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ1MDM4OQ==", "bodyText": "In a mature API, I think this should take a Path argument instead of a string. But then, everything should be updated to be consistent", "url": "https://github.com/pmd/pmd/pull/2633#discussion_r457450389", "createdAt": "2020-07-20T14:41:20Z", "author": {"login": "oowekyala"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/Renderer.java", "diffHunk": "@@ -163,4 +164,17 @@\n     void end() throws IOException;\n \n     void flush() throws IOException;\n+\n+    /**\n+     * Sets the filename where the report should be written to. If no filename is provided,\n+     * the renderer should write to stdout.\n+     *\n+     * <p>Implementations must initialize the writer of the renderer.\n+     *\n+     * <p>See {@link AbstractRenderer#setReportFile(String)} for the default impl.\n+     *\n+     * @param reportFilename the filename (optional).\n+     */\n+    @Experimental\n+    void setReportFile(String reportFilename);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6600ec8560d85df738d5622416563f8e3f2fe7d"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4628, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}