{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMDA5OTA1", "number": 2721, "title": "[java] Deprecate old symbol table, add replacement for TypeHelper", "bodyText": "Describe the PR\n\nFor the symbol table, only classes that were clearly internal API are deprecated. Other classes, like scope implementations, are still the only way to get a name declaration. So I don't think we should deprecate them immediately on master\nThe replacement of TypeHelper is in the package, that #2689 uses, so that it is forward-compatible\n\nMany methods are not replaced. I only kept isA, and isExactlyA. Stuff like isExactlyNone, isEither, are very specific and barely used in the codebase. I'd rather have 4 public methods with a solid contract than 10 loosely consistent ones.\nThe new isA/isExactlyA have changed a bit:\n\nThey take the node as the second parameter. This is because usually, the longer expression is the one that produces the node (the type is usually a class literal). I think isA(String.class, someNode.getTypeNode()) reads better, even when the second expression grows longer\nThey return false if the node is null. This simplifies calling code, which usually needed a null check, and declared a temporary variable to do so. The previous behavior was mostly to throw if the node was null, though that wasn't specified, and was probably not consistent (I didn't check)\nThey throw if the class argument is null. This isn't really needed, just that I think it's also the better default, and it simplifies the implementation. The previous behavior was to return false, or throw in some cases, inconsistently. This wasn't specified.\n\n\n\n\n\nThe old methods of TypeHelper keep the same behavior but are deprecated, and implemented using TypeTestUtil\nI think this is necessary before #2689 is merged\nRelated issues\n\n\n#2701\n\nReady?\n\n\n Added unit tests for fixed bug/feature\n Passing all unit tests\n Complete build ./mvnw clean verify passes (checked automatically by travis)\n Added (in-code) documentation (if needed)", "createdAt": "2020-08-22T16:50:31Z", "url": "https://github.com/pmd/pmd/pull/2721", "merged": true, "mergeCommit": {"oid": "a98f3d62015cf53568a84b587d0b0038ef56c1b3"}, "closed": true, "closedAt": "2020-08-23T08:18:54Z", "author": {"login": "oowekyala"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBbl96AH2gAyNDcyMDA5OTA1OmFjOTQxMTBmYzRlN2U0MGZhODViYzA4MDRhYmIyMmM1NGM1Y2NiMGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBpV8RAFqTQ3Mjk5MDAwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ac94110fc4e7e40fa85bc0804abb22c54c5ccb0c", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/ac94110fc4e7e40fa85bc0804abb22c54c5ccb0c", "committedDate": "2020-08-22T16:00:04Z", "message": "Mark symbol table classes as internal api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30b76285e3d65ecc946ebeb7315e95abfda451b9", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/30b76285e3d65ecc946ebeb7315e95abfda451b9", "committedDate": "2020-08-22T16:17:08Z", "message": "Add replacement for TypeHelper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95140fc2cb7b13d609b954f68d602dbf09cf0c05", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/95140fc2cb7b13d609b954f68d602dbf09cf0c05", "committedDate": "2020-08-22T16:17:11Z", "message": "Update release notes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bee844d57d95f758216abddcf17426a38a368c64", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/bee844d57d95f758216abddcf17426a38a368c64", "committedDate": "2020-08-22T16:25:42Z", "message": "Duplicate tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab971f1c8f99b86c1696df23a3236e84a705997d", "author": {"user": {"login": "oowekyala", "name": "Cl\u00e9ment Fournier"}}, "url": "https://github.com/pmd/pmd/commit/ab971f1c8f99b86c1696df23a3236e84a705997d", "committedDate": "2020-08-22T16:48:50Z", "message": "Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTM5MjQ3", "url": "https://github.com/pmd/pmd/pull/2721#pullrequestreview-472939247", "createdAt": "2020-08-22T17:13:38Z", "commit": {"oid": "ab971f1c8f99b86c1696df23a3236e84a705997d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNzoxMzozOFrOHFGd0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNzoxMzozOFrOHFGd0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMDg2Ng==", "bodyText": "I think, this simplification is actually correct - junit3 test is always a subclass of TestCase, so the type check is sufficient.", "url": "https://github.com/pmd/pmd/pull/2721#discussion_r475110866", "createdAt": "2020-08-22T17:13:38Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/AbstractJUnitRule.java", "diffHunk": "@@ -97,26 +95,7 @@ private boolean isJUnit3Method(ASTMethodDeclaration method) {\n \n     private boolean isJUnit3Class(ASTCompilationUnit node) {\n         ASTClassOrInterfaceDeclaration cid = node.getFirstDescendantOfType(ASTClassOrInterfaceDeclaration.class);\n-        if (cid == null) {\n-            return false;\n-        }\n-\n-        if (node.getType() != null && TypeHelper.isA(node, JUNIT3_CLASS_NAME)) {\n-            return true;\n-        } else if (node.getType() == null) {\n-            ASTExtendsList extendsList = cid.getFirstChildOfType(ASTExtendsList.class);\n-            if (extendsList == null) {\n-                return false;\n-            }\n-            if (((ASTClassOrInterfaceType) extendsList.getChild(0)).getImage().endsWith(\"TestCase\")) {\n-                return true;\n-            }\n-            String className = cid.getSimpleName();\n-            return className.endsWith(\"Test\");\n-        } else if (hasImports(node, JUNIT3_CLASS_NAME)) {\n-            return cid.getSimpleName().endsWith(\"Test\");\n-        }\n-        return false;\n+        return TypeTestUtil.isA(JUNIT3_CLASS_NAME, cid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab971f1c8f99b86c1696df23a3236e84a705997d"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTkwMDAz", "url": "https://github.com/pmd/pmd/pull/2721#pullrequestreview-472990003", "createdAt": "2020-08-23T08:01:14Z", "commit": {"oid": "ab971f1c8f99b86c1696df23a3236e84a705997d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4693, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}