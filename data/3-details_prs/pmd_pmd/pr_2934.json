{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MjM5MzA3", "number": 2934, "title": "[java] CompareObjectsWithEquals / UseEqualsToCompareStrings - False negatives with fields", "bodyText": "Describe the PR\nFixes false negatives in case fields are referenced with this.\nType resolution on PrimaryExpression works well enough to\nsimply check the type.\nCompareObjectsWithEquals had the same problem. It was easier to rewrite this rule as a XPath rule.\nNote: I changed one test case, which was actually wrong.\nExample\npublic class ClassWithStringFields {\n    private String string1 = \"a\";\n    private String string2 = \"a\";\n\n    public void bar() {\n        if (string1 == string2) { }  // violation\n        if (string1 == this.string2) { } // violation - FN\n        if (this.string1 == string2) { } // violation - FN\n        if (this.string1 == this.string2) { } // violation - FN\n\n        if (string1 != string2) { } // violation\n        if (string1 != this.string2) { } // violation - FN\n        if (this.string1 != string2) { } // violation - FN\n        if (this.string1 != this.string2) { } // violation - FN\n\n        if (string1.equals(string2)) { } // ok\n        if (this.string1.equals(string2)) { } // ok\n        if (string1.equals(this.string2)) { } // ok\n        if (this.string1.equals(this.string2)) { } // ok\n    }\n}\nRelated issues\n\nNone\n\nReady?\n\n\n Added unit tests for fixed bug/feature\n Passing all unit tests\n Complete build ./mvnw clean verify passes (checked automatically by travis)\n Release Notes\n Get regression tester report working (should show new violations)", "createdAt": "2020-11-19T21:21:59Z", "url": "https://github.com/pmd/pmd/pull/2934", "merged": true, "mergeCommit": {"oid": "4f36ac3bd203ec91b5c6d65eb596618ff936370d"}, "closed": true, "closedAt": "2020-11-28T14:23:43Z", "author": {"login": "adangel"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeIfK5gH2gAyNTI0MjM5MzA3OjFlNmM3OWMxOWZlNzE2Y2VkNTdmNDEzODk5NTlkYjQ5MGNlZDcwMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdg9QXnAFqTU0MDM3OTc3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1e6c79c19fe716ced57f41389959db490ced7037", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/1e6c79c19fe716ced57f41389959db490ced7037", "committedDate": "2020-11-19T20:08:15Z", "message": "[java] CompareObjectsWithEquals / UseEqualsToCompareStrings - Fix FN\n\nFixes false negatives in case fields are referenced with this.\nType resolution on PrimaryExpression works well enough to\nsimply check the type."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3020183a2918978f5282739f176a74f318694fcb", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/3020183a2918978f5282739f176a74f318694fcb", "committedDate": "2020-11-20T08:07:35Z", "message": "[doc] Update release notes, refs #2934"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1297dfd09b353f410127ef948ab1b7bb86aec92", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/a1297dfd09b353f410127ef948ab1b7bb86aec92", "committedDate": "2020-11-20T11:20:25Z", "message": "[java] Consider comparison with null literal as valid"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c950641d237bbb1e830767a20e4294dffefd08f", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/2c950641d237bbb1e830767a20e4294dffefd08f", "committedDate": "2020-11-20T14:50:30Z", "message": "[java] Avoid false positives with literals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cda99a1629b9c47d09fc3807eed829dff3d9fc60", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/cda99a1629b9c47d09fc3807eed829dff3d9fc60", "committedDate": "2020-11-20T15:41:41Z", "message": "[java] CompareObjectsWithEquals - whitelist java.lang.class and this"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02135513c9ed63338e7d06e83e4b01230fe4b54e", "author": {"user": {"login": "adangel", "name": "Andreas Dangel"}}, "url": "https://github.com/pmd/pmd/commit/02135513c9ed63338e7d06e83e4b01230fe4b54e", "committedDate": "2020-11-20T19:39:45Z", "message": "[java] CompareObjectsWithEquals: Fix more false positives"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMzc2MTAy", "url": "https://github.com/pmd/pmd/pull/2934#pullrequestreview-540376102", "createdAt": "2020-11-28T13:39:08Z", "commit": {"oid": "02135513c9ed63338e7d06e83e4b01230fe4b54e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMzc5Nzc3", "url": "https://github.com/pmd/pmd/pull/2934#pullrequestreview-540379777", "createdAt": "2020-11-28T14:44:54Z", "commit": {"oid": "02135513c9ed63338e7d06e83e4b01230fe4b54e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxNDo0NDo1NFrOH7ZnUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxNDo0NDo1NFrOH7ZnUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA0NzY5OA==", "bodyText": "In #2899 I considered this legal only in equals method:\nhttps://github.com/pmd/pmd/pull/2899/files#r532047509\nShould we do that on master too?", "url": "https://github.com/pmd/pmd/pull/2934#discussion_r532047698", "createdAt": "2020-11-28T14:44:54Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/errorprone/xml/CompareObjectsWithEquals.xml", "diffHunk": "@@ -207,6 +236,79 @@ public class CompareWithEqualsTest {\n     {\n         return a == b;\n     }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>#2934 False negative - class with fields</description>\n+        <expected-problems>4</expected-problems>\n+        <expected-linenumbers>8,9,10,11</expected-linenumbers>\n+        <code><![CDATA[\n+package net.sourceforge.pmd.lang.java.rule.errorprone.compareobjectswithequals;\n+\n+public class ClassWithFields {\n+    private Object a;\n+    private Object b;\n+\n+    boolean test1() {\n+        return  a == b // violation\n+             && this.a == b // violation\n+             && a != this.b // violation\n+             && this.a == this.b // violation\n+             && a.equals(b) // ok\n+             && this.a.equals(this.b); // ok\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>#2934 comparison with null is valid and with primitive literals</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-linenumbers>18,19</expected-linenumbers>\n+        <code><![CDATA[\n+package net.sourceforge.pmd.lang.java.rule.errorprone.compareobjectswithequals;\n+\n+public class ClassWithFields {\n+    private Object a;\n+    private Object b;\n+\n+    boolean test1() {\n+        return a == null // ok\n+             && this.a == null; // ok\n+    }\n+\n+    void test2(StringBuilder sb) {\n+        if (sb != null) { } // ok\n+    }\n+\n+    public void bar(Integer x, Integer y) {\n+        if (x == 1) { } // ok\n+        if (x == y) { } // not ok! only works -128<x<127 dependent on Integer caching\n+        if (x == \"String\") { } // not ok\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>#2934 this and class should be ignored</description>\n+        <expected-problems>0</expected-problems>\n+        <code><![CDATA[\n+package net.sourceforge.pmd.lang.java.rule.errorprone.compareobjectswithequals;\n+\n+public class ClassWithFields {\n+    private Object a;\n+    private Object b;\n+\n+    void test(Object o) {\n+        if (this == o) { } // should be allowed, since this is a often used pattern in Object::equals.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02135513c9ed63338e7d06e83e4b01230fe4b54e"}, "originalPosition": 168}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4591, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}