{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MDczMjc5", "number": 2680, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo0MzoyNlrOEUYlcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo1Mzo1M1rOEUYodg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODA5Nzc3OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo0MzoyNlrOG6lMxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo0MzoyNlrOG6lMxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA4MDA2OQ==", "bodyText": "... Use {@link #getViolations()}.isEmpty() instead.", "url": "https://github.com/pmd/pmd/pull/2680#discussion_r464080069", "createdAt": "2020-08-02T13:43:26Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "diffHunk": "@@ -445,27 +439,36 @@ public boolean isEmpty() {\n      *\n      * @return <code>true</code> if there were any processing errors,\n      *         <code>false</code> otherwise\n+     *\n+     * @deprecated Use {@link #getProcessingErrors()}.isEmpty()\n      */\n+    @Deprecated\n     public boolean hasErrors() {\n-        return errors != null && !errors.isEmpty();\n+        return !getProcessingErrors().isEmpty();\n     }\n \n     /**\n      * Checks whether any configuration errors have been reported.\n      *\n      * @return <code>true</code> if there were any configuration errors,\n      *         <code>false</code> otherwise\n+     *\n+     * @deprecated Use {@link #getConfigErrors()}.isEmpty()\n      */\n+    @Deprecated\n     public boolean hasConfigErrors() {\n-        return configErrors != null && !configErrors.isEmpty();\n+        return !getConfigErrors().isEmpty();\n     }\n \n     /**\n      * Checks whether no violations have been reported.\n      *\n      * @return <code>true</code> if no violations have been reported,\n      *         <code>false</code> otherwise\n+     *\n+     * @deprecated The {@link ReportTree} is deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d961b79421e6c84728a133dc7b6e502a1764b9"}, "originalPosition": 171}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODA5OTc4OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo0NTo1NlrOG6lNvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo0NTo1NlrOG6lNvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA4MDMxOA==", "bodyText": "Let's spend a sentence to explain, what this method checks:\nChecks whether there are no violations and no processing errors. That means, that PMD analysis yielded nothing to worry about.", "url": "https://github.com/pmd/pmd/pull/2680#discussion_r464080318", "createdAt": "2020-08-02T13:45:56Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "diffHunk": "@@ -436,6 +426,10 @@ public boolean hasMetrics() {\n         return metrics.iterator();\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d961b79421e6c84728a133dc7b6e502a1764b9"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODEwMTgwOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo0ODo0NlrOG6lOyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo0ODo0NlrOG6lOyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA4MDU4NA==", "bodyText": "We seem to keep the violations sorted by RuleViolationComparator.INSTANCE. Maybe that's worth mentioning, that the list of violations is actually a sorted list?", "url": "https://github.com/pmd/pmd/pull/2680#discussion_r464080584", "createdAt": "2020-08-02T13:48:46Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "diffHunk": "@@ -474,39 +477,89 @@ public boolean treeIsEmpty() {\n      * Returns an iteration over the reported violations.\n      *\n      * @return an iterator\n+     *\n+     * @deprecated The {@link ReportTree} is deprecated\n      */\n+    @Deprecated\n     public Iterator<RuleViolation> treeIterator() {\n         return violationTree.iterator();\n     }\n \n+    /**\n+     * @deprecated Use {@link #getViolations()}\n+     */\n+    @Deprecated\n     @Override\n     public Iterator<RuleViolation> iterator() {\n         return violations.iterator();\n     }\n \n+\n+    /**\n+     * Returns an unmodifiable list of violations that were suppressed.\n+     */\n+    public List<SuppressedViolation> getSuppressedRuleViolations() {\n+        return Collections.unmodifiableList(suppressedRuleViolations);\n+    }\n+\n+    /**\n+     * Returns an unmodifiable list of violations that have been\n+     * recorded until now. None of those violations were suppressed.\n+     */\n+    public List<RuleViolation> getViolations() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d961b79421e6c84728a133dc7b6e502a1764b9"}, "originalPosition": 210}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODEwNTEwOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo1MzoxN1rOG6lQTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo1MzoxN1rOG6lQTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA4MDk3NA==", "bodyText": "I think we should name this without abbreviation, since this is the only one, where we use abbrev.\nI think, it should be called getConfigurationErrors().", "url": "https://github.com/pmd/pmd/pull/2680#discussion_r464080974", "createdAt": "2020-08-02T13:53:17Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "diffHunk": "@@ -474,39 +477,89 @@ public boolean treeIsEmpty() {\n      * Returns an iteration over the reported violations.\n      *\n      * @return an iterator\n+     *\n+     * @deprecated The {@link ReportTree} is deprecated\n      */\n+    @Deprecated\n     public Iterator<RuleViolation> treeIterator() {\n         return violationTree.iterator();\n     }\n \n+    /**\n+     * @deprecated Use {@link #getViolations()}\n+     */\n+    @Deprecated\n     @Override\n     public Iterator<RuleViolation> iterator() {\n         return violations.iterator();\n     }\n \n+\n+    /**\n+     * Returns an unmodifiable list of violations that were suppressed.\n+     */\n+    public List<SuppressedViolation> getSuppressedRuleViolations() {\n+        return Collections.unmodifiableList(suppressedRuleViolations);\n+    }\n+\n+    /**\n+     * Returns an unmodifiable list of violations that have been\n+     * recorded until now. None of those violations were suppressed.\n+     */\n+    public List<RuleViolation> getViolations() {\n+        return Collections.unmodifiableList(violations);\n+    }\n+\n+\n+    /**\n+     * Returns an unmodifiable list of processing errors that have been\n+     * recorded until now.\n+     */\n+    public List<ProcessingError> getProcessingErrors() {\n+        return Collections.unmodifiableList(errors);\n+    }\n+\n+\n+    /**\n+     * Returns an unmodifiable list of configuration errors that have\n+     * been recorded until now.\n+     */\n+    public List<ConfigurationError> getConfigErrors() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d961b79421e6c84728a133dc7b6e502a1764b9"}, "originalPosition": 228}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODEwNTUwOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxMzo1Mzo1M1rOG6lQfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToxMToxOVrOG61gmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA4MTAyMw==", "bodyText": "The getter for the violations is only called getViolations and not getRuleViolations. In that sense, I think, this method should be called getSuppressedViolations().\nIf you agree, we need to create the new method getSuppressedViolations() and deprecated the existing getSuppressedRuleViolations().", "url": "https://github.com/pmd/pmd/pull/2680#discussion_r464081023", "createdAt": "2020-08-02T13:53:53Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "diffHunk": "@@ -474,39 +477,89 @@ public boolean treeIsEmpty() {\n      * Returns an iteration over the reported violations.\n      *\n      * @return an iterator\n+     *\n+     * @deprecated The {@link ReportTree} is deprecated\n      */\n+    @Deprecated\n     public Iterator<RuleViolation> treeIterator() {\n         return violationTree.iterator();\n     }\n \n+    /**\n+     * @deprecated Use {@link #getViolations()}\n+     */\n+    @Deprecated\n     @Override\n     public Iterator<RuleViolation> iterator() {\n         return violations.iterator();\n     }\n \n+\n+    /**\n+     * Returns an unmodifiable list of violations that were suppressed.\n+     */\n+    public List<SuppressedViolation> getSuppressedRuleViolations() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d961b79421e6c84728a133dc7b6e502a1764b9"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0NzI5MA==", "bodyText": "All of this sounds good. Will do", "url": "https://github.com/pmd/pmd/pull/2680#discussion_r464347290", "createdAt": "2020-08-03T11:11:19Z", "author": {"login": "oowekyala"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "diffHunk": "@@ -474,39 +477,89 @@ public boolean treeIsEmpty() {\n      * Returns an iteration over the reported violations.\n      *\n      * @return an iterator\n+     *\n+     * @deprecated The {@link ReportTree} is deprecated\n      */\n+    @Deprecated\n     public Iterator<RuleViolation> treeIterator() {\n         return violationTree.iterator();\n     }\n \n+    /**\n+     * @deprecated Use {@link #getViolations()}\n+     */\n+    @Deprecated\n     @Override\n     public Iterator<RuleViolation> iterator() {\n         return violations.iterator();\n     }\n \n+\n+    /**\n+     * Returns an unmodifiable list of violations that were suppressed.\n+     */\n+    public List<SuppressedViolation> getSuppressedRuleViolations() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA4MTAyMw=="}, "originalCommit": {"oid": "34d961b79421e6c84728a133dc7b6e502a1764b9"}, "originalPosition": 202}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 281, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}