{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTUzNDEz", "number": 2631, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1Nzo0NVrOEQO36Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowNTozOVrOEQPLSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDU2MzYxOnYy", "diffSide": "RIGHT", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/internal/CycloVisitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1Nzo0NVrOG0Rezg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTowMDowN1rOG1FuHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NTU1MA==", "bodyText": "I think, this would ignore the complexity of the block under the default label.\nCorrection: it probably does handle it, since descendants are counted, but a test case would be nice. Here's one that uses a switch expression, which is relevant to the other comment\nclass Foo {\n    void foo(int x) {     // +1\n        foo(switch (x) {\n            default -> {\n                if (a) { // +1\n                    yield 1;\n                } else {\n                    yield 2;\n                }\n            }\n        });\n    }\n}", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457465550", "createdAt": "2020-07-20T14:57:45Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/internal/CycloVisitor.java", "diffHunk": "@@ -65,13 +67,24 @@ public Object visit(ASTSwitchStatement node, Object data) {\n             }\n \n             if (considerBooleanPaths) {\n-                ((MutableInt) data).increment();\n+                ((MutableInt) data).add(label.findChildrenOfType(ASTExpression.class).size());\n             } else if (node.getNumChildren() > 1 + label.getIndexInParent()\n                     && node.getChild(label.getIndexInParent() + 1) instanceof ASTBlockStatement) {\n                 // an empty label is only counted if we count boolean paths\n                 ((MutableInt) data).increment();\n             }\n         }\n+\n+        for (ASTSwitchLabeledRule rule : node.findChildrenOfType(ASTSwitchLabeledRule.class)) {\n+            ASTSwitchLabel label = rule.getFirstChildOfType(ASTSwitchLabel.class);\n+            if (label.isDefault()) {\n+                continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMTQzOA==", "bodyText": "I'll try to add this case on Thursday....", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r458321438", "createdAt": "2020-07-21T19:00:07Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/internal/CycloVisitor.java", "diffHunk": "@@ -65,13 +67,24 @@ public Object visit(ASTSwitchStatement node, Object data) {\n             }\n \n             if (considerBooleanPaths) {\n-                ((MutableInt) data).increment();\n+                ((MutableInt) data).add(label.findChildrenOfType(ASTExpression.class).size());\n             } else if (node.getNumChildren() > 1 + label.getIndexInParent()\n                     && node.getChild(label.getIndexInParent() + 1) instanceof ASTBlockStatement) {\n                 // an empty label is only counted if we count boolean paths\n                 ((MutableInt) data).increment();\n             }\n         }\n+\n+        for (ASTSwitchLabeledRule rule : node.findChildrenOfType(ASTSwitchLabeledRule.class)) {\n+            ASTSwitchLabel label = rule.getFirstChildOfType(ASTSwitchLabel.class);\n+            if (label.isDefault()) {\n+                continue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NTU1MA=="}, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDU3NjI4OnYy", "diffSide": "RIGHT", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/internal/CycloVisitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1OTo0M1rOG0RmDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjozNDozMFrOG2IbFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NzQwNA==", "bodyText": "I see, all this applies only to switch statements? You added support for non-fallthrough switch branches, but this still needs to handle switch expressions", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457467404", "createdAt": "2020-07-20T14:59:43Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/internal/CycloVisitor.java", "diffHunk": "@@ -65,13 +67,24 @@ public Object visit(ASTSwitchStatement node, Object data) {\n             }\n \n             if (considerBooleanPaths) {\n-                ((MutableInt) data).increment();\n+                ((MutableInt) data).add(label.findChildrenOfType(ASTExpression.class).size());\n             } else if (node.getNumChildren() > 1 + label.getIndexInParent()\n                     && node.getChild(label.getIndexInParent() + 1) instanceof ASTBlockStatement) {\n                 // an empty label is only counted if we count boolean paths\n                 ((MutableInt) data).increment();\n             }\n         }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxNDI5Mw==", "bodyText": "I think the other test case was not sufficient. Eg the following fails, the complexity of the switch expr is not counted:\nclass Foo {\n    int bar() { return 1; }\n    void foo(int i) {                    // +1\n        int x = switch (i) {\n            case 1, 2, 3 -> bar();  // +3\n            case 4       -> bar();  // +1\n            default -> bar();\n        };\n    }\n}\nI'll push a fix", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r459414293", "createdAt": "2020-07-23T12:34:30Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/internal/CycloVisitor.java", "diffHunk": "@@ -65,13 +67,24 @@ public Object visit(ASTSwitchStatement node, Object data) {\n             }\n \n             if (considerBooleanPaths) {\n-                ((MutableInt) data).increment();\n+                ((MutableInt) data).add(label.findChildrenOfType(ASTExpression.class).size());\n             } else if (node.getNumChildren() > 1 + label.getIndexInParent()\n                     && node.getChild(label.getIndexInParent() + 1) instanceof ASTBlockStatement) {\n                 // an empty label is only counted if we count boolean paths\n                 ((MutableInt) data).increment();\n             }\n         }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NzQwNA=="}, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDYwNDU1OnYy", "diffSide": "RIGHT", "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowNDoxNlrOG0R2jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODo1ODo0NFrOG1FrIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MTYyOQ==", "bodyText": "Just being picky, the +1 is not for the switch, but for the method block\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    switch (x) {                            // +1\n          \n          \n            \n                    switch (x) {", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457471629", "createdAt": "2020-07-20T15:04:16Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "diffHunk": "@@ -389,6 +389,71 @@ class Foo {\n         for (int i = 0; i != import1Tokens.length && i != import2Tokens.length; i++) {\n         }\n     }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Multiple switch labels should count each</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 3.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                 // +1\n+            case 1, 2: foo(); break; // +2\n+            default: bar(); break;\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled blocks should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        boolean a, b;\n+        switch (x) {                            // +1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMDY3Mg==", "bodyText": "I think, being picky here, is extremely useful :) This hopefully avoids later questions.... It's important, that the test case is correct (including the comments). So, the \"+1\" should be added to line 427 then?", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r458320672", "createdAt": "2020-07-21T18:58:44Z", "author": {"login": "adangel"}, "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "diffHunk": "@@ -389,6 +389,71 @@ class Foo {\n         for (int i = 0; i != import1Tokens.length && i != import2Tokens.length; i++) {\n         }\n     }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Multiple switch labels should count each</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 3.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                 // +1\n+            case 1, 2: foo(); break; // +2\n+            default: bar(); break;\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled blocks should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        boolean a, b;\n+        switch (x) {                            // +1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MTYyOQ=="}, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDYwNjE1OnYy", "diffSide": "RIGHT", "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowNDoyOFrOG0R3ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowNDoyOFrOG0R3ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MTg0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void foo() {\n          \n          \n            \n                void foo() { // +1", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457471844", "createdAt": "2020-07-20T15:04:28Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "diffHunk": "@@ -389,6 +389,71 @@ class Foo {\n         for (int i = 0; i != import1Tokens.length && i != import2Tokens.length; i++) {\n         }\n     }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Multiple switch labels should count each</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 3.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                 // +1\n+            case 1, 2: foo(); break; // +2\n+            default: bar(); break;\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled blocks should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDYxMTYxOnYy", "diffSide": "RIGHT", "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowNToyNFrOG0R6xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowNToyNFrOG0R6xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MjcxMA==", "bodyText": "Same\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    switch (x) {                // +1\n          \n          \n            \n                    switch (x) {", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457472710", "createdAt": "2020-07-20T15:05:24Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "diffHunk": "@@ -389,6 +389,71 @@ class Foo {\n         for (int i = 0; i != import1Tokens.length && i != import2Tokens.length; i++) {\n         }\n     }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Multiple switch labels should count each</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 3.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                 // +1\n+            case 1, 2: foo(); break; // +2\n+            default: bar(); break;\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled blocks should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        boolean a, b;\n+        switch (x) {                            // +1\n+            case 1, 2 -> { if (a && b) bar(); } // +4\n+            default -> { bar(); }\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled expressions should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                // +1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDYxMzIwOnYy", "diffSide": "RIGHT", "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowNTozOVrOG0R7ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowNTozOVrOG0R7ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MjkzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void foo() {\n          \n          \n            \n                void foo() { // +1", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457472931", "createdAt": "2020-07-20T15:05:39Z", "author": {"login": "oowekyala"}, "path": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/metrics/impl/xml/CycloTest.xml", "diffHunk": "@@ -389,6 +389,71 @@ class Foo {\n         for (int i = 0; i != import1Tokens.length && i != import2Tokens.length; i++) {\n         }\n     }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Multiple switch labels should count each</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 3.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        switch (x) {                 // +1\n+            case 1, 2: foo(); break; // +2\n+            default: bar(); break;\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled blocks should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {\n+        int x=0;\n+        boolean a, b;\n+        switch (x) {                            // +1\n+            case 1, 2 -> { if (a && b) bar(); } // +4\n+            default -> { bar(); }\n+        }\n+    }\n+}\n+        ]]></code>\n+    </test-code>\n+\n+    <test-code>\n+        <description>Switch labeled expressions should count</description>\n+        <expected-problems>2</expected-problems>\n+        <expected-messages>\n+            <message>'Foo#bar()' has value 1.</message>\n+            <message>'Foo#foo()' has value 5.</message>\n+        </expected-messages>\n+        <code><![CDATA[\n+class Foo {\n+    void bar(){}\n+    void foo() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 248, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}