{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNzIwNTIw", "number": 2983, "title": "[java] LiteralsFirstInComparisons should consider constant fields", "bodyText": "Describe the PR\n\nThe issue is about a false negative: The PositionLiteralsFirstInComparisons rule in Java should consider constant fields as string literals and raise a warning to position these as the first argument in comparisons.\nThe warning is only to be triggered, if the field is:\na. static,\nb. final, and\nc. a String\nRelated issues\n\n\nFixes #575\n\nReady?\n\n\n Added unit tests for fixed bug/feature\n Passing all unit tests (tested via maven test lifecycle in the PMD Java project)\n Complete build ./mvnw clean verify passes (checked automatically by travis)\n Added (in-code) documentation (if needed)", "createdAt": "2020-12-21T20:58:27Z", "url": "https://github.com/pmd/pmd/pull/2983", "merged": true, "mergeCommit": {"oid": "49fbb90cb133f6933122c885cea1d8d9d711565d"}, "closed": true, "closedAt": "2021-01-07T18:57:56Z", "author": {"login": "ozangulle"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdm1QwtAH2gAyNTQzNzIwNTIwOmQwZmI4MWRlMWY5ZWI2MTY4OTNmMWM0YjdmMGJmNjNmYzA5ODJmMWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdt1ZDxAFqTU2MzU0MzI2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d0fb81de1f9eb616893f1c4b7f0bf63fc0982f1b", "author": {"user": {"login": "ozangulle", "name": "Ozan Gulle"}}, "url": "https://github.com/pmd/pmd/commit/d0fb81de1f9eb616893f1c4b7f0bf63fc0982f1b", "committedDate": "2020-12-16T20:49:38Z", "message": "LiteralsFirstInComparisonsRule also checks for constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae12a6db3542d6a491b3f750062b70b2a221668e", "author": {"user": {"login": "ozangulle", "name": "Ozan Gulle"}}, "url": "https://github.com/pmd/pmd/commit/ae12a6db3542d6a491b3f750062b70b2a221668e", "committedDate": "2020-12-16T21:09:11Z", "message": "Put duplicated code in a separate method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "129790ddfc6270c3592a51fae9dc0da0de001bcc", "author": {"user": {"login": "ozangulle", "name": "Ozan Gulle"}}, "url": "https://github.com/pmd/pmd/commit/129790ddfc6270c3592a51fae9dc0da0de001bcc", "committedDate": "2020-12-16T21:44:33Z", "message": "Fixed the order of imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bbf56ec064b62389d32e8ae8389cdbd47adeea8", "author": {"user": {"login": "ozangulle", "name": "Ozan Gulle"}}, "url": "https://github.com/pmd/pmd/commit/2bbf56ec064b62389d32e8ae8389cdbd47adeea8", "committedDate": "2020-12-21T20:37:09Z", "message": "Added a new test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49fbb90cb133f6933122c885cea1d8d9d711565d", "author": {"user": {"login": "ozangulle", "name": "Ozan Gulle"}}, "url": "https://github.com/pmd/pmd/commit/49fbb90cb133f6933122c885cea1d8d9d711565d", "committedDate": "2020-12-21T20:37:22Z", "message": "Changed naming of the method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNTQzMjY0", "url": "https://github.com/pmd/pmd/pull/2983#pullrequestreview-563543264", "createdAt": "2021-01-07T14:45:51Z", "commit": {"oid": "49fbb90cb133f6933122c885cea1d8d9d711565d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNDo0NTo1MVrOIPvI_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNDo0NTo1MVrOIPvI_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM3MTkwMw==", "bodyText": "This can be written as\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    && \"class java.lang.String\".equals(declaration.getType().toString())\n          \n          \n            \n                                    && java.lang.String.class.equals(declaration.getType())", "url": "https://github.com/pmd/pmd/pull/2983#discussion_r553371903", "createdAt": "2021-01-07T14:45:51Z", "author": {"login": "adangel"}, "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/bestpractices/LiteralsFirstInComparisonsRule.java", "diffHunk": "@@ -147,6 +159,25 @@ private boolean isStringLiteral(JavaNode node) {\n         return false;\n     }\n \n+    private boolean isConstantString(JavaNode node) {\n+        if (node instanceof ASTName) {\n+            ASTName name = (ASTName) node;\n+            ASTClassOrInterfaceBody classBody = name.getFirstParentOfType(ASTClassOrInterfaceBody.class);\n+            ASTClassOrInterfaceBodyDeclaration classOrInterfaceBodyDeclaration = classBody.getFirstChildOfType(ASTClassOrInterfaceBodyDeclaration.class);\n+            List<ASTFieldDeclaration> fieldDeclarations = classOrInterfaceBodyDeclaration.findChildrenOfType(ASTFieldDeclaration.class);\n+            for (ASTFieldDeclaration fieldDeclaration : fieldDeclarations) {\n+                ASTVariableDeclarator declaration = fieldDeclaration.getFirstChildOfType(ASTVariableDeclarator.class);\n+                if (declaration.getName().equals(name.getImage())\n+                        && \"class java.lang.String\".equals(declaration.getType().toString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49fbb90cb133f6933122c885cea1d8d9d711565d"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4615, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}