{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxODMwNDA1", "number": 2929, "title": "[scala] Add support for CPD-ON and CPD-OFF special comments", "bodyText": "Describe the PR\nThis enhancement adds support for CPD-ON and CPD-OFF special comments for Scala.  It does this by wrapping the scala.meta.tokens.Token with an adapter which satisfies the GenericToken interface, then uses the special comments processing from the existing BaseTokenFilter.\nA new test fixture and results file has been added to the test, which seems consistent with the level of other testing in this area.\nRelated issues\n\n\nFixes #2480\n\nReady?\n\n\n Added unit tests for fixed bug/feature\n Passing all unit tests\n Complete build ./mvnw clean verify passes (checked automatically by travis)\n Added (in-code) documentation (if needed)", "createdAt": "2020-11-16T17:53:46Z", "url": "https://github.com/pmd/pmd/pull/2929", "merged": true, "mergeCommit": {"oid": "035ec0a5370f409c34d305c6b86f86f16e9823a0"}, "closed": true, "closedAt": "2020-11-23T09:56:57Z", "author": {"login": "andyrobinson"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddD1IJgH2gAyNTIxODMwNDA1OmNiNWNlNWQ5ZDFlZjI5YWI5ZWEyZThmODA5MWYxY2M0YzgyZDYyMGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfRiiiAFqTUzNjI4MDgwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b", "author": {"user": {"login": "andyrobinson", "name": "Andy Robinson"}}, "url": "https://github.com/pmd/pmd/commit/cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b", "committedDate": "2020-11-16T12:08:47Z", "message": "[scala] adding support for CPD-ON and CPD-OFF special comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNjAyMzM3", "url": "https://github.com/pmd/pmd/pull/2929#pullrequestreview-531602337", "createdAt": "2020-11-16T18:40:39Z", "commit": {"oid": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODo0MDo0MFrOH0MY0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMDo0Mzo1MlrOH0QnsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ5MDk2MQ==", "bodyText": "It's the getBeginLine implementation that should add +1, same for the other methods", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524490961", "createdAt": "2020-11-16T18:40:40Z", "author": {"login": "oowekyala"}, "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -72,19 +75,21 @@ public void tokenize(SourceCode sourceCode, Tokens tokenEntries) throws IOExcept\n         // tokenize with a filter\n         try {\n             scala.meta.tokens.Tokens tokens = tokenizer.tokenize();\n-            ScalaTokenFilter filter = new ScalaTokenFilter(tokens.iterator());\n \n-            Token token;\n+            // use extensions to the standard PMD TokenManager and Filter\n+            ScalaTokenManager scalaTokenManager = new ScalaTokenManager(tokens.iterator());\n+            ScalaTokenFilter filter = new ScalaTokenFilter(scalaTokenManager);\n+\n+            GenericToken token;\n             while ((token = filter.getNextToken()) != null) {\n-                if (StringUtils.isEmpty(token.text())) {\n+                if (StringUtils.isEmpty(token.getImage())) {\n                     continue;\n                 }\n-                Position pos = token.pos();\n-                TokenEntry cpdToken = new TokenEntry(token.text(),\n+                TokenEntry cpdToken = new TokenEntry(token.getImage(),\n                                                      filename,\n-                                                     pos.startLine() + 1,\n-                                                     pos.startColumn() + 1,\n-                                                     pos.endColumn() + 1);\n+                                                     token.getBeginLine() + 1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU0Mzk4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return token != null && (token.text().startsWith(\"//\") || token.text().startsWith(\"/*\"));\n          \n          \n            \n                        return token instanceof Token.Comment;", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524543983", "createdAt": "2020-11-16T20:13:36Z", "author": {"login": "oowekyala"}, "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -137,5 +155,27 @@ private boolean skipToken(Token token) {\n             }\n             return skip;\n         }\n+\n+        private boolean isComment(Token token) {\n+            return token != null && (token.text().startsWith(\"//\") || token.text().startsWith(\"/*\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU0NzQ3MQ==", "bodyText": "Shouldn't CPD-OFF tokens be filtered out too? In other languages I think that's how it works", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524547471", "createdAt": "2020-11-16T20:19:58Z", "author": {"login": "oowekyala"}, "path": "pmd-scala-modules/pmd-scala-common/src/test/resources/net/sourceforge/pmd/lang/scala/cpd/testdata/special_comments.txt", "diffHunk": "@@ -0,0 +1,52 @@\n+    [Image] or [Truncated image[            Bcol      Ecol\n+L1\n+    [// Testing CPD suppression]            1         27\n+L3\n+    [// Irrelevant comment]                 1         22\n+L4\n+    [// CPD-OFF]                            1         11", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1Mjk1Mw==", "bodyText": "Please either implement this or throw NotImplementedException (from lang3) or UnsupportedOperationException", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524552953", "createdAt": "2020-11-16T20:29:52Z", "author": {"login": "oowekyala"}, "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenAdapter.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.cpd;\n+\n+import net.sourceforge.pmd.lang.ast.GenericToken;\n+\n+import scala.meta.tokens.Token;\n+\n+/**\n+ * Adapts the scala.meta.tokens.Token so that it can be used with the generic BaseTokenFilter\n+ */\n+public class ScalaTokenAdapter implements GenericToken {\n+\n+    private Token token;\n+    private GenericToken previousComment;\n+\n+    ScalaTokenAdapter(Token token, GenericToken comment) {\n+        this.token = token;\n+        this.previousComment = comment;\n+    }\n+\n+    @Override\n+    public GenericToken getNext() {\n+        // not required\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1OTczNw==", "bodyText": "If the token is a comment it should actually not be returned, to implement this interface correctly. This is why your CPD-OFF comments are not filtered out (arguably all comments should actually be filtered out).", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524559737", "createdAt": "2020-11-16T20:42:40Z", "author": {"login": "oowekyala"}, "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -125,7 +137,13 @@ Token getNextToken() {\n                 token = tokenIter.next();\n             } while (token != null && skipToken(token) && tokenIter.hasNext());\n \n-            return token;\n+            result = new ScalaTokenAdapter(token, previousComment);\n+\n+            if (isComment(token)) {\n+                previousComment = result;\n+            }\n+\n+            return result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU2MDMwNQ==", "bodyText": "Would also be nice to add a toString to this class (any autogenerated one will do)", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524560305", "createdAt": "2020-11-16T20:43:52Z", "author": {"login": "oowekyala"}, "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenAdapter.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.cpd;\n+\n+import net.sourceforge.pmd.lang.ast.GenericToken;\n+\n+import scala.meta.tokens.Token;\n+\n+/**\n+ * Adapts the scala.meta.tokens.Token so that it can be used with the generic BaseTokenFilter\n+ */\n+public class ScalaTokenAdapter implements GenericToken {\n+\n+    private Token token;\n+    private GenericToken previousComment;\n+\n+    ScalaTokenAdapter(Token token, GenericToken comment) {\n+        this.token = token;\n+        this.previousComment = comment;\n+    }\n+\n+    @Override\n+    public GenericToken getNext() {\n+        // not required\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1Mjk1Mw=="}, "originalCommit": {"oid": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "035ec0a5370f409c34d305c6b86f86f16e9823a0", "author": {"user": {"login": "andyrobinson", "name": "Andy Robinson"}}, "url": "https://github.com/pmd/pmd/commit/035ec0a5370f409c34d305c6b86f86f16e9823a0", "committedDate": "2020-11-18T13:49:32Z", "message": "[scala] fixing support for CPD-ON and CPD-OFF special comments\n- minor fix ups as per PR comments\n- comments are skipped and no longer tokenised"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjgwODA2", "url": "https://github.com/pmd/pmd/pull/2929#pullrequestreview-536280806", "createdAt": "2020-11-23T09:10:47Z", "commit": {"oid": "035ec0a5370f409c34d305c6b86f86f16e9823a0"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxMDo0N1rOH4EeIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToxMzoxNVrOH4EjZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1NTU1NQ==", "bodyText": "I think, this class can be static", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r528555555", "createdAt": "2020-11-23T09:10:47Z", "author": {"login": "adangel"}, "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -103,29 +108,39 @@ public void tokenize(SourceCode sourceCode, Tokens tokenEntries) throws IOExcept\n     }\n \n     /**\n-     * Token Filter skips un-helpful tokens to only register important tokens\n+     * Implementation of the generic Token Manager, also skips un-helpful tokens and comments to only register important tokens\n      * and patterns.\n+     *\n+     * Keeps track of comments, for special comment processing\n      */\n-    private static class ScalaTokenFilter {\n+    private class ScalaTokenManager implements TokenManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "035ec0a5370f409c34d305c6b86f86f16e9823a0"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1NjkwMw==", "bodyText": "can be static as well", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r528556903", "createdAt": "2020-11-23T09:13:15Z", "author": {"login": "adangel"}, "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -137,5 +152,27 @@ private boolean skipToken(Token token) {\n             }\n             return skip;\n         }\n+\n+        private boolean isComment(Token token) {\n+            return token instanceof Token.Comment;\n+        }\n+\n+        @Override\n+        public void setFileName(String fileName) {\n+            throw new UnsupportedOperationException(\"setFileName deprecated\");\n+        }\n+    }\n+\n+    private class ScalaTokenFilter extends BaseTokenFilter<ScalaTokenAdapter> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "035ec0a5370f409c34d305c6b86f86f16e9823a0"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4588, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}