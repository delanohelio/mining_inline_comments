{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMDU0MzUx", "number": 2407, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwOTozNzoyMlrODxMWQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwOTo0MjozOFrODxMa7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTA5MTIzOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/AbstractASTXPathHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwOTozNzoyMlrOGEhysA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwOTozNzoyMlrOGEhysA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQwMTEzNg==", "bodyText": "Btw. this API must definitely change with PMD 7 - we are exposing here a implementation detail (that we use Saxon). And it happens, that the way, how custom functions are registered, changed with Saxon 9.5... which makes the need for a implementation agnostic API relevant...", "url": "https://github.com/pmd/pmd/pull/2407#discussion_r407401136", "createdAt": "2020-04-13T09:37:22Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/AbstractASTXPathHandler.java", "diffHunk": "@@ -25,4 +25,14 @@ public Navigator getNavigator() {\n     public void initialize(IndependentContext context, Language language, Class<?> functionsClass) {\n         context.declareNamespace(\"pmd-\" + language.getTerseName(), \"java:\" + functionsClass.getName());\n     }\n+\n+    @Override\n+    public void initialize() {\n+        // override if needed\n+    }\n+\n+    @Override\n+    public void initialize(IndependentContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60d443963c82d360d5a6169bba02bc0938ee1d7d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTEwMzE4OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/XPathRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwOTo0MjozOFrOGEh50w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwOTo0MjozOFrOGEh50w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQwMjk2Mw==", "bodyText": "Since this is an enum, we can use version == XPathVersion.XPATH_1_0 here\nUpdate: I've changed this while merging", "url": "https://github.com/pmd/pmd/pull/2407#discussion_r407402963", "createdAt": "2020-04-13T09:42:38Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/XPathRule.java", "diffHunk": "@@ -124,13 +171,21 @@ public void evaluate(final Node node, final RuleContext data) {\n      * engine in which the query will be run it looks at the XPath version.\n      */\n     private void initXPathRuleQuery() {\n-        String xpath = getProperty(XPATH_DESCRIPTOR);\n-        String version = getProperty(VERSION_DESCRIPTOR);\n+        String xpath = getXPathExpression();\n+        XPathVersion version = getVersion();\n \n-        initRuleQueryBasedOnVersion(version);\n+        if (version == null) {\n+            throw new IllegalStateException(\"Invalid XPath version, should have been caught by Rule::dysfunctionReason\");\n+        }\n+\n+        if (version.equals(XPathVersion.XPATH_1_0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60d443963c82d360d5a6169bba02bc0938ee1d7d"}, "originalPosition": 147}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 370, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}