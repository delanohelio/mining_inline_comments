{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MzM4MzA4", "number": 2807, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzoxNDo1OFrOEwwtMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzozODoxOVrOEwxXYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTY1MTA0OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/ParametricRuleViolation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzoxNDo1OFrOHmhKig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzoxNDo1OFrOHmhKig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE1MTMwNg==", "bodyText": "Deprecated or DeprecatedUntil700?\nIf deprecated, we need to merge this back to master -> API change...", "url": "https://github.com/pmd/pmd/pull/2807#discussion_r510151306", "createdAt": "2020-10-22T13:14:58Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/ParametricRuleViolation.java", "diffHunk": "@@ -34,26 +35,39 @@\n     // RuleViolationFactory to support identifying without a Node, and update\n     // Rule base classes too.\n     // TODO we never need a node. We just have to have a \"position\", ie line/column, or offset, + file, whatever\n+\n+    /**\n+     * @deprecated Use {@link #ParametricRuleViolation(Rule, String, Node, String)}\n+     */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTY2OTg5OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ParserOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzoxOTowOVrOHmhWXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzoxOTowOVrOHmhWXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE1NDMzNQ==", "bodyText": "I think, we don't need a null check here anymore, do we?", "url": "https://github.com/pmd/pmd/pull/2807#discussion_r510154335", "createdAt": "2020-10-22T13:19:09Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ParserOptions.java", "diffHunk": "@@ -30,11 +37,11 @@ public boolean equals(Object obj) {\n             return false;\n         }\n         final ParserOptions that = (ParserOptions) obj;\n-        return this.suppressMarker.equals(that.suppressMarker);\n+        return this.getSuppressMarker().equals(that.getSuppressMarker());\n     }\n \n     @Override\n     public int hashCode() {\n-        return suppressMarker != null ? suppressMarker.hashCode() : 0;\n+        return getSuppressMarker() != null ? getSuppressMarker().hashCode() : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTY4Mzc1OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/RuleViolationFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzoyMTo1OVrOHmhexA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzoyMTo1OVrOHmhexA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE1NjQ4NA==", "bodyText": "ruleContext.getSourceCodeFilename() only returns the simple name. We need to use here String.valueOf(ruleContext.getSourceCodeFile()). I'll fix that on pmd/7.0.x and add a unit test (hopefully not forgetting that there is also windows...)", "url": "https://github.com/pmd/pmd/pull/2807#discussion_r510156484", "createdAt": "2020-10-22T13:21:59Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/RuleViolationFactory.java", "diffHunk": "@@ -34,8 +44,43 @@\n      * @param args\n      *            arguments to embed in the rule violation message\n      */\n-    void addViolation(RuleContext ruleContext, Rule rule, @Nullable Node node, String message, Object[] args);\n+    @Deprecated\n+    default void addViolation(RuleContext ruleContext, Rule rule, @NonNull Node node, @NonNull String message, Object[] args) {\n+        addViolation(ruleContext, rule, node, message, node.getBeginLine(), node.getEndLine(), args);\n+    }\n+\n+\n+    @Deprecated\n+    default void addViolation(RuleContext ruleContext, Rule rule, @NonNull Node node, @NonNull String message, int beginLine, int endLine, @NonNull Object[] args) {\n+        Objects.requireNonNull(node);\n+        Objects.requireNonNull(message);\n+        Objects.requireNonNull(args);\n+        RuleViolation rv = formatViolation(rule, node, ruleContext.getSourceCodeFilename(), message, args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTY4OTgzOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/RuleViolationFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzoyMzoyM1rOHmhimQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzoyMzoyM1rOHmhimQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE1NzQ2NQ==", "bodyText": "Probably DeprecatedUntil700 as well?", "url": "https://github.com/pmd/pmd/pull/2807#discussion_r510157465", "createdAt": "2020-10-22T13:23:23Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/RuleViolationFactory.java", "diffHunk": "@@ -34,8 +44,43 @@\n      * @param args\n      *            arguments to embed in the rule violation message\n      */\n-    void addViolation(RuleContext ruleContext, Rule rule, @Nullable Node node, String message, Object[] args);\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTc1OTA0OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ParserOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzozODoxOVrOHmiNqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzozODoxOVrOHmiNqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE2ODQ4OQ==", "bodyText": "I think, we should deprecate this field on master...", "url": "https://github.com/pmd/pmd/pull/2807#discussion_r510168489", "createdAt": "2020-10-22T13:38:19Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ParserOptions.java", "diffHunk": "@@ -4,20 +4,27 @@\n \n package net.sourceforge.pmd.lang;\n \n+import java.util.Objects;\n+\n+import org.checkerframework.checker.nullness.qual.NonNull;\n+\n+import net.sourceforge.pmd.PMD;\n+\n /**\n  * Represents a set of configuration options for a {@link Parser}. For each\n  * unique combination of ParserOptions a Parser will be used to create an AST.\n  * Therefore, implementations must implement {@link Object#equals(Object)} and\n  * {@link Object#hashCode()}.\n  */\n public class ParserOptions {\n-    protected String suppressMarker;\n+    private String suppressMarker = PMD.SUPPRESS_MARKER;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649ad9975519da276a33840a29ce446f7dc46483"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 168, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}