{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MzkzNjUz", "number": 321, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoxMDoxNFrOETxQXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoxMjo1NlrOETxT-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTY1NDA1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerWebServerTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoxMDoxNFrOG5sN6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoxNDo0OVrOG5sXrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0NjQ3Mw==", "bodyText": "Are we trying to restore oldBindHost to some default value here? If so, should it be done in setUp() ?\nSame for others.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/321#discussion_r463146473", "createdAt": "2020-07-30T17:10:14Z", "author": {"login": "vigyasharma"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerWebServerTest.java", "diffHunk": "@@ -70,9 +70,13 @@ public void tearDown() {\n         // Unset all SSL settings\n         if (oldBindHost != null) {\n             PluginSettings.instance().overrideProperty(PerformanceAnalyzerWebServer.WEBSERVICE_BIND_HOST_NAME, oldBindHost);\n+        } else {\n+            PluginSettings.instance().overrideProperty(PerformanceAnalyzerWebServer.WEBSERVICE_BIND_HOST_NAME, \"localhost\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d0b3d43398d770c2175648f49d7d8a09defb63"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0NzYzNg==", "bodyText": "Ah wait, this is for across tests. Got it.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/321#discussion_r463147636", "createdAt": "2020-07-30T17:12:21Z", "author": {"login": "vigyasharma"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerWebServerTest.java", "diffHunk": "@@ -70,9 +70,13 @@ public void tearDown() {\n         // Unset all SSL settings\n         if (oldBindHost != null) {\n             PluginSettings.instance().overrideProperty(PerformanceAnalyzerWebServer.WEBSERVICE_BIND_HOST_NAME, oldBindHost);\n+        } else {\n+            PluginSettings.instance().overrideProperty(PerformanceAnalyzerWebServer.WEBSERVICE_BIND_HOST_NAME, \"localhost\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0NjQ3Mw=="}, "originalCommit": {"oid": "77d0b3d43398d770c2175648f49d7d8a09defb63"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0ODk3Mw==", "bodyText": "Let's take oldBindHost as an example. If oldBindHost is null then after this test class ran, we would previously keep the value that PerformanceAnalyzerWebServer changed WEBSERVICE_BIND_HOST_NAME to. This could lead to other tests failing.\nThe reason this runs as part of a tearDown is to make sure that everything is reset after the test class finishes running.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/321#discussion_r463148973", "createdAt": "2020-07-30T17:14:49Z", "author": {"login": "sidheart"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerWebServerTest.java", "diffHunk": "@@ -70,9 +70,13 @@ public void tearDown() {\n         // Unset all SSL settings\n         if (oldBindHost != null) {\n             PluginSettings.instance().overrideProperty(PerformanceAnalyzerWebServer.WEBSERVICE_BIND_HOST_NAME, oldBindHost);\n+        } else {\n+            PluginSettings.instance().overrideProperty(PerformanceAnalyzerWebServer.WEBSERVICE_BIND_HOST_NAME, \"localhost\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0NjQ3Mw=="}, "originalCommit": {"oid": "77d0b3d43398d770c2175648f49d7d8a09defb63"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTY2MzMxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ResourceHeatMapGraphTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoxMjo1NlrOG5sTtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDoyNzo0MVrOG5yp3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0Nzk1OA==", "bodyText": "Why is this sleep needed?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/321#discussion_r463147958", "createdAt": "2020-07-30T17:12:56Z", "author": {"login": "vigyasharma"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ResourceHeatMapGraphTest.java", "diffHunk": "@@ -151,6 +150,12 @@ public static void shutdown() {\n     clientServers.getHttpServer().stop(0);\n     clientServers.getNetServer().stop();\n     clientServers.getNetClient().stop();\n+\n+    try {\n+      Thread.sleep(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d0b3d43398d770c2175648f49d7d8a09defb63"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzOTg1OQ==", "bodyText": "It isn't strictly necessary, I'm mimicking similar logic from RcaControllerTest which does this sleep after stopping its clients and servers.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/321#discussion_r463239859", "createdAt": "2020-07-30T20:03:20Z", "author": {"login": "sidheart"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ResourceHeatMapGraphTest.java", "diffHunk": "@@ -151,6 +150,12 @@ public static void shutdown() {\n     clientServers.getHttpServer().stop(0);\n     clientServers.getNetServer().stop();\n     clientServers.getNetClient().stop();\n+\n+    try {\n+      Thread.sleep(1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0Nzk1OA=="}, "originalCommit": {"oid": "77d0b3d43398d770c2175648f49d7d8a09defb63"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1MTkzNA==", "bodyText": "nit: Maybe it\u2019s a good idea to abstract the shutdown logic with sleep into its own method so that we don\u2019t have to carry the sleep change wherever we use shutdown?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/321#discussion_r463251934", "createdAt": "2020-07-30T20:27:41Z", "author": {"login": "ktkrg"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ResourceHeatMapGraphTest.java", "diffHunk": "@@ -151,6 +150,12 @@ public static void shutdown() {\n     clientServers.getHttpServer().stop(0);\n     clientServers.getNetServer().stop();\n     clientServers.getNetClient().stop();\n+\n+    try {\n+      Thread.sleep(1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0Nzk1OA=="}, "originalCommit": {"oid": "77d0b3d43398d770c2175648f49d7d8a09defb63"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2313, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}