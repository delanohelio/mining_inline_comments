{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMjUzODA4", "number": 414, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMzowMDo1NVrOEhcYRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoxNzozM1rOEiRtyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNTAzNDI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMzowMDo1NVrOHOwxxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMzozNDo1M1rOHOxarg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0MTI4Ng==", "bodyText": "What happens when there are more than 2 workload type. If we dont want them in a list, can we use numbers to denote their priority? Also can you update the comment if we are changing it", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485241286", "createdAt": "2020-09-08T23:00:55Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java", "diffHunk": "@@ -26,7 +24,8 @@\n  *     // Decreasing order of priority for the type of workload we can expect on the cluster.\n  *     // Priority order in the list goes from most expected to the lease expected workload type.\n  *     \"workload-type\": {\n- *       \"priority-order\": [\"ingest\", \"search\"]\n+ *       \"prefer-ingest\": true,\n+ *       \"prefer-search\": false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1MTc1OA==", "bodyText": "I actually had a discussion with Vigya on this in my previous PR. The problem with setting workload as a list is we have to maintain the string parsing logic inside the Config object and the priority list does not allow customer to specify the scenario if both search/ingest are equally important to customer or if customer simply don't have any preference.\nSo we created two options here instead so that customer can explicitly specific whether search/ingest is preferable.\nThe comments has been updated in the WorkLoaderConfig.java", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485251758", "createdAt": "2020-09-08T23:34:53Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java", "diffHunk": "@@ -26,7 +24,8 @@\n  *     // Decreasing order of priority for the type of workload we can expect on the cluster.\n  *     // Priority order in the list goes from most expected to the lease expected workload type.\n  *     \"workload-type\": {\n- *       \"priority-order\": [\"ingest\", \"search\"]\n+ *       \"prefer-ingest\": true,\n+ *       \"prefer-search\": false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0MTI4Ng=="}, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODgwODc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODozMToxNFrOHPUqTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTo0MDo1MVrOHQDIKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTE5Ng==", "bodyText": "step count will be a part of cacheSettingConfig right? Is there a reason why we are moving to actionConfig?\nWill it be common parameter for cache and queue?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485829196", "createdAt": "2020-09-09T18:31:14Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfig.java", "diffHunk": "@@ -68,7 +68,7 @@ public CacheActionConfig(RcaConf conf) {\n     cacheSettingsConfig = new NestedConfig(\"cache-settings\", actionConfig);\n     fieldDataCacheConfig = new FieldDataCacheConfig(cacheSettingsConfig);\n     shardRequestCacheConfig = new ShardRequestCacheConfig(cacheSettingsConfig);\n-    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, cacheSettingsConfig.getValue(),\n+    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, actionConfig,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU5MDUwNw==", "bodyText": "step count is indeed part of the cacheSettingConfig. But here we need to pass the parent Map<> object as a parameter in the constructor of the Config class", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r486590507", "createdAt": "2020-09-10T19:40:51Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfig.java", "diffHunk": "@@ -68,7 +68,7 @@ public CacheActionConfig(RcaConf conf) {\n     cacheSettingsConfig = new NestedConfig(\"cache-settings\", actionConfig);\n     fieldDataCacheConfig = new FieldDataCacheConfig(cacheSettingsConfig);\n     shardRequestCacheConfig = new ShardRequestCacheConfig(cacheSettingsConfig);\n-    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, cacheSettingsConfig.getValue(),\n+    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, actionConfig,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTE5Ng=="}, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODgwOTQ0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODozMToyNlrOHPUqvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODozMToyNlrOHPUqvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTMwOA==", "bodyText": "same as above", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485829308", "createdAt": "2020-09-09T18:31:26Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java", "diffHunk": "@@ -67,7 +67,7 @@ public QueueActionConfig(RcaConf conf) {\n     queueSettingsConfig = new NestedConfig(\"queue-settings\", actionConfig);\n     searchQueueConfig = new SearchQueueConfig(queueSettingsConfig);\n     writeQueueConfig = new WriteQueueConfig(queueSettingsConfig);\n-    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, queueSettingsConfig.getValue(),\n+    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, actionConfig,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODgxMjk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODozMjozNVrOHPUtBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTozMzoxNFrOHQC5DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTg5NA==", "bodyText": "We might need to update this comment right?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485829894", "createdAt": "2020-09-09T18:32:35Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java", "diffHunk": "@@ -26,7 +24,8 @@\n  *     // Decreasing order of priority for the type of workload we can expect on the cluster.\n  *     // Priority order in the list goes from most expected to the lease expected workload type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4NjYzNw==", "bodyText": "done", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r486586637", "createdAt": "2020-09-10T19:33:14Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java", "diffHunk": "@@ -26,7 +24,8 @@\n  *     // Decreasing order of priority for the type of workload we can expect on the cluster.\n  *     // Priority order in the list goes from most expected to the lease expected workload type.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTg5NA=="}, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODgxOTQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODozNDozMlrOHPUxEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTozNToxM1rOHQC84w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMDkyOQ==", "bodyText": "This is confusing. I notice you have changed to use actionConfig. In that case this should be outside queue-settings block right?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485830929", "createdAt": "2020-09-09T18:34:32Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java", "diffHunk": "@@ -36,7 +36,7 @@\n  *       \"total-step-count\": 20,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4NzYxOQ==", "bodyText": "this is the step count to divide the range of queue size into steps. We can specify different step count in cache if we want to have different granularity", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r486587619", "createdAt": "2020-09-10T19:35:13Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java", "diffHunk": "@@ -36,7 +36,7 @@\n  *       \"total-step-count\": 20,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMDkyOQ=="}, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODgzNDg4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/DeciderActionParser.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODozODo1N1rOHPU6Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTozNTo0M1rOHQC96g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMzI4Mw==", "bodyText": "As we are using this in test, can we rename to DeciderActionParserUtil or put it under util folder?\nThis can avoid confusion between src files and test files", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485833283", "createdAt": "2020-09-09T18:38:57Z", "author": {"login": "sruti1312"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/DeciderActionParser.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.deciders;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.Action;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ModifyCacheMaxSizeAction;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ModifyQueueCapacityAction;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceEnum;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class DeciderActionParser {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3MDk5OA==", "bodyText": "+1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485970998", "createdAt": "2020-09-09T23:11:12Z", "author": {"login": "sidheart"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/DeciderActionParser.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.deciders;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.Action;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ModifyCacheMaxSizeAction;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ModifyQueueCapacityAction;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceEnum;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class DeciderActionParser {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMzI4Mw=="}, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4Nzg4Mg==", "bodyText": "good point. Let me rename this class", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r486587882", "createdAt": "2020-09-10T19:35:43Z", "author": {"login": "rguo-aws"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/DeciderActionParser.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.deciders;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.Action;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ModifyCacheMaxSizeAction;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ModifyQueueCapacityAction;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceEnum;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class DeciderActionParser {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMzI4Mw=="}, "originalCommit": {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Mzc3Mjg4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfigTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoxNzozM1rOHQEOxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoxNzozM1rOHQEOxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwODU4Mg==", "bodyText": "As per your comment\nstep count is indeed part of the cacheSettingConfig. But here we need to pass the parent Map<> object as a parameter in the constructor of the Config class\nIn that case this step count might need to be inside the cache-settings block right?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r486608582", "createdAt": "2020-09-10T20:17:33Z", "author": {"login": "sruti1312"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfigTest.java", "diffHunk": "@@ -105,4 +105,48 @@ public void testInvalidCacheType() throws Exception {\n     CacheActionConfig cacheActionConfig = new CacheActionConfig(conf);\n     cacheActionConfig.getThresholdConfig(ResourceEnum.SEARCH_THREADPOOL).upperBound();\n   }\n+\n+  @Test\n+  public void testGetStepSize() throws Exception {\n+    String configStr =\n+        \"{\"\n+          + \"\\\"action-config-settings\\\": { \"\n+              + \"\\\"cache-settings\\\": { \"\n+                  + \"\\\"fielddata\\\": { \"\n+                      + \"\\\"upper-bound\\\": 0.8, \"\n+                      + \"\\\"lower-bound\\\": 0.2 \"\n+                  + \"}, \"\n+                  + \"\\\"shard-request\\\": { \"\n+                      + \"\\\"upper-bound\\\": 0.08, \"\n+                      + \"\\\"lower-bound\\\": 0.01 \"\n+                  + \"} \"\n+              + \"} \"\n+          + \"} \"\n+      + \"}\";\n+    RcaConf conf = new RcaConf();\n+    conf.readConfigFromString(configStr);\n+    CacheActionConfig cacheActionConfig = new CacheActionConfig(conf);\n+    assertEquals(0.03, cacheActionConfig.getStepSize(ResourceEnum.FIELD_DATA_CACHE), 0.0001);\n+    assertEquals(0.0035, cacheActionConfig.getStepSize(ResourceEnum.SHARD_REQUEST_CACHE), 0.0001);\n+    configStr =\n+        \"{\"\n+          + \"\\\"action-config-settings\\\": { \"\n+              + \"\\\"total-step-count\\\": 5,\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6816e2fdddbb778f9bb0b9c124fcf1a7fcad5a2"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2387, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}