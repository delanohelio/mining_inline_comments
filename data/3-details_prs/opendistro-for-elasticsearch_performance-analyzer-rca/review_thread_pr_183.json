{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMzQwMTEz", "number": 183, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxOTowMjoxOFrOD59Fww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMzozMDoxMVrOD6zvGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDk2MzIzOnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxOTowMjoxOFrOGRhPJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMzo0ODowNVrOGS2mfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyMzUyNA==", "bodyText": "Maybe instead of adding to the selected includes, we should remove the include list ? That will put the entire repo through coverage validation (modulo the excludes).", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/183#discussion_r421023524", "createdAt": "2020-05-06T19:02:18Z", "author": {"login": "yojs"}, "path": "build.gradle", "diffHunk": "@@ -123,7 +123,8 @@ jacocoTestReport {\n         classDirectories.from = files(classDirectories.files.collect {\n             fileTree(dir: it,\n                     include: [\n-                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/**'\n+                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/**',\n+                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/**'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1baf9ce581f553204198df8af22967ff05d2b9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk4NTA0Mw==", "bodyText": "I have updated it to generate test reports for the entire repo. But this wouldn't validate if the coverage is above 80%. We don't have the coverage of entire repo above 80%. It is currently at around 60%.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/183#discussion_r421985043", "createdAt": "2020-05-08T07:18:03Z", "author": {"login": "aditjind"}, "path": "build.gradle", "diffHunk": "@@ -123,7 +123,8 @@ jacocoTestReport {\n         classDirectories.from = files(classDirectories.files.collect {\n             fileTree(dir: it,\n                     include: [\n-                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/**'\n+                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/**',\n+                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyMzUyNA=="}, "originalCommit": {"oid": "ee1baf9ce581f553204198df8af22967ff05d2b9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQxNDMzNQ==", "bodyText": "Which repos lack UTs ? Can you create an issue to track this ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/183#discussion_r422414335", "createdAt": "2020-05-08T23:09:37Z", "author": {"login": "yojs"}, "path": "build.gradle", "diffHunk": "@@ -123,7 +123,8 @@ jacocoTestReport {\n         classDirectories.from = files(classDirectories.files.collect {\n             fileTree(dir: it,\n                     include: [\n-                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/**'\n+                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/**',\n+                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyMzUyNA=="}, "originalCommit": {"oid": "ee1baf9ce581f553204198df8af22967ff05d2b9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQyMjE0MA==", "bodyText": "#189", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/183#discussion_r422422140", "createdAt": "2020-05-08T23:48:05Z", "author": {"login": "aditjind"}, "path": "build.gradle", "diffHunk": "@@ -123,7 +123,8 @@ jacocoTestReport {\n         classDirectories.from = files(classDirectories.files.collect {\n             fileTree(dir: it,\n                     include: [\n-                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/**'\n+                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/**',\n+                            '**/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyMzUyNA=="}, "originalCommit": {"oid": "ee1baf9ce581f553204198df8af22967ff05d2b9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjA1OTA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMTo0ODo0N1rOGRrgww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozNzowOVrOGSJIiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE5MTg3NQ==", "bodyText": "Why are we not using MetricsParesr.extractEntryData ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/183#discussion_r421191875", "createdAt": "2020-05-07T01:48:47Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessor.java", "diffHunk": "@@ -739,6 +737,29 @@ public void emitNodeMetrics(long currWindowStartTime, MetricsDB metricsDB) throw\n     }\n   }\n \n+  /**\n+   * An example value is this: current_time:1566413987194 StartTime:1566413987194 ItemCount:359\n+   * IndexName:nyc_taxis ShardID:25 Primary:true Each pair is separated by new line and the key and\n+   * value within each pair is separated by \":\" This function just parses the string and generates\n+   * the map as such.\n+   *\n+   * @param eventValue The value input to the helper function.\n+   * @return Returns a map of key value pairs\n+   */\n+  static Map<String, String> extractEntryData(String eventValue) {\n+    String[] lines = eventValue.split(System.lineSeparator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1baf9ce581f553204198df8af22967ff05d2b9"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMwOTg1MQ==", "bodyText": "I have removed the file MetricsParser.java altogether. None of the functions in it were being used and only this method was being used in a few places.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/183#discussion_r421309851", "createdAt": "2020-05-07T07:54:55Z", "author": {"login": "aditjind"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessor.java", "diffHunk": "@@ -739,6 +737,29 @@ public void emitNodeMetrics(long currWindowStartTime, MetricsDB metricsDB) throw\n     }\n   }\n \n+  /**\n+   * An example value is this: current_time:1566413987194 StartTime:1566413987194 ItemCount:359\n+   * IndexName:nyc_taxis ShardID:25 Primary:true Each pair is separated by new line and the key and\n+   * value within each pair is separated by \":\" This function just parses the string and generates\n+   * the map as such.\n+   *\n+   * @param eventValue The value input to the helper function.\n+   * @return Returns a map of key value pairs\n+   */\n+  static Map<String, String> extractEntryData(String eventValue) {\n+    String[] lines = eventValue.split(System.lineSeparator());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE5MTg3NQ=="}, "originalCommit": {"oid": "ee1baf9ce581f553204198df8af22967ff05d2b9"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NzE5NQ==", "bodyText": "Awesome !", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/183#discussion_r421677195", "createdAt": "2020-05-07T17:37:09Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessor.java", "diffHunk": "@@ -739,6 +737,29 @@ public void emitNodeMetrics(long currWindowStartTime, MetricsDB metricsDB) throw\n     }\n   }\n \n+  /**\n+   * An example value is this: current_time:1566413987194 StartTime:1566413987194 ItemCount:359\n+   * IndexName:nyc_taxis ShardID:25 Primary:true Each pair is separated by new line and the key and\n+   * value within each pair is separated by \":\" This function just parses the string and generates\n+   * the map as such.\n+   *\n+   * @param eventValue The value input to the helper function.\n+   * @return Returns a map of key value pairs\n+   */\n+  static Map<String, String> extractEntryData(String eventValue) {\n+    String[] lines = eventValue.split(System.lineSeparator());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE5MTg3NQ=="}, "originalCommit": {"oid": "ee1baf9ce581f553204198df8af22967ff05d2b9"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTkxNjQyOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessorTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMzozMDoxMVrOGS2Y8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMDo0NjoyMVrOGTW6ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQxODY3Mg==", "bodyText": "nit: Maybe make this an instance variable, or initialize this in before() so that you don't have to do this on every test case.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/183#discussion_r422418672", "createdAt": "2020-05-08T23:30:11Z", "author": {"login": "ktkrg"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessorTests.java", "diffHunk": "@@ -44,39 +44,52 @@ public ReaderMetricsProcessorTests() throws SQLException, ClassNotFoundException\n     super();\n   }\n \n-  // Disabled on purpose\n-  // @Test\n-  public void testReaderMetricsProcessor() throws Exception {\n-    String rootLocation = \"build/private/test_resources/dev/shm\";\n+  @Test\n+  public void testReaderMetricsProcessorFrequently() throws Exception {\n+    String rootLocation = \"build/resources/test/reader/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f4c99f36f67a9e34287b2f262a3e6de3c5d3f7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk1MTU4Nw==", "bodyText": "I have updated that in the latest version.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/183#discussion_r422951587", "createdAt": "2020-05-11T10:46:21Z", "author": {"login": "aditjind"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessorTests.java", "diffHunk": "@@ -44,39 +44,52 @@ public ReaderMetricsProcessorTests() throws SQLException, ClassNotFoundException\n     super();\n   }\n \n-  // Disabled on purpose\n-  // @Test\n-  public void testReaderMetricsProcessor() throws Exception {\n-    String rootLocation = \"build/private/test_resources/dev/shm\";\n+  @Test\n+  public void testReaderMetricsProcessorFrequently() throws Exception {\n+    String rootLocation = \"build/resources/test/reader/\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQxODY3Mg=="}, "originalCommit": {"oid": "b6f4c99f36f67a9e34287b2f262a3e6de3c5d3f7"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2449, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}