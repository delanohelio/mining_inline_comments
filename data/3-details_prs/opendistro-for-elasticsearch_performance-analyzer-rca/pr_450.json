{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MDM5MzI3", "number": 450, "title": "Add bucketization for usage", "bodyText": "Fixes #: #449\nDescription of changes: Adds a way to create bucket calculators based on rca.conf settings. So say we want to add configurable bucket sizes for old-gen, so you add a new object to rca.conf (all three), something like this:\n{\n...\n\"bucketization\": {\n    \"old-gen\": {\n      \"UNDER_UTILIZED\": ..,\n      \"HEALTHY_WITH_BUFFER\": ..,\n      \"HEALTHY\": ..\n    }\n}\n...\n\nThe bucketCalculator hangs off the RcaConf and Deciders have access to RcaConf object. So, in order to bucketize the value, all a decider has to do is\nrcaConf.getBucketizationSettings(\"old-gen\").compute(<current-value>)\nTests: Added unit tests.\nIf new tests are added, how long do the new ones take to complete\n  Test testCreateBucketAssigner PASSED (3.3s)\n  Test testMisSpelledTunableName PASSED\n  Test testNoThresholds PASSED\n  Test testNoBucketizationSettings PASSED\n\nSUCCESS: Executed 4 tests in 6.9s\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-10-02T17:26:04Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450", "merged": true, "mergeCommit": {"oid": "5077a8af03901e55f455478d1659cb22f7c4cd79"}, "closed": true, "closedAt": "2020-10-07T19:58:38Z", "author": {"login": "yojs"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOpR8egH2gAyNDk3MDM5MzI3OjA2N2U5OWMxNDQ2Y2UxZjJmYWE5MWNiMTM1MTgzOGUwYjVkZDQ0MWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQSi1nAFqTUwNDIxOTA3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "067e99c1446ce1f2faa91cb1351838e0b5dd441a", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/067e99c1446ce1f2faa91cb1351838e0b5dd441a", "committedDate": "2020-10-02T17:17:53Z", "message": "Add bucketization for usage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjA4NTc4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#pullrequestreview-502608578", "createdAt": "2020-10-06T06:09:23Z", "commit": {"oid": "067e99c1446ce1f2faa91cb1351838e0b5dd441a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjowOToyNFrOHc3LPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjoxNTozOVrOHc3Tkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyNjE3NA==", "bodyText": "nit: new line", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#discussion_r500026174", "createdAt": "2020-10-06T06:09:24Z", "author": {"login": "sruti1312"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/summaries/bucket/neo/BucketAssignerTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.bucket.neo;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.bucket.BucketCalculator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.bucket.UsageBucket;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.RcaConsts;\n+import java.nio.file.Paths;\n+import java.util.Map;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class BucketAssignerTest {\n+  @Test\n+  public void testCreateBucketAssigner() {\n+    RcaConf rcaConf = new RcaConf(Paths.get(RcaConsts.TEST_CONFIG_PATH, \"bucketization\", \"bucketize.json\").toString());\n+\n+    BucketCalculator bucketCalculatorForBase1 = rcaConf.getBucketizationSettings(\"base1\");\n+\n+    Assert.assertEquals(UsageBucket.UNDER_UTILIZED, bucketCalculatorForBase1.compute(19));\n+    Assert.assertEquals(UsageBucket.HEALTHY_WITH_BUFFER, bucketCalculatorForBase1.compute(40));\n+    Assert.assertEquals(UsageBucket.HEALTHY, bucketCalculatorForBase1.compute(80));\n+    Assert.assertEquals(UsageBucket.UNHEALTHY, bucketCalculatorForBase1.compute(81));\n+\n+    BucketCalculator bucketCalculatorForBase3 = rcaConf.getBucketizationSettings(\"base3\");\n+\n+    Assert.assertEquals(UsageBucket.UNDER_UTILIZED, bucketCalculatorForBase3.compute(30));\n+    Assert.assertEquals(UsageBucket.HEALTHY_WITH_BUFFER, bucketCalculatorForBase3.compute(40.1));\n+    Assert.assertEquals(UsageBucket.HEALTHY, bucketCalculatorForBase3.compute(75));\n+    Assert.assertEquals(UsageBucket.UNHEALTHY, bucketCalculatorForBase3.compute(76));\n+  }\n+\n+  @Test(expected = IllegalArgumentException.class)\n+  public void testMisSpelledTunableName() {\n+    RcaConf rcaConf = new RcaConf(Paths.get(RcaConsts.TEST_CONFIG_PATH, \"bucketization\", \"bucketize.json\").toString());\n+    rcaConf.getBucketizationSettings(\"basa3\");\n+  }\n+\n+  @Test(expected = IllegalArgumentException.class)\n+  public void testNoBucketizationSettings() {\n+    RcaConf rcaConf = new RcaConf(Paths.get(RcaConsts.TEST_CONFIG_PATH, \"rca.conf\").toString());\n+    rcaConf.getBucketizationSettings(\"base1\");\n+  }\n+\n+  @Test(expected = IllegalArgumentException.class)\n+  public void testNoThresholds() {\n+    RcaConf rcaConf = new RcaConf(Paths.get(RcaConsts.TEST_CONFIG_PATH, \"bucketization\", \"bucketize_no_thresholds.json\").toString());\n+    rcaConf.getBucketizationSettings(\"base1\");\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067e99c1446ce1f2faa91cb1351838e0b5dd441a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyNjIxNA==", "bodyText": "nit: new line", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#discussion_r500026214", "createdAt": "2020-10-06T06:09:31Z", "author": {"login": "sruti1312"}, "path": "src/test/resources/rca/bucketization/bucketize.json", "diffHunk": "@@ -0,0 +1,19 @@\n+{\n+  \"bucketization\": {\n+    \"base1\": {\n+      \"UNDER_UTILIZED\": 20.0,\n+      \"HEALTHY_WITH_BUFFER\": 40.0,\n+      \"HEALTHY\": 80.0\n+    },\n+    \"base2\": {\n+      \"UNDER_UTILIZED\": 30.0,\n+      \"HEALTHY_WITH_BUFFER\": 40.0,\n+      \"HEALTHY\": 75.0\n+    },\n+    \"base3\": {\n+      \"UNDER_UTILIZED\": 30.1,\n+      \"HEALTHY_WITH_BUFFER\": 40.23456,\n+      \"HEALTHY\": 75.0\n+    }\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067e99c1446ce1f2faa91cb1351838e0b5dd441a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyNjIzOA==", "bodyText": "nit: new line", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#discussion_r500026238", "createdAt": "2020-10-06T06:09:37Z", "author": {"login": "sruti1312"}, "path": "src/test/resources/rca/bucketization/bucketize_no_thresholds.json", "diffHunk": "@@ -0,0 +1,4 @@\n+{\n+  \"bucketization\": {\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067e99c1446ce1f2faa91cb1351838e0b5dd441a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyNzAzOA==", "bodyText": "Can we use a string (in the same file) and pass it to rca.conf\nRef:\nhttps://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/blob/master/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/ModifyCacheMaxSizeActionTest.java#L113", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#discussion_r500027038", "createdAt": "2020-10-06T06:12:01Z", "author": {"login": "sruti1312"}, "path": "src/test/resources/rca/bucketization/bucketize_no_thresholds.json", "diffHunk": "@@ -0,0 +1,4 @@\n+{\n+  \"bucketization\": {\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067e99c1446ce1f2faa91cb1351838e0b5dd441a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyNzUzNA==", "bodyText": "Same as below. Can we make this a string and pass to rca.conf.\nIt makes the mapping better (which test is using which input)", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#discussion_r500027534", "createdAt": "2020-10-06T06:13:30Z", "author": {"login": "sruti1312"}, "path": "src/test/resources/rca/bucketization/bucketize.json", "diffHunk": "@@ -0,0 +1,19 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067e99c1446ce1f2faa91cb1351838e0b5dd441a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyNzkwMQ==", "bodyText": "What are you thoughts on adding these to RcaConfTest.java", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#discussion_r500027901", "createdAt": "2020-10-06T06:14:33Z", "author": {"login": "sruti1312"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/summaries/bucket/neo/BucketAssignerTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.bucket.neo;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.bucket.BucketCalculator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.bucket.UsageBucket;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.RcaConsts;\n+import java.nio.file.Paths;\n+import java.util.Map;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class BucketAssignerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067e99c1446ce1f2faa91cb1351838e0b5dd441a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyODMwNw==", "bodyText": "Can we use a ImmutableMap here?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#discussion_r500028307", "createdAt": "2020-10-06T06:15:39Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -306,4 +313,69 @@ private boolean updateRcaConf(String originalFilePath, final Set<String> mutedRc\n   public Map<String, Object> getDeciderConfigSettings() {\n     return conf.getDeciderConfigSettings();\n   }\n+\n+  /**\n+   * Given the name of the tunable, it returns the BucketCalculator. The BucketCalculator is constructed\n+   * from the thresholds provided as the rca.conf settings. An example will look like this:\n+   * \"bucketization\": {\n+   *     \"base1\": {\n+   *       \"UNDER_UTILIZED\": 20.0,\n+   *       \"HEALTHY_WITH_BUFFER\": 40.0,\n+   *       \"HEALTHY\": 80.0\n+   *     },\n+   *     \"base2\": {\n+   *       \"UNDER_UTILIZED\": 30.0,\n+   *       \"HEALTHY_WITH_BUFFER\": 40.0,\n+   *       \"HEALTHY\": 75.0\n+   *     },\n+   *     \"base3\": {\n+   *       \"UNDER_UTILIZED\": 30.1,\n+   *       \"HEALTHY_WITH_BUFFER\": 40.23456,\n+   *       \"HEALTHY\": 75.0\n+   *     }\n+   *   }\n+   * @param tunableName The name of the tunable. In the above example, base1, base2, base3 are names of tunables.\n+   * @return The BucketCalculator that can be used to bucketize values.\n+   */\n+  public BucketCalculator getBucketizationSettings(String tunableName) {\n+    if (tunableResourceToUsageBucket.isEmpty()) {\n+      constructTunableResourceToUsageBucket();\n+    }\n+    BucketCalculator bucketCalculator = tunableResourceToUsageBucket.get(tunableName);\n+    if (bucketCalculator == null) {\n+      throw new IllegalArgumentException(\"No such tunable exists with name \" + tunableName\n+          + \". Available ones: \" + tunableResourceToUsageBucket.keySet());\n+    }\n+    return bucketCalculator;\n+  }\n+\n+  private void constructTunableResourceToUsageBucket() {\n+    Map<String, Object> tunableSettingsMap = conf.getBucketizationTunings();\n+    if (tunableSettingsMap == null) {\n+      // The bucketization key does not exist in the rca.conf. So we cannot construct BucketCalculators.\n+      return;\n+    }\n+    for (Map.Entry<String, Object> entry : tunableSettingsMap.entrySet()) {\n+      String currentTunable = entry.getKey();\n+      if (entry.getValue() instanceof Map) {\n+        Map<UsageBucket, Double> usageBucketLimitMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067e99c1446ce1f2faa91cb1351838e0b5dd441a"}, "originalPosition": 136}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjQ0MjE5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#pullrequestreview-502644219", "createdAt": "2020-10-06T07:14:44Z", "commit": {"oid": "067e99c1446ce1f2faa91cb1351838e0b5dd441a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c17d912454e6ac668d80738144600c1523ebb4b", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/1c17d912454e6ac668d80738144600c1523ebb4b", "committedDate": "2020-10-06T18:38:16Z", "message": "Addresed the PR review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDA4NTQw", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#pullrequestreview-504008540", "createdAt": "2020-10-07T15:32:06Z", "commit": {"oid": "1c17d912454e6ac668d80738144600c1523ebb4b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjE5MDc1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/450#pullrequestreview-504219075", "createdAt": "2020-10-07T19:56:22Z", "commit": {"oid": "1c17d912454e6ac668d80738144600c1523ebb4b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 953, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}