{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0ODMxMzQz", "number": 215, "title": "Accessing the local temperature profile from the data nodes", "bodyText": "Issue #, if available: #187\nDescription of changes:\nToday the RCAs are accessible through the REST API only form the elected master. This works well for the ClusterLevel temperature profile. But sometimes we want to drill down more on a specific node. In that case we might want to access the node local temperature as that has shard level details that are missing from the cluster level RCA.\nThis change addresses that. It makes the full resolution Node temperature, with shard level details accessible from the local node for all the dimensions we are keeping track of.\nTests:\nAdded unit tests to make sure that the RCA API returns the full node temperature.\nCode coverage percentage for this patch:\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-05-29T01:13:40Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215", "merged": true, "mergeCommit": {"oid": "5c165cd24147abd70cd34ede684a0a534b245c64"}, "closed": true, "closedAt": "2020-05-30T00:52:09Z", "author": {"login": "yojs"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmGOaxgFqTQyMTE2NDYyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmMKAuABqjMzODkyMzg2NjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTY0NjI1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#pullrequestreview-421164625", "createdAt": "2020-05-29T17:50:22Z", "commit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzo1MDoyM1rOGcmhIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzo1MDoyM1rOGcmhIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY0NDM4Ng==", "bodyText": "indent is incorrect in this file", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432644386", "createdAt": "2020-05-29T17:50:23Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/SQLitePersistor.java", "diffHunk": "@@ -52,230 +54,311 @@\n import org.jooq.impl.DSL;\n \n class SQLitePersistor extends PersistorBase {\n-  private static final String DB_URL = \"jdbc:sqlite:\";\n-  private DSLContext create;\n-  private Map<String, List<Field<?>>> jooqTableColumns;\n-  private static final Logger LOG = LogManager.getLogger(SQLitePersistor.class);\n-  private static final String LAST_INSERT_ROWID = \"last_insert_rowid()\";\n-  private static final String PRIMARY_KEY_AUTOINCREMENT_POSTFIX = \" INTEGER PRIMARY KEY AUTOINCREMENT\";\n+    private static final String DB_URL = \"jdbc:sqlite:\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTY1NzMw", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#pullrequestreview-421165730", "createdAt": "2020-05-29T17:51:59Z", "commit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzo1MTo1OVrOGcmkQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzo1MTo1OVrOGcmkQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY0NTE4Nw==", "bodyText": "we are changing this at the same time. I think we can reuse what is already there. Let's discuss this offline", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432645187", "createdAt": "2020-05-29T17:51:59Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/util/SQLiteQueryUtils.java", "diffHunk": "@@ -40,21 +42,12 @@\n  * A utility class to query cluster, node and resource level summary for a rca\n  */\n public class SQLiteQueryUtils {\n-  private static final Map<String, String> temperatureProfileNestedSummaryMap;\n   private static final Set<String> clusterLevelRCA;\n   private static final Set<String> temperatureProfileRCASet;\n \n-  static {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTY2Mjcy", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#pullrequestreview-421166272", "createdAt": "2020-05-29T17:52:46Z", "commit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzo1Mjo0NlrOGcml4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzo1Mjo0NlrOGcml4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY0NTYwMw==", "bodyText": "should we keep those RCAs as muted ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432645603", "createdAt": "2020-05-29T17:52:46Z", "author": {"login": "rguo-aws"}, "path": "pa_config/rca.conf", "diffHunk": "@@ -58,19 +58,19 @@\n   },\n \n   \"muted-rcas\": [\n-    \"HotShardRca\",\n-    \"HotShardClusterRca\",\n-    \"HeapAllocRateByShardTemperatureCalculator\",\n-    \"HeapAllocRateByShardAvgTemperatureCalculator\",\n-    \"HeapAllocRateShardIndependentTemperatureCalculator\",\n-    \"HeapAllocRateTotalTemperatureCalculator\",\n-    \"CpuUtilByShardsMetricBasedTemperatureCalculator\",\n-    \"AvgCpuUtilByShardsMetricBasedTemperatureCalculator\",\n-    \"ShardIndependentTemperatureCalculatorCpuUtilMetric\",\n-    \"TotalCpuUtilForTotalNodeMetric\",\n-    \"CpuUtilDimensionTemperatureRca\",\n-    \"HeapAllocRateTemperatureRca\",\n-    \"NodeTemperatureRca\",\n-    \"ClusterTemperatureRca\"\n-   ]\n+  //   \"HotShardRca\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTcxMjg4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#pullrequestreview-421171288", "createdAt": "2020-05-29T18:00:04Z", "commit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODowMDowNFrOGcm0Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODo1ODoyMFrOGcoicw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY0OTI1NA==", "bodyText": "Good that we have added this comment here.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432649254", "createdAt": "2020-05-29T18:00:04Z", "author": {"login": "khushbr"}, "path": "build.gradle", "diffHunk": "@@ -293,6 +293,8 @@ task cloneGitRepo(type: GitClone) {\n     dockerBuildDir = Paths.get(getProject().getBuildDir().toString(), \"docker-build\").toString()\n     mkdir dockerBuildDir\n     if (localPaDir != null && !localPaDir.empty) {\n+        // If you already have the performance Analyzer sources checked out then update the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDE0Mw==", "bodyText": "+1, would be good to fix the indent and update the PR to make it easy to read the diff", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432660143", "createdAt": "2020-05-29T18:21:57Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/SQLitePersistor.java", "diffHunk": "@@ -52,230 +54,311 @@\n import org.jooq.impl.DSL;\n \n class SQLitePersistor extends PersistorBase {\n-  private static final String DB_URL = \"jdbc:sqlite:\";\n-  private DSLContext create;\n-  private Map<String, List<Field<?>>> jooqTableColumns;\n-  private static final Logger LOG = LogManager.getLogger(SQLitePersistor.class);\n-  private static final String LAST_INSERT_ROWID = \"last_insert_rowid()\";\n-  private static final String PRIMARY_KEY_AUTOINCREMENT_POSTFIX = \" INTEGER PRIMARY KEY AUTOINCREMENT\";\n+    private static final String DB_URL = \"jdbc:sqlite:\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY0NDM4Ng=="}, "originalCommit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MjY1MA==", "bodyText": "A metric here would also be helpful.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432662650", "createdAt": "2020-05-29T18:27:09Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/pyrometer/Api.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *  A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed\n+ *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.pyrometer;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.temperature.CompactNodeSummary;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.temperature.ShardProfileSummary;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.temperature.HeatZoneAssigner;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.temperature.TemperatureVector;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * Although Pyrometer exists on all the nodes - data and master but the APIs are only accessible\n+ * from the master nodes. Pyrometer is able answer queries such as:\n+ * - All nodes by in Zone <i>Z</i> by dimension <i>D</i> order by <i>Temperature</i> in\n+ * descending order.\n+ * - The top <i>K</i> warm shards on the hottest nodes by dimension D over a period of h hours\n+ * -\n+ */\n+public class Api {\n+    enum Count {\n+        /**\n+         * This is to ask the API to return all the contenders.\n+         */\n+        ALL,\n+\n+        /**\n+         * This is to return the top K contenders\n+         */\n+        TOP_K\n+    }\n+\n+    enum SortOrder {\n+        ASCENDING,\n+        DESCENDING;\n+    }\n+\n+    /**\n+     * Api class should be called only from elected master node.\n+     *\n+     * @return true if elected master or false otherwise.\n+     */\n+    private static boolean checkIfElectedMaster() {\n+        return true;\n+    }\n+\n+    private static void failIfNotElectedMaster(String apiName) {\n+        if (!checkIfElectedMaster()) {\n+            StringBuilder builder = new StringBuilder();\n+            builder.append(\"Api (\").append(apiName).append(\") can only be called from the elected\"\n+                    + \" master node.\");\n+\n+            throw new IllegalStateException(builder.toString());\n+        }\n+    }\n+\n+    /**\n+     * A cluster is considered imbalanced along a dimension if the temperature of the hottest\n+     * node and the coldest node are too far apart. How far is too far, is something to be\n+     * evaluated.\n+     *\n+     * @param dimension The dimension to consider.\n+     * @return The difference in temperature of the\n+     */\n+    public static boolean isClusterImbalanceAlongDimension(TemperatureVector.Dimension dimension) {\n+        failIfNotElectedMaster(\"getClusterImbalanceAlongDimension\");\n+        // TODO: Calculate this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2NzA2Ng==", "bodyText": "I am assuming this is a WIP since we are only asserting the master criterion and returning an empty arraylist here.\nI think it would be good to make description of the PR more verbose to indicate this includes WIP items and what they are.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432667066", "createdAt": "2020-05-29T18:36:25Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/pyrometer/Api.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *  A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed\n+ *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.pyrometer;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.temperature.CompactNodeSummary;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.temperature.ShardProfileSummary;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.temperature.HeatZoneAssigner;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.temperature.TemperatureVector;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * Although Pyrometer exists on all the nodes - data and master but the APIs are only accessible\n+ * from the master nodes. Pyrometer is able answer queries such as:\n+ * - All nodes by in Zone <i>Z</i> by dimension <i>D</i> order by <i>Temperature</i> in\n+ * descending order.\n+ * - The top <i>K</i> warm shards on the hottest nodes by dimension D over a period of h hours\n+ * -\n+ */\n+public class Api {\n+    enum Count {\n+        /**\n+         * This is to ask the API to return all the contenders.\n+         */\n+        ALL,\n+\n+        /**\n+         * This is to return the top K contenders\n+         */\n+        TOP_K\n+    }\n+\n+    enum SortOrder {\n+        ASCENDING,\n+        DESCENDING;\n+    }\n+\n+    /**\n+     * Api class should be called only from elected master node.\n+     *\n+     * @return true if elected master or false otherwise.\n+     */\n+    private static boolean checkIfElectedMaster() {\n+        return true;\n+    }\n+\n+    private static void failIfNotElectedMaster(String apiName) {\n+        if (!checkIfElectedMaster()) {\n+            StringBuilder builder = new StringBuilder();\n+            builder.append(\"Api (\").append(apiName).append(\") can only be called from the elected\"\n+                    + \" master node.\");\n+\n+            throw new IllegalStateException(builder.toString());\n+        }\n+    }\n+\n+    /**\n+     * A cluster is considered imbalanced along a dimension if the temperature of the hottest\n+     * node and the coldest node are too far apart. How far is too far, is something to be\n+     * evaluated.\n+     *\n+     * @param dimension The dimension to consider.\n+     * @return The difference in temperature of the\n+     */\n+    public static boolean isClusterImbalanceAlongDimension(TemperatureVector.Dimension dimension) {\n+        failIfNotElectedMaster(\"getClusterImbalanceAlongDimension\");\n+        // TODO: Calculate this\n+        return true;\n+    }\n+\n+\n+    /**\n+     * To get the list of all the nodes in the cluster order.\n+     *\n+     * @param dimension Temperature along this dimension will be considered to sort the nodes\n+     * @param zone      Only the nodes in this zone will be reported.\n+     * @param count     How many nodes to return in the result.\n+     * @param order     Will the nodes be sorted in the increasing order or decreasing order.\n+     * @return An ordered list of nodes.\n+     */\n+    public static @Nonnull\n+    List<CompactNodeSummary> getNodesForGivenZone(final TemperatureVector.Dimension dimension,\n+                                                  final HeatZoneAssigner.Zone zone,\n+                                                  final Count count,\n+                                                  final SortOrder order) {\n+        failIfNotElectedMaster(\"getNodes\");\n+        return new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY3NzQ5MQ==", "bodyText": "Given this code goes into AES as well, should we consider moving them to a README for ODFE and AES respectively ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432677491", "createdAt": "2020-05-29T18:58:20Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rest/QueryRcaRequestHandler.java", "diffHunk": "@@ -48,6 +48,42 @@\n  *\n  *  <p>To get response for a specific RCA, use:\n  *  curl --url \"localhost:9650/_opendistro/_performanceanalyzer/rca?name=HighHeapUsageClusterRca\" -XGET\n+ *\n+ *  <p>For temperature profiles, one can get the local node temperature using a request url as:\n+ *  curl \"localhost:9600/_opendistro/_performanceanalyzer/rca?name=NodeTemperatureRca&local=true\"\n+ *\n+ * <p>The cluster level RCA can only be queried from the elected master using this rest API:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjA5Nzk0", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#pullrequestreview-421209794", "createdAt": "2020-05-29T18:59:19Z", "commit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODo1OToxOVrOGcokHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODo1OToxOVrOGcokHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY3NzkxNg==", "bodyText": "Any reason we are removing these from Muted RCA List?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432677916", "createdAt": "2020-05-29T18:59:19Z", "author": {"login": "khushbr"}, "path": "pa_config/rca.conf", "diffHunk": "@@ -58,19 +58,19 @@\n   },\n \n   \"muted-rcas\": [\n-    \"HotShardRca\",\n-    \"HotShardClusterRca\",\n-    \"HeapAllocRateByShardTemperatureCalculator\",\n-    \"HeapAllocRateByShardAvgTemperatureCalculator\",\n-    \"HeapAllocRateShardIndependentTemperatureCalculator\",\n-    \"HeapAllocRateTotalTemperatureCalculator\",\n-    \"CpuUtilByShardsMetricBasedTemperatureCalculator\",\n-    \"AvgCpuUtilByShardsMetricBasedTemperatureCalculator\",\n-    \"ShardIndependentTemperatureCalculatorCpuUtilMetric\",\n-    \"TotalCpuUtilForTotalNodeMetric\",\n-    \"CpuUtilDimensionTemperatureRca\",\n-    \"HeapAllocRateTemperatureRca\",\n-    \"NodeTemperatureRca\",\n-    \"ClusterTemperatureRca\"\n-   ]\n+  //   \"HotShardRca\",\n+  //   \"HotShardClusterRca\",\n+  //   \"HeapAllocRateByShardTemperatureCalculator\",\n+  //   \"HeapAllocRateByShardAvgTemperatureCalculator\",\n+  //   \"HeapAllocRateShardIndependentTemperatureCalculator\",\n+  //   \"HeapAllocRateTotalTemperatureCalculator\",\n+  //   \"CpuUtilByShardsMetricBasedTemperatureCalculator\",\n+  //   \"AvgCpuUtilByShardsMetricBasedTemperatureCalculator\",\n+  //   \"ShardIndependentTemperatureCalculatorCpuUtilMetric\",\n+  //   \"TotalCpuUtilForTotalNodeMetric\",\n+  //   \"CpuUtilDimensionTemperatureRca\",\n+  //   \"HeapAllocRateTemperatureRca\",\n+  //   \"NodeTemperatureRca\",\n+  //   \"ClusterTemperatureRca\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4febf3400096e0ec06766cf59adb9c42016f690"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed4a5bdf22ec5dcdff0fa04b5fe91fdbd7c9a80a", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/ed4a5bdf22ec5dcdff0fa04b5fe91fdbd7c9a80a", "committedDate": "2020-05-29T20:27:35Z", "message": "Addressing the GH comments"}, "afterCommit": {"oid": "39e8a8eb15a6b5b274375850fcfea228061a1d13", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/39e8a8eb15a6b5b274375850fcfea228061a1d13", "committedDate": "2020-05-29T22:04:32Z", "message": "Addressing the GH comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzQzODY5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#pullrequestreview-421343869", "createdAt": "2020-05-29T23:14:09Z", "commit": {"oid": "39e8a8eb15a6b5b274375850fcfea228061a1d13"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzQ5Njk2", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#pullrequestreview-421349696", "createdAt": "2020-05-29T23:38:32Z", "commit": {"oid": "39e8a8eb15a6b5b274375850fcfea228061a1d13"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzozODozMlrOGcu_CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzozODozMlrOGcu_CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4MzExMg==", "bodyText": "indentation seems to be off here", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432783112", "createdAt": "2020-05-29T23:38:32Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/summaries/temperature/ShardProfileSummary.java", "diffHunk": "@@ -29,8 +28,12 @@\n \n public class ShardProfileSummary extends GenericSummary {\n \n-  public static final String SUMMARY_TABLE_NAME = \"ShardProfileSummary\";\n-  private final String indexName;\n+    public static final String SUMMARY_TABLE_NAME = \"ShardProfileSummary\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39e8a8eb15a6b5b274375850fcfea228061a1d13"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39e8a8eb15a6b5b274375850fcfea228061a1d13", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/39e8a8eb15a6b5b274375850fcfea228061a1d13", "committedDate": "2020-05-29T22:04:32Z", "message": "Addressing the GH comments"}, "afterCommit": {"oid": "92e2482453be21b91c385b1a717fd712decbc5c7", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/92e2482453be21b91c385b1a717fd712decbc5c7", "committedDate": "2020-05-30T00:12:34Z", "message": "Addressing the GH comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92e2482453be21b91c385b1a717fd712decbc5c7", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/92e2482453be21b91c385b1a717fd712decbc5c7", "committedDate": "2020-05-30T00:12:34Z", "message": "Addressing the GH comments"}, "afterCommit": {"oid": "802439d28f9231b617437540327ed47bd2c51601", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/802439d28f9231b617437540327ed47bd2c51601", "committedDate": "2020-05-30T00:31:55Z", "message": "Addressing the GH comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzU5NDI5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#pullrequestreview-421359429", "createdAt": "2020-05-30T00:32:22Z", "commit": {"oid": "92e2482453be21b91c385b1a717fd712decbc5c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba1c77ad012d4b984388840e6e4be720092e157a", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/ba1c77ad012d4b984388840e6e4be720092e157a", "committedDate": "2020-05-30T00:33:15Z", "message": "Pyrometer API"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzU5NjMw", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#pullrequestreview-421359630", "createdAt": "2020-05-30T00:33:43Z", "commit": {"oid": "802439d28f9231b617437540327ed47bd2c51601"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMDozMzo0M1rOGcvgmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMDozMzo0M1rOGcvgmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5MTcwNg==", "bodyText": "remove the space ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/215#discussion_r432791706", "createdAt": "2020-05-30T00:33:43Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/summaries/temperature/ShardProfileSummary.java", "diffHunk": "@@ -82,17 +85,17 @@ public String getTableName() {\n         List<Object> values = new ArrayList<>();\n         values.add(indexName);\n         values.add(shardId);\n-        for (TemperatureVector.Dimension dimension: TemperatureVector.Dimension.values()) {\n+        for (TemperatureVector.Dimension dimension : TemperatureVector.Dimension.values()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "802439d28f9231b617437540327ed47bd2c51601"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7848fabe588709fedc6c3f4bc08b51d0530675c0", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/7848fabe588709fedc6c3f4bc08b51d0530675c0", "committedDate": "2020-05-30T00:39:39Z", "message": "Getting the full node temperature profile for local RCA request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d133bbfdf8efcee3ecb90e47c1510c18ccce9df", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/1d133bbfdf8efcee3ecb90e47c1510c18ccce9df", "committedDate": "2020-05-30T00:44:34Z", "message": "Addressing the GH comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "802439d28f9231b617437540327ed47bd2c51601", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/802439d28f9231b617437540327ed47bd2c51601", "committedDate": "2020-05-30T00:31:55Z", "message": "Addressing the GH comments"}, "afterCommit": {"oid": "1d133bbfdf8efcee3ecb90e47c1510c18ccce9df", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/1d133bbfdf8efcee3ecb90e47c1510c18ccce9df", "committedDate": "2020-05-30T00:44:34Z", "message": "Addressing the GH comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1014, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}