{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MTkyODM3", "number": 375, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjozNjozM1rOEYonqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjozOTozOVrOEYophg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjY2NzkyOnYy", "diffSide": "RIGHT", "path": "docs/rcait.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjozNjozM1rOHBFA8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjozNjozM1rOHBFA8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg5Mjc4NA==", "bodyText": "Should this be DATA_0 and DATA_1 instead of datanode0 and datanode1 resp ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/375#discussion_r470892784", "createdAt": "2020-08-14T22:36:33Z", "author": {"login": "khushbr"}, "path": "docs/rcait.md", "diffHunk": "@@ -15,49 +15,89 @@ component and how PerformanceAnalyzer interacts with ElasticSearch.\n The RCA-IT is composed of various annotatons that you can use to configure the \n test environment you want your tests to run on.\n \n-`__@RunWith(RcaItNotEncryptedRunner.class)__`\n+Annotation|Required|Level|Parameters|Repeatable|Description\n+----------|-----|----------|----------|---------|------\n+RunWith|Yes|Class|Runner class|No|This is to suggest the junit that something other than the default runner must be used\n+Category|Yes|Class|RcaItMarker.class|No|This is to categorize all the RCA-IT tests so that all integration tests can be run by using the gradle target `rcaIt`\n+AClusterType|Yes|Class|value|No|The cluster type that would be used to run this integration test. Types supported can be found in `enum ClusterType`\n+ARcaGraph|Yes|Class or Method|value|No|The RCA graph that will be executed by the RCA scheduler.\n+AMetric|Yes|Class or Method|name, dimensionNames, tables|Yes|The metrics that will flow through the veins of the RCA graph. This is probably the most complicated annotation and is better understood with an example. Please checkout `class RcaItPocDedicated`.\n+Expect|No|Method|what, on, timeoutSeconds, validator, forRca|Yes|If you want the framework to test for an expected condition at steady state to pass or fail a test.\n+AErrorPatternIgnored|No|Method|pattern, reason|Yes|If you want the checking framework to bypass certain pattern in error logs.\n+\n+__@RunWith(RcaItNotEncryptedRunner.class)__\n \n The above specifies the runner for the junit test class and in this case, it says to junit\n to offload it to one of the RCA-IT runners - _RcaItNotEncryptedRunner_. All RCA-IT tests must\n use this annotation for them to be run by this integ test framework.\n \n-`__@Category(RcaItMarker.class)__`\n+__@Category(RcaItMarker.class)__\n \n All test classes must also be marked with this masker interface.\n     \n-`__@AClusterType(ClusterType.MULTI_NODE_CO_LOCATED_MASTER)__`\n+__@AClusterType(ClusterType.MULTI_NODE_CO_LOCATED_MASTER)__\n \n This annotation tells the RCA-IT to use `a multi-node cluster with no dedicated master nodes\n `. The kinds of clusters supported today are:   `SINGLE_NODE`, `MULTI_NODE_CO_LOCATED_MASTER\n ` and `MULTI_NODE_DEDICATED_MASTER`. This is a required annotation and must be specified at\n  the class level.\n \n-`__@ARcaGraph(MyRcaGraph.class)__`\n+__@ARcaGraph(MyRcaGraph.class)__\n \n This helps us specify the Graph that we will be using for this test. It can be a graph that\n exists or the one specially contrived for this test.\n     \n-`__@AMetric__` \n-\n-This helps us specify the metrics that will be pured over the RCA graph. It has multiple sub\n--fields.\n-- _name_ : The metric we are filling in. The expected parameter is one of the metrics classes\n+__@AMetric__ \n+This helps us specify the metrics that will be pured over the RCA graph. It has multiple sub-fields.\n+\n+Let's see an example:\n+```java\n+@AMetric(name = CPU_Utilization.class,\n+    dimensionNames = {SHARDID_VALUE, INDEX_NAME_VALUE, OPERATION_VALUE, SHARD_ROLE_VALUE},\n+    tables = {\n+        @ATable(hostTag = HostTag.DATA_0,\n+            tuple = {\n+                @ATuple(dimensionValues = {\"0\", \"logs\", \"bulk\", \"p\"},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0),\n+                @ATuple(dimensionValues = {\"1\", \"logs\", \"bulk\", \"r\"},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 80.0),\n+                @ATuple(dimensionValues = {\"2\", \"logs\", \"bulk\", \"p\"},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 10.0)\n+            }\n+        ),\n+        @ATable(hostTag = HostTag.DATA_1,\n+            tuple = {\n+                @ATuple(dimensionValues = {\"0\", \"logs\", \"bulk\", \"r\"},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 50.0),\n+                @ATuple(dimensionValues = {\"1\", \"logs\", \"bulk\", \"p\"},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 5.0),\n+                @ATuple(dimensionValues = {\"2\", \"logs\", \"bulk\", \"r\"},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 11.0)\n+            }\n+        )\n+    }\n+)\n+```\n+\n+- _name_ : The Metric graph node that will be emitting these values. The expected parameter is one of the metrics classes\n  in `com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics`. The\n  metrics class that you specify, should have a `static final` field called `NAME` (`CPU_Utilization`)\n- and that will be used to determine the metric table.\n+ and that will be used to determine the name of the metric table.\n - _dimensionNames_ : For the dimension names for a metric, please refer to the docs \n-[here](https://opendistro.github.io/for-elasticsearch-docs/docs/pa/reference/).\n-- _tables_ : This specifies a table for the metric. The table should be a 5 second snapshot\n+[here](https://opendistro.github.io/for-elasticsearch-docs/docs/pa/reference/). Each of the dimension\n+will be a column in the rca.sqlite table.\n+- _tables_ : This specifies one or more table(s). The table should be a 5 second snapshot\n  of the metrics, similar to what exists in metricsdb files. The table is an array type\n  , therfore it gives you the flexibility of specifying a different metrics table for\n- different nodes in the cluster. This can be used to push different metrics to the node that\n+ each node or a group of nodes in the cluster. In the above example, the table one is to be emitted by\n+ `datanode0` and table 2 by `datanode1`. This can be used to push different metrics to the node that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6875a63abb13f853e8a0b32af64d9047b29f49d8"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjY3MTE0OnYy", "diffSide": "RIGHT", "path": "docs/rcait.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjozODozNlrOHBFC1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjo0MzoyOFrOHBFHCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg5MzI3MQ==", "bodyText": "I wanted to understand why you chose to use @ towards the end of decorator name rather than front like others ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/375#discussion_r470893271", "createdAt": "2020-08-14T22:38:36Z", "author": {"login": "khushbr"}, "path": "docs/rcait.md", "diffHunk": "@@ -77,6 +117,12 @@ framework, will re-run them for the i+1 the iteration till a timeout. The timeou\n configurable to any number of seconds using the field `timeoutSeconds` but has the default\n of 60 seconds. \n     \n+__AErrorPatternIgnored@__", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6875a63abb13f853e8a0b32af64d9047b29f49d8"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg5NDM0Nw==", "bodyText": "Good catch !", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/375#discussion_r470894347", "createdAt": "2020-08-14T22:43:28Z", "author": {"login": "yojs"}, "path": "docs/rcait.md", "diffHunk": "@@ -77,6 +117,12 @@ framework, will re-run them for the i+1 the iteration till a timeout. The timeou\n configurable to any number of seconds using the field `timeoutSeconds` but has the default\n of 60 seconds. \n     \n+__AErrorPatternIgnored@__", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg5MzI3MQ=="}, "originalCommit": {"oid": "6875a63abb13f853e8a0b32af64d9047b29f49d8"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjY3MjcwOnYy", "diffSide": "RIGHT", "path": "docs/rcait.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjozOTozOVrOHBFDvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjozOTozOVrOHBFDvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg5MzUwMw==", "bodyText": "nit: Replace veins with edge ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/375#discussion_r470893503", "createdAt": "2020-08-14T22:39:39Z", "author": {"login": "khushbr"}, "path": "docs/rcait.md", "diffHunk": "@@ -15,49 +15,89 @@ component and how PerformanceAnalyzer interacts with ElasticSearch.\n The RCA-IT is composed of various annotatons that you can use to configure the \n test environment you want your tests to run on.\n \n-`__@RunWith(RcaItNotEncryptedRunner.class)__`\n+Annotation|Required|Level|Parameters|Repeatable|Description\n+----------|-----|----------|----------|---------|------\n+RunWith|Yes|Class|Runner class|No|This is to suggest the junit that something other than the default runner must be used\n+Category|Yes|Class|RcaItMarker.class|No|This is to categorize all the RCA-IT tests so that all integration tests can be run by using the gradle target `rcaIt`\n+AClusterType|Yes|Class|value|No|The cluster type that would be used to run this integration test. Types supported can be found in `enum ClusterType`\n+ARcaGraph|Yes|Class or Method|value|No|The RCA graph that will be executed by the RCA scheduler.\n+AMetric|Yes|Class or Method|name, dimensionNames, tables|Yes|The metrics that will flow through the veins of the RCA graph. This is probably the most complicated annotation and is better understood with an example. Please checkout `class RcaItPocDedicated`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6875a63abb13f853e8a0b32af64d9047b29f49d8"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2363, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}