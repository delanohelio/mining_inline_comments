{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMjc1Mjc5", "number": 438, "title": "Add GC_Type metric", "bodyText": "Fixes #:\n#437\nDescription of changes:\nAdds a new GC_Type metric to the metricsdb.\nThis change adds a new collector: GCInfoCollector which fetches the names of the collectors assigned to garbage collect specific memory pools(eden, old gen, survivor, etc).\nThis event is then processed by the GarbageCollectorInfoProcessor to convert the events to a metric table: GC_Type in the metricsdb.\nTests:\nTested on docker. The content of the table in metricsdb is pasted below.\nsqlite> select * from GC_Type;\nSurvivor|ParNew||||\nOldGen|ConcurrentMarkSweep||||\nEden|ParNew||||\n\nIf new tests are added, how long do the new ones take to complete\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-09-25T17:57:39Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/438", "merged": true, "mergeCommit": {"oid": "cc3b1bce7ac6182113377eb030edb2e01647d1e5"}, "closed": true, "closedAt": "2020-10-02T16:40:37Z", "author": {"login": "ktkrg"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMZju7gH2gAyNDkzMjc1Mjc5OmM4YTdhOGU0NWY4N2YyZmU1NzIwOGMxOWU2MDc4MWY3YTRiYzNmNjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOomcTAFqTUwMTI4MDg3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c8a7a8e45f87f2fe57208c19e60781f7a4bc3f65", "author": {"user": {"login": "ktkrg", "name": "Karthik Kumarguru"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/c8a7a8e45f87f2fe57208c19e60781f7a4bc3f65", "committedDate": "2020-09-25T17:50:59Z", "message": "Add GC_Type metric"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2ODk5MzE4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/438#pullrequestreview-496899318", "createdAt": "2020-09-25T22:37:29Z", "commit": {"oid": "c8a7a8e45f87f2fe57208c19e60781f7a4bc3f65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjozNzozMFrOHYV-hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjozNzozMFrOHYV-hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI4Nzk0Mg==", "bodyText": "What's the point of this statement?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/438#discussion_r495287942", "createdAt": "2020-09-25T22:37:30Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/GarbageCollectorInfoProcessor.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.reader;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.GCInfoDimension;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.PerformanceAnalyzerMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.reader_writer_shared.Event;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.util.JsonConverter;\n+import java.sql.Connection;\n+import java.util.Map;\n+import java.util.NavigableMap;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jooq.BatchBindStep;\n+import org.jooq.Record;\n+import org.jooq.Result;\n+\n+public class GarbageCollectorInfoProcessor implements EventProcessor {\n+\n+  private static final Logger LOG = LogManager.getLogger(GarbageCollectorInfoProcessor.class);\n+\n+  private GarbageCollectorInfoSnapshot gcSnap;\n+  private BatchBindStep handle;\n+  private long startTime;\n+  private long endTime;\n+\n+  private GarbageCollectorInfoProcessor(GarbageCollectorInfoSnapshot gcSnap) {\n+    this.gcSnap = gcSnap;\n+  }\n+\n+  static GarbageCollectorInfoProcessor buildGarbageCollectorInfoProcessor(\n+      long currWindowStartTime,\n+      Connection conn,\n+      NavigableMap<Long, GarbageCollectorInfoSnapshot> gcInfoMap) {\n+    if (gcInfoMap.get(currWindowStartTime) == null) {\n+      GarbageCollectorInfoSnapshot gcSnap = new GarbageCollectorInfoSnapshot(conn, currWindowStartTime);\n+      gcInfoMap.put(currWindowStartTime, gcSnap);\n+\n+      return new GarbageCollectorInfoProcessor(gcSnap);\n+    }\n+\n+    return new GarbageCollectorInfoProcessor(gcInfoMap.get(currWindowStartTime));\n+  }\n+\n+  @Override\n+  public void initializeProcessing(long startTime, long endTime) {\n+    this.startTime = startTime;\n+    this.endTime = endTime;\n+    this.handle = gcSnap.startBatchPut();\n+  }\n+\n+  @Override\n+  public void finalizeProcessing() {\n+    if (handle.size() > 0) {\n+      handle.execute();\n+\n+      Result<Record> records = gcSnap.fetchAll();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8a7a8e45f87f2fe57208c19e60781f7a4bc3f65"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2OTAwMjIz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/438#pullrequestreview-496900223", "createdAt": "2020-09-25T22:40:59Z", "commit": {"oid": "c8a7a8e45f87f2fe57208c19e60781f7a4bc3f65"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0MDo1OVrOHYWGPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0MDo1OVrOHYWGPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI4OTkxOQ==", "bodyText": "nit: can't this just be a call to commitBatchIfRequired()?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/438#discussion_r495289919", "createdAt": "2020-09-25T22:40:59Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/GarbageCollectorInfoProcessor.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.reader;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.GCInfoDimension;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.PerformanceAnalyzerMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.reader_writer_shared.Event;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.util.JsonConverter;\n+import java.sql.Connection;\n+import java.util.Map;\n+import java.util.NavigableMap;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jooq.BatchBindStep;\n+import org.jooq.Record;\n+import org.jooq.Result;\n+\n+public class GarbageCollectorInfoProcessor implements EventProcessor {\n+\n+  private static final Logger LOG = LogManager.getLogger(GarbageCollectorInfoProcessor.class);\n+\n+  private GarbageCollectorInfoSnapshot gcSnap;\n+  private BatchBindStep handle;\n+  private long startTime;\n+  private long endTime;\n+\n+  private GarbageCollectorInfoProcessor(GarbageCollectorInfoSnapshot gcSnap) {\n+    this.gcSnap = gcSnap;\n+  }\n+\n+  static GarbageCollectorInfoProcessor buildGarbageCollectorInfoProcessor(\n+      long currWindowStartTime,\n+      Connection conn,\n+      NavigableMap<Long, GarbageCollectorInfoSnapshot> gcInfoMap) {\n+    if (gcInfoMap.get(currWindowStartTime) == null) {\n+      GarbageCollectorInfoSnapshot gcSnap = new GarbageCollectorInfoSnapshot(conn, currWindowStartTime);\n+      gcInfoMap.put(currWindowStartTime, gcSnap);\n+\n+      return new GarbageCollectorInfoProcessor(gcSnap);\n+    }\n+\n+    return new GarbageCollectorInfoProcessor(gcInfoMap.get(currWindowStartTime));\n+  }\n+\n+  @Override\n+  public void initializeProcessing(long startTime, long endTime) {\n+    this.startTime = startTime;\n+    this.endTime = endTime;\n+    this.handle = gcSnap.startBatchPut();\n+  }\n+\n+  @Override\n+  public void finalizeProcessing() {\n+    if (handle.size() > 0) {\n+      handle.execute();\n+\n+      Result<Record> records = gcSnap.fetchAll();\n+    }\n+  }\n+\n+  @Override\n+  public void processEvent(Event event) {\n+    handleGarbageCollectorInfoEvent(event);\n+    if (handle.size() >= BATCH_LIMIT) {\n+      handle.execute();\n+      handle = gcSnap.startBatchPut();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8a7a8e45f87f2fe57208c19e60781f7a4bc3f65"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e025499552cbcd9e6eea2710f67ed38fd4690be4", "author": {"user": {"login": "ktkrg", "name": "Karthik Kumarguru"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e025499552cbcd9e6eea2710f67ed38fd4690be4", "committedDate": "2020-09-28T16:06:37Z", "message": "Fix checkstyle issues, address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NjkwNjU2", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/438#pullrequestreview-497690656", "createdAt": "2020-09-28T16:16:42Z", "commit": {"oid": "e025499552cbcd9e6eea2710f67ed38fd4690be4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3OTg5NDA4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/438#pullrequestreview-497989408", "createdAt": "2020-09-29T00:48:04Z", "commit": {"oid": "e025499552cbcd9e6eea2710f67ed38fd4690be4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cf4bbe79d1df2442f9b15bd6006c3ce60f1c603", "author": {"user": {"login": "ktkrg", "name": "Karthik Kumarguru"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/5cf4bbe79d1df2442f9b15bd6006c3ce60f1c603", "committedDate": "2020-10-01T19:16:07Z", "message": "Add unit tests for GC snapshot and processor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6237268f8ec31a3637f46d239aaec4454fbed41", "author": {"user": {"login": "ktkrg", "name": "Karthik Kumarguru"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/a6237268f8ec31a3637f46d239aaec4454fbed41", "committedDate": "2020-10-01T19:22:57Z", "message": "Add licence and checkstyle fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "079e1554a2c3ff87ca49ac9c6c2cefeb2f6c58b8", "author": {"user": {"login": "ktkrg", "name": "Karthik Kumarguru"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/079e1554a2c3ff87ca49ac9c6c2cefeb2f6c58b8", "committedDate": "2020-10-01T20:04:26Z", "message": "Add metrics emitter test to increase coverage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwODU0NzE5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/438#pullrequestreview-500854719", "createdAt": "2020-10-02T04:28:22Z", "commit": {"oid": "079e1554a2c3ff87ca49ac9c6c2cefeb2f6c58b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMjgwODc1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/438#pullrequestreview-501280875", "createdAt": "2020-10-02T16:30:22Z", "commit": {"oid": "079e1554a2c3ff87ca49ac9c6c2cefeb2f6c58b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 930, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}