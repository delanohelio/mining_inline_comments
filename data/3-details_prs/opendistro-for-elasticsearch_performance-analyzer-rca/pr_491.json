{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NzE2MDkw", "number": 491, "title": "Fix total memory being read incorrectly", "bodyText": "Fixes #:\nDescription of changes:\nRead the contents of /proc/meminfo to get total memory on the instance instead of JVM Runtime object which reads total memory incorrectly.\nTests:\nTested on an ec2 instance.\nIf new tests are added, how long do the new ones take to complete\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-10-23T04:52:34Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/491", "merged": true, "mergeCommit": {"oid": "09e568cecb7d88c16d5af44918873aa2bc3c3916"}, "closed": true, "closedAt": "2020-10-23T07:01:10Z", "author": {"login": "ktkrg"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVPIIRAH2gAyNTA4NzE2MDkwOjE0Y2Y1MzkwZjUyZjkxNjgwYzc4YmE5NTdjZjNlZmRjNDUzOTJkM2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVPYtygFqTUxNTMzODk2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "14cf5390f52f91680c78ba957cf3efdc45392d3a", "author": {"user": {"login": "ktkrg", "name": "Karthik Kumarguru"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/14cf5390f52f91680c78ba957cf3efdc45392d3a", "committedDate": "2020-10-23T04:47:06Z", "message": "Fix total memory being read incorrectly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77e3f28a1d8de58c0e487794d04c5cc299c15a8b", "author": {"user": {"login": "ktkrg", "name": "Karthik Kumarguru"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/77e3f28a1d8de58c0e487794d04c5cc299c15a8b", "committedDate": "2020-10-23T04:53:07Z", "message": "Update copyright year on MemInfo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MzMzNjky", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/491#pullrequestreview-515333692", "createdAt": "2020-10-23T05:02:26Z", "commit": {"oid": "77e3f28a1d8de58c0e487794d04c5cc299c15a8b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MzM3MTgw", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/491#pullrequestreview-515337180", "createdAt": "2020-10-23T05:04:15Z", "commit": {"oid": "77e3f28a1d8de58c0e487794d04c5cc299c15a8b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNTowNDoxNlrOHm8N-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNTowNDoxNlrOHm8N-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU5NDU1Mw==", "bodyText": "Can we add a comment around what this regex is trying to do  and why we are returning if length of parsedLine is not 3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/491#discussion_r510594553", "createdAt": "2020-10-23T05:04:16Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/util/MemInfoParser.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.util;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.collectors.StatExceptionCode;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.collectors.StatsCollector;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class MemInfoParser {\n+\n+  private static final Logger LOG = LogManager.getLogger(MemInfoParser.class);\n+  private static final String MEM_INFO_PATH = \"/proc/meminfo\";\n+  private static final String MEM_TOTAL_PREFIX = \"MemTotal:\";\n+  private static final long KB_TO_B = 1024L;\n+\n+  public static long getTotalMemory() {\n+    try {\n+      List<String> lines = Files.readAllLines(Paths.get(MEM_INFO_PATH));\n+      for (String line : lines) {\n+        if (line.startsWith(MEM_TOTAL_PREFIX)) {\n+          return extractTotalMemory(line);\n+        }\n+      }\n+    } catch (IOException e) {\n+      LOG.error(\"Unable to read total memory\", e);\n+      StatsCollector.instance().logException(StatExceptionCode.TOTAL_MEM_READ_ERROR);\n+    }\n+\n+    return -1;\n+  }\n+\n+  private static long extractTotalMemory(final String memLine) {\n+    String[] parsedLine = memLine.trim().replaceAll(\"\\\\s+\", \" \").split(\" \");\n+    if (parsedLine.length != 3) {\n+      return -1;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77e3f28a1d8de58c0e487794d04c5cc299c15a8b"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MzM4OTYz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/491#pullrequestreview-515338963", "createdAt": "2020-10-23T05:05:13Z", "commit": {"oid": "77e3f28a1d8de58c0e487794d04c5cc299c15a8b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 799, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}