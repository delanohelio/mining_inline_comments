{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzcyNzU1", "number": 518, "title": "Add a class that makes testing MetricsCollectors easier", "bodyText": "Fixes #:\nN/A\nDescription of changes:\nThe AbstractCollectorTest class can be extended to validate the behavior\nof any PerformanceAnalyzerMetricsCollector.\nTests:\n\nAbstractCollectorTest\nGCInfoCollectorTest\n\nIf new tests are added, how long do the new ones take to complete\n\nWill be based on the sum of all collectMetrics() calls, which should not exceed tens of seconds.\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-11-18T17:59:39Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/518", "merged": true, "mergeCommit": {"oid": "255ca441cfb4ad59fec7b9a42758654be39cc13e"}, "closed": true, "closedAt": "2021-01-13T18:24:14Z", "author": {"login": "sidheart"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddx_4pAH2gAyNTIzMzcyNzU1OmJiMDIxZDQyNjQ2NTk5ODYwMTAxYzM4OWY0ODBkZTNkMTIwNjRiMzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvzwz-gH2gAyNTIzMzcyNzU1OjdiMjRhODZmZjQxZjY1OWZjNDhhYzUyMDNlZGUzN2I1OTk4NmE4M2E=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb021d42646599860101c389f480de3d12064b30", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/bb021d42646599860101c389f480de3d12064b30", "committedDate": "2020-11-18T17:56:10Z", "message": "Add a class that makes testing MetricsCollectors easier\n\nThe AbstractCollectorTest class can be extended to validate the behavior\nof any PerformanceAnalyzerMetricsCollector."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzUwODM0", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/518#pullrequestreview-533750834", "createdAt": "2020-11-18T18:22:22Z", "commit": {"oid": "bb021d42646599860101c389f480de3d12064b30"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyMjoyM1rOH18Hjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyMjoyM1rOH18Hjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMTU1MA==", "bodyText": "Is this comment relevant ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/518#discussion_r526321550", "createdAt": "2020-11-18T18:22:23Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/collectors/AbstractCollectorTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.collectors;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.PerformanceAnalyzerMetrics;\n+import java.time.Instant;\n+import org.junit.Test;\n+\n+/**\n+ * A base class that others can extend to validate their Metrics Collectors behavior\n+ */\n+public abstract class AbstractCollectorTest {\n+  private PerformanceAnalyzerMetricsCollector uut;\n+\n+  // Implementors should call this in a setup() function to set their collector\n+  public void setUut(PerformanceAnalyzerMetricsCollector collector) {\n+    this.uut = collector;\n+  }\n+\n+  // This is the only line that implementors need to modify\n+  public abstract void validateMetric(String metric) throws Exception;\n+\n+  // This function does not need to be modified", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb021d42646599860101c389f480de3d12064b30"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzU0ODUx", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/518#pullrequestreview-533754851", "createdAt": "2020-11-18T18:27:21Z", "commit": {"oid": "bb021d42646599860101c389f480de3d12064b30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyNzoyMVrOH18Tww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyNzoyMVrOH18Tww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyNDY3NQ==", "bodyText": "why not end == -1 ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/518#discussion_r526324675", "createdAt": "2020-11-18T18:27:21Z", "author": {"login": "ktkrg"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/collectors/AbstractCollectorTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.collectors;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.PerformanceAnalyzerMetrics;\n+import java.time.Instant;\n+import org.junit.Test;\n+\n+/**\n+ * A base class that others can extend to validate their Metrics Collectors behavior\n+ */\n+public abstract class AbstractCollectorTest {\n+  private PerformanceAnalyzerMetricsCollector uut;\n+\n+  // Implementors should call this in a setup() function to set their collector\n+  public void setUut(PerformanceAnalyzerMetricsCollector collector) {\n+    this.uut = collector;\n+  }\n+\n+  // This is the only line that implementors need to modify\n+  public abstract void validateMetric(String metric) throws Exception;\n+\n+  // This function does not need to be modified\n+  @Test\n+  public void validateMetrics() throws Exception {\n+    uut.collectMetrics(Instant.now().toEpochMilli());\n+    String metricString = uut.getValue().toString();\n+    // chop off current time json\n+    int end = metricString.indexOf(PerformanceAnalyzerMetrics.sMetricNewLineDelimitor);\n+    metricString = metricString.substring(end+1);\n+    while (!metricString.isEmpty()) {\n+      end = metricString.indexOf(PerformanceAnalyzerMetrics.sMetricNewLineDelimitor);\n+      if (end < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb021d42646599860101c389f480de3d12064b30"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69b747dc4f1475632fdc6b18abfeeee5abbf4a3c", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/69b747dc4f1475632fdc6b18abfeeee5abbf4a3c", "committedDate": "2020-11-20T15:03:54Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a08361d8dcc5a85eed80502ff29c687dad18794", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/2a08361d8dcc5a85eed80502ff29c687dad18794", "committedDate": "2020-11-20T17:07:24Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e835ea371e4f51aee73608375c4028f249a9d4fc", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e835ea371e4f51aee73608375c4028f249a9d4fc", "committedDate": "2020-11-20T17:09:38Z", "message": "Slight modifications to collectors to make them more testable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0403a01df3918847796aeeb601f2bea254b59237", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/0403a01df3918847796aeeb601f2bea254b59237", "committedDate": "2020-11-20T17:10:48Z", "message": "Add stub tests for several collectors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9412b07d93b7e2461601c53359e444ebe7f41190", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/9412b07d93b7e2461601c53359e444ebe7f41190", "committedDate": "2020-11-20T17:17:34Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3b25a01491e242d94829464438cf3b6cef87904", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e3b25a01491e242d94829464438cf3b6cef87904", "committedDate": "2020-12-11T18:14:49Z", "message": "Fix Jackaon serialization issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f50381fd4adf364ecdddccc66afcca3f6c35da9", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/6f50381fd4adf364ecdddccc66afcca3f6c35da9", "committedDate": "2020-12-23T18:13:41Z", "message": "Fix method naming for Jackson serialization\n\n- Rename TCPStatus#getSSThresh to TCPStatus#getSsThresh to make Jackson\nserialization work out of the box"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aa57d35b4c3402e6342b72d522f84089878486c", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/2aa57d35b4c3402e6342b72d522f84089878486c", "committedDate": "2021-01-13T18:07:38Z", "message": "Fixup NetworkE2ECollectorTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b24a86ff41f659fc48ac5203ede37b59986a83a", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/7b24a86ff41f659fc48ac5203ede37b59986a83a", "committedDate": "2021-01-13T18:10:09Z", "message": "Fix one liner error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 817, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}