{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1Nzc2NjQ1", "number": 219, "title": "Adding the Shard Size in the Temperature Profile RCA", "bodyText": "*Issue #, if available: Adding the Shard Size Metric in the Dimension for calculating the Temperature Profile #218\n*Description of changes: Adding a new dimension in the calculation of the temperature profile RCA.\n*Tests: UTs, Manual Testing in Progress\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-06-01T06:11:55Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219", "merged": true, "mergeCommit": {"oid": "34ca3021b1c3f8973892368bd153073b054131be"}, "closed": true, "closedAt": "2020-06-10T17:56:30Z", "author": {"login": "aditjind"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcm5wrpAH2gAyNDI1Nzc2NjQ1OmMyOTJmNjBmM2RmMDI1N2FhMWNjZGYxNzhjMjQxYmMxYTU3YzQ0MjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp9EvjAFqTQyODI3NjE4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c292f60f3df0257aa1ccdf178c241bc1a57c4422", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/c292f60f3df0257aa1ccdf178c241bc1a57c4422", "committedDate": "2020-06-01T05:52:58Z", "message": "Adding the Shard Size in the Temperature Profile RCA\n\nUpdated the UTs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMTA2MDQ5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#pullrequestreview-422106049", "createdAt": "2020-06-01T19:07:17Z", "commit": {"oid": "c292f60f3df0257aa1ccdf178c241bc1a57c4422"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTowNzoxN1rOGdWkGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTo0NDo0OFrOGdXsvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzMTU3Nw==", "bodyText": "Can we make it camel case without underscores ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r433431577", "createdAt": "2020-06-01T19:07:17Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/metrics/Shard_Size_In_Bytes.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Metric;\n+\n+public class Shard_Size_In_Bytes extends Metric {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c292f60f3df0257aa1ccdf178c241bc1a57c4422"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0MDY2OQ==", "bodyText": "Let's also remove the IO* dimensions are they are not used", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r433440669", "createdAt": "2020-06-01T19:26:13Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/temperature/TemperatureVector.java", "diffHunk": "@@ -28,7 +28,8 @@\n         CPU_Utilization(com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.CPU_Utilization.NAME),\n         Heap_AllocRate(com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.Heap_AllocRate.NAME),\n         IO_READ_SYSCALL_RATE(com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.IO_ReadSyscallRate.NAME),\n-        IO_WriteSyscallRate(com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.IO_WriteSyscallRate.NAME);\n+        IO_WriteSyscallRate(com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.IO_WriteSyscallRate.NAME),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c292f60f3df0257aa1ccdf178c241bc1a57c4422"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0MjA2NQ==", "bodyText": "Unintentional ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r433442065", "createdAt": "2020-06-01T19:28:49Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -158,7 +163,8 @@ private void constructShardResourceUsageGraph() {\n     addLeaf(ioTotSyscallRate);\n \n     // High CPU Utilization RCA\n-    HotShardRca hotShardRca = new HotShardRca(5, 12, cpuUtilization, ioTotThroughput, ioTotSyscallRate);\n+    HotShardRca hotShardRca = new HotShardRca(5, 12, cpuUtilization,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c292f60f3df0257aa1ccdf178c241bc1a57c4422"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0OTA5OQ==", "bodyText": "Please add a class level javadoc", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r433449099", "createdAt": "2020-06-01T19:42:29Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/metric/temperature/byShard/ShardSizeAvgTemperatureCalculator.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.byShard;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.temperature.TemperatureVector.Dimension;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.byShard.calculators.AvgShardBasedTemperatureCalculator;\n+\n+public class ShardSizeAvgTemperatureCalculator extends", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c292f60f3df0257aa1ccdf178c241bc1a57c4422"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MDE3Mw==", "bodyText": "Let's remove this", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r433450173", "createdAt": "2020-06-01T19:44:48Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/temperature/dimension/ShardSizeDimensionTemperatureRca.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.temperature.dimension;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Rca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.flow_units.temperature.DimensionalTemperatureFlowUnit;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.temperature.ShardStore;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.temperature.TemperatureVector;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.scheduler.FlowUnitOperationArgWrapper;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.byShard.ShardSizeAvgTemperatureCalculator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.byShard.ShardSizeByShardTemperatureCalculator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.capacity.ShardSizePeakUsageTemperatureCalculator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.shardIndependent.DiskUsageShardIndependentTemperatureCalculator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.temperature.DimensionalTemperatureCalculator;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class ShardSizeDimensionTemperatureRca extends Rca<DimensionalTemperatureFlowUnit> {\n+\n+    private static final Logger LOG = LogManager.getLogger(ShardSizeDimensionTemperatureRca.class);\n+    // The threshold set here is an initial threshold only.\n+    // TODO: Update the threshold appropriately after testing so that we assign heat correctly.\n+    private static final TemperatureVector.NormalizedValue THRESHOLD = new TemperatureVector.NormalizedValue((short) 2);\n+    private static final int EVALUATION_INTERVAL_IN_S = 5;\n+    private final ShardSizeByShardTemperatureCalculator SHARD_SIZE_BY_SHARD;\n+    private final ShardSizeAvgTemperatureCalculator SHARD_SIZE_AVG;\n+    private final DiskUsageShardIndependentTemperatureCalculator DISK_USAGE;\n+    private final ShardSizePeakUsageTemperatureCalculator PEAK_SHARD_SIZE_USAGE;\n+    private final ShardStore SHARD_STORE;\n+\n+    public ShardSizeDimensionTemperatureRca(final ShardStore shardStore,\n+                                            final ShardSizeByShardTemperatureCalculator shardSizeByShard,\n+                                            final ShardSizeAvgTemperatureCalculator shardSizeAvg,\n+                                            final DiskUsageShardIndependentTemperatureCalculator diskUsageShardIndependent,\n+                                            final ShardSizePeakUsageTemperatureCalculator shardSizePeakUsage) {\n+       super(EVALUATION_INTERVAL_IN_S);\n+       this.SHARD_STORE = shardStore;\n+       this.SHARD_SIZE_BY_SHARD = shardSizeByShard;\n+       this.SHARD_SIZE_AVG = shardSizeAvg;\n+       this.DISK_USAGE = diskUsageShardIndependent;\n+       this.PEAK_SHARD_SIZE_USAGE = shardSizePeakUsage;\n+    }\n+\n+    @Override\n+    public void generateFlowUnitListFromWire(FlowUnitOperationArgWrapper args) {\n+        throw new IllegalStateException(\"This node: [\" + name() + \"] should not have received flow \"\n+                + \"units from remote nodes.\");\n+    }\n+\n+    @Override\n+    public DimensionalTemperatureFlowUnit operate() {\n+        LOG.debug(\"executing : {}\", name());\n+        DimensionalTemperatureFlowUnit shardSizeTemperatureFlowUnit =\n+                DimensionalTemperatureCalculator.getTemperatureForDimension(SHARD_STORE,\n+                        TemperatureVector.Dimension.Shard_Size_In_Bytes, SHARD_SIZE_BY_SHARD, SHARD_SIZE_AVG, DISK_USAGE,\n+                        PEAK_SHARD_SIZE_USAGE, THRESHOLD);\n+        LOG.info(\"Shard Size temperature calculated: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c292f60f3df0257aa1ccdf178c241bc1a57c4422"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07555042b042be1516417fb2768c981cd03f1bb2", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/07555042b042be1516417fb2768c981cd03f1bb2", "committedDate": "2020-06-01T23:04:46Z", "message": "Addressing CR Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjQxODI5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#pullrequestreview-422241829", "createdAt": "2020-06-01T23:15:10Z", "commit": {"oid": "07555042b042be1516417fb2768c981cd03f1bb2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzoxNToxMFrOGddBxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzoyMjowOVrOGddI8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzNzQ3Nw==", "bodyText": "Are the changes in this file required ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r433537477", "createdAt": "2020-06-01T23:15:10Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/AnalysisGraphTest.java", "diffHunk": "@@ -6,6 +6,8 @@\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.Heap_AllocRate;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.Paging_MajfltRate;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.Sched_Waittime;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.ShardSizeInBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07555042b042be1516417fb2768c981cd03f1bb2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzOTMxMg==", "bodyText": "Can we add a similar method to test shard_bytes for a cluster level RCA and the node level one ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r433539312", "createdAt": "2020-06-01T23:22:09Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ResourceHeatMapGraphTest.java", "diffHunk": "@@ -506,17 +506,13 @@ private void verifyFullNodeTemperatureProfile(String resp) {\n           break;\n         case Heap_AllocRate:\n           break;\n-        case IO_WriteSyscallRate:\n-          break;\n-        case IO_READ_SYSCALL_RATE:\n-          break;\n       }\n     }\n   }\n \n   private void verifyCpuDimension(JsonObject cpuObject) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07555042b042be1516417fb2768c981cd03f1bb2"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6fcbb06e022ac032e4921fe9a4b1b2e47f6269", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/1d6fcbb06e022ac032e4921fe9a4b1b2e47f6269", "committedDate": "2020-06-02T00:20:28Z", "message": "Addressing CR Comments x2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bc6950ef520cb03e7980ab1af707c7f23133ad8", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/8bc6950ef520cb03e7980ab1af707c7f23133ad8", "committedDate": "2020-06-02T01:03:11Z", "message": "Removing the min and the max shard calculations. (#220)\n\n* Removing the min and the max shard calculations while inserting shards in a Zone\r\n\r\nInstead while returning the shard list as part of the REST request, we sort\r\nshards by the temperature value for the dimension.\r\n\r\n* making it more obvious that this is reverse sorted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cc7ca1ec1ce9899c79af588016fb70c8f1061bb", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4cc7ca1ec1ce9899c79af588016fb70c8f1061bb", "committedDate": "2020-06-03T01:23:42Z", "message": "Addressing Number of Shards Bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74e5f5b56ac3c43dd274c7b2e7919c46dd223e51", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/74e5f5b56ac3c43dd274c7b2e7919c46dd223e51", "committedDate": "2020-06-03T01:51:47Z", "message": "Addressing Number of Shards Bug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTA4MzI4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#pullrequestreview-424908328", "createdAt": "2020-06-04T23:42:30Z", "commit": {"oid": "74e5f5b56ac3c43dd274c7b2e7919c46dd223e51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzo0MjozMFrOGfb4cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzo0MjozMFrOGfb4cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYxNTg1Nw==", "bodyText": "can we follow the same naming convention and remove \"In_BYTES\" from the name of the metric", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r435615857", "createdAt": "2020-06-04T23:42:30Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/metrics/ShardSizeInBytes.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Metric;\n+\n+public class ShardSizeInBytes extends Metric {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e5f5b56ac3c43dd274c7b2e7919c46dd223e51"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/2924a07e87ecac83ddf6a69759af92058e5bddac", "committedDate": "2020-06-05T01:46:36Z", "message": "Renaming Shard Size File"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NDY2NzEx", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#pullrequestreview-426466711", "createdAt": "2020-06-08T17:35:58Z", "commit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozNTo1OFrOGgo-bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo0NjozM1rOGgpVPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODk1Ng==", "bodyText": "Please add a javadoc for this class. What it is ? How it is calculated and if it is aggregated in some form etc.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r436878956", "createdAt": "2020-06-08T17:35:58Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/metrics/ShardSize.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Metric;\n+\n+public class ShardSize extends Metric {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3OTgxMw==", "bodyText": "Can you remove these changes ? These are from a different commit", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r436879813", "createdAt": "2020-06-08T17:37:30Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/summaries/temperature/NodeLevelDimensionalSummary.java", "diffHunk": "@@ -272,37 +275,11 @@ private void buildZoneProfile(final Record record, ShardStore shardStore\n \n         void addShard(ShardProfileSummary shard) {\n             shardProfileSummaries.add(shard);\n-            if (minShard == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDExNA==", "bodyText": "remove ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r436880114", "createdAt": "2020-06-08T17:38:02Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/AnalysisGraphTest.java", "diffHunk": "@@ -7,6 +7,7 @@\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.Paging_MajfltRate;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.Sched_Waittime;\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MTYyNw==", "bodyText": "Can we name it something else ? There are too many shards in the name here :)", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r436881627", "createdAt": "2020-06-08T17:40:50Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -213,6 +218,11 @@ protected void constructResourceHeatMapGraph() {\n             new ShardIndependentTemperatureCalculatorCpuUtilMetric();\n     TotalCpuUtilForTotalNodeMetric cpuUtilPeakUsage = new TotalCpuUtilForTotalNodeMetric();\n \n+    ShardSizeByShardTemperatureCalculator shardSizeByShard =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NDc5Nw==", "bodyText": "Why do we not need the totalBytes over all shards ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r436884797", "createdAt": "2020-06-08T17:46:33Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -234,6 +247,9 @@ protected void constructResourceHeatMapGraph() {\n     addLeaf(shardIndependentHeapAllocRate);\n     addLeaf(heapAllocRateTotal);\n \n+    addLeaf(shardSizeByShard);\n+    addLeaf(shardSizeAvg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NjAwODkz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#pullrequestreview-426600893", "createdAt": "2020-06-08T20:35:43Z", "commit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDozNTo0NFrOGgvdEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDozNTo0NFrOGgvdEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4NTEwNg==", "bodyText": "I guess we can remove this line", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r436985106", "createdAt": "2020-06-08T20:35:44Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -70,12 +74,13 @@\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.temperature.ClusterTemperatureRca;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.temperature.NodeTemperatureRca;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.temperature.dimension.CpuUtilDimensionTemperatureRca;\n-\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.temperature.dimension.HeapAllocRateTemperatureRca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.temperature.dimension.ShardSizeDimensionTemperatureRca;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NjA3NDkw", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#pullrequestreview-426607490", "createdAt": "2020-06-08T20:45:57Z", "commit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo0NTo1N1rOGgvx3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo0NTo1N1rOGgvx3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5MDQzMA==", "bodyText": "Do we want to throw an exception here if shardsize flowunit is not received ? Can we simple send out an empty flowunit if some upstream flowunits are missing ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r436990430", "createdAt": "2020-06-08T20:45:57Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/temperature/NodeTemperatureRca.java", "diffHunk": "@@ -85,8 +91,13 @@ public CompactNodeTemperatureFlowUnit operate() {\n       throw new IllegalStateException(\"One flow unit expected. Found: \" + heapAllocRateFlowUnits);\n     }\n \n+    if (shardSizeFlowUnits.size() != 1) {\n+      throw new IllegalArgumentException(\"One flow unit expected. Found: \" + shardSizeFlowUnits);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e53004c0988ffeae808d9f5ed1a461da287875a9", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e53004c0988ffeae808d9f5ed1a461da287875a9", "committedDate": "2020-06-08T21:32:07Z", "message": "Addressing Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79b68d64622f008147c3476162bf3ceef8192d68", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/79b68d64622f008147c3476162bf3ceef8192d68", "committedDate": "2020-06-08T21:37:47Z", "message": "Merge branch 'master' into rca-changes-ut"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bafc463d5867e2eb6e43d037b9acca0e4f97a49", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/8bafc463d5867e2eb6e43d037b9acca0e4f97a49", "committedDate": "2020-06-09T17:16:57Z", "message": "Because of a race during merging changes into master, we introduced a\u2026 (#226)\n\n* Because of a race during merging changes into master, we introduced a merge conflict that will fail the build\r\n\r\n* Removing the parameter marker in the LOG"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d7a8e7e7612196a6e4affa9aa97594a892baddd", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/1d7a8e7e7612196a6e4affa9aa97594a892baddd", "committedDate": "2020-06-09T17:22:40Z", "message": "Adding the Shard Size in the Temperature Profile RCA\n\nUpdated the UTs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b53c1edd39d8d3f0b69cf0d08a1deb7d1e2f73f", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/3b53c1edd39d8d3f0b69cf0d08a1deb7d1e2f73f", "committedDate": "2020-06-09T17:28:32Z", "message": "Addressing CR Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86c8774a43379b89e9f32da85e4e4d650962b190", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/86c8774a43379b89e9f32da85e4e4d650962b190", "committedDate": "2020-06-09T17:28:32Z", "message": "Addressing Number of Shards Bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c603c7c0c9787cd1d856769a0e2af36e4bd22b7", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/8c603c7c0c9787cd1d856769a0e2af36e4bd22b7", "committedDate": "2020-06-09T17:28:33Z", "message": "Addressing Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc8e38503bf1f16a332d5650cd01201667f39aaf", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/dc8e38503bf1f16a332d5650cd01201667f39aaf", "committedDate": "2020-06-09T19:55:41Z", "message": "Retained a Copy of the same file During Merge. Removing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8dd48f76b126c27f37be9cf1e14e55146e0c2e5", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/f8dd48f76b126c27f37be9cf1e14e55146e0c2e5", "committedDate": "2020-06-09T20:04:45Z", "message": "Adding support for Running RCA on Nodes which are not dedicated masters."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c0ab4a9910cb297cf1abd8aa0d1799839584162", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/8c0ab4a9910cb297cf1abd8aa0d1799839584162", "committedDate": "2020-06-09T21:03:26Z", "message": "Updating the RCA Conf Files\n\nDisabling the Shard Size based Temperature RCA by default because the Shard\nSize RCA needs per shard node stats metric which is disabled by default"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NjI5NTg0", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#pullrequestreview-427629584", "createdAt": "2020-06-10T00:16:39Z", "commit": {"oid": "8c0ab4a9910cb297cf1abd8aa0d1799839584162"}, "state": "APPROVED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDoxNjo0MFrOGhgqfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDo0ODoxOVrOGhhKQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5MTM1OQ==", "bodyText": "Thanks for the comments !!", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r437791359", "createdAt": "2020-06-10T00:16:40Z", "author": {"login": "yojs"}, "path": "pa_config/rca.conf", "diffHunk": "@@ -60,16 +60,24 @@\n   \"muted-rcas\": [\n     \"HotShardRca\",\n     \"HotShardClusterRca\",\n+    // Calculating temperature heat along 4 parameters for Heap dimension", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c0ab4a9910cb297cf1abd8aa0d1799839584162"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5MjUyMw==", "bodyText": "Thanks for changing this. Doing that calculation on the SQLite layer is much much faster.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r437792523", "createdAt": "2020-06-10T00:20:40Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -234,6 +247,9 @@ protected void constructResourceHeatMapGraph() {\n     addLeaf(shardIndependentHeapAllocRate);\n     addLeaf(heapAllocRateTotal);\n \n+    addLeaf(shardSizeByShard);\n+    addLeaf(shardSizeAvg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NDc5Nw=="}, "originalCommit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NTA5NA==", "bodyText": "Fro every new dimension we add, we have to add 4 new graph nodes that translates into multiple Java classes. It would be nice if we can merge them so that adding a new dimension is as simple as adding a new metric to a set that would be much cleaner.\nThis refactoring can be part of a separate PR. Just wanted to bring this up.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r437795094", "createdAt": "2020-06-10T00:30:22Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/metric/temperature/capacity/ShardTotalDiskUsageTemperatureCalculator.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.capacity;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.temperature.TemperatureVector;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.capacity.calculators.TotalNodeTemperatureCalculator;\n+\n+/**\n+ * This class calculated the total disk used by shards in the node.\n+ */\n+\n+public class ShardTotalDiskUsageTemperatureCalculator extends TotalNodeTemperatureCalculator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c0ab4a9910cb297cf1abd8aa0d1799839584162"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NjcwNA==", "bodyText": "Throwing an exception is dangerous as this will mute the node and exclude it from future runs. We should not throw an exception inside operate unless it is an un-recoverable exception.\nBut here we check for size to be one as this is intra-node aggregation and we don't expect multiple FlowUnits to show up just one and to @rguo-aws 's point, that can be an empty one.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r437796704", "createdAt": "2020-06-10T00:37:17Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/temperature/NodeTemperatureRca.java", "diffHunk": "@@ -85,8 +91,13 @@ public CompactNodeTemperatureFlowUnit operate() {\n       throw new IllegalStateException(\"One flow unit expected. Found: \" + heapAllocRateFlowUnits);\n     }\n \n+    if (shardSizeFlowUnits.size() != 1) {\n+      throw new IllegalArgumentException(\"One flow unit expected. Found: \" + shardSizeFlowUnits);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5MDQzMA=="}, "originalCommit": {"oid": "2924a07e87ecac83ddf6a69759af92058e5bddac"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5OTE0OQ==", "bodyText": "At some point we should move them to the rca.conf as dynamic configs.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r437799149", "createdAt": "2020-06-10T00:47:08Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/temperature/dimension/ShardSizeDimensionTemperatureRca.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.temperature.dimension;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Rca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.flow_units.temperature.DimensionalTemperatureFlowUnit;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.temperature.ShardStore;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.temperature.TemperatureVector;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.scheduler.FlowUnitOperationArgWrapper;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.byShard.ShardSizeAvgTemperatureCalculator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.byShard.ShardSizeMetricBasedTemperatureCalculator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.metric.temperature.capacity.ShardTotalDiskUsageTemperatureCalculator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.temperature.DimensionalTemperatureCalculator;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+/*\n+ *Returns the shard size based heat of an individual node.\n+ */\n+\n+public class ShardSizeDimensionTemperatureRca extends Rca<DimensionalTemperatureFlowUnit> {\n+\n+    private static final Logger LOG = LogManager.getLogger(ShardSizeDimensionTemperatureRca.class);\n+    // The threshold set here is an initial threshold only.\n+    // TODO: Update the threshold appropriately after testing so that we assign heat correctly.\n+    private static final TemperatureVector.NormalizedValue THRESHOLD = new TemperatureVector.NormalizedValue((short) 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c0ab4a9910cb297cf1abd8aa0d1799839584162"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5OTM3Mw==", "bodyText": "Can we remove <<<<<<< HEAD ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r437799373", "createdAt": "2020-06-10T00:47:55Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ResourceHeatMapGraphTest.java", "diffHunk": "@@ -337,14 +337,367 @@ public void mutedTemperatureProfile() {\n   }\n \n   /**\n+<<<<<<< HEAD", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c0ab4a9910cb297cf1abd8aa0d1799839584162"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5OTQ5MA==", "bodyText": "remove ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#discussion_r437799490", "createdAt": "2020-06-10T00:48:19Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ResourceHeatMapGraphTest.java", "diffHunk": "@@ -337,14 +337,367 @@ public void mutedTemperatureProfile() {\n   }\n \n   /**\n+<<<<<<< HEAD\n+   [\n+   {\n+   \"NodeLevelZoneSummary\":[\n+   {\n+   \"all_shards\":[],\n+   \"zone\":\"HOT\"\n+   },\n+   {\n+   \"all_shards\":[],\n+   \"zone\":\"WARM\"\n+   },\n+   {\n+   \"all_shards\":[\n+   {\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":4,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"10\"\n+   }\n+   ]\n+   },\n+   {\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":0,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"9\"\n+   }\n+   ]\n+   },\n+   {\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":2,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"0\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"0\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"9\"\n+   }\n+   ]\n+   }\n+   ],\n+   \"max\":{\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":4,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"10\"\n+   }\n+   ]\n+   },\n+   \"min\":{\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":2,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"0\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"0\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"9\"\n+   }\n+   ]\n+   },\n+   \"zone\":\"LUKE_WARM\"\n+   },\n+   {\n+   \"all_shards\":[],\n+   \"zone\":\"COLD\"\n+   }\n+   ],\n+   \"dimension\":\"CPU_Utilization\",\n+   \"mean\":1,\n+   \"numShards\":3,\n+   \"timestamp\":1591056310990,\n+   \"total\":0.113345915412554\n+   },\n+   {\n+   \"NodeLevelZoneSummary\":[\n+   {\n+   \"all_shards\":[],\n+   \"zone\":\"HOT\"\n+   },\n+   {\n+   \"all_shards\":[],\n+   \"zone\":\"WARM\"\n+   },\n+   {\n+   \"all_shards\":[\n+   {\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":4,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"10\"\n+   }\n+   ]\n+   },\n+   {\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":0,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"9\"\n+   }\n+   ]\n+   },\n+   {\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":2,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"0\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"0\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"9\"\n+   }\n+   ]\n+   }\n+   ],\n+   \"max\":{\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":4,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"10\"\n+   }\n+   ]\n+   },\n+   \"min\":{\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":0,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"9\"\n+   }\n+   ]\n+   },\n+   \"zone\":\"LUKE_WARM\"\n+   },\n+   {\n+   \"all_shards\":[],\n+   \"zone\":\"COLD\"\n+   }\n+   ],\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"mean\":10,\n+   \"numShards\":3,\n+   \"timestamp\":1591056310990,\n+   \"total\":7631604.33333333\n+   },\n+   {\n+   \"NodeLevelZoneSummary\":[\n+   {\n+   \"all_shards\":[],\n+   \"zone\":\"HOT\"\n+   },\n+   {\n+   \"all_shards\":[],\n+   \"zone\":\"WARM\"\n+   },\n+   {\n+   \"all_shards\":[\n+   {\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":0,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"9\"\n+   }\n+   ]\n+   },\n+   {\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":4,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"10\"\n+   }\n+   ]\n+   },\n+   {\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":2,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"0\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"0\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"9\"\n+   }\n+   ]\n+   }\n+   ],\n+   \"max\":{\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":0,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"1\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"9\"\n+   }\n+   ]\n+   },\n+   \"min\":{\n+   \"index_name\":\"pmc\",\n+   \"shard_id\":2,\n+   \"temperature\":[\n+   {\n+   \"dimension\":\"CPU_Utilization\",\n+   \"value\":\"0\"\n+   },\n+   {\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"value\":\"0\"\n+   },\n+   {\n+   \"dimension\":\"Shard_Size_In_Bytes\",\n+   \"value\":\"9\"\n+   }\n+   ]\n+   },\n+   \"zone\":\"LUKE_WARM\"\n+   },\n+   {\n+   \"all_shards\":[],\n+   \"zone\":\"COLD\"\n+   }\n+   ],\n+   \"dimension\":\"Heap_AllocRate\",\n+   \"mean\":1,\n+   \"numShards\":3,\n+   \"timestamp\":1591056310990,\n+   \"total\":7429635.38060667\n+   }\n+   ]\n+\n+=======", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c0ab4a9910cb297cf1abd8aa0d1799839584162"}, "originalPosition": 365}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6e40462d34298cd244b46a2ef464cb50fff6a33", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d6e40462d34298cd244b46a2ef464cb50fff6a33", "committedDate": "2020-06-10T02:54:26Z", "message": "Emitting Empty Flow Unit in case of No flow units received"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76749cf1e13f8778b61be68670e3b1e49079c4e7", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/76749cf1e13f8778b61be68670e3b1e49079c4e7", "committedDate": "2020-06-10T03:03:03Z", "message": "CheckStyle Errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Mjc2MTg1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/219#pullrequestreview-428276185", "createdAt": "2020-06-10T17:26:22Z", "commit": {"oid": "76749cf1e13f8778b61be68670e3b1e49079c4e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1017, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}