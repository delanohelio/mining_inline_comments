{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMzkzMTI4", "number": 279, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODozODozM1rOER7WKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzowMzo0NVrOESei4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjMzNTc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerWebServer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODozODozM1rOG254Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODozODozM1rOG254Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDU5MA==", "bodyText": "nit: additional space. static  class -> static class", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/279#discussion_r460224590", "createdAt": "2020-07-24T18:38:33Z", "author": {"login": "ktkrg"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerWebServer.java", "diffHunk": "@@ -66,8 +71,34 @@ public static HttpServer createInternalServer(String portFromSetting, String hos\n     return null;\n   }\n \n+  /**\n+   * ClientAuthConfigurator makes the server perform client authentication if the user has set up a\n+   * certificate authority\n+   */\n+  private static  class ClientAuthConfigurator extends HttpsConfigurator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dea63c469011a2236be81bbe071b0bde83ca6dd7"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODEwMjczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerWebServer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzowMzo0NVrOG3rfqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzowMzo0NVrOG3rfqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzNzQ4Mg==", "bodyText": "Do you plan to wrap up the TODO in this PR or in a follow up ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/279#discussion_r461037482", "createdAt": "2020-07-27T17:03:45Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerWebServer.java", "diffHunk": "@@ -81,38 +112,30 @@ private static HttpServer createHttpsServer(int readerPort, String bindHost) thr\n       server = HttpsServer.create(new InetSocketAddress(InetAddress.getLoopbackAddress(), readerPort), INCOMING_QUEUE_LENGTH);\n     }\n \n-    TrustManager[] trustAllCerts =\n-        new TrustManager[] {\n-            new X509TrustManager() {\n-\n-              public X509Certificate[] getAcceptedIssuers() {\n-                return null;\n-              }\n-\n-              public void checkClientTrusted(X509Certificate[] certs, String authType) {}\n-\n-              public void checkServerTrusted(X509Certificate[] certs, String authType) {}\n-            }\n-        };\n-\n-    HostnameVerifier allHostsValid =\n-        new HostnameVerifier() {\n-          public boolean verify(String hostname, SSLSession session) {\n-            return true;\n-          }\n-        };\n-\n     // Install the all-trusting trust manager\n     SSLContext sslContext = SSLContext.getInstance(\"TLSv1.2\");\n \n     KeyStore ks = CertificateUtils.createKeyStore();\n     KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"NewSunX509\");\n     kmf.init(ks, CertificateUtils.IN_MEMORY_PWD.toCharArray());\n-    sslContext.init(kmf.getKeyManagers(), trustAllCerts, null);\n+    sslContext.init(kmf.getKeyManagers(), CertificateUtils.getTrustManagers(true), null);\n+    server.setHttpsConfigurator(new ClientAuthConfigurator(sslContext));\n+\n+\n+    // TODO ask ktkrg why this is necessary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dea63c469011a2236be81bbe071b0bde83ca6dd7"}, "originalPosition": 114}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2523, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}