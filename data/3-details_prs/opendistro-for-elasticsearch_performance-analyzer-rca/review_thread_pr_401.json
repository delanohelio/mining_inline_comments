{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NjU5NDYy", "number": 401, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMjo0NToxMFrOEd6FTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMTo0MjoxOFrOEgKnXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Nzk1Nzg4OnYy", "diffSide": "RIGHT", "path": "src/test/resources/rca/rca_elected_master.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMjo0NToxMFrOHJWREA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODozMjoyMlrOHLDMBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NDA0OA==", "bodyText": "Let us rename this \"cache-config\" to the actual name of your RCA. ideally we should keep the 1:1 mapping between the config and the RCA it belongs to to avoid confusion.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r479564048", "createdAt": "2020-08-28T22:45:10Z", "author": {"login": "rguo-aws"}, "path": "src/test/resources/rca/rca_elected_master.conf", "diffHunk": "@@ -73,6 +73,12 @@\n       \"cpu-utilization-cluster-percentage\" : 0.3,\n       \"io-total-throughput-cluster-percentage\" : 0.3,\n       \"io-total-syscallrate-cluster-percentage\" : 0.3\n+    },\n+    \"cache-config\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2712bd97bbd4457465cc2944c427797d072849"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM0ODYxNQ==", "bodyText": "Got it. Modified", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481348615", "createdAt": "2020-09-01T18:32:22Z", "author": {"login": "sruti1312"}, "path": "src/test/resources/rca/rca_elected_master.conf", "diffHunk": "@@ -73,6 +73,12 @@\n       \"cpu-utilization-cluster-percentage\" : 0.3,\n       \"io-total-throughput-cluster-percentage\" : 0.3,\n       \"io-total-syscallrate-cluster-percentage\" : 0.3\n+    },\n+    \"cache-config\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NDA0OA=="}, "originalCommit": {"oid": "ba2712bd97bbd4457465cc2944c427797d072849"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Nzk2MDgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/CacheConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMjo0Njo1MVrOHJWSqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODozNzozOVrOHLDXSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NDQ1Ng==", "bodyText": "can we add a java doc here to explain the meaning of each config setting ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r479564456", "createdAt": "2020-08-28T22:46:51Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/CacheConfig.java", "diffHunk": "@@ -22,21 +22,41 @@\n \n     private Double fieldDataCacheSizeThreshold;\n     private Double shardRequestCacheSizeThreshold;\n+    private Integer fieldDataCollectorTimePeriodInSec;\n+    private Integer shardRequestCollectorTimePeriodInSec;\n \n     public static final double DEFAULT_FIELD_DATA_CACHE_SIZE_THRESHOLD = 0.8;\n     public static final double DEFAULT_SHARD_REQUEST_CACHE_SIZE_THRESHOLD = 0.9;\n+    public static final int DEFAULT_FIELD_DATA_COLLECTOR_TIME_PERIOD_IN_SEC = 300;\n+    public static final int DEFAULT_SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC = 300;\n \n     public CacheConfig(final RcaConf rcaConf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2712bd97bbd4457465cc2944c427797d072849"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1MTQ5Ng==", "bodyText": "Added", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481351496", "createdAt": "2020-09-01T18:37:39Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/CacheConfig.java", "diffHunk": "@@ -22,21 +22,41 @@\n \n     private Double fieldDataCacheSizeThreshold;\n     private Double shardRequestCacheSizeThreshold;\n+    private Integer fieldDataCollectorTimePeriodInSec;\n+    private Integer shardRequestCollectorTimePeriodInSec;\n \n     public static final double DEFAULT_FIELD_DATA_CACHE_SIZE_THRESHOLD = 0.8;\n     public static final double DEFAULT_SHARD_REQUEST_CACHE_SIZE_THRESHOLD = 0.9;\n+    public static final int DEFAULT_FIELD_DATA_COLLECTOR_TIME_PERIOD_IN_SEC = 300;\n+    public static final int DEFAULT_SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC = 300;\n \n     public CacheConfig(final RcaConf rcaConf) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NDQ1Ng=="}, "originalCommit": {"oid": "ba2712bd97bbd4457465cc2944c427797d072849"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzAyMTM3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/cache_tuning/resource/rca.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNzowMTo1NFrOHKBAEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODozMjoyOFrOHLDMNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI2NDIwOQ==", "bodyText": "nit: newline", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r480264209", "createdAt": "2020-08-31T17:01:54Z", "author": {"login": "vigyasharma"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/cache_tuning/resource/rca.conf", "diffHunk": "@@ -0,0 +1,84 @@\n+{\n+  \"analysis-graph-implementor\":\n+    \"com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.AnalysisGraphTest\",\n+  // it can be file:// or s3://\n+  \"rca-store-location\": \"s3://sifi-store/rcas/\",\n+\n+  //it can be file:// or s3://\n+  \"threshold-store-location\": \"s3://sifi-store/thresholds/\",\n+\n+  \"new-rca-check-minutes\": 60,\n+\n+  \"new-threshold-check-minutes\": 30,\n+\n+  // The size of the task queue for all networking operations.\n+  // Small size queues may result in dropping of flow units, while large size queues can lead to a\n+  // bigger backlog of tasks resulting in delays in sending and receiving.\n+  \"network-queue-length\": 200,\n+\n+  // The size of the per-vertex buffer for flow units received from remote nodes.\n+  // Small buffer sizes may result in dropping of flow units, while large buffer size can lead to\n+  // high memory consumptions depending on how the analysis graph is configured.\n+  \"max-flow-units-per-vertex-buffer\": 200,\n+\n+  \"tags\": {\n+    \"locus\": \"data-node\",\n+    \"disk\": \"ssd\",\n+    \"region\": \"use1\",\n+    \"instance-type\": \"i3.8xl\",\n+    \"domain\": \"rca-test-cluster\"\n+  },\n+\n+  \"remote-peers\": [\"ip1\", \"ip2\", \"ip3\"],\n+\n+  // Tells the runtime where the RCAs will be stored.\n+  \"datastore\": {\n+    // accepted types are sqlite, in-memory.\n+    \"type\": \"sqlite\",\n+    \"location-dir\": \"/tmp\",\n+    \"filename\": \"rca.sqlite\",\n+    \"storage-file-retention-count\": 5,\n+    // How often the sqlite file be repeated in seconds. This file contains RCAs and therefore rotating it too frequently\n+    // might not be as fruitful as there might not be any data.\n+    \"rotation-period-seconds\": 21600\n+  },\n+\n+  // Add config settings for different RCAs\n+  \"rca-config-settings\": {\n+    // old gen rca\n+    \"high-heap-usage-old-gen-rca\": {\n+      \"top-k\" : 3\n+    },\n+    //young gen rca\n+    \"high-heap-usage-young-gen-rca\": {\n+      \"promotion-rate-mb-per-second\" : 500,\n+      \"young-gen-gc-time-ms-per-second\" : 400\n+    },\n+    \"queue-rejection-rca\": {\n+      \"rejection-time-period-in-seconds\" : 5\n+    },\n+    //hot shard rca\n+    \"hot-shard-rca\": {\n+      \"cpu-utilization\" : 0.01,\n+      \"io-total-throughput-in-bytes\" : 250000.0,\n+      \"io-total-syscallrate-per-second\" : 0.1\n+    },\n+    \"cache-config\": {\n+      \"field-data-cache-size-threshold\" : 0.8,\n+      \"shard-request-cache-threshold\" : 0.9,\n+      \"field-data-collector-time-period-in-sec\" : 5,\n+      \"shard-request-collector-time-period-in-sec\" : 5\n+    }\n+  },\n+\n+  \"muted-rcas\": [],\n+  \"muted-deciders\": [],\n+  \"muted-actions\": [],\n+\n+  \"decider-config-settings\": {\n+    \"cache-decider-config\": {\n+      \"field-data-cache-upper-bound\" : 0.4,\n+      \"shard-request-cache-upper-bound\" : 0.05\n+    }\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2712bd97bbd4457465cc2944c427797d072849"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM0ODY2MQ==", "bodyText": "Done", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481348661", "createdAt": "2020-09-01T18:32:28Z", "author": {"login": "sruti1312"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/cache_tuning/resource/rca.conf", "diffHunk": "@@ -0,0 +1,84 @@\n+{\n+  \"analysis-graph-implementor\":\n+    \"com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.AnalysisGraphTest\",\n+  // it can be file:// or s3://\n+  \"rca-store-location\": \"s3://sifi-store/rcas/\",\n+\n+  //it can be file:// or s3://\n+  \"threshold-store-location\": \"s3://sifi-store/thresholds/\",\n+\n+  \"new-rca-check-minutes\": 60,\n+\n+  \"new-threshold-check-minutes\": 30,\n+\n+  // The size of the task queue for all networking operations.\n+  // Small size queues may result in dropping of flow units, while large size queues can lead to a\n+  // bigger backlog of tasks resulting in delays in sending and receiving.\n+  \"network-queue-length\": 200,\n+\n+  // The size of the per-vertex buffer for flow units received from remote nodes.\n+  // Small buffer sizes may result in dropping of flow units, while large buffer size can lead to\n+  // high memory consumptions depending on how the analysis graph is configured.\n+  \"max-flow-units-per-vertex-buffer\": 200,\n+\n+  \"tags\": {\n+    \"locus\": \"data-node\",\n+    \"disk\": \"ssd\",\n+    \"region\": \"use1\",\n+    \"instance-type\": \"i3.8xl\",\n+    \"domain\": \"rca-test-cluster\"\n+  },\n+\n+  \"remote-peers\": [\"ip1\", \"ip2\", \"ip3\"],\n+\n+  // Tells the runtime where the RCAs will be stored.\n+  \"datastore\": {\n+    // accepted types are sqlite, in-memory.\n+    \"type\": \"sqlite\",\n+    \"location-dir\": \"/tmp\",\n+    \"filename\": \"rca.sqlite\",\n+    \"storage-file-retention-count\": 5,\n+    // How often the sqlite file be repeated in seconds. This file contains RCAs and therefore rotating it too frequently\n+    // might not be as fruitful as there might not be any data.\n+    \"rotation-period-seconds\": 21600\n+  },\n+\n+  // Add config settings for different RCAs\n+  \"rca-config-settings\": {\n+    // old gen rca\n+    \"high-heap-usage-old-gen-rca\": {\n+      \"top-k\" : 3\n+    },\n+    //young gen rca\n+    \"high-heap-usage-young-gen-rca\": {\n+      \"promotion-rate-mb-per-second\" : 500,\n+      \"young-gen-gc-time-ms-per-second\" : 400\n+    },\n+    \"queue-rejection-rca\": {\n+      \"rejection-time-period-in-seconds\" : 5\n+    },\n+    //hot shard rca\n+    \"hot-shard-rca\": {\n+      \"cpu-utilization\" : 0.01,\n+      \"io-total-throughput-in-bytes\" : 250000.0,\n+      \"io-total-syscallrate-per-second\" : 0.1\n+    },\n+    \"cache-config\": {\n+      \"field-data-cache-size-threshold\" : 0.8,\n+      \"shard-request-cache-threshold\" : 0.9,\n+      \"field-data-collector-time-period-in-sec\" : 5,\n+      \"shard-request-collector-time-period-in-sec\" : 5\n+    }\n+  },\n+\n+  \"muted-rcas\": [],\n+  \"muted-deciders\": [],\n+  \"muted-actions\": [],\n+\n+  \"decider-config-settings\": {\n+    \"cache-decider-config\": {\n+      \"field-data-cache-upper-bound\" : 0.4,\n+      \"shard-request-cache-upper-bound\" : 0.05\n+    }\n+  }\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI2NDIwOQ=="}, "originalCommit": {"oid": "ba2712bd97bbd4457465cc2944c427797d072849"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzA1NzIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/CacheConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNzoxMjozNlrOHKBV1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNzoxMjozNlrOHKBV1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI2OTc4Mw==", "bodyText": "We should have some validation logic in these configs (beyond type checks), like not allowing negative values. I added this support with the Config object in PR #402 , it takes a validator predicate function. Pls consider leveraging it if relevant.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r480269783", "createdAt": "2020-08-31T17:12:36Z", "author": {"login": "vigyasharma"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/CacheConfig.java", "diffHunk": "@@ -22,21 +22,41 @@\n \n     private Double fieldDataCacheSizeThreshold;\n     private Double shardRequestCacheSizeThreshold;\n+    private Integer fieldDataCollectorTimePeriodInSec;\n+    private Integer shardRequestCollectorTimePeriodInSec;\n \n     public static final double DEFAULT_FIELD_DATA_CACHE_SIZE_THRESHOLD = 0.8;\n     public static final double DEFAULT_SHARD_REQUEST_CACHE_SIZE_THRESHOLD = 0.9;\n+    public static final int DEFAULT_FIELD_DATA_COLLECTOR_TIME_PERIOD_IN_SEC = 300;\n+    public static final int DEFAULT_SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC = 300;\n \n     public CacheConfig(final RcaConf rcaConf) {\n         fieldDataCacheSizeThreshold = rcaConf.readRcaConfig(CONFIG_NAME,\n                 RCA_CONF_KEY_CONSTANTS.FIELD_DATA_CACHE_SIZE_THRESHOLD, Double.class);\n         shardRequestCacheSizeThreshold = rcaConf.readRcaConfig(CONFIG_NAME,\n                 RCA_CONF_KEY_CONSTANTS.SHARD_REQUEST_CACHE_SIZE_THRESHOLD, Double.class);\n+        fieldDataCollectorTimePeriodInSec =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2712bd97bbd4457465cc2944c427797d072849"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTk4MzM4OnYy", "diffSide": "RIGHT", "path": "pa_config/rca_master.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo0NTo0MlrOHLFs7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMjowODoyNFrOHLPp4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4OTgwNg==", "bodyText": "nit: space after //", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481389806", "createdAt": "2020-09-01T19:45:42Z", "author": {"login": "vigyasharma"}, "path": "pa_config/rca_master.conf", "diffHunk": "@@ -69,8 +69,12 @@\n       \"io-total-throughput-cluster-percentage\" : 0.3,\n       \"io-total-syscallrate-cluster-percentage\" : 0.3\n     },\n-    \"cache-config\": {\n-      \"field-data-cache-size-threshold\" : 0.8,\n+    //field data cache rca", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU1Mjg2Nw==", "bodyText": "Done.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481552867", "createdAt": "2020-09-02T02:08:24Z", "author": {"login": "sruti1312"}, "path": "pa_config/rca_master.conf", "diffHunk": "@@ -69,8 +69,12 @@\n       \"io-total-throughput-cluster-percentage\" : 0.3,\n       \"io-total-syscallrate-cluster-percentage\" : 0.3\n     },\n-    \"cache-config\": {\n-      \"field-data-cache-size-threshold\" : 0.8,\n+    //field data cache rca", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4OTgwNg=="}, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTk5NjQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo0OTo0M1rOHLF1KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMjo1ODo0MVrOHLRnFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5MTkxMw==", "bodyText": "Did you completely remove public <T> T readRcaConfig(String rcaName, String key, Class<? extends T> clazz) ? No more consumers for it?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481391913", "createdAt": "2020-09-01T19:49:43Z", "author": {"login": "vigyasharma"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -186,21 +193,29 @@ public DeciderConfig getDeciderConfig() {\n     return ImmutableMap.copyOf(conf.getRcaConfigSettings());\n   }\n \n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Class<? extends T> clazz) {\n+    return readRcaConfig(rcaName, key, defaultValue, (s) -> true, clazz);\n+  }\n+\n   @SuppressWarnings(\"unchecked\")\n-  public <T> T readRcaConfig(String rcaName, String key, Class<? extends T> clazz) {\n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Predicate<T> validator, Class<? extends T> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU4NDU1Nw==", "bodyText": "I have removed the method without predicate and default value. I have refactored consumers using this method. It does not have any more consumers.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481584557", "createdAt": "2020-09-02T02:58:06Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -186,21 +193,29 @@ public DeciderConfig getDeciderConfig() {\n     return ImmutableMap.copyOf(conf.getRcaConfigSettings());\n   }\n \n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Class<? extends T> clazz) {\n+    return readRcaConfig(rcaName, key, defaultValue, (s) -> true, clazz);\n+  }\n+\n   @SuppressWarnings(\"unchecked\")\n-  public <T> T readRcaConfig(String rcaName, String key, Class<? extends T> clazz) {\n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Predicate<T> validator, Class<? extends T> clazz) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5MTkxMw=="}, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU4NDkxOA==", "bodyText": "Do you see a case where we might need that method?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481584918", "createdAt": "2020-09-02T02:58:41Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -186,21 +193,29 @@ public DeciderConfig getDeciderConfig() {\n     return ImmutableMap.copyOf(conf.getRcaConfigSettings());\n   }\n \n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Class<? extends T> clazz) {\n+    return readRcaConfig(rcaName, key, defaultValue, (s) -> true, clazz);\n+  }\n+\n   @SuppressWarnings(\"unchecked\")\n-  public <T> T readRcaConfig(String rcaName, String key, Class<? extends T> clazz) {\n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Predicate<T> validator, Class<? extends T> clazz) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5MTkxMw=="}, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDAwNDk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo1MjoyNFrOHLF6XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMjoxNjowMlrOHLP8Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5MzI0NQ==", "bodyText": "This should be\nT setting = defaultValue;", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481393245", "createdAt": "2020-09-01T19:52:24Z", "author": {"login": "vigyasharma"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -186,21 +193,29 @@ public DeciderConfig getDeciderConfig() {\n     return ImmutableMap.copyOf(conf.getRcaConfigSettings());\n   }\n \n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Class<? extends T> clazz) {\n+    return readRcaConfig(rcaName, key, defaultValue, (s) -> true, clazz);\n+  }\n+\n   @SuppressWarnings(\"unchecked\")\n-  public <T> T readRcaConfig(String rcaName, String key, Class<? extends T> clazz) {\n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Predicate<T> validator, Class<? extends T> clazz) {\n     T setting = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU1NzU5NA==", "bodyText": "Modified", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481557594", "createdAt": "2020-09-02T02:16:02Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -186,21 +193,29 @@ public DeciderConfig getDeciderConfig() {\n     return ImmutableMap.copyOf(conf.getRcaConfigSettings());\n   }\n \n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Class<? extends T> clazz) {\n+    return readRcaConfig(rcaName, key, defaultValue, (s) -> true, clazz);\n+  }\n+\n   @SuppressWarnings(\"unchecked\")\n-  public <T> T readRcaConfig(String rcaName, String key, Class<? extends T> clazz) {\n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Predicate<T> validator, Class<? extends T> clazz) {\n     T setting = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5MzI0NQ=="}, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDAwODM3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/cache_tuning/resource/rca.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo1MzoyOFrOHLF8cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMzowMDoyNVrOHLRriw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5Mzc3OA==", "bodyText": "These have been moved to action-config-settings now. See #402", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481393778", "createdAt": "2020-09-01T19:53:28Z", "author": {"login": "vigyasharma"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/cache_tuning/resource/rca.conf", "diffHunk": "@@ -0,0 +1,86 @@\n+{\n+  \"analysis-graph-implementor\":\n+    \"com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.AnalysisGraphTest\",\n+  // it can be file:// or s3://\n+  \"rca-store-location\": \"s3://sifi-store/rcas/\",\n+\n+  //it can be file:// or s3://\n+  \"threshold-store-location\": \"s3://sifi-store/thresholds/\",\n+\n+  \"new-rca-check-minutes\": 60,\n+\n+  \"new-threshold-check-minutes\": 30,\n+\n+  // The size of the task queue for all networking operations.\n+  // Small size queues may result in dropping of flow units, while large size queues can lead to a\n+  // bigger backlog of tasks resulting in delays in sending and receiving.\n+  \"network-queue-length\": 200,\n+\n+  // The size of the per-vertex buffer for flow units received from remote nodes.\n+  // Small buffer sizes may result in dropping of flow units, while large buffer size can lead to\n+  // high memory consumptions depending on how the analysis graph is configured.\n+  \"max-flow-units-per-vertex-buffer\": 200,\n+\n+  \"tags\": {\n+    \"locus\": \"data-node\",\n+    \"disk\": \"ssd\",\n+    \"region\": \"use1\",\n+    \"instance-type\": \"i3.8xl\",\n+    \"domain\": \"rca-test-cluster\"\n+  },\n+\n+  \"remote-peers\": [\"ip1\", \"ip2\", \"ip3\"],\n+\n+  // Tells the runtime where the RCAs will be stored.\n+  \"datastore\": {\n+    // accepted types are sqlite, in-memory.\n+    \"type\": \"sqlite\",\n+    \"location-dir\": \"/tmp\",\n+    \"filename\": \"rca.sqlite\",\n+    \"storage-file-retention-count\": 5,\n+    // How often the sqlite file be repeated in seconds. This file contains RCAs and therefore rotating it too frequently\n+    // might not be as fruitful as there might not be any data.\n+    \"rotation-period-seconds\": 21600\n+  },\n+\n+  // Add config settings for different RCAs\n+  \"rca-config-settings\": {\n+    // old gen rca\n+    \"high-heap-usage-old-gen-rca\": {\n+      \"top-k\" : 3\n+    },\n+    //young gen rca\n+    \"high-heap-usage-young-gen-rca\": {\n+      \"promotion-rate-mb-per-second\" : 500,\n+      \"young-gen-gc-time-ms-per-second\" : 400\n+    },\n+    \"queue-rejection-rca\": {\n+      \"rejection-time-period-in-seconds\" : 5\n+    },\n+    //hot shard rca\n+    \"hot-shard-rca\": {\n+      \"cpu-utilization\" : 0.01,\n+      \"io-total-throughput-in-bytes\" : 250000.0,\n+      \"io-total-syscallrate-per-second\" : 0.1\n+    },\n+    \"field-data-cache-rca-config\": {\n+      \"field-data-cache-size-threshold\" : 0.8,\n+      \"field-data-collector-time-period-in-sec\" : 5\n+    },\n+    \"shard-request-cache-rca-config\": {\n+      \"shard-request-cache-threshold\" : 0.9,\n+      \"shard-request-collector-time-period-in-sec\" : 5\n+    }\n+  },\n+\n+  \"muted-rcas\": [],\n+  \"muted-deciders\": [],\n+  \"muted-actions\": [],\n+\n+  \"decider-config-settings\": {\n+    \"cache-decider-config\": {\n+      \"field-data-cache-upper-bound\" : 0.4,\n+      \"shard-request-cache-upper-bound\" : 0.05\n+    }\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU4NjA1OQ==", "bodyText": "Modified it. This part of rca.conf is not required. So removing them", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481586059", "createdAt": "2020-09-02T03:00:25Z", "author": {"login": "sruti1312"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/cache_tuning/resource/rca.conf", "diffHunk": "@@ -0,0 +1,86 @@\n+{\n+  \"analysis-graph-implementor\":\n+    \"com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.AnalysisGraphTest\",\n+  // it can be file:// or s3://\n+  \"rca-store-location\": \"s3://sifi-store/rcas/\",\n+\n+  //it can be file:// or s3://\n+  \"threshold-store-location\": \"s3://sifi-store/thresholds/\",\n+\n+  \"new-rca-check-minutes\": 60,\n+\n+  \"new-threshold-check-minutes\": 30,\n+\n+  // The size of the task queue for all networking operations.\n+  // Small size queues may result in dropping of flow units, while large size queues can lead to a\n+  // bigger backlog of tasks resulting in delays in sending and receiving.\n+  \"network-queue-length\": 200,\n+\n+  // The size of the per-vertex buffer for flow units received from remote nodes.\n+  // Small buffer sizes may result in dropping of flow units, while large buffer size can lead to\n+  // high memory consumptions depending on how the analysis graph is configured.\n+  \"max-flow-units-per-vertex-buffer\": 200,\n+\n+  \"tags\": {\n+    \"locus\": \"data-node\",\n+    \"disk\": \"ssd\",\n+    \"region\": \"use1\",\n+    \"instance-type\": \"i3.8xl\",\n+    \"domain\": \"rca-test-cluster\"\n+  },\n+\n+  \"remote-peers\": [\"ip1\", \"ip2\", \"ip3\"],\n+\n+  // Tells the runtime where the RCAs will be stored.\n+  \"datastore\": {\n+    // accepted types are sqlite, in-memory.\n+    \"type\": \"sqlite\",\n+    \"location-dir\": \"/tmp\",\n+    \"filename\": \"rca.sqlite\",\n+    \"storage-file-retention-count\": 5,\n+    // How often the sqlite file be repeated in seconds. This file contains RCAs and therefore rotating it too frequently\n+    // might not be as fruitful as there might not be any data.\n+    \"rotation-period-seconds\": 21600\n+  },\n+\n+  // Add config settings for different RCAs\n+  \"rca-config-settings\": {\n+    // old gen rca\n+    \"high-heap-usage-old-gen-rca\": {\n+      \"top-k\" : 3\n+    },\n+    //young gen rca\n+    \"high-heap-usage-young-gen-rca\": {\n+      \"promotion-rate-mb-per-second\" : 500,\n+      \"young-gen-gc-time-ms-per-second\" : 400\n+    },\n+    \"queue-rejection-rca\": {\n+      \"rejection-time-period-in-seconds\" : 5\n+    },\n+    //hot shard rca\n+    \"hot-shard-rca\": {\n+      \"cpu-utilization\" : 0.01,\n+      \"io-total-throughput-in-bytes\" : 250000.0,\n+      \"io-total-syscallrate-per-second\" : 0.1\n+    },\n+    \"field-data-cache-rca-config\": {\n+      \"field-data-cache-size-threshold\" : 0.8,\n+      \"field-data-collector-time-period-in-sec\" : 5\n+    },\n+    \"shard-request-cache-rca-config\": {\n+      \"shard-request-cache-threshold\" : 0.9,\n+      \"shard-request-collector-time-period-in-sec\" : 5\n+    }\n+  },\n+\n+  \"muted-rcas\": [],\n+  \"muted-deciders\": [],\n+  \"muted-actions\": [],\n+\n+  \"decider-config-settings\": {\n+    \"cache-decider-config\": {\n+      \"field-data-cache-upper-bound\" : 0.4,\n+      \"shard-request-cache-upper-bound\" : 0.05\n+    }\n+  }\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5Mzc3OA=="}, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDAxNjAxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/cache_tuning/resource/rca.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo1NTo0NVrOHLGBDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzoxMzowN1rOHL5QFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5NDk1OA==", "bodyText": "Do you need this entire config file? You can also create an rcaConf object with a json string holding the sub-config you are interested in. See test here", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481394958", "createdAt": "2020-09-01T19:55:45Z", "author": {"login": "vigyasharma"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/cache_tuning/resource/rca.conf", "diffHunk": "@@ -0,0 +1,86 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIzNDM5MA==", "bodyText": "Presently IT takes in a file path to the rca.conf file. There is no option to provide it with RcaConf object or a string. Its good to have this functionality. Will add this to IT framework in subsequent PR", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r482234390", "createdAt": "2020-09-02T17:13:07Z", "author": {"login": "sruti1312"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/cache_tuning/resource/rca.conf", "diffHunk": "@@ -0,0 +1,86 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5NDk1OA=="}, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDAxODY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/ShardRequestCacheRcaConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo1NjoyNlrOHLGCjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzoxNjoxMFrOHL5ZYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5NTM0Mw==", "bodyText": "These can be handled within readRcaConfig itself using default value field.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r481395343", "createdAt": "2020-09-01T19:56:26Z", "author": {"login": "vigyasharma"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/ShardRequestCacheRcaConfig.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.configs;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+\n+/**\n+ * config object to store rca config settings for ShardRequestCacheRca\n+ */\n+public class ShardRequestCacheRcaConfig {\n+    public static final String CONFIG_NAME = \"shard-request-cache-rca-config\";\n+\n+    private Double shardRequestCacheSizeThreshold;\n+    private Integer shardRequestCollectorTimePeriodInSec;\n+\n+    // Shard request cache size threshold is 90%\n+    public static final double DEFAULT_SHARD_REQUEST_CACHE_SIZE_THRESHOLD = 0.9;\n+    // Metrics like eviction, hits are collected every 300 sec in shard request cache rca\n+    public static final int DEFAULT_SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC = 300;\n+\n+    public ShardRequestCacheRcaConfig(final RcaConf rcaConf) {\n+        shardRequestCacheSizeThreshold =\n+                rcaConf.readRcaConfig(\n+                        CONFIG_NAME,\n+                        RCA_CONF_KEY_CONSTANTS.SHARD_REQUEST_CACHE_SIZE_THRESHOLD,\n+                        DEFAULT_SHARD_REQUEST_CACHE_SIZE_THRESHOLD,\n+                        (s) -> (s > 0),\n+                        Double.class);\n+        shardRequestCollectorTimePeriodInSec =\n+                rcaConf.readRcaConfig(\n+                        CONFIG_NAME,\n+                        RCA_CONF_KEY_CONSTANTS.SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC,\n+                        DEFAULT_SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC,\n+                        (s) -> (s > 0),\n+                        Integer.class);\n+        if (shardRequestCacheSizeThreshold == null) {\n+            shardRequestCacheSizeThreshold = DEFAULT_SHARD_REQUEST_CACHE_SIZE_THRESHOLD;\n+        }\n+        if (shardRequestCollectorTimePeriodInSec == null) {\n+            shardRequestCollectorTimePeriodInSec = DEFAULT_SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIzNjc3MQ==", "bodyText": "Right. Removed it", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r482236771", "createdAt": "2020-09-02T17:16:10Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/ShardRequestCacheRcaConfig.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.configs;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+\n+/**\n+ * config object to store rca config settings for ShardRequestCacheRca\n+ */\n+public class ShardRequestCacheRcaConfig {\n+    public static final String CONFIG_NAME = \"shard-request-cache-rca-config\";\n+\n+    private Double shardRequestCacheSizeThreshold;\n+    private Integer shardRequestCollectorTimePeriodInSec;\n+\n+    // Shard request cache size threshold is 90%\n+    public static final double DEFAULT_SHARD_REQUEST_CACHE_SIZE_THRESHOLD = 0.9;\n+    // Metrics like eviction, hits are collected every 300 sec in shard request cache rca\n+    public static final int DEFAULT_SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC = 300;\n+\n+    public ShardRequestCacheRcaConfig(final RcaConf rcaConf) {\n+        shardRequestCacheSizeThreshold =\n+                rcaConf.readRcaConfig(\n+                        CONFIG_NAME,\n+                        RCA_CONF_KEY_CONSTANTS.SHARD_REQUEST_CACHE_SIZE_THRESHOLD,\n+                        DEFAULT_SHARD_REQUEST_CACHE_SIZE_THRESHOLD,\n+                        (s) -> (s > 0),\n+                        Double.class);\n+        shardRequestCollectorTimePeriodInSec =\n+                rcaConf.readRcaConfig(\n+                        CONFIG_NAME,\n+                        RCA_CONF_KEY_CONSTANTS.SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC,\n+                        DEFAULT_SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC,\n+                        (s) -> (s > 0),\n+                        Integer.class);\n+        if (shardRequestCacheSizeThreshold == null) {\n+            shardRequestCacheSizeThreshold = DEFAULT_SHARD_REQUEST_CACHE_SIZE_THRESHOLD;\n+        }\n+        if (shardRequestCollectorTimePeriodInSec == null) {\n+            shardRequestCollectorTimePeriodInSec = DEFAULT_SHARD_REQUEST_COLLECTOR_TIME_PERIOD_IN_SEC;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5NTM0Mw=="}, "originalCommit": {"oid": "15016e151e5a46e6af644cc4b25386ddb49373d8"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODIxNTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoyNjowNVrOHMXnKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1MToyMVrOHMvXmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczMTgxNw==", "bodyText": "Looks like a test for this is missing?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r482731817", "createdAt": "2020-09-03T06:26:05Z", "author": {"login": "vigyasharma"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -197,21 +204,29 @@ public DeciderConfig getDeciderConfig() {\n     return ImmutableMap.copyOf(conf.getRcaConfigSettings());\n   }\n \n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Class<? extends T> clazz) {\n+    return readRcaConfig(rcaName, key, defaultValue, (s) -> true, clazz);\n+  }\n+\n   @SuppressWarnings(\"unchecked\")\n-  public <T> T readRcaConfig(String rcaName, String key, Class<? extends T> clazz) {\n-    T setting = null;\n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Predicate<T> validator, Class<? extends T> clazz) {\n+    T setting = defaultValue;\n     try {\n       Map<String, Object> rcaObj = null;\n       if (conf.getRcaConfigSettings() != null\n-          && conf.getRcaConfigSettings().containsKey(rcaName)\n-          && conf.getRcaConfigSettings().get(rcaName) != null) {\n+              && conf.getRcaConfigSettings().containsKey(rcaName)\n+              && conf.getRcaConfigSettings().get(rcaName) != null) {\n         rcaObj = (Map<String, Object>) conf.getRcaConfigSettings().get(rcaName);\n       }\n \n       if (rcaObj != null\n-          && rcaObj.containsKey(key)\n-          && rcaObj.get(key) != null) {\n+              && rcaObj.containsKey(key)\n+              && rcaObj.get(key) != null) {\n         setting = clazz.cast(rcaObj.get(key));\n+        if (!validator.test(setting)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be5e23407f91139027d30f4924aeb5a7ab638b1d"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMTA0OQ==", "bodyText": "Added test", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r483121049", "createdAt": "2020-09-03T16:51:21Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -197,21 +204,29 @@ public DeciderConfig getDeciderConfig() {\n     return ImmutableMap.copyOf(conf.getRcaConfigSettings());\n   }\n \n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Class<? extends T> clazz) {\n+    return readRcaConfig(rcaName, key, defaultValue, (s) -> true, clazz);\n+  }\n+\n   @SuppressWarnings(\"unchecked\")\n-  public <T> T readRcaConfig(String rcaName, String key, Class<? extends T> clazz) {\n-    T setting = null;\n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Predicate<T> validator, Class<? extends T> clazz) {\n+    T setting = defaultValue;\n     try {\n       Map<String, Object> rcaObj = null;\n       if (conf.getRcaConfigSettings() != null\n-          && conf.getRcaConfigSettings().containsKey(rcaName)\n-          && conf.getRcaConfigSettings().get(rcaName) != null) {\n+              && conf.getRcaConfigSettings().containsKey(rcaName)\n+              && conf.getRcaConfigSettings().get(rcaName) != null) {\n         rcaObj = (Map<String, Object>) conf.getRcaConfigSettings().get(rcaName);\n       }\n \n       if (rcaObj != null\n-          && rcaObj.containsKey(key)\n-          && rcaObj.get(key) != null) {\n+              && rcaObj.containsKey(key)\n+              && rcaObj.get(key) != null) {\n         setting = clazz.cast(rcaObj.get(key));\n+        if (!validator.test(setting)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczMTgxNw=="}, "originalCommit": {"oid": "be5e23407f91139027d30f4924aeb5a7ab638b1d"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTYzODA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMTo0MjoxOFrOHM4cRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODoxNzo1M1rOHNXrGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI2OTcwMQ==", "bodyText": "Can we reuse the Config class to read config settings here ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r483269701", "createdAt": "2020-09-03T21:42:18Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -197,21 +204,29 @@ public DeciderConfig getDeciderConfig() {\n     return ImmutableMap.copyOf(conf.getRcaConfigSettings());\n   }\n \n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Class<? extends T> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f96127de1a52c0633eb1d3e2513f4a9b18ebddb"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc4MTQwMw==", "bodyText": "#411\nAdded an issue to track this.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/401#discussion_r483781403", "createdAt": "2020-09-04T18:17:53Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -197,21 +204,29 @@ public DeciderConfig getDeciderConfig() {\n     return ImmutableMap.copyOf(conf.getRcaConfigSettings());\n   }\n \n+  public <T> T readRcaConfig(String rcaName, String key, T defaultValue, Class<? extends T> clazz) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI2OTcwMQ=="}, "originalCommit": {"oid": "3f96127de1a52c0633eb1d3e2513f4a9b18ebddb"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2379, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}