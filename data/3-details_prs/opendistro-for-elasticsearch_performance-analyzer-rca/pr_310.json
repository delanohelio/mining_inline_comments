{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2ODkzMjcw", "number": 310, "title": "Grpc server can run on different ports on different nodes of the cluster", "bodyText": "Issue #: #309\nDescription of changes:\n\nThe gRPC port is determined by the new field in the InstanceDetails class.\nNow gRPC server can run on different ports on different nodes of the cluster.\nUse node ID as the primary way of distinguishing nodes in the networking layer rather than the IP addresses, for cases when all nodes run on the same machine, they will have the same IP but node IDs will still be unique.\nBecause ID and IP are both represented as strings, it wasn't possible to distinguish them in the method arguments and one can slip in one for the other until the gRPC server creation complains. This PR makes them type safe by wrapping them in class of their own as java does not provide type aliasing.\n\nTests:\nNew tests are not added. All existing tests should continue to run correctly.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-07-27T04:43:31Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310", "merged": true, "mergeCommit": {"oid": "d61da520ef806b34b5f27506a9b517862ea57566"}, "closed": true, "closedAt": "2020-07-29T01:46:09Z", "author": {"login": "yojs"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5FmmRgFqTQ1NjAwNTc1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5g1ZVgBqjM1OTY4OTA1ODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MDA1NzUz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456005753", "createdAt": "2020-07-27T17:51:27Z", "commit": {"oid": "0f2c74fbc6c5e5212fca338db4c7b54506a94649"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzo1MToyN1rOG3tL-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzo1MToyN1rOG3tL-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTIwOA==", "bodyText": "Log.error(\"Could not read the Decider Config File: {}\", configFilePath, e)", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461065208", "createdAt": "2020-07-27T17:51:27Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/DeciderActionPriorityReader.java", "diffHunk": "@@ -45,8 +45,7 @@ public static void updateDeciderActionPriorityOrder() {\n         try {\n             deciderActionPriorityOrder = mapper.readValue(new File(configFilePath), HashMap.class);\n         } catch (Exception e) {\n-            LOG.error(\"Could not read the Decider Config File\");\n-            e.printStackTrace();\n+            LOG.error(\"Could not read the Decider Config File: \" + configFilePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f2c74fbc6c5e5212fca338db4c7b54506a94649"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MDA2Mzc2", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456006376", "createdAt": "2020-07-27T17:52:22Z", "commit": {"oid": "0f2c74fbc6c5e5212fca338db4c7b54506a94649"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzo1MjoyMlrOG3tN8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzo1MjoyMlrOG3tN8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTcxNQ==", "bodyText": "This import line was added, but I don't see CDEP being added below", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461065715", "createdAt": "2020-07-27T17:52:22Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/Decision.java", "diffHunk": "@@ -19,6 +19,8 @@\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.FlowUnitMessage;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.GenericFlowUnit;\n \n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.InstanceDetails;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.reader.ClusterDetailsEventProcessor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f2c74fbc6c5e5212fca338db4c7b54506a94649"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MDEyMzI4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456012328", "createdAt": "2020-07-27T18:00:36Z", "commit": {"oid": "0f2c74fbc6c5e5212fca338db4c7b54506a94649"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODowMDozNlrOG3tglQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxODowMDozNlrOG3tglQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3MDQ4NQ==", "bodyText": "nit: factor this out into a function since it's used in multiple places", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461070485", "createdAt": "2020-07-27T18:00:36Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/net/GRPCConnectionManager.java", "diffHunk": "@@ -159,28 +155,36 @@ private ManagedChannel getChannelForHost(final String remoteHost) {\n    * @param remoteHost The host to which we want to establish a channel to.\n    * @return a Managed channel object.\n    */\n-  private synchronized ManagedChannel addOrUpdateChannelForHost(final String remoteHost) {\n+  private synchronized ManagedChannel addOrUpdateChannelForHost(final InstanceDetails remoteHost) {\n     final ManagedChannel channel = buildChannelForHost(remoteHost);\n-    perHostChannelMap.computeIfAbsent(remoteHost, s -> new AtomicReference<>());\n-    perHostChannelMap.get(remoteHost).set(channel);\n+    perHostChannelMap.computeIfAbsent(remoteHost.getInstanceId(), s -> new AtomicReference<>());\n+    perHostChannelMap.get(remoteHost.getInstanceId()).set(channel);\n     return channel;\n   }\n \n-  private ManagedChannel buildChannelForHost(final String remoteHost) {\n+  private ManagedChannel buildChannelForHost(final InstanceDetails remoteHost) {\n     return shouldUseHttps ? buildSecureChannel(remoteHost) : buildInsecureChannel(remoteHost);\n   }\n \n-  private ManagedChannel buildInsecureChannel(final String remoteHost) {\n-    return ManagedChannelBuilder.forAddress(remoteHost, this.port).usePlaintext().build();\n+  private ManagedChannel buildInsecureChannel(final InstanceDetails remoteHost) {\n+    int port = this.port != 0 ? this.port : remoteHost.getGrpcPort();\n+    if (port == -1) {\n+      throw new IllegalArgumentException(\"Invalid port for grpc: \" + port);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f2c74fbc6c5e5212fca338db4c7b54506a94649"}, "originalPosition": 118}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b74d954950e2b7daee456116e76fa4794f72a306", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/b74d954950e2b7daee456116e76fa4794f72a306", "committedDate": "2020-07-27T18:33:11Z", "message": "Fixing the UT SubscribeResponseHandlerTest"}, "afterCommit": {"oid": "8b6036ab6e07a651fe859e77de562923afb11664", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/8b6036ab6e07a651fe859e77de562923afb11664", "committedDate": "2020-07-27T19:03:01Z", "message": "rebased with current master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MDkzMTQ2", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456093146", "createdAt": "2020-07-27T20:01:28Z", "commit": {"oid": "8b6036ab6e07a651fe859e77de562923afb11664"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDowMToyOFrOG3xgaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDowMToyOFrOG3xgaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEzNTk3OQ==", "bodyText": "I agree with most of the refactor points mentioned in the description of the PR, however, can you explain why we need to use node ids instead of ip+port combo? It would've achieved the same goal, unless I'm missing something.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461135979", "createdAt": "2020-07-27T20:01:28Z", "author": {"login": "ktkrg"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/net/GRPCConnectionManager.java", "diffHunk": "@@ -54,17 +55,15 @@\n   private File trustedCasFile;\n \n   /**\n-   * Map of remote host to a Netty channel to that host.\n+   * Map of remote hostId to a Netty channel to that host.\n    */\n-  private ConcurrentMap<String, AtomicReference<ManagedChannel>> perHostChannelMap =\n-      new ConcurrentHashMap<>();\n+  private ConcurrentMap<InstanceDetails.Id, AtomicReference<ManagedChannel>> perHostChannelMap = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b6036ab6e07a651fe859e77de562923afb11664"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTcxNzc3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456171777", "createdAt": "2020-07-27T22:12:45Z", "commit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoxMjo0NVrOG31cYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoxMjo0NVrOG31cYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwMDQ4Mg==", "bodyText": "return value is being ignored here. Do we need this change?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461200482", "createdAt": "2020-07-27T22:12:45Z", "author": {"login": "ktkrg"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ResourceHeatMapGraphTest.java", "diffHunk": "@@ -603,10 +603,13 @@ private void verifyFullNodeTemperatureProfile(String resp) {\n     JsonArray json = parser\n         .parse(resp)\n         .getAsJsonObject()\n-        .getAsJsonArray(ALL_TEMPERATURE_DIMENSIONS)\n-        .get(0)\n-        .getAsJsonObject()\n-        .getAsJsonArray(NodeLevelDimensionalSummary.SUMMARY_TABLE_NAME);\n+        .getAsJsonArray(ALL_TEMPERATURE_DIMENSIONS);\n+    // System.out.println(\"ALL_TEMPERATURE_DIMENSIONS\" + json);\n+\n+    json.get(0)\n+    .getAsJsonObject()\n+    .getAsJsonArray(NodeLevelDimensionalSummary.SUMMARY_TABLE_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTcyNjg5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456172689", "createdAt": "2020-07-27T22:14:44Z", "commit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoxNDo0NVrOG31fQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoxNDo0NVrOG31fQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwMTIxNw==", "bodyText": "This annotation should go above the method if you're saying that the returned String may be null", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461201217", "createdAt": "2020-07-27T22:14:45Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/config/PluginSettings.java", "diffHunk": "@@ -113,6 +114,11 @@ public void overrideProperty(String key, String value) {\n     settings.setProperty(key, value);\n   }\n \n+  @VisibleForTesting\n+  public @Nullable String getProperty(String key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTc3NTMz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456177533", "createdAt": "2020-07-27T22:25:22Z", "commit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoyNToyMlrOG31vMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoyNToyMlrOG31vMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNTI5OQ==", "bodyText": "I'm curious, what does this do differently than just directly returning ip?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461205299", "createdAt": "2020-07-27T22:25:22Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/util/InstanceDetails.java", "diffHunk": "@@ -15,48 +15,166 @@\n \n package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util;\n \n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.core.Util;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.reader.ClusterDetailsEventProcessor;\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.base.Objects;\n+import com.google.common.net.InetAddresses;\n \n public class InstanceDetails {\n+  public static class Ip {\n+\n+    // The only way to get the ip is to get the serialized string representation of it.\n+    private String ip;\n+\n+    public Ip(String ip) {\n+      if (!InetAddresses.isInetAddress(ip)) {\n+        throw new IllegalArgumentException(\"The provided string is not an IPV4ip: '\" + ip + \"'\");\n+      }\n+      this.ip = ip;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+      if (this == o) {\n+        return true;\n+      }\n+      if (!(o instanceof Ip)) {\n+        return false;\n+      }\n+      Ip ip1 = (Ip) o;\n+      return Objects.equal(ip, ip1.ip);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+      return Objects.hashCode(ip);\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return \"\" + ip;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTc4NTcy", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456178572", "createdAt": "2020-07-27T22:27:41Z", "commit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoyNzo0MlrOG31ywQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoyNzo0MlrOG31ywQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNjIwOQ==", "bodyText": "nit: destinationGraphNodes?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461206209", "createdAt": "2020-07-27T22:27:42Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/messages/DataMsg.java", "diffHunk": "@@ -19,23 +19,23 @@\n import java.util.List;\n \n public class DataMsg {\n-  String sourceNode;\n-  List<String> destinationNodes;\n+  String sourceGraphNode;\n+  List<String> destinationGraphNodes;\n   List<? extends GenericFlowUnit> flowUnits;\n \n   public DataMsg(\n-      String sourceNode, List<String> destinationNode, List<? extends GenericFlowUnit> flowUnits) {\n-    this.sourceNode = sourceNode;\n-    this.destinationNodes = destinationNode;\n+          String sourceGraphNode, List<String> destinationNode, List<? extends GenericFlowUnit> flowUnits) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgyMTMz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456182133", "createdAt": "2020-07-27T22:35:58Z", "commit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNTo1OFrOG31-6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNTo1OFrOG31-6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwOTMyMg==", "bodyText": "Is there a reason you initialize to -1 instead of 0? 0 would make the default behavior the same as before this commit right?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461209322", "createdAt": "2020-07-27T22:35:58Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/net/GRPCConnectionManager.java", "diffHunk": "@@ -73,7 +72,7 @@\n \n   public GRPCConnectionManager(final boolean shouldUseHttps) {\n     this.shouldUseHttps = shouldUseHttps;\n-    this.port = Util.RPC_PORT;\n+    this.port = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgzODkx", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456183891", "createdAt": "2020-07-27T22:40:11Z", "commit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0MDoxMVrOG32FGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0MDoxMVrOG32FGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMDkwNg==", "bodyText": "It's ok to remove this @ignore and change grpcConnectionManager = new GRPCConnectionManager(false). TLS semantics are tested elsewhere.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461210906", "createdAt": "2020-07-27T22:40:11Z", "author": {"login": "sidheart"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/net/SubscriptionManagerTest.java", "diffHunk": "@@ -2,16 +2,19 @@\n \n import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.SubscribeResponse;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.net.GRPCConnectionManager;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.InstanceDetails;\n import com.google.common.collect.Sets;\n import java.util.Collections;\n import org.junit.Assert;\n import org.junit.Before;\n+import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.Mock;\n import org.mockito.Mockito;\n import org.mockito.MockitoAnnotations;\n \n-\n+// TODO: remove", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTg0NDcy", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456184472", "createdAt": "2020-07-27T22:41:38Z", "commit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0MTozOFrOG32HKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0MTozOFrOG32HKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMTQzNQ==", "bodyText": "It's like a pet name for the node! :)", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461211435", "createdAt": "2020-07-27T22:41:38Z", "author": {"login": "sidheart"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/samplers/RcaEnabledSamplerTest.java", "diffHunk": "@@ -39,14 +39,14 @@ public void testIsRcaEnabled() {\n \n         assertFalse(uut.isRcaEnabled());\n         ClusterDetailsEventProcessor.NodeDetails details =\n-                ClusterDetailsEventProcessorTestHelper.newNodeDetails(\"\", \"\", false);\n+                ClusterDetailsEventProcessorTestHelper.newNodeDetails(\"nodex\", \"127.0.0.1\", false);\n \n         ClusterDetailsEventProcessor clusterDetailsEventProcessor = new ClusterDetailsEventProcessor();\n         clusterDetailsEventProcessor.setNodesDetails(Collections.singletonList(details));\n         appContext.setClusterDetailsEventProcessor(clusterDetailsEventProcessor);\n \n         assertFalse(uut.isRcaEnabled());\n-        details = ClusterDetailsEventProcessorTestHelper.newNodeDetails(\"\", \"\", true);\n+        details = ClusterDetailsEventProcessorTestHelper.newNodeDetails(\"nodey\", \"127.0.0.2\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTg1NzI3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456185727", "createdAt": "2020-07-27T22:44:46Z", "commit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0NDo0NlrOG32LjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0NDo0NlrOG32LjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMjU1Ng==", "bodyText": "nit: why split this if we aren't distinguishing between the two cases?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#discussion_r461212556", "createdAt": "2020-07-27T22:44:46Z", "author": {"login": "sidheart"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/store/rca/cluster/BaseClusterRcaTest.java", "diffHunk": "@@ -310,7 +310,10 @@ private boolean compareResourceSummary(Resource resource, HotResourceSummary res\n   }\n \n   private boolean compareNodeSummary(String nodeId, Resource resource, HotNodeSummary nodeSummary) {\n-    if (!nodeId.equals(nodeSummary.getNodeID()) || nodeSummary.getHotResourceSummaryList().isEmpty()) {\n+    if (!nodeId.equals(nodeSummary.getNodeID().toString())) {\n+      return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd9a067afa5dc53bb4e3c1d92b2f76ae843be"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3c9f2a172485e79476dbc1314c523b998c0bf21", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e3c9f2a172485e79476dbc1314c523b998c0bf21", "committedDate": "2020-07-27T23:12:59Z", "message": "Addressing the PR comments"}, "afterCommit": {"oid": "037e0416a36dd96c2f9716cf37413aed203b0aa2", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/037e0416a36dd96c2f9716cf37413aed203b0aa2", "committedDate": "2020-07-27T23:33:54Z", "message": "Introducing grpcPort in the InstanceDetail and NodeDetail"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e4fc6df289ba29f27ec393b719c9e398dcb4d93", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/1e4fc6df289ba29f27ec393b719c9e398dcb4d93", "committedDate": "2020-07-28T04:31:37Z", "message": "adding some tests to increase coverage"}, "afterCommit": {"oid": "acb221987bbbd95b5c5cd7e4e832672358aacfef", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/acb221987bbbd95b5c5cd7e4e832672358aacfef", "committedDate": "2020-07-28T04:38:11Z", "message": "adding some tests to increase coverage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "acb221987bbbd95b5c5cd7e4e832672358aacfef", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/acb221987bbbd95b5c5cd7e4e832672358aacfef", "committedDate": "2020-07-28T04:38:11Z", "message": "adding some tests to increase coverage"}, "afterCommit": {"oid": "73a657d0aaa5fe00c04faca084cb742e7f39400b", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/73a657d0aaa5fe00c04faca084cb742e7f39400b", "committedDate": "2020-07-28T05:12:14Z", "message": "adding some tests to increase coverage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2ODAxMTkx", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-456801191", "createdAt": "2020-07-28T16:22:00Z", "commit": {"oid": "73a657d0aaa5fe00c04faca084cb742e7f39400b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e55b18bce873f193975ae587dc9a0393ffa95c4d", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e55b18bce873f193975ae587dc9a0393ffa95c4d", "committedDate": "2020-07-28T22:13:40Z", "message": "Introducing grpcPort in the InstanceDetail and NodeDetail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0c77dd39295d4c067fb0926a23a650486ac58cb", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/b0c77dd39295d4c067fb0926a23a650486ac58cb", "committedDate": "2020-07-28T22:13:40Z", "message": "Addressing PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1a5e4e2f16b17f905e358f09d775b59aec3275f", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/f1a5e4e2f16b17f905e358f09d775b59aec3275f", "committedDate": "2020-07-28T22:13:40Z", "message": "Fixing SpotBug errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4483d546e1618f9f5987d108db034f922c0aa61", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/c4483d546e1618f9f5987d108db034f922c0aa61", "committedDate": "2020-07-28T22:13:40Z", "message": "adding some tests to increase coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8713e77ea68bc46d8247df34eaf0c56cbe732ae1", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/8713e77ea68bc46d8247df34eaf0c56cbe732ae1", "committedDate": "2020-07-28T22:13:40Z", "message": "Adding a new test targetting multiple NetServers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MDc4ODM1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/310#pullrequestreview-457078835", "createdAt": "2020-07-28T22:42:19Z", "commit": {"oid": "73a657d0aaa5fe00c04faca084cb742e7f39400b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b762f2936527d424aaa8ac89952eb9277e35db0", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4b762f2936527d424aaa8ac89952eb9277e35db0", "committedDate": "2020-07-29T01:34:49Z", "message": "rebased with latest master and added a test that talks to grpc server on a different port"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73a657d0aaa5fe00c04faca084cb742e7f39400b", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/73a657d0aaa5fe00c04faca084cb742e7f39400b", "committedDate": "2020-07-28T05:12:14Z", "message": "adding some tests to increase coverage"}, "afterCommit": {"oid": "4b762f2936527d424aaa8ac89952eb9277e35db0", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4b762f2936527d424aaa8ac89952eb9277e35db0", "committedDate": "2020-07-29T01:34:49Z", "message": "rebased with latest master and added a test that talks to grpc server on a different port"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1118, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}