{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjE0NDc2", "number": 47, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwNjozMjo1MFrODXUUwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjoyNDozOVrODXrTGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Nzc2ODM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwNjozMjo1MFrOFckljA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwNjozMjo1MFrOFckljA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwMzg4NA==", "bodyText": "I tend to think, it we should move it inside the startPollers(), so now just two instead of three", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/47#discussion_r365503884", "createdAt": "2020-01-11T06:32:50Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -249,22 +228,26 @@ private void readRcaEnabledFromConf() {\n    * has changed in the meantime (such as a new elected master). It also starts the RCA runtime if\n    * it wasn't already running but the current state of the flag expects it to.\n    */\n-  private void startRcaNanny() {\n+  public void startNanny() {\n+    startNodeRolePoller();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfda656a99cfa9c6409960eac3a9c72a517fea7f"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Nzc2ODkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwNjozNTowM1rOFckl2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxODo0OToyM1rOFdA3Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwMzk2MA==", "bodyText": "can we use boolean ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/47#discussion_r365503960", "createdAt": "2020-01-11T06:35:03Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -122,17 +122,19 @@ public static NodeDetails getCurrentNodeDetails() {\n   }\n \n   public static class NodeDetails {\n-\n     private String id;\n     private String hostAddress;\n     private String role;\n+    private Boolean isMasterNode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfda656a99cfa9c6409960eac3a9c72a517fea7f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2NzIwNg==", "bodyText": "This value can even be null so we will need Boolean", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/47#discussion_r365967206", "createdAt": "2020-01-13T18:49:23Z", "author": {"login": "spardeepsingh"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -122,17 +122,19 @@ public static NodeDetails getCurrentNodeDetails() {\n   }\n \n   public static class NodeDetails {\n-\n     private String id;\n     private String hostAddress;\n     private String role;\n+    private Boolean isMasterNode;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwMzk2MA=="}, "originalCommit": {"oid": "dfda656a99cfa9c6409960eac3a9c72a517fea7f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Nzc3MDMxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaControllerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwNjozOTo0MVrOFckmiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxODo1MDoyNFrOFdA4_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwNDEzOQ==", "bodyText": "Is it still required after merging with the last changes ? It never failed for me. If we think it is required, then we should add a comment explaining why this is so", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/47#discussion_r365504139", "createdAt": "2020-01-11T06:39:41Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaControllerTest.java", "diffHunk": "@@ -30,6 +30,8 @@\n \n @Category(GradleTaskForRca.class)\n public class RcaControllerTest {\n+  private static final int IEVAL_ITERATIONS = 20;\n+  private static final int NODE_ROLE_EVAL_ITERATIONS = 70;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfda656a99cfa9c6409960eac3a9c72a517fea7f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2NzYxNQ==", "bodyText": "It is required as we are changing the periodicity of getting master node value to 60 sec. Will add a comment for that", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/47#discussion_r365967615", "createdAt": "2020-01-13T18:50:24Z", "author": {"login": "spardeepsingh"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaControllerTest.java", "diffHunk": "@@ -30,6 +30,8 @@\n \n @Category(GradleTaskForRca.class)\n public class RcaControllerTest {\n+  private static final int IEVAL_ITERATIONS = 20;\n+  private static final int NODE_ROLE_EVAL_ITERATIONS = 70;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwNDEzOQ=="}, "originalCommit": {"oid": "dfda656a99cfa9c6409960eac3a9c72a517fea7f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Nzk5NTI4OnYy", "diffSide": "LEFT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxNzozMjo0OFrOFcmWwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxNzozMjo0OFrOFcmWwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUzMjg2NA==", "bodyText": "It might be cleaner to keep this method and only remove the startRcaConfPoller(); if we are incorporating that functionality in the rcaNanny()", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/47#discussion_r365532864", "createdAt": "2020-01-11T17:32:48Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -133,19 +133,6 @@ public RcaController(\n     this.timeUnit = timeUnit;\n   }\n \n-  /**\n-   * Starts the pollers. Each poller is a thread that checks for the state of the system that the\n-   * RCA is concerned with. - RcaConfPoller: Periodically reads a config file to determine if RCA is\n-   * supposed to be running or not and accordingly sets a flag. - NodeRolePoller: This checks for\n-   * the change of role for an elastic search Master node. - RcaNanny: RcaConfPoller sets the flag\n-   * but this thread works to start Rca or shut it down based on the flag.\n-   */\n-  public void startPollers() {\n-    startRcaConfPoller();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67c812a56625206f6b3f1146e63a09046b116655"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Nzk5NjYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxNzozNjozNlrOFcmXdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxNzozNjozNlrOFcmXdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUzMzA0Nw==", "bodyText": "Let's not have calls to schedule inside scheduleAtFixedRate. We should have just the method references like it used to be. The expensive part was not that the another executor existed (they all use the same thread pool), but the call to getElectedMasterHostAddress.  So, let's just make the nodeRolePoller a no-op, is RCA is disabled.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/47#discussion_r365533047", "createdAt": "2020-01-11T17:36:36Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -249,22 +225,26 @@ private void readRcaEnabledFromConf() {\n    * has changed in the meantime (such as a new elected master). It also starts the RCA runtime if\n    * it wasn't already running but the current state of the flag expects it to.\n    */\n-  private void startRcaNanny() {\n+  public void startNanny() {\n     netOpsExecutorService.scheduleAtFixedRate(\n         () -> {\n-          if (rcaScheduler != null && rcaScheduler.isRunning()) {\n-            if (!rcaEnabled) {\n-              // Need to shutdown the rca scheduler\n-              stop();\n-            } else {\n+          netOpsExecutorService.schedule(this::readRcaEnabledFromConf, 1, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67c812a56625206f6b3f1146e63a09046b116655"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTUzMjQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjoyNDozOVrOFdGn1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjoyNDozOVrOFdGn1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2MTUyNQ==", "bodyText": "Because this is going to make ES API call, perhaps we should have a log for now and then we can add a metric for this.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/47#discussion_r366061525", "createdAt": "2020-01-13T22:24:39Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -277,13 +276,14 @@ private String getElectedMasterHostAddress() {\n     return \"\";\n   }\n \n-  private void handleNodeRoleChange(\n-      final NodeDetails currentNode, final String electedMasterHostAddress) {\n+  private void handleNodeRoleChange(final NodeDetails currentNode) {\n     final NodeRole currentNodeRole = NodeRole.valueOf(currentNode.getRole());\n-    if (currentNode.getHostAddress().equalsIgnoreCase(electedMasterHostAddress)) {\n-      currentRole = NodeRole.ELECTED_MASTER;\n+    Boolean isMasterNode = currentNode.getIsMasterNode();\n+    if (isMasterNode != null) {\n+      currentRole = isMasterNode ? NodeRole.ELECTED_MASTER : currentNodeRole;\n     } else {\n-      currentRole = currentNodeRole;\n+      final String electedMasterHostAddress = getElectedMasterHostAddress();\n+      currentRole = currentNode.getHostAddress().equalsIgnoreCase(electedMasterHostAddress) ? NodeRole.ELECTED_MASTER : currentNodeRole;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483dbbbdbe8e039038712499501fb55033134ece"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2638, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}