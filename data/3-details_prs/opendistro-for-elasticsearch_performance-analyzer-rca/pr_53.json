{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzcyNDYw", "number": 53, "title": "Use reflection to pass resource type Enum on gPRC", "bodyText": "Issue #, if available:\nDescription of changes:\n\n\nCreated a new ResourceType protobuf message and use it to carry the resource type information between nodes. previously we only pass the string name of the enum which is not sufficient especially if we want to do aggregation on master node(i.e. check whether the usage is balanced on some certain resource type)\n\n\nCompletely remove the usaeg of apache common \"pair\" in RCA and make the SlideWindow more generic. Remove the sliding window sub class that was defined in HighHeapOldGenRca.java\n\n\nremove evaluationIntervalSeconds in Rca constructor and hardcoded it to 5 seconds in all Rca. Will raise a subsequent PR to completely get rid of evaluationIntervalSeconds in Rca framework\n\n\nadd a boolean variable alwaysCreateSummary in young gen and old gen Rca class. if alwaysCreateSummary is true, the RCA will always create a summary for this flowunit regardless of its state(whether healthy or unhealthy\n\n\nfix some minor issues in unit test.\n\n\nTests:\ntested on docker image.\nCode coverage percentage for this patch:\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-01-13T23:29:25Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/53", "merged": true, "mergeCommit": {"oid": "2d5d815296003a9d45ca019e5198316e97d4c129"}, "closed": true, "closedAt": "2020-01-14T20:38:28Z", "author": {"login": "rguo-aws"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6Enc_gH2gAyMzYyMzcyNDYwOjk3NTdjNTMyMzgwN2ZkYmU1Njc1NmI2MzdhMmFhYzA1MzJmNTUxNGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6XHRpAFqTM0MjgyMjc0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9757c5323807fdbe56756b637a2aac0532f5514c", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/9757c5323807fdbe56756b637a2aac0532f5514c", "committedDate": "2020-01-13T23:05:15Z", "message": "Use reflection to pass resource type Enum on gPRC and make the SlidingWindow more generic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7768878294a6bf9497d31e75587e9e9231016ef7", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/7768878294a6bf9497d31e75587e9e9231016ef7", "committedDate": "2020-01-14T00:09:16Z", "message": "merged from master and fixed some conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de310b737e0edd00d47deb0f5483b99b66702008", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/de310b737e0edd00d47deb0f5483b99b66702008", "committedDate": "2020-01-14T00:43:03Z", "message": "Use reflection to pass resource type Enum on gPRC and make the SlidingWindow more generic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6046d47e1f4f7e70ef7c5224e3dc4c9f46237eb", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/c6046d47e1f4f7e70ef7c5224e3dc4c9f46237eb", "committedDate": "2020-01-14T00:43:03Z", "message": "merged from master and fixed some conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d033a51b5e2289d5901535112818a37407d61592", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d033a51b5e2289d5901535112818a37407d61592", "committedDate": "2020-01-14T00:43:03Z", "message": "Revert \"merged from master and fixed some conflicts\"\n\nThis reverts commit 7768878294a6bf9497d31e75587e9e9231016ef7."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6f1f33db3cd76c7eb973d31e85b27b8ac6e8ef3", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e6f1f33db3cd76c7eb973d31e85b27b8ac6e8ef3", "committedDate": "2020-01-14T00:47:35Z", "message": "fixed rebase issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjQ4MDEy", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/53#pullrequestreview-342248012", "createdAt": "2020-01-14T01:40:48Z", "commit": {"oid": "7768878294a6bf9497d31e75587e9e9231016ef7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMTo0MDo0OFrOFdJ-9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMTo0MDo0OFrOFdJ-9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjExNjU5Ng==", "bodyText": "Can we do this without using reflection? I think its ok to have some boiler plate code here. Ideally, we should define objects that are sent over the network as protobuf objects to avoid this scenario.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/53#discussion_r366116596", "createdAt": "2020-01-14T01:40:48Z", "author": {"login": "ditac"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/summaries/HotResourceSummary.java", "diffHunk": "@@ -88,8 +109,31 @@ public void buildSummaryMessageAndAddToFlowUnit(FlowUnitMessage.Builder messageB\n \n   public static HotResourceSummary buildHotResourceSummaryFromMessage(\n       HotResourceSummaryMessage message) {\n-    HotResourceSummary newSummary = new HotResourceSummary(message.getResourceType(),\n-        message.getThreshold(), message.getValue(), message.getUnitType(), message.getTimePeriod());\n+    String resourceTypeClassName = message.getResourceType();\n+    //cast to Enum using reflection. find the last \".\" and separate the class name into two parts.\n+    //e.g. com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Resources$ResourceType.HEAP\n+    //will be split to  \"com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Resources$ResourceType\"\n+    //and \"HEAP\"\n+    String[] nameSplit = resourceTypeClassName.split(\"\\\\.(?=[^\\\\.]+$)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7768878294a6bf9497d31e75587e9e9231016ef7"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjg1Mzgz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/53#pullrequestreview-342285383", "createdAt": "2020-01-14T04:26:02Z", "commit": {"oid": "e6f1f33db3cd76c7eb973d31e85b27b8ac6e8ef3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDoyNjowMlrOFdL3mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDoyNjowMlrOFdL3mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE0NzQ4MA==", "bodyText": "Going back we have a plan to remove the evaluationIntervalSeconds because we think that RCA framework should be simple. It should just run every graph node at every tick. The node decides if it wants\n\nto not do any work and return a empty flow unit.\nto do some work and yet return a empty flow unit as it is not time to emit one\nto do some work and emit a flow unit.\n\nSo basically the framework runs each graph node each time and it is upto the node to do whatever it wants and return a flow unit empty or otherwise.\nSo, we should try to not add the new rcaPeriod", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/53#discussion_r366147480", "createdAt": "2020-01-14T04:26:02Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/Rca.java", "diffHunk": "@@ -24,11 +24,28 @@\n \n public abstract class Rca<T extends ResourceFlowUnit> extends NonLeafNode<T> {\n   private static final Logger LOG = LogManager.getLogger(Rca.class);\n+  // the amount of RCA period this RCA needs to run before sending out a flowunit\n+  protected final int rcaPeriod;\n+  protected boolean alwaysCreateSummary;\n+  protected int counter;\n \n-  public Rca(long evaluationIntervalSeconds) {\n+  public Rca(long evaluationIntervalSeconds, int rcaPeriod) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6f1f33db3cd76c7eb973d31e85b27b8ac6e8ef3"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ede4d85b432a5264387ab43676300e77bc6ec13", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/6ede4d85b432a5264387ab43676300e77bc6ec13", "committedDate": "2020-01-14T20:03:42Z", "message": "made changes based on PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbdcb777e7df92f431c7e6ac48082108fd660aad", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/fbdcb777e7df92f431c7e6ac48082108fd660aad", "committedDate": "2020-01-14T20:13:03Z", "message": "fix some minor issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyODEyNTI0", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/53#pullrequestreview-342812524", "createdAt": "2020-01-14T20:19:02Z", "commit": {"oid": "fbdcb777e7df92f431c7e6ac48082108fd660aad"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMDoxOTowMlrOFdklOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMDoyMjo0M1rOFdkrcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU1MjM3Ng==", "bodyText": "If we are converting the name unit to seconds, shouldn't the member variable name remain **_SECONDS ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/53#discussion_r366552376", "createdAt": "2020-01-14T20:19:02Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/aggregators/SlidingWindow.java", "diffHunk": "@@ -23,59 +23,74 @@\n  * This is a generic sliding window for RCA sampling. The default behavior is to store the\n  * {timestap, value} pair and maintain the sum of all data entries within this sliding window.\n  */\n-public class SlidingWindow {\n+public class SlidingWindow<E extends SlidingWindowData> {\n \n-  protected final Deque<SlidingWindowData> windowDeque;\n-  protected final int SLIDING_WINDOW_SIZE_IN_SECONDS;\n+  protected final Deque<E> windowDeque;\n+  protected final long SLIDING_WINDOW_SIZE;\n   protected double sum;\n \n-  public SlidingWindow(int SLIDING_WINDOW_SIZE_IN_SECONDS) {\n+  public SlidingWindow(int SLIDING_WINDOW_SIZE_IN_TIMESTAMP, TimeUnit timeUnit) {\n     this.windowDeque = new LinkedList<>();\n-    this.SLIDING_WINDOW_SIZE_IN_SECONDS = SLIDING_WINDOW_SIZE_IN_SECONDS;\n+    this.SLIDING_WINDOW_SIZE = timeUnit.toSeconds(SLIDING_WINDOW_SIZE_IN_TIMESTAMP);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbdcb777e7df92f431c7e6ac48082108fd660aad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU1Mzk2OQ==", "bodyText": "We start every log message inside the RCA package as RCA: to distinguish the log from the Reader. can we do the same here ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/53#discussion_r366553969", "createdAt": "2020-01-14T20:22:43Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/SQLitePersistor.java", "diffHunk": "@@ -64,7 +64,7 @@ synchronized void createTable(String tableName, List<Field<?>> columns) {\n         .column(DSL.field(getPrimaryKeyColumnName(tableName) + PRIMARY_KEY_AUTOINCREMENT_POSTFIX))\n         .columns(columns);\n \n-    LOG.info(\"ruizhen: table created: {}\", constraintStep.toString());\n+    LOG.debug(\"table created: {}\", constraintStep.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbdcb777e7df92f431c7e6ac48082108fd660aad"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyODIyNzQ3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/53#pullrequestreview-342822747", "createdAt": "2020-01-14T20:38:18Z", "commit": {"oid": "fbdcb777e7df92f431c7e6ac48082108fd660aad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1121, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}