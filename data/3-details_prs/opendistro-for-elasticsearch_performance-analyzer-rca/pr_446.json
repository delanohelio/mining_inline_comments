{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzI2MzA5", "number": 446, "title": "Modify NodeConfigCollector to include more heap stats", "bodyText": "Modify NodeConfigCollector to include more heap stats\nFixes #: N/A\nDescription of changes:\n\nNodeConfigCollector now reports the maximum amount of memory avaiable\nin the old generation and the young generation in bytes\n\nTests:\n\nNodeConfigCollectorTest\n\nIf new tests are added, how long do the new ones take to complete\nNegligible effect on overall test time\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-10-02T07:03:01Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/446", "merged": true, "mergeCommit": {"oid": "3e4152d025c97e7af214632e5b4df0f004a29c13"}, "closed": true, "closedAt": "2020-10-06T17:15:02Z", "author": {"login": "sidheart"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOgrEngBqjM4MzI2ODE0OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP7nSwgFqTUwMzE4NzA4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f659052ccb74cac0f554f1bba3ca6aebf747271", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/6f659052ccb74cac0f554f1bba3ca6aebf747271", "committedDate": "2020-10-02T06:59:53Z", "message": "Modify NodeConfigCollector to include more heap stats\n\n- NodeConfigCollector now reports the maximum amount of memory avaiable\nin the old generation and the young generation in bytes"}, "afterCommit": {"oid": "d326b58ad09e9c46fbc9c38dfa377a08202c3d2c", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d326b58ad09e9c46fbc9c38dfa377a08202c3d2c", "committedDate": "2020-10-02T07:11:54Z", "message": "Modify NodeConfigCollector to include more heap stats\n\n- NodeConfigCollector now reports the maximum amount of memory avaiable\nin the old generation and the young generation in bytes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDc4ODA4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/446#pullrequestreview-501478808", "createdAt": "2020-10-02T22:27:33Z", "commit": {"oid": "d326b58ad09e9c46fbc9c38dfa377a08202c3d2c"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjc0MDY5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/446#pullrequestreview-502274069", "createdAt": "2020-10-05T17:33:25Z", "commit": {"oid": "d326b58ad09e9c46fbc9c38dfa377a08202c3d2c"}, "state": "DISMISSED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzozMzoyNVrOHcnBAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzozODo0M1rOHcnL-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2MTQxMQ==", "bodyText": "The whole idea of throwing an exception from nodeConfigCache.get was to make callers aware of a missing value and letting them decide how to handle it. By masking it and returning null in a reader util, we are exposing ourselves to future bugs.\nI don't understand how this is useful or better, the caller still needs to check for null values - only now the compiler will not ensure that these values are checked. So we run a greater risk of missing these values. That is the whole point of checked exceptions.\nThis reader util class is good in that you don't have to remember the actual Resource values to pass, but it should follow the same API signature. We should not silently eat these exceptions here and make callers handle a different unchecked code path.\nPS: I know this is not a new artifact in this PR, it is simply extending existing code faults. I think we should fix it, if the change is big, we can create separate PRs. Either way, at least the new methods can follow the right signature.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/446#discussion_r499761411", "createdAt": "2020-10-05T17:33:25Z", "author": {"login": "vigyasharma"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/util/NodeConfigCacheReaderUtil.java", "diffHunk": "@@ -64,4 +64,24 @@ public static Long readHeapMaxSizeInBytes(\n     }\n     return null;\n   }\n+\n+  public static Double readOldGenMaxSizeInBytes(\n+      final NodeConfigCache nodeConfigCache, final NodeKey esNode) {\n+    try {\n+      return nodeConfigCache.get(esNode, ResourceUtil.OLD_GEN_MAX_SIZE);\n+    } catch (final IllegalArgumentException e) {\n+      LOG.error(\"Exception while reading heap max size from Node Config Cache\", e);\n+    }\n+    return null;\n+  }\n+\n+  public static Double readYoungGenMaxSizeInBytes(\n+      final NodeConfigCache nodeConfigCache, final NodeKey esNode) {\n+    try {\n+      return nodeConfigCache.get(esNode, ResourceUtil.YOUNG_GEN_MAX_SIZE);\n+    } catch (final IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d326b58ad09e9c46fbc9c38dfa377a08202c3d2c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2MjU4MA==", "bodyText": "Also nodeConfigCache.get should throw a checked exception, not a RuntimeException (which are for critical/unrecoverable failures)", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/446#discussion_r499762580", "createdAt": "2020-10-05T17:35:35Z", "author": {"login": "vigyasharma"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/util/NodeConfigCacheReaderUtil.java", "diffHunk": "@@ -64,4 +64,24 @@ public static Long readHeapMaxSizeInBytes(\n     }\n     return null;\n   }\n+\n+  public static Double readOldGenMaxSizeInBytes(\n+      final NodeConfigCache nodeConfigCache, final NodeKey esNode) {\n+    try {\n+      return nodeConfigCache.get(esNode, ResourceUtil.OLD_GEN_MAX_SIZE);\n+    } catch (final IllegalArgumentException e) {\n+      LOG.error(\"Exception while reading heap max size from Node Config Cache\", e);\n+    }\n+    return null;\n+  }\n+\n+  public static Double readYoungGenMaxSizeInBytes(\n+      final NodeConfigCache nodeConfigCache, final NodeKey esNode) {\n+    try {\n+      return nodeConfigCache.get(esNode, ResourceUtil.YOUNG_GEN_MAX_SIZE);\n+    } catch (final IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2MTQxMQ=="}, "originalCommit": {"oid": "d326b58ad09e9c46fbc9c38dfa377a08202c3d2c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2NDIxNw==", "bodyText": "It seems MINOR_GC is described as \"time in percentage\". It that valid?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/446#discussion_r499764217", "createdAt": "2020-10-05T17:38:43Z", "author": {"login": "vigyasharma"}, "path": "src/main/proto/inter_node_rpc_service.proto", "diffHunk": "@@ -101,6 +101,9 @@ enum MetricEnum {\n \n   // Heap\n   HEAP_MAX = 16 [(additional_fields).name = \"heap max\", (additional_fields).description = \"max heap size in bytes\"];\n+\n+  // GC\n+  FULL_GC = 32 [(additional_fields).name = \"full gc\", (additional_fields).description = \"pause time in ms\"];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d326b58ad09e9c46fbc9c38dfa377a08202c3d2c"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d326b58ad09e9c46fbc9c38dfa377a08202c3d2c", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d326b58ad09e9c46fbc9c38dfa377a08202c3d2c", "committedDate": "2020-10-02T07:11:54Z", "message": "Modify NodeConfigCollector to include more heap stats\n\n- NodeConfigCollector now reports the maximum amount of memory avaiable\nin the old generation and the young generation in bytes"}, "afterCommit": {"oid": "e38d5b08f956eefa98d7cf16481401b291b53dc5", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e38d5b08f956eefa98d7cf16481401b291b53dc5", "committedDate": "2020-10-05T22:06:55Z", "message": "Modify NodeConfigCollector to include more heap stats\n\n- NodeConfigCollector now reports the maximum amount of memory avaiable\nin the old generation and the young generation in bytes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e0de32b5ee54c77a97de67cc801a4ca3dc95e5b", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4e0de32b5ee54c77a97de67cc801a4ca3dc95e5b", "committedDate": "2020-10-05T23:26:16Z", "message": "Modify NodeConfigCollector to include more heap stats\n\n- NodeConfigCollector now reports the maximum amount of memory avaiable\nin the old generation and the young generation in bytes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e38d5b08f956eefa98d7cf16481401b291b53dc5", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e38d5b08f956eefa98d7cf16481401b291b53dc5", "committedDate": "2020-10-05T22:06:55Z", "message": "Modify NodeConfigCollector to include more heap stats\n\n- NodeConfigCollector now reports the maximum amount of memory avaiable\nin the old generation and the young generation in bytes"}, "afterCommit": {"oid": "4e0de32b5ee54c77a97de67cc801a4ca3dc95e5b", "author": {"user": {"login": "sidheart", "name": "Sid Narayan"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4e0de32b5ee54c77a97de67cc801a4ca3dc95e5b", "committedDate": "2020-10-05T23:26:16Z", "message": "Modify NodeConfigCollector to include more heap stats\n\n- NodeConfigCollector now reports the maximum amount of memory avaiable\nin the old generation and the young generation in bytes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNTIwMzEx", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/446#pullrequestreview-502520311", "createdAt": "2020-10-06T01:12:30Z", "commit": {"oid": "4e0de32b5ee54c77a97de67cc801a4ca3dc95e5b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTg3MDg5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/446#pullrequestreview-503187089", "createdAt": "2020-10-06T17:13:25Z", "commit": {"oid": "4e0de32b5ee54c77a97de67cc801a4ca3dc95e5b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 944, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}