{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTE5MTc2", "number": 171, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1NjozNlrOD3x3UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDozMDoyMlrOD4EbyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODE1MjQ5OnYy", "diffSide": "RIGHT", "path": "pa_config/rca.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1NjozNlrOGOOrgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDoyNToyNlrOGOVpcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3Mzc2Mg==", "bodyText": "We should specify the units in the key name", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/171#discussion_r417573762", "createdAt": "2020-04-29T19:56:36Z", "author": {"login": "yojs"}, "path": "pa_config/rca.conf", "diffHunk": "@@ -38,8 +38,16 @@\n     \"rotation-period-seconds\": 21600\n   },\n \n-  // RCA settings\n-  \"high-heap-usage-old-gen-rca\": {\n-    \"top-k\" : 3\n+  // Add config settings for different RCAs\n+  \"rca-config-settings\": {\n+    // old gen rca\n+    \"high-heap-usage-old-gen-rca\": {\n+      \"top-k\" : 3\n+    },\n+    //young gen rca\n+    \"high-heap-usage-young-gen-rca\": {\n+      \"promotion-rate-threshold\" : 500,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20c0d98810cd66cce308b9b9b417e9704f553b6e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4NzkyMg==", "bodyText": "done", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/171#discussion_r417687922", "createdAt": "2020-04-30T00:25:26Z", "author": {"login": "rguo-aws"}, "path": "pa_config/rca.conf", "diffHunk": "@@ -38,8 +38,16 @@\n     \"rotation-period-seconds\": 21600\n   },\n \n-  // RCA settings\n-  \"high-heap-usage-old-gen-rca\": {\n-    \"top-k\" : 3\n+  // Add config settings for different RCAs\n+  \"rca-config-settings\": {\n+    // old gen rca\n+    \"high-heap-usage-old-gen-rca\": {\n+      \"top-k\" : 3\n+    },\n+    //young gen rca\n+    \"high-heap-usage-young-gen-rca\": {\n+      \"promotion-rate-threshold\" : 500,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3Mzc2Mg=="}, "originalCommit": {"oid": "20c0d98810cd66cce308b9b9b417e9704f553b6e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODE2NzA3OnYy", "diffSide": "LEFT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/HighHeapUsageOldGenRcaConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDowMDozOVrOGOO0pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDoyNjozMlrOGOVqtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NjEwMw==", "bodyText": "Should we just call the class OldGenRcaConfig ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/171#discussion_r417576103", "createdAt": "2020-04-29T20:00:39Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/HighHeapUsageOldGenRcaConfig.java", "diffHunk": "@@ -27,25 +27,33 @@\n   private static final Logger LOG = LogManager.getLogger(HighHeapUsageOldGenRcaConfig.class);\n   private int topK;\n   public static final int DEFAULT_TOP_K = 3;\n-  private static final String TOP_K_RCA_CONF = \"top-k\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20c0d98810cd66cce308b9b9b417e9704f553b6e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4ODI0NA==", "bodyText": "The reason I use this \"HighHeapUsageOldGenRcaConfig\" as the class name is because I want to keep it consistent with the actually RCA class name which is \"HighHeapUsageOldGenRca\".", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/171#discussion_r417688244", "createdAt": "2020-04-30T00:26:32Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/HighHeapUsageOldGenRcaConfig.java", "diffHunk": "@@ -27,25 +27,33 @@\n   private static final Logger LOG = LogManager.getLogger(HighHeapUsageOldGenRcaConfig.class);\n   private int topK;\n   public static final int DEFAULT_TOP_K = 3;\n-  private static final String TOP_K_RCA_CONF = \"top-k\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NjEwMw=="}, "originalCommit": {"oid": "20c0d98810cd66cce308b9b9b417e9704f553b6e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODE3MzE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDowMjoyMlrOGOO4gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDoyNToxNVrOGOVpUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzA5MA==", "bodyText": "I think it would make more sense to just pass the rcaConfig object to the constructor and have it read the config from it.\nSimilarly for the OldGenConfig", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/171#discussion_r417577090", "createdAt": "2020-04-29T20:02:22Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -98,6 +100,14 @@ public int getPerVertexBufferLength() {\n   }\n \n   public HighHeapUsageOldGenRcaConfig getHighHeapUsageOldGenRcaConfig() {\n-    return conf.getHighHeapUsageOldGenRcaConfig();\n+    return new HighHeapUsageOldGenRcaConfig(conf.getRcaConfigSettings(HighHeapUsageOldGenRcaConfig.CONFIG_NAME));\n+  }\n+\n+  public HighHeapUsageYoungGenRcaConfig getHighHeapUsageYoungGenRcaConfig() {\n+    return new HighHeapUsageYoungGenRcaConfig(conf.getRcaConfigSettings(HighHeapUsageYoungGenRcaConfig.CONFIG_NAME));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20c0d98810cd66cce308b9b9b417e9704f553b6e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4Nzg5MQ==", "bodyText": "done.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/171#discussion_r417687891", "createdAt": "2020-04-30T00:25:15Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -98,6 +100,14 @@ public int getPerVertexBufferLength() {\n   }\n \n   public HighHeapUsageOldGenRcaConfig getHighHeapUsageOldGenRcaConfig() {\n-    return conf.getHighHeapUsageOldGenRcaConfig();\n+    return new HighHeapUsageOldGenRcaConfig(conf.getRcaConfigSettings(HighHeapUsageOldGenRcaConfig.CONFIG_NAME));\n+  }\n+\n+  public HighHeapUsageYoungGenRcaConfig getHighHeapUsageYoungGenRcaConfig() {\n+    return new HighHeapUsageYoungGenRcaConfig(conf.getRcaConfigSettings(HighHeapUsageYoungGenRcaConfig.CONFIG_NAME));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzA5MA=="}, "originalCommit": {"oid": "20c0d98810cd66cce308b9b9b417e9704f553b6e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODg5OTUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/GenericRcaConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDozNzozM1rOGOV4Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNTo0MTozM1rOGOaW7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5MTY4Nw==", "bodyText": "I don't think we need a GenericConfig and then its inherited classes. The json structure inside rca-config-settings is similar for all types.\nMaybe it would be less code, if we just have a a ConfigHelper class that initializes with RcaConf object and then specific RCAs can ask for a value given a string.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/171#discussion_r417691687", "createdAt": "2020-04-30T00:37:33Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/GenericRcaConfig.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.configs;\n+\n+import java.util.Map;\n+\n+/**\n+ * base class config object to store rca config settings\n+ */\n+public abstract class GenericRcaConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda25c667e9a3dc20ded5380b2b8d4c8cf8993c8"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc2NTEwMw==", "bodyText": "done. removed the inheritance and add the below function to retrieve value mapped by (rcaName, setting name ) key.\npublic  T readRcaConfig(String rcaName, String key, Class<? extends T> clazz)", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/171#discussion_r417765103", "createdAt": "2020-04-30T05:41:33Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/GenericRcaConfig.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.configs;\n+\n+import java.util.Map;\n+\n+/**\n+ * base class config object to store rca config settings\n+ */\n+public abstract class GenericRcaConfig {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5MTY4Nw=="}, "originalCommit": {"oid": "cda25c667e9a3dc20ded5380b2b8d4c8cf8993c8"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE4MjE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoyNzoyMVrOGOr3PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoyNzoyMVrOGOr3PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA1MTkwMA==", "bodyText": "Maybe we can add java doc comment describing the params ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/171#discussion_r418051900", "createdAt": "2020-04-30T14:27:21Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -108,10 +110,41 @@ public int getPerVertexBufferLength() {\n   }\n \n   public HighHeapUsageOldGenRcaConfig getHighHeapUsageOldGenRcaConfig() {\n-    return conf.getHighHeapUsageOldGenRcaConfig();\n+    return new HighHeapUsageOldGenRcaConfig(this);\n+  }\n+\n+  public HighHeapUsageYoungGenRcaConfig getHighHeapUsageYoungGenRcaConfig() {\n+    return new HighHeapUsageYoungGenRcaConfig(this);\n+  }\n+\n+  public HotNodeClusterRcaConfig getHotNodeClusterRcaConfig() {\n+    return new HotNodeClusterRcaConfig(this);\n   }\n \n   public List<String> getMutedRcaList() {\n     return conf.getMutedRcaList();\n   }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public <T> T readRcaConfig(String rcaName, String key, Class<? extends T> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d87d53e3d75ff3870c9312cc89c8b88ee2bb48b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE5NDk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDozMDoyMlrOGOr_sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDozMDoyMlrOGOr_sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA1NDA2Ng==", "bodyText": "It might be difficult to know which of the casts threw the exception, line 136 or line 142, right ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/171#discussion_r418054066", "createdAt": "2020-04-30T14:30:22Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConf.java", "diffHunk": "@@ -108,10 +110,41 @@ public int getPerVertexBufferLength() {\n   }\n \n   public HighHeapUsageOldGenRcaConfig getHighHeapUsageOldGenRcaConfig() {\n-    return conf.getHighHeapUsageOldGenRcaConfig();\n+    return new HighHeapUsageOldGenRcaConfig(this);\n+  }\n+\n+  public HighHeapUsageYoungGenRcaConfig getHighHeapUsageYoungGenRcaConfig() {\n+    return new HighHeapUsageYoungGenRcaConfig(this);\n+  }\n+\n+  public HotNodeClusterRcaConfig getHotNodeClusterRcaConfig() {\n+    return new HotNodeClusterRcaConfig(this);\n   }\n \n   public List<String> getMutedRcaList() {\n     return conf.getMutedRcaList();\n   }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public <T> T readRcaConfig(String rcaName, String key, Class<? extends T> clazz) {\n+    T setting = null;\n+    try {\n+      Map<String, Object> rcaObj = null;\n+      if (conf.getRcaConfigSettings() != null\n+          && conf.getRcaConfigSettings().containsKey(rcaName)\n+          && conf.getRcaConfigSettings().get(rcaName) != null) {\n+        rcaObj = (Map<String, Object>)conf.getRcaConfigSettings().get(rcaName);\n+      }\n+\n+      if (rcaObj != null\n+          && rcaObj.containsKey(key)\n+          && rcaObj.get(key) != null) {\n+        setting = clazz.cast(rcaObj.get(key));\n+      }\n+    }\n+    catch (ClassCastException ne) {\n+      LOG.error(\"rca.conf contains value in invalid format, trace : {}\", ne.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d87d53e3d75ff3870c9312cc89c8b88ee2bb48b"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2626, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}