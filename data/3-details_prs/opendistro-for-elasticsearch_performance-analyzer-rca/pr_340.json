{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMjMxNzgy", "number": 340, "title": "Populate default workload type and cache priority for the decider to base default actions", "bodyText": "Issue #: #339\nDescription of changes: These changes take the workload type and cache priorities as an input from the customer to base the actions taken on the cluster. Default values are hardcoded in the code in case the read from config is not possible due to any circumstances. Values present in the config file are given priority over any such value.\nTests: UTs added.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-08-05T08:29:32Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340", "merged": true, "mergeCommit": {"oid": "15295e2a016dbe13dcc5a63362c8cccc31ec2354"}, "closed": true, "closedAt": "2020-08-18T06:43:15Z", "author": {"login": "aditjind"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7_HLAAFqTQ2MTg5ODY5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_9bXwgFqTQ2ODk0MTgzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxODk4Njk2", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-461898696", "createdAt": "2020-08-05T17:59:28Z", "commit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzo1OToyOFrOG8UolQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzo1OToyOFrOG8UolQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwNTgxMw==", "bodyText": "I'm pretty sure you need commas between these JSON objects", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r465905813", "createdAt": "2020-08-05T17:59:28Z", "author": {"login": "sidheart"}, "path": "pa_config/rca.conf", "diffHunk": "@@ -87,8 +87,22 @@\n   ],\n \n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    \"workload-type\": {\n+      \"priority-order\":[\n+        \"ingest\",\n+        \"search\"\n+      ]\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxODk4OTE1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-461898915", "createdAt": "2020-08-05T17:59:45Z", "commit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzo1OTo0NVrOG8UpRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzo1OTo0NVrOG8UpRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwNTk4OA==", "bodyText": "Commas, see above", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r465905988", "createdAt": "2020-08-05T17:59:45Z", "author": {"login": "sidheart"}, "path": "pa_config/rca_idle_master.conf", "diffHunk": "@@ -98,8 +98,22 @@\n   ],\n \n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    \"workload-type\": {\n+      \"priority-order\":[\n+        \"ingest\",\n+        \"search\"\n+      ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxODk5MTMz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-461899133", "createdAt": "2020-08-05T18:00:01Z", "commit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODowMDowMlrOG8UqAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODowMDowMlrOG8UqAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwNjE3OQ==", "bodyText": "Add commas between objects", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r465906179", "createdAt": "2020-08-05T18:00:02Z", "author": {"login": "sidheart"}, "path": "pa_config/rca_master.conf", "diffHunk": "@@ -98,8 +98,22 @@\n   ],\n \n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    \"workload-type\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTAwMDY3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-461900067", "createdAt": "2020-08-05T18:01:20Z", "commit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODowMToyMFrOG8Ustg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODowMToyMFrOG8Ustg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwNjg3MA==", "bodyText": "Needs null checks", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r465906870", "createdAt": "2020-08-05T18:01:20Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/Decider.java", "diffHunk": "@@ -90,4 +95,31 @@ public void handleNodeMuted() {\n \n   @Override\n   public abstract Decision operate();\n+\n+  /**\n+   * read threshold values from rca.conf\n+   *\n+   * @param conf RcaConf object\n+   */\n+  @Override\n+  public void readRcaConf(RcaConf conf) {\n+    configObj = conf.getDeciderConfig();\n+  }\n+\n+  public double getFieldDataCacheUpperBound() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTA0MjY3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-461904267", "createdAt": "2020-08-05T18:07:31Z", "commit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODowNzozMVrOG8U47g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODowNzozMVrOG8U47g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwOTk5OA==", "bodyText": "It seems like these are written and then never read. Are we doing this on purpose? Will this only be configurable in the future?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r465909998", "createdAt": "2020-08-05T18:07:31Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/DeciderConfig.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.configs;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class DeciderConfig {\n+\n+    public static final String CACHE_BOUNDS_CONFIG_NAME = \"cache-bounds\";\n+    public static final String CACHE_CONFIG_NAME = \"cache-type\";\n+    public static final String WORKLOAD_CONFIG_NAME = \"workload-type\";\n+    public static final String PRIORITY_ORDER_CONFIG_NAME = \"priority-order\";\n+    public static final String FIELD_DATA_CACHE_UPPER_BOUND = \"field-data-cache-upper-bound\";\n+    public static final String SHARD_REQUEST_CACHE_UPPER_BOUND = \"shard-request-cache-upper-bound\";\n+    private static final double DEFAULT_FIELD_DATA_CACHE_UPPER_BOUND = 0.4;\n+    private static final double DEFAULT_SHARD_REQUEST_CACHE_UPPER_BOUND = 0.05;\n+    // Defaults based on prioritising Stability over performance.\n+    private static final List<String> DEFAULT_WORKLOAD_PRIORITY = Arrays.asList(\"ingest\", \"search\");\n+    private static final List<String> DEFAULT_CACHE_PRIORITY = Arrays.asList(\"read-heavy\", \"write-heavy\");\n+\n+    public Double fieldDataCacheUpperBound;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTA2MjIx", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-461906221", "createdAt": "2020-08-05T18:10:20Z", "commit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODoxMDoyMFrOG8U-sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODoxMDoyMFrOG8U-sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxMTQ3NQ==", "bodyText": "Left a comment on DeciderConfig as well. Please use private members + getters for this", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r465911475", "createdAt": "2020-08-05T18:10:20Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/Decider.java", "diffHunk": "@@ -90,4 +95,31 @@ public void handleNodeMuted() {\n \n   @Override\n   public abstract Decision operate();\n+\n+  /**\n+   * read threshold values from rca.conf\n+   *\n+   * @param conf RcaConf object\n+   */\n+  @Override\n+  public void readRcaConf(RcaConf conf) {\n+    configObj = conf.getDeciderConfig();\n+  }\n+\n+  public double getFieldDataCacheUpperBound() {\n+    return configObj.fieldDataCacheUpperBound;\n+  }\n+\n+  public double getShardRequestCacheUpperBound() {\n+    return configObj.shardRequestCacheUpperBound;\n+  }\n+\n+  public List<String> getWorkLoadPriority() {\n+    return configObj.workloadPriorityOrder;\n+  }\n+\n+  public List<String> getCachePriority() {\n+    return configObj.cachePriorityOrder;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTA3NTYy", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-461907562", "createdAt": "2020-08-05T18:12:07Z", "commit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODoxMjowN1rOG8VClw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODoxMjowN1rOG8VClw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxMjQ3MQ==", "bodyText": "Add a comment on why we're always going with the default here instead of allowing overrides.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r465912471", "createdAt": "2020-08-05T18:12:07Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/CacheHealthDecider.java", "diffHunk": "@@ -69,8 +70,8 @@ public CacheHealthDecider(\n             .put(ResourceEnum.FIELD_DATA_CACHE, fieldDataCacheClusterRca)\n             .build();\n \n-    this.fieldDataCacheSizeUpperBound = CacheDeciderConfig.DEFAULT_FIELD_DATA_CACHE_UPPER_BOUND;\n-    this.shardRequestCacheSizeUpperBound = CacheDeciderConfig.DEFAULT_SHARD_REQUEST_CACHE_UPPER_BOUND;\n+    this.fieldDataCacheSizeUpperBound = getDefaultShardRequestCacheUpperBound();\n+    this.shardRequestCacheSizeUpperBound = getDefaultFieldDataCacheUpperBound();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5166ee66e58f4e75aa2f029f9e04ee38089bdf5"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1834c078e1d604d7fcdc9241c3adc3cb11abcf4", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d1834c078e1d604d7fcdc9241c3adc3cb11abcf4", "committedDate": "2020-08-06T22:20:03Z", "message": "Initial Commit\n\nRemoving SpotBugs Warnings\n\nFixing Import Errors\n\nFixing Import Order x2\n\nFixing UT\n\nAddressing PR Comments\n\nAdding Comments\n\nInitial Commit\n\nRemoving SpotBugs Warnings\n\nFixing Import Errors\n\nFixing Import Order x2\n\nFixing UT\n\nAddressing PR Comments\n\nAdding Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/75b62e36596d199d2878955fd6a1430a46b32a1b", "committedDate": "2020-08-06T22:31:11Z", "message": "Adding Comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9299c0a74e57a165bf3f2a0a0c7313df5233d33c", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/9299c0a74e57a165bf3f2a0a0c7313df5233d33c", "committedDate": "2020-08-06T20:43:30Z", "message": "Merge branch 'decider-config' of github.com:opendistro-for-elasticsearch/performance-analyzer-rca into decider-config"}, "afterCommit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/75b62e36596d199d2878955fd6a1430a46b32a1b", "committedDate": "2020-08-06T22:31:11Z", "message": "Adding Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjk0Mjg5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-463694289", "createdAt": "2020-08-08T00:03:37Z", "commit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjkyMTYz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-463692163", "createdAt": "2020-08-07T23:52:38Z", "commit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzo1MjozOFrOG9roRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDowNDo0NVrOG9rwhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMTE0Mw==", "bodyText": "Correct me if I am wrong but I assume this indicates the upper bound in percentage ? And why do we want to change it from 0.4 -> 10.4 ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r467331143", "createdAt": "2020-08-07T23:52:38Z", "author": {"login": "rguo-aws"}, "path": "pa_config/rca_idle_master.conf", "diffHunk": "@@ -97,11 +97,21 @@\n     \"ClusterTemperatureRca\"\n   ],\n \n+  // Default Values are added in the config specific file as well\n+  // Modify them as well whenever changing the default values (DeciderConfig.java)\n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    \"workload-type\": {\n+      \"priority-order\": [\"ingest\", \"search\"]\n+    },\n+    // Decreasing order of priority for the type of cache which is expected to be consumed more.\n+    \"cache-type\": {\n+      \"priority-order\": [\"read-heavy\", \"write-heavy\"]\n+    },\n     // cache decider - Needs to be updated as per the performance test results\n-    \"cache-decider-config\": {\n-      \"field-data-cache-upper-bound\" : 0.4,\n-      \"shard-request-cache-upper-bound\" : 0.05\n+    \"cache-bounds\": {\n+      \"field-data-cache-upper-bound\" : 10.4,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMjI4NA==", "bodyText": "Any reason to create getter for the json field name defined in rca.conf ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r467332284", "createdAt": "2020-08-07T23:59:22Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/DeciderConfig.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.configs;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class DeciderConfig {\n+\n+    private static final String CACHE_BOUNDS_CONFIG_NAME = \"cache-bounds\";\n+    private static final String CACHE_CONFIG_NAME = \"cache-type\";\n+    private static final String WORKLOAD_CONFIG_NAME = \"workload-type\";\n+    private static final String PRIORITY_ORDER_CONFIG_NAME = \"priority-order\";\n+    private static final String FIELD_DATA_CACHE_UPPER_BOUND_NAME = \"field-data-cache-upper-bound\";\n+    private static final String SHARD_REQUEST_CACHE_UPPER_BOUND_NAME = \"shard-request-cache-upper-bound\";\n+    private static final double DEFAULT_FIELD_DATA_CACHE_UPPER_BOUND = 0.4;\n+    private static final double DEFAULT_SHARD_REQUEST_CACHE_UPPER_BOUND = 0.05;\n+    // Defaults based on prioritising Stability over performance.\n+    private static final List<String> DEFAULT_WORKLOAD_PRIORITY = Arrays.asList(\"ingest\", \"search\");\n+    private static final List<String> DEFAULT_CACHE_PRIORITY = Arrays.asList(\"read-heavy\", \"write-heavy\");\n+\n+    private Double fieldDataCacheUpperBound;\n+    private Double shardRequestCacheUpperBound;\n+    private List<String> cachePriorityOrder;\n+    private List<String> workloadPriorityOrder;\n+\n+    public DeciderConfig(final RcaConf rcaConf) {\n+        fieldDataCacheUpperBound = rcaConf.readDeciderConfig(CACHE_BOUNDS_CONFIG_NAME,\n+                FIELD_DATA_CACHE_UPPER_BOUND_NAME, Double.class);\n+        shardRequestCacheUpperBound = rcaConf.readDeciderConfig(CACHE_BOUNDS_CONFIG_NAME,\n+                SHARD_REQUEST_CACHE_UPPER_BOUND_NAME, Double.class);\n+        cachePriorityOrder = rcaConf.readDeciderConfig(CACHE_CONFIG_NAME,\n+                PRIORITY_ORDER_CONFIG_NAME, List.class);\n+        workloadPriorityOrder = rcaConf.readDeciderConfig(WORKLOAD_CONFIG_NAME,\n+                PRIORITY_ORDER_CONFIG_NAME, List.class);\n+        if (fieldDataCacheUpperBound == null) {\n+            fieldDataCacheUpperBound = DEFAULT_FIELD_DATA_CACHE_UPPER_BOUND;\n+        }\n+        if (shardRequestCacheUpperBound == null) {\n+            shardRequestCacheUpperBound = DEFAULT_SHARD_REQUEST_CACHE_UPPER_BOUND;\n+        }\n+        if (cachePriorityOrder == null) {\n+            cachePriorityOrder = DEFAULT_CACHE_PRIORITY;\n+        }\n+        if (workloadPriorityOrder == null) {\n+            workloadPriorityOrder = DEFAULT_WORKLOAD_PRIORITY;\n+        }\n+    }\n+\n+    public Double getFieldDataCacheUpperBound() {\n+        return fieldDataCacheUpperBound;\n+    }\n+\n+    public Double getShardRequestCacheUpperBound() {\n+        return shardRequestCacheUpperBound;\n+    }\n+\n+    public List<String> getCachePriorityOrder() {\n+        return cachePriorityOrder;\n+    }\n+\n+    public List<String> getWorkloadPriorityOrder() {\n+        return workloadPriorityOrder;\n+    }\n+\n+    public static List<String> getDefaultWorkloadPriority() {\n+        return DEFAULT_WORKLOAD_PRIORITY;\n+    }\n+\n+    public static List<String> getDefaultCachePriority() {\n+        return DEFAULT_CACHE_PRIORITY;\n+    }\n+\n+    public static Double getDefaultShardRequestCacheUpperBound() {\n+        return DEFAULT_SHARD_REQUEST_CACHE_UPPER_BOUND;\n+    }\n+\n+    public static Double getDefaultFieldDataCacheUpperBound() {\n+        return DEFAULT_FIELD_DATA_CACHE_UPPER_BOUND;\n+    }\n+\n+    public static String getCacheBoundsConfigName() {\n+        return CACHE_BOUNDS_CONFIG_NAME;\n+    }\n+\n+    public static String getCacheConfigName() {\n+        return CACHE_CONFIG_NAME;\n+    }\n+\n+    public static String getWorkloadConfigName() {\n+        return WORKLOAD_CONFIG_NAME;\n+    }\n+\n+    public static String getPriorityOrderConfigName() {\n+        return PRIORITY_ORDER_CONFIG_NAME;\n+    }\n+\n+    public static String getFieldDataCacheUpperBoundName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMzI1Mg==", "bodyText": "a high level question is how do we plan to use this cache priority in decider. I understand the purpose of having cache is to accelerate reading. So what should decider do if write heavy is specified here?\nAnd if customer wants to prioritized fielddata cache over shard request cache, how should they set it in config  ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r467333252", "createdAt": "2020-08-08T00:04:45Z", "author": {"login": "rguo-aws"}, "path": "pa_config/rca.conf", "diffHunk": "@@ -86,11 +86,21 @@\n     \"ClusterTemperatureRca\"\n   ],\n \n+  // Default Values are added in the config specific file as well\n+  // Modify them as well whenever changing the default values (DeciderConfig.java)\n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    \"workload-type\": {\n+      \"priority-order\": [\"ingest\", \"search\"]\n+    },\n+    // Decreasing order of priority for the type of cache which is expected to be consumed more.\n+    \"cache-type\": {\n+      \"priority-order\": [\"read-heavy\", \"write-heavy\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Mzc4MjI4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-465378228", "createdAt": "2020-08-11T19:49:15Z", "commit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo0OToxNVrOG_G0fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo0OToxNVrOG_G0fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyNTIxNQ==", "bodyText": "0.4 and 0.05? Any reason why we are using 10.4 and 10.05?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r468825215", "createdAt": "2020-08-11T19:49:15Z", "author": {"login": "sruti1312"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/RcaConfTest.java", "diffHunk": "@@ -63,20 +64,14 @@ public void testReadRcaConfig() {\n \n   @Test\n   public void testReadDeciderConfig() {\n-    final Double fieldDataCacheUpperBound =\n-        rcaConf.readDeciderConfig(\n-            CacheDeciderConfig.CONFIG_NAME,\n-            CacheDeciderConfig.RCA_CONF_KEY_CONSTANTS.FIELD_DATA_CACHE_UPPER_BOUND,\n-            Double.class);\n-    Assert.assertNotNull(fieldDataCacheUpperBound);\n-    Assert.assertEquals(CacheDeciderConfig.DEFAULT_FIELD_DATA_CACHE_UPPER_BOUND, fieldDataCacheUpperBound, 0.01);\n-\n-    final Double shardRequestCacheUpperBound =\n-        rcaConf.readDeciderConfig(\n-            CacheDeciderConfig.CONFIG_NAME,\n-            CacheDeciderConfig.RCA_CONF_KEY_CONSTANTS.SHARD_REQUEST_CACHE_UPPER_BOUND,\n-            Double.class);\n-    Assert.assertNotNull(shardRequestCacheUpperBound);\n-    Assert.assertEquals(CacheDeciderConfig.DEFAULT_SHARD_REQUEST_CACHE_UPPER_BOUND, shardRequestCacheUpperBound, 0.01);\n+    DeciderConfig configObj = new DeciderConfig(rcaConf);\n+    Assert.assertNotNull(configObj.getCachePriorityOrder());\n+    Assert.assertNotNull(configObj.getWorkloadPriorityOrder());\n+    Assert.assertNotNull(configObj.getFieldDataCacheUpperBound());\n+    Assert.assertNotNull(configObj.getShardRequestCacheUpperBound());\n+    Assert.assertEquals(Arrays.asList(\"test-read-heavy\", \"test-write-heavy\"), configObj.getCachePriorityOrder());\n+    Assert.assertEquals(10.4, configObj.getFieldDataCacheUpperBound(), 0.01);\n+    Assert.assertEquals(10.05, configObj.getShardRequestCacheUpperBound(), 0.01);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MzgxMTkz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-465381193", "createdAt": "2020-08-11T19:53:44Z", "commit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo1Mzo0NFrOG_G9oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo1Mzo0NFrOG_G9oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyNzU1Mg==", "bodyText": "What are your thoughts on having one more level. Like all cache related config bounded together. Pro might be it becomes more manageable.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r468827552", "createdAt": "2020-08-11T19:53:44Z", "author": {"login": "sruti1312"}, "path": "pa_config/rca_master.conf", "diffHunk": "@@ -97,11 +97,21 @@\n     \"ClusterTemperatureRca\"\n   ],\n \n+  // Default Values are added in the config specific file as well\n+  // Modify them as well whenever changing the default values (DeciderConfig.java)\n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    \"workload-type\": {\n+      \"priority-order\": [\"ingest\", \"search\"]\n+    },\n+    // Decreasing order of priority for the type of cache which is expected to be consumed more.\n+    \"cache-type\": {\n+      \"priority-order\": [\"read-heavy\", \"write-heavy\"]\n+    },\n     // cache decider - Needs to be updated as per the performance test results\n-    \"cache-decider-config\": {\n-      \"field-data-cache-upper-bound\" : 0.4,\n-      \"shard-request-cache-upper-bound\" : 0.05\n+    \"cache-bounds\": {\n+      \"field-data-cache-upper-bound\" : 10.4,\n+      \"shard-request-cache-upper-bound\" : 10.05", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bfd92bdad33ee1fa9038e515442b2ef222eee53", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/6bfd92bdad33ee1fa9038e515442b2ef222eee53", "committedDate": "2020-08-12T06:41:26Z", "message": "Changing Default Variables in PA Config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5266ffd04b1700c0acbda2d3338419517a2dfc2", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d5266ffd04b1700c0acbda2d3338419517a2dfc2", "committedDate": "2020-08-12T06:46:38Z", "message": "Merge branch 'master' into decider-config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2acda9b074f7750e2b3f4490959f7c35d0b1a1b", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/c2acda9b074f7750e2b3f4490959f7c35d0b1a1b", "committedDate": "2020-08-12T07:12:55Z", "message": "Fixing Typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b881aa46e3fd53eef9141bf1e16890c58874adcc", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/b881aa46e3fd53eef9141bf1e16890c58874adcc", "committedDate": "2020-08-12T08:28:05Z", "message": "Fixing Build Errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MTU2MzMw", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-466156330", "createdAt": "2020-08-12T18:10:39Z", "commit": {"oid": "b881aa46e3fd53eef9141bf1e16890c58874adcc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODoxMDo0MFrOG_s0OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODozMDoxNFrOG_tfYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0NzczNw==", "bodyText": "Caches are different from queues and don't easily map to workload types. From what i know, all caches help with some form of read traffic in ES. Indexing has a separate indexing buffer.\nFor caches, customers will have to call out the priority wrt. specific cache names - field-data-cache, shard-request-cache etc. A read/write heavy cluster does not provide data on relative cache priorities.\nThese caches are public documentation so customers would know about it, but it would still be an advanced setting.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r469447737", "createdAt": "2020-08-12T18:10:40Z", "author": {"login": "vigyasharma"}, "path": "pa_config/rca.conf", "diffHunk": "@@ -86,11 +86,21 @@\n     \"ClusterTemperatureRca\"\n   ],\n \n+  // Default Values are added in the config specific file as well\n+  // Modify them as well whenever changing the default values (DeciderConfig.java)\n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    \"workload-type\": {\n+      \"priority-order\": [\"ingest\", \"search\"]\n+    },\n+    // Decreasing order of priority for the type of cache which is expected to be consumed more.\n+    \"cache-type\": {\n+      \"priority-order\": [\"read-heavy\", \"write-heavy\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMzI1Mg=="}, "originalCommit": {"oid": "75b62e36596d199d2878955fd6a1430a46b32a1b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MTEwMw==", "bodyText": "We should move default values to code and pick overrides from rca.conf. This can be a separate PR/task.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r469451103", "createdAt": "2020-08-12T18:16:42Z", "author": {"login": "vigyasharma"}, "path": "pa_config/rca_master.conf", "diffHunk": "@@ -102,9 +102,19 @@\n   \"muted-deciders\": [],\n   \"muted-actions\": [],\n \n+  // Default Values are added in the config specific file as well\n+  // Modify them as well whenever changing the default values (DeciderConfig.java)\n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    \"workload-type\": {\n+      \"priority-order\": [\"ingest\", \"search\"]\n+    },\n+    // Decreasing order of priority for the type of cache which is expected to be consumed more.\n+    \"cache-type\": {\n+      \"priority-order\": [\"read-heavy\", \"write-heavy\"]\n+    },\n     // cache decider - Needs to be updated as per the performance test results\n-    \"cache-decider-config\": {\n+    \"cache-bounds\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b881aa46e3fd53eef9141bf1e16890c58874adcc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1NDc0NA==", "bodyText": "We can split cache bounds and queue bounds into their respective config objects. They will still get read from the decider base class so all deciders have it. But this will help organize the overall structure. (QueueConfig will get passed to ModifyQueueAction etc. )\nWe can do this as a separate PR.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r469454744", "createdAt": "2020-08-12T18:23:06Z", "author": {"login": "vigyasharma"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/configs/DeciderConfig.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.configs;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class DeciderConfig {\n+\n+    private static final String CACHE_BOUNDS_CONFIG_NAME = \"cache-bounds\";\n+    private static final String CACHE_CONFIG_NAME = \"cache-type\";\n+    private static final String WORKLOAD_CONFIG_NAME = \"workload-type\";\n+    private static final String PRIORITY_ORDER_CONFIG_NAME = \"priority-order\";\n+    private static final String FIELD_DATA_CACHE_UPPER_BOUND_NAME = \"field-data-cache-upper-bound\";\n+    private static final String SHARD_REQUEST_CACHE_UPPER_BOUND_NAME = \"shard-request-cache-upper-bound\";\n+    private static final double DEFAULT_FIELD_DATA_CACHE_UPPER_BOUND = 0.4;\n+    private static final double DEFAULT_SHARD_REQUEST_CACHE_UPPER_BOUND = 0.05;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b881aa46e3fd53eef9141bf1e16890c58874adcc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1ODMwNA==", "bodyText": "Minor: Consider rewording to make the ordering more clear. It should be clear that the list goes from most used to least used cache. (Same for workload priority).", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r469458304", "createdAt": "2020-08-12T18:29:23Z", "author": {"login": "vigyasharma"}, "path": "pa_config/rca_idle_master.conf", "diffHunk": "@@ -102,9 +102,19 @@\n   \"muted-deciders\": [],\n   \"muted-actions\": [],\n \n+  // Default Values are added in the config specific file as well\n+  // Modify them as well whenever changing the default values (DeciderConfig.java)\n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    \"workload-type\": {\n+      \"priority-order\": [\"ingest\", \"search\"]\n+    },\n+    // Decreasing order of priority for the type of cache which is expected to be consumed more.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b881aa46e3fd53eef9141bf1e16890c58874adcc"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1ODc4NQ==", "bodyText": "Good decision keeping them in base class. These will be required by multiple deciders.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r469458785", "createdAt": "2020-08-12T18:30:14Z", "author": {"login": "vigyasharma"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/Decider.java", "diffHunk": "@@ -91,4 +101,31 @@ public void handleNodeMuted() {\n \n   @Override\n   public abstract Decision operate();\n+\n+  /**\n+   * read threshold values from rca.conf\n+   *\n+   * @param conf RcaConf object\n+   */\n+  @Override\n+  public void readRcaConf(RcaConf conf) {\n+    configObj = conf.getDeciderConfig();\n+  }\n+\n+  public double getFieldDataCacheUpperBound() {\n+    return configObj != null ? configObj.getFieldDataCacheUpperBound() : getDefaultFieldDataCacheUpperBound();\n+  }\n+\n+  public double getShardRequestCacheUpperBound() {\n+    return configObj != null ? configObj.getShardRequestCacheUpperBound() : getDefaultShardRequestCacheUpperBound();\n+  }\n+\n+  public List<String> getWorkLoadPriority() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b881aa46e3fd53eef9141bf1e16890c58874adcc"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf850729d09a2697ad2c273e187035347346af84", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/cf850729d09a2697ad2c273e187035347346af84", "committedDate": "2020-08-12T22:14:04Z", "message": "Adding Verbose Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49821d3c6b1c255aedafa755e7d154ca2058e9dc", "author": {"user": {"login": "aditjind", "name": "Aditya Jindal"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/49821d3c6b1c255aedafa755e7d154ca2058e9dc", "committedDate": "2020-08-17T16:00:15Z", "message": "Changing Default Values of Cache priority Order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4OTQxODM4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#pullrequestreview-468941838", "createdAt": "2020-08-18T02:03:03Z", "commit": {"oid": "49821d3c6b1c255aedafa755e7d154ca2058e9dc"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMjowMzowM1rOHCAsng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMjowMzo1NlrOHCAtYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3MDYyMg==", "bodyText": "nit: least*", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r471870622", "createdAt": "2020-08-18T02:03:03Z", "author": {"login": "sruti1312"}, "path": "pa_config/rca.conf", "diffHunk": "@@ -91,9 +91,21 @@\n   \"muted-deciders\": [],\n   \"muted-actions\": [],\n \n+  // Default Values are added in the config specific file as well\n+  // Modify them as well whenever changing the default values (DeciderConfig.java)\n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    // Priority order in the list goes from most expected to the lease expected workload type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49821d3c6b1c255aedafa755e7d154ca2058e9dc"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3MDgxOA==", "bodyText": "same*", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/340#discussion_r471870818", "createdAt": "2020-08-18T02:03:56Z", "author": {"login": "sruti1312"}, "path": "pa_config/rca.conf", "diffHunk": "@@ -91,9 +91,21 @@\n   \"muted-deciders\": [],\n   \"muted-actions\": [],\n \n+  // Default Values are added in the config specific file as well\n+  // Modify them as well whenever changing the default values (DeciderConfig.java)\n   \"decider-config-settings\": {\n+    // Decreasing order of priority for the type of workload we can expect on the cluster.\n+    // Priority order in the list goes from most expected to the lease expected workload type.\n+    \"workload-type\": {\n+      \"priority-order\": [\"ingest\", \"search\"]\n+    },\n+    // Decreasing order of priority for the type of cache which is expected to be consumed more.\n+    // Priority order in the list goes from most used to the lease used cache type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49821d3c6b1c255aedafa755e7d154ca2058e9dc"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 859, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}