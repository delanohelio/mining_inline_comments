{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NjM2NTQz", "number": 103, "title": "Persist nested summaries only if the flowunit is emitted by the top level RCA of each node", "bodyText": "Issue #, if available:\nDescription of changes:\nAdd a \"persistSummary\" flag in flowunit so that only the flowunit emitted by the top level RCA can persist its summary. For data node, the top level RCA is HotNodeRca and for elected master, it is those cluster level RCAs.\nThis can help to fix two different issues :\nsummary will no longer be persisted multiple times.\n\nPreviously each RCA will persist its own summary and the inner most summary will be persisted by multiple flowunits.\nThe HotNodeSummary table on master can now can only be linked to HotClusterSummary. This is to avoid the HotNodeSummary table being created and linked to the HotNodeRca table first and causes the RCA API to fail.\n\nTests:\nAdded a unit test.\ntested on docker\nCode coverage percentage for this patch:\nn/a\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-02-13T02:25:28Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/103", "merged": true, "mergeCommit": {"oid": "6628ec465eb47fb8c47b951cdca8b2ed0add81df"}, "closed": true, "closedAt": "2020-02-13T21:42:11Z", "author": {"login": "rguo-aws"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDv_UKgH2gAyMzc0NjM2NTQzOmJhZTZmOTUxODNkODFjMGRkZTNhZGE1YmUzZjI5ZmU1ZGVhNjIzZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEB6q1AFqTM1ODU2ODE5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bae6f95183d81c0dde3ada5be3f29fe5dea623d9", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/bae6f95183d81c0dde3ada5be3f29fe5dea623d9", "committedDate": "2020-02-13T00:42:33Z", "message": "Persist nested summaries only if the flowunit is emitted by the top level RCA of each node"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97e76133e8e0fa3dd3fa46e023942e724fd6e02a", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/97e76133e8e0fa3dd3fa46e023942e724fd6e02a", "committedDate": "2020-02-13T02:19:55Z", "message": "Add an unit test to capture this summary persistence issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NTU3ODUx", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/103#pullrequestreview-358557851", "createdAt": "2020-02-13T21:18:34Z", "commit": {"oid": "97e76133e8e0fa3dd3fa46e023942e724fd6e02a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMToxODozNFrOFpj4fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMToxODozNFrOFpj4fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyMzgzNw==", "bodyText": "probably we want to remove this ? :)", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/103#discussion_r379123837", "createdAt": "2020-02-13T21:18:34Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistFlowUnitAndSummaryTest.java", "diffHunk": "@@ -0,0 +1,206 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.persistence;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.JvmEnum;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.NodeRole;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.GradleTaskForRca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.AnalysisGraph;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Metric;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Rca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Resources;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.contexts.ResourceContext;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.flow_units.ResourceFlowUnit;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.Heap_Used;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.HotResourceSummary;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.Queryable;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.ThresholdMain;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.RcaConsts;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.RcaConsts.RcaTagConstants;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.RcaUtil;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.net.WireHopper;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.scheduler.FlowUnitOperationArgWrapper;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.scheduler.RCAScheduler;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.spec.MetricsDBProviderTestHelper;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.HighHeapUsageClusterRca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.HotNodeRca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.reader.ClusterDetailsEventProcessorTestHelper;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+@Category(GradleTaskForRca.class)\n+@SuppressWarnings(\"serial\")\n+public class PersistFlowUnitAndSummaryTest {\n+  Queryable queryable;\n+\n+  static class DummyYoungGenRca extends Rca<ResourceFlowUnit> {\n+    public <M extends Metric> DummyYoungGenRca(M metric) {\n+      super(1);\n+    }\n+\n+    @Override\n+    public ResourceFlowUnit operate() {\n+      System.out.println(\"!!!!! ruizhen : scheduled \\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97e76133e8e0fa3dd3fa46e023942e724fd6e02a"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5f12eee27cbcdb97945fa767bec3cbee6e60109", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/c5f12eee27cbcdb97945fa767bec3cbee6e60109", "committedDate": "2020-02-13T21:24:25Z", "message": "remove debugging log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NTY4MTk3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/103#pullrequestreview-358568197", "createdAt": "2020-02-13T21:35:46Z", "commit": {"oid": "c5f12eee27cbcdb97945fa767bec3cbee6e60109"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1152, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}