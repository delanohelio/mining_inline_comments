{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MjA1MzE4", "number": 454, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxODo0Nzo1MlrOErUApA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxODo0Nzo1MlrOErUApA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzODUyMDY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/metrics_generator/linux/LinuxMountedPartitionMetricsGenerator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxODo0Nzo1MlrOHeBAOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMjoxNToyNlrOHeHZsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIzNTc3MA==", "bodyText": "This depends on MountedPartitions, but MountedPartitions also depends on LinuxMountedPartitionMetricsGenerator. Is this ok? Can't you move the sampling logic from MountedPartitions into the addSample() function here?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/454#discussion_r501235770", "createdAt": "2020-10-07T18:47:52Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/metrics_generator/linux/LinuxMountedPartitionMetricsGenerator.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics_generator.linux;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.collectors.MountedPartitionMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.hwnet.MountedPartitions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0a555ff7c7533eb464b71bf275523345d037d4a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0MDU5NA==", "bodyText": "So the generator calls addSample() in MountedPartitions class, where it updates its own map and sets it back in the generator. The idea is to have all logic related to profiling/measuring these metrics in one class separate from the generator. The other hardware metrics generators follow the same pattern as well. Didn't want to diverge as well.\n\nThe logic in here is good but does the ES process always have access to /proc/mounts? This collector may fail in certain ODFE distributions.\n\nIn the distros we support, /proc/mounts has 777 access. So reading them should be fine.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/454#discussion_r501340594", "createdAt": "2020-10-07T22:15:26Z", "author": {"login": "ktkrg"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/metrics_generator/linux/LinuxMountedPartitionMetricsGenerator.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics_generator.linux;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.collectors.MountedPartitionMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.hwnet.MountedPartitions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIzNTc3MA=="}, "originalCommit": {"oid": "e0a555ff7c7533eb464b71bf275523345d037d4a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2429, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}