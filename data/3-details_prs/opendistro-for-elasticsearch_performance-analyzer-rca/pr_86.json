{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDE5MDE4", "number": 86, "title": "handle SQL exception when persisting flowunit", "bodyText": "Issue #, if available:\nDescription of changes:\nThe current SQL table creation and insertion methods are not handling SQLException properly. This PR is raised to handle SQL exception if found. If the rca.sqlite file is damaged or accidentally deleted, RCA will try to create a new db file immediately and reconnect to this new DB.\nTests:\ntested on AES cluster.\nCode coverage percentage for this patch:\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-02-04T19:48:49Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/86", "merged": true, "mergeCommit": {"oid": "84f2becd646184537ebba8005e384c8f0de73218"}, "closed": true, "closedAt": "2020-02-06T18:08:58Z", "author": {"login": "rguo-aws"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBGNTXAH2gAyMzcxMDE5MDE4OjZiOGQwNzJhZmQyZGJkZWU0ZGYzOTRmNDFiZTQwYTAyNzU3NzI0ODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBu-CWAFqTM1NDY3MDg2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6b8d072afd2dbdee4df394f41be40a0275772487", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/6b8d072afd2dbdee4df394f41be40a0275772487", "committedDate": "2020-02-04T18:53:58Z", "message": "handle SQL exception when persisiting flowunit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjYxOTM5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/86#pullrequestreview-354661939", "createdAt": "2020-02-06T18:08:37Z", "commit": {"oid": "6b8d072afd2dbdee4df394f41be40a0275772487"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjcwODY1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/86#pullrequestreview-354670865", "createdAt": "2020-02-06T18:23:17Z", "commit": {"oid": "6b8d072afd2dbdee4df394f41be40a0275772487"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODoyMzoxN1rOFmldOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODoyMzoxN1rOFmldOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwMzg5Nw==", "bodyText": "we are opening a new file but we are not trying to write in the new file one more time. We are throwing away this flow unit here", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/86#discussion_r376003897", "createdAt": "2020-02-06T18:23:17Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistorBase.java", "diffHunk": "@@ -191,31 +191,48 @@ public synchronized void deleteOldDBFile()\n       LOG.error(\"RCA: Caught SecurityException while trying to delete old DB file. \", e);\n     }\n \n-    if (!tableNames.contains(tableName)) {\n-      LOG.info(\n-          \"RCA: Table '{}' does not exist. Creating one with columns: {}\",\n-          tableName,\n-          flowUnit.getSqlSchema());\n-      createTable(tableName, flowUnit.getSqlSchema());\n-      tableNames.add(tableName);\n+    try {\n+      writeFlowUnit(flowUnit, tableName);\n+    } catch (SQLException e) {\n+      LOG.error(\n+          \"RCA: Caught SQLException while writing flowuni.\", e);\n     }\n-    int lastPrimaryKey = insertRow(tableName, flowUnit.getSqlValue());\n+  }\n \n-    if (flowUnit.hasResourceSummary()) {\n-      write(\n-          flowUnit.getResourceSummary(),\n-          tableName,\n-          getPrimaryKeyColumnName(tableName),\n-          lastPrimaryKey);\n+  private synchronized <T extends ResourceFlowUnit> void writeFlowUnit(\n+      T flowUnit, String tableName) throws SQLException {\n+    try {\n+      if (!tableNames.contains(tableName)) {\n+        LOG.info(\n+            \"RCA: Table '{}' does not exist. Creating one with columns: {}\",\n+            tableName,\n+            flowUnit.getSqlSchema());\n+        createTable(tableName, flowUnit.getSqlSchema());\n+        tableNames.add(tableName);\n+      }\n+      int lastPrimaryKey = insertRow(tableName, flowUnit.getSqlValue());\n+\n+      if (flowUnit.hasResourceSummary()) {\n+        writeSummary(\n+            flowUnit.getResourceSummary(),\n+            tableName,\n+            getPrimaryKeyColumnName(tableName),\n+            lastPrimaryKey);\n+      }\n+    } catch (SQLException e) {\n+      LOG.info(\n+          \"RCA: Fail to write into table '{}', try recreating the DB\", tableName);\n+      openNewDBFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b8d072afd2dbdee4df394f41be40a0275772487"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1137, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}