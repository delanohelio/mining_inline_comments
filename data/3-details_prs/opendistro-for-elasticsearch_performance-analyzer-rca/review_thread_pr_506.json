{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMzc0MTgz", "number": 506, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMTo0NToyNFrOE0oWbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMTo0NToyNFrOE0oWbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjIyNTEwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMTo0NToyNFrOHsdyBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMjozMzoyMlrOHtC2oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4NzMzMg==", "bodyText": "This fixes this issue but we can run into such inconsistencies where changes may not reflect until a scheduler restart. Can the scheduler use a reference of the AppContext of RcaController instead of a copy ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/506#discussion_r516387332", "createdAt": "2020-11-03T01:45:24Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -410,7 +409,15 @@ private boolean updateMutedComponents() {\n \n       LOG.info(\"Updating the muted graph nodes to : {}\", graphNodesForMute);\n       Stats.getInstance().updateMutedGraphNodes(graphNodesForMute);\n+      // We need to update muted actions in two places. One is in the controller which could\n+      // potentially serve as a snapshot when creating a new rca scheduler, and the other place\n+      // is in the rca scheduler itself. The scheduler maintains a snapshot of the appcontext(see\n+      // the comment above near scheduler instantiation) that it uses to determine staleness. It\n+      // also happens to be the appcontext that will be passed to the graph nodes.\n       appContext.updateMutedActions(actionsForMute);\n+      if (rcaScheduler != null) {\n+        rcaScheduler.updateAppContextWithMutedActions(actionsForMute);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59497d70b36fc56e85a6e91d20294fde705bacd0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4OTkwNg==", "bodyText": "That was my first thought as well. But I saw this comment on L215 and decided to go this way.\n\n// RcaScheduler should be started with a snapshot of the AppContext as RcaController\n// monitors it for stale state and always restarts the scheduler if it finds its state\n// stale.\n\nI think you have the best context regarding AppContext usage, if this comment is stale, then I can go ahead and use the same AppContext reference in both the controller and the scheduler.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/506#discussion_r516389906", "createdAt": "2020-11-03T01:55:59Z", "author": {"login": "ktkrg"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -410,7 +409,15 @@ private boolean updateMutedComponents() {\n \n       LOG.info(\"Updating the muted graph nodes to : {}\", graphNodesForMute);\n       Stats.getInstance().updateMutedGraphNodes(graphNodesForMute);\n+      // We need to update muted actions in two places. One is in the controller which could\n+      // potentially serve as a snapshot when creating a new rca scheduler, and the other place\n+      // is in the rca scheduler itself. The scheduler maintains a snapshot of the appcontext(see\n+      // the comment above near scheduler instantiation) that it uses to determine staleness. It\n+      // also happens to be the appcontext that will be passed to the graph nodes.\n       appContext.updateMutedActions(actionsForMute);\n+      if (rcaScheduler != null) {\n+        rcaScheduler.updateAppContextWithMutedActions(actionsForMute);\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4NzMzMg=="}, "originalCommit": {"oid": "59497d70b36fc56e85a6e91d20294fde705bacd0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5NDcyMA==", "bodyText": "We will have to handle the case of changed role for the RCAScheduler. we can do the cleanup for a follow up PR. This is a bug fix, so I won't block this on the proper fix.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/506#discussion_r516994720", "createdAt": "2020-11-03T22:33:22Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -410,7 +409,15 @@ private boolean updateMutedComponents() {\n \n       LOG.info(\"Updating the muted graph nodes to : {}\", graphNodesForMute);\n       Stats.getInstance().updateMutedGraphNodes(graphNodesForMute);\n+      // We need to update muted actions in two places. One is in the controller which could\n+      // potentially serve as a snapshot when creating a new rca scheduler, and the other place\n+      // is in the rca scheduler itself. The scheduler maintains a snapshot of the appcontext(see\n+      // the comment above near scheduler instantiation) that it uses to determine staleness. It\n+      // also happens to be the appcontext that will be passed to the graph nodes.\n       appContext.updateMutedActions(actionsForMute);\n+      if (rcaScheduler != null) {\n+        rcaScheduler.updateAppContextWithMutedActions(actionsForMute);\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4NzMzMg=="}, "originalCommit": {"oid": "59497d70b36fc56e85a6e91d20294fde705bacd0"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2269, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}