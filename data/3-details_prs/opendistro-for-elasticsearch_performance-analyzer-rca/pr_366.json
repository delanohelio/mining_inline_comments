{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MDE1ODA1", "number": 366, "title": "Add config value to node config cache", "bodyText": "Description of changes:\nPopulate the node config cache in non-master nodes.\nThese values will be used by rca's.\nTests:\nunit test.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-08-12T21:24:15Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/366", "merged": true, "mergeCommit": {"oid": "cff5eef95f0d19765e872349e980ff9ecb68de5a"}, "closed": true, "closedAt": "2020-08-13T21:41:37Z", "author": {"login": "sruti1312"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-SM0ogH2gAyNDY3MDE1ODA1OjMwNGIzMmM3NDMxYWI0YmNhMDUyMWNkYjdmYTVjZmU3NDcwOWY2NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-mIiJAH2gAyNDY3MDE1ODA1OmIzOTVlZWI4ODdmZDM0YzczMjQ3NmQwYmVmM2FiZjdkOWFiZDI0Yjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "304b32c7431ab4bca0521cdb7fa5cfe74709f645", "author": {"user": {"login": "sruti1312", "name": "Sruti Parthiban"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/304b32c7431ab4bca0521cdb7fa5cfe74709f645", "committedDate": "2020-08-12T21:21:41Z", "message": "Add config value to node config cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2Mjk1NjIx", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/366#pullrequestreview-466295621", "createdAt": "2020-08-12T21:38:19Z", "commit": {"oid": "304b32c7431ab4bca0521cdb7fa5cfe74709f645"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMTozODoyMFrOG_zxgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMTo0NDowN1rOG_z7Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTczMA==", "bodyText": "let's read node key from getInstanceDetails instead of hardcoding it", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/366#discussion_r469561730", "createdAt": "2020-08-12T21:38:20Z", "author": {"login": "rguo-aws"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/store/collector/NodeConfigCollectorTest.java", "diffHunk": "@@ -53,12 +56,14 @@ public void init() {\n     cacheMaxSize = new Cache_Max_Size(5);\n     heapMax = new Heap_Max(5);\n     nodeConfigCollector = new NodeConfigCollector(1, threadPool_QueueCapacity, cacheMaxSize, heapMax);\n+    nodeKey = new NodeKey(new InstanceDetails.Id(\"node1\"), new InstanceDetails.Ip(\"127.0.0.0\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304b32c7431ab4bca0521cdb7fa5cfe74709f645"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2Mzg0OQ==", "bodyText": "can we update the cache once the metric is received from flowunit ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/366#discussion_r469563849", "createdAt": "2020-08-12T21:43:05Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "diffHunk": "@@ -141,6 +146,8 @@ public NodeConfigFlowUnit operate() {\n       }\n       collectHeapMaxSize(flowUnit);\n     }\n+\n+    addConfigToNodeCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304b32c7431ab4bca0521cdb7fa5cfe74709f645"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2NDI2Mg==", "bodyText": "let us also take this opportunity to remove configResult hashmap from this collector. there is no need to store configs into both node config cache / hashmap", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/366#discussion_r469564262", "createdAt": "2020-08-12T21:44:07Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "diffHunk": "@@ -141,6 +146,8 @@ public NodeConfigFlowUnit operate() {\n       }\n       collectHeapMaxSize(flowUnit);\n     }\n+\n+    addConfigToNodeCache();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2Mzg0OQ=="}, "originalCommit": {"oid": "304b32c7431ab4bca0521cdb7fa5cfe74709f645"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76fc092956a29f06994d33c130aa3d34af769324", "author": {"user": {"login": "sruti1312", "name": "Sruti Parthiban"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/76fc092956a29f06994d33c130aa3d34af769324", "committedDate": "2020-08-13T01:55:49Z", "message": "Refresh config map after publish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7aeb51ca044abe0a08db6d2a41d2f2aa4696d80b", "author": {"user": {"login": "sruti1312", "name": "Sruti Parthiban"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/7aeb51ca044abe0a08db6d2a41d2f2aa4696d80b", "committedDate": "2020-08-13T02:13:58Z", "message": "Refactor accessing instance details"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MDM5NDMw", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/366#pullrequestreview-467039430", "createdAt": "2020-08-13T18:48:02Z", "commit": {"oid": "7aeb51ca044abe0a08db6d2a41d2f2aa4696d80b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODo0ODowM1rOHAZBiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODo0ODowM1rOHAZBiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE3MjA0Mw==", "bodyText": "can move this inside the if block.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/366#discussion_r470172043", "createdAt": "2020-08-13T18:48:03Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "diffHunk": "@@ -65,52 +64,40 @@ public NodeConfigCollector(int rcaPeriod,\n   }\n \n   private void collectQueueCapacity(MetricFlowUnit flowUnit) {\n-    double writeQueueCapacity = SQLParsingUtil.readDataFromSqlResult(flowUnit.getData(),\n+    final double writeQueueCapacity = SQLParsingUtil.readDataFromSqlResult(flowUnit.getData(),\n         THREAD_POOL_TYPE.getField(), ThreadPoolType.WRITE.toString(), MetricsDB.MAX);\n-    if (!Double.isNaN(writeQueueCapacity)) {\n-      configResult.put(ResourceUtil.WRITE_QUEUE_CAPACITY, writeQueueCapacity);\n-    }\n-    else {\n-      LOG.error(\"write queue capacity is NaN\");\n-    }\n-    double searchQueueCapacity = SQLParsingUtil.readDataFromSqlResult(flowUnit.getData(),\n+    collectAndPublishMetric(ResourceUtil.WRITE_QUEUE_CAPACITY, writeQueueCapacity);\n+\n+    final double searchQueueCapacity = SQLParsingUtil.readDataFromSqlResult(flowUnit.getData(),\n         THREAD_POOL_TYPE.getField(), ThreadPoolType.SEARCH.toString(), MetricsDB.MAX);\n-    if (!Double.isNaN(searchQueueCapacity)) {\n-      configResult.put(ResourceUtil.SEARCH_QUEUE_CAPACITY, searchQueueCapacity);\n-    }\n-    else {\n-      LOG.error(\"search queue capacity is NaN\");\n-    }\n+    collectAndPublishMetric(ResourceUtil.SEARCH_QUEUE_CAPACITY, searchQueueCapacity);\n   }\n \n   private void collectCacheMaxSize(MetricFlowUnit cacheMaxSize) {\n-    double fieldDataCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+    final double fieldDataCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n             CACHE_TYPE.getField(), CacheType.FIELD_DATA_CACHE.toString(), MetricsDB.MAX);\n-    if (!Double.isNaN(fieldDataCacheMaxSize)) {\n-      configResult.put(ResourceUtil.FIELD_DATA_CACHE_MAX_SIZE, fieldDataCacheMaxSize);\n-    }\n-    else {\n-      LOG.error(\"Field Data cache max size is NaN\");\n-    }\n+    collectAndPublishMetric(ResourceUtil.FIELD_DATA_CACHE_MAX_SIZE, fieldDataCacheMaxSize);\n \n-    double shardRequestCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+    final double shardRequestCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n             CACHE_TYPE.getField(), CacheType.SHARD_REQUEST_CACHE.toString(), MetricsDB.MAX);\n-    if (!Double.isNaN(shardRequestCacheMaxSize)) {\n-      configResult.put(ResourceUtil.SHARD_REQUEST_CACHE_MAX_SIZE, shardRequestCacheMaxSize);\n-    }\n-    else {\n-      LOG.error(\"Shard Request cache max size is NaN\");\n-    }\n+    collectAndPublishMetric(ResourceUtil.SHARD_REQUEST_CACHE_MAX_SIZE, shardRequestCacheMaxSize);\n   }\n \n   private void collectHeapMaxSize(MetricFlowUnit heapMax) {\n-    double heapMaxSize = SQLParsingUtil.readDataFromSqlResult(heapMax.getData(),\n+    final double heapMaxSize = SQLParsingUtil.readDataFromSqlResult(heapMax.getData(),\n             MEM_TYPE.getField(), AllMetrics.GCType.HEAP.toString(), MetricsDB.MAX);\n-    if (!Double.isNaN(heapMaxSize)) {\n-      configResult.put(ResourceUtil.HEAP_MAX_SIZE, heapMaxSize);\n+    collectAndPublishMetric(ResourceUtil.HEAP_MAX_SIZE, heapMaxSize);\n+  }\n+\n+  private void collectAndPublishMetric(final Resource resource, final double metricValue) {\n+    final NodeConfigCache nodeConfigCache = getAppContext().getNodeConfigCache();\n+    final NodeKey esNode = new NodeKey(getAppContext().getMyInstanceDetails());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aeb51ca044abe0a08db6d2a41d2f2aa4696d80b"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MDUxNDg0", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/366#pullrequestreview-467051484", "createdAt": "2020-08-13T19:04:03Z", "commit": {"oid": "7aeb51ca044abe0a08db6d2a41d2f2aa4696d80b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b395eeb887fd34c732476d0bef3abf7d9abd24b7", "author": {"user": {"login": "sruti1312", "name": "Sruti Parthiban"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/b395eeb887fd34c732476d0bef3abf7d9abd24b7", "committedDate": "2020-08-13T20:35:06Z", "message": "Address PR comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 871, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}