{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMzAxMTI0", "number": 495, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMToxNzoyNVrOEyF1Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxNTowOFrOEydkDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTU5ODI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/aggregators/PersistableSlidingWindow.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMToxNzoyNVrOHoiufQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMzo1MDo0M1rOHomgCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3NDA0NQ==", "bodyText": "As no file exists in this path, will this be more of a warning logger level?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/495#discussion_r512274045", "createdAt": "2020-10-26T21:17:25Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/aggregators/PersistableSlidingWindow.java", "diffHunk": "@@ -72,6 +72,10 @@ protected synchronized void load(Path path) throws IOException {\n     if (!enablePersistence) {\n       return;\n     }\n+    if (!Files.exists(path)) {\n+      LOG.debug(\"{}#load({}) called but the file doesn't exist\", this.getClass().getSimpleName(), path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aacb99d2f369cde699af36a4272e80f75401a65"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMzNTg4MQ==", "bodyText": "I moved the validation responsibility to the caller and deleted this conditional. The ITs still pass.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/495#discussion_r512335881", "createdAt": "2020-10-26T23:50:43Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/aggregators/PersistableSlidingWindow.java", "diffHunk": "@@ -72,6 +72,10 @@ protected synchronized void load(Path path) throws IOException {\n     if (!enablePersistence) {\n       return;\n     }\n+    if (!Files.exists(path)) {\n+      LOG.debug(\"{}#load({}) called but the file doesn't exist\", this.getClass().getSimpleName(), path);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3NDA0NQ=="}, "originalCommit": {"oid": "7aacb99d2f369cde699af36a4272e80f75401a65"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQ4NjIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/aggregators/PersistableSlidingWindow.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxNTowOFrOHpHhUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzo1NzoxNlrOHpJjtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3Njg4Mw==", "bodyText": "Can we add a log message when enablePersistence is not set or when file does not exist in the path? Even debug level log would be great.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/495#discussion_r512876883", "createdAt": "2020-10-27T17:15:08Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/aggregators/PersistableSlidingWindow.java", "diffHunk": "@@ -49,17 +49,15 @@ public PersistableSlidingWindow(int slidingWindowSize,\n                                   Path filePath) {\n     super(slidingWindowSize, timeUnit);\n     this.pathToFile = filePath;\n-    if (this.pathToFile == null) {\n-      this.enablePersistence = false;\n-    } else {\n-      this.enablePersistence = true;\n-      // setting the last write time to now will cause our first write to occur 5 minutes after construction\n-      this.lastWriteTimeEpochMs = Instant.now().toEpochMilli();\n-      try {\n+    this.enablePersistence = this.pathToFile != null;\n+    // setting the last write time to now will cause our first write to occur 5 minutes after construction\n+    this.lastWriteTimeEpochMs = Instant.now().toEpochMilli();\n+    try {\n+      if (enablePersistence && Files.exists(filePath)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed0ab850cf3005e8e92e33e485d375550cc877e7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxMDI2Mg==", "bodyText": "Added more logging in the most recent commit", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/495#discussion_r512910262", "createdAt": "2020-10-27T17:57:16Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/aggregators/PersistableSlidingWindow.java", "diffHunk": "@@ -49,17 +49,15 @@ public PersistableSlidingWindow(int slidingWindowSize,\n                                   Path filePath) {\n     super(slidingWindowSize, timeUnit);\n     this.pathToFile = filePath;\n-    if (this.pathToFile == null) {\n-      this.enablePersistence = false;\n-    } else {\n-      this.enablePersistence = true;\n-      // setting the last write time to now will cause our first write to occur 5 minutes after construction\n-      this.lastWriteTimeEpochMs = Instant.now().toEpochMilli();\n-      try {\n+    this.enablePersistence = this.pathToFile != null;\n+    // setting the last write time to now will cause our first write to occur 5 minutes after construction\n+    this.lastWriteTimeEpochMs = Instant.now().toEpochMilli();\n+    try {\n+      if (enablePersistence && Files.exists(filePath)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3Njg4Mw=="}, "originalCommit": {"oid": "ed0ab850cf3005e8e92e33e485d375550cc877e7"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2257, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}