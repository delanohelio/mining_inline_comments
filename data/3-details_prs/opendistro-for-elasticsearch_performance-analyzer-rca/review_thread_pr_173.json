{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTQ0Njk4", "number": 173, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDo1MzozNFrOD3zB5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjozNDo1OVrOD302XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODM0MzQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDo1MzozNFrOGOQkrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMTowODoxMlrOGORDVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYwNDc4MQ==", "bodyText": "In what case can this be null ? This shouldn't ever be null. RCA system depends on this config. Scheduler etc. cannot even start when this is null.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/173#discussion_r417604781", "createdAt": "2020-04-29T20:53:34Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -276,6 +276,11 @@ private void readRcaEnabledFromConf() {\n    * <p>In case all the RCAs in param value are incorrect, return without any update.\n    */\n   private void readAndUpdateMutesRcas() {\n+    if (rcaConf == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5074d68e0ad2b119055f4e9645ef4d4bb665e210"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYxMjYzMA==", "bodyText": "The rca config is initialized in the start() as part of updateRcaState() invocation.\nThe readAndUpdateMutesRcas() is invoked from readRcaEnabledFromConf(), which happens before the updateRcaState()call, thus leading to NPE.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/173#discussion_r417612630", "createdAt": "2020-04-29T21:08:12Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -276,6 +276,11 @@ private void readRcaEnabledFromConf() {\n    * <p>In case all the RCAs in param value are incorrect, return without any update.\n    */\n   private void readAndUpdateMutesRcas() {\n+    if (rcaConf == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYwNDc4MQ=="}, "originalCommit": {"oid": "5074d68e0ad2b119055f4e9645ef4d4bb665e210"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODM5NTc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMTowOToyMFrOGORFxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMTowOToyMFrOGORFxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYxMzI1Mg==", "bodyText": "This call has to be before updateRcaState as updateRcaState starts the scheduler. The scheduler is started, then it might start its run anytime. Therefore, in theory, it might execute the muted RCA node before coming around to it. Therefore, my suggestion, is move this call before updateRcaState this will also require adjusting the call to rcaConf = RcaControllerHelper.pickRcaConfForRole(currentRole);", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/173#discussion_r417613252", "createdAt": "2020-04-29T21:09:20Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -225,6 +225,12 @@ public void run() {\n         }\n         updateRcaState();\n \n+        // If RCA is enabled, update Analysis graph with Muted RCAs value\n+        if (rcaEnabled) {\n+          LOG.debug(\"Updating Analysis Graph with Muted RCAs\");\n+          readAndUpdateMutesRcas();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5074d68e0ad2b119055f4e9645ef4d4bb665e210"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODY0MTU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjozNDo1OVrOGOTdyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjozNDo1OVrOGOTdyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1MjE3MQ==", "bodyText": "You might want to emit a metric here. If we really expect never for this to happen, then we should emit a domain level metric and add it to the dashboard.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/173#discussion_r417652171", "createdAt": "2020-04-29T22:34:59Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -297,11 +297,11 @@ private void readAndUpdateMutesRcas() {\n \n         LOG.info(\"Updating the muted RCA Graph to : {}\", rcasForMute);\n         Stats.getInstance().updateMutedGraphNodes(rcasForMute);\n-      } catch (Exception e) {\n-        LOG.error(\"Couldn't read/update the muted RCAs.\", e);\n       }\n+      lastModifiedTimeInMillisInMemory = lastModifiedTimeInMillisOnDisk;\n+    } catch (Exception e) {\n+        LOG.error(\"Couldn't read/update the muted RCAs.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4915daec8bb43a0ed06a75fe220e059a8f35283"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2628, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}