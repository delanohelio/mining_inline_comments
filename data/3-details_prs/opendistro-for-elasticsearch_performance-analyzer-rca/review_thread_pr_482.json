{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NjE5Njk4", "number": 482, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowOToxMFrOEv5EyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzoxMDowMVrOEv5GaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjUzNjQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowOToxMFrOHlIebg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzoyMDo1M1rOHlI8qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODIyMg==", "bodyText": "nit: unnecessary", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508698222", "createdAt": "2020-10-20T17:09:10Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -125,22 +126,27 @@ public void construct() {\n     Metric gcEvent = new GC_Collection_Event(EVALUATION_INTERVAL_SECONDS);\n     Heap_Max heapMax = new Heap_Max(EVALUATION_INTERVAL_SECONDS);\n     Metric gc_Collection_Time = new GC_Collection_Time(EVALUATION_INTERVAL_SECONDS);\n+    Metric gcType = new GC_Type(EVALUATION_INTERVAL_SECONDS);\n     Metric cpuUtilizationGroupByOperation = new AggregateMetric(1, CPU_Utilization.NAME,\n             AggregateFunction.SUM,\n             MetricsDB.AVG, CommonDimension.OPERATION.toString());\n \n     heapUsed.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     gcEvent.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    gcType.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     heapMax.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     gc_Collection_Time.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     cpuUtilizationGroupByOperation.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcwNTk2MA==", "bodyText": "removed", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508705960", "createdAt": "2020-10-20T17:20:53Z", "author": {"login": "ktkrg"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -125,22 +126,27 @@ public void construct() {\n     Metric gcEvent = new GC_Collection_Event(EVALUATION_INTERVAL_SECONDS);\n     Heap_Max heapMax = new Heap_Max(EVALUATION_INTERVAL_SECONDS);\n     Metric gc_Collection_Time = new GC_Collection_Time(EVALUATION_INTERVAL_SECONDS);\n+    Metric gcType = new GC_Type(EVALUATION_INTERVAL_SECONDS);\n     Metric cpuUtilizationGroupByOperation = new AggregateMetric(1, CPU_Utilization.NAME,\n             AggregateFunction.SUM,\n             MetricsDB.AVG, CommonDimension.OPERATION.toString());\n \n     heapUsed.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     gcEvent.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    gcType.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     heapMax.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     gc_Collection_Time.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     cpuUtilizationGroupByOperation.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODIyMg=="}, "originalCommit": {"oid": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjUzNjk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowOToxNVrOHlIesg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowOToxNVrOHlIesg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODI5MA==", "bodyText": "nit: unnecessary", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508698290", "createdAt": "2020-10-20T17:09:15Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -125,22 +126,27 @@ public void construct() {\n     Metric gcEvent = new GC_Collection_Event(EVALUATION_INTERVAL_SECONDS);\n     Heap_Max heapMax = new Heap_Max(EVALUATION_INTERVAL_SECONDS);\n     Metric gc_Collection_Time = new GC_Collection_Time(EVALUATION_INTERVAL_SECONDS);\n+    Metric gcType = new GC_Type(EVALUATION_INTERVAL_SECONDS);\n     Metric cpuUtilizationGroupByOperation = new AggregateMetric(1, CPU_Utilization.NAME,\n             AggregateFunction.SUM,\n             MetricsDB.AVG, CommonDimension.OPERATION.toString());\n \n     heapUsed.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     gcEvent.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    gcType.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     heapMax.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     gc_Collection_Time.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     cpuUtilizationGroupByOperation.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n \n+\n     addLeaf(heapUsed);\n     addLeaf(gcEvent);\n+    addLeaf(gcType);\n     addLeaf(heapMax);\n     addLeaf(gc_Collection_Time);\n     addLeaf(cpuUtilizationGroupByOperation);\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjUzODgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowOTo0MlrOHlIf2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzoyMDoyN1rOHlI7mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODU4Nw==", "bodyText": "Add gcType as an upstream", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508698587", "createdAt": "2020-10-20T17:09:42Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -176,12 +182,13 @@ public void construct() {\n     hotNodeClusterRca.addTag(TAG_LOCUS, LOCUS_MASTER_NODE);\n     hotNodeClusterRca.addAllUpstreams(Collections.singletonList(hotJVMNodeRca));\n \n-    final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax, heapUsed);\n+    final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax,\n+        heapUsed, gcType);\n     oldGenOccupancyRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     oldGenOccupancyRca.addAllUpstreams(Arrays.asList(heapMax, heapUsed));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcwNTY4OA==", "bodyText": "good catch! Added.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508705688", "createdAt": "2020-10-20T17:20:27Z", "author": {"login": "ktkrg"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -176,12 +182,13 @@ public void construct() {\n     hotNodeClusterRca.addTag(TAG_LOCUS, LOCUS_MASTER_NODE);\n     hotNodeClusterRca.addAllUpstreams(Collections.singletonList(hotJVMNodeRca));\n \n-    final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax, heapUsed);\n+    final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax,\n+        heapUsed, gcType);\n     oldGenOccupancyRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     oldGenOccupancyRca.addAllUpstreams(Arrays.asList(heapMax, heapUsed));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODU4Nw=="}, "originalCommit": {"oid": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjU0MDU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzoxMDowMVrOHlIgxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzoxMDowMVrOHlIgxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODgyMw==", "bodyText": "Add gcType as an upstream", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508698823", "createdAt": "2020-10-20T17:10:01Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -176,12 +182,13 @@ public void construct() {\n     hotNodeClusterRca.addTag(TAG_LOCUS, LOCUS_MASTER_NODE);\n     hotNodeClusterRca.addAllUpstreams(Collections.singletonList(hotJVMNodeRca));\n \n-    final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax, heapUsed);\n+    final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax,\n+        heapUsed, gcType);\n     oldGenOccupancyRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     oldGenOccupancyRca.addAllUpstreams(Arrays.asList(heapMax, heapUsed));\n \n     final OldGenReclamationRca oldGenReclamationRca = new OldGenReclamationRca(heapUsed,\n-        heapMax, gcEvent);\n+        heapMax, gcEvent, gcType);\n     oldGenReclamationRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     oldGenReclamationRca.addAllUpstreams(Arrays.asList(heapUsed, heapMax, gcEvent));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2249, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}