{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODg5NzU5", "number": 125, "title": "Create a base class RCA ResourceResourceRca as a generic resource type RCA. Add HighCpuRca to collect total cpu usage", "bodyText": "Issue #, if available:\nDescription of changes:\nThe GenericResourceRca is a base type RCA class which collect aggregated metric from a certain resource type and calculated its averaged sum by using a sliding window.\nThe HighCpuRca derives from the TotalResourceRca to calculate the cpu usage of its node and list the top k consumers.\nAdd a unit test for this rca class\nTests:\ntested on dev stack\nCode coverage percentage for this patch:\n82%\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-03-10T01:18:59Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/125", "merged": true, "mergeCommit": {"oid": "bb0102872ada09fdf92d55df802a783e9401216a"}, "closed": true, "closedAt": "2020-03-31T01:27:06Z", "author": {"login": "rguo-aws"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMH5dOAH2gAyMzg1ODg5NzU5OjgwOWMwNGI4NjRjYWMyNGEyMTZjMzkzNDkzY2ExMjdmMGY3MzhkOTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcS4y4rgFqTM4NDM0MjgwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "809c04b864cac24a216c393493ca127f0f738d93", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/809c04b864cac24a216c393493ca127f0f738d93", "committedDate": "2020-03-10T01:05:16Z", "message": "Add GenericResourceRca and HighCpuRca"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0edfe076241a9f667f8b82bd6a27de5023b36a8", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e0edfe076241a9f667f8b82bd6a27de5023b36a8", "committedDate": "2020-03-10T01:14:39Z", "message": "fix check style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NjgwNTY5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/125#pullrequestreview-378680569", "createdAt": "2020-03-20T17:30:28Z", "commit": {"oid": "e0edfe076241a9f667f8b82bd6a27de5023b36a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNzozMDoyOVrOF5dAgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNzozMDoyOVrOF5dAgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4ODQxOA==", "bodyText": "Can we make this final so that its threadsafe?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/125#discussion_r395788418", "createdAt": "2020-03-20T17:30:29Z", "author": {"login": "ditac"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/hot_node/GenericResourceRca.java", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.hot_node;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Metric;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Rca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Resources;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.aggregators.SlidingWindow;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.aggregators.SlidingWindowData;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.contexts.ResourceContext;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.flow_units.MetricFlowUnit;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.flow_units.ResourceFlowUnit;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.HotResourceSummary;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.TopConsumerSummary;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.scheduler.FlowUnitOperationArgWrapper;\n+import java.time.Clock;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jooq.Record;\n+import org.jooq.Result;\n+import org.jooq.exception.DataTypeException;\n+\n+/**\n+ * Generic resource type RCA. ideally this RCA can be extended to any resource type\n+ * and calculate the total resource usage & top consumers.\n+ */\n+public class GenericResourceRca extends Rca<ResourceFlowUnit> {\n+\n+  private static final Logger LOG = LogManager.getLogger(GenericResourceRca.class);\n+  private static final int SLIDING_WINDOW_IN_MIN = 10;\n+  private static final int DEFAULT_TOP_K = 3;\n+  private static final double DEFAULT_LOWER_BOUND_THRESHOLD = 0.0;\n+  private final SlidingWindow<SlidingWindowData> slidingWindow;\n+  private final Metric resourceUsageGroupByConsumer;\n+  private final int rcaPeriod;\n+  private int counter;\n+  private final ResourceType resourceType;\n+  private double threshold;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0edfe076241a9f667f8b82bd6a27de5023b36a8"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b580c6e3cd07ac2447bd535d63ed15cfa6da567", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/5b580c6e3cd07ac2447bd535d63ed15cfa6da567", "committedDate": "2020-03-23T19:42:11Z", "message": "make GenericResourceRca thread safe"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MzQyODA0", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/125#pullrequestreview-384342804", "createdAt": "2020-03-31T01:26:59Z", "commit": {"oid": "5b580c6e3cd07ac2447bd535d63ed15cfa6da567"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1177, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}