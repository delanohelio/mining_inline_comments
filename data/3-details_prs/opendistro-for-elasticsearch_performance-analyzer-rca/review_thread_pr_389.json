{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNTY2ODI3", "number": 389, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjozOTo1NVrOEaV8dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNzoxMzoyOFrOEaoZIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDU3OTc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerApp.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjozOTo1NVrOHDtjeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo0MjoxNFrOHE8yMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY1NDEzOA==", "bodyText": "Does the process also exit with error at this point or is it just stalled? We should exit with error.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/389#discussion_r473654138", "createdAt": "2020-08-20T06:39:55Z", "author": {"login": "vigyasharma"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerApp.java", "diffHunk": "@@ -107,21 +107,26 @@ public static void main(String[] args) {\n         (MetricsConfiguration.CONFIG_MAP.get(StatsCollector.class).samplingInterval) / 2,\n         TimeUnit.MILLISECONDS);\n     PluginSettings settings = PluginSettings.instance();\n-    StatsCollector.STATS_TYPE = \"agent-stats-metadata\";\n-    METRIC_COLLECTOR_EXECUTOR.addScheduledMetricCollector(StatsCollector.instance());\n-    StatsCollector.instance().addDefaultExceptionCode(StatExceptionCode.READER_RESTART_PROCESSING);\n-    METRIC_COLLECTOR_EXECUTOR.setEnabled(true);\n-    METRIC_COLLECTOR_EXECUTOR.start();\n-\n-    final GRPCConnectionManager connectionManager = new GRPCConnectionManager(\n-        settings.getHttpsEnabled());\n-    final ClientServers clientServers = createClientServers(connectionManager, appContext);\n-    startErrorHandlingThread(THREAD_PROVIDER, exceptionQueue);\n-\n-    startReaderThread(appContext, THREAD_PROVIDER);\n-    startGrpcServerThread(clientServers.getNetServer(), THREAD_PROVIDER);\n-    startWebServerThread(clientServers.getHttpServer(), THREAD_PROVIDER);\n-    startRcaTopLevelThread(clientServers, connectionManager, appContext, THREAD_PROVIDER);\n+    if (ConfigStatus.INSTANCE.haveValidConfig()) {\n+      StatsCollector.STATS_TYPE = \"agent-stats-metadata\";\n+      METRIC_COLLECTOR_EXECUTOR.addScheduledMetricCollector(StatsCollector.instance());\n+      StatsCollector.instance()\n+          .addDefaultExceptionCode(StatExceptionCode.READER_RESTART_PROCESSING);\n+      METRIC_COLLECTOR_EXECUTOR.setEnabled(true);\n+      METRIC_COLLECTOR_EXECUTOR.start();\n+\n+      final GRPCConnectionManager connectionManager =\n+          new GRPCConnectionManager(settings.getHttpsEnabled());\n+      final ClientServers clientServers = createClientServers(connectionManager, appContext);\n+      startErrorHandlingThread(THREAD_PROVIDER, exceptionQueue);\n+\n+      startReaderThread(appContext, THREAD_PROVIDER);\n+      startGrpcServerThread(clientServers.getNetServer(), THREAD_PROVIDER);\n+      startWebServerThread(clientServers.getHttpServer(), THREAD_PROVIDER);\n+      startRcaTopLevelThread(clientServers, connectionManager, appContext, THREAD_PROVIDER);\n+    } else {\n+      LOG.error(\"Performance analyzer app stopped due to invalid config status.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f20fd778a53626f6436eebf801a50641f67f2af"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1MjI0Mw==", "bodyText": "PerformanceAnalyzerApp exists with error.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/389#discussion_r474952243", "createdAt": "2020-08-21T20:42:14Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerApp.java", "diffHunk": "@@ -107,21 +107,26 @@ public static void main(String[] args) {\n         (MetricsConfiguration.CONFIG_MAP.get(StatsCollector.class).samplingInterval) / 2,\n         TimeUnit.MILLISECONDS);\n     PluginSettings settings = PluginSettings.instance();\n-    StatsCollector.STATS_TYPE = \"agent-stats-metadata\";\n-    METRIC_COLLECTOR_EXECUTOR.addScheduledMetricCollector(StatsCollector.instance());\n-    StatsCollector.instance().addDefaultExceptionCode(StatExceptionCode.READER_RESTART_PROCESSING);\n-    METRIC_COLLECTOR_EXECUTOR.setEnabled(true);\n-    METRIC_COLLECTOR_EXECUTOR.start();\n-\n-    final GRPCConnectionManager connectionManager = new GRPCConnectionManager(\n-        settings.getHttpsEnabled());\n-    final ClientServers clientServers = createClientServers(connectionManager, appContext);\n-    startErrorHandlingThread(THREAD_PROVIDER, exceptionQueue);\n-\n-    startReaderThread(appContext, THREAD_PROVIDER);\n-    startGrpcServerThread(clientServers.getNetServer(), THREAD_PROVIDER);\n-    startWebServerThread(clientServers.getHttpServer(), THREAD_PROVIDER);\n-    startRcaTopLevelThread(clientServers, connectionManager, appContext, THREAD_PROVIDER);\n+    if (ConfigStatus.INSTANCE.haveValidConfig()) {\n+      StatsCollector.STATS_TYPE = \"agent-stats-metadata\";\n+      METRIC_COLLECTOR_EXECUTOR.addScheduledMetricCollector(StatsCollector.instance());\n+      StatsCollector.instance()\n+          .addDefaultExceptionCode(StatExceptionCode.READER_RESTART_PROCESSING);\n+      METRIC_COLLECTOR_EXECUTOR.setEnabled(true);\n+      METRIC_COLLECTOR_EXECUTOR.start();\n+\n+      final GRPCConnectionManager connectionManager =\n+          new GRPCConnectionManager(settings.getHttpsEnabled());\n+      final ClientServers clientServers = createClientServers(connectionManager, appContext);\n+      startErrorHandlingThread(THREAD_PROVIDER, exceptionQueue);\n+\n+      startReaderThread(appContext, THREAD_PROVIDER);\n+      startGrpcServerThread(clientServers.getNetServer(), THREAD_PROVIDER);\n+      startWebServerThread(clientServers.getHttpServer(), THREAD_PROVIDER);\n+      startRcaTopLevelThread(clientServers, connectionManager, appContext, THREAD_PROVIDER);\n+    } else {\n+      LOG.error(\"Performance analyzer app stopped due to invalid config status.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY1NDEzOA=="}, "originalCommit": {"oid": "6f20fd778a53626f6436eebf801a50641f67f2af"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MzYwMjI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerApp.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNzoxMzoyOFrOHELnDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMTowNjoxOFrOHE94mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0NjU3NA==", "bodyText": "Move lines 105-108 into it if (ConfigStatus...) block so that we don't start any threads if we don't have a valid config. Can you also return -1 or some error code in that case and verify that the program exits when the config is invalid?\nYou should be able to do this with a simple test that executes PerformanceAnalyzerApp.main(...) and checks that the return code is the error code.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/389#discussion_r474146574", "createdAt": "2020-08-20T17:13:28Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerApp.java", "diffHunk": "@@ -107,21 +107,26 @@ public static void main(String[] args) {\n         (MetricsConfiguration.CONFIG_MAP.get(StatsCollector.class).samplingInterval) / 2,\n         TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f20fd778a53626f6436eebf801a50641f67f2af"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk3MDI2Ng==", "bodyText": "Right, added a simple test to cover this. Also moved lines inside the if (thanks!)", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/389#discussion_r474970266", "createdAt": "2020-08-21T21:06:18Z", "author": {"login": "sruti1312"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/PerformanceAnalyzerApp.java", "diffHunk": "@@ -107,21 +107,26 @@ public static void main(String[] args) {\n         (MetricsConfiguration.CONFIG_MAP.get(StatsCollector.class).samplingInterval) / 2,\n         TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0NjU3NA=="}, "originalCommit": {"oid": "6f20fd778a53626f6436eebf801a50641f67f2af"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2369, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}