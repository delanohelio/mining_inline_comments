{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MTU3ODE0", "number": 402, "title": "Add support for action configs", "bodyText": "Fixes #: #403 #404 #405\nDescription: This change allows action level configurations to be provided via config file - rca.conf.\nAdditional code refactoring includes:\n\nConfig objects to encapsulate the an entire configuration. These allow config key, value, default value and validation functions to be stored in a single object.\nSupport for validating config values via predicate functions.\nNestedConfig to recursively nest through a map and support multi-level nested configurations. Current support only allowed for three nested levels.\nRemove cache bound configurations from DeciderConfig\nAllow skipping muted configurations from rca.conf\nChanges in RcaConf to allow passing config jsons as strings for tests.\nIgnore flaky test TimeExpiringSetTest.testExpiringIteration\n\nTests: Added unit tests for all components\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-08-31T08:49:05Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402", "merged": true, "mergeCommit": {"oid": "2f6ba39456bd3b2ebaa4f067b9f681a1982f9ebf"}, "closed": true, "closedAt": "2020-09-01T19:03:53Z", "author": {"login": "vigyasharma"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEWNZygFqTQ3ODc5MTk0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdErTRZAFqTQ3OTk4OTMyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NzkxOTQ3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402#pullrequestreview-478791947", "createdAt": "2020-08-31T17:10:25Z", "commit": {"oid": "d72d38819d0d5883b74b3d50b48c32bdb328dcfa"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNzoxMDoyNVrOHKBRkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNzoyNDowNVrOHKBsQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI2ODY5MQ==", "bodyText": "maybe it would be better to pass CacheActionConfig in builder ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402#discussion_r480268691", "createdAt": "2020-08-31T17:10:25Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/ModifyCacheMaxSizeAction.java", "diffHunk": "@@ -153,34 +158,46 @@ public ResourceEnum getCacheType() {\n     private Long currentCacheMaxSizeInBytes;\n     private Long desiredCacheMaxSizeInBytes;\n     private Long heapMaxSizeInBytes;\n+    private final long upperBoundInBytes;\n+    private final long lowerBoundInBytes;\n \n     private Builder(\n         final NodeKey esNode,\n         final ResourceEnum cacheType,\n         final AppContext appContext,\n-        double upperBoundThreshold) {\n+        final RcaConf conf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d72d38819d0d5883b74b3d50b48c32bdb328dcfa"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI2OTgzNg==", "bodyText": "I think we will still need those two methods. The JVM decider will try to override upperbound for caches / queues", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402#discussion_r480269836", "createdAt": "2020-08-31T17:12:40Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/ModifyQueueCapacityAction.java", "diffHunk": "@@ -193,33 +180,21 @@ public Builder stepSize(int stepSize) {\n       return this;\n     }\n \n-    public Builder upperBound(int upperBound) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d72d38819d0d5883b74b3d50b48c32bdb328dcfa"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI3Mzg5MQ==", "bodyText": "Add nullable annotation to this function ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402#discussion_r480273891", "createdAt": "2020-08-31T17:20:52Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/NestedConfig.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core;\n+\n+import java.util.Map;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class NestedConfig {\n+\n+  private static final Logger LOG = LogManager.getLogger(NestedConfig.class);\n+\n+  private String key;\n+  private Map<String, Object> value;\n+\n+  public NestedConfig(String key, Map<String, Object> parentConfig) {\n+    this.key = key;\n+    this.value = null;\n+    if (parentConfig != null) {\n+      try {\n+        //noinspection unchecked\n+        value = (Map<String, Object>) parentConfig.get(key);\n+      } catch (ClassCastException e) {\n+        LOG.error(\"rca.conf contains invalid value for key: [{}], trace : [{}]\", key, e.getMessage());\n+      }\n+    }\n+  }\n+\n+  public String getKey() {\n+    return key;\n+  }\n+\n+  public Map<String, Object> getValue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d72d38819d0d5883b74b3d50b48c32bdb328dcfa"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI3NTI0OA==", "bodyText": "we should define the default value as a static variable ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402#discussion_r480275248", "createdAt": "2020-08-31T17:23:29Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfig.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.configs;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceEnum;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.Config;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.NestedConfig;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+/**\n+ * Defines config for cache related actions.\n+ *\n+ * <p>Configs are expected in the following json format:\n+ * {\n+ *   \"action-config-settings\": {\n+ *     // Cache Max Size bounds are expressed as %age of JVM heap size\n+ *     \"cache-settings\": {\n+ *       \"fielddata\": {\n+ *         \"upper-bound\": 0.4,\n+ *         \"lower-bound\": 0.1\n+ *       },\n+ *       \"shard-request\": {\n+ *         \"upper-bound\": 0.05,\n+ *         \"lower-bound\": 0.01\n+ *       }\n+ *     }\n+ *   }\n+ * }\n+ */\n+public class CacheActionConfig {\n+\n+  private static final Logger LOG = LogManager.getLogger(CacheActionConfig.class);\n+\n+  private NestedConfig cacheSettingsConfig;\n+  private FieldDataCacheConfig fieldDataCacheConfig;\n+  private ShardRequestCacheConfig shardRequestCacheConfig;\n+  private Map<ResourceEnum, ThresholdConfig<Double>> thresholdConfigMap;\n+\n+  public CacheActionConfig(RcaConf conf) {\n+    Map<String, Object> actionConfig = conf.getActionConfigSettings();\n+    cacheSettingsConfig = new NestedConfig(\"cache-settings\", actionConfig);\n+    fieldDataCacheConfig = new FieldDataCacheConfig(cacheSettingsConfig);\n+    shardRequestCacheConfig = new ShardRequestCacheConfig(cacheSettingsConfig);\n+    createThresholdConfigMap();\n+  }\n+\n+  public ThresholdConfig<Double> getThresholdConfig(ResourceEnum cacheType) {\n+    if (!thresholdConfigMap.containsKey(cacheType)) {\n+      String msg = \"Threshold config requested for unknown cache type: \" + cacheType.toString();\n+      LOG.error(msg);\n+      throw new IllegalArgumentException(msg);\n+    }\n+    return thresholdConfigMap.get(cacheType);\n+  }\n+\n+  private void createThresholdConfigMap() {\n+    Map<ResourceEnum, ThresholdConfig<Double>> configMap = new HashMap<>();\n+    configMap.put(ResourceEnum.FIELD_DATA_CACHE, fieldDataCacheConfig);\n+    configMap.put(ResourceEnum.SHARD_REQUEST_CACHE, shardRequestCacheConfig);\n+    thresholdConfigMap = Collections.unmodifiableMap(configMap);\n+  }\n+\n+  private static class FieldDataCacheConfig implements ThresholdConfig<Double> {\n+\n+    private Config<Double> fieldDataCacheUpperBound;\n+    private Config<Double> fieldDataCacheLowerBound;\n+\n+    public FieldDataCacheConfig(NestedConfig cacheSettingsConfig) {\n+      NestedConfig fieldDataCacheConfig = new NestedConfig(\"fielddata\", cacheSettingsConfig.getValue());\n+      fieldDataCacheUpperBound = new Config<>(\"upper-bound\", fieldDataCacheConfig.getValue(),\n+          0.4, (s) -> (s > 0), Double.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d72d38819d0d5883b74b3d50b48c32bdb328dcfa"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI3NTUyMQ==", "bodyText": "same as above", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402#discussion_r480275521", "createdAt": "2020-08-31T17:24:05Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.configs;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceEnum;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.Config;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.NestedConfig;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+/**\n+ * Defines config for threadpool queue related actions\n+ *\n+ * <p>Configs are expected in the following json format:\n+ * {\n+ *   \"action-config-settings\": {\n+ *     // Queue Capacity bounds are expressed as absolute queue size\n+ *     \"queue-settings\": {\n+ *       \"search\": {\n+ *         \"upper-bound\": 3000,\n+ *         \"lower-bound\": 1000\n+ *       },\n+ *       \"write\": {\n+ *         \"upper-bound\": 1000,\n+ *         \"lower-bound\": 50\n+ *       }\n+ *     }\n+ * }\n+ */\n+public class QueueActionConfig {\n+\n+  private static final Logger LOG = LogManager.getLogger(QueueActionConfig.class);\n+\n+  private NestedConfig queueSettingsConfig;\n+  private SearchQueueConfig searchQueueConfig;\n+  private WriteQueueConfig writeQueueConfig;\n+  private Map<ResourceEnum, ThresholdConfig<Integer>> thresholdConfigMap;\n+\n+  public QueueActionConfig(RcaConf conf) {\n+    Map<String, Object> actionConfig = conf.getActionConfigSettings();\n+    queueSettingsConfig = new NestedConfig(\"queue-settings\", actionConfig);\n+    searchQueueConfig = new SearchQueueConfig(queueSettingsConfig);\n+    writeQueueConfig = new WriteQueueConfig(queueSettingsConfig);\n+    createThresholdConfigMap();\n+  }\n+\n+  public ThresholdConfig<Integer> getThresholdConfig(ResourceEnum threadPool) {\n+    if (!thresholdConfigMap.containsKey(threadPool)) {\n+      String msg = \"Threshold config requested for unknown threadpool queue: \" + threadPool.toString();\n+      LOG.error(msg);\n+      throw new IllegalArgumentException(msg);\n+    }\n+    return thresholdConfigMap.get(threadPool);\n+  }\n+\n+  private void createThresholdConfigMap() {\n+    Map<ResourceEnum, ThresholdConfig<Integer>> configMap = new HashMap<>();\n+    configMap.put(ResourceEnum.SEARCH_THREADPOOL, searchQueueConfig);\n+    configMap.put(ResourceEnum.WRITE_THREADPOOL, writeQueueConfig);\n+    thresholdConfigMap = Collections.unmodifiableMap(configMap);\n+  }\n+\n+  private static class SearchQueueConfig implements ThresholdConfig<Integer> {\n+\n+    private Config<Integer> searchQueueUpperBound;\n+    private Config<Integer> searchQueueLowerBound;\n+\n+    public SearchQueueConfig(NestedConfig queueSettingsConfig) {\n+      NestedConfig searchQueueConfig = new NestedConfig(\"search\", queueSettingsConfig.getValue());\n+      searchQueueUpperBound = new Config<>(\"upper-bound\", searchQueueConfig.getValue(),\n+          3000, (s) -> (s >= 0), Integer.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d72d38819d0d5883b74b3d50b48c32bdb328dcfa"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5MDg5NTg4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402#pullrequestreview-479089588", "createdAt": "2020-08-31T23:53:51Z", "commit": {"oid": "e747fbe678d78848d4b54a9bf1aacf709daad6a4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5MDkxMDEw", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402#pullrequestreview-479091010", "createdAt": "2020-08-31T23:54:32Z", "commit": {"oid": "e747fbe678d78848d4b54a9bf1aacf709daad6a4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "331d710e6868f79caae51d75226b4047ed764bac", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/331d710e6868f79caae51d75226b4047ed764bac", "committedDate": "2020-09-01T16:31:16Z", "message": "Create cache action config - initial code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "558710ce44fec8df9160df0bdb18d3b6d10019a3", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/558710ce44fec8df9160df0bdb18d3b6d10019a3", "committedDate": "2020-09-01T16:31:16Z", "message": "Code builds and existing UTs pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54a6c612d384b096a3f6b1514140fde463774e51", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/54a6c612d384b096a3f6b1514140fde463774e51", "committedDate": "2020-09-01T16:31:16Z", "message": "Unit tests for NestedConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7627e6e28ce9c53d431be833ae4cfb434984dd05", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/7627e6e28ce9c53d431be833ae4cfb434984dd05", "committedDate": "2020-09-01T16:31:16Z", "message": "Tests for Config. Resolve to defaults during type mismatch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abe8ca7067e02479ae629bf4431db806b81b4132", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/abe8ca7067e02479ae629bf4431db806b81b4132", "committedDate": "2020-09-01T16:31:16Z", "message": "Queue and Cache config tests with config validator support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cc9cf5b8b60200576adae6bf6536bb0df953e37", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/9cc9cf5b8b60200576adae6bf6536bb0df953e37", "committedDate": "2020-09-01T16:31:16Z", "message": "Tests for queue and cache modify actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cb932bf53f665214833e03e72a06e1705bb4e37", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4cb932bf53f665214833e03e72a06e1705bb4e37", "committedDate": "2020-09-01T16:31:16Z", "message": "Remove comments and config overrides. Added docstrings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93a35ac0587ac660c2364ab0a1579366adcc691a", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/93a35ac0587ac660c2364ab0a1579366adcc691a", "committedDate": "2020-09-01T16:31:16Z", "message": "Remove cache bound configs from decider config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed2d054dbd4ff8e15cb83e5a3763d3a5c74520f", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/eed2d054dbd4ff8e15cb83e5a3763d3a5c74520f", "committedDate": "2020-09-01T16:31:16Z", "message": "Doc string checkstyle changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b62e36bdb6065f76826670803f8f0053c2b82ce3", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/b62e36bdb6065f76826670803f8f0053c2b82ce3", "committedDate": "2020-09-01T16:31:16Z", "message": "Ignoring flaky test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba79b4ac59077431ef8605833da0e5a8e47f9bc4", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/ba79b4ac59077431ef8605833da0e5a8e47f9bc4", "committedDate": "2020-09-01T16:31:16Z", "message": "Update rca.conf to remove threshold config from decider settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c820fb7f26f1cd2f4c3fba7f05258c0318e16188", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/c820fb7f26f1cd2f4c3fba7f05258c0318e16188", "committedDate": "2020-09-01T16:31:16Z", "message": "remove typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "981a51903b20bb50b7dc0c5914436c02cd1141fe", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/981a51903b20bb50b7dc0c5914436c02cd1141fe", "committedDate": "2020-09-01T16:31:16Z", "message": "PR comments addressed\n\n - Add nullable annotations\n - Move default values to static final variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8ddb98af9e9b1d64cbd8cf34dcd92ab61d26964", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/f8ddb98af9e9b1d64cbd8cf34dcd92ab61d26964", "committedDate": "2020-09-01T16:31:16Z", "message": "Remove unused method desiredCacheMaxSize"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e747fbe678d78848d4b54a9bf1aacf709daad6a4", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e747fbe678d78848d4b54a9bf1aacf709daad6a4", "committedDate": "2020-08-31T23:47:28Z", "message": "Remove unused method desiredCacheMaxSize"}, "afterCommit": {"oid": "f8ddb98af9e9b1d64cbd8cf34dcd92ab61d26964", "author": {"user": {"login": "vigyasharma", "name": "Vigya Sharma"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/f8ddb98af9e9b1d64cbd8cf34dcd92ab61d26964", "committedDate": "2020-09-01T16:31:16Z", "message": "Remove unused method desiredCacheMaxSize"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTU1MDc2", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402#pullrequestreview-479955076", "createdAt": "2020-09-01T17:12:06Z", "commit": {"oid": "f8ddb98af9e9b1d64cbd8cf34dcd92ab61d26964"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTg5MzI5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/402#pullrequestreview-479989329", "createdAt": "2020-09-01T17:59:54Z", "commit": {"oid": "f8ddb98af9e9b1d64cbd8cf34dcd92ab61d26964"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 904, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}