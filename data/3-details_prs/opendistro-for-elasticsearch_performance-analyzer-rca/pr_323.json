{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NTI5MTM3", "number": 323, "title": "Persistance concurrency bug", "bodyText": "Issue #: #324\nDescription of changes:\nThis change makes us print less stacktrace on errors that are expected. Also resolves a concurrency bug while threads doing writes and while the file is being rotated.\nTests:\nAdded a test\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-07-30T19:29:12Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/323", "merged": true, "mergeCommit": {"oid": "b5f58fb963759e2d7d3d288a08192d7fbda035ce"}, "closed": true, "closedAt": "2020-08-03T17:48:16Z", "author": {"login": "yojs"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6GHCAABqjM2MDU3ODM0MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7VsTugFqTQ2MDIyMTg2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "730ca929cc014b9861b93b498cc6f5b4fc1fe58b", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/730ca929cc014b9861b93b498cc6f5b4fc1fe58b", "committedDate": "2020-07-30T19:41:32Z", "message": "addressing the checkstyle issues"}, "afterCommit": {"oid": "5a1a4a5d1840684bf07bdb70657c6fef6cd258ca", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/5a1a4a5d1840684bf07bdb70657c6fef6cd258ca", "committedDate": "2020-07-30T20:25:39Z", "message": "addressing the checkstyle issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a1a4a5d1840684bf07bdb70657c6fef6cd258ca", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/5a1a4a5d1840684bf07bdb70657c6fef6cd258ca", "committedDate": "2020-07-30T20:25:39Z", "message": "addressing the checkstyle issues"}, "afterCommit": {"oid": "02726fa42899d47e867bc804daff85a38f9db7be", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/02726fa42899d47e867bc804daff85a38f9db7be", "committedDate": "2020-07-30T21:42:49Z", "message": "some refactoring in persistance layer for better error messages and error catching\n\nAdded a test that does concurrent writes to the DB"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzgxMTU1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/323#pullrequestreview-458781155", "createdAt": "2020-07-30T21:50:31Z", "commit": {"oid": "02726fa42899d47e867bc804daff85a38f9db7be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMTo1MDozMlrOG51E2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMTo1MDozMlrOG51E2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI5MTYxMQ==", "bodyText": "Since we are consuming the exception, can we add a log statement for the else case that we were not expecting the table to have been created already but we're going to use the one already created?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/323#discussion_r463291611", "createdAt": "2020-07-30T21:50:32Z", "author": {"login": "ktkrg"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/SQLitePersistor.java", "diffHunk": "@@ -98,37 +106,40 @@ synchronized void createTable(String tableName, List<Field<?>> columns, String r\n                                 String referenceTablePrimaryKeyFieldName) throws SQLException {\n     Field foreignKeyField = DSL.field(referenceTablePrimaryKeyFieldName, Integer.class);\n     columns.add(foreignKeyField);\n-    Table referenceTable = DSL.table(referenceTableName);\n-    CreateTableConstraintStep constraintStep = create.createTable(tableName)\n-        .column(DSL.field(getPrimaryKeyColumnName(tableName) + PRIMARY_KEY_AUTOINCREMENT_POSTFIX))\n-        .columns(columns)\n-        .constraints(DSL.constraint(foreignKeyField.getName() + \"_FK\").foreignKey(foreignKeyField)\n-            .references(referenceTable, DSL.field(referenceTablePrimaryKeyFieldName)));\n \n-    LOG.debug(\"table with fk created: {}\", constraintStep.toString());\n     try {\n+      Table referenceTable = DSL.table(referenceTableName);\n+      CreateTableConstraintStep constraintStep = create.createTable(tableName)\n+          .column(DSL.field(getPrimaryKeyColumnName(tableName) + PRIMARY_KEY_AUTOINCREMENT_POSTFIX))\n+          .columns(columns)\n+          .constraints(DSL.constraint(foreignKeyField.getName() + \"_FK\").foreignKey(foreignKeyField)\n+              .references(referenceTable, DSL.field(referenceTablePrimaryKeyFieldName)));\n       constraintStep.execute();\n+      LOG.debug(\"table with fk created: {}\", constraintStep.toString());\n       jooqTableColumns.put(tableName, columns);\n-    } catch (Exception e) {\n-      LOG.error(\"Failed to create table {}\", tableName);\n-      throw new SQLException();\n+    } catch (DataAccessException e) {\n+      String msg = \"table \" + tableName + \" already exists\";\n+      if (!e.getMessage().contains(msg)) {\n+        LOG.error(e);\n+        throw new SQLException(e);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02726fa42899d47e867bc804daff85a38f9db7be"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODExNDM0", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/323#pullrequestreview-458811434", "createdAt": "2020-07-30T22:39:23Z", "commit": {"oid": "02726fa42899d47e867bc804daff85a38f9db7be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMjozOToyNFrOG52P-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMjozOToyNFrOG52P-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMxMDg0MQ==", "bodyText": "We should add StandardCopyOption.ATOMIC_MOVE to the copy options as well.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/323#discussion_r463310841", "createdAt": "2020-07-30T22:39:24Z", "author": {"login": "ktkrg"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/FileRotate.java", "diffHunk": "@@ -115,7 +116,14 @@ protected Path rotate(long currentMillis) throws IOException {\n       Files.move(FILE_TO_ROTATE, targetFilePath);\n       lastRotatedMillis = System.currentTimeMillis();\n     } catch (FileAlreadyExistsException fae) {\n-      LOG.error(fae);\n+      if (!Files.deleteIfExists(targetFilePath)) {\n+        LOG.error(\"Could not delete file: \" + targetFilePath);\n+      }\n+      try {\n+        Files.move(FILE_TO_ROTATE, targetFilePath, StandardCopyOption.REPLACE_EXISTING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02726fa42899d47e867bc804daff85a38f9db7be"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDkwMTQz", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/323#pullrequestreview-459490143", "createdAt": "2020-07-31T21:35:09Z", "commit": {"oid": "65a9c4d437fad10c9cb353ffa3179a2e5ab1cdf6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTozNTowOVrOG6XmGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTozNToyOVrOG6XmjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1NzE3OQ==", "bodyText": "I assume creating the SQL statement itself does not throw any exception. Can we leave this part out of the try block ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/323#discussion_r463857179", "createdAt": "2020-07-31T21:35:09Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/SQLitePersistor.java", "diffHunk": "@@ -98,37 +111,54 @@ synchronized void createTable(String tableName, List<Field<?>> columns, String r\n                                 String referenceTablePrimaryKeyFieldName) throws SQLException {\n     Field foreignKeyField = DSL.field(referenceTablePrimaryKeyFieldName, Integer.class);\n     columns.add(foreignKeyField);\n-    Table referenceTable = DSL.table(referenceTableName);\n-    CreateTableConstraintStep constraintStep = create.createTable(tableName)\n-        .column(DSL.field(getPrimaryKeyColumnName(tableName) + PRIMARY_KEY_AUTOINCREMENT_POSTFIX))\n-        .columns(columns)\n-        .constraints(DSL.constraint(foreignKeyField.getName() + \"_FK\").foreignKey(foreignKeyField)\n-            .references(referenceTable, DSL.field(referenceTablePrimaryKeyFieldName)));\n \n-    LOG.debug(\"table with fk created: {}\", constraintStep.toString());\n     try {\n+      LOG.debug(\"Trying to create a summary table: {} that references {}\", tableName, referenceTableName);\n+      Table referenceTable = DSL.table(referenceTableName);\n+      CreateTableConstraintStep constraintStep = create.createTable(tableName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a9c4d437fad10c9cb353ffa3179a2e5ab1cdf6"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1NzI5Mw==", "bodyText": "same as above", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/323#discussion_r463857293", "createdAt": "2020-07-31T21:35:29Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/SQLitePersistor.java", "diffHunk": "@@ -98,37 +111,54 @@ synchronized void createTable(String tableName, List<Field<?>> columns, String r\n                                 String referenceTablePrimaryKeyFieldName) throws SQLException {\n     Field foreignKeyField = DSL.field(referenceTablePrimaryKeyFieldName, Integer.class);\n     columns.add(foreignKeyField);\n-    Table referenceTable = DSL.table(referenceTableName);\n-    CreateTableConstraintStep constraintStep = create.createTable(tableName)\n-        .column(DSL.field(getPrimaryKeyColumnName(tableName) + PRIMARY_KEY_AUTOINCREMENT_POSTFIX))\n-        .columns(columns)\n-        .constraints(DSL.constraint(foreignKeyField.getName() + \"_FK\").foreignKey(foreignKeyField)\n-            .references(referenceTable, DSL.field(referenceTablePrimaryKeyFieldName)));\n \n-    LOG.debug(\"table with fk created: {}\", constraintStep.toString());\n     try {\n+      LOG.debug(\"Trying to create a summary table: {} that references {}\", tableName, referenceTableName);\n+      Table referenceTable = DSL.table(referenceTableName);\n+      CreateTableConstraintStep constraintStep = create.createTable(tableName)\n+          .column(DSL.field(getPrimaryKeyColumnName(tableName) + PRIMARY_KEY_AUTOINCREMENT_POSTFIX))\n+          .columns(columns)\n+          .constraints(DSL.constraint(foreignKeyField.getName() + \"_FK\").foreignKey(foreignKeyField)\n+              .references(referenceTable, DSL.field(referenceTablePrimaryKeyFieldName)));\n       constraintStep.execute();\n-      jooqTableColumns.put(tableName, columns);\n-    } catch (Exception e) {\n-      LOG.error(\"Failed to create table {}\", tableName);\n-      throw new SQLException();\n+      LOG.debug(\"table with fk created: {}\", constraintStep.toString());\n+    } catch (DataAccessException e) {\n+      String msg = \"table \" + tableName + \" already exists\";\n+      if (e.getMessage().contains(msg)) {\n+        LOG.debug(e.getMessage());\n+      } else {\n+        LOG.error(\"Error creating table: {}\", tableName, e);\n+        throw new SQLException(e);\n+      }\n     }\n+    tableNames.add(tableName);\n+    jooqTableColumns.put(tableName, columns);\n   }\n \n   @Override\n   synchronized int insertRow(String tableName, List<Object> row) throws SQLException {\n     int lastPrimaryKey = -1;\n     String sqlQuery = \"SELECT \" + LAST_INSERT_ROWID;\n-    InsertValuesStepN insertValuesStepN = create.insertInto(DSL.table(tableName))\n-        .columns(jooqTableColumns.get(tableName))\n-        .values(row);\n-    LOG.debug(\"sql insert: {}\", insertValuesStepN.toString());\n+\n+    Objects.requireNonNull(create, \"DSLContext cannot be null\");\n+    Table<Record> table = DSL.table(tableName);\n+    List<Field<?>> columnsForTable = jooqTableColumns.get(tableName);\n+    if (columnsForTable == null) {\n+      LOG.error(\"NO columns found for table: {}. Tables: {}, columns: {}\", tableName, tableNames, jooqTableColumns);\n+      throw new SQLException(\"No columns exist for table.\");\n+    }\n+\n     try {\n+      InsertValuesStepN insertValuesStepN = create", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a9c4d437fad10c9cb353ffa3179a2e5ab1cdf6"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3e6651abcacaa26c8473099ac8db2f73216e965", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/f3e6651abcacaa26c8473099ac8db2f73216e965", "committedDate": "2020-08-03T16:31:44Z", "message": "some refactoring in persistance layer for better error messages and error catching\n\nAdded a test that does concurrent writes to the DB"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4641ea82085dab4ef740acddaaed41072f4ecc2b", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4641ea82085dab4ef740acddaaed41072f4ecc2b", "committedDate": "2020-08-03T16:31:44Z", "message": "Addressing review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c865e77fefbae0dc3d4ec96c811617875cc781a", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/3c865e77fefbae0dc3d4ec96c811617875cc781a", "committedDate": "2020-08-03T16:31:44Z", "message": "Handling the failing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d5fdf8416be8dd5a21bca610ae8ef03dcfaa4b9", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/6d5fdf8416be8dd5a21bca610ae8ef03dcfaa4b9", "committedDate": "2020-08-03T16:31:44Z", "message": "checkstyle fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53819e70b29e90f80aec9f5643a7190d5e89f152", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/53819e70b29e90f80aec9f5643a7190d5e89f152", "committedDate": "2020-08-03T16:31:44Z", "message": "test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed3410ca9e62950bdb4e17c8833abf072fd9bb04", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/ed3410ca9e62950bdb4e17c8833abf072fd9bb04", "committedDate": "2020-08-03T16:46:20Z", "message": "More PR comments addressing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65a9c4d437fad10c9cb353ffa3179a2e5ab1cdf6", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/65a9c4d437fad10c9cb353ffa3179a2e5ab1cdf6", "committedDate": "2020-07-31T03:31:47Z", "message": "test fixes"}, "afterCommit": {"oid": "ed3410ca9e62950bdb4e17c8833abf072fd9bb04", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/ed3410ca9e62950bdb4e17c8833abf072fd9bb04", "committedDate": "2020-08-03T16:46:20Z", "message": "More PR comments addressing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMTk1OTc2", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/323#pullrequestreview-460195976", "createdAt": "2020-08-03T17:09:57Z", "commit": {"oid": "ed3410ca9e62950bdb4e17c8833abf072fd9bb04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjIxODY4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/323#pullrequestreview-460221868", "createdAt": "2020-08-03T17:44:01Z", "commit": {"oid": "ed3410ca9e62950bdb4e17c8833abf072fd9bb04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 841, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}