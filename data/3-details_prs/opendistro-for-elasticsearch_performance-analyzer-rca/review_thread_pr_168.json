{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMzg4NDU2", "number": 168, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyNDoxOVrOD3Z3rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMDoxMDozOVrOD3bbSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDIyMTI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/ConnectedComponent.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyNDoxOVrOGNpPfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMTozMDo0MVrOGNs4oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MDM4Mw==", "bodyText": "getAllNodes() is an expensive call. It should only be called if nodeNames is uninitialized.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/168#discussion_r416960383", "createdAt": "2020-04-28T22:24:19Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/ConnectedComponent.java", "diffHunk": "@@ -114,4 +117,10 @@ public void addLeafNode(Node node) {\n     }\n     return dependencyOrderedNodes;\n   }\n+\n+  public Set<String> getNodeNames() {\n+    getAllNodes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ff4559489b6c42aee4904247248d173d135ef7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMDA2NQ==", "bodyText": "With current implementation, we are returning nodeNames without making the null check. If the nodeNames is not populated, then it should fail.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/168#discussion_r417020065", "createdAt": "2020-04-29T01:30:41Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/ConnectedComponent.java", "diffHunk": "@@ -114,4 +117,10 @@ public void addLeafNode(Node node) {\n     }\n     return dependencyOrderedNodes;\n   }\n+\n+  public Set<String> getNodeNames() {\n+    getAllNodes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MDM4Mw=="}, "originalCommit": {"oid": "c2ff4559489b6c42aee4904247248d173d135ef7"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDIyODA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyNjo1OFrOGNpTkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMTozMTozNlrOGNs5qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MTQyNw==", "bodyText": "I don't get it, why can't we just call getNodeNames() instead of calling the expensive method getAnalysisGraphComponents ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/168#discussion_r416961427", "createdAt": "2020-04-28T22:26:58Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -253,6 +261,51 @@ private void readRcaEnabledFromConf() {\n             rcaEnabled = rcaEnabledDefaultValue;\n           }\n         });\n+\n+    // If RCA is enabled, update Analysis graph with Muted RCAs value\n+    if (rcaEnabled) {\n+      LOG.debug(\"Updating Analysis Graph with Muted RCAs\");\n+      readAndUpdateMutesRcas();\n+    }\n+  }\n+\n+  /**\n+   * Reads the mutedRCAList value from the rca.conf file, performs validation on the param value\n+   * provided and on successful validation, updates the AnalysisGraph with muted RCA value.\n+   *\n+   * <p>In case all the RCAs in param value are incorrect, return without any update.\n+   */\n+  private void readAndUpdateMutesRcas() {\n+    // If the rca config file has been updated since the lastModifiedTimeInMillisInMemory in memory,\n+    // refresh the `muted-rcas` value from rca config file.\n+    long lastModifiedTimeInMillisOnDisk = rcaConf.getLastModifiedTime();\n+    if (lastModifiedTimeInMillisOnDisk > lastModifiedTimeInMillisInMemory) {\n+      try {\n+        Set<String> rcasForMute = new HashSet<>(rcaConf.getMutedRcaList());\n+        LOG.info(\"RCAs provided for muting : {}\", rcasForMute);\n+\n+        Set<String> graphNodeNames = new HashSet<>();\n+        RcaUtil.getAnalysisGraphComponents(rcaConf).forEach(\n+                connectedComponent -> graphNodeNames.addAll(connectedComponent.getNodeNames()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ff4559489b6c42aee4904247248d173d135ef7"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMDMyOA==", "bodyText": "Agreed, so now we are maintaining a set which gets populated at the time of graph creation and is accessible via getNodeNames()", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/168#discussion_r417020328", "createdAt": "2020-04-29T01:31:36Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -253,6 +261,51 @@ private void readRcaEnabledFromConf() {\n             rcaEnabled = rcaEnabledDefaultValue;\n           }\n         });\n+\n+    // If RCA is enabled, update Analysis graph with Muted RCAs value\n+    if (rcaEnabled) {\n+      LOG.debug(\"Updating Analysis Graph with Muted RCAs\");\n+      readAndUpdateMutesRcas();\n+    }\n+  }\n+\n+  /**\n+   * Reads the mutedRCAList value from the rca.conf file, performs validation on the param value\n+   * provided and on successful validation, updates the AnalysisGraph with muted RCA value.\n+   *\n+   * <p>In case all the RCAs in param value are incorrect, return without any update.\n+   */\n+  private void readAndUpdateMutesRcas() {\n+    // If the rca config file has been updated since the lastModifiedTimeInMillisInMemory in memory,\n+    // refresh the `muted-rcas` value from rca config file.\n+    long lastModifiedTimeInMillisOnDisk = rcaConf.getLastModifiedTime();\n+    if (lastModifiedTimeInMillisOnDisk > lastModifiedTimeInMillisInMemory) {\n+      try {\n+        Set<String> rcasForMute = new HashSet<>(rcaConf.getMutedRcaList());\n+        LOG.info(\"RCAs provided for muting : {}\", rcasForMute);\n+\n+        Set<String> graphNodeNames = new HashSet<>();\n+        RcaUtil.getAnalysisGraphComponents(rcaConf).forEach(\n+                connectedComponent -> graphNodeNames.addAll(connectedComponent.getNodeNames()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MTQyNw=="}, "originalCommit": {"oid": "c2ff4559489b6c42aee4904247248d173d135ef7"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDIzMTI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyODoxNlrOGNpVfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMTozMTo0MlrOGNs5wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MTkxNw==", "bodyText": "Ideally this one should be:\nrcasForMute.retainAll(getNodeNames());, right ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/168#discussion_r416961917", "createdAt": "2020-04-28T22:28:16Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -253,6 +261,51 @@ private void readRcaEnabledFromConf() {\n             rcaEnabled = rcaEnabledDefaultValue;\n           }\n         });\n+\n+    // If RCA is enabled, update Analysis graph with Muted RCAs value\n+    if (rcaEnabled) {\n+      LOG.debug(\"Updating Analysis Graph with Muted RCAs\");\n+      readAndUpdateMutesRcas();\n+    }\n+  }\n+\n+  /**\n+   * Reads the mutedRCAList value from the rca.conf file, performs validation on the param value\n+   * provided and on successful validation, updates the AnalysisGraph with muted RCA value.\n+   *\n+   * <p>In case all the RCAs in param value are incorrect, return without any update.\n+   */\n+  private void readAndUpdateMutesRcas() {\n+    // If the rca config file has been updated since the lastModifiedTimeInMillisInMemory in memory,\n+    // refresh the `muted-rcas` value from rca config file.\n+    long lastModifiedTimeInMillisOnDisk = rcaConf.getLastModifiedTime();\n+    if (lastModifiedTimeInMillisOnDisk > lastModifiedTimeInMillisInMemory) {\n+      try {\n+        Set<String> rcasForMute = new HashSet<>(rcaConf.getMutedRcaList());\n+        LOG.info(\"RCAs provided for muting : {}\", rcasForMute);\n+\n+        Set<String> graphNodeNames = new HashSet<>();\n+        RcaUtil.getAnalysisGraphComponents(rcaConf).forEach(\n+                connectedComponent -> graphNodeNames.addAll(connectedComponent.getNodeNames()));\n+\n+        // Update rcasForMute to retain only valid RCAs\n+        rcasForMute.retainAll(graphNodeNames);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ff4559489b6c42aee4904247248d173d135ef7"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMDM1Mg==", "bodyText": "Done.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/168#discussion_r417020352", "createdAt": "2020-04-29T01:31:42Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -253,6 +261,51 @@ private void readRcaEnabledFromConf() {\n             rcaEnabled = rcaEnabledDefaultValue;\n           }\n         });\n+\n+    // If RCA is enabled, update Analysis graph with Muted RCAs value\n+    if (rcaEnabled) {\n+      LOG.debug(\"Updating Analysis Graph with Muted RCAs\");\n+      readAndUpdateMutesRcas();\n+    }\n+  }\n+\n+  /**\n+   * Reads the mutedRCAList value from the rca.conf file, performs validation on the param value\n+   * provided and on successful validation, updates the AnalysisGraph with muted RCA value.\n+   *\n+   * <p>In case all the RCAs in param value are incorrect, return without any update.\n+   */\n+  private void readAndUpdateMutesRcas() {\n+    // If the rca config file has been updated since the lastModifiedTimeInMillisInMemory in memory,\n+    // refresh the `muted-rcas` value from rca config file.\n+    long lastModifiedTimeInMillisOnDisk = rcaConf.getLastModifiedTime();\n+    if (lastModifiedTimeInMillisOnDisk > lastModifiedTimeInMillisInMemory) {\n+      try {\n+        Set<String> rcasForMute = new HashSet<>(rcaConf.getMutedRcaList());\n+        LOG.info(\"RCAs provided for muting : {}\", rcasForMute);\n+\n+        Set<String> graphNodeNames = new HashSet<>();\n+        RcaUtil.getAnalysisGraphComponents(rcaConf).forEach(\n+                connectedComponent -> graphNodeNames.addAll(connectedComponent.getNodeNames()));\n+\n+        // Update rcasForMute to retain only valid RCAs\n+        rcasForMute.retainAll(graphNodeNames);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MTkxNw=="}, "originalCommit": {"oid": "c2ff4559489b6c42aee4904247248d173d135ef7"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDQ3NjI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMDoxMDozOVrOGNrjWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMDoxMDozOVrOGNrjWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5ODIzNQ==", "bodyText": "nit: suggest renaming this(and other instances) to node muting instead of rca muting. We're not restricting this to just rca nodes anywhere.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/168#discussion_r416998235", "createdAt": "2020-04-29T00:10:39Z", "author": {"login": "ktkrg"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/RcaController.java", "diffHunk": "@@ -253,6 +261,51 @@ private void readRcaEnabledFromConf() {\n             rcaEnabled = rcaEnabledDefaultValue;\n           }\n         });\n+\n+    // If RCA is enabled, update Analysis graph with Muted RCAs value\n+    if (rcaEnabled) {\n+      LOG.debug(\"Updating Analysis Graph with Muted RCAs\");\n+      readAndUpdateMutesRcas();\n+    }\n+  }\n+\n+  /**\n+   * Reads the mutedRCAList value from the rca.conf file, performs validation on the param value\n+   * provided and on successful validation, updates the AnalysisGraph with muted RCA value.\n+   *\n+   * <p>In case all the RCAs in param value are incorrect, return without any update.\n+   */\n+  private void readAndUpdateMutesRcas() {\n+    // If the rca config file has been updated since the lastModifiedTimeInMillisInMemory in memory,\n+    // refresh the `muted-rcas` value from rca config file.\n+    long lastModifiedTimeInMillisOnDisk = rcaConf.getLastModifiedTime();\n+    if (lastModifiedTimeInMillisOnDisk > lastModifiedTimeInMillisInMemory) {\n+      try {\n+        Set<String> rcasForMute = new HashSet<>(rcaConf.getMutedRcaList());\n+        LOG.info(\"RCAs provided for muting : {}\", rcasForMute);\n+\n+        Set<String> graphNodeNames = new HashSet<>();\n+        RcaUtil.getAnalysisGraphComponents(rcaConf).forEach(\n+                connectedComponent -> graphNodeNames.addAll(connectedComponent.getNodeNames()));\n+\n+        // Update rcasForMute to retain only valid RCAs\n+        rcasForMute.retainAll(graphNodeNames);\n+\n+        // If rcasForMute post validation is empty but rcaConf.getMutedRcaList() is not empty\n+        // all the input RCAs are incorrect, return.\n+        if (rcasForMute.isEmpty() && !rcaConf.getMutedRcaList().isEmpty()) {\n+          LOG.error(\"Incorrect RCA(s): {}, cannot be muted. Valid RCAs: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ff4559489b6c42aee4904247248d173d135ef7"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2623, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}