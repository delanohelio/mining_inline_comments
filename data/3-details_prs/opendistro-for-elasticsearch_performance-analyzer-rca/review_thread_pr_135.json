{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDg2NjQ2", "number": 135, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMTo0NDoyOVrODwk9MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMTo1NToyMVrOD0_Wbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjYzNzI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/ControllerUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMTo0NDoyOVrOGDqgTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODo1OTowMlrOGFcpEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ5NTMxMQ==", "bodyText": "I would suggest we don't use static classes or initializes as much as possible.\nThe thing is your UT framework initializes once. If you set something in a static object in one of the tests, it stays there (unless explicitly reset after the tests pass). This can cause weird behaviors in your tests based on the order they execute etc.\nIf we can remove them, it will be great.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r406495311", "createdAt": "2020-04-09T21:44:29Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/ControllerUtil.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca;\n+\n+/**\n+ * ControllerUtil is a singleton which provides visibility into {@link RcaController}'s state\n+ */\n+public class ControllerUtil {\n+    public static final ControllerUtil API = new ControllerUtil();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70c92cf809c7c0399a4e760bdec5d00f5fec4f63"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwMjM1NA==", "bodyText": "I also want to avoid static classes / members where possible. That was the intent here. rcaEnabled previously was a static member of the RcaController that could only be set via a file read through a controller method. This causes issues for the reason you mentioned in your comment: testing with static classes/methods/members sucks. That's why I extracted the read/write logic for isRcaEnabled into the singleton class here. I did this in a few other places so that I could avoid static classes and bytecode hijacking via PowerMock.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r406502354", "createdAt": "2020-04-09T22:01:27Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/ControllerUtil.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca;\n+\n+/**\n+ * ControllerUtil is a singleton which provides visibility into {@link RcaController}'s state\n+ */\n+public class ControllerUtil {\n+    public static final ControllerUtil API = new ControllerUtil();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ5NTMxMQ=="}, "originalCommit": {"oid": "70c92cf809c7c0399a4e760bdec5d00f5fec4f63"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM2NTMyOA==", "bodyText": "I removed the ControllerUtil, the RcaController can be refactored at a future time", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r408365328", "createdAt": "2020-04-14T18:59:02Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/ControllerUtil.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca;\n+\n+/**\n+ * ControllerUtil is a singleton which provides visibility into {@link RcaController}'s state\n+ */\n+public class ControllerUtil {\n+    public static final ControllerUtil API = new ControllerUtil();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ5NTMxMQ=="}, "originalCommit": {"oid": "70c92cf809c7c0399a4e760bdec5d00f5fec4f63"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDM1ODQwOnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMjozMjoyNVrOGGN6Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNjowNjo1MVrOGJ-f2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE3MjU1NQ==", "bodyText": "We discussed that we will remove this new dependency, right ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r409172555", "createdAt": "2020-04-15T22:32:25Z", "author": {"login": "yojs"}, "path": "build.gradle", "diffHunk": "@@ -230,11 +230,14 @@ dependencies {\n     compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'\n     compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'\n     compile group: 'commons-io', name: 'commons-io', version: '2.3'\n+    compile 'org.projectlombok:lombok:1.18.12'\n     implementation 'io.grpc:grpc-netty-shaded:1.25.0'\n     implementation 'io.grpc:grpc-protobuf:1.25.0'\n     implementation 'io.grpc:grpc-stub:1.25.0'\n     implementation 'javax.annotation:javax.annotation-api:1.3.2'\n \n+    annotationProcessor 'org.projectlombok:lombok:1.18.12'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae79386ecc6188920a62005b558d3c68f1cb7bbe"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExNDMzMA==", "bodyText": "Fully removed in the latest PR", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413114330", "createdAt": "2020-04-22T16:06:51Z", "author": {"login": "sidheart"}, "path": "build.gradle", "diffHunk": "@@ -230,11 +230,14 @@ dependencies {\n     compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'\n     compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'\n     compile group: 'commons-io', name: 'commons-io', version: '2.3'\n+    compile 'org.projectlombok:lombok:1.18.12'\n     implementation 'io.grpc:grpc-netty-shaded:1.25.0'\n     implementation 'io.grpc:grpc-protobuf:1.25.0'\n     implementation 'io.grpc:grpc-stub:1.25.0'\n     implementation 'javax.annotation:javax.annotation-api:1.3.2'\n \n+    annotationProcessor 'org.projectlombok:lombok:1.18.12'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE3MjU1NQ=="}, "originalCommit": {"oid": "ae79386ecc6188920a62005b558d3c68f1cb7bbe"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODA1MjIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxODo0MDoyMVrOGKFYfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMDoxNzo0N1rOGKJy6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIyNzEzNA==", "bodyText": "We don't need to add a constructor specifically for testing purpose. you can work around this by using a utility function API provided by another unit test. (createNodeDetailsMetrics)", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413227134", "createdAt": "2020-04-22T18:40:21Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -125,11 +132,27 @@ public static NodeDetails getCurrentNodeDetails() {\n \n   public static class NodeDetails {\n \n-    private String id;\n-    private String hostAddress;\n-    private String role;\n+    private final String id;\n+    private final String hostAddress;\n+    private final String role;\n     private Boolean isMasterNode;\n \n+    /**\n+     * This constructor is provided expressly for testing purposes. In general, NodeDetails should only be\n+     * retrieved through method calls such as {@link ClusterDetailsEventProcessor#getCurrentNodeDetails()}\n+     * @param id The node's id\n+     * @param hostAddress The host's address\n+     * @param role The node's role e.g. data-node\n+     * @param isMasterNode Whether or not the node is a master node\n+     */\n+    @VisibleForTesting\n+    public NodeDetails(String id, String hostAddress, String role, Boolean isMasterNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cea02050caa4e979bff98d52453ee5d13aec746"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5OTQzMw==", "bodyText": "Great catch! I've improved the design as you suggested and will remember this pattern for the future.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413299433", "createdAt": "2020-04-22T20:17:47Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -125,11 +132,27 @@ public static NodeDetails getCurrentNodeDetails() {\n \n   public static class NodeDetails {\n \n-    private String id;\n-    private String hostAddress;\n-    private String role;\n+    private final String id;\n+    private final String hostAddress;\n+    private final String role;\n     private Boolean isMasterNode;\n \n+    /**\n+     * This constructor is provided expressly for testing purposes. In general, NodeDetails should only be\n+     * retrieved through method calls such as {@link ClusterDetailsEventProcessor#getCurrentNodeDetails()}\n+     * @param id The node's id\n+     * @param hostAddress The host's address\n+     * @param role The node's role e.g. data-node\n+     * @param isMasterNode Whether or not the node is a master node\n+     */\n+    @VisibleForTesting\n+    public NodeDetails(String id, String hostAddress, String role, Boolean isMasterNode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIyNzEzNA=="}, "originalCommit": {"oid": "6cea02050caa4e979bff98d52453ee5d13aec746"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODg5Mjk3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessorTestHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMTo1MTo0MFrOGKNYRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNToyNzo0NlrOGKXNdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1ODE1MA==", "bodyText": "should we make all the arguments final ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413358150", "createdAt": "2020-04-22T21:51:40Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessorTestHelper.java", "diffHunk": "@@ -33,6 +34,11 @@ public void addNodeDetails(String nodeId, String address, boolean isMasterNode)\n     nodeDetails.add(createNodeDetailsMetrics(nodeId, address, isMasterNode));\n   }\n \n+  public static ClusterDetailsEventProcessor.NodeDetails newNodeDetails(String nodeId, String address,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9a1668b4b30cc2a76b366a52f065b4d0569f550"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxOTIyMw==", "bodyText": "Done", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413519223", "createdAt": "2020-04-23T05:27:46Z", "author": {"login": "sidheart"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessorTestHelper.java", "diffHunk": "@@ -33,6 +34,11 @@ public void addNodeDetails(String nodeId, String address, boolean isMasterNode)\n     nodeDetails.add(createNodeDetailsMetrics(nodeId, address, isMasterNode));\n   }\n \n+  public static ClusterDetailsEventProcessor.NodeDetails newNodeDetails(String nodeId, String address,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1ODE1MA=="}, "originalCommit": {"oid": "a9a1668b4b30cc2a76b366a52f065b4d0569f550"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODg5NTM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMTo1MjoyMVrOGKNZmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNToyODowNVrOGKXN4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1ODQ5MA==", "bodyText": "We added this, but are we using this ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413358490", "createdAt": "2020-04-22T21:52:21Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -20,6 +20,7 @@\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.RcaControllerHelper;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.reader_writer_shared.Event;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.util.JsonConverter;\n+import com.google.common.annotations.VisibleForTesting;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9a1668b4b30cc2a76b366a52f065b4d0569f550"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxOTMzMQ==", "bodyText": "Removed", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413519331", "createdAt": "2020-04-23T05:28:05Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -20,6 +20,7 @@\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.RcaControllerHelper;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.reader_writer_shared.Event;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.util.JsonConverter;\n+import com.google.common.annotations.VisibleForTesting;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1ODQ5MA=="}, "originalCommit": {"oid": "a9a1668b4b30cc2a76b366a52f065b4d0569f550"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODg5NjYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMTo1Mjo1MVrOGKNabA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNToyODoyOVrOGKXOdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1ODcwMA==", "bodyText": "Maybe we can remove this file from change list ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413358700", "createdAt": "2020-04-22T21:52:51Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -29,6 +30,7 @@\n import java.util.Set;\n import java.util.stream.Collectors;\n import javax.annotation.Nullable;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9a1668b4b30cc2a76b366a52f065b4d0569f550"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxOTQ3OQ==", "bodyText": "Removed", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413519479", "createdAt": "2020-04-23T05:28:29Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -29,6 +30,7 @@\n import java.util.Set;\n import java.util.stream.Collectors;\n import javax.annotation.Nullable;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1ODcwMA=="}, "originalCommit": {"oid": "a9a1668b4b30cc2a76b366a52f065b4d0569f550"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODkwNDc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/samplers/RcaEnabledSampler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMTo1NToyMVrOGKNfMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNToyODozNlrOGKXOqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1OTkyMA==", "bodyText": "I would expect this to return a boolean :)", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413359920", "createdAt": "2020-04-22T21:55:21Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/samplers/RcaEnabledSampler.java", "diffHunk": "@@ -29,12 +30,12 @@ public void sample(SampleAggregator sampleCollector) {\n     sampleCollector.updateStat(RcaRuntimeMetrics.RCA_ENABLED, \"\", isRcaEnabled());\n   }\n \n-  private int isRcaEnabled() {\n+  @VisibleForTesting\n+  int isRcaEnabled() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9a1668b4b30cc2a76b366a52f065b4d0569f550"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxOTUzMQ==", "bodyText": "Done", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/135#discussion_r413519531", "createdAt": "2020-04-23T05:28:36Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/samplers/RcaEnabledSampler.java", "diffHunk": "@@ -29,12 +30,12 @@ public void sample(SampleAggregator sampleCollector) {\n     sampleCollector.updateStat(RcaRuntimeMetrics.RCA_ENABLED, \"\", isRcaEnabled());\n   }\n \n-  private int isRcaEnabled() {\n+  @VisibleForTesting\n+  int isRcaEnabled() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1OTkyMA=="}, "originalCommit": {"oid": "a9a1668b4b30cc2a76b366a52f065b4d0569f550"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2608, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}