{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NTY4MTM4", "number": 370, "title": "Add integ test for queue rejection cluster RCA", "bodyText": "Issue #:\nDescription of changes:\nThis PR will add integ test for queue rejection cluster RCA. Will add integ tests for decision maker & auto tuning piece in a separate PR.\nTests:\nn/a\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-08-13T18:42:09Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/370", "merged": true, "mergeCommit": {"oid": "3f23b251c84d359c788cecf7f1e5bcfff8e0d83b"}, "closed": true, "closedAt": "2020-08-14T21:25:46Z", "author": {"login": "rguo-aws"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-kdO9AH2gAyNDY3NTY4MTM4OjI1NDZkNzJhM2UzMjNmMzBlNzAzMjQ5MDkxZjA3ZjhjZTFjZTQ4ZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-7Z2KgFqTQ2Nzg4MjAxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2546d72a3e323f30e703249091f07f8ce1ce48ea", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/2546d72a3e323f30e703249091f07f8ce1ce48ea", "committedDate": "2020-08-13T18:37:54Z", "message": "Add integ test for queue rejection cluster RCA"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ea109ad3b3531d0515175f4ad08ceb79a0d642e", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/0ea109ad3b3531d0515175f4ad08ceb79a0d642e", "committedDate": "2020-08-13T19:06:33Z", "message": "Merge remote-tracking branch 'origin' into rguo-it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MDgzMDY1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/370#pullrequestreview-467083065", "createdAt": "2020-08-13T19:52:56Z", "commit": {"oid": "2546d72a3e323f30e703249091f07f8ce1ce48ea"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1Mjo1NlrOHAbSzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1Nzo0MFrOHAbcyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwOTIyOQ==", "bodyText": "Maybe we can use the TEST_RESOURCES_DIR in Consts.java and add on top of that ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/370#discussion_r470209229", "createdAt": "2020-08-13T19:52:56Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/queue_tuning/RcaItQueueTuning.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *  A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed\n+ *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.tests.queue_tuning;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.ThreadPoolDimension;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.ThreadPoolType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.ThreadPool_QueueCapacity;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.ThreadPool_RejectedReqs;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AClusterType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AExpect;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AMetric;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ARcaConf;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ARcaGraph;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ATable;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ATuple;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.api.TestApi;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.configs.ClusterType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.configs.HostTag;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.runners.RcaItNotEncryptedRunner;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.tests.queue_tuning.validator.QueueRejectionValidator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.ElasticSearchAnalysisGraph;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.cluster.QueueRejectionClusterRca;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(RcaItNotEncryptedRunner.class)\n+\n+@AClusterType(ClusterType.MULTI_NODE_CO_LOCATED_MASTER)\n+@ARcaGraph(ElasticSearchAnalysisGraph.class)\n+//specify a custom rca.conf to set the rejection-time-period-in-seconds to 5s to reduce runtime\n+@ARcaConf(dataNode = RcaItQueueTuning.QUEUE_TUNING_RESOURCES_DIR + \"rca.conf\")\n+@AMetric(name = ThreadPool_RejectedReqs.class,\n+    dimensionNames = {ThreadPoolDimension.Constants.TYPE_VALUE},\n+    tables = {\n+        @ATable(hostTag = HostTag.DATA_0,\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 1.0, avg = 1.0, min = 1.0, max = 1.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0)\n+            }\n+        ),\n+        @ATable(hostTag = {HostTag.ELECTED_MASTER},\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0)\n+            }\n+        )\n+    }\n+)\n+\n+@AMetric(name = ThreadPool_QueueCapacity.class,\n+    dimensionNames = {ThreadPoolDimension.Constants.TYPE_VALUE},\n+    tables = {\n+        @ATable(hostTag = HostTag.DATA_0,\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 500, avg = 500, min = 500, max = 500),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 1500, avg = 1500, min = 1500, max = 1500)\n+            }\n+        ),\n+        @ATable(hostTag = {HostTag.ELECTED_MASTER},\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 1500, avg = 1500, min = 1500, max = 1500)\n+            }\n+        )\n+    }\n+)\n+public class RcaItQueueTuning {\n+  public static final String QUEUE_TUNING_RESOURCES_DIR =\n+      \"./src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/queue_tuning/resource/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2546d72a3e323f30e703249091f07f8ce1ce48ea"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMDY3MA==", "bodyText": "setTestApi() is an optional method. You can define this, if you want access to the TestApi object. As in this case we are not using that, maybe we can skip this and the class member  private TestApi api; ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/370#discussion_r470210670", "createdAt": "2020-08-13T19:55:36Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/queue_tuning/RcaItQueueTuning.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *  A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed\n+ *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.tests.queue_tuning;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.ThreadPoolDimension;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.ThreadPoolType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.ThreadPool_QueueCapacity;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.ThreadPool_RejectedReqs;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AClusterType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AExpect;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AMetric;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ARcaConf;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ARcaGraph;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ATable;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ATuple;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.api.TestApi;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.configs.ClusterType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.configs.HostTag;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.runners.RcaItNotEncryptedRunner;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.tests.queue_tuning.validator.QueueRejectionValidator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.ElasticSearchAnalysisGraph;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.cluster.QueueRejectionClusterRca;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(RcaItNotEncryptedRunner.class)\n+\n+@AClusterType(ClusterType.MULTI_NODE_CO_LOCATED_MASTER)\n+@ARcaGraph(ElasticSearchAnalysisGraph.class)\n+//specify a custom rca.conf to set the rejection-time-period-in-seconds to 5s to reduce runtime\n+@ARcaConf(dataNode = RcaItQueueTuning.QUEUE_TUNING_RESOURCES_DIR + \"rca.conf\")\n+@AMetric(name = ThreadPool_RejectedReqs.class,\n+    dimensionNames = {ThreadPoolDimension.Constants.TYPE_VALUE},\n+    tables = {\n+        @ATable(hostTag = HostTag.DATA_0,\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 1.0, avg = 1.0, min = 1.0, max = 1.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0)\n+            }\n+        ),\n+        @ATable(hostTag = {HostTag.ELECTED_MASTER},\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0)\n+            }\n+        )\n+    }\n+)\n+\n+@AMetric(name = ThreadPool_QueueCapacity.class,\n+    dimensionNames = {ThreadPoolDimension.Constants.TYPE_VALUE},\n+    tables = {\n+        @ATable(hostTag = HostTag.DATA_0,\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 500, avg = 500, min = 500, max = 500),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 1500, avg = 1500, min = 1500, max = 1500)\n+            }\n+        ),\n+        @ATable(hostTag = {HostTag.ELECTED_MASTER},\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 1500, avg = 1500, min = 1500, max = 1500)\n+            }\n+        )\n+    }\n+)\n+public class RcaItQueueTuning {\n+  public static final String QUEUE_TUNING_RESOURCES_DIR =\n+      \"./src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/queue_tuning/resource/\";\n+  private TestApi api;\n+\n+  @Test\n+  @AExpect(\n+      what = AExpect.Type.REST_API,\n+      on = HostTag.ELECTED_MASTER,\n+      validator = QueueRejectionValidator.class,\n+      forRca = QueueRejectionClusterRca.class,\n+      timeoutSeconds = 500)\n+  public void simple() {\n+  }\n+\n+  public void setTestApi(final TestApi api) {\n+    this.api = api;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2546d72a3e323f30e703249091f07f8ce1ce48ea"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMDk3MQ==", "bodyText": "Maybe we can change the name to something more indicative of what this is testing ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/370#discussion_r470210971", "createdAt": "2020-08-13T19:56:11Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/queue_tuning/RcaItQueueTuning.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *  A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed\n+ *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.tests.queue_tuning;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.ThreadPoolDimension;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.ThreadPoolType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.ThreadPool_QueueCapacity;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.ThreadPool_RejectedReqs;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AClusterType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AExpect;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AMetric;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ARcaConf;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ARcaGraph;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ATable;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ATuple;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.api.TestApi;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.configs.ClusterType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.configs.HostTag;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.runners.RcaItNotEncryptedRunner;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.tests.queue_tuning.validator.QueueRejectionValidator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.ElasticSearchAnalysisGraph;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.cluster.QueueRejectionClusterRca;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(RcaItNotEncryptedRunner.class)\n+\n+@AClusterType(ClusterType.MULTI_NODE_CO_LOCATED_MASTER)\n+@ARcaGraph(ElasticSearchAnalysisGraph.class)\n+//specify a custom rca.conf to set the rejection-time-period-in-seconds to 5s to reduce runtime\n+@ARcaConf(dataNode = RcaItQueueTuning.QUEUE_TUNING_RESOURCES_DIR + \"rca.conf\")\n+@AMetric(name = ThreadPool_RejectedReqs.class,\n+    dimensionNames = {ThreadPoolDimension.Constants.TYPE_VALUE},\n+    tables = {\n+        @ATable(hostTag = HostTag.DATA_0,\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 1.0, avg = 1.0, min = 1.0, max = 1.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0)\n+            }\n+        ),\n+        @ATable(hostTag = {HostTag.ELECTED_MASTER},\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0)\n+            }\n+        )\n+    }\n+)\n+\n+@AMetric(name = ThreadPool_QueueCapacity.class,\n+    dimensionNames = {ThreadPoolDimension.Constants.TYPE_VALUE},\n+    tables = {\n+        @ATable(hostTag = HostTag.DATA_0,\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 500, avg = 500, min = 500, max = 500),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 1500, avg = 1500, min = 1500, max = 1500)\n+            }\n+        ),\n+        @ATable(hostTag = {HostTag.ELECTED_MASTER},\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 1500, avg = 1500, min = 1500, max = 1500)\n+            }\n+        )\n+    }\n+)\n+public class RcaItQueueTuning {\n+  public static final String QUEUE_TUNING_RESOURCES_DIR =\n+      \"./src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/queue_tuning/resource/\";\n+  private TestApi api;\n+\n+  @Test\n+  @AExpect(\n+      what = AExpect.Type.REST_API,\n+      on = HostTag.ELECTED_MASTER,\n+      validator = QueueRejectionValidator.class,\n+      forRca = QueueRejectionClusterRca.class,\n+      timeoutSeconds = 500)\n+  public void simple() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2546d72a3e323f30e703249091f07f8ce1ce48ea"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMTc4Nw==", "bodyText": "Integration tests can become complicated and sometimes it might be good to add doc comments stating what scenarios we are testing and what are the expectations ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/370#discussion_r470211787", "createdAt": "2020-08-13T19:57:40Z", "author": {"login": "yojs"}, "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/queue_tuning/RcaItQueueTuning.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *  A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed\n+ *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.tests.queue_tuning;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.ThreadPoolDimension;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.ThreadPoolType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.ThreadPool_QueueCapacity;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.ThreadPool_RejectedReqs;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AClusterType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AExpect;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.AMetric;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ARcaConf;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ARcaGraph;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ATable;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.annotations.ATuple;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.api.TestApi;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.configs.ClusterType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.configs.HostTag;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.framework.runners.RcaItNotEncryptedRunner;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.integTests.tests.queue_tuning.validator.QueueRejectionValidator;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.ElasticSearchAnalysisGraph;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.cluster.QueueRejectionClusterRca;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(RcaItNotEncryptedRunner.class)\n+\n+@AClusterType(ClusterType.MULTI_NODE_CO_LOCATED_MASTER)\n+@ARcaGraph(ElasticSearchAnalysisGraph.class)\n+//specify a custom rca.conf to set the rejection-time-period-in-seconds to 5s to reduce runtime\n+@ARcaConf(dataNode = RcaItQueueTuning.QUEUE_TUNING_RESOURCES_DIR + \"rca.conf\")\n+@AMetric(name = ThreadPool_RejectedReqs.class,\n+    dimensionNames = {ThreadPoolDimension.Constants.TYPE_VALUE},\n+    tables = {\n+        @ATable(hostTag = HostTag.DATA_0,\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 1.0, avg = 1.0, min = 1.0, max = 1.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0)\n+            }\n+        ),\n+        @ATable(hostTag = {HostTag.ELECTED_MASTER},\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0)\n+            }\n+        )\n+    }\n+)\n+\n+@AMetric(name = ThreadPool_QueueCapacity.class,\n+    dimensionNames = {ThreadPoolDimension.Constants.TYPE_VALUE},\n+    tables = {\n+        @ATable(hostTag = HostTag.DATA_0,\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 500, avg = 500, min = 500, max = 500),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 1500, avg = 1500, min = 1500, max = 1500)\n+            }\n+        ),\n+        @ATable(hostTag = {HostTag.ELECTED_MASTER},\n+            tuple = {\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.WRITE_NAME},\n+                    sum = 0.0, avg = 0.0, min = 0.0, max = 0.0),\n+                @ATuple(dimensionValues = {ThreadPoolType.Constants.SEARCH_NAME},\n+                    sum = 1500, avg = 1500, min = 1500, max = 1500)\n+            }\n+        )\n+    }\n+)\n+public class RcaItQueueTuning {\n+  public static final String QUEUE_TUNING_RESOURCES_DIR =\n+      \"./src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/integTests/tests/queue_tuning/resource/\";\n+  private TestApi api;\n+\n+  @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2546d72a3e323f30e703249091f07f8ce1ce48ea"}, "originalPosition": 93}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31d52b693065440bd6404055c26329b659ab343c", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/31d52b693065440bd6404055c26329b659ab343c", "committedDate": "2020-08-13T21:18:13Z", "message": "resolve merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d64f81feb48f01da90f19273f1c506062a083cb0", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d64f81feb48f01da90f19273f1c506062a083cb0", "committedDate": "2020-08-14T20:20:01Z", "message": "Merge remote-tracking branch 'origin/master' into rguo-it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1606aebc0e46a26a41b7544752963d61bc954094", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/1606aebc0e46a26a41b7544752963d61bc954094", "committedDate": "2020-08-14T20:44:07Z", "message": "Address PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff24fbf45b2e0a129d64bf90e9ce1068a5101ec8", "author": {"user": {"login": "rguo-aws", "name": "Ruizhen Guo"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/ff24fbf45b2e0a129d64bf90e9ce1068a5101ec8", "committedDate": "2020-08-14T20:47:42Z", "message": "address checkstyle issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3ODY4MTYx", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/370#pullrequestreview-467868161", "createdAt": "2020-08-14T20:52:07Z", "commit": {"oid": "ff24fbf45b2e0a129d64bf90e9ce1068a5101ec8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3ODgyMDE5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/370#pullrequestreview-467882019", "createdAt": "2020-08-14T21:22:01Z", "commit": {"oid": "ff24fbf45b2e0a129d64bf90e9ce1068a5101ec8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 875, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}