{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MDY2NjYw", "number": 274, "title": "Make RCA framework NOT use ClusterDetailsEventProcessor", "bodyText": "Using the static classes have problems as one instance of JVM can have only one instance of the class running. ClusterDetailsEventProcessor is an important class as it contains the instance details. If we want to simutate multiple RCAControllers running as part of a single JVM for the purpose of IntegrationTest framework, we should make ClusterDetailsEventProcessor a non-static class, such that each RcaController can work with its own. This is not the complete removal of the static methods in the ClusterDetailsEventProcessor, but just making the RCA framework not use them. There will be follow up PRs that will eventually make ClusterDetailsEventProcessor non-static\nIssue #, if available:\nDescription of changes:\nTests:\nCode coverage percentage for this patch:\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-07-14T19:20:26Z", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/274", "merged": true, "mergeCommit": {"oid": "95c19b69675ae5d3b246cf9fb4171de624f94517"}, "closed": true, "closedAt": "2020-07-16T00:42:36Z", "author": {"login": "yojs"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1OX_ygFqTQ0OTE5MzcxOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1UNQdgFqTQ0OTQzMTk0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTkzNzE5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/274#pullrequestreview-449193719", "createdAt": "2020-07-15T17:48:57Z", "commit": {"oid": "74f34c413f5bee247c653169890d64dce8cb534d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0ODo1N1rOGyJJ1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0ODo1N1rOGyJJ1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMTk1OA==", "bodyText": "do wen need to check whether appContext is null here to avoid null pointer exception ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/274#discussion_r455231958", "createdAt": "2020-07-15T17:48:57Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/Node.java", "diffHunk": "@@ -187,4 +194,20 @@ public void setLocalFlowUnit(T localFlowUnit) {\n   public void readRcaConf(RcaConf conf) {\n     return;\n   }\n+\n+  public void setAppContext(final AppContext appContext) {\n+    this.appContext = appContext;\n+  }\n+\n+  public InstanceDetails getInstanceDetails() {\n+    return this.appContext.getMyInstanceDetails();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74f34c413f5bee247c653169890d64dce8cb534d"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTk0MzMw", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/274#pullrequestreview-449194330", "createdAt": "2020-07-15T17:49:48Z", "commit": {"oid": "74f34c413f5bee247c653169890d64dce8cb534d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OTo0OFrOGyJMHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OTo0OFrOGyJMHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMjU0Mg==", "bodyText": "add javadoc for this function ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/274#discussion_r455232542", "createdAt": "2020-07-15T17:49:48Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/Node.java", "diffHunk": "@@ -187,4 +194,20 @@ public void setLocalFlowUnit(T localFlowUnit) {\n   public void readRcaConf(RcaConf conf) {\n     return;\n   }\n+\n+  public void setAppContext(final AppContext appContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74f34c413f5bee247c653169890d64dce8cb534d"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f19bf43b58d07103b5caecb4de01cf86859b39ef", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/f19bf43b58d07103b5caecb4de01cf86859b39ef", "committedDate": "2020-07-15T17:56:30Z", "message": "Make RCA framework NOT use ClusterDetailsEventProcessor\n\nUsing the static classes have problems as one instance of JVM can have only one instance of the class running. ClusterDetailsEventProcessor is an important class as it contains the instance details. If we want to simutate multiple RCAControllers running as part of a single JVM for the purpose of IntegrationTest framework, we should make ClusterDetailsEventProcessor a non-static class, such that each RcaController can work with its own. This is not the complete removal of the static methods in the ClusterDetailsEventProcessor, but just making the RCA framework not use them. There will be follow up PRs that will eventually make ClusterDetailsEventProcessor non-static"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df68c3889812ed62f22d3c6c3995e7a4950712c6", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/df68c3889812ed62f22d3c6c3995e7a4950712c6", "committedDate": "2020-07-15T17:56:30Z", "message": "Removing all occurences of \"ClusterDetailsEventProcessor.getCurrentNodeDetails\" except for periodic samplers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ba6a94937d500c4bce72d2e35a1b34f906ded57", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/7ba6a94937d500c4bce72d2e35a1b34f906ded57", "committedDate": "2020-07-15T17:56:30Z", "message": "Gave RCA scheduler access to AppContext instead of just the current node instance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90b21d92d94f3dd69b2d897d70a7436116973375", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/90b21d92d94f3dd69b2d897d70a7436116973375", "committedDate": "2020-07-15T17:56:31Z", "message": "This should remove all the usage of static ClusterDetailsEventProcessor from the RCA code. Except for the Periodic Samplers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70bdcd878c1cd2a265bbba9a6a9242e197d6a4e0", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/70bdcd878c1cd2a265bbba9a6a9242e197d6a4e0", "committedDate": "2020-07-15T17:56:31Z", "message": "removed the usage of static getDataNodesDetails() call from QueryMetricsRequestHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc0f4ef45ec81b34e4071e7fa6c9cedf9458cf6b", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/fc0f4ef45ec81b34e4071e7fa6c9cedf9458cf6b", "committedDate": "2020-07-15T18:28:37Z", "message": "resolving the merge conflicts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b90ee0779bb7e77fd6ac3c907b0c27f36cde272b", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/b90ee0779bb7e77fd6ac3c907b0c27f36cde272b", "committedDate": "2020-07-15T17:47:59Z", "message": "removed the usage of static getDataNodesDetails() call from QueryMetricsRequestHandler"}, "afterCommit": {"oid": "fc0f4ef45ec81b34e4071e7fa6c9cedf9458cf6b", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/fc0f4ef45ec81b34e4071e7fa6c9cedf9458cf6b", "committedDate": "2020-07-15T18:28:37Z", "message": "resolving the merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTg0NTU4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/274#pullrequestreview-449184558", "createdAt": "2020-07-15T17:36:12Z", "commit": {"oid": "74f34c413f5bee247c653169890d64dce8cb534d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODowMjoxNVrOGyJqNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODowMjoxNVrOGyJqNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI0MDI0Ng==", "bodyText": "Just a minor nit, should we return an immutable list here as well to be consistent?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/274#discussion_r455240246", "createdAt": "2020-07-15T18:02:15Z", "author": {"login": "ktkrg"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/AppContext.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ *  A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed\n+ *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.InstanceDetails;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.reader.ClusterDetailsEventProcessor;\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.collect.ImmutableList;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The PA agent process is composed of multiple components. The PA Reader and RCA are two such components that are\n+ * independent in a way they process information but also share some information such as the node and the cluster\n+ * details. Today, some of these information is accessed by calling static methods and members. This is a bad idea.\n+ * This class encapsulates such information and is created right at the start in the {@code PerformanceAnalyzerApp}.\n+ */\n+public class AppContext {\n+  private volatile ClusterDetailsEventProcessor clusterDetailsEventProcessor;\n+\n+  @VisibleForTesting\n+  private volatile List<InstanceDetails> instances;\n+\n+  public AppContext() {\n+    this.clusterDetailsEventProcessor = null;\n+  }\n+\n+  public void setClusterDetailsEventProcessor(final ClusterDetailsEventProcessor clusterDetailsEventProcessor) {\n+    this.clusterDetailsEventProcessor = clusterDetailsEventProcessor;\n+  }\n+\n+  public InstanceDetails getMyInstanceDetails() {\n+    ClusterDetailsEventProcessor.NodeDetails nodeDetails = clusterDetailsEventProcessor.getCurrentNodeDetails();\n+\n+    InstanceDetails ret;\n+    if (nodeDetails == null) {\n+      ret = new InstanceDetails(AllMetrics.NodeRole.UNKNOWN);\n+    } else {\n+      ret = new InstanceDetails(\n+          AllMetrics.NodeRole.valueOf(nodeDetails.getRole()),\n+          nodeDetails.getId(),\n+          nodeDetails.getHostAddress(),\n+          nodeDetails.getIsMasterNode());\n+    }\n+    return ret;\n+  }\n+\n+  /**\n+   * Can be used to get all the nodes in the cluster.\n+   *\n+   * @return Returns an empty list of the details are not available or else it provides the immutable list of nodes in\n+   * the cluster.\n+   */\n+  public List<InstanceDetails> getAllClusterInstances() {\n+    return getInstanceDetailsFromNodeDetails(clusterDetailsEventProcessor.getNodesDetails());\n+  }\n+\n+  public List<InstanceDetails> getDataNodeInstances() {\n+    return getInstanceDetailsFromNodeDetails(clusterDetailsEventProcessor.getDataNodesDetails());\n+  }\n+\n+  private static List<InstanceDetails> getInstanceDetailsFromNodeDetails(\n+      final List<ClusterDetailsEventProcessor.NodeDetails> nodeDetails) {\n+    List<InstanceDetails> instances = new ArrayList<>();\n+\n+    for (ClusterDetailsEventProcessor.NodeDetails node : nodeDetails) {\n+      InstanceDetails instanceDetails = new InstanceDetails(\n+          AllMetrics.NodeRole.valueOf(node.getRole()), node.getId(), node.getHostAddress(), node.getIsMasterNode());\n+      instances.add(instanceDetails);\n+    }\n+    return ImmutableList.copyOf(instances);\n+  }\n+\n+  public List<String> getPeerInstanceIps() {\n+    return getAllClusterInstances().stream()\n+        .skip(1)  // Skipping the first instance as it is self.\n+        .map(InstanceDetails::getInstanceIp)\n+        .collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74f34c413f5bee247c653169890d64dce8cb534d"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5Mjg1MzE3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/274#pullrequestreview-449285317", "createdAt": "2020-07-15T19:58:20Z", "commit": {"oid": "fc0f4ef45ec81b34e4071e7fa6c9cedf9458cf6b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "377fa2d80234d7281b30fa2ce93830490f857c7c", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/377fa2d80234d7281b30fa2ce93830490f857c7c", "committedDate": "2020-07-15T21:03:35Z", "message": "Handling null appContext in Node.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee515f976fce589cc87aa6767b520a31600a6015", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/ee515f976fce589cc87aa6767b520a31600a6015", "committedDate": "2020-07-15T21:55:29Z", "message": "Fixing some more UTs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c82255bd261c9acb560394054ef4347965da5bb", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/5c82255bd261c9acb560394054ef4347965da5bb", "committedDate": "2020-07-16T00:26:00Z", "message": "make getPeerInstanceIps return an immutable list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8387e143a046e6c7f1baee84469dd750509e76d", "author": {"user": {"login": "yojs", "name": "Joydeep Sinha"}}, "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/b8387e143a046e6c7f1baee84469dd750509e76d", "committedDate": "2020-07-16T00:33:05Z", "message": "removing all unused imports of ClusterDetailsEventProcessor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDMxOTQ2", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/274#pullrequestreview-449431946", "createdAt": "2020-07-16T00:36:39Z", "commit": {"oid": "b8387e143a046e6c7f1baee84469dd750509e76d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1075, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}