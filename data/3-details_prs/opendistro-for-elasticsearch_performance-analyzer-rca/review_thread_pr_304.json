{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NTIxNjYx", "number": 304, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzowMzowNlrOER_PNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoxMTo1OFrOER_VRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk3MzMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/SQLitePersistor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzowMzowNlrOG2_5Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoxMzowMlrOG3ACcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMzExNQ==", "bodyText": "This is generally an anti pattern. Is there a reason you're throwing away the stacktrace?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460323115", "createdAt": "2020-07-24T23:03:06Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/SQLitePersistor.java", "diffHunk": "@@ -362,7 +362,7 @@ private JsonElement readTemperatureProfileRca(String rca) {\n         response.addNestedSummaryList(nodeLevelDimSummary);\n       }\n     } catch (DataAccessException dex) {\n-      LOG.error(\"Failed to read temperature profile RCA for {}\", rca, dex);\n+      LOG.warn(\"Failed to read temperature profile RCA for {}. Msg: {}\", rca, dex.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTQ4OA==", "bodyText": "Not being able to find the RCA table is justified if the query is made early enough that one is not generated. The long stack trace gives people an impression of an error, when this can happen. That's why I removed the stacktrace with just a message.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460325488", "createdAt": "2020-07-24T23:13:02Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/SQLitePersistor.java", "diffHunk": "@@ -362,7 +362,7 @@ private JsonElement readTemperatureProfileRca(String rca) {\n         response.addNestedSummaryList(nodeLevelDimSummary);\n       }\n     } catch (DataAccessException dex) {\n-      LOG.error(\"Failed to read temperature profile RCA for {}\", rca, dex);\n+      LOG.warn(\"Failed to read temperature profile RCA for {}. Msg: {}\", rca, dex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMzExNQ=="}, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk4MDEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/AppContext.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzowNjo1NVrOG2_8uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzozMTowNlrOG3ARxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDAyNw==", "bodyText": "should we also call the default constructor this() here in case something else needs to be initialized in AppContext ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460324027", "createdAt": "2020-07-24T23:06:55Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/AppContext.java", "diffHunk": "@@ -38,6 +38,10 @@ public AppContext() {\n     this.clusterDetailsEventProcessor = null;\n   }\n \n+  public AppContext(AppContext other) {\n+    this.clusterDetailsEventProcessor = new ClusterDetailsEventProcessor(other.clusterDetailsEventProcessor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNjU4Ng==", "bodyText": "This is a copy constructor. So ideally it should copy everything but after rebasing I saw, you added a new member which is a cache. I am sure we don't want to make a copy of it.\nSo, I will call this() as you sugested", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460326586", "createdAt": "2020-07-24T23:17:55Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/AppContext.java", "diffHunk": "@@ -38,6 +38,10 @@ public AppContext() {\n     this.clusterDetailsEventProcessor = null;\n   }\n \n+  public AppContext(AppContext other) {\n+    this.clusterDetailsEventProcessor = new ClusterDetailsEventProcessor(other.clusterDetailsEventProcessor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDAyNw=="}, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyOTQxNA==", "bodyText": "Thinking more about it, I will explicitly initialize the other. Calling other() initializes the other with default which we may not intend.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460329414", "createdAt": "2020-07-24T23:31:06Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/AppContext.java", "diffHunk": "@@ -38,6 +38,10 @@ public AppContext() {\n     this.clusterDetailsEventProcessor = null;\n   }\n \n+  public AppContext(AppContext other) {\n+    this.clusterDetailsEventProcessor = new ClusterDetailsEventProcessor(other.clusterDetailsEventProcessor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDAyNw=="}, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk4MTEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzowNzo0NlrOG2_9XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzozMjo1NFrOG3ATJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDE4OA==", "bodyText": "same as above", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460324188", "createdAt": "2020-07-24T23:07:46Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -40,6 +40,19 @@\n    */\n   private volatile ImmutableList<NodeDetails> nodesDetails = null;\n \n+  public ClusterDetailsEventProcessor() {}\n+\n+  public ClusterDetailsEventProcessor(final ClusterDetailsEventProcessor other) {\n+    if (other.nodesDetails != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyOTc2NQ==", "bodyText": "Similar argument", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460329765", "createdAt": "2020-07-24T23:32:54Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -40,6 +40,19 @@\n    */\n   private volatile ImmutableList<NodeDetails> nodesDetails = null;\n \n+  public ClusterDetailsEventProcessor() {}\n+\n+  public ClusterDetailsEventProcessor(final ClusterDetailsEventProcessor other) {\n+    if (other.nodesDetails != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDE4OA=="}, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk4NTUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoxMDowMVrOG2__wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzozMzoxMFrOG3ATUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDgwMQ==", "bodyText": "should we add a few comments here to explain why we want to do this check ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460324801", "createdAt": "2020-07-24T23:10:01Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessor.java", "diffHunk": "@@ -466,6 +463,10 @@ is ready so it starts to read that file (go back two windows and\n \n     emitMetrics(currWindowStartTime);\n \n+    if (appContext != null && !clusterDetailsEventsProcessor.getNodesDetails().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTk2MA==", "bodyText": "^ I was confused by this too, I had to look into AppContext to figure out why a comment would be nice", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460325960", "createdAt": "2020-07-24T23:15:03Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessor.java", "diffHunk": "@@ -466,6 +463,10 @@ is ready so it starts to read that file (go back two windows and\n \n     emitMetrics(currWindowStartTime);\n \n+    if (appContext != null && !clusterDetailsEventsProcessor.getNodesDetails().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDgwMQ=="}, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyOTgwOA==", "bodyText": "Good point. Will do", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460329808", "createdAt": "2020-07-24T23:33:10Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessor.java", "diffHunk": "@@ -466,6 +463,10 @@ is ready so it starts to read that file (go back two windows and\n \n     emitMetrics(currWindowStartTime);\n \n+    if (appContext != null && !clusterDetailsEventsProcessor.getNodesDetails().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDgwMQ=="}, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk4NjcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoxMDo0NFrOG3AAag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzozOTowMVrOG3AXxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDk3MA==", "bodyText": "Nit: use a builder for this instead of an alloc + copy\nImmutableList.Builder builder = new ImmutableList.Builder<NodeDetails>();\nfor (final NodeDetails oldDetails : other.nodesDetails) {\n        builder.add(new NodeDetails(oldDetails));\n}\nthis.nodesDetails = builder.build();", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460324970", "createdAt": "2020-07-24T23:10:44Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -40,6 +40,19 @@\n    */\n   private volatile ImmutableList<NodeDetails> nodesDetails = null;\n \n+  public ClusterDetailsEventProcessor() {}\n+\n+  public ClusterDetailsEventProcessor(final ClusterDetailsEventProcessor other) {\n+    if (other.nodesDetails != null) {\n+      List<NodeDetails> nodeDetails = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMDk1MA==", "bodyText": "Thanks a lot ! good point", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460330950", "createdAt": "2020-07-24T23:39:01Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -40,6 +40,19 @@\n    */\n   private volatile ImmutableList<NodeDetails> nodesDetails = null;\n \n+  public ClusterDetailsEventProcessor() {}\n+\n+  public ClusterDetailsEventProcessor(final ClusterDetailsEventProcessor other) {\n+    if (other.nodesDetails != null) {\n+      List<NodeDetails> nodeDetails = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDk3MA=="}, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk4ODg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoxMTo1OFrOG3ABiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzo0MDoyOFrOG3AY0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTI1Ng==", "bodyText": "Nit: Annotate with @nonnull or add null check", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460325256", "createdAt": "2020-07-24T23:11:58Z", "author": {"login": "sidheart"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -148,6 +161,13 @@ public NodeDetails(AllMetrics.NodeRole role, String id, String hostAddress, bool\n       this.role = role.toString();\n     }\n \n+    public NodeDetails(NodeDetails other) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMTIxNg==", "bodyText": "makes sense. Thanks !", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460331216", "createdAt": "2020-07-24T23:40:28Z", "author": {"login": "yojs"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -148,6 +161,13 @@ public NodeDetails(AllMetrics.NodeRole role, String id, String hostAddress, bool\n       this.role = role.toString();\n     }\n \n+    public NodeDetails(NodeDetails other) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTI1Ng=="}, "originalCommit": {"oid": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2552, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}