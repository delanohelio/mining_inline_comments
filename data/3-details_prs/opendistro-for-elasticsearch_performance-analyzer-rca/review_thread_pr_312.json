{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NTcxMjQ3", "number": 312, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODoyOTowMlrOES74HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0MDoxOFrOES8H5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjkwODQ0OnYy", "diffSide": "LEFT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/metrics/AllMetrics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODoyOTowMlrOG4ZNTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0NDoyNFrOG4ZvOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjQ0NQ==", "bodyText": "is there any specific reason to not follow the naming convention ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461786445", "createdAt": "2020-07-28T18:29:02Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/metrics/AllMetrics.java", "diffHunk": "@@ -194,9 +204,9 @@ public String toString() {\n     }\n \n     public static class Constants {\n-      public static final String FIELD_DATA_CACHE_NAME = \"Field_Data_Cache\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5NTEyOQ==", "bodyText": "As discussed, given this is the column field, we will use the lower case naming convention here.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461795129", "createdAt": "2020-07-28T18:44:24Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/metrics/AllMetrics.java", "diffHunk": "@@ -194,9 +204,9 @@ public String toString() {\n     }\n \n     public static class Constants {\n-      public static final String FIELD_DATA_CACHE_NAME = \"Field_Data_Cache\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjQ0NQ=="}, "originalCommit": {"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjkwOTYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODoyOToyMVrOG4ZN_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0MDoxNlrOG4ZmsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjYyMA==", "bodyText": "remove ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461786620", "createdAt": "2020-07-28T18:29:21Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "diffHunk": "@@ -69,6 +76,29 @@ private void collectQueueCapacity(MetricFlowUnit flowUnit) {\n     }\n   }\n \n+  private void collectCacheMaxSize(MetricFlowUnit cacheMaxSize) {\n+    double fieldDataCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+            CACHE_TYPE.getField(), CacheType.FIELD_DATA_CACHE.toString(), MetricsDB.MAX);\n+    LOG.info(\"MOCHI, Field Data cache max size is {}\", fieldDataCacheMaxSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5Mjk0NA==", "bodyText": "Removed.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461792944", "createdAt": "2020-07-28T18:40:16Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "diffHunk": "@@ -69,6 +76,29 @@ private void collectQueueCapacity(MetricFlowUnit flowUnit) {\n     }\n   }\n \n+  private void collectCacheMaxSize(MetricFlowUnit cacheMaxSize) {\n+    double fieldDataCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+            CACHE_TYPE.getField(), CacheType.FIELD_DATA_CACHE.toString(), MetricsDB.MAX);\n+    LOG.info(\"MOCHI, Field Data cache max size is {}\", fieldDataCacheMaxSize);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjYyMA=="}, "originalCommit": {"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjkxMDIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODoyOTozM1rOG4ZOZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0MDoyNVrOG4ZnAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjcyNQ==", "bodyText": "remove this line ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461786725", "createdAt": "2020-07-28T18:29:33Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "diffHunk": "@@ -69,6 +76,29 @@ private void collectQueueCapacity(MetricFlowUnit flowUnit) {\n     }\n   }\n \n+  private void collectCacheMaxSize(MetricFlowUnit cacheMaxSize) {\n+    double fieldDataCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+            CACHE_TYPE.getField(), CacheType.FIELD_DATA_CACHE.toString(), MetricsDB.MAX);\n+    LOG.info(\"MOCHI, Field Data cache max size is {}\", fieldDataCacheMaxSize);\n+\n+    if (!Double.isNaN(fieldDataCacheMaxSize)) {\n+      configResult.put(ResourceUtil.FIELD_DATA_CACHE_MAX_SIZE, fieldDataCacheMaxSize);\n+    }\n+    else {\n+      LOG.error(\"Field Data cache max size is NaN\");\n+    }\n+\n+    double shardRequestCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+            CACHE_TYPE.getField(), CacheType.SHARD_REQUEST_CACHE.toString(), MetricsDB.MAX);\n+    LOG.info(\"MOCHI, Shard Request cache max size is {}\", shardRequestCacheMaxSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MzAyNA==", "bodyText": "Removed.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461793024", "createdAt": "2020-07-28T18:40:25Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "diffHunk": "@@ -69,6 +76,29 @@ private void collectQueueCapacity(MetricFlowUnit flowUnit) {\n     }\n   }\n \n+  private void collectCacheMaxSize(MetricFlowUnit cacheMaxSize) {\n+    double fieldDataCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+            CACHE_TYPE.getField(), CacheType.FIELD_DATA_CACHE.toString(), MetricsDB.MAX);\n+    LOG.info(\"MOCHI, Field Data cache max size is {}\", fieldDataCacheMaxSize);\n+\n+    if (!Double.isNaN(fieldDataCacheMaxSize)) {\n+      configResult.put(ResourceUtil.FIELD_DATA_CACHE_MAX_SIZE, fieldDataCacheMaxSize);\n+    }\n+    else {\n+      LOG.error(\"Field Data cache max size is NaN\");\n+    }\n+\n+    double shardRequestCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+            CACHE_TYPE.getField(), CacheType.SHARD_REQUEST_CACHE.toString(), MetricsDB.MAX);\n+    LOG.info(\"MOCHI, Shard Request cache max size is {}\", shardRequestCacheMaxSize);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjcyNQ=="}, "originalCommit": {"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjkyMjIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozMjo0OVrOG4ZV9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozNToyM1rOG4ZcEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4ODY2MQ==", "bodyText": "can we also add the node config cluster RCA altogether ?", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461788661", "createdAt": "2020-07-28T18:32:49Z", "author": {"login": "rguo-aws"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -180,6 +183,19 @@ public void construct() {\n     queueHealthDecider.addTag(TAG_LOCUS, LOCUS_MASTER_NODE);\n     queueHealthDecider.addAllUpstreams(Collections.singletonList(queueRejectionClusterRca));\n \n+    // Node Config Collector\n+    ThreadPool_QueueCapacity queueCapacity = new ThreadPool_QueueCapacity();\n+    queueCapacity.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    addLeaf(queueCapacity);\n+\n+    Cache_Max_Size cacheMaxSize =  new Cache_Max_Size(EVALUATION_INTERVAL_SECONDS);\n+    cacheMaxSize.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    addLeaf(cacheMaxSize);\n+\n+    NodeConfigCollector nodeConfigCollector = new NodeConfigCollector(RCA_PERIOD, queueCapacity, cacheMaxSize);\n+    nodeConfigCollector.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    nodeConfigCollector.addAllUpstreams(Arrays.asList(threadpool_RejectedReqs, cacheMaxSize));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MDIyNg==", "bodyText": "Sure, let me add the Cluster RCA as well.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461790226", "createdAt": "2020-07-28T18:35:23Z", "author": {"login": "khushbr"}, "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -180,6 +183,19 @@ public void construct() {\n     queueHealthDecider.addTag(TAG_LOCUS, LOCUS_MASTER_NODE);\n     queueHealthDecider.addAllUpstreams(Collections.singletonList(queueRejectionClusterRca));\n \n+    // Node Config Collector\n+    ThreadPool_QueueCapacity queueCapacity = new ThreadPool_QueueCapacity();\n+    queueCapacity.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    addLeaf(queueCapacity);\n+\n+    Cache_Max_Size cacheMaxSize =  new Cache_Max_Size(EVALUATION_INTERVAL_SECONDS);\n+    cacheMaxSize.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    addLeaf(cacheMaxSize);\n+\n+    NodeConfigCollector nodeConfigCollector = new NodeConfigCollector(RCA_PERIOD, queueCapacity, cacheMaxSize);\n+    nodeConfigCollector.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    nodeConfigCollector.addAllUpstreams(Arrays.asList(threadpool_RejectedReqs, cacheMaxSize));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4ODY2MQ=="}, "originalCommit": {"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mjk0ODg2OnYy", "diffSide": "RIGHT", "path": "src/main/proto/inter_node_rpc_service.proto", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0MDoxOFrOG4Zmxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo1NToxNFrOG4aHkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5Mjk2Nw==", "bodyText": "I thought cache max size was in bytes.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461792967", "createdAt": "2020-07-28T18:40:18Z", "author": {"login": "sruti1312"}, "path": "src/main/proto/inter_node_rpc_service.proto", "diffHunk": "@@ -94,6 +94,7 @@ enum MetricEnum {\n   // cache\n   CACHE_EVICTION = 10 [(additional_fields).name = \"cache eviction\", (additional_fields).description = \"cache eviction count\"];\n   CACHE_HIT = 11 [(additional_fields).name = \"cache hit\", (additional_fields).description = \"cache hit count\"];\n+  CACHE_MAX_SIZE = 12 [(additional_fields).name = \"cache max size\", (additional_fields).description = \"max cache size in KB\"];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMTM2MQ==", "bodyText": "You are right, the KB conversion we have in RCA itself. Updating this.", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461801361", "createdAt": "2020-07-28T18:55:14Z", "author": {"login": "khushbr"}, "path": "src/main/proto/inter_node_rpc_service.proto", "diffHunk": "@@ -94,6 +94,7 @@ enum MetricEnum {\n   // cache\n   CACHE_EVICTION = 10 [(additional_fields).name = \"cache eviction\", (additional_fields).description = \"cache eviction count\"];\n   CACHE_HIT = 11 [(additional_fields).name = \"cache hit\", (additional_fields).description = \"cache hit count\"];\n+  CACHE_MAX_SIZE = 12 [(additional_fields).name = \"cache max size\", (additional_fields).description = \"max cache size in KB\"];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5Mjk2Nw=="}, "originalCommit": {"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2295, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}