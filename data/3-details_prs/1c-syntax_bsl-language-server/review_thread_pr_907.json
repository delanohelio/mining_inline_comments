{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NzAxNzc2", "number": 907, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1ODoxMVrODaa3KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1OToxMVrODaa4Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDI5NjcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1ODoxMVrOFhXNiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDo0MTo0NVrOFhZ4bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzYyNw==", "bodyText": "\u0430 \u0437\u0434\u0435\u0441\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f boxed-\u0442\u0438\u043f \u0434\u043b\u044f index?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370527627", "createdAt": "2020-01-24T08:58:11Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))\n+      .map(child -> (BSLParserRuleContext) child)\n+      .collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438\n+   */\n+  public static Collection<ParserRuleContext> findAllRuleNodes(ParseTree t, Integer... index) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzMDUzNw==", "bodyText": "\u0434\u0430", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370530537", "createdAt": "2020-01-24T09:06:05Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))\n+      .map(child -> (BSLParserRuleContext) child)\n+      .collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438\n+   */\n+  public static Collection<ParserRuleContext> findAllRuleNodes(ParseTree t, Integer... index) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzYyNw=="}, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzMTIyNQ==", "bodyText": "\u0437\u0430\u0447\u0435\u043c? :)", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370531225", "createdAt": "2020-01-24T09:08:02Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))\n+      .map(child -> (BSLParserRuleContext) child)\n+      .collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438\n+   */\n+  public static Collection<ParserRuleContext> findAllRuleNodes(ParseTree t, Integer... index) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzYyNw=="}, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzNzc3MA==", "bodyText": "\u043d\u0443\u0443\u0443 ... \u043d\u0430 \u0441\u0442\u0440\u0438\u043c \u0438\u043d\u0442\u043e\u0432 \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0442\u044c?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370537770", "createdAt": "2020-01-24T09:24:44Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))\n+      .map(child -> (BSLParserRuleContext) child)\n+      .collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438\n+   */\n+  public static Collection<ParserRuleContext> findAllRuleNodes(ParseTree t, Integer... index) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzYyNw=="}, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzODk4NQ==", "bodyText": "\u043d\u0435, \u044f \u043d\u0435 \u043f\u0440\u043e \u044d\u0442\u043e. \u043f\u043e\u0447\u0435\u043c\u0443 \u043d\u0435\u043b\u044c\u0437\u044f \u0443\u043a\u0430\u0437\u0430\u0442\u044c int... index, \u043f\u043e\u0447\u0435\u043c\u0443 \u0438\u043c\u0435\u043d\u043d\u043e Integer... index ?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370538985", "createdAt": "2020-01-24T09:27:36Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))\n+      .map(child -> (BSLParserRuleContext) child)\n+      .collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438\n+   */\n+  public static Collection<ParserRuleContext> findAllRuleNodes(ParseTree t, Integer... index) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzYyNw=="}, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU0MDA3Nw==", "bodyText": "\u043d\u0435 \u0445\u043e\u0447\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u0435\u043b\u0430\u0442\u044c", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370540077", "createdAt": "2020-01-24T09:30:18Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))\n+      .map(child -> (BSLParserRuleContext) child)\n+      .collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438\n+   */\n+  public static Collection<ParserRuleContext> findAllRuleNodes(ParseTree t, Integer... index) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzYyNw=="}, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU0MTA0OQ==", "bodyText": "\u043d\u0443 \u0438\u043b\u0438 \u044f \u0442\u0443\u043f\u043e\u0439", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370541049", "createdAt": "2020-01-24T09:32:37Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))\n+      .map(child -> (BSLParserRuleContext) child)\n+      .collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438\n+   */\n+  public static Collection<ParserRuleContext> findAllRuleNodes(ParseTree t, Integer... index) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzYyNw=="}, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU3MTM3NA==", "bodyText": "\u0434\u0430, \u0447\u0442\u043e\u0431\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u0430\u043c\u0438, \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u044f\u0432\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u0431\u043e\u043a\u0441\u0438\u043d\u0433 \u0438\u0437 \u0441\u0442\u0440\u0438\u043c\u0430 \u0438 \u0441\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0442\u044c \u0438\u0445 \u0432 List. \u0445\u043e\u0442\u044f \u043b\u0443\u0447\u0448\u0435 \u0432 Set, \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435, \u0442\u0430\u043a \u043a\u0430\u043a List#contains \u0438\u043c\u0435\u0435\u0442 O(n), \u0430 Set#contains - O(1). \u041d\u043e \u0442\u0430\u043a \u043a\u0430\u043a \u0443 \u043d\u0430\u0441 \u0442\u0443\u0434\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u0432\u0441\u0435\u0433\u0434\u0430 1/2 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u044d\u0442\u043e \u043d\u0435 \u0441\u0442\u0440\u0430\u0448\u043d\u043e.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370571374", "createdAt": "2020-01-24T10:41:45Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))\n+      .map(child -> (BSLParserRuleContext) child)\n+      .collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438\n+   */\n+  public static Collection<ParserRuleContext> findAllRuleNodes(ParseTree t, Integer... index) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzYyNw=="}, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDI5NzE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1ODoyMFrOFhXNwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1ODoyMFrOFhXNwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzY4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438\n          \n          \n            \n               * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u043e\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370527681", "createdAt": "2020-01-24T08:58:20Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))\n+      .map(child -> (BSLParserRuleContext) child)\n+      .collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0447\u0435\u0440\u043d\u0438\u0435 \u043d\u043e\u0434\u044b \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDI5NzQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1ODoyOVrOFhXN7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1ODoyOVrOFhXN7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzcyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n          \n          \n            \n               * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370527724", "createdAt": "2020-01-24T08:58:29Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDI5OTI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1OToxMVrOFhXO-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOTowNDo0NVrOFhXW_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzk5Mg==", "bodyText": "\u043d\u0430\u0434\u043e \u0432\u044b\u043d\u0435\u0441\u0442\u0438 Arrays.asList \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u0441\u0442\u0440\u0438\u043c\u0430, \u0442.\u043a. \u044d\u0442\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370527992", "createdAt": "2020-01-24T08:59:11Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzMDA0NQ==", "bodyText": "\u0441\u043e\u0433\u043b\u0430\u0441\u0435\u043d, \u043a\u043e\u0441\u044f\u043a", "url": "https://github.com/1c-syntax/bsl-language-server/pull/907#discussion_r370530045", "createdAt": "2020-01-24T09:04:45Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java", "diffHunk": "@@ -190,4 +192,35 @@ public static BSLParserRuleContext getRootParent(BSLParserRuleContext tnc, int r\n     }\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0435\u0439 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u043e\u043c\u0430\u043c\u0438\n+   */\n+  public static List<BSLParserRuleContext> getChildren(Tree t, Integer... ruleIndex) {\n+    return IntStream.range(0, t.getChildCount())\n+      .mapToObj(t::getChild)\n+      .filter((Tree child) ->\n+        child instanceof BSLParserRuleContext\n+          && Arrays.asList(ruleIndex).contains(((BSLParserRuleContext) child).getRuleIndex()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNzk5Mg=="}, "originalCommit": {"oid": "09aa85c2a92a3a8a56970d89e8efa929cefc5e24"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4875, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}