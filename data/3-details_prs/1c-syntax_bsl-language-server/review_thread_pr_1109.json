{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MTA2OTgx", "number": 1109, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToyNzoyMlrOD1rpKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToyNzoyMlrOD1rpKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjE2MTY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToyNzoyMlrOGLO4lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo0MToxNlrOGLYP5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQzMTM4Mw==", "bodyText": "\u044d\u0442\u043e \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u0442\u043e, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u043b @artbear.\n\u0435\u0433\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0440\u0430\u0442\u044c getTokens \u0432\u043e\u043e\u0431\u0449\u0435, \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e\ncodeBlock.compoundStatement().statement().returnStatement() (\u043a\u043e\u0434 \u043f\u043e \u043f\u0430\u043c\u044f\u0442\u0438)", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1109#discussion_r414431383", "createdAt": "2020-04-24T09:27:22Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java", "diffHunk": "@@ -74,13 +76,15 @@ private boolean expressionMatchesPattern(BSLParser.ExpressionContext expression)\n   }\n \n   private boolean codeBlockWithOnlyReturn(BSLParser.CodeBlockContext codeBlock) {\n-    return codeBlock\n-      .getTokens()\n-      .stream()\n-      .map(t -> t.getType())\n-      .filter(t -> t != BSLParser.WHITE_SPACE)\n-      .filter(t -> t != BSLParser.LINE_COMMENT)\n-      .filter(t -> t != BSLParser.SEMICOLON)\n-      .noneMatch(t -> t != BSLParser.RETURN_KEYWORD);\n+    List<Token> tokens = codeBlock.getTokens();\n+\n+    if (tokens.size() == 2) {\n+      return tokens.get(0).getType() == BSLParser.RETURN_KEYWORD", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67e567f496821906e2238019961ed6222cc65a01"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2Njc3OQ==", "bodyText": "@nixel2007 @artbear \u041d\u0435 \u043f\u043e\u043d\u044f\u043b \u0437\u0430\u043c\u044b\u0441\u043b\u0430. \u041e\u0431\u043d\u043e\u0432\u0438\u043b", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1109#discussion_r414466779", "createdAt": "2020-04-24T10:23:57Z", "author": {"login": "qtLex"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java", "diffHunk": "@@ -74,13 +76,15 @@ private boolean expressionMatchesPattern(BSLParser.ExpressionContext expression)\n   }\n \n   private boolean codeBlockWithOnlyReturn(BSLParser.CodeBlockContext codeBlock) {\n-    return codeBlock\n-      .getTokens()\n-      .stream()\n-      .map(t -> t.getType())\n-      .filter(t -> t != BSLParser.WHITE_SPACE)\n-      .filter(t -> t != BSLParser.LINE_COMMENT)\n-      .filter(t -> t != BSLParser.SEMICOLON)\n-      .noneMatch(t -> t != BSLParser.RETURN_KEYWORD);\n+    List<Token> tokens = codeBlock.getTokens();\n+\n+    if (tokens.size() == 2) {\n+      return tokens.get(0).getType() == BSLParser.RETURN_KEYWORD", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQzMTM4Mw=="}, "originalCommit": {"oid": "67e567f496821906e2238019961ed6222cc65a01"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU4NDgwNw==", "bodyText": "\u0430\u0433\u0430, \u0442\u043e, \u0447\u0442\u043e \u043d\u0443\u0436\u043d\u043e.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1109#discussion_r414584807", "createdAt": "2020-04-24T13:41:16Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java", "diffHunk": "@@ -74,13 +76,15 @@ private boolean expressionMatchesPattern(BSLParser.ExpressionContext expression)\n   }\n \n   private boolean codeBlockWithOnlyReturn(BSLParser.CodeBlockContext codeBlock) {\n-    return codeBlock\n-      .getTokens()\n-      .stream()\n-      .map(t -> t.getType())\n-      .filter(t -> t != BSLParser.WHITE_SPACE)\n-      .filter(t -> t != BSLParser.LINE_COMMENT)\n-      .filter(t -> t != BSLParser.SEMICOLON)\n-      .noneMatch(t -> t != BSLParser.RETURN_KEYWORD);\n+    List<Token> tokens = codeBlock.getTokens();\n+\n+    if (tokens.size() == 2) {\n+      return tokens.get(0).getType() == BSLParser.RETURN_KEYWORD", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQzMTM4Mw=="}, "originalCommit": {"oid": "67e567f496821906e2238019961ed6222cc65a01"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4777, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}