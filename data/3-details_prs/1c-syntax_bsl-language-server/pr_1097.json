{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MjYwMDI5", "number": 1097, "title": "Feature/canceled standart interaction with automated testing tools", "bodyText": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\". \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0444\u043e\u0440\u043c\u044b, \u043c\u043e\u0434\u0443\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438 \u043d\u0430\u0431\u043e\u0440\u043e\u0432 \u0437\u0430\u043f\u0438\u0441\u0435\u0439, \u043d\u043e \u0438 \u043e\u0431\u0449\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0447\u0430\u0441\u0442\u043e \u0432\u044b\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f \u0442\u0443\u0434\u0430. \u0418\u0449\u0435\u0442\u0441\u044f \u043f\u0430\u0442\u0442\u0435\u0440\u043d \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0441 \"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\" \u0432 \u0432\u0435\u0442\u043a\u0435 \u0415\u0441\u043b\u0438  \u0438 \u043e\u0434\u0438\u043d\u043e\u0447\u043d\u044b\u043c \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u043e\u043c \u0432 \u0431\u043b\u043e\u043a\u0435 \u043a\u043e\u0434\u0430.\n\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438\n\n\n\n\n\n\nCloses: #427\n\u0427\u0435\u043a\u043b\u0438\u0441\u0442\n\n\n\u041e\u0431\u0449\u0438\u0435\n\n \u0412\u0435\u0442\u043a\u0430 PR \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0438\u0437 develop\n \u041e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0435, \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438 \u043f\u0440\u043e\u0447\u0438\u0435, \u043d\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u0441\u043c\u044b\u0441\u043b\u0430 \u0443\u0447\u0430\u0441\u0442\u043a\u0438 \u043a\u043e\u0434\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u044b\n \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u044b \u0442\u0435\u0441\u0442\u0430\u043c\u0438\n \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u0435\u0440\u0435\u0434 \u043a\u043e\u043c\u043c\u0438\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b (\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u043b \u043a\u043e\u043c\u0430\u043d\u0434\u0443 gradlew precommit)\n\n\u0414\u043b\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\n\n \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u0434\u043b\u044f \u043e\u0431\u043e\u0438\u0445 \u044f\u0437\u044b\u043a\u043e\u0432 (\u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e", "createdAt": "2020-04-20T19:36:27Z", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097", "merged": true, "mergeCommit": {"oid": "4db0e660a76d8356d800f2c4b3b280d9f6be9f99"}, "closed": true, "closedAt": "2020-04-20T20:35:07Z", "author": {"login": "qtLex"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZkO43AH2gAyNDA2MjYwMDI5OjU5MmZlMzkyMGQ1YzE2YTdjN2IzOWEwMzU5MWMzOWRiYjY0ZDE2NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZzhxTAFqTM5NzMxODIxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "592fe3920d5c16a7c7b39a03591c39dbb64d1671", "author": {"user": {"login": "qtLex", "name": "Eduard Ivanov"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/592fe3920d5c16a7c7b39a03591c39dbb64d1671", "committedDate": "2020-04-20T19:27:02Z", "message": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u044b"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75e42ea3c5d0636affb4cc383dcf97ba9ae83e3c", "author": {"user": {"login": "qtLex", "name": "Eduard Ivanov"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/75e42ea3c5d0636affb4cc383dcf97ba9ae83e3c", "committedDate": "2020-04-20T19:27:02Z", "message": "docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a45929e363cb8db2987b6c3f7bbf69daef13135", "author": {"user": {"login": "qtLex", "name": "Eduard Ivanov"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/5a45929e363cb8db2987b6c3f7bbf69daef13135", "committedDate": "2020-04-20T19:31:12Z", "message": "precommit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MDY0MjEz", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#pullrequestreview-397064213", "createdAt": "2020-04-21T07:37:13Z", "commit": {"oid": "5a45929e363cb8db2987b6c3f7bbf69daef13135"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzozNzoxM1rOGI3LTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzozNzoxM1rOGI3LTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk0NTgwNQ==", "bodyText": "@qtLex \u044f \u0431\u044b \u0435\u0449\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u0444\u0438\u043b\u044c\u0442\u0440 t.getChannel() != Lexer.HIDDEN \u0434\u043b\u044f \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f.\n\u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u044b \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0438\u0436\u0435 \u043d\u0430 \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r411945805", "createdAt": "2020-04-21T07:37:13Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.regex.Pattern;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MINOR,\n+  minutesToFix = 1,\n+  modules = {\n+    ModuleType.FormModule,\n+    ModuleType.ObjectModule,\n+    ModuleType.RecordSetModule,\n+    ModuleType.CommonModule\n+  },\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.DEPRECATED\n+  }\n+)\n+public class ExcessiveAutoTestCheckDiagnostic extends AbstractVisitorDiagnostic {\n+\n+  private static final Pattern ERROR_EXPRESSION = Pattern.compile(\n+    \"(\\\\.\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e\\\\(\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"\\\\)|=\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"|\\\\.Property\\\\(\\\"AutoTest\\\"\\\\)|=\\\"AutoTest\\\")$\",\n+    Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n+  );\n+\n+  public ExcessiveAutoTestCheckDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public ParseTree visitIfBranch(BSLParser.IfBranchContext ctx) {\n+\n+    if (expressionMatchesPattern(ctx.expression()) && codeBlockWithOnlyReturn(ctx.codeBlock())) {\n+      diagnosticStorage.addDiagnostic((BSLParser.IfStatementContext) ctx.getParent());\n+      return ctx;\n+    }\n+\n+    return super.visitIfBranch(ctx);\n+  }\n+\n+  private boolean expressionMatchesPattern(BSLParser.ExpressionContext expression) {\n+    return ERROR_EXPRESSION.matcher(expression.getText()).find();\n+  }\n+\n+  private boolean codeBlockWithOnlyReturn(BSLParser.CodeBlockContext codeBlock) {\n+    return codeBlock\n+      .getTokens()\n+      .stream()\n+      .map(t -> t.getType())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a45929e363cb8db2987b6c3f7bbf69daef13135"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MTgyNjkw", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#pullrequestreview-397182690", "createdAt": "2020-04-21T10:06:13Z", "commit": {"oid": "5a45929e363cb8db2987b6c3f7bbf69daef13135"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDowNjoxNFrOGI9o0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDowNjoxNFrOGI9o0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng==", "bodyText": "\u0435\u0449\u0435 \u044f \u0441\u0447\u0438\u0442\u0430\u044e \u0438\u0437\u043b\u0438\u0448\u043d\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0442\u043e\u043a\u0435\u043d\u043e\u0432, \u0430 \u043f\u043e\u0442\u043e\u043c \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f, \u043a\u0430\u043a \u0432 \u043a\u043e\u0434\u0435.\n\u0431\u043b\u043e\u043a\u0438 \u043a\u043e\u0434\u0430 \u0432\u043d\u0443\u0442\u0440\u0438 \u0415\u0441\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438\\\u043e\u0433\u0440\u043e\u043c\u043d\u044b\u043c\u0438 \u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0442\u043e\u043a\u0435\u043d\u043e\u0432, \u0430 \u043f\u043e\u0442\u043e\u043c \u0432\u044b\u0431\u043e\u0440\u043a\u0430 \u043e\u0434\u043d\u043e\u0433\u043e \u0438\u0437 \u043d\u0438\u0445 \u043d\u0435\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e.\n\u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u043a\u0430\u043a \u043d\u0430 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0435.\n\n\u044f \u0432 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u043c \u043a\u043e\u0434\u0435 \u0441\u0442\u0430\u0440\u0430\u043b\u0441\u044f (\u0438 \u0441\u0432\u043e\u0438\u0445 \u043f\u0430\u0434\u0430\u0432\u0430\u043d\u043e\u0432 \u0443\u0447\u0438\u043b) \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \"\u043e\u043f\u0430\u0441\u043d\u044b\u0445\" \u043c\u0435\u0442\u043e\u0434\u043e\u0432 (getTokens\\getText) \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0434\u0435\u0440\u0435\u0432\u0430.\n\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c\n\n\u0447\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u0442\u043e\u043c\u043a\u043e\u0432 \u0440\u0430\u0432\u043d\u043e 2\n\u043f\u0435\u0440\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043c\u043e\u043a \u0438\u043c\u0435\u0435\u0442 \u0442\u0438\u043f RETURN_KEYWORD\n\u0430 2\u0439 - \u0442\u0438\u043f SEMICOLON", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412051666", "createdAt": "2020-04-21T10:06:14Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.regex.Pattern;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MINOR,\n+  minutesToFix = 1,\n+  modules = {\n+    ModuleType.FormModule,\n+    ModuleType.ObjectModule,\n+    ModuleType.RecordSetModule,\n+    ModuleType.CommonModule\n+  },\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.DEPRECATED\n+  }\n+)\n+public class ExcessiveAutoTestCheckDiagnostic extends AbstractVisitorDiagnostic {\n+\n+  private static final Pattern ERROR_EXPRESSION = Pattern.compile(\n+    \"(\\\\.\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e\\\\(\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"\\\\)|=\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"|\\\\.Property\\\\(\\\"AutoTest\\\"\\\\)|=\\\"AutoTest\\\")$\",\n+    Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n+  );\n+\n+  public ExcessiveAutoTestCheckDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public ParseTree visitIfBranch(BSLParser.IfBranchContext ctx) {\n+\n+    if (expressionMatchesPattern(ctx.expression()) && codeBlockWithOnlyReturn(ctx.codeBlock())) {\n+      diagnosticStorage.addDiagnostic((BSLParser.IfStatementContext) ctx.getParent());\n+      return ctx;\n+    }\n+\n+    return super.visitIfBranch(ctx);\n+  }\n+\n+  private boolean expressionMatchesPattern(BSLParser.ExpressionContext expression) {\n+    return ERROR_EXPRESSION.matcher(expression.getText()).find();\n+  }\n+\n+  private boolean codeBlockWithOnlyReturn(BSLParser.CodeBlockContext codeBlock) {\n+    return codeBlock\n+      .getTokens()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a45929e363cb8db2987b6c3f7bbf69daef13135"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzE4MjEy", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#pullrequestreview-397318212", "createdAt": "2020-04-21T13:16:14Z", "commit": {"oid": "5a45929e363cb8db2987b6c3f7bbf69daef13135"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoxNjoxNFrOGJFJLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoxNjoxNFrOGJFJLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE3NDYzNw==", "bodyText": "@qtLex \u043d\u0438\u0436\u0435 \u044f \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b \u0442\u0432\u043e\u0439 \u043e\u0442\u0432\u0435\u0442, \u0447\u0442\u043e \u0442\u044b \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u0448\u044c. \u0418\u0437\u0432\u0438\u043d\u0438.\n\n\u0422\u0430\u043a \u043a\u0430\u043a \u044d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0438 98% \u0432\u0435\u0442\u043e\u043a \"\u0415\u0441\u043b\u0438\" \u043e\u0442\u0432\u0430\u043b\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u0438 \u0432\u0440\u044f\u0434 \u043b\u0438 \u044d\u0442\u0430 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043d\u043e\u0439 \u043f\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438.\n\n\u0447\u0442\u043e\u0431\u044b \u0432\u043e\u043f\u0440\u043e\u0441 \u0437\u0430\u043a\u0440\u044b\u0442\u044c.\n\u043a getText \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0435\u0441\u0442\u044c - \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u0442\u043e\u0440\u043c\u043e\u0437, \u043a\u0430\u043a \u0438 getTokens.\n\u044f \u0432 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u043c \u043a\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043b \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u043f\u043e\u0442\u043e\u043c\u043a\u043e\u0432 (\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438 \u0442\u0438\u043f \u043d\u0443\u0436\u043d\u044b\u0445 \u043f\u043e\u0442\u043e\u043c\u043a\u043e\u0432)\n\u0430 \u0443\u0436 \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043b \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0443 \u043d\u0443\u0436\u043d\u043e\u0433\u043e \u043f\u043e\u0442\u043e\u043c\u043a\u0430 )", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412174637", "createdAt": "2020-04-21T13:16:14Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.regex.Pattern;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MINOR,\n+  minutesToFix = 1,\n+  modules = {\n+    ModuleType.FormModule,\n+    ModuleType.ObjectModule,\n+    ModuleType.RecordSetModule,\n+    ModuleType.CommonModule\n+  },\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.DEPRECATED\n+  }\n+)\n+public class ExcessiveAutoTestCheckDiagnostic extends AbstractVisitorDiagnostic {\n+\n+  private static final Pattern ERROR_EXPRESSION = Pattern.compile(\n+    \"(\\\\.\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e\\\\(\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"\\\\)|=\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"|\\\\.Property\\\\(\\\"AutoTest\\\"\\\\)|=\\\"AutoTest\\\")$\",\n+    Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n+  );\n+\n+  public ExcessiveAutoTestCheckDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public ParseTree visitIfBranch(BSLParser.IfBranchContext ctx) {\n+\n+    if (expressionMatchesPattern(ctx.expression()) && codeBlockWithOnlyReturn(ctx.codeBlock())) {\n+      diagnosticStorage.addDiagnostic((BSLParser.IfStatementContext) ctx.getParent());\n+      return ctx;\n+    }\n+\n+    return super.visitIfBranch(ctx);\n+  }\n+\n+  private boolean expressionMatchesPattern(BSLParser.ExpressionContext expression) {\n+    return ERROR_EXPRESSION.matcher(expression.getText()).find();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a45929e363cb8db2987b6c3f7bbf69daef13135"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4737, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}