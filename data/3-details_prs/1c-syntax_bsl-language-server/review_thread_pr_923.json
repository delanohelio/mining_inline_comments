{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MTMwNDQ0", "number": 923, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjozOToyN1rODb-4BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjowMjozMFrODcrzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjY4MjkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjozOToyN1rOFjx2BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwODowOToyOVrOFkD5SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2MTEyNQ==", "bodyText": "\u0410 \u0437\u0430\u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 getChild? \u041f\u043e\u0447\u0435\u043c\u0443 \u043d\u0435 \u0432\u0435\u0440\u043d\u0443\u0442\u044c ctx.doCall?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/923#discussion_r373061125", "createdAt": "2020-01-30T16:39:27Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "diffHunk": "@@ -65,29 +65,29 @@\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n-  private boolean isTypeMethod = false;\n-\n   public DeprecatedTypeManagedFormDiagnostic(DiagnosticInfo info) {\n     super(info);\n   }\n \n   @Override\n   public ParseTree visitGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx ) {\n-    if (methodPattern.matcher(ctx.methodName().getText()).matches()) {\n-      isTypeMethod = true;\n+\n+    if (!methodPattern.matcher(ctx.methodName().getText()).matches()) {\n+      return super.visitGlobalMethodCall(ctx);\n     }\n-    return super.visitGlobalMethodCall(ctx);\n-  }\n+    BSLParser.DoCallContext found = ctx.getChild(BSLParser.DoCallContext.class, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8662f1b56505f61739dcdadcf5b58d1599ca9588"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM1Njg3Mg==", "bodyText": "Done", "url": "https://github.com/1c-syntax/bsl-language-server/pull/923#discussion_r373356872", "createdAt": "2020-01-31T08:09:29Z", "author": {"login": "EightM"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "diffHunk": "@@ -65,29 +65,29 @@\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n-  private boolean isTypeMethod = false;\n-\n   public DeprecatedTypeManagedFormDiagnostic(DiagnosticInfo info) {\n     super(info);\n   }\n \n   @Override\n   public ParseTree visitGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx ) {\n-    if (methodPattern.matcher(ctx.methodName().getText()).matches()) {\n-      isTypeMethod = true;\n+\n+    if (!methodPattern.matcher(ctx.methodName().getText()).matches()) {\n+      return super.visitGlobalMethodCall(ctx);\n     }\n-    return super.visitGlobalMethodCall(ctx);\n-  }\n+    BSLParser.DoCallContext found = ctx.getChild(BSLParser.DoCallContext.class, 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2MTEyNQ=="}, "originalCommit": {"oid": "8662f1b56505f61739dcdadcf5b58d1599ca9588"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDA0MTEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjowMTo1NlrOFk2nwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjowMTo1NlrOFk2nwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4Nzk2OQ==", "bodyText": "\u0441\u0442\u043e\u0438\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c {}", "url": "https://github.com/1c-syntax/bsl-language-server/pull/923#discussion_r374187969", "createdAt": "2020-02-03T16:01:56Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "diffHunk": "@@ -65,29 +65,30 @@\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n-  private boolean isTypeMethod = false;\n-\n   public DeprecatedTypeManagedFormDiagnostic(DiagnosticInfo info) {\n     super(info);\n   }\n \n   @Override\n   public ParseTree visitGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx ) {\n-    if (methodPattern.matcher(ctx.methodName().getText()).matches()) {\n-      isTypeMethod = true;\n+\n+    if (!methodPattern.matcher(ctx.methodName().getText()).matches()) {\n+      return super.visitGlobalMethodCall(ctx);\n     }\n-    return super.visitGlobalMethodCall(ctx);\n-  }\n \n-  @Override\n-  public ParseTree visitCallParamList(BSLParser.CallParamListContext ctx) {\n-    if (isTypeMethod) {\n-      if (paramPattern.matcher(ctx.getText().replaceAll(\"\\\"\", \"\")).matches()) {\n-        diagnosticStorage.addDiagnostic(ctx);\n-      }\n-      isTypeMethod = false;\n+    BSLParser.DoCallContext found = ctx.doCall();\n+\n+    if (found == null) return super.visitGlobalMethodCall(ctx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c362e43d21ce669e8fc4bd4ab7ab48ab4d8b1789"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDA0MjYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjowMjoxOFrOFk2org==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozMzoyMVrOFlLpaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4ODIwNg==", "bodyText": "\u0442\u044d\u043a\u0441, \u0430 \u0442\u0443\u0442 \u043f\u043e\u0447\u0435\u043c\u0443 \u043d\u0435\u043b\u044c\u0437\u044f \u0432\u044b\u0437\u0432\u0430\u0442\u044c found.callParamList?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/923#discussion_r374188206", "createdAt": "2020-02-03T16:02:18Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "diffHunk": "@@ -65,29 +65,30 @@\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n-  private boolean isTypeMethod = false;\n-\n   public DeprecatedTypeManagedFormDiagnostic(DiagnosticInfo info) {\n     super(info);\n   }\n \n   @Override\n   public ParseTree visitGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx ) {\n-    if (methodPattern.matcher(ctx.methodName().getText()).matches()) {\n-      isTypeMethod = true;\n+\n+    if (!methodPattern.matcher(ctx.methodName().getText()).matches()) {\n+      return super.visitGlobalMethodCall(ctx);\n     }\n-    return super.visitGlobalMethodCall(ctx);\n-  }\n \n-  @Override\n-  public ParseTree visitCallParamList(BSLParser.CallParamListContext ctx) {\n-    if (isTypeMethod) {\n-      if (paramPattern.matcher(ctx.getText().replaceAll(\"\\\"\", \"\")).matches()) {\n-        diagnosticStorage.addDiagnostic(ctx);\n-      }\n-      isTypeMethod = false;\n+    BSLParser.DoCallContext found = ctx.doCall();\n+\n+    if (found == null) return super.visitGlobalMethodCall(ctx);\n+\n+    BSLParser.CallParamListContext callCtx = found.getChild(BSLParser.CallParamListContext.class, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c362e43d21ce669e8fc4bd4ab7ab48ab4d8b1789"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUzMjQ1OQ==", "bodyText": "Done", "url": "https://github.com/1c-syntax/bsl-language-server/pull/923#discussion_r374532459", "createdAt": "2020-02-04T08:33:21Z", "author": {"login": "EightM"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "diffHunk": "@@ -65,29 +65,30 @@\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n-  private boolean isTypeMethod = false;\n-\n   public DeprecatedTypeManagedFormDiagnostic(DiagnosticInfo info) {\n     super(info);\n   }\n \n   @Override\n   public ParseTree visitGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx ) {\n-    if (methodPattern.matcher(ctx.methodName().getText()).matches()) {\n-      isTypeMethod = true;\n+\n+    if (!methodPattern.matcher(ctx.methodName().getText()).matches()) {\n+      return super.visitGlobalMethodCall(ctx);\n     }\n-    return super.visitGlobalMethodCall(ctx);\n-  }\n \n-  @Override\n-  public ParseTree visitCallParamList(BSLParser.CallParamListContext ctx) {\n-    if (isTypeMethod) {\n-      if (paramPattern.matcher(ctx.getText().replaceAll(\"\\\"\", \"\")).matches()) {\n-        diagnosticStorage.addDiagnostic(ctx);\n-      }\n-      isTypeMethod = false;\n+    BSLParser.DoCallContext found = ctx.doCall();\n+\n+    if (found == null) return super.visitGlobalMethodCall(ctx);\n+\n+    BSLParser.CallParamListContext callCtx = found.getChild(BSLParser.CallParamListContext.class, 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4ODIwNg=="}, "originalCommit": {"oid": "c362e43d21ce669e8fc4bd4ab7ab48ab4d8b1789"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDA0MzM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjowMjozMFrOFk2pKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozMzoyOVrOFlLpjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4ODMzMA==", "bodyText": "\u0438 \u0442\u0443\u0442 {}", "url": "https://github.com/1c-syntax/bsl-language-server/pull/923#discussion_r374188330", "createdAt": "2020-02-03T16:02:30Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "diffHunk": "@@ -65,29 +65,30 @@\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n-  private boolean isTypeMethod = false;\n-\n   public DeprecatedTypeManagedFormDiagnostic(DiagnosticInfo info) {\n     super(info);\n   }\n \n   @Override\n   public ParseTree visitGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx ) {\n-    if (methodPattern.matcher(ctx.methodName().getText()).matches()) {\n-      isTypeMethod = true;\n+\n+    if (!methodPattern.matcher(ctx.methodName().getText()).matches()) {\n+      return super.visitGlobalMethodCall(ctx);\n     }\n-    return super.visitGlobalMethodCall(ctx);\n-  }\n \n-  @Override\n-  public ParseTree visitCallParamList(BSLParser.CallParamListContext ctx) {\n-    if (isTypeMethod) {\n-      if (paramPattern.matcher(ctx.getText().replaceAll(\"\\\"\", \"\")).matches()) {\n-        diagnosticStorage.addDiagnostic(ctx);\n-      }\n-      isTypeMethod = false;\n+    BSLParser.DoCallContext found = ctx.doCall();\n+\n+    if (found == null) return super.visitGlobalMethodCall(ctx);\n+\n+    BSLParser.CallParamListContext callCtx = found.getChild(BSLParser.CallParamListContext.class, 0);\n+\n+    if (callCtx == null) return super.visitGlobalMethodCall(ctx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c362e43d21ce669e8fc4bd4ab7ab48ab4d8b1789"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUzMjQ5Mg==", "bodyText": "Done", "url": "https://github.com/1c-syntax/bsl-language-server/pull/923#discussion_r374532492", "createdAt": "2020-02-04T08:33:29Z", "author": {"login": "EightM"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedTypeManagedFormDiagnostic.java", "diffHunk": "@@ -65,29 +65,30 @@\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n-  private boolean isTypeMethod = false;\n-\n   public DeprecatedTypeManagedFormDiagnostic(DiagnosticInfo info) {\n     super(info);\n   }\n \n   @Override\n   public ParseTree visitGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx ) {\n-    if (methodPattern.matcher(ctx.methodName().getText()).matches()) {\n-      isTypeMethod = true;\n+\n+    if (!methodPattern.matcher(ctx.methodName().getText()).matches()) {\n+      return super.visitGlobalMethodCall(ctx);\n     }\n-    return super.visitGlobalMethodCall(ctx);\n-  }\n \n-  @Override\n-  public ParseTree visitCallParamList(BSLParser.CallParamListContext ctx) {\n-    if (isTypeMethod) {\n-      if (paramPattern.matcher(ctx.getText().replaceAll(\"\\\"\", \"\")).matches()) {\n-        diagnosticStorage.addDiagnostic(ctx);\n-      }\n-      isTypeMethod = false;\n+    BSLParser.DoCallContext found = ctx.doCall();\n+\n+    if (found == null) return super.visitGlobalMethodCall(ctx);\n+\n+    BSLParser.CallParamListContext callCtx = found.getChild(BSLParser.CallParamListContext.class, 0);\n+\n+    if (callCtx == null) return super.visitGlobalMethodCall(ctx);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4ODMzMA=="}, "originalCommit": {"oid": "c362e43d21ce669e8fc4bd4ab7ab48ab4d8b1789"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4885, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}