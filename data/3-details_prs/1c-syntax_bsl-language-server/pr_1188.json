{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3Mjk4NDMw", "number": 1188, "title": "CommonModuleInvalidTypeDiagnostic", "bodyText": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n[\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c] \u041c\u043e\u0434\u0443\u043b\u044c \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0433\u043e \u0442\u0438\u043f\u0430\n\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438\n\n\n\n\n\n\nCloses: #1072\n\u0427\u0435\u043a\u043b\u0438\u0441\u0442\n\n\n\u041e\u0431\u0449\u0438\u0435\n\n \u0412\u0435\u0442\u043a\u0430 PR \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0438\u0437 develop\n \u041e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0435, \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438 \u043f\u0440\u043e\u0447\u0438\u0435, \u043d\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u0441\u043c\u044b\u0441\u043b\u0430 \u0443\u0447\u0430\u0441\u0442\u043a\u0438 \u043a\u043e\u0434\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u044b\n \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u044b \u0442\u0435\u0441\u0442\u0430\u043c\u0438\n \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u0435\u0440\u0435\u0434 \u043a\u043e\u043c\u043c\u0438\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b (\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u043b \u043a\u043e\u043c\u0430\u043d\u0434\u0443 gradlew precommit)\n\n\u0414\u043b\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\n\n \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u0434\u043b\u044f \u043e\u0431\u043e\u0438\u0445 \u044f\u0437\u044b\u043a\u043e\u0432 (\u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e", "createdAt": "2020-05-13T11:26:59Z", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188", "merged": true, "mergeCommit": {"oid": "130f8f7c33801e13ad8f8e8a6d7f1a4dbc3045c3"}, "closed": true, "closedAt": "2020-05-14T08:34:13Z", "author": {"login": "asosnoviy"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg3ITBAH2gAyNDE3Mjk4NDMwOjhlZjc5YjhmYzZhYzU1Mzc1ODQwMjZmYTkyNTRhNzZhODZkODRmNDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg-OL2AH2gAyNDE3Mjk4NDMwOjczZTA5NGIzNTkyYzQzY2RhZGY1NWEyMjk5OTA0MWEwNTY1NmE3Yzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8ef79b8fc6ac5537584026fa9254a76a86d84f46", "author": {"user": {"login": "asosnoviy", "name": "Alexey Sosnoviy"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/8ef79b8fc6ac5537584026fa9254a76a86d84f46", "committedDate": "2020-05-13T11:25:30Z", "message": "CommonModuleInvalidTypeDiagnostic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwODM2ODkx", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#pullrequestreview-410836891", "createdAt": "2020-05-13T11:37:33Z", "commit": {"oid": "8ef79b8fc6ac5537584026fa9254a76a86d84f46"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTozNzozM1rOGUtdJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTozNzozM1rOGUtdJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2OTQ0Ng==", "bodyText": "@zeegin \u0445\u043e\u0442\u0435\u043b \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0444\u043b\u0430\u0436\u043a\u043e\u0432 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424369446", "createdAt": "2020-05-13T11:37:33Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+\n+import java.util.regex.Matcher;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.UNPREDICTABLE\n+  }\n+\n+)\n+public class CommonModuleInvalidTypeDiagnostic extends AbstractCommonModuleNameDiagnostic {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ef79b8fc6ac5537584026fa9254a76a86d84f46"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwODM2NzIz", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#pullrequestreview-410836723", "createdAt": "2020-05-13T11:37:18Z", "commit": {"oid": "8ef79b8fc6ac5537584026fa9254a76a86d84f46"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTozNzoxOFrOGUtcnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTo0MjoyNFrOGUtmvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2OTMwOA==", "bodyText": "\u041c\u043e\u0434\u0443\u043b\u044c \u0432 \u043d\u0438\u0436\u043d\u0435\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435 \u0441\u0442\u043e\u0438\u0442 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424369308", "createdAt": "2020-05-13T11:37:18Z", "author": {"login": "theshadowco"}, "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic_ru.properties", "diffHunk": "@@ -0,0 +1,2 @@\n+diagnosticMessage=\u041e\u0431\u0449\u0438\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0433\u043e \u0442\u0438\u043f\u0430\n+diagnosticName=\u041e\u0431\u0449\u0438\u0439 \u041c\u043e\u0434\u0443\u043b\u044c \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0433\u043e \u0442\u0438\u043f\u0430", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ef79b8fc6ac5537584026fa9254a76a86d84f46"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MDEwNg==", "bodyText": "\u041e\u043f\u0435\u0447\u0430\u0442\u043a\u0430", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424370106", "createdAt": "2020-05-13T11:38:50Z", "author": {"login": "theshadowco"}, "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnosticTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.ServerContext;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.utils.Absolute;\n+import lombok.SneakyThrows;\n+import org.apache.commons.io.FileUtils;\n+import org.eclipse.lsp4j.Diagnostic;\n+import org.junit.jupiter.api.Test;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.github._1c_syntax.bsl.languageserver.util.Assertions.assertThat;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n+\n+class CommonModuleInvalidTypeDiagnosticTest extends AbstractDiagnosticTest<CommonModuleInvalidTypeDiagnostic> {\n+  CommonModuleInvalidTypeDiagnosticTest() {\n+    super(CommonModuleInvalidTypeDiagnostic.class);\n+  }\n+\n+  private CommonModule module;\n+  private DocumentContext documentContext;\n+\n+  private static final String PATH_TO_METADATA = \"src/test/resources/metadata\";\n+  private static final String PATH_TO_MODULE_FILE = \"src/test/resources/metadata/CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\";\n+\n+  @Test\n+  void testClientServer() {\n+\n+    getDocumentContextFromFile();\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u041f\u0440\u043e\u0441\u0442\u043e\u041a\u043b\u0438\u0435\u043d\u0442\u0421\u0435\u0440\u0432\u0435\u0440\");\n+    when(module.isServer()).thenReturn(Boolean.TRUE);\n+    when(module.isServerCall()).thenReturn(Boolean.TRUE);\n+    when(module.isExternalConnection()).thenReturn(Boolean.TRUE);\n+    when(module.isClientOrdinaryApplication()).thenReturn(Boolean.TRUE);\n+    when(module.isClientManagedApplication()).thenReturn(Boolean.TRUE);\n+    when(documentContext.getMdObject()).thenReturn(Optional.of(module));\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(1);\n+    assertThat(diagnostics, true)\n+      .hasRange(5, 0, 1);\n+\n+  }\n+\n+  @Test\n+  void testUnknown() {\n+\n+    getDocumentContextFromFile();\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u0421\u041e\u0448\u0438\u0431\u043a\u043e\u0439\");\n+    when(module.isServer()).thenReturn(Boolean.TRUE);\n+    when(module.isServerCall()).thenReturn(Boolean.TRUE);\n+    when(module.isExternalConnection()).thenReturn(Boolean.FALSE);\n+    when(module.isClientOrdinaryApplication()).thenReturn(Boolean.FALSE);\n+    when(module.isClientManagedApplication()).thenReturn(Boolean.FALSE);\n+    when(documentContext.getMdObject()).thenReturn(Optional.of(module));\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(0);\n+\n+  }\n+\n+  @Test\n+  void testServerCall() {\n+\n+    getDocumentContextFromFile();\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u041f\u0440\u043e\u0441\u0442\u043e\u0412\u044b\u0437\u043e\u0432\u0421\u0435\u0440\u0432\u0435\u0440\u0430\u0442\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ef79b8fc6ac5537584026fa9254a76a86d84f46"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MTc0Ng==", "bodyText": "\u0430 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u043e\u0431\u0443\u0447\u043d\u044b\u043c \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u043c \u0440\u0430\u0437\u0432\u0435 \u043d\u0435 \u043f\u043e \u0438\u043b\u0438 \u043d\u0430\u0434\u043e?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424371746", "createdAt": "2020-05-13T11:42:04Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+\n+import java.util.regex.Matcher;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.UNPREDICTABLE\n+  }\n+\n+)\n+public class CommonModuleInvalidTypeDiagnostic extends AbstractCommonModuleNameDiagnostic {\n+  public CommonModuleInvalidTypeDiagnostic(DiagnosticInfo info) {\n+    super(info, \"\");\n+  }\n+\n+  @Override\n+  protected boolean flagsCheck(CommonModule commonModule) {\n+\n+    return !isServer(commonModule)\n+      && !isServerCall(commonModule)\n+      && !isClient(commonModule)\n+      && !isClientServer(commonModule);\n+  }\n+\n+  private boolean isClientServer(CommonModule commonModule) {\n+    return !commonModule.isServerCall()\n+      && commonModule.isServer()\n+      && commonModule.isExternalConnection()\n+      && commonModule.isClientOrdinaryApplication()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ef79b8fc6ac5537584026fa9254a76a86d84f46"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MTkwMA==", "bodyText": "\u0430 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u043e\u0431\u0443\u0447\u043d\u044b\u043c \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u043c \u0440\u0430\u0437\u0432\u0435 \u043d\u0435 \u043f\u043e \u0438\u043b\u0438 \u043d\u0430\u0434\u043e?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424371900", "createdAt": "2020-05-13T11:42:24Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+\n+import java.util.regex.Matcher;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.UNPREDICTABLE\n+  }\n+\n+)\n+public class CommonModuleInvalidTypeDiagnostic extends AbstractCommonModuleNameDiagnostic {\n+  public CommonModuleInvalidTypeDiagnostic(DiagnosticInfo info) {\n+    super(info, \"\");\n+  }\n+\n+  @Override\n+  protected boolean flagsCheck(CommonModule commonModule) {\n+\n+    return !isServer(commonModule)\n+      && !isServerCall(commonModule)\n+      && !isClient(commonModule)\n+      && !isClientServer(commonModule);\n+  }\n+\n+  private boolean isClientServer(CommonModule commonModule) {\n+    return !commonModule.isServerCall()\n+      && commonModule.isServer()\n+      && commonModule.isExternalConnection()\n+      && commonModule.isClientOrdinaryApplication()\n+      && commonModule.isClientManagedApplication();\n+  }\n+\n+  private boolean isClient(CommonModule commonModule) {\n+    return !commonModule.isServerCall()\n+      && !commonModule.isServer()\n+      && !commonModule.isExternalConnection()\n+      && commonModule.isClientOrdinaryApplication()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ef79b8fc6ac5537584026fa9254a76a86d84f46"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a7980938c373c24547eda3d0d95df7294273119", "author": {"user": {"login": "asosnoviy", "name": "Alexey Sosnoviy"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/5a7980938c373c24547eda3d0d95df7294273119", "committedDate": "2020-05-13T12:17:58Z", "message": "\u0423\u0437\u043e\u0440\u044b"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a3ad58fc37900464e886120dad8059b2d119e6e", "author": {"user": {"login": "asosnoviy", "name": "Alexey Sosnoviy"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/2a3ad58fc37900464e886120dad8059b2d119e6e", "committedDate": "2020-05-13T12:42:04Z", "message": "test fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2a0e83f705178bce3e3031c0fb046c3545a3e2c", "author": {"user": {"login": "asosnoviy", "name": "Alexey Sosnoviy"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/a2a0e83f705178bce3e3031c0fb046c3545a3e2c", "committedDate": "2020-05-13T14:09:53Z", "message": "type in abstract class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bb5c5ec16109e628ef8aceaaab9d20650966c4c", "author": {"user": {"login": "asosnoviy", "name": "Alexey Sosnoviy"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/4bb5c5ec16109e628ef8aceaaab9d20650966c4c", "committedDate": "2020-05-13T14:11:15Z", "message": "other diags use abstract type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTkxNjIw", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#pullrequestreview-410991620", "createdAt": "2020-05-13T14:37:21Z", "commit": {"oid": "4bb5c5ec16109e628ef8aceaaab9d20650966c4c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozNzoyMVrOGU0w6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozNzoyMVrOGU0w6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4OTE5Mg==", "bodyText": "\u044d\u0442\u043e \u0436\u0435 \u0432 TODO, \u0434\u0430? \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043c\u043d\u0435 \u044d\u0442\u0430 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u043e\u0447\u0435\u043d\u044c \u043d\u0443\u0436\u043d\u0430 \u0438\u043c\u0435\u043d\u043d\u043e \u0441 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u043d\u0430 \u043e\u0431\u044b\u0447\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435)", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424489192", "createdAt": "2020-05-13T14:37:21Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java", "diffHunk": "@@ -61,4 +61,36 @@ protected boolean matchCheck(Matcher matcher) {\n     return !matcher.find();\n   }\n \n+  protected static boolean isClientServer(CommonModule commonModule) {\n+    return !commonModule.isServerCall()\n+      && commonModule.isServer()\n+      && commonModule.isExternalConnection()\n+//      && commonModule.isClientOrdinaryApplication()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bb5c5ec16109e628ef8aceaaab9d20650966c4c"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e969f4d6c41cd44a0e6fbd39ecc2ec57bce32e5", "author": {"user": {"login": "asosnoviy", "name": "Alexey Sosnoviy"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/5e969f4d6c41cd44a0e6fbd39ecc2ec57bce32e5", "committedDate": "2020-05-13T15:20:31Z", "message": "isClientOrdinaryApplication"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDc5MTg1", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#pullrequestreview-411079185", "createdAt": "2020-05-13T16:06:36Z", "commit": {"oid": "5e969f4d6c41cd44a0e6fbd39ecc2ec57bce32e5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73e094b3592c43cdadf55a22999041a05656a7c9", "author": {"user": {"login": "asosnoviy", "name": "Alexey Sosnoviy"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/73e094b3592c43cdadf55a22999041a05656a7c9", "committedDate": "2020-05-13T19:41:16Z", "message": "\u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c isClientOrdinaryApplication"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4779, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}