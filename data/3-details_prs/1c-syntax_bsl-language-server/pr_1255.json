{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MDIyNDkz", "number": 1255, "title": "Feature/generate regions code action", "bodyText": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043d\u043e\u0432\u044b\u0439 code action: \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u044e\u0449\u0438\u0445 (\u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u0438\u043f\u0430 \u043c\u043e\u0434\u0443\u043b\u044f) \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439\n\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u0432 \u0438 \u0438\u043c\u0435\u043d \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 \u0432\u044b\u043d\u0435\u0441\u0435\u043d\u0430 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 util \u043a\u043b\u0430\u0441\u0441 - Regions.\n\u041f\u043e\u043f\u0440\u0430\u0432\u043b\u0435\u043d bsl \u0444\u0430\u0439\u043b \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0430 codeActionProvider\n\n\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438\n\n\n\n\n\n\nCloses: #531\n\u0427\u0435\u043a\u043b\u0438\u0441\u0442\n\n\n\u041e\u0431\u0449\u0438\u0435\n\n \u0412\u0435\u0442\u043a\u0430 PR \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0438\u0437 develop\n \u041e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0435, \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438 \u043f\u0440\u043e\u0447\u0438\u0435, \u043d\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u0441\u043c\u044b\u0441\u043b\u0430 \u0443\u0447\u0430\u0441\u0442\u043a\u0438 \u043a\u043e\u0434\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u044b\n \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u044b \u0442\u0435\u0441\u0442\u0430\u043c\u0438\n \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u0435\u0440\u0435\u0434 \u043a\u043e\u043c\u043c\u0438\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b (\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u043b \u043a\u043e\u043c\u0430\u043d\u0434\u0443 gradlew precommit)", "createdAt": "2020-06-13T15:49:46Z", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255", "merged": true, "mergeCommit": {"oid": "f88a0bbae889af3bd992ed4cf8181fbf6d02214d"}, "closed": true, "closedAt": "2020-07-05T10:26:21Z", "author": {"login": "EightM"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqRux5gH2gAyNDM0MDIyNDkzOmZiMjIwY2U3Y2Y5ZTIwMDEyNDZlYjc0N2ZkM2Q1Mzc5ODk1YWNlODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxRvLGgH2gAyNDM0MDIyNDkzOjdkOTI1Y2ZhYTAxNDkzMDFlZTkxNDg5MTdiOTU1ZTUwZTJmMDVlY2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fb220ce7cf9e2001246eb747fd3d5379895ace86", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/fb220ce7cf9e2001246eb747fd3d5379895ace86", "committedDate": "2020-06-11T17:30:23Z", "message": "\u0414\u0440\u0430\u0444\u0442 codeAction \u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0440\u0435\u0433\u0438\u043e\u043d\u043e\u0432. \u0418\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c387b97430cc4f770d7ef13239e904921b28c07", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/3c387b97430cc4f770d7ef13239e904921b28c07", "committedDate": "2020-06-11T17:30:47Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into feature/generateRegionsCodeAction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3a5492a6ecaed4ed22c96259f3d95942e515c9f", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/a3a5492a6ecaed4ed22c96259f3d95942e515c9f", "committedDate": "2020-06-13T13:48:50Z", "message": "\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0442\u0435\u0441\u0442"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f90dc4912c96e4cbef9a5692bbd080edc5e77c6a", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/f90dc4912c96e4cbef9a5692bbd080edc5e77c6a", "committedDate": "2020-06-13T13:58:19Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into feature/generateRegionsCodeAction\n\n\u0001 Conflicts:\n\u0001\tsrc/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/NonStandardRegionDiagnostic.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78d77a3c7031b2c67b374616e93e8b973f85d533", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/78d77a3c7031b2c67b374616e93e8b973f85d533", "committedDate": "2020-06-13T14:00:14Z", "message": "HTTP module case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ffe674729601a598377565614aee12d4436cc74", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/6ffe674729601a598377565614aee12d4436cc74", "committedDate": "2020-06-13T15:47:37Z", "message": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430, \u043f\u043e\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b \u0442\u0435\u0441\u0442\u044b"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f876770a0dd409f0c53b34b2dca82c70c311e388", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/f876770a0dd409f0c53b34b2dca82c70c311e388", "committedDate": "2020-06-15T12:14:58Z", "message": "\u0418\u043c\u043f\u043e\u0440\u0442\u044b"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/c27838603d8dc3d798e00533aea1f75eda51b7ce", "committedDate": "2020-06-16T14:23:03Z", "message": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d Javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTA0ODg2", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#pullrequestreview-440104886", "createdAt": "2020-06-30T14:58:55Z", "commit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo1ODo1NVrOGrAmVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo1ODo1NVrOGrAmVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc1MTc2NQ==", "bodyText": "\u0432\u043e\u0442 \u044d\u0442\u0443 \u0434\u043e\u043a\u0443 \u0431\u044b \u043f\u0440\u044f\u043c\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 CodeActionSupplier. \u0442\u043e\u0433\u0434\u0430 \u0437\u0434\u0435\u0441\u044c \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442/\u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c inherited.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#discussion_r447751765", "createdAt": "2020-06-30T14:58:55Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/codeactions/GenerateStandardRegionsSupplier.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.codeactions;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.FileType;\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.RegionSymbol;\n+import com.github._1c_syntax.bsl.languageserver.utils.Regions;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ScriptVariant;\n+import org.eclipse.lsp4j.CodeAction;\n+import org.eclipse.lsp4j.CodeActionKind;\n+import org.eclipse.lsp4j.CodeActionParams;\n+import org.eclipse.lsp4j.TextEdit;\n+import org.eclipse.lsp4j.WorkspaceEdit;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * {@code Supplier} {@code codeAction} \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445\n+ * \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439\n+ */\n+public class GenerateStandardRegionsSupplier implements CodeActionSupplier{\n+\n+  /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTA1NTA1", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#pullrequestreview-440105505", "createdAt": "2020-06-30T14:59:32Z", "commit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo1OTozMlrOGrAoXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo1OTozMlrOGrAoXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc1MjI4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * \u043f\u0443\u0441\u0442\u043e\u0439 {@code ArrayList} \u0435\u0441\u043b\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f\n          \n          \n            \n               * \u043f\u0443\u0441\u0442\u043e\u0439 {@code List} \u0435\u0441\u043b\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#discussion_r447752286", "createdAt": "2020-06-30T14:59:32Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/codeactions/GenerateStandardRegionsSupplier.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.codeactions;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.FileType;\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.RegionSymbol;\n+import com.github._1c_syntax.bsl.languageserver.utils.Regions;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ScriptVariant;\n+import org.eclipse.lsp4j.CodeAction;\n+import org.eclipse.lsp4j.CodeActionKind;\n+import org.eclipse.lsp4j.CodeActionParams;\n+import org.eclipse.lsp4j.TextEdit;\n+import org.eclipse.lsp4j.WorkspaceEdit;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * {@code Supplier} {@code codeAction} \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445\n+ * \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439\n+ */\n+public class GenerateStandardRegionsSupplier implements CodeActionSupplier{\n+\n+  /**\n+   * \u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 {@code CodeAction} \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445\n+   * \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 1\u0421\n+   * @param params \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432\u044b\u0437\u043e\u0432\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 {@code codeAction}\n+   * @param documentContext \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f\n+   * @return {@code List<CodeAction>} \u0435\u0441\u043b\u0438 \u043c\u043e\u0434\u0443\u043b\u044c \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435\u0445 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439,\n+   * \u043f\u0443\u0441\u0442\u043e\u0439 {@code ArrayList} \u0435\u0441\u043b\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTA3OTYw", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#pullrequestreview-440107960", "createdAt": "2020-06-30T15:01:55Z", "commit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTowMTo1NVrOGrAvvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTowMTo1NVrOGrAvvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc1NDE3Mw==", "bodyText": "\u043d\u0435 \u043d\u0443\u0436\u0435\u043d \u043b\u0438 \u043c\u0435\u0436\u0434\u0443 \u041e\u0431\u043b\u0430\u0441\u0442\u044c \u0438 \u041a\u043e\u043d\u0435\u0446\u041e\u0431\u043b\u0430\u0441\u0442\u0438 \u0435\u0449\u0435 \u043e\u0434\u0438\u043d %n?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#discussion_r447754173", "createdAt": "2020-06-30T15:01:55Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/codeactions/GenerateStandardRegionsSupplier.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.codeactions;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.FileType;\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.RegionSymbol;\n+import com.github._1c_syntax.bsl.languageserver.utils.Regions;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ScriptVariant;\n+import org.eclipse.lsp4j.CodeAction;\n+import org.eclipse.lsp4j.CodeActionKind;\n+import org.eclipse.lsp4j.CodeActionParams;\n+import org.eclipse.lsp4j.TextEdit;\n+import org.eclipse.lsp4j.WorkspaceEdit;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * {@code Supplier} {@code codeAction} \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445\n+ * \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439\n+ */\n+public class GenerateStandardRegionsSupplier implements CodeActionSupplier{\n+\n+  /**\n+   * \u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 {@code CodeAction} \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445\n+   * \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 1\u0421\n+   * @param params \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432\u044b\u0437\u043e\u0432\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 {@code codeAction}\n+   * @param documentContext \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f\n+   * @return {@code List<CodeAction>} \u0435\u0441\u043b\u0438 \u043c\u043e\u0434\u0443\u043b\u044c \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435\u0445 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439,\n+   * \u043f\u0443\u0441\u0442\u043e\u0439 {@code ArrayList} \u0435\u0441\u043b\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f\n+   */\n+  @Override\n+  public List<CodeAction> getCodeActions(CodeActionParams params, DocumentContext documentContext) {\n+    List<CodeAction> codeActions = new ArrayList<>();\n+\n+    ModuleType moduleType = documentContext.getModuleType();\n+    ScriptVariant configurationLanguage = documentContext.getServerContext().getConfiguration().getScriptVariant();\n+    Set<String> neededStandardRegions = Regions.getStandardRegionsNamesByModuleType(moduleType, configurationLanguage);\n+    Set<String> documentRegionsNames = documentContext.getSymbolTree().getModuleLevelRegions().stream()\n+      .map(RegionSymbol::getName)\n+      .collect(Collectors.toSet());\n+    neededStandardRegions.removeAll(documentRegionsNames);\n+    FileType fileType = documentContext.getFileType();\n+\n+    if (neededStandardRegions.isEmpty() || fileType == FileType.OS) {\n+      return codeActions;\n+    }\n+\n+    String regionFormat =\n+      configurationLanguage == ScriptVariant.ENGLISH ? \"#Region %s%n#EndRegion%n\" : \"#\u041e\u0431\u043b\u0430\u0441\u0442\u044c %s%n#\u041a\u043e\u043d\u0435\u0446\u041e\u0431\u043b\u0430\u0441\u0442\u0438%n\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTE0OTQx", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#pullrequestreview-440114941", "createdAt": "2020-06-30T15:08:49Z", "commit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTowODo0OVrOGrBECA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTowODo0OVrOGrBECA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc1OTM2OA==", "bodyText": "\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0447\u0442\u043e \u0441 Map.of \u043a\u043e\u0434 \u0431\u0443\u0434\u0435\u0442 \u0447\u0443\u0442\u044c \u043f\u043e\u0447\u0438\u0449\u0435.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#discussion_r447759368", "createdAt": "2020-06-30T15:08:49Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/codeactions/GenerateStandardRegionsSupplier.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.codeactions;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.FileType;\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.RegionSymbol;\n+import com.github._1c_syntax.bsl.languageserver.utils.Regions;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ScriptVariant;\n+import org.eclipse.lsp4j.CodeAction;\n+import org.eclipse.lsp4j.CodeActionKind;\n+import org.eclipse.lsp4j.CodeActionParams;\n+import org.eclipse.lsp4j.TextEdit;\n+import org.eclipse.lsp4j.WorkspaceEdit;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * {@code Supplier} {@code codeAction} \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445\n+ * \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439\n+ */\n+public class GenerateStandardRegionsSupplier implements CodeActionSupplier{\n+\n+  /**\n+   * \u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 {@code CodeAction} \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445\n+   * \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 1\u0421\n+   * @param params \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432\u044b\u0437\u043e\u0432\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 {@code codeAction}\n+   * @param documentContext \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f\n+   * @return {@code List<CodeAction>} \u0435\u0441\u043b\u0438 \u043c\u043e\u0434\u0443\u043b\u044c \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435\u0445 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439,\n+   * \u043f\u0443\u0441\u0442\u043e\u0439 {@code ArrayList} \u0435\u0441\u043b\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f\n+   */\n+  @Override\n+  public List<CodeAction> getCodeActions(CodeActionParams params, DocumentContext documentContext) {\n+    List<CodeAction> codeActions = new ArrayList<>();\n+\n+    ModuleType moduleType = documentContext.getModuleType();\n+    ScriptVariant configurationLanguage = documentContext.getServerContext().getConfiguration().getScriptVariant();\n+    Set<String> neededStandardRegions = Regions.getStandardRegionsNamesByModuleType(moduleType, configurationLanguage);\n+    Set<String> documentRegionsNames = documentContext.getSymbolTree().getModuleLevelRegions().stream()\n+      .map(RegionSymbol::getName)\n+      .collect(Collectors.toSet());\n+    neededStandardRegions.removeAll(documentRegionsNames);\n+    FileType fileType = documentContext.getFileType();\n+\n+    if (neededStandardRegions.isEmpty() || fileType == FileType.OS) {\n+      return codeActions;\n+    }\n+\n+    String regionFormat =\n+      configurationLanguage == ScriptVariant.ENGLISH ? \"#Region %s%n#EndRegion%n\" : \"#\u041e\u0431\u043b\u0430\u0441\u0442\u044c %s%n#\u041a\u043e\u043d\u0435\u0446\u041e\u0431\u043b\u0430\u0441\u0442\u0438%n\";\n+\n+    String result = neededStandardRegions.stream()\n+      .map(s -> String .format(regionFormat, s))\n+      .collect(Collectors.joining(\"\\n\"));\n+    TextEdit textEdit = new TextEdit(params.getRange(), result);\n+\n+    WorkspaceEdit edit = new WorkspaceEdit();\n+    Map<String, List<TextEdit>> changes = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTE1Njc0", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#pullrequestreview-440115674", "createdAt": "2020-06-30T15:09:33Z", "commit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTowOTozM1rOGrBGNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTowOTozM1rOGrBGNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc1OTkyNA==", "bodyText": "\u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u0435\u043b\u0430\u0442\u044c List.of(codeAction), \u0430 \u0432\u044b\u0448\u0435 (\u043d\u0430 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u0440\u0435\u0442\u0443\u0440\u043d\u0435) \u0432\u044b\u0439\u0442\u0438 \u0441 Collections.emptyList", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#discussion_r447759924", "createdAt": "2020-06-30T15:09:33Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/codeactions/GenerateStandardRegionsSupplier.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.codeactions;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.FileType;\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.RegionSymbol;\n+import com.github._1c_syntax.bsl.languageserver.utils.Regions;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ScriptVariant;\n+import org.eclipse.lsp4j.CodeAction;\n+import org.eclipse.lsp4j.CodeActionKind;\n+import org.eclipse.lsp4j.CodeActionParams;\n+import org.eclipse.lsp4j.TextEdit;\n+import org.eclipse.lsp4j.WorkspaceEdit;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * {@code Supplier} {@code codeAction} \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445\n+ * \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439\n+ */\n+public class GenerateStandardRegionsSupplier implements CodeActionSupplier{\n+\n+  /**\n+   * \u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 {@code CodeAction} \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445\n+   * \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 1\u0421\n+   * @param params \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432\u044b\u0437\u043e\u0432\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 {@code codeAction}\n+   * @param documentContext \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f\n+   * @return {@code List<CodeAction>} \u0435\u0441\u043b\u0438 \u043c\u043e\u0434\u0443\u043b\u044c \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435\u0445 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439,\n+   * \u043f\u0443\u0441\u0442\u043e\u0439 {@code ArrayList} \u0435\u0441\u043b\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f\n+   */\n+  @Override\n+  public List<CodeAction> getCodeActions(CodeActionParams params, DocumentContext documentContext) {\n+    List<CodeAction> codeActions = new ArrayList<>();\n+\n+    ModuleType moduleType = documentContext.getModuleType();\n+    ScriptVariant configurationLanguage = documentContext.getServerContext().getConfiguration().getScriptVariant();\n+    Set<String> neededStandardRegions = Regions.getStandardRegionsNamesByModuleType(moduleType, configurationLanguage);\n+    Set<String> documentRegionsNames = documentContext.getSymbolTree().getModuleLevelRegions().stream()\n+      .map(RegionSymbol::getName)\n+      .collect(Collectors.toSet());\n+    neededStandardRegions.removeAll(documentRegionsNames);\n+    FileType fileType = documentContext.getFileType();\n+\n+    if (neededStandardRegions.isEmpty() || fileType == FileType.OS) {\n+      return codeActions;\n+    }\n+\n+    String regionFormat =\n+      configurationLanguage == ScriptVariant.ENGLISH ? \"#Region %s%n#EndRegion%n\" : \"#\u041e\u0431\u043b\u0430\u0441\u0442\u044c %s%n#\u041a\u043e\u043d\u0435\u0446\u041e\u0431\u043b\u0430\u0441\u0442\u0438%n\";\n+\n+    String result = neededStandardRegions.stream()\n+      .map(s -> String .format(regionFormat, s))\n+      .collect(Collectors.joining(\"\\n\"));\n+    TextEdit textEdit = new TextEdit(params.getRange(), result);\n+\n+    WorkspaceEdit edit = new WorkspaceEdit();\n+    Map<String, List<TextEdit>> changes = new HashMap<>();\n+    changes.put(documentContext.getUri().toString(), Collections.singletonList(textEdit));\n+    edit.setChanges(changes);\n+\n+    CodeAction codeAction = new CodeAction(\"Generate missing regions\");\n+    codeAction.setDiagnostics(new ArrayList<>());\n+    codeAction.setKind(CodeActionKind.Refactor);\n+    codeAction.setEdit(edit);\n+    codeActions.add(codeAction);\n+\n+    return codeActions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTE2Mzk5", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#pullrequestreview-440116399", "createdAt": "2020-06-30T15:10:19Z", "commit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNToxMDoxOVrOGrBIgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNToxMDoxOVrOGrBIgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc2MDUxNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1255#discussion_r447760514", "createdAt": "2020-06-30T15:10:19Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Regions.java", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.utils;\n+\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ScriptVariant;\n+import com.github._1c_syntax.utils.CaseInsensitivePattern;\n+import lombok.experimental.UtilityClass;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * \u0412\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u043c\u0438 \u043e\u0431\u043b\u0430\u0441\u0442\u044f\u043c\u0438 1\u0421\n+ */\n+@UtilityClass\n+public class Regions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c27838603d8dc3d798e00533aea1f75eda51b7ce"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce3356be66e1ae470650b1816bee4406c6ff4916", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/ce3356be66e1ae470650b1816bee4406c6ff4916", "committedDate": "2020-06-30T15:18:59Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into feature/generateRegionsCodeAction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7051aa3337cc33332316267bb147e274b74516ba", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/7051aa3337cc33332316267bb147e274b74516ba", "committedDate": "2020-06-30T15:38:17Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into feature/generateRegionsCodeAction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76550fff019dfd2158e67ce1e8d989deee0e509f", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/76550fff019dfd2158e67ce1e8d989deee0e509f", "committedDate": "2020-06-30T15:44:42Z", "message": "\u0418\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u0439"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d925cfaa0149301ee9148917b955e50e2f05ece", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/7d925cfaa0149301ee9148917b955e50e2f05ece", "committedDate": "2020-07-03T11:28:17Z", "message": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0435\u0439 \u0434\u043b\u044f OS"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4822, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}