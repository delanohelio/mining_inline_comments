{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MTAxNTM5", "number": 1424, "title": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u043e\u0442\u0441\u0443\u0442\u0441\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u0435", "bodyText": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\u0414\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0441\u043b\u0443\u0447\u0430\u0438\n\n\u043f\u0443\u0441\u0442\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\n\u0431\u0438\u0442\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\n\u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043c\u043e\u0434\u0443\u043b\u044c\n\u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434\n\u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0439\n\u043c\u043e\u0434\u0443\u043b\u044c \u043d\u0435 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439\n\n\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438\n\n\n\n\n\n\nCloses: #581\n\u0427\u0435\u043a\u043b\u0438\u0441\u0442\n\n\n\u041e\u0431\u0449\u0438\u0435\n\n \u0412\u0435\u0442\u043a\u0430 PR \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0438\u0437 develop\n \u041e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0435, \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438 \u043f\u0440\u043e\u0447\u0438\u0435, \u043d\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u0441\u043c\u044b\u0441\u043b\u0430 \u0443\u0447\u0430\u0441\u0442\u043a\u0438 \u043a\u043e\u0434\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u044b\n \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u044b \u0442\u0435\u0441\u0442\u0430\u043c\u0438\n \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u0435\u0440\u0435\u0434 \u043a\u043e\u043c\u043c\u0438\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b (\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u043b \u043a\u043e\u043c\u0430\u043d\u0434\u0443 gradlew precommit)\n\n\u0414\u043b\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\n\n \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u0434\u043b\u044f \u043e\u0431\u043e\u0438\u0445 \u044f\u0437\u044b\u043a\u043e\u0432 (\u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e", "createdAt": "2020-11-07T07:31:11Z", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1424", "merged": true, "mergeCommit": {"oid": "e078485347281c5c77f8625020bf7553d5edbef3"}, "closed": true, "closedAt": "2020-11-07T13:43:10Z", "author": {"login": "theshadowco"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaGbqtgH2gAyNTE3MTAxNTM5OjBhNzhlNzJlNzNjOTZkNmVhMDYyZTliMDVlNzQ5MGQzZTU0MGJlYTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdaI115gFqTUyNTY0MzEzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0a78e72e73c96d6ea062e9b05e7490d3e540bea7", "author": {"user": {"login": "theshadowco", "name": "Maximov Valery"}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/0a78e72e73c96d6ea062e9b05e7490d3e540bea7", "committedDate": "2020-11-07T07:28:55Z", "message": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u043e\u0442\u0441\u0443\u0442\u0441\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u0435"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjQzMDE2", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1424#pullrequestreview-525643016", "createdAt": "2020-11-07T10:15:18Z", "commit": {"oid": "0a78e72e73c96d6ea062e9b05e7490d3e540bea7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDoxNToxOFrOHvHGWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDoxNToxOFrOHvHGWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2MTQzMw==", "bodyText": "\u0440\u0435\u0430\u043b\u044c\u043d\u043e \u043b\u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c mdo.getType() generic-\u043c\u0435\u0442\u043e\u0434\u043e\u043c? \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0434 \u043d\u0438\u043c \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c mdo.<EventSubscription>getType() \u0438 \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0441\u043a\u0430\u0441\u0442\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442? \u043d\u0435 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u044d\u0442\u043e\u0433\u043e \u0438\u0448\u0443\u0437\u0430, \u0430 \u0432\u043e\u043e\u0431\u0449\u0435?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1424#discussion_r519161433", "createdAt": "2020-11-07T10:15:18Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MissingEventSubscriptionHandlerDiagnostic.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.languageserver.utils.Ranges;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.mdo.EventSubscription;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ConfigurationSource;\n+import com.github._1c_syntax.mdclasses.metadata.additional.MDOType;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.eclipse.lsp4j.Range;\n+\n+import java.util.regex.Pattern;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.BLOCKER,\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.ERROR\n+  },\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    // todo \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0442\u044c, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445\n+    ModuleType.SessionModule\n+  }\n+)\n+public class MissingEventSubscriptionHandlerDiagnostic extends AbstractDiagnostic {\n+\n+  /**\n+   * \u0420\u0435\u043d\u0434\u0436 \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0432\u0435\u0448\u0435\u043d\u044b \u0437\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u044f\n+   * \u041a\u043e\u0441\u0442\u044b\u043b\u044c, \u043d\u043e \u043f\u043e\u043a\u0430 \u0442\u0430\u043a\n+   */\n+  private Range diagnosticRange;\n+  private static final Pattern SPLIT_PATTERN = Pattern.compile(\"\\\\.\");\n+\n+  @Override\n+  protected void check() {\n+\n+    Ranges.getFirstSignificantTokenRange(documentContext.getTokens())\n+      .ifPresent(range -> diagnosticRange = range);\n+\n+    if (diagnosticRange == null) {\n+      // \u043d\u0435\u0442 \u0440\u0435\u043d\u0434\u0436\u0430 - \u043d\u0435\u0442 \u0438 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a :)\n+      return;\n+    }\n+\n+    var configuration = documentContext.getServerContext().getConfiguration();\n+    if (configuration.getConfigurationSource() == ConfigurationSource.EMPTY) {\n+      return;\n+    }\n+\n+    // \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0435\u0441\u044f \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f\n+    configuration.getChildren().stream()\n+      .filter(mdo -> mdo.getType() == MDOType.EVENT_SUBSCRIPTION)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78e72e73c96d6ea062e9b05e7490d3e540bea7"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjQzMDc4", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1424#pullrequestreview-525643078", "createdAt": "2020-11-07T10:16:24Z", "commit": {"oid": "0a78e72e73c96d6ea062e9b05e7490d3e540bea7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDoxNjoyNFrOHvHGqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDoxNjoyNFrOHvHGqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2MTUxNA==", "bodyText": "\u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u043d\u0430\u0434\u043e \u0438\u0437 callee-db \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a \u043c\u0435\u0442\u043e\u0434 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u043f\u043e \u0438\u043c\u0435\u043d\u0438...", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1424#discussion_r519161514", "createdAt": "2020-11-07T10:16:24Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MissingEventSubscriptionHandlerDiagnostic.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.languageserver.utils.Ranges;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.mdo.EventSubscription;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ConfigurationSource;\n+import com.github._1c_syntax.mdclasses.metadata.additional.MDOType;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.eclipse.lsp4j.Range;\n+\n+import java.util.regex.Pattern;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.BLOCKER,\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.ERROR\n+  },\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    // todo \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0442\u044c, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445\n+    ModuleType.SessionModule\n+  }\n+)\n+public class MissingEventSubscriptionHandlerDiagnostic extends AbstractDiagnostic {\n+\n+  /**\n+   * \u0420\u0435\u043d\u0434\u0436 \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0432\u0435\u0448\u0435\u043d\u044b \u0437\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u044f\n+   * \u041a\u043e\u0441\u0442\u044b\u043b\u044c, \u043d\u043e \u043f\u043e\u043a\u0430 \u0442\u0430\u043a\n+   */\n+  private Range diagnosticRange;\n+  private static final Pattern SPLIT_PATTERN = Pattern.compile(\"\\\\.\");\n+\n+  @Override\n+  protected void check() {\n+\n+    Ranges.getFirstSignificantTokenRange(documentContext.getTokens())\n+      .ifPresent(range -> diagnosticRange = range);\n+\n+    if (diagnosticRange == null) {\n+      // \u043d\u0435\u0442 \u0440\u0435\u043d\u0434\u0436\u0430 - \u043d\u0435\u0442 \u0438 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a :)\n+      return;\n+    }\n+\n+    var configuration = documentContext.getServerContext().getConfiguration();\n+    if (configuration.getConfigurationSource() == ConfigurationSource.EMPTY) {\n+      return;\n+    }\n+\n+    // \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0435\u0441\u044f \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f\n+    configuration.getChildren().stream()\n+      .filter(mdo -> mdo.getType() == MDOType.EVENT_SUBSCRIPTION)\n+      .map(mdo -> (EventSubscription) mdo)\n+      .forEach((EventSubscription eventSubs) -> {\n+        // \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u0443\u0441\u0442\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\n+        if (eventSubs.getHandler().isEmpty()) {\n+          addDiagnostic(eventSubs);\n+          return;\n+        }\n+\n+        var handlerParts = SPLIT_PATTERN.split(eventSubs.getHandler());\n+\n+        // \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0442\u0440\u0435\u0445 \u0447\u0430\u0441\u0442\u0435\u0439:\n+        //  - CommonModule - \u0442\u0438\u043f \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0439: \u043e\u0431\u0449\u0438\u0439 \u043c\u043e\u0434\u0443\u043b\u044c\n+        //  - \u0418\u043c\u044f - \u0438\u043c\u044f \u043c\u043e\u0434\u0443\u043b\u044f\n+        //  - \u0418\u043c\u044f\u041c\u0435\u0442\u043e\u0434\u0430 - \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0432 \u043c\u043e\u0434\u0443\u043b\u0435\n+\n+        if (handlerParts.length != 3) {\n+          addDiagnostic(\"incorrectHandler\", eventSubs, eventSubs.getHandler());\n+          return;\n+        }\n+\n+        // \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u044f\n+        var module = configuration.getCommonModule(handlerParts[1]);\n+        if (module.isEmpty()) {\n+          addDiagnostic(\"missingModule\", eventSubs, handlerParts[1]);\n+          return;\n+        }\n+\n+        var commonModule = module.get();\n+        // \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0443 \u043c\u043e\u0434\u0443\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u0444\u043b\u0430\u0433\u0430\n+        if (!commonModule.isServer()) {\n+          addDiagnostic(\"shouldBeServer\", eventSubs, handlerParts[1]);\n+        }\n+\n+        // \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 \u0438 \u0435\u0433\u043e \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u043d\u043e\u0441\u0442\u0438\n+        checkMethod(eventSubs, handlerParts[2], commonModule);\n+      });\n+  }\n+\n+  private void checkMethod(EventSubscription eventSubs, String methodName, CommonModule commonModule) {\n+    documentContext.getServerContext()\n+      .getDocument(commonModule.getMdoReference().getMdoRef(), ModuleType.CommonModule)\n+      .ifPresent(commonModuleContext -> {\n+        var method = commonModuleContext.getSymbolTree().getMethods().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78e72e73c96d6ea062e9b05e7490d3e540bea7"}, "originalPosition": 122}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjQzMTM5", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1424#pullrequestreview-525643139", "createdAt": "2020-11-07T10:17:19Z", "commit": {"oid": "0a78e72e73c96d6ea062e9b05e7490d3e540bea7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4695, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}