{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNTk0ODU4", "number": 1027, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMTozMDo0NFrODwnpgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo1Mzo1M1rODxl1PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzA3ODQwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/configuration/LanguageServerConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMTozMDo0NFrOGDufww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNjoxMTowN1rOGDx_dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU2MDcwNw==", "bodyText": "\u041d\u0435 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0434\u043b\u0438\u043d\u043d\u043e?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r406560707", "createdAt": "2020-04-10T01:30:44Z", "author": {"login": "otymko"}, "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/configuration/LanguageServerConfigurationTest.java", "diffHunk": "@@ -58,8 +60,8 @@ void createDefault() {\n     LanguageServerConfiguration configuration = LanguageServerConfiguration.create();\n \n     // then\n-    assertThat(configuration.getDiagnosticLanguage()).isEqualTo(DiagnosticLanguage.RU);\n-    assertThat(configuration.getDiagnostics()).isEmpty();\n+    assertThat(configuration.getDiagnosticsOptions().getLanguage()).isEqualTo(com.github._1c_syntax.bsl.languageserver.configuration.diagnostics.Language.RU);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6b4afc9b7f32d941c6da5739f50362051cb5069"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNzk3Mg==", "bodyText": "\u0423\u0433\u0443, \u043d\u0430\u0434\u043e \u0443\u0431\u0440\u0430\u0442\u044c fqn", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r406617972", "createdAt": "2020-04-10T06:11:07Z", "author": {"login": "nixel2007"}, "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/configuration/LanguageServerConfigurationTest.java", "diffHunk": "@@ -58,8 +60,8 @@ void createDefault() {\n     LanguageServerConfiguration configuration = LanguageServerConfiguration.create();\n \n     // then\n-    assertThat(configuration.getDiagnosticLanguage()).isEqualTo(DiagnosticLanguage.RU);\n-    assertThat(configuration.getDiagnostics()).isEmpty();\n+    assertThat(configuration.getDiagnosticsOptions().getLanguage()).isEqualTo(com.github._1c_syntax.bsl.languageserver.configuration.diagnostics.Language.RU);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU2MDcwNw=="}, "originalCommit": {"oid": "f6b4afc9b7f32d941c6da5739f50362051cb5069"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzI1MzI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/diagnostics/Language.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMzoyNDo1MlrOGDwBaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNjoxMjowMlrOGDyAQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NTcwNQ==", "bodyText": "\u0410 \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u0438\u0434\u0435\u0442 Language \u0438\u0437 mdclasses...", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r406585705", "createdAt": "2020-04-10T03:24:52Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/diagnostics/Language.java", "diffHunk": "@@ -19,15 +19,17 @@\n  * You should have received a copy of the GNU Lesser General Public\n  * License along with BSL Language Server.\n  */\n-package com.github._1c_syntax.bsl.languageserver.configuration;\n+package com.github._1c_syntax.bsl.languageserver.configuration.diagnostics;\n \n-public enum DiagnosticLanguage {\n+public enum Language {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6b4afc9b7f32d941c6da5739f50362051cb5069"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxODE3OQ==", "bodyText": "\u0420\u0430\u0437\u043d\u044b\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0436\u0435.\n\u042f \u0434\u0443\u043c\u0430\u043b, \u0441\u0442\u043e\u0438\u0442 \u043b\u0438 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u044b \u043a\u043b\u0430\u0441\u0441\u043e\u0432. \u0418 \u043f\u043e\u043a\u0430 \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0431\u0435\u0437 \u043d\u0438\u0445 \u043b\u0443\u0447\u0448\u0435. \u0412\u0440\u0435\u043c\u044f \u043f\u043e\u043a\u0430\u0436\u0435\u0442", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r406618179", "createdAt": "2020-04-10T06:12:02Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/diagnostics/Language.java", "diffHunk": "@@ -19,15 +19,17 @@\n  * You should have received a copy of the GNU Lesser General Public\n  * License along with BSL Language Server.\n  */\n-package com.github._1c_syntax.bsl.languageserver.configuration;\n+package com.github._1c_syntax.bsl.languageserver.configuration.diagnostics;\n \n-public enum DiagnosticLanguage {\n+public enum Language {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NTcwNQ=="}, "originalCommit": {"oid": "f6b4afc9b7f32d941c6da5739f50362051cb5069"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzQzMjkyOnYy", "diffSide": "RIGHT", "path": "gradle/developer-tools.gradle.kts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwOTo0ODowN1rOGET8BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwOTo0ODozOFrOGET8RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDE0OQ==", "bodyText": "\u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0430\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \"com.github._1c_syntax.bsl.languageserver\" \u0432 \u044d\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435 \u0438 \u0441\u043e\u0441\u0435\u0434\u043d\u0435\u043c \u0433\u0440\u0430\u0434\u043b\u0435-\u0444\u0430\u0439\u043b\u0435  (", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407174149", "createdAt": "2020-04-12T09:48:07Z", "author": {"login": "artbear"}, "path": "gradle/developer-tools.gradle.kts", "diffHunk": "@@ -55,11 +55,21 @@ open class DeveloperTools @javax.inject.Inject constructor(objects: ObjectFactor\n \r\n     private fun createDiagnosticSupplier(lang: String, classLoader: ClassLoader) : Any {\r\n         val languageServerConfigurationClass = classLoader.loadClass(\"com.github._1c_syntax.bsl.languageserver.configuration.LanguageServerConfiguration\")\r\n-        val diagnosticLanguageClass = classLoader.loadClass(\"com.github._1c_syntax.bsl.languageserver.configuration.DiagnosticLanguage\")\r\n-        val lsConfiguration = languageServerConfigurationClass.getDeclaredMethod(\"create\", diagnosticLanguageClass)\r\n-                .invoke(languageServerConfigurationClass,\r\n-                        diagnosticLanguageClass.getMethod(\"valueOf\", classLoader.loadClass(\"java.lang.String\"))\r\n-                                .invoke(diagnosticLanguageClass, lang.toUpperCase()))\r\n+        val diagnosticsOptionsClass = classLoader.loadClass(\"com.github._1c_syntax.bsl.languageserver.configuration.diagnostics.DiagnosticsOptions\")\r\n+        val languageClass = classLoader.loadClass(\"com.github._1c_syntax.bsl.languageserver.configuration.diagnostics.Language\")\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDIxMw==", "bodyText": "9 \u0440\u0430\u0437 (", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407174213", "createdAt": "2020-04-12T09:48:38Z", "author": {"login": "artbear"}, "path": "gradle/developer-tools.gradle.kts", "diffHunk": "@@ -55,11 +55,21 @@ open class DeveloperTools @javax.inject.Inject constructor(objects: ObjectFactor\n \r\n     private fun createDiagnosticSupplier(lang: String, classLoader: ClassLoader) : Any {\r\n         val languageServerConfigurationClass = classLoader.loadClass(\"com.github._1c_syntax.bsl.languageserver.configuration.LanguageServerConfiguration\")\r\n-        val diagnosticLanguageClass = classLoader.loadClass(\"com.github._1c_syntax.bsl.languageserver.configuration.DiagnosticLanguage\")\r\n-        val lsConfiguration = languageServerConfigurationClass.getDeclaredMethod(\"create\", diagnosticLanguageClass)\r\n-                .invoke(languageServerConfigurationClass,\r\n-                        diagnosticLanguageClass.getMethod(\"valueOf\", classLoader.loadClass(\"java.lang.String\"))\r\n-                                .invoke(diagnosticLanguageClass, lang.toUpperCase()))\r\n+        val diagnosticsOptionsClass = classLoader.loadClass(\"com.github._1c_syntax.bsl.languageserver.configuration.diagnostics.DiagnosticsOptions\")\r\n+        val languageClass = classLoader.loadClass(\"com.github._1c_syntax.bsl.languageserver.configuration.diagnostics.Language\")\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDE0OQ=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzQzODE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/codelens/package-info.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwOTo1NDoxNFrOGET-mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNDo0NjozMVrOGEWBkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDgwOQ==", "bodyText": "@nixel2007 \u043f\u043e\u0434\u0441\u043a\u0430\u0436\u0438, \u0430 \u043f\u043e\u0447\u0435\u043c\u0443 \u043d\u0435 \u044e\u0437\u0430\u0435\u0448\u044c \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0438 \u0432 package-info.java\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, import javax.annotation.ParametersAreNonnullByDefault;\n\u0438 \u0442.\u043f.\n\u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u0436\u0435 \u0448\u0442\u0443\u043a\u0430 \u0434\u043b\u044f \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430\n?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407174809", "createdAt": "2020-04-12T09:54:14Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/codelens/package-info.java", "diffHunk": "@@ -19,10 +19,8 @@\n  * You should have received a copy of the GNU Lesser General Public\n  * License along with BSL Language Server.\n  */\n-package com.github._1c_syntax.bsl.languageserver.configuration;\n \n-public enum ComputeDiagnosticsTrigger {\n-  ONTYPE,\n-  ONSAVE,\n-  NEVER\n-}\n+/**\n+ * \u041f\u0430\u043a\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 {@link com.github._1c_syntax.bsl.languageserver.providers.CodeLensProvider}\n+ */\n+package com.github._1c_syntax.bsl.languageserver.configuration.codelens;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDg2Nw==", "bodyText": "\u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u043d\u0438\u0433\u0434\u0435 \u043d\u0435 \u0443\u0432\u0438\u0434\u0435\u043b. \u043d\u0430\u0432\u0435\u0440\u043d\u043e\u0435, \u0435\u0441\u0442\u044c \u043f\u0440\u0438\u0447\u0438\u043d\u0430.\n\u0440\u0430\u0441\u0441\u043a\u0430\u0436\u0435\u0448\u044c?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407174867", "createdAt": "2020-04-12T09:54:45Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/codelens/package-info.java", "diffHunk": "@@ -19,10 +19,8 @@\n  * You should have received a copy of the GNU Lesser General Public\n  * License along with BSL Language Server.\n  */\n-package com.github._1c_syntax.bsl.languageserver.configuration;\n \n-public enum ComputeDiagnosticsTrigger {\n-  ONTYPE,\n-  ONSAVE,\n-  NEVER\n-}\n+/**\n+ * \u041f\u0430\u043a\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 {@link com.github._1c_syntax.bsl.languageserver.providers.CodeLensProvider}\n+ */\n+package com.github._1c_syntax.bsl.languageserver.configuration.codelens;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDgwOQ=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NTQ5NA==", "bodyText": "\u041d\u0435 \u0443\u0432\u0438\u0434\u0435\u043b \u043e\u0442 \u043d\u0435\u0451 \u043f\u043e\u043b\u044c\u0437\u044b \u0432 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0438\u0434\u0435\u044f\u0445. NPE \u043b\u043e\u0432\u044f\u0442\u0441\u044f \u0438 \u0441\u0432\u0435\u0442\u044f\u0442\u0441\u044f \u0438 \u0431\u0435\u0437 \u043d\u0435\u0451 \u0438 \u0432 \u0438\u0434\u0435\u0435 \u0438 \u0432 \u0441\u043e\u043d\u0430\u0440\u043b\u0438\u043d\u0442\u0435", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407175494", "createdAt": "2020-04-12T10:00:32Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/codelens/package-info.java", "diffHunk": "@@ -19,10 +19,8 @@\n  * You should have received a copy of the GNU Lesser General Public\n  * License along with BSL Language Server.\n  */\n-package com.github._1c_syntax.bsl.languageserver.configuration;\n \n-public enum ComputeDiagnosticsTrigger {\n-  ONTYPE,\n-  ONSAVE,\n-  NEVER\n-}\n+/**\n+ * \u041f\u0430\u043a\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 {@link com.github._1c_syntax.bsl.languageserver.providers.CodeLensProvider}\n+ */\n+package com.github._1c_syntax.bsl.languageserver.configuration.codelens;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDgwOQ=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3OTU2OQ==", "bodyText": "\u0432\u043e\u0442 \u043c\u043e\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435:\n\u0432\u0438\u0436\u0443, \u0447\u0442\u043e \u0418\u0434\u0435\u044f \u043d\u0435 \u043b\u043e\u0432\u0438\u0442 \u0431\u0435\u0437 \u044f\u0432\u043d\u043e\u0433\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f NonNull \u0432 \u043a\u043e\u0434\u0435 \u0438\u043b\u0438 \u0432 package-info.java\n\u0430 \u0432\u043e\u0442 \u0421\u043e\u043d\u0430\u0440\u041b\u0438\u043d\u0442 \u043b\u043e\u0432\u0438\u0442, \u0447\u0442\u043e \u0441\u0442\u0440\u0430\u043d\u043d\u043e, \u0442.\u043a. \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043c\u0435\u0442\u043e\u0434\u0430 \u043d\u0438\u0433\u0434\u0435 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u043a\u0430\u043a NonNull\n\u043f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u0434\u0430\n  @Override\n  public void configure(Map<String, Object> configuration) {\n    super.configure(null); // \u044f\u0432\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 NULL\n\u0438 \u043a\u043e\u0434 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430\ndefault void configure(Map<String, Object> configuration) {\n    DiagnosticHelper.configureDiagnostic(this, configuration);\n  }\n\n\u0432\u043d\u0443\u0442\u0440\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  DiagnosticHelper.configureDiagnostic \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 null, \u0430 configure \u043d\u0435\u0442,\n\u0432\u043e\u0442 \u0421\u043e\u043d\u0430\u0440\u041b\u0438\u043d\u0442 \u0438 \u0440\u0443\u0433\u0430\u0435\u0442\u0441\u044f.\n\n\u0438 \u0432\u0440\u043e\u0434\u0435 \u0431\u044b \u0417\u0420\u042f \u0440\u0443\u0433\u0430\u0435\u0442\u0441\u044f, \u0442.\u043a. \u0432\u044b\u0437\u043e\u0432 super.configure(null);  \u0432\u043f\u043e\u043b\u043d\u0435 \u0441\u0435\u0431\u0435 \u0432\u0430\u043b\u0438\u0434\u0435\u043d \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0439 \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432 DiagnosticHelper.configureDiagnostic\n\u0430 \u0435\u0441\u043b\u0438 \u0432 DiagnosticHelper.configureDiagnostic \u0443\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 null \u0432\u043e\u043e\u0431\u0449\u0435\n\u0442\u043e\u0433\u0434\u0430 \u0441\u043e\u0432\u0441\u0435\u043c \u0432\u0435\u0441\u0435\u043b\u043e\n\n\u0443\u0436\u0435 \u043d\u0438 \u0421\u043e\u043d\u0430\u0440\u041b\u0438\u043d\u0442, \u043d\u0438 \u0418\u0434\u0435\u044f \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u0440\u0443\u0433\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u044f\u0432\u043d\u043e \u043e\u0448\u0438\u0431\u043e\u0447\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0443 null (\n\u0430 \u0435\u0441\u043b\u0438 \u0432 package-info \u0412\u041a\u041b\u042e\u0427\u0418\u0422\u042c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440, \u0442\u043e\u0433\u0434\u0430 \u0418\u0434\u0435\u044f \u0440\u0443\u0433\u0430\u0435\u0442\u0441\u044f, \u0430 \u0432\u043e\u0442 \u0421\u043e\u043d\u0430\u0440\u041b\u0438\u043d\u0442 \u043d\u0435 \u0440\u0443\u0433\u0430\u0435\u0442\u0441\u044f \u0432\u043e\u043e\u0431\u0449\u0435\n\n\u0447\u0442\u043e \u0438 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043b\u043e\u0441\u044c \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c.\n\u0418\u041c\u0425\u041e \u044f\u0432\u043d\u043e\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435 package-info \u0432\u0441\u0435-\u0442\u0430\u043a\u0438 \u043d\u0435\u043f\u043b\u043e\u0445\u043e \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043e\u0442 NPE\n@nixel2007 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0448\u044c? \u0447\u0442\u043e \u0441\u043a\u0430\u0436\u0435\u0448\u044c?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407179569", "createdAt": "2020-04-12T10:38:55Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/codelens/package-info.java", "diffHunk": "@@ -19,10 +19,8 @@\n  * You should have received a copy of the GNU Lesser General Public\n  * License along with BSL Language Server.\n  */\n-package com.github._1c_syntax.bsl.languageserver.configuration;\n \n-public enum ComputeDiagnosticsTrigger {\n-  ONTYPE,\n-  ONSAVE,\n-  NEVER\n-}\n+/**\n+ * \u041f\u0430\u043a\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 {@link com.github._1c_syntax.bsl.languageserver.providers.CodeLensProvider}\n+ */\n+package com.github._1c_syntax.bsl.languageserver.configuration.codelens;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDgwOQ=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5NDc5Nw==", "bodyText": "\u0410 \u0435\u0441\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0431\u0435\u0437 \u044f\u0432\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 null? \u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u044d\u0442\u043e \u0432\u0441\u0435 \u0436\u0435 \u044d\u043a\u0441\u0442\u0440\u0430 \u0441\u043b\u0443\u0447\u0430\u0439", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407194797", "createdAt": "2020-04-12T12:58:14Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/codelens/package-info.java", "diffHunk": "@@ -19,10 +19,8 @@\n  * You should have received a copy of the GNU Lesser General Public\n  * License along with BSL Language Server.\n  */\n-package com.github._1c_syntax.bsl.languageserver.configuration;\n \n-public enum ComputeDiagnosticsTrigger {\n-  ONTYPE,\n-  ONSAVE,\n-  NEVER\n-}\n+/**\n+ * \u041f\u0430\u043a\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 {@link com.github._1c_syntax.bsl.languageserver.providers.CodeLensProvider}\n+ */\n+package com.github._1c_syntax.bsl.languageserver.configuration.codelens;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDgwOQ=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIwNzE1Mw==", "bodyText": "\u0431\u0435\u0437 \u044f\u0432\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 null \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u044e\n\u0432\u043e\u0442 \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u0438\u0437 \u0431\u043e\u0435\u0432\u043e\u0433\u043e \u043a\u043e\u0434\u0430 - \u043d\u0430\u0448\u043b\u043e\u0441\u044c, \u0435\u0441\u043b\u0438 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0432 package-info\n\n\u0431\u0435\u0437 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044f \u043d\u0435 \u043b\u043e\u0432\u0438\u0442\u0441\u044f\ncom/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407207153", "createdAt": "2020-04-12T14:36:52Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/codelens/package-info.java", "diffHunk": "@@ -19,10 +19,8 @@\n  * You should have received a copy of the GNU Lesser General Public\n  * License along with BSL Language Server.\n  */\n-package com.github._1c_syntax.bsl.languageserver.configuration;\n \n-public enum ComputeDiagnosticsTrigger {\n-  ONTYPE,\n-  ONSAVE,\n-  NEVER\n-}\n+/**\n+ * \u041f\u0430\u043a\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 {@link com.github._1c_syntax.bsl.languageserver.providers.CodeLensProvider}\n+ */\n+package com.github._1c_syntax.bsl.languageserver.configuration.codelens;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDgwOQ=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIwODMzOA==", "bodyText": "\u0432\u044b\u0434\u0435\u043b\u0438\u043b \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0438\u0448\u0443\u0437 #1041", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407208338", "createdAt": "2020-04-12T14:46:31Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/configuration/codelens/package-info.java", "diffHunk": "@@ -19,10 +19,8 @@\n  * You should have received a copy of the GNU Lesser General Public\n  * License along with BSL Language Server.\n  */\n-package com.github._1c_syntax.bsl.languageserver.configuration;\n \n-public enum ComputeDiagnosticsTrigger {\n-  ONTYPE,\n-  ONSAVE,\n-  NEVER\n-}\n+/**\n+ * \u041f\u0430\u043a\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 {@link com.github._1c_syntax.bsl.languageserver.providers.CodeLensProvider}\n+ */\n+package com.github._1c_syntax.bsl.languageserver.configuration.codelens;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDgwOQ=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzQ0NjExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxMDowMzo0OVrOGEUCqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxMjo0MTowOVrOGEVE0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NTg1MA==", "bodyText": "\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 hasDefinedSetting \u0432 \u044d\u0442\u043e\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u043d\u0435 \u043e\u0448\u0438\u0431\u043a\u0430?\n\u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044f \u043f\u043e\u043d\u044f\u043b \u043f\u043e \u043a\u043e\u0434\u0443, \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u043d\u043e \u0443 \u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438.\n\u0438 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u043e \u043a\u043e\u0434\u0443 \u0431\u0443\u0434\u0435\u0442 \u0441\u0447\u0438\u0442\u0430\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430, \u0434\u0430?\n\ndiagnosticConfiguration.isRight() == true\n\n\u0438 hasCustomConfiguration == true\n\n\ndiagnosticConfiguration.isLeft() && diagnosticConfiguration.getLeft() == false\n\n\u043d\u0443 \u0438\u043b\u0438 enabledDirectly  == false\n\u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u0432\u0435\u0440\u043d\u043e?\n\n\nhasDefinedSetting = enabledDirectly || hasCustomConfiguration; \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0432 true\n\n\u043d\u0443 \u0438 \u0434\u0430\u043b\u0435\u0435 passedOn = mode == Mode.ON && (activatedByDefault || hasDefinedSetting); \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0432 true", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407175850", "createdAt": "2020-04-12T10:03:49Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java", "diffHunk": "@@ -110,35 +112,49 @@ private BSLDiagnostic createDiagnosticInstance(DiagnosticInfo diagnosticInfo) {\n   }\n \n   private DiagnosticInfo createDiagnosticInfo(Class<? extends BSLDiagnostic> diagnosticClass) {\n-    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticLanguage());\n+    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticsOptions().getLanguage());\n   }\n \n   private void configureDiagnostic(BSLDiagnostic diagnostic) {\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnostic.getInfo().getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnostic.getInfo().getCode().getStringValue());\n \n     if (diagnosticConfiguration != null && diagnosticConfiguration.isRight()) {\n       diagnostic.configure(diagnosticConfiguration.getRight());\n     }\n   }\n \n-  private boolean isEnabled(DiagnosticInfo diagnosticInfo) {\n+  private boolean isEnabled(DiagnosticInfo diagnosticInfo, DiagnosticsOptions diagnosticsOptions) {\n     if (diagnosticInfo == null) {\n       return false;\n     }\n \n+    var mode = diagnosticsOptions.getMode();\n+    if (mode == Mode.OFF) {\n+      return false;\n+    }\n+\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnosticInfo.getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnosticInfo.getCode().getStringValue());\n \n     boolean activatedByDefault = diagnosticConfiguration == null && diagnosticInfo.isActivatedByDefault();\n     boolean hasCustomConfiguration = diagnosticConfiguration != null && diagnosticConfiguration.isRight();\n     boolean enabledDirectly = diagnosticConfiguration != null\n       && diagnosticConfiguration.isLeft()\n       && diagnosticConfiguration.getLeft();\n+    boolean hasDefinedSetting = enabledDirectly || hasCustomConfiguration;\n+\n+    boolean passedAllMode = mode == Mode.ALL;\n+    boolean passedOnlyMode = mode == Mode.ONLY && hasDefinedSetting;\n+    boolean passedExcept = mode == Mode.EXCEPT && !hasDefinedSetting;\n+    boolean passedOn = mode == Mode.ON && (activatedByDefault || hasDefinedSetting);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NjYzNg==", "bodyText": "\u0415\u0441\u043b\u0438 \u0443 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0437\u0430\u0434\u0430\u043d \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u0442\u043e \u0434\u0430, \u043e\u043d\u0430 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0432\u043a\u043b\u044e\u0447\u0451\u043d\u043d\u043e\u0439.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407176636", "createdAt": "2020-04-12T10:11:19Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java", "diffHunk": "@@ -110,35 +112,49 @@ private BSLDiagnostic createDiagnosticInstance(DiagnosticInfo diagnosticInfo) {\n   }\n \n   private DiagnosticInfo createDiagnosticInfo(Class<? extends BSLDiagnostic> diagnosticClass) {\n-    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticLanguage());\n+    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticsOptions().getLanguage());\n   }\n \n   private void configureDiagnostic(BSLDiagnostic diagnostic) {\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnostic.getInfo().getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnostic.getInfo().getCode().getStringValue());\n \n     if (diagnosticConfiguration != null && diagnosticConfiguration.isRight()) {\n       diagnostic.configure(diagnosticConfiguration.getRight());\n     }\n   }\n \n-  private boolean isEnabled(DiagnosticInfo diagnosticInfo) {\n+  private boolean isEnabled(DiagnosticInfo diagnosticInfo, DiagnosticsOptions diagnosticsOptions) {\n     if (diagnosticInfo == null) {\n       return false;\n     }\n \n+    var mode = diagnosticsOptions.getMode();\n+    if (mode == Mode.OFF) {\n+      return false;\n+    }\n+\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnosticInfo.getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnosticInfo.getCode().getStringValue());\n \n     boolean activatedByDefault = diagnosticConfiguration == null && diagnosticInfo.isActivatedByDefault();\n     boolean hasCustomConfiguration = diagnosticConfiguration != null && diagnosticConfiguration.isRight();\n     boolean enabledDirectly = diagnosticConfiguration != null\n       && diagnosticConfiguration.isLeft()\n       && diagnosticConfiguration.getLeft();\n+    boolean hasDefinedSetting = enabledDirectly || hasCustomConfiguration;\n+\n+    boolean passedAllMode = mode == Mode.ALL;\n+    boolean passedOnlyMode = mode == Mode.ONLY && hasDefinedSetting;\n+    boolean passedExcept = mode == Mode.EXCEPT && !hasDefinedSetting;\n+    boolean passedOn = mode == Mode.ON && (activatedByDefault || hasDefinedSetting);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NTg1MA=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE4MzM2Ng==", "bodyText": "\u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e, \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0431\u0443\u0434\u0435\u0442 \u043d\u0435\u0443\u0434\u043e\u0431\u043d\u043e \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043f\u043e\u0434\u043e\u0431\u043d\u0443\u044e \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0443.\n\u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0423\u0414\u0410\u041b\u042f\u0422\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 (\n\u0447\u0442\u043e \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \"\u0441\u044e\u0440\u043f\u0440\u0438\u0437\u043e\u043c\" )\n\u0442.\u043a. \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440, \u043f\u0440\u043e\u0441\u0442\u043e\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0444\u043b\u0430\u0433\u0430 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u043d\u0435 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0443 (", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407183366", "createdAt": "2020-04-12T11:16:15Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java", "diffHunk": "@@ -110,35 +112,49 @@ private BSLDiagnostic createDiagnosticInstance(DiagnosticInfo diagnosticInfo) {\n   }\n \n   private DiagnosticInfo createDiagnosticInfo(Class<? extends BSLDiagnostic> diagnosticClass) {\n-    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticLanguage());\n+    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticsOptions().getLanguage());\n   }\n \n   private void configureDiagnostic(BSLDiagnostic diagnostic) {\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnostic.getInfo().getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnostic.getInfo().getCode().getStringValue());\n \n     if (diagnosticConfiguration != null && diagnosticConfiguration.isRight()) {\n       diagnostic.configure(diagnosticConfiguration.getRight());\n     }\n   }\n \n-  private boolean isEnabled(DiagnosticInfo diagnosticInfo) {\n+  private boolean isEnabled(DiagnosticInfo diagnosticInfo, DiagnosticsOptions diagnosticsOptions) {\n     if (diagnosticInfo == null) {\n       return false;\n     }\n \n+    var mode = diagnosticsOptions.getMode();\n+    if (mode == Mode.OFF) {\n+      return false;\n+    }\n+\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnosticInfo.getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnosticInfo.getCode().getStringValue());\n \n     boolean activatedByDefault = diagnosticConfiguration == null && diagnosticInfo.isActivatedByDefault();\n     boolean hasCustomConfiguration = diagnosticConfiguration != null && diagnosticConfiguration.isRight();\n     boolean enabledDirectly = diagnosticConfiguration != null\n       && diagnosticConfiguration.isLeft()\n       && diagnosticConfiguration.getLeft();\n+    boolean hasDefinedSetting = enabledDirectly || hasCustomConfiguration;\n+\n+    boolean passedAllMode = mode == Mode.ALL;\n+    boolean passedOnlyMode = mode == Mode.ONLY && hasDefinedSetting;\n+    boolean passedExcept = mode == Mode.EXCEPT && !hasDefinedSetting;\n+    boolean passedOn = mode == Mode.ON && (activatedByDefault || hasDefinedSetting);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NTg1MA=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE4OTc2Ng==", "bodyText": "\u0423 \u0442\u0435\u0431\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0444\u043b\u0430\u0433\u0430 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438. \u0423 \u0442\u0435\u0431\u044f \u043b\u0438\u0431\u043e true/false, \u043b\u0438\u0431\u043e \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438. \u0421\u043c \u0434\u0436\u0441\u043e\u043d \u0441\u0445\u0435\u043c\u0443 \u0438 DiagnosticOptions", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407189766", "createdAt": "2020-04-12T12:14:28Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java", "diffHunk": "@@ -110,35 +112,49 @@ private BSLDiagnostic createDiagnosticInstance(DiagnosticInfo diagnosticInfo) {\n   }\n \n   private DiagnosticInfo createDiagnosticInfo(Class<? extends BSLDiagnostic> diagnosticClass) {\n-    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticLanguage());\n+    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticsOptions().getLanguage());\n   }\n \n   private void configureDiagnostic(BSLDiagnostic diagnostic) {\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnostic.getInfo().getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnostic.getInfo().getCode().getStringValue());\n \n     if (diagnosticConfiguration != null && diagnosticConfiguration.isRight()) {\n       diagnostic.configure(diagnosticConfiguration.getRight());\n     }\n   }\n \n-  private boolean isEnabled(DiagnosticInfo diagnosticInfo) {\n+  private boolean isEnabled(DiagnosticInfo diagnosticInfo, DiagnosticsOptions diagnosticsOptions) {\n     if (diagnosticInfo == null) {\n       return false;\n     }\n \n+    var mode = diagnosticsOptions.getMode();\n+    if (mode == Mode.OFF) {\n+      return false;\n+    }\n+\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnosticInfo.getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnosticInfo.getCode().getStringValue());\n \n     boolean activatedByDefault = diagnosticConfiguration == null && diagnosticInfo.isActivatedByDefault();\n     boolean hasCustomConfiguration = diagnosticConfiguration != null && diagnosticConfiguration.isRight();\n     boolean enabledDirectly = diagnosticConfiguration != null\n       && diagnosticConfiguration.isLeft()\n       && diagnosticConfiguration.getLeft();\n+    boolean hasDefinedSetting = enabledDirectly || hasCustomConfiguration;\n+\n+    boolean passedAllMode = mode == Mode.ALL;\n+    boolean passedOnlyMode = mode == Mode.ONLY && hasDefinedSetting;\n+    boolean passedExcept = mode == Mode.EXCEPT && !hasDefinedSetting;\n+    boolean passedOn = mode == Mode.ON && (activatedByDefault || hasDefinedSetting);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NTg1MA=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5MDQwMA==", "bodyText": "\u041d\u0438\u043a\u0438\u0442\u0430, \u043f\u043e\u0445\u043e\u0436\u0435, \u0442\u044b \u043c\u0435\u043d\u044f \u043d\u0435 \u043f\u043e\u043d\u044f\u043b.\n\u0441\u043c\u043e\u0442\u0440\u0438, \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u0412\u0421\u0426) \u0435\u0441\u0442\u044c \u0434\u0436\u0435\u0439\u0441\u043e\u043d-\u0444\u0430\u0439\u043b \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0431\u0441\u043b-\u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n\u0432 \u044d\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0443 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438, \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442.\n\u0437\u0430\u0442\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043d\u0438\u043c\u0430\u0435\u0442, \u0447\u0442\u043e \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u0435\u043c\u0443 \u043d\u0435 \u043d\u0443\u0436\u043d\u0430 (\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0438\u043b\u0438 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e, \u043f\u0440\u0438\u0447\u0438\u043d\u044b \u043d\u0435 \u0432\u0430\u0436\u043d\u044b), \u0438 \u043e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u0435\u0435 \u0432\u044b\u043a\u043b\u044e\u0447\u0438\u0442\u044c.\n\u0447\u0442\u043e \u0435\u043c\u0443 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0441\u0434\u0435\u043b\u0430\u0442\u044c\n\n\u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0438\u0437 \u0434\u0436\u0435\u0439\u0441\u043e\u043d-\u0444\u0430\u0439\u043b\u0430.\n\n\u0438 \u043f\u0440\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u0437\u0430\u043d\u043e\u0432\u043e \u0432\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0432 \u0434\u0436\u0435\u0439\u0441\u043e\u043d (\n\n\n\n\u0418\u041c\u0425\u041e \u044d\u0442\u043e \u043d\u0435\u0443\u0434\u043e\u0431\u043d\u043e \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\u0432\u043d\u044f\u0442\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u043b \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0440\u0430\u0431\u043e\u0442\u044b?\n\u043e\u043d \u0440\u0435\u0434\u043e\u043a, \u043d\u043e \u043f\u0440\u0438 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430\u043c\u0438 \u0443 \u0442\u0435\u0445 \u0436\u0435 \u0434\u0435\u0432\u0435\u043b\u043e\u043f\u0435\u0440\u043e\u0432 \u043c\u043e\u0436\u0435\u0442 \u0441\u0442\u0430\u0442\u044c \u043d\u0435 \u0442\u0430\u043a\u0438\u043c \u0443\u0436\u0435 \u0440\u0435\u0434\u043a\u0438\u043c.\n\u0447\u0442\u043e \u0441\u043a\u0430\u0436\u0435\u0448\u044c?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407190400", "createdAt": "2020-04-12T12:20:09Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java", "diffHunk": "@@ -110,35 +112,49 @@ private BSLDiagnostic createDiagnosticInstance(DiagnosticInfo diagnosticInfo) {\n   }\n \n   private DiagnosticInfo createDiagnosticInfo(Class<? extends BSLDiagnostic> diagnosticClass) {\n-    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticLanguage());\n+    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticsOptions().getLanguage());\n   }\n \n   private void configureDiagnostic(BSLDiagnostic diagnostic) {\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnostic.getInfo().getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnostic.getInfo().getCode().getStringValue());\n \n     if (diagnosticConfiguration != null && diagnosticConfiguration.isRight()) {\n       diagnostic.configure(diagnosticConfiguration.getRight());\n     }\n   }\n \n-  private boolean isEnabled(DiagnosticInfo diagnosticInfo) {\n+  private boolean isEnabled(DiagnosticInfo diagnosticInfo, DiagnosticsOptions diagnosticsOptions) {\n     if (diagnosticInfo == null) {\n       return false;\n     }\n \n+    var mode = diagnosticsOptions.getMode();\n+    if (mode == Mode.OFF) {\n+      return false;\n+    }\n+\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnosticInfo.getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnosticInfo.getCode().getStringValue());\n \n     boolean activatedByDefault = diagnosticConfiguration == null && diagnosticInfo.isActivatedByDefault();\n     boolean hasCustomConfiguration = diagnosticConfiguration != null && diagnosticConfiguration.isRight();\n     boolean enabledDirectly = diagnosticConfiguration != null\n       && diagnosticConfiguration.isLeft()\n       && diagnosticConfiguration.getLeft();\n+    boolean hasDefinedSetting = enabledDirectly || hasCustomConfiguration;\n+\n+    boolean passedAllMode = mode == Mode.ALL;\n+    boolean passedOnlyMode = mode == Mode.ONLY && hasDefinedSetting;\n+    boolean passedExcept = mode == Mode.EXCEPT && !hasDefinedSetting;\n+    boolean passedOn = mode == Mode.ON && (activatedByDefault || hasDefinedSetting);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NTg1MA=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5MDg5MQ==", "bodyText": "\u0414\u0430, \u044f \u043f\u043e\u043d\u0438\u043c\u0430\u044e \u044d\u0442\u043e\u0442 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0438 \u044d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0442\u0430\u043a \u0438 \u0435\u0441\u0442\u044c, \u0438 \u0431\u044b\u043b\u043e \u0441 \u043f\u0435\u0440\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438, \u0433\u0434\u0435 \u043f\u043e\u044f\u0432\u0438\u043b\u0441\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b. \u041d\u043e \u044f \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u043f\u043e\u043d\u0438\u043c\u0430\u044e, \u043f\u0440\u0438\u0447\u0451\u043c \u0442\u0443\u0442 diagnostic mode? \u044f \u044d\u0442\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043d\u0435 \u043c\u0435\u043d\u044f\u044e, \u044f \u0435\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u043b \u0441 \u0443\u0447\u0451\u0442\u043e\u043c mode.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407190891", "createdAt": "2020-04-12T12:24:12Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java", "diffHunk": "@@ -110,35 +112,49 @@ private BSLDiagnostic createDiagnosticInstance(DiagnosticInfo diagnosticInfo) {\n   }\n \n   private DiagnosticInfo createDiagnosticInfo(Class<? extends BSLDiagnostic> diagnosticClass) {\n-    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticLanguage());\n+    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticsOptions().getLanguage());\n   }\n \n   private void configureDiagnostic(BSLDiagnostic diagnostic) {\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnostic.getInfo().getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnostic.getInfo().getCode().getStringValue());\n \n     if (diagnosticConfiguration != null && diagnosticConfiguration.isRight()) {\n       diagnostic.configure(diagnosticConfiguration.getRight());\n     }\n   }\n \n-  private boolean isEnabled(DiagnosticInfo diagnosticInfo) {\n+  private boolean isEnabled(DiagnosticInfo diagnosticInfo, DiagnosticsOptions diagnosticsOptions) {\n     if (diagnosticInfo == null) {\n       return false;\n     }\n \n+    var mode = diagnosticsOptions.getMode();\n+    if (mode == Mode.OFF) {\n+      return false;\n+    }\n+\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnosticInfo.getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnosticInfo.getCode().getStringValue());\n \n     boolean activatedByDefault = diagnosticConfiguration == null && diagnosticInfo.isActivatedByDefault();\n     boolean hasCustomConfiguration = diagnosticConfiguration != null && diagnosticConfiguration.isRight();\n     boolean enabledDirectly = diagnosticConfiguration != null\n       && diagnosticConfiguration.isLeft()\n       && diagnosticConfiguration.getLeft();\n+    boolean hasDefinedSetting = enabledDirectly || hasCustomConfiguration;\n+\n+    boolean passedAllMode = mode == Mode.ALL;\n+    boolean passedOnlyMode = mode == Mode.ONLY && hasDefinedSetting;\n+    boolean passedExcept = mode == Mode.EXCEPT && !hasDefinedSetting;\n+    boolean passedOn = mode == Mode.ON && (activatedByDefault || hasDefinedSetting);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NTg1MA=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5Mjc4Ng==", "bodyText": "\u043d\u0443 \u044f \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u043b, \u0447\u0442\u043e \u0442\u044b \u043c\u0435\u043d\u044f\u0435\u0448\u044c \u044d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0438 \u0432\u0432\u043e\u0434\u0438\u0448\u044c \u0442\u0430\u043a\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435.\n\u0434\u0430\u043b\u0435\u0435 \u0433\u0438\u0442 \u0442\u0435\u0431\u044f \u0431\u0443\u0434\u0435\u0442 \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u0440\u043e\u043c )\n\u0435\u0441\u043b\u0438 \u0440\u0430\u043d\u0435\u0435 \u0442\u0430\u043a \u0438 \u0431\u044b\u043b\u043e, \u0442\u043e\u0433\u0434\u0430, \u043a\u043e\u043d\u0435\u0447\u043d\u043e, \u0442\u0432\u043e\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u0438\u0434\u0435\u043d.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r407192786", "createdAt": "2020-04-12T12:41:09Z", "author": {"login": "artbear"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java", "diffHunk": "@@ -110,35 +112,49 @@ private BSLDiagnostic createDiagnosticInstance(DiagnosticInfo diagnosticInfo) {\n   }\n \n   private DiagnosticInfo createDiagnosticInfo(Class<? extends BSLDiagnostic> diagnosticClass) {\n-    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticLanguage());\n+    return new DiagnosticInfo(diagnosticClass, configuration.getDiagnosticsOptions().getLanguage());\n   }\n \n   private void configureDiagnostic(BSLDiagnostic diagnostic) {\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnostic.getInfo().getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnostic.getInfo().getCode().getStringValue());\n \n     if (diagnosticConfiguration != null && diagnosticConfiguration.isRight()) {\n       diagnostic.configure(diagnosticConfiguration.getRight());\n     }\n   }\n \n-  private boolean isEnabled(DiagnosticInfo diagnosticInfo) {\n+  private boolean isEnabled(DiagnosticInfo diagnosticInfo, DiagnosticsOptions diagnosticsOptions) {\n     if (diagnosticInfo == null) {\n       return false;\n     }\n \n+    var mode = diagnosticsOptions.getMode();\n+    if (mode == Mode.OFF) {\n+      return false;\n+    }\n+\n     Either<Boolean, Map<String, Object>> diagnosticConfiguration =\n-      configuration.getDiagnostics().get(diagnosticInfo.getCode().getStringValue());\n+      configuration.getDiagnosticsOptions().getRules().get(diagnosticInfo.getCode().getStringValue());\n \n     boolean activatedByDefault = diagnosticConfiguration == null && diagnosticInfo.isActivatedByDefault();\n     boolean hasCustomConfiguration = diagnosticConfiguration != null && diagnosticConfiguration.isRight();\n     boolean enabledDirectly = diagnosticConfiguration != null\n       && diagnosticConfiguration.isLeft()\n       && diagnosticConfiguration.getLeft();\n+    boolean hasDefinedSetting = enabledDirectly || hasCustomConfiguration;\n+\n+    boolean passedAllMode = mode == Mode.ALL;\n+    boolean passedOnlyMode = mode == Mode.ONLY && hasDefinedSetting;\n+    boolean passedExcept = mode == Mode.EXCEPT && !hasDefinedSetting;\n+    boolean passedOn = mode == Mode.ON && (activatedByDefault || hasDefinedSetting);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NTg1MA=="}, "originalCommit": {"oid": "f48edac4ef82153df6303e1aebc271304765e483"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzI2NjUyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/configuration/parameters-schema.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo1Mzo1M1rOGFJKtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMTowMjozNFrOGFJcxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0NjI2MQ==", "bodyText": "\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0430\u043d\u0435\u0442?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r408046261", "createdAt": "2020-04-14T10:53:53Z", "author": {"login": "asosnoviy"}, "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/configuration/parameters-schema.json", "diffHunk": "@@ -409,13 +409,13 @@\n             \"$id\": \"#/definitions/MagicNumber\"\n         },\n         \"MethodSize\": {\n-            \"description\": \"Method size \",\n+            \"description\": \"Method size\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9475219e45c6879266d70877ed6a2e1f7ddcdc29"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1MDg4NA==", "bodyText": "\u044f \u0440\u0435\u0431\u0435\u0439\u0437\u043d\u0443\u043b, \u0442\u0430\u043a \u0447\u0442\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1027#discussion_r408050884", "createdAt": "2020-04-14T11:02:34Z", "author": {"login": "theshadowco"}, "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/configuration/parameters-schema.json", "diffHunk": "@@ -409,13 +409,13 @@\n             \"$id\": \"#/definitions/MagicNumber\"\n         },\n         \"MethodSize\": {\n-            \"description\": \"Method size \",\n+            \"description\": \"Method size\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0NjI2MQ=="}, "originalCommit": {"oid": "9475219e45c6879266d70877ed6a2e1f7ddcdc29"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4924, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}