{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0Njg2NDEx", "number": 985, "title": "Typo diagnostic", "bodyText": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\u041d\u043e\u0432\u0430\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430: \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043e\u0447\u0435\u043f\u044f\u0442\u043e\u043a.\n\u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438\n\n\n\n\n\n\nClose #254\n\u0427\u0435\u043a\u043b\u0438\u0441\u0442\n\n\n\u041e\u0431\u0449\u0438\u0435\n\n \u0412\u0435\u0442\u043a\u0430 PR \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0438\u0437 develop\n \u041e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0435, \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438 \u043f\u0440\u043e\u0447\u0438\u0435, \u043d\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u0441\u043c\u044b\u0441\u043b\u0430 \u0443\u0447\u0430\u0441\u0442\u043a\u0438 \u043a\u043e\u0434\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u044b\n \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u044b \u0442\u0435\u0441\u0442\u0430\u043c\u0438\n \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u0435\u0440\u0435\u0434 \u043a\u043e\u043c\u043c\u0438\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b (\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u043b \u043a\u043e\u043c\u0430\u043d\u0434\u0443 gradlew precommit)\n\n\u0414\u043b\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\n\n \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u0434\u043b\u044f \u043e\u0431\u043e\u0438\u0445 \u044f\u0437\u044b\u043a\u043e\u0432 (\u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d)", "createdAt": "2020-03-06T08:04:02Z", "url": "https://github.com/1c-syntax/bsl-language-server/pull/985", "merged": true, "mergeCommit": {"oid": "c2f1376cc53f5793b71ba0b738a72414169fa58a"}, "closed": true, "closedAt": "2020-03-09T17:51:29Z", "author": {"login": "EightM"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAq5pwAH2gAyMzg0Njg2NDExOjMxZDlmNzJjOTIzNDY0NzUzODk5OWE4YTE2MTRjM2ZjNDRhZGRmMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcL-gKzAH2gAyMzg0Njg2NDExOmM5YWI1MjBiNjhmZWM4YWExNjA3MTUyNGJiNDk3NjZkOGZkM2ZmYmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "31d9f72c9234647538999a8a1614c3fc44addf01", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/31d9f72c9234647538999a8a1614c3fc44addf01", "committedDate": "2020-02-03T11:05:04Z", "message": "New diagnostic: Typo detector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1df7fef866df4bdfff62c380097f04fd766dc434", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/1df7fef866df4bdfff62c380097f04fd766dc434", "committedDate": "2020-02-03T11:05:16Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into TypoDiagnostic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44c906ddaf7bc90c636794a6fac8fb5931f93d5b", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/44c906ddaf7bc90c636794a6fac8fb5931f93d5b", "committedDate": "2020-02-03T12:56:28Z", "message": "New diagnostic: Typo detector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88d35db7b1a47cc6417723d2c39823b12d49dafd", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/88d35db7b1a47cc6417723d2c39823b12d49dafd", "committedDate": "2020-02-04T08:29:48Z", "message": "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e351b7dd4a7c6ce72e711728629cbc861ba80ebe", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/e351b7dd4a7c6ce72e711728629cbc861ba80ebe", "committedDate": "2020-02-05T14:27:12Z", "message": "\u0414\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\u043c"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95691a6b88f758a2de83ea0cde1a832dbdb02f94", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/95691a6b88f758a2de83ea0cde1a832dbdb02f94", "committedDate": "2020-02-05T14:27:32Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into TypoDiagnostic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fe67d81f24081590b58616b706d432a48c42ae5", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/0fe67d81f24081590b58616b706d432a48c42ae5", "committedDate": "2020-02-06T14:51:19Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into TypoDiagnostic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a335d30518d98ab9b38893ba822925e3b255d460", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/a335d30518d98ab9b38893ba822925e3b255d460", "committedDate": "2020-02-07T14:26:58Z", "message": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1925af5e190c43732092d09c09099ef91a762ab1", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/1925af5e190c43732092d09c09099ef91a762ab1", "committedDate": "2020-02-07T14:27:33Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into TypoDiagnostic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09ee5f051fedbacb1a4afd7f80a2656e61fe420d", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/09ee5f051fedbacb1a4afd7f80a2656e61fe420d", "committedDate": "2020-02-09T16:16:43Z", "message": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6116a398543bce7a7d3f37a09a62c8c5f78565b3", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/6116a398543bce7a7d3f37a09a62c8c5f78565b3", "committedDate": "2020-02-10T09:37:30Z", "message": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u043f.\u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0437\u0430\u043c\u0435\u043d"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f145fd5ca03dfab750cd2dc9b657f9e1d78a1bb", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/2f145fd5ca03dfab750cd2dc9b657f9e1d78a1bb", "committedDate": "2020-02-12T08:44:37Z", "message": "\u041d\u043e\u0432\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f \u0440\u0435\u0430\u043b\u0437\u0438\u0430\u0446\u0438\u0438. \u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0442\u043e\u043a\u0435\u043d\u0438\u0437\u0430\u0446\u0438\u044f"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd053bb4f527ec4fc8e3352a051049ca01b8ba89", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/cd053bb4f527ec4fc8e3352a051049ca01b8ba89", "committedDate": "2020-02-13T09:45:21Z", "message": "\u041d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043d\u0430 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u0445 \u0441\u0442\u0440\u043e\u043a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f211c7dde3f4f30ae4a005cc4541e9ae8917cfa", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/2f211c7dde3f4f30ae4a005cc4541e9ae8917cfa", "committedDate": "2020-02-13T11:15:08Z", "message": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u0445 \u0441\u043b\u043e\u0432."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca5475c2484e6f891296e65683b5503ddaf93d63", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/ca5475c2484e6f891296e65683b5503ddaf93d63", "committedDate": "2020-02-13T11:18:06Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into TypoDiagnostic\n\n\u0001 Conflicts:\n\u0001\tdocs/diagnostics/index.md\n\u0001\tdocs/en/diagnostics/index.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbc2bd772a8997b39903130abe8e69f92ca52f95", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/cbc2bd772a8997b39903130abe8e69f92ca52f95", "committedDate": "2020-02-13T11:21:18Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32b39f20052438385e47e8b2206aacbc2a75c123", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/32b39f20052438385e47e8b2206aacbc2a75c123", "committedDate": "2020-02-13T11:40:52Z", "message": "\u0418\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0432 matches, \u0437\u0430\u043c\u0435\u043d\u0430 ArrayList \u043d\u0430 HashSet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f39369fcbce087efaf7641186d85cf566b51bab", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/7f39369fcbce087efaf7641186d85cf566b51bab", "committedDate": "2020-02-13T13:23:10Z", "message": "\u0417\u0430\u043c\u0435\u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u043d\u0430 computeIf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c3d2aaff5aa82fa7f219e0c3e7c11d147e2445a", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/5c3d2aaff5aa82fa7f219e0c3e7c11d147e2445a", "committedDate": "2020-02-13T13:30:59Z", "message": "\u0417\u0430\u043c\u0435\u043d\u0430 \u043f\u043e\u0438\u0441\u043a\u0430 \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0432 AST, \u043d\u0430 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u043c\u0443 \u0441\u043f\u0438\u0441\u043a\u0443"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aad6bb6a6d1d1b5a352c445c4b4d798b8ea197f7", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/aad6bb6a6d1d1b5a352c445c4b4d798b8ea197f7", "committedDate": "2020-02-13T14:45:45Z", "message": "\u041d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd9c3e2306b5a77eddcdd6c3647221231abff9ac", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/fd9c3e2306b5a77eddcdd6c3647221231abff9ac", "committedDate": "2020-02-15T10:05:44Z", "message": "\u0412\u044b\u043d\u043e\u0441 LT \u0432 \u0441\u0442\u0430\u0442\u0438\u043a. \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u0430 check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0c1f7fc9efde6fb20071811e7bbf7b16414974e", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/e0c1f7fc9efde6fb20071811e7bbf7b16414974e", "committedDate": "2020-02-27T09:38:20Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into TypoDiagnostic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee9cb2e20c662ac918cfc3ce58c97ad0a76e750d", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/ee9cb2e20c662ac918cfc3ce58c97ad0a76e750d", "committedDate": "2020-02-27T10:36:48Z", "message": "Downgrade to LT 4.2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d94a150e800734b0efd0d7f593dfaf8e746de9e", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/0d94a150e800734b0efd0d7f593dfaf8e746de9e", "committedDate": "2020-02-27T12:55:49Z", "message": "\u041f\u043e\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u0431\u0430\u0433 \u0441 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u0440\u0430\u0432\u0438\u043b \u0434\u043b\u044f \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5795ece9a5d5f1f1a05cf33a6047b8d24d9e3876", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/5795ece9a5d5f1f1a05cf33a6047b8d24d9e3876", "committedDate": "2020-02-27T13:17:38Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4acdd3149862db001e678db49e13569ca1f327b", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/a4acdd3149862db001e678db49e13569ca1f327b", "committedDate": "2020-02-27T18:13:01Z", "message": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432, precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25eea124c1386c18a27357beb30b86a3f3aa06cc", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/25eea124c1386c18a27357beb30b86a3f3aa06cc", "committedDate": "2020-03-05T09:29:22Z", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into TypoDiagnostic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05cc2ec3a5566766040910456d3d1cf1e0c43001", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/05cc2ec3a5566766040910456d3d1cf1e0c43001", "committedDate": "2020-03-05T10:11:59Z", "message": "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430. \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3b0009ec6335247e8a84a1ce72e29be2945842f", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/d3b0009ec6335247e8a84a1ce72e29be2945842f", "committedDate": "2020-03-05T12:28:05Z", "message": "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430. \u0423\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u0438\u043d\u044b \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0441\u043b\u043e\u0432"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6e098e55d59a6e189be023e11cb035b29377b95", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/c6e098e55d59a6e189be023e11cb035b29377b95", "committedDate": "2020-03-05T14:10:14Z", "message": "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "385d0604e46002bca8345f0d2aaf038b32332a89", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/385d0604e46002bca8345f0d2aaf038b32332a89", "committedDate": "2020-03-05T14:46:26Z", "message": "\u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e58c2c16753028e6f457669699f910161174a5c", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/9e58c2c16753028e6f457669699f910161174a5c", "committedDate": "2020-03-06T08:01:10Z", "message": "precommit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMTcyMTYy", "url": "https://github.com/1c-syntax/bsl-language-server/pull/985#pullrequestreview-370172162", "createdAt": "2020-03-06T09:07:17Z", "commit": {"oid": "9e58c2c16753028e6f457669699f910161174a5c"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTowNzoxOFrOFyxl9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOToxOTowNVrOFyx6eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NTY1NQ==", "bodyText": "\u041d\u0430\u043f\u0438\u0448\u0438 \u043f\u043e\u0431\u043e\u043b\u044c\u0448\u0435", "url": "https://github.com/1c-syntax/bsl-language-server/pull/985#discussion_r388785655", "createdAt": "2020-03-06T09:07:18Z", "author": {"login": "theshadowco"}, "path": "docs/diagnostics/Typo.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# \u041e\u043f\u0435\u0447\u0430\u0442\u043a\u0430 (Typo)\n+\n+| \u0422\u0438\u043f | \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f<br/>\u044f\u0437\u044b\u043a\u0438 | \u0412\u0430\u0436\u043d\u043e\u0441\u0442\u044c | \u0412\u043a\u043b\u044e\u0447\u0435\u043d\u0430<br/>\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e | \u0412\u0440\u0435\u043c\u044f \u043d\u0430<br/>\u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 (\u043c\u0438\u043d) | \u0422\u044d\u0433\u0438 |\n+| :-: | :-: | :-: | :-: | :-: | :-: |\n+| `\u0414\u0435\u0444\u0435\u043a\u0442 \u043a\u043e\u0434\u0430` | `BSL`<br/>`OS` | `\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439` | `\u0414\u0430` | `1` | `badpractice` |\n+\n+## \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \n+\n+| \u0418\u043c\u044f | \u0422\u0438\u043f | \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 | \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e |\n+| :-: | :-: | :-- | :-: |\n+| `userWordsToIgnore` | `\u0421\u0442\u0440\u043e\u043a\u0430` | ```\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439``` | `````` |\n+| `minWordLength` | `\u0426\u0435\u043b\u043e\u0435` | ```\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u0445 \u0441\u043b\u043e\u0432``` | ```3``` |\n+\n+<!-- \u0411\u043b\u043e\u043a\u0438 \u0432\u044b\u0448\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438, \u043d\u0435 \u0442\u0440\u043e\u0433\u0430\u0442\u044c -->\n+## \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438\n+<!-- \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0432\u0440\u0443\u0447\u043d\u0443\u044e. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c \u044f\u0437\u044b\u043a\u043e\u043c \u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043c\u044b\u0441\u043b \u0438 \u0441\u0445\u0435\u043c\u0443 \u0440\u0430\u0431\u043e\u0442\u0443 -->\n+\u041e\u0440\u0444\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430 ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e58c2c16753028e6f457669699f910161174a5c"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NjIyMg==", "bodyText": "\u041c\u043e\u0436\u0435\u0442 \u0441\u0442\u043e\u0438\u0442 \u0434\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/985#discussion_r388786222", "createdAt": "2020-03-06T09:08:36Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/TypoDiagnostic.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import lombok.extern.slf4j.Slf4j;\n+import org.antlr.v4.runtime.Token;\n+import org.apache.commons.lang3.StringUtils;\n+import org.languagetool.JLanguageTool;\n+import org.languagetool.language.AmericanEnglish;\n+import org.languagetool.language.Russian;\n+import org.languagetool.rules.Rule;\n+import org.languagetool.rules.RuleMatch;\n+import org.languagetool.rules.spelling.SpellingCheckRule;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.BADPRACTICE\n+  }\n+)\n+\n+@Slf4j\n+public class TypoDiagnostic extends AbstractDiagnostic {\n+\n+  private static final Russian ruLang = new Russian();\n+  private static final AmericanEnglish enLang = new AmericanEnglish();\n+  private static final JLanguageTool ruLangTool = new JLanguageTool(ruLang);\n+  private static final JLanguageTool enLangTool = new JLanguageTool(enLang);\n+  private static Map<String, JLanguageTool> languageToolMap = new HashMap<>();\n+\n+  private static final int DEFAULT_MIN_WORD_LENGTH = 3;\n+  private static final String DEFAULT_USER_WORDS_TO_IGNORE = \"\";\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + DEFAULT_MIN_WORD_LENGTH\n+  )\n+  private int minWordLength = DEFAULT_MIN_WORD_LENGTH;\n+\n+  @DiagnosticParameter(\n+    type = String.class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e58c2c16753028e6f457669699f910161174a5c"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NzEwMw==", "bodyText": "\u043b\u0443\u0447\u0448\u0435 \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0438, \u0441\u043e\u043d\u0430\u0440 \u0437\u0430\u0440\u0443\u0433\u0430\u0435\u0442\u0441\u044f", "url": "https://github.com/1c-syntax/bsl-language-server/pull/985#discussion_r388787103", "createdAt": "2020-03-06T09:10:41Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/TypoDiagnostic.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import lombok.extern.slf4j.Slf4j;\n+import org.antlr.v4.runtime.Token;\n+import org.apache.commons.lang3.StringUtils;\n+import org.languagetool.JLanguageTool;\n+import org.languagetool.language.AmericanEnglish;\n+import org.languagetool.language.Russian;\n+import org.languagetool.rules.Rule;\n+import org.languagetool.rules.RuleMatch;\n+import org.languagetool.rules.spelling.SpellingCheckRule;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.BADPRACTICE\n+  }\n+)\n+\n+@Slf4j\n+public class TypoDiagnostic extends AbstractDiagnostic {\n+\n+  private static final Russian ruLang = new Russian();\n+  private static final AmericanEnglish enLang = new AmericanEnglish();\n+  private static final JLanguageTool ruLangTool = new JLanguageTool(ruLang);\n+  private static final JLanguageTool enLangTool = new JLanguageTool(enLang);\n+  private static Map<String, JLanguageTool> languageToolMap = new HashMap<>();\n+\n+  private static final int DEFAULT_MIN_WORD_LENGTH = 3;\n+  private static final String DEFAULT_USER_WORDS_TO_IGNORE = \"\";\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + DEFAULT_MIN_WORD_LENGTH\n+  )\n+  private int minWordLength = DEFAULT_MIN_WORD_LENGTH;\n+\n+  @DiagnosticParameter(\n+    type = String.class\n+  )\n+  private String userWordsToIgnore = DEFAULT_USER_WORDS_TO_IGNORE;\n+\n+  public TypoDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public void configure(Map<String, Object> configuration) {\n+    if (configuration == null) {\n+      return;\n+    }\n+    minWordLength = (int) configuration.getOrDefault(\"minWordLength\", minWordLength);\n+    userWordsToIgnore = (String) configuration.getOrDefault(\"userWordsToIgnore\", userWordsToIgnore);\n+  }\n+\n+  private ArrayList<String> getWordsToIgnore() {\n+    String exceptions = info.getResourceString(\"diagnosticExceptions\").replaceAll(\"\\n\", \"\");\n+    return new ArrayList<>(Arrays.asList(exceptions.split(\",\")));\n+  }\n+\n+  private ArrayList<String> getUserWordsToIgnore() {\n+    String exceptions = userWordsToIgnore.replaceAll(\"\\n\", \"\");\n+    return new ArrayList<>(Arrays.asList(exceptions.split(\",\")));\n+  }\n+\n+  @Override\n+  protected void check(DocumentContext documentContext) {\n+\n+    String lang = info.getResourceString(\"diagnosticLanguage\");\n+    ArrayList<String> wordsToIgnore = getWordsToIgnore();\n+\n+    languageToolMap.put(\"ru\", ruLangTool);\n+    languageToolMap.put(\"en\", enLangTool);\n+\n+    languageToolMap.get(lang).getAllRules().stream().filter(rule -> !rule.isDictionaryBasedSpellingRule()).map(Rule::getId).forEach(languageToolMap.get(lang)::disableRule);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e58c2c16753028e6f457669699f910161174a5c"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4Nzc0NQ==", "bodyText": "\u0421\u0442\u043e\u0438\u0442 \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 2\u0445 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c", "url": "https://github.com/1c-syntax/bsl-language-server/pull/985#discussion_r388787745", "createdAt": "2020-03-06T09:12:13Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/TypoDiagnostic.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import lombok.extern.slf4j.Slf4j;\n+import org.antlr.v4.runtime.Token;\n+import org.apache.commons.lang3.StringUtils;\n+import org.languagetool.JLanguageTool;\n+import org.languagetool.language.AmericanEnglish;\n+import org.languagetool.language.Russian;\n+import org.languagetool.rules.Rule;\n+import org.languagetool.rules.RuleMatch;\n+import org.languagetool.rules.spelling.SpellingCheckRule;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.BADPRACTICE\n+  }\n+)\n+\n+@Slf4j\n+public class TypoDiagnostic extends AbstractDiagnostic {\n+\n+  private static final Russian ruLang = new Russian();\n+  private static final AmericanEnglish enLang = new AmericanEnglish();\n+  private static final JLanguageTool ruLangTool = new JLanguageTool(ruLang);\n+  private static final JLanguageTool enLangTool = new JLanguageTool(enLang);\n+  private static Map<String, JLanguageTool> languageToolMap = new HashMap<>();\n+\n+  private static final int DEFAULT_MIN_WORD_LENGTH = 3;\n+  private static final String DEFAULT_USER_WORDS_TO_IGNORE = \"\";\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + DEFAULT_MIN_WORD_LENGTH\n+  )\n+  private int minWordLength = DEFAULT_MIN_WORD_LENGTH;\n+\n+  @DiagnosticParameter(\n+    type = String.class\n+  )\n+  private String userWordsToIgnore = DEFAULT_USER_WORDS_TO_IGNORE;\n+\n+  public TypoDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public void configure(Map<String, Object> configuration) {\n+    if (configuration == null) {\n+      return;\n+    }\n+    minWordLength = (int) configuration.getOrDefault(\"minWordLength\", minWordLength);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e58c2c16753028e6f457669699f910161174a5c"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4ODIyMA==", "bodyText": "\u041d\u0430\u0434\u043e \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 \u043d\u0430 \u0447\u0430\u0441\u0442\u0438", "url": "https://github.com/1c-syntax/bsl-language-server/pull/985#discussion_r388788220", "createdAt": "2020-03-06T09:13:19Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/TypoDiagnostic.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import lombok.extern.slf4j.Slf4j;\n+import org.antlr.v4.runtime.Token;\n+import org.apache.commons.lang3.StringUtils;\n+import org.languagetool.JLanguageTool;\n+import org.languagetool.language.AmericanEnglish;\n+import org.languagetool.language.Russian;\n+import org.languagetool.rules.Rule;\n+import org.languagetool.rules.RuleMatch;\n+import org.languagetool.rules.spelling.SpellingCheckRule;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.BADPRACTICE\n+  }\n+)\n+\n+@Slf4j\n+public class TypoDiagnostic extends AbstractDiagnostic {\n+\n+  private static final Russian ruLang = new Russian();\n+  private static final AmericanEnglish enLang = new AmericanEnglish();\n+  private static final JLanguageTool ruLangTool = new JLanguageTool(ruLang);\n+  private static final JLanguageTool enLangTool = new JLanguageTool(enLang);\n+  private static Map<String, JLanguageTool> languageToolMap = new HashMap<>();\n+\n+  private static final int DEFAULT_MIN_WORD_LENGTH = 3;\n+  private static final String DEFAULT_USER_WORDS_TO_IGNORE = \"\";\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + DEFAULT_MIN_WORD_LENGTH\n+  )\n+  private int minWordLength = DEFAULT_MIN_WORD_LENGTH;\n+\n+  @DiagnosticParameter(\n+    type = String.class\n+  )\n+  private String userWordsToIgnore = DEFAULT_USER_WORDS_TO_IGNORE;\n+\n+  public TypoDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public void configure(Map<String, Object> configuration) {\n+    if (configuration == null) {\n+      return;\n+    }\n+    minWordLength = (int) configuration.getOrDefault(\"minWordLength\", minWordLength);\n+    userWordsToIgnore = (String) configuration.getOrDefault(\"userWordsToIgnore\", userWordsToIgnore);\n+  }\n+\n+  private ArrayList<String> getWordsToIgnore() {\n+    String exceptions = info.getResourceString(\"diagnosticExceptions\").replaceAll(\"\\n\", \"\");\n+    return new ArrayList<>(Arrays.asList(exceptions.split(\",\")));\n+  }\n+\n+  private ArrayList<String> getUserWordsToIgnore() {\n+    String exceptions = userWordsToIgnore.replaceAll(\"\\n\", \"\");\n+    return new ArrayList<>(Arrays.asList(exceptions.split(\",\")));\n+  }\n+\n+  @Override\n+  protected void check(DocumentContext documentContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e58c2c16753028e6f457669699f910161174a5c"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc5MDkwNg==", "bodyText": "\u0410 \u0437\u0430\u0447\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u0430, \u0435\u0441\u043b\u0438 \u0432 lang \u0432\u0441\u0435\u0433\u0434\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/985#discussion_r388790906", "createdAt": "2020-03-06T09:19:05Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/TypoDiagnostic.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import lombok.extern.slf4j.Slf4j;\n+import org.antlr.v4.runtime.Token;\n+import org.apache.commons.lang3.StringUtils;\n+import org.languagetool.JLanguageTool;\n+import org.languagetool.language.AmericanEnglish;\n+import org.languagetool.language.Russian;\n+import org.languagetool.rules.Rule;\n+import org.languagetool.rules.RuleMatch;\n+import org.languagetool.rules.spelling.SpellingCheckRule;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.BADPRACTICE\n+  }\n+)\n+\n+@Slf4j\n+public class TypoDiagnostic extends AbstractDiagnostic {\n+\n+  private static final Russian ruLang = new Russian();\n+  private static final AmericanEnglish enLang = new AmericanEnglish();\n+  private static final JLanguageTool ruLangTool = new JLanguageTool(ruLang);\n+  private static final JLanguageTool enLangTool = new JLanguageTool(enLang);\n+  private static Map<String, JLanguageTool> languageToolMap = new HashMap<>();\n+\n+  private static final int DEFAULT_MIN_WORD_LENGTH = 3;\n+  private static final String DEFAULT_USER_WORDS_TO_IGNORE = \"\";\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + DEFAULT_MIN_WORD_LENGTH\n+  )\n+  private int minWordLength = DEFAULT_MIN_WORD_LENGTH;\n+\n+  @DiagnosticParameter(\n+    type = String.class\n+  )\n+  private String userWordsToIgnore = DEFAULT_USER_WORDS_TO_IGNORE;\n+\n+  public TypoDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public void configure(Map<String, Object> configuration) {\n+    if (configuration == null) {\n+      return;\n+    }\n+    minWordLength = (int) configuration.getOrDefault(\"minWordLength\", minWordLength);\n+    userWordsToIgnore = (String) configuration.getOrDefault(\"userWordsToIgnore\", userWordsToIgnore);\n+  }\n+\n+  private ArrayList<String> getWordsToIgnore() {\n+    String exceptions = info.getResourceString(\"diagnosticExceptions\").replaceAll(\"\\n\", \"\");\n+    return new ArrayList<>(Arrays.asList(exceptions.split(\",\")));\n+  }\n+\n+  private ArrayList<String> getUserWordsToIgnore() {\n+    String exceptions = userWordsToIgnore.replaceAll(\"\\n\", \"\");\n+    return new ArrayList<>(Arrays.asList(exceptions.split(\",\")));\n+  }\n+\n+  @Override\n+  protected void check(DocumentContext documentContext) {\n+\n+    String lang = info.getResourceString(\"diagnosticLanguage\");\n+    ArrayList<String> wordsToIgnore = getWordsToIgnore();\n+\n+    languageToolMap.put(\"ru\", ruLangTool);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e58c2c16753028e6f457669699f910161174a5c"}, "originalPosition": 112}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08f2d884735b9bd7db8e192219042b6975dd957b", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/08f2d884735b9bd7db8e192219042b6975dd957b", "committedDate": "2020-03-06T09:51:56Z", "message": "\u0420\u0435\u0444\u0430\u0442\u043e\u0440\u0438\u043d\u0433 \u043a\u043e\u0434\u0430 \u0441 \u0432\u044b\u043d\u043e\u0441\u043e\u043c \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b, \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a, \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b43714260b11ca9aafaea51f1506ae9edc93f218", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/b43714260b11ca9aafaea51f1506ae9edc93f218", "committedDate": "2020-03-07T10:11:19Z", "message": "\u0411\u0430\u043c\u043f \u0432\u0435\u0440\u0441\u0438\u0438 BSL Parser, \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u043e\u043f\u0435\u0447\u0430\u0442\u043e\u043a by Nixel, \u043f\u0440\u0430\u0432\u043a\u0430 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u0435\u0439 \u043f\u043e\u0434 \u043d\u043e\u0432\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e \u043f\u0430\u0440\u0441\u0435\u0440\u0430."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMTk1Nzcy", "url": "https://github.com/1c-syntax/bsl-language-server/pull/985#pullrequestreview-371195772", "createdAt": "2020-03-09T13:47:22Z", "commit": {"oid": "b43714260b11ca9aafaea51f1506ae9edc93f218"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzo0NzoyM1rOFzofKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzo0NzoyM1rOFzofKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY4NTAzNA==", "bodyText": "@EightM \u044f \u0431\u044b \u0432\u043e\u0442 \u0442\u0443\u0442 \u0442\u043e\u0436\u0435 \u0434\u043e\u043a\u0430\u0442\u0438\u043b \u043c\u043e\u0438 \u043f\u0440\u0430\u0432\u043a\u0438 \u043f\u043e \u0443\u0431\u0438\u0440\u0430\u043d\u0438\u044e \\n \u0438\u0437 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u043b\u043e \u0438\u043d\u0442\u0435\u043d\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a. \u043d\u0443 \u043b\u0438\u0431\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0441\u044e\u0434\u0430, \u044f\u0432\u043d\u043e \u0432\u044b\u0437\u0432\u0430\u0432 intern() \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u043c", "url": "https://github.com/1c-syntax/bsl-language-server/pull/985#discussion_r389685034", "createdAt": "2020-03-09T13:47:23Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/TypoDiagnostic.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.languageserver.utils.Trees;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.bsl.parser.BSLParserRuleContext;\n+import lombok.extern.slf4j.Slf4j;\n+import org.antlr.v4.runtime.Token;\n+import org.apache.commons.lang3.StringUtils;\n+import org.languagetool.JLanguageTool;\n+import org.languagetool.language.AmericanEnglish;\n+import org.languagetool.language.Russian;\n+import org.languagetool.rules.Rule;\n+import org.languagetool.rules.RuleMatch;\n+import org.languagetool.rules.spelling.SpellingCheckRule;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.BADPRACTICE\n+  }\n+)\n+\n+@Slf4j\n+public class TypoDiagnostic extends AbstractDiagnostic {\n+\n+  private static final Russian ruLang = new Russian();\n+  private static final AmericanEnglish enLang = new AmericanEnglish();\n+  private static final JLanguageTool ruLangTool = new JLanguageTool(ruLang);\n+  private static final JLanguageTool enLangTool = new JLanguageTool(enLang);\n+  private static final Map<String, JLanguageTool> languageToolMap = Map.of(\n+    \"en\", enLangTool,\n+    \"ru\", ruLangTool\n+  );\n+\n+  static {\n+    languageToolMap.forEach((lang, languageTool) ->\n+      languageTool.getAllRules().stream()\n+        .filter(rule -> !rule.isDictionaryBasedSpellingRule())\n+        .map(Rule::getId)\n+        .forEach(languageTool::disableRule)\n+    );\n+  }\n+\n+  private static final Pattern SPACES_PATTERN = Pattern.compile(\"\\\\s+\");\n+  private static final Pattern QUOTE_PATTERN = Pattern.compile(\"\\\"\");\n+\n+  private static final Integer[] rulesToFind = new Integer[]{\n+    BSLParser.RULE_string,\n+    BSLParser.RULE_lValue,\n+    BSLParser.RULE_var_name,\n+    BSLParser.RULE_subName\n+  };\n+  private static final Set<Integer> tokenTypes = Set.of(\n+    BSLParser.STRING,\n+    BSLParser.IDENTIFIER\n+  );\n+\n+  private static final int DEFAULT_MIN_WORD_LENGTH = 3;\n+  private static final String DEFAULT_USER_WORDS_TO_IGNORE = \"\";\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + DEFAULT_MIN_WORD_LENGTH\n+  )\n+  private int minWordLength = DEFAULT_MIN_WORD_LENGTH;\n+\n+  @DiagnosticParameter(\n+    type = String.class\n+  )\n+  private String userWordsToIgnore = DEFAULT_USER_WORDS_TO_IGNORE;\n+\n+  public TypoDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public void configure(Map<String, Object> configuration) {\n+    if (configuration == null) {\n+      return;\n+    }\n+    minWordLength = Math.max((int) configuration.getOrDefault(\"minWordLength\", minWordLength), 2);\n+    userWordsToIgnore = (String) configuration.getOrDefault(\"userWordsToIgnore\", userWordsToIgnore);\n+  }\n+\n+  private ArrayList<String> getWordsToIgnore() {\n+    String exceptions = info.getResourceString(\"diagnosticExceptions\").replaceAll(\"\\n\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43714260b11ca9aafaea51f1506ae9edc93f218"}, "originalPosition": 127}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9ab520b68fec8aa16071524bb49766d8fd3ffbc", "author": {"user": {"login": "EightM", "name": null}}, "url": "https://github.com/1c-syntax/bsl-language-server/commit/c9ab520b68fec8aa16071524bb49766d8fd3ffbc", "committedDate": "2020-03-09T14:08:30Z", "message": "\u0418\u043d\u0442\u0435\u0440\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4888, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}