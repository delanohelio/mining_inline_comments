{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyOTE2OTUx", "number": 1215, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMDozNzoxNVrOD_facA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzoyMTo1M1rOECJnow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTAxNTUyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic_ru.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMDozNzoxNVrOGaLlUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODozNTozOFrOGaUJ4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEwNTkzNg==", "bodyText": "\"\u0447\u0442\u043e\u0431\u044b\"", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430105936", "createdAt": "2020-05-26T00:37:15Z", "author": {"login": "otymko"}, "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic_ru.properties", "diffHunk": "@@ -0,0 +1,4 @@\n+diagnosticMessage=\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u0442\u0430\u043a \u0447\u0442\u043e\u0431 \u0434\u043b\u0438\u043d\u0430 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u044b\u043b\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 %s", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0a3f201aa27ca329abe54674dcd208fd29c19b4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0NjM2OQ==", "bodyText": "\u041b\u0435\u0448\u0430-\u041b\u0435\u0448\u0430...", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430246369", "createdAt": "2020-05-26T08:35:38Z", "author": {"login": "theshadowco"}, "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic_ru.properties", "diffHunk": "@@ -0,0 +1,4 @@\n+diagnosticMessage=\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u0442\u0430\u043a \u0447\u0442\u043e\u0431 \u0434\u043b\u0438\u043d\u0430 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u044b\u043b\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 %s", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEwNTkzNg=="}, "originalCommit": {"oid": "b0a3f201aa27ca329abe54674dcd208fd29c19b4"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTAyMTM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMDo0MzoxMlrOGaLo0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDowOTowMlrOGaXj9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEwNjgzNQ==", "bodyText": "\u0422\u0438\u043f: error; \u0432\u0430\u0436\u043d\u043e\u0441\u0442\u044c: major; \u0432\u0440\u0435\u043c\u044f \u043d\u0430 \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u0437 \u0438\u0448\u0443\u0437\u0430 10 \u043c\u0438\u043d, \u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0447\u0442\u043e-\u0442\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0435.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430106835", "createdAt": "2020-05-26T00:43:12Z", "author": {"login": "otymko"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0a3f201aa27ca329abe54674dcd208fd29c19b4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNjc4Ng==", "bodyText": "\u0438 \u0441\u0442\u043e\u0438\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c scope = BSL", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430236786", "createdAt": "2020-05-26T08:19:05Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEwNjgzNQ=="}, "originalCommit": {"oid": "b0a3f201aa27ca329abe54674dcd208fd29c19b4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0OTQ2NA==", "bodyText": "@alkoleft \u043e\u0431\u0440\u0430\u0442\u0438 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0432 \u0438\u0448\u0443\u0437\u0430\u0445 \u044d\u0442\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0441\u0432\u043e\u0435\u043c \u043f\u0440\u0438\u0441\u0443\u0441\u0442\u0432\u0442\u0443\u044e\u0442", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430249464", "createdAt": "2020-05-26T08:40:41Z", "author": {"login": "theshadowco"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEwNjgzNQ=="}, "originalCommit": {"oid": "b0a3f201aa27ca329abe54674dcd208fd29c19b4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMwMjE5Nw==", "bodyText": "\u042f \u043f\u0435\u0440\u0435\u0441\u043e\u0437\u0434\u0430\u0432\u0430\u043b \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0443 \u0438 \u0443\u043f\u0443\u0441\u0442\u0438\u043b, \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0432\u0441\u0435 \u0431\u044b\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f\u043c", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430302197", "createdAt": "2020-05-26T10:09:02Z", "author": {"login": "alkoleft"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEwNjgzNQ=="}, "originalCommit": {"oid": "b0a3f201aa27ca329abe54674dcd208fd29c19b4"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTg0MDA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxNjoxMlrOGaTeBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxNjoxMlrOGaTeBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNTE0MA==", "bodyText": "\u0438\u0437\u044f\u0449\u043d\u0435\u043d\u044c\u043a\u043e", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430235140", "createdAt": "2020-05-26T08:16:12Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class ObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_OBJECT_NAME_LENGTH\n+  )\n+  private int maxObjectNameLength = MAX_OBJECT_NAME_LENGTH;\n+\n+  public ObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTg0MTg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxNjo0M1rOGaTfLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo0Mzo1NlrOGdcdSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNTQzOA==", "bodyText": "\u043d\u0435 \u043f\u0430\u0434\u0430\u0435\u0442 \u043b\u0438 \u043d\u0430 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0443\u0441\u0442\u043e\u043c \u043c\u043e\u0434\u0443\u043b\u0435? \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0435\u0441\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e EOF?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430235438", "createdAt": "2020-05-26T08:16:43Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class ObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_OBJECT_NAME_LENGTH\n+  )\n+  private int maxObjectNameLength = MAX_OBJECT_NAME_LENGTH;\n+\n+  public ObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(objectName -> diagnosticStorage.addDiagnostic(\n+        documentContext.getTokensFromDefaultChannel().get(0),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMwMjY0Mg==", "bodyText": "\u0414\u043e\u0431\u0430\u0432\u043b\u044e \u0442\u0435\u0441\u0442", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430302642", "createdAt": "2020-05-26T10:09:56Z", "author": {"login": "alkoleft"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class ObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_OBJECT_NAME_LENGTH\n+  )\n+  private int maxObjectNameLength = MAX_OBJECT_NAME_LENGTH;\n+\n+  public ObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(objectName -> diagnosticStorage.addDiagnostic(\n+        documentContext.getTokensFromDefaultChannel().get(0),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNTQzOA=="}, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyODEzOQ==", "bodyText": "\u0422\u0435\u0441\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r433528139", "createdAt": "2020-06-01T22:43:56Z", "author": {"login": "alkoleft"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class ObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_OBJECT_NAME_LENGTH\n+  )\n+  private int maxObjectNameLength = MAX_OBJECT_NAME_LENGTH;\n+\n+  public ObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(objectName -> diagnosticStorage.addDiagnostic(\n+        documentContext.getTokensFromDefaultChannel().get(0),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNTQzOA=="}, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTg0NDAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxNzoxOFrOGaTggg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDo1NToyNFrOGaZCEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNTc3OA==", "bodyText": "\u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 - \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0443 \u0432 MetadataObjectNameLength", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430235778", "createdAt": "2020-05-26T08:17:18Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class ObjectNameLengthDiagnostic extends AbstractDiagnostic {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMwMzE0Mg==", "bodyText": "\u0415\u0441\u0442\u044c \u0443 Idea \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430303142", "createdAt": "2020-05-26T10:10:43Z", "author": {"login": "alkoleft"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class ObjectNameLengthDiagnostic extends AbstractDiagnostic {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNTc3OA=="}, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMwNjEyNA==", "bodyText": "Shift-F6 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 \u0438 \u043c\u0435\u0441\u0442\u0430 \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f. \u043d\u043e \u0415\u041c\u041d\u0418\u041f \u0440\u0435\u0441\u0443\u0440\u0441\u044b \u043d\u0430\u0434\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c \u0440\u0443\u043a\u0430\u043c\u0438.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430306124", "createdAt": "2020-05-26T10:16:30Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class ObjectNameLengthDiagnostic extends AbstractDiagnostic {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNTc3OA=="}, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMyNjI5MA==", "bodyText": "\u042f\u0441\u043d\u0435\u043d\u044c\u043a\u043e. \u0421\u043f\u0430\u0441\u0438\u0431\u043e", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430326290", "createdAt": "2020-05-26T10:55:24Z", "author": {"login": "alkoleft"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  minutesToFix = 1,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class ObjectNameLengthDiagnostic extends AbstractDiagnostic {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNTc3OA=="}, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTg4NjE3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnosticTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoyOToxM1rOGaT7IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo0MTowMlrOGdcZpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0MjU5Mg==", "bodyText": "\u0432 AbstractDiagnosticTest \u0435\u0441\u0442\u044c \u043c\u0435\u0442\u043e\u0434 initServerContext\nhttps://github.com/1c-syntax/bsl-language-server/blob/develop/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractDiagnosticTest.java#L56\n\u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c getDocumentContext(String), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u0435\u0440\u043d\u0435\u0442 documentContext \u0432 \u043f\u0440\u043e\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440-\u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435.\nhttps://github.com/1c-syntax/bsl-language-server/blob/develop/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractDiagnosticTest.java#L117\n\u0430 \u043e\u0442 \u0442\u0443\u0434\u0430 \u0443\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0435\u0435 \u043a\u0430\u043a \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 beforeEach)\n\u042f \u0445\u043e\u0447\u0443 \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0443\u0447\u043d\u043e\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u0442\u0435\u0441\u0442\u0430\u0445, \u0442.\u043a. \u0435\u0433\u043e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u0432 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u0441 \u0432\u044b\u0437\u043e\u0432\u043e\u043c \u0432\u0441\u0435\u0445 \u043d\u0443\u0436\u043d\u044b\u0445 \u0430\u043f\u0438 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435\u0439, \u0438 \u0445\u043e\u0447\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0440\u0430\u0442\u0438\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u0447\u0435\u043a \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433\u0430. \u041f\u0440\u043e\u0448\u0443 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0432\u044b\u0448\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u0441\u0442 \u0441 \u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430242592", "createdAt": "2020-05-26T08:29:13Z", "author": {"login": "nixel2007"}, "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnosticTest.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.ServerContext;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import com.github._1c_syntax.utils.Absolute;\n+import lombok.SneakyThrows;\n+import org.apache.commons.io.FileUtils;\n+import org.eclipse.lsp4j.Diagnostic;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.ValueSource;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import static com.github._1c_syntax.bsl.languageserver.util.Assertions.assertThat;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n+\n+class ObjectNameLengthDiagnosticTest extends AbstractDiagnosticTest<ObjectNameLengthDiagnostic> {\n+  private MDObjectBase module;\n+  private DocumentContext documentContext;\n+\n+  ObjectNameLengthDiagnosticTest() {\n+    super(ObjectNameLengthDiagnostic.class);\n+  }\n+\n+  private static final String PATH_TO_METADATA = \"src/test/resources/metadata\";\n+\n+  @Test\n+  void testConfigure() {\n+    Map<String, Object> configuration = diagnosticInstance.getInfo().getDefaultConfiguration();\n+    configuration.put(\"maxObjectNameLength\", 10);\n+    diagnosticInstance.configure(configuration);\n+\n+    getDocumentContextFromFile(\"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\");\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(1);\n+  }\n+\n+  @Test\n+  void testConfigureNegative() {\n+\n+    Map<String, Object> configuration = diagnosticInstance.getInfo().getDefaultConfiguration();\n+    configuration.put(\"maxObjectNameLength\", 90);\n+    diagnosticInstance.configure(configuration);\n+\n+    getDocumentContextFromFile(\"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\");\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u041e\u0447\u0435\u043d\u044c\u0414\u043b\u0438\u043d\u043d\u043e\u0435\u0418\u043c\u044f\u041e\u0431\u044a\u0435\u043a\u0442\u0430\u041a\u043e\u0442\u043e\u0440\u043e\u0435\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b\u0412\u0420\u0430\u0431\u043e\u0442\u0435\u0410\u0422\u0430\u043a\u0436\u0435\u041e\u0448\u0438\u0431\u043a\u0438\u0412\u044b\u0433\u0440\u0443\u0437\u043a\u0438\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\");\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(0);\n+  }\n+\n+  @ParameterizedTest\n+  @ValueSource(strings = {\n+    \"Catalogs/\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a1/Ext/ObjectModule.bsl\",\n+    \"Catalogs/\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a1/Forms/\u0424\u043e\u0440\u043c\u0430\u0412\u044b\u0431\u043e\u0440\u0430/Ext/Form/Module.bsl\",\n+    \"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\"\n+  })\n+  void test(String modulePath) {\n+\n+    getDocumentContextFromFile(modulePath);\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u041e\u0447\u0435\u043d\u044c\u0414\u043b\u0438\u043d\u043d\u043e\u0435\u0418\u043c\u044f\u041e\u0431\u044a\u0435\u043a\u0442\u0430\u041a\u043e\u0442\u043e\u0440\u043e\u0435\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b\u0412\u0420\u0430\u0431\u043e\u0442\u0435\u0410\u0422\u0430\u043a\u0436\u0435\u041e\u0448\u0438\u0431\u043a\u0438\u0412\u044b\u0433\u0440\u0443\u0437\u043a\u0438\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\");\n+\n+    when(documentContext.getMdObject()).thenReturn(Optional.of(module));\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(1);\n+  }\n+\n+  @Test\n+  void testNegative() {\n+\n+    getDocumentContextFromFile(\"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\");\n+\n+    // given\n+    when(module.getName()).thenReturn(\"Short\");\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(0);\n+  }\n+\n+  @SneakyThrows\n+  void getDocumentContextFromFile(String modulePath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMwMzYwMA==", "bodyText": "\u0421\u0434\u0435\u043b\u0430\u043b \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u043c, \u0443\u0447\u0442\u0443", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430303600", "createdAt": "2020-05-26T10:11:39Z", "author": {"login": "alkoleft"}, "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnosticTest.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.ServerContext;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import com.github._1c_syntax.utils.Absolute;\n+import lombok.SneakyThrows;\n+import org.apache.commons.io.FileUtils;\n+import org.eclipse.lsp4j.Diagnostic;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.ValueSource;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import static com.github._1c_syntax.bsl.languageserver.util.Assertions.assertThat;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n+\n+class ObjectNameLengthDiagnosticTest extends AbstractDiagnosticTest<ObjectNameLengthDiagnostic> {\n+  private MDObjectBase module;\n+  private DocumentContext documentContext;\n+\n+  ObjectNameLengthDiagnosticTest() {\n+    super(ObjectNameLengthDiagnostic.class);\n+  }\n+\n+  private static final String PATH_TO_METADATA = \"src/test/resources/metadata\";\n+\n+  @Test\n+  void testConfigure() {\n+    Map<String, Object> configuration = diagnosticInstance.getInfo().getDefaultConfiguration();\n+    configuration.put(\"maxObjectNameLength\", 10);\n+    diagnosticInstance.configure(configuration);\n+\n+    getDocumentContextFromFile(\"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\");\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(1);\n+  }\n+\n+  @Test\n+  void testConfigureNegative() {\n+\n+    Map<String, Object> configuration = diagnosticInstance.getInfo().getDefaultConfiguration();\n+    configuration.put(\"maxObjectNameLength\", 90);\n+    diagnosticInstance.configure(configuration);\n+\n+    getDocumentContextFromFile(\"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\");\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u041e\u0447\u0435\u043d\u044c\u0414\u043b\u0438\u043d\u043d\u043e\u0435\u0418\u043c\u044f\u041e\u0431\u044a\u0435\u043a\u0442\u0430\u041a\u043e\u0442\u043e\u0440\u043e\u0435\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b\u0412\u0420\u0430\u0431\u043e\u0442\u0435\u0410\u0422\u0430\u043a\u0436\u0435\u041e\u0448\u0438\u0431\u043a\u0438\u0412\u044b\u0433\u0440\u0443\u0437\u043a\u0438\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\");\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(0);\n+  }\n+\n+  @ParameterizedTest\n+  @ValueSource(strings = {\n+    \"Catalogs/\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a1/Ext/ObjectModule.bsl\",\n+    \"Catalogs/\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a1/Forms/\u0424\u043e\u0440\u043c\u0430\u0412\u044b\u0431\u043e\u0440\u0430/Ext/Form/Module.bsl\",\n+    \"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\"\n+  })\n+  void test(String modulePath) {\n+\n+    getDocumentContextFromFile(modulePath);\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u041e\u0447\u0435\u043d\u044c\u0414\u043b\u0438\u043d\u043d\u043e\u0435\u0418\u043c\u044f\u041e\u0431\u044a\u0435\u043a\u0442\u0430\u041a\u043e\u0442\u043e\u0440\u043e\u0435\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b\u0412\u0420\u0430\u0431\u043e\u0442\u0435\u0410\u0422\u0430\u043a\u0436\u0435\u041e\u0448\u0438\u0431\u043a\u0438\u0412\u044b\u0433\u0440\u0443\u0437\u043a\u0438\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\");\n+\n+    when(documentContext.getMdObject()).thenReturn(Optional.of(module));\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(1);\n+  }\n+\n+  @Test\n+  void testNegative() {\n+\n+    getDocumentContextFromFile(\"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\");\n+\n+    // given\n+    when(module.getName()).thenReturn(\"Short\");\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(0);\n+  }\n+\n+  @SneakyThrows\n+  void getDocumentContextFromFile(String modulePath) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0MjU5Mg=="}, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyNzIwNw==", "bodyText": "\u041f\u043e\u043f\u0440\u0430\u0432\u0438\u043b \u043c\u0435\u0442\u043e\u0434, beforeEach \u043d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0442\u0443\u0442", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r433527207", "createdAt": "2020-06-01T22:41:02Z", "author": {"login": "alkoleft"}, "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ObjectNameLengthDiagnosticTest.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.ServerContext;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import com.github._1c_syntax.utils.Absolute;\n+import lombok.SneakyThrows;\n+import org.apache.commons.io.FileUtils;\n+import org.eclipse.lsp4j.Diagnostic;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.ValueSource;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import static com.github._1c_syntax.bsl.languageserver.util.Assertions.assertThat;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n+\n+class ObjectNameLengthDiagnosticTest extends AbstractDiagnosticTest<ObjectNameLengthDiagnostic> {\n+  private MDObjectBase module;\n+  private DocumentContext documentContext;\n+\n+  ObjectNameLengthDiagnosticTest() {\n+    super(ObjectNameLengthDiagnostic.class);\n+  }\n+\n+  private static final String PATH_TO_METADATA = \"src/test/resources/metadata\";\n+\n+  @Test\n+  void testConfigure() {\n+    Map<String, Object> configuration = diagnosticInstance.getInfo().getDefaultConfiguration();\n+    configuration.put(\"maxObjectNameLength\", 10);\n+    diagnosticInstance.configure(configuration);\n+\n+    getDocumentContextFromFile(\"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\");\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(1);\n+  }\n+\n+  @Test\n+  void testConfigureNegative() {\n+\n+    Map<String, Object> configuration = diagnosticInstance.getInfo().getDefaultConfiguration();\n+    configuration.put(\"maxObjectNameLength\", 90);\n+    diagnosticInstance.configure(configuration);\n+\n+    getDocumentContextFromFile(\"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\");\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u041e\u0447\u0435\u043d\u044c\u0414\u043b\u0438\u043d\u043d\u043e\u0435\u0418\u043c\u044f\u041e\u0431\u044a\u0435\u043a\u0442\u0430\u041a\u043e\u0442\u043e\u0440\u043e\u0435\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b\u0412\u0420\u0430\u0431\u043e\u0442\u0435\u0410\u0422\u0430\u043a\u0436\u0435\u041e\u0448\u0438\u0431\u043a\u0438\u0412\u044b\u0433\u0440\u0443\u0437\u043a\u0438\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\");\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(0);\n+  }\n+\n+  @ParameterizedTest\n+  @ValueSource(strings = {\n+    \"Catalogs/\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a1/Ext/ObjectModule.bsl\",\n+    \"Catalogs/\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a1/Forms/\u0424\u043e\u0440\u043c\u0430\u0412\u044b\u0431\u043e\u0440\u0430/Ext/Form/Module.bsl\",\n+    \"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\"\n+  })\n+  void test(String modulePath) {\n+\n+    getDocumentContextFromFile(modulePath);\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u041e\u0447\u0435\u043d\u044c\u0414\u043b\u0438\u043d\u043d\u043e\u0435\u0418\u043c\u044f\u041e\u0431\u044a\u0435\u043a\u0442\u0430\u041a\u043e\u0442\u043e\u0440\u043e\u0435\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b\u0412\u0420\u0430\u0431\u043e\u0442\u0435\u0410\u0422\u0430\u043a\u0436\u0435\u041e\u0448\u0438\u0431\u043a\u0438\u0412\u044b\u0433\u0440\u0443\u0437\u043a\u0438\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\");\n+\n+    when(documentContext.getMdObject()).thenReturn(Optional.of(module));\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(1);\n+  }\n+\n+  @Test\n+  void testNegative() {\n+\n+    getDocumentContextFromFile(\"CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\");\n+\n+    // given\n+    when(module.getName()).thenReturn(\"Short\");\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(0);\n+  }\n+\n+  @SneakyThrows\n+  void getDocumentContextFromFile(String modulePath) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0MjU5Mg=="}, "originalCommit": {"oid": "6f7d9a91c006b158c7681a98b3fbaadf366bef3c"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTEyMTk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxMTowNFrOGagJFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo0MzoyM1rOGdccpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0Mjc3Mw==", "bodyText": "\u041a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043b\u0438 \u0442\u0430\u043a \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u0442\u044c?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430442773", "createdAt": "2020-05-26T14:11:04Z", "author": {"login": "alkoleft"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import org.eclipse.lsp4j.Range;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  scope = DiagnosticScope.BSL,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class MetadataObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_METADATA_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_METADATA_OBJECT_NAME_LENGTH\n+  )\n+  private int maxMetadataObjectNameLength = MAX_METADATA_OBJECT_NAME_LENGTH;\n+\n+  public MetadataObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(this::addDiagnostic);\n+  }\n+\n+  private boolean checkName(String name) {\n+    return name.length() > maxMetadataObjectNameLength;\n+  }\n+\n+  private void addDiagnostic(String name) {\n+    var tokens = documentContext.getTokensFromDefaultChannel();\n+    String message = info.getMessage(maxMetadataObjectNameLength);\n+    if (tokens.isEmpty()) {\n+      diagnosticStorage.addDiagnostic(new Range(), message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120f86e0a3fe17b4464f8184f4c77e5217b694ce"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0NjE2Ng==", "bodyText": "\u0420\u0435\u043d\u0434\u0436\u0430 \u0442\u043e \u043d\u0435\u0442, \u0437\u043d\u0430\u0447\u0438\u0442 \u0441\u043e\u043d\u0430\u0440\u043a\u0443\u0431 \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u0435\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442 \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430546166", "createdAt": "2020-05-26T16:28:00Z", "author": {"login": "otymko"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import org.eclipse.lsp4j.Range;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  scope = DiagnosticScope.BSL,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class MetadataObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_METADATA_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_METADATA_OBJECT_NAME_LENGTH\n+  )\n+  private int maxMetadataObjectNameLength = MAX_METADATA_OBJECT_NAME_LENGTH;\n+\n+  public MetadataObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(this::addDiagnostic);\n+  }\n+\n+  private boolean checkName(String name) {\n+    return name.length() > maxMetadataObjectNameLength;\n+  }\n+\n+  private void addDiagnostic(String name) {\n+    var tokens = documentContext.getTokensFromDefaultChannel();\n+    String message = info.getMessage(maxMetadataObjectNameLength);\n+    if (tokens.isEmpty()) {\n+      diagnosticStorage.addDiagnostic(new Range(), message);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0Mjc3Mw=="}, "originalCommit": {"oid": "120f86e0a3fe17b4464f8184f4c77e5217b694ce"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0ODE5Ng==", "bodyText": "\u0441\u0442\u0440\u0430\u043d\u043d\u043e, \u0447\u0442\u043e \u0442\u0435\u0441\u0442 identical ranges \u043d\u0435 \u0443\u043f\u0430\u043b...\n@theshadowco ?", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430548196", "createdAt": "2020-05-26T16:31:07Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import org.eclipse.lsp4j.Range;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  scope = DiagnosticScope.BSL,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class MetadataObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_METADATA_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_METADATA_OBJECT_NAME_LENGTH\n+  )\n+  private int maxMetadataObjectNameLength = MAX_METADATA_OBJECT_NAME_LENGTH;\n+\n+  public MetadataObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(this::addDiagnostic);\n+  }\n+\n+  private boolean checkName(String name) {\n+    return name.length() > maxMetadataObjectNameLength;\n+  }\n+\n+  private void addDiagnostic(String name) {\n+    var tokens = documentContext.getTokensFromDefaultChannel();\n+    String message = info.getMessage(maxMetadataObjectNameLength);\n+    if (tokens.isEmpty()) {\n+      diagnosticStorage.addDiagnostic(new Range(), message);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0Mjc3Mw=="}, "originalCommit": {"oid": "120f86e0a3fe17b4464f8184f4c77e5217b694ce"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0OTA5NA==", "bodyText": "\u043d\u043e \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435\u0442, \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e.\n\u0432 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0438\u0437 \u0441\u043e\u0441\u0435\u0434\u043d\u0438\u0445 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435 \u0432\u0435\u0448\u0430\u043b\u0441\u044f \u0442\u0430\u043a\u043e\u0439 \u0438\u0448\u0443\u0437, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044f \u043f\u043e\u043c\u043d\u044e (@asosnoviy \u043d\u0435 \u043f\u043e\u043c\u043d\u0438\u0448\u044c \u0433\u0434\u0435?)\n\u043f\u043b\u044e\u0441 \u0441\u0442\u043e\u0438\u0442 \u0432\u0437\u044f\u0442\u044c \u0442\u043e\u043a\u0435\u043d\u044b \u0438\u0437 \u0432\u0441\u0435\u0445 \u043a\u0430\u043d\u0430\u043b\u043e\u0432, \u0430 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0433\u043e. \u0432 \u043c\u043e\u0434\u0443\u043b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044b \u0441\u0442\u0440\u043e\u043a, \u0438 \u0442\u043e\u0433\u0434\u0430 \u043f\u043e\u0432\u0435\u0441\u0438\u0442\u044c \u0438\u0448\u0443\u0437 \u043c\u043e\u0436\u043d\u043e.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430549094", "createdAt": "2020-05-26T16:32:37Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import org.eclipse.lsp4j.Range;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  scope = DiagnosticScope.BSL,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class MetadataObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_METADATA_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_METADATA_OBJECT_NAME_LENGTH\n+  )\n+  private int maxMetadataObjectNameLength = MAX_METADATA_OBJECT_NAME_LENGTH;\n+\n+  public MetadataObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(this::addDiagnostic);\n+  }\n+\n+  private boolean checkName(String name) {\n+    return name.length() > maxMetadataObjectNameLength;\n+  }\n+\n+  private void addDiagnostic(String name) {\n+    var tokens = documentContext.getTokensFromDefaultChannel();\n+    String message = info.getMessage(maxMetadataObjectNameLength);\n+    if (tokens.isEmpty()) {\n+      diagnosticStorage.addDiagnostic(new Range(), message);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0Mjc3Mw=="}, "originalCommit": {"oid": "120f86e0a3fe17b4464f8184f4c77e5217b694ce"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU4MDU1Mw==", "bodyText": "Channel'\u044b \u043c\u043e\u0433\u0443 \u043f\u0435\u0440\u0435\u0431\u0440\u0430\u0442\u044c, \u0432\u043e\u043f\u0440\u043e\u0441 \u043f\u0443\u0441\u0442\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f \u043e\u0441\u0442\u0430\u0435\u0442\u0441\u044f, new line \u043c\u043e\u0436\u0435\u0442 \u043d\u0435 \u0431\u044b\u0442\u044c.\n\u0410 \u0435\u0441\u0442\u044c \u0433\u0434\u0435 \u043f\u043e\u0442\u0435\u0441\u0442\u0438\u0442\u044c \u0432 \u0441\u0432\u044f\u0437\u043a\u0435 \u0441 \u0441\u043e\u043d\u0430\u0440\u043e\u043c, \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u0441\u044f \u043b\u0438 \u043f\u0443\u0441\u0442\u043e\u0439 \u043c\u043e\u0434\u0443\u043b\u044c, \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438 \u043f\u0440\u043e\u0447\u0435\u0435?\n\u041f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e \u0442\u0430\u043a\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442:\n\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0431\u043e\u0440 channels, \u043f\u0440\u0438 \u043f\u0443\u0441\u0442\u043e\u043c - \u043f\u0443\u0441\u0442\u043e\u0439 range.\n\u0418 \u0432\u0435\u0440\u043d\u0443\u0442\u0441\u044f \u043a \u044d\u0442\u043e\u043c\u0443 \u0432\u043e\u043f\u0440\u043e\u0441\u0443 \u0432 #1214", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430580553", "createdAt": "2020-05-26T17:22:04Z", "author": {"login": "alkoleft"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import org.eclipse.lsp4j.Range;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  scope = DiagnosticScope.BSL,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class MetadataObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_METADATA_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_METADATA_OBJECT_NAME_LENGTH\n+  )\n+  private int maxMetadataObjectNameLength = MAX_METADATA_OBJECT_NAME_LENGTH;\n+\n+  public MetadataObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(this::addDiagnostic);\n+  }\n+\n+  private boolean checkName(String name) {\n+    return name.length() > maxMetadataObjectNameLength;\n+  }\n+\n+  private void addDiagnostic(String name) {\n+    var tokens = documentContext.getTokensFromDefaultChannel();\n+    String message = info.getMessage(maxMetadataObjectNameLength);\n+    if (tokens.isEmpty()) {\n+      diagnosticStorage.addDiagnostic(new Range(), message);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0Mjc3Mw=="}, "originalCommit": {"oid": "120f86e0a3fe17b4464f8184f4c77e5217b694ce"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk4MTYzNQ==", "bodyText": "\u0432\u043e\u043f\u0440\u043e\u0441 \u043f\u0443\u0441\u0442\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f \u043e\u0441\u0442\u0430\u0435\u0442\u0441\u044f, new line \u043c\u043e\u0436\u0435\u0442 \u043d\u0435 \u0431\u044b\u0442\u044c.\n\n\u0442\u043e\u0433\u0434\u0430 \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0445\u043e\u0434\u0438\u0442\u044c \u0438\u0437 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0438 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0432\u0435\u0448\u0430\u0442\u044c, \u0442.\u043a. \u0430\u043d\u0430\u043b\u0438\u0437 \u0441\u043e\u043d\u0430\u0440\u043e\u043c \u0440\u0443\u0445\u043d\u0435\u0442 \u0432 \u044d\u0442\u043e\u043c \u043c\u043e\u043c\u0435\u043d\u0442\u0435. BSL LS \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u043a\u0438\u043d\u0443\u0442\u044c \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0443 \u043d\u0430 \u043f\u0443\u0441\u0442\u043e\u0439 \u0440\u044d\u043d\u0436, \u043d\u043e \u0441\u043e\u043d\u0430\u0440 \u044d\u0442\u043e \u043f\u0440\u043e\u0436\u0435\u0432\u0430\u0442\u044c \u043d\u0435 \u0441\u043c\u043e\u0436\u0435\u0442.\n\n\u0410 \u0435\u0441\u0442\u044c \u0433\u0434\u0435 \u043f\u043e\u0442\u0435\u0441\u0442\u0438\u0442\u044c \u0432 \u0441\u0432\u044f\u0437\u043a\u0435 \u0441 \u0441\u043e\u043d\u0430\u0440\u043e\u043c, \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u0441\u044f \u043b\u0438 \u043f\u0443\u0441\u0442\u043e\u0439 \u043c\u043e\u0434\u0443\u043b\u044c, \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438 \u043f\u0440\u043e\u0447\u0435\u0435?\n\n\u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0431\u0440\u0430\u0442\u044c \u0441\u043e\u043d\u0430\u0440-\u043f\u043b\u0430\u0433\u0438\u043d, \u0443\u043a\u0430\u0437\u0430\u0432 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u0445 \u0442\u0432\u043e\u044e \u0440\u0435\u043f\u0443 \u0438 \u0445\u044d\u0448 \u043a\u043e\u043c\u043c\u0438\u0442\u0430. \u043d\u0443 \u0438\u043b\u0438 \u0447\u0435\u0440\u0435\u0437 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u0443\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443 gradlew install \u0438 \u0437\u0430\u0442\u044f\u0433\u0438\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 mavenLocal() \u0432 \u0433\u0440\u0430\u0434\u043b\u044c \u0444\u0430\u0439\u043b\u0435.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430981635", "createdAt": "2020-05-27T09:27:00Z", "author": {"login": "nixel2007"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import org.eclipse.lsp4j.Range;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  scope = DiagnosticScope.BSL,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class MetadataObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_METADATA_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_METADATA_OBJECT_NAME_LENGTH\n+  )\n+  private int maxMetadataObjectNameLength = MAX_METADATA_OBJECT_NAME_LENGTH;\n+\n+  public MetadataObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(this::addDiagnostic);\n+  }\n+\n+  private boolean checkName(String name) {\n+    return name.length() > maxMetadataObjectNameLength;\n+  }\n+\n+  private void addDiagnostic(String name) {\n+    var tokens = documentContext.getTokensFromDefaultChannel();\n+    String message = info.getMessage(maxMetadataObjectNameLength);\n+    if (tokens.isEmpty()) {\n+      diagnosticStorage.addDiagnostic(new Range(), message);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0Mjc3Mw=="}, "originalCommit": {"oid": "120f86e0a3fe17b4464f8184f4c77e5217b694ce"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5NDc1Mg==", "bodyText": "\u0432 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0438\u0437 \u0441\u043e\u0441\u0435\u0434\u043d\u0438\u0445 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435 \u0432\u0435\u0448\u0430\u043b\u0441\u044f \u0442\u0430\u043a\u043e\u0439 \u0438\u0448\u0443\u0437, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044f \u043f\u043e\u043c\u043d\u044e (@asosnoviy \u043d\u0435 \u043f\u043e\u043c\u043d\u0438\u0448\u044c \u0433\u0434\u0435?)\n\n\n\u0412 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0435 \u043d\u0430 \u0442\u0438\u043f\u044b \u043c\u043e\u0434\u0443\u043b\u044f. \u0412\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0442\u043e\u043a\u0435\u043d.", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r430994752", "createdAt": "2020-05-27T09:49:08Z", "author": {"login": "asosnoviy"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import org.eclipse.lsp4j.Range;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  scope = DiagnosticScope.BSL,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class MetadataObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_METADATA_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_METADATA_OBJECT_NAME_LENGTH\n+  )\n+  private int maxMetadataObjectNameLength = MAX_METADATA_OBJECT_NAME_LENGTH;\n+\n+  public MetadataObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(this::addDiagnostic);\n+  }\n+\n+  private boolean checkName(String name) {\n+    return name.length() > maxMetadataObjectNameLength;\n+  }\n+\n+  private void addDiagnostic(String name) {\n+    var tokens = documentContext.getTokensFromDefaultChannel();\n+    String message = info.getMessage(maxMetadataObjectNameLength);\n+    if (tokens.isEmpty()) {\n+      diagnosticStorage.addDiagnostic(new Range(), message);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0Mjc3Mw=="}, "originalCommit": {"oid": "120f86e0a3fe17b4464f8184f4c77e5217b694ce"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyNzk3Mg==", "bodyText": "\u041f\u043e\u043f\u0440\u0430\u0432\u0438\u043b \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u043f\u0440\u0438 \u043d\u0435 \u043f\u0443\u0441\u0442\u043e\u043c \u043c\u043e\u0434\u0443\u043b\u0435 \u0432\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u043d\u0435 EOF \u0442\u043e\u043a\u0435\u043d", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r433527972", "createdAt": "2020-06-01T22:43:23Z", "author": {"login": "alkoleft"}, "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import org.eclipse.lsp4j.Range;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  scope = DiagnosticScope.BSL,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class MetadataObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_METADATA_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_METADATA_OBJECT_NAME_LENGTH\n+  )\n+  private int maxMetadataObjectNameLength = MAX_METADATA_OBJECT_NAME_LENGTH;\n+\n+  public MetadataObjectNameLengthDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  protected void check() {\n+    documentContext\n+      .getMdObject()\n+      .map(MDObjectBase::getName)\n+      .filter(this::checkName)\n+      .ifPresent(this::addDiagnostic);\n+  }\n+\n+  private boolean checkName(String name) {\n+    return name.length() > maxMetadataObjectNameLength;\n+  }\n+\n+  private void addDiagnostic(String name) {\n+    var tokens = documentContext.getTokensFromDefaultChannel();\n+    String message = info.getMessage(maxMetadataObjectNameLength);\n+    if (tokens.isEmpty()) {\n+      diagnosticStorage.addDiagnostic(new Range(), message);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0Mjc3Mw=="}, "originalCommit": {"oid": "120f86e0a3fe17b4464f8184f4c77e5217b694ce"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjQxMTk4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic_ru.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDo1Njo0NVrOGeWrLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDo1Njo0NVrOGeWrLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4MTk2NA==", "bodyText": "\u0437\u0430\u043f\u044f\u0442\u0430\u044f \u043f\u043e\u0441\u043b\u0435 \u0442\u0430\u043a", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r434481964", "createdAt": "2020-06-03T10:56:45Z", "author": {"login": "theshadowco"}, "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic_ru.properties", "diffHunk": "@@ -0,0 +1,4 @@\n+diagnosticMessage=\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u0442\u0430\u043a \u0447\u0442\u043e\u0431\u044b \u0434\u043b\u0438\u043d\u0430 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u044b\u043b\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 %s", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e99ae23fe1128e5f2841b6e92520850169cf52"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjkwMjExOnYy", "diffSide": "RIGHT", "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic_ru.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzoyMTo1M1rOGebhMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzoyMTo1M1rOGebhMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MTMzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            diagnosticMessage=\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u0442\u0430\u043a \u0447\u0442\u043e\u0431\u044b \u0434\u043b\u0438\u043d\u0430 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u044b\u043b\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 %s\n          \n          \n            \n            diagnosticMessage=\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u0434\u043b\u0438\u043d\u0430 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u044b\u043b\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 %s", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1215#discussion_r434561331", "createdAt": "2020-06-03T13:21:53Z", "author": {"login": "nixel2007"}, "path": "src/main/resources/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic_ru.properties", "diffHunk": "@@ -0,0 +1,4 @@\n+diagnosticMessage=\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u0442\u0430\u043a \u0447\u0442\u043e\u0431\u044b \u0434\u043b\u0438\u043d\u0430 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u044b\u043b\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 %s", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e99ae23fe1128e5f2841b6e92520850169cf52"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4837, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}