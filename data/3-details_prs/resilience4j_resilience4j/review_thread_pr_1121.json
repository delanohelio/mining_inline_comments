{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NDc0NTIy", "number": 1121, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNDoyM1rOEZ2EQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNTo1MFrOEZ2HFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTM1NjgyOnYy", "diffSide": "RIGHT", "path": "resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RateLimiterConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNDoyM1rOHC584A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNDoyM1rOHC584A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgwODY3Mg==", "bodyText": "I think we should create a defensive copy of the Map", "url": "https://github.com/resilience4j/resilience4j/pull/1121#discussion_r472808672", "createdAt": "2020-08-19T07:34:23Z", "author": {"login": "RobWin"}, "path": "resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RateLimiterConfiguration.java", "diffHunk": "@@ -104,7 +104,7 @@ private RateLimiterRegistry createRateLimiterRegistry(\n                         entry.getKey())));\n \n         return RateLimiterRegistry.of(configs, rateLimiterRegistryEventConsumer,\n-            io.vavr.collection.HashMap.ofAll(rateLimiterConfigurationProperties.getTags()));\n+            rateLimiterConfigurationProperties.getTags());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ea24b51f73bb1439ac4b7cbb979d95655617f82"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTM1ODYxOnYy", "diffSide": "RIGHT", "path": "resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNDo0OFrOHC5-LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNDo0OFrOHC5-LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgwOTAwNQ==", "bodyText": "I think we should create a defensive copy of the Map", "url": "https://github.com/resilience4j/resilience4j/pull/1121#discussion_r472809005", "createdAt": "2020-08-19T07:34:48Z", "author": {"login": "RobWin"}, "path": "resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerConfiguration.java", "diffHunk": "@@ -142,8 +142,7 @@ CircuitBreakerRegistry createCircuitBreakerRegistry(\n                     .createCircuitBreakerConfig(entry.getKey(), entry.getValue(),\n                         customizerMap)));\n \n-        return CircuitBreakerRegistry.of(configs, circuitBreakerRegistryEventConsumer,\n-            io.vavr.collection.HashMap.ofAll(circuitBreakerProperties.getTags()));\n+        return CircuitBreakerRegistry.of(configs, circuitBreakerRegistryEventConsumer, circuitBreakerProperties.getTags());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ea24b51f73bb1439ac4b7cbb979d95655617f82"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTM2MDQ3OnYy", "diffSide": "RIGHT", "path": "resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/threadpool/ThreadPoolBulkheadConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNToxMFrOHC5_VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNToxMFrOHC5_VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgwOTMwMA==", "bodyText": "I think we should create a defensive copy of the Map", "url": "https://github.com/resilience4j/resilience4j/pull/1121#discussion_r472809300", "createdAt": "2020-08-19T07:35:10Z", "author": {"login": "RobWin"}, "path": "resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/threadpool/ThreadPoolBulkheadConfiguration.java", "diffHunk": "@@ -102,8 +102,7 @@ private ThreadPoolBulkheadRegistry createBulkheadRegistry(\n                 entry -> threadPoolBulkheadConfigurationProperties\n                     .createThreadPoolBulkheadConfig(entry.getValue(),\n                         compositeThreadPoolBulkheadCustomizer, entry.getKey())));\n-        return ThreadPoolBulkheadRegistry.of(configs, threadPoolBulkheadRegistryEventConsumer,\n-            io.vavr.collection.HashMap.ofAll(threadPoolBulkheadConfigurationProperties.getTags()));\n+        return ThreadPoolBulkheadRegistry.of(configs, threadPoolBulkheadRegistryEventConsumer, threadPoolBulkheadConfigurationProperties.getTags());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ea24b51f73bb1439ac4b7cbb979d95655617f82"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTM2MzQ2OnYy", "diffSide": "RIGHT", "path": "resilience4j-spring/src/main/java/io/github/resilience4j/timelimiter/configure/TimeLimiterConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNTo0M1rOHC6BRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNTo0M1rOHC6BRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgwOTc5Nw==", "bodyText": "I think we should create a defensive copy of the Map", "url": "https://github.com/resilience4j/resilience4j/pull/1121#discussion_r472809797", "createdAt": "2020-08-19T07:35:43Z", "author": {"login": "RobWin"}, "path": "resilience4j-spring/src/main/java/io/github/resilience4j/timelimiter/configure/TimeLimiterConfiguration.java", "diffHunk": "@@ -131,8 +131,7 @@ private static TimeLimiterRegistry createTimeLimiterRegistry(\n                         entry -> timeLimiterConfigurationProperties.createTimeLimiterConfig(\n                             entry.getKey(), entry.getValue(), compositeTimeLimiterCustomizer)));\n \n-        return TimeLimiterRegistry.of(configs, timeLimiterRegistryEventConsumer,\n-            HashMap.ofAll(timeLimiterConfigurationProperties.getTags()));\n+        return TimeLimiterRegistry.of(configs, timeLimiterRegistryEventConsumer, timeLimiterConfigurationProperties.getTags());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ea24b51f73bb1439ac4b7cbb979d95655617f82"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTM2NDA0OnYy", "diffSide": "RIGHT", "path": "resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RetryConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNTo1MFrOHC6Bqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzozNTo1MFrOHC6Bqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgwOTg5OQ==", "bodyText": "I think we should create a defensive copy of the Map", "url": "https://github.com/resilience4j/resilience4j/pull/1121#discussion_r472809899", "createdAt": "2020-08-19T07:35:50Z", "author": {"login": "RobWin"}, "path": "resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RetryConfiguration.java", "diffHunk": "@@ -103,8 +103,7 @@ private RetryRegistry createRetryRegistry(\n                     .createRetryConfig(entry.getValue(), compositeRetryCustomizer,\n                         entry.getKey())));\n \n-        return RetryRegistry.of(configs, retryRegistryEventConsumer,\n-            io.vavr.collection.HashMap.ofAll(retryConfigurationProperties.getTags()));\n+        return RetryRegistry.of(configs, retryRegistryEventConsumer, retryConfigurationProperties.getTags());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ea24b51f73bb1439ac4b7cbb979d95655617f82"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4989, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}