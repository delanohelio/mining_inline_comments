{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMzEzMzYx", "number": 1204, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyOToyOFrOE0UaSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyOToyOFrOE0UaSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjk1ODE4OnYy", "diffSide": "RIGHT", "path": "resilience4j-core/src/main/java/io/github/resilience4j/core/ContextAwareScheduledThreadPool.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyOToyOFrOHr-nxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyOToyOFrOHr-nxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3NjgwNA==", "bodyText": "Can we rename it to\nContextAwareScheduledThreadPoolExecutor ?", "url": "https://github.com/resilience4j/resilience4j/pull/1204#discussion_r515876804", "createdAt": "2020-11-02T10:29:28Z", "author": {"login": "RobWin"}, "path": "resilience4j-core/src/main/java/io/github/resilience4j/core/ContextAwareScheduledThreadPool.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ *\n+ *  Copyright 2020 krnsaurabh\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ *\n+ */\n+package io.github.resilience4j.core;\n+\n+import io.github.resilience4j.core.lang.Nullable;\n+import org.slf4j.MDC;\n+\n+import java.util.*;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.ScheduledThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+\n+public class ContextAwareScheduledThreadPool extends ScheduledThreadPoolExecutor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abf1b69d4f1ebf34733c662fcdf2177d82728bf7"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 27, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}