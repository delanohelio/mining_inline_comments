{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMjcyMTc2", "number": 1175, "title": "Fixed issue where generic fallback methods wouldn't work for methods with many parameters (#1174)", "bodyText": "Fix for #1174", "createdAt": "2020-09-21T12:47:06Z", "url": "https://github.com/resilience4j/resilience4j/pull/1175", "merged": true, "mergeCommit": {"oid": "1846244aa5133a72743ebad5c303820bf3d6f4d1"}, "closed": true, "closedAt": "2020-09-24T10:21:43Z", "author": {"login": "ArvinJA"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLCv9mAH2gAyNDkwMjcyMTc2OmIyZGY3ODlhZDA3NWMwMDUzMDc1MjVmOGE3MTM5MjNkYWI0ZGQ1MzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdL-hasgFqTQ5NTQyNTQxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b2df789ad075c005307525f8a713923dab4dd531", "author": {"user": {"login": "ArvinJA", "name": "Arvin Johansson Arbab"}}, "url": "https://github.com/resilience4j/resilience4j/commit/b2df789ad075c005307525f8a713923dab4dd531", "committedDate": "2020-09-21T12:42:36Z", "message": "Fixed issue where generic fallback methods wouldn't work for methods with many parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30bff8f62b649e5172863f3a777fb85cdae90746", "author": {"user": {"login": "vanadzins", "name": "Andis Vanadzins"}}, "url": "https://github.com/resilience4j/resilience4j/commit/30bff8f62b649e5172863f3a777fb85cdae90746", "committedDate": "2020-09-22T11:27:27Z", "message": "Add unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNzgzMzIw", "url": "https://github.com/resilience4j/resilience4j/pull/1175#pullrequestreview-493783320", "createdAt": "2020-09-22T19:33:13Z", "commit": {"oid": "30bff8f62b649e5172863f3a777fb85cdae90746"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxOTozMzoxM1rOHWJX4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxOTozMzoxM1rOHWJX4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4NDI4OQ==", "bodyText": "just cosmetic/convention changes (empty lines):\nFallbackMethod fallbackMethod = FallbackMethod\n            .create(\"fallbackMethod\", testMethod, new Object[]{\"test\", \"test\"}, target);\n\nString fallback = fallbackMethod.fallback(new IllegalStateException(\"err\");\n\n assertThat(fallback)).isEqualTo(\"recovered-IllegalStateException\");", "url": "https://github.com/resilience4j/resilience4j/pull/1175#discussion_r492984289", "createdAt": "2020-09-22T19:33:13Z", "author": {"login": "hexmind"}, "path": "resilience4j-spring/src/test/java/io/github/resilience4j/fallback/FallbackMethodTest.java", "diffHunk": "@@ -56,6 +56,16 @@ public void fallbackGlobalExceptionWithSameMethodReturnType() throws Throwable {\n             .isEqualTo(\"recovered-IllegalStateException\");\n     }\n \n+    @Test\n+    public void fallbackGlobalExceptionWithSameMethodReturnTypeAndMultipleParameters() throws Throwable {\n+        FallbackMethodTest target = new FallbackMethodTest();\n+        Method testMethod = target.getClass().getMethod(\"multipleParameterTestMethod\", String.class, String.class);\n+        FallbackMethod fallbackMethod = FallbackMethod\n+            .create(\"fallbackMethod\", testMethod, new Object[]{\"test\", \"test\"}, target);\n+        assertThat(fallbackMethod.fallback(new IllegalStateException(\"err\")))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30bff8f62b649e5172863f3a777fb85cdae90746"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03db9cfa8bc7203adfb32bab4e75eb5652b95619", "author": {"user": {"login": "vanadzins", "name": "Andis Vanadzins"}}, "url": "https://github.com/resilience4j/resilience4j/commit/03db9cfa8bc7203adfb32bab4e75eb5652b95619", "committedDate": "2020-09-23T10:07:20Z", "message": "Add empty lines"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NTA3MTk3", "url": "https://github.com/resilience4j/resilience4j/pull/1175#pullrequestreview-494507197", "createdAt": "2020-09-23T10:14:30Z", "commit": {"oid": "03db9cfa8bc7203adfb32bab4e75eb5652b95619"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NDI1NDE1", "url": "https://github.com/resilience4j/resilience4j/pull/1175#pullrequestreview-495425415", "createdAt": "2020-09-24T10:21:01Z", "commit": {"oid": "03db9cfa8bc7203adfb32bab4e75eb5652b95619"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1788, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}