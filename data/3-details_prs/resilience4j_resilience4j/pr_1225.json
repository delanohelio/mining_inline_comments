{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NDU1MzYy", "number": 1225, "title": "Issue #1221: Implement a RegistryStore backed by JCache implementation", "bodyText": "#1221", "createdAt": "2020-10-24T16:15:57Z", "url": "https://github.com/resilience4j/resilience4j/pull/1225", "merged": true, "mergeCommit": {"oid": "7e9008550ec6bd4072dbf569e6d7383a2a0368f3"}, "closed": true, "closedAt": "2020-10-27T11:51:28Z", "author": {"login": "laksnv"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcI1cuMgH2gAyNTA5NDU1MzYyOjFkYWRhOWI3ZGY2NWMyMTVhNTRkYTBkZjVhZmY5NzUzN2NiZGZjZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWnlddgFqTUxNzYxODk5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1dada9b7df65c215a54da0df5aff97537cbdfcff", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/1dada9b7df65c215a54da0df5aff97537cbdfcff", "committedDate": "2020-02-28T19:53:49Z", "message": "Issue #891: Make Circuit Breaker state transition calls idempotent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36a46515a1fe96f8a04aa14effd743db234dfd25", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/36a46515a1fe96f8a04aa14effd743db234dfd25", "committedDate": "2020-03-02T21:01:18Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfd221513257749b0a4f661800df63f30f27f588", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/dfd221513257749b0a4f661800df63f30f27f588", "committedDate": "2020-03-28T12:05:00Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "706f5cd7d56042e8d20f98528e25f9013cd10f0c", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/706f5cd7d56042e8d20f98528e25f9013cd10f0c", "committedDate": "2020-05-03T14:17:13Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c52151126fa13cc415ce7dd762d1064a019d225", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/2c52151126fa13cc415ce7dd762d1064a019d225", "committedDate": "2020-06-21T17:03:39Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9fecab9b0cbd695d3401d3716ae9d0fe2dd675b", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/c9fecab9b0cbd695d3401d3716ae9d0fe2dd675b", "committedDate": "2020-10-18T16:10:20Z", "message": "Merge remote-tracking branch 'upstream/master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "215af1f86683b5000cf0115da5102df4f618a90c", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/215af1f86683b5000cf0115da5102df4f618a90c", "committedDate": "2020-10-24T16:08:40Z", "message": "Issue #1221: Implement a RegistryStore backed by JCache implementation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NDUwMTEw", "url": "https://github.com/resilience4j/resilience4j/pull/1225#pullrequestreview-517450110", "createdAt": "2020-10-27T08:30:37Z", "commit": {"oid": "215af1f86683b5000cf0115da5102df4f618a90c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODozMDozOFrOHowYzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODozMDozOFrOHowYzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5Nzg3MQ==", "bodyText": "I think we should throw a custom exception:\nInstead of wrapping it in a RuntimeException or CacheException, we could define a CacheRegistryStoreException.", "url": "https://github.com/resilience4j/resilience4j/pull/1225#discussion_r512497871", "createdAt": "2020-10-27T08:30:38Z", "author": {"login": "RobWin"}, "path": "resilience4j-cache/src/main/java/io/github/resilience4j/cache/CacheRegistryStore.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package io.github.resilience4j.cache;\n+\n+import io.github.resilience4j.core.RegistryStore;\n+\n+import javax.cache.Cache;\n+import javax.cache.processor.EntryProcessor;\n+import javax.cache.processor.EntryProcessorException;\n+import javax.cache.processor.MutableEntry;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Optional;\n+import java.util.function.Function;\n+\n+public class CacheRegistryStore<E> implements RegistryStore<E> {\n+\n+    private final Cache<String, E> cacheStore;\n+\n+    public CacheRegistryStore(Cache<String, E> cacheStore) {\n+        this.cacheStore = cacheStore;\n+    }\n+\n+    @Override\n+    public E computeIfAbsent(String key, Function<? super String, ? extends E> mappingFunction) {\n+        try {\n+            return cacheStore.invoke(key, new AtomicComputeProcessor<>(), mappingFunction);\n+        } catch (EntryProcessorException e) {\n+            throw new RuntimeException(e.getCause());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "215af1f86683b5000cf0115da5102df4f618a90c"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjE4OTk5", "url": "https://github.com/resilience4j/resilience4j/pull/1225#pullrequestreview-517618999", "createdAt": "2020-10-27T11:50:47Z", "commit": {"oid": "215af1f86683b5000cf0115da5102df4f618a90c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1811, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}