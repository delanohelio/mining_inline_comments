{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1OTI0NjY0", "number": 1216, "title": "Issue #1214: When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden", "bodyText": "@RobWin i prepared a PR. Please review", "createdAt": "2020-10-19T12:20:17Z", "url": "https://github.com/resilience4j/resilience4j/pull/1216", "merged": true, "mergeCommit": {"oid": "8e5a8b719a6cebf52d6082753c35328ab76149f7"}, "closed": true, "closedAt": "2020-10-27T08:23:51Z", "author": {"login": "likhoman"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTvi6UAH2gAyNTA1OTI0NjY0OjlhMmQyNGQxY2NhYmQ3OWU3ODdhYzJlYWIyMDUxY2Y1ZTk3ZjBiYjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWknaYAFqTUxNzQ0NDU1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9a2d24d1ccabd79e787ac2eab2051cf5e97f0bb9", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/9a2d24d1ccabd79e787ac2eab2051cf5e97f0bb9", "committedDate": "2020-10-18T13:25:28Z", "message": "When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dda8c34f7b4db28c552798b7814c63f3f1712c4", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/0dda8c34f7b4db28c552798b7814c63f3f1712c4", "committedDate": "2020-10-18T13:58:39Z", "message": "When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "254151451d51d90337754815757de76b9486d5e5", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/254151451d51d90337754815757de76b9486d5e5", "committedDate": "2020-10-18T15:43:28Z", "message": "When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden\n\n-forgot to delete javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3d72f062ae3cb46db9d06dea2d238c363319166", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/e3d72f062ae3cb46db9d06dea2d238c363319166", "committedDate": "2020-10-19T10:45:44Z", "message": "Merge branch 'bugfix/override-waitDurationInOpenState' into origin/issue-1214"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0a145e2d9a56816dd9c6b989d6edd70d393704d", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/a0a145e2d9a56816dd9c6b989d6edd70d393704d", "committedDate": "2020-10-19T12:16:28Z", "message": "When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9179f54a37fc8d61ddbfb51b49b0226c740c0c7", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/c9179f54a37fc8d61ddbfb51b49b0226c740c0c7", "committedDate": "2020-10-19T13:07:37Z", "message": "When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden\n\n-fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNzY3OTY5", "url": "https://github.com/resilience4j/resilience4j/pull/1216#pullrequestreview-511767969", "createdAt": "2020-10-19T13:36:57Z", "commit": {"oid": "c9179f54a37fc8d61ddbfb51b49b0226c740c0c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozNjo1N1rOHkOuRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozNjo1N1rOHkOuRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1MjAwNg==", "bodyText": "If I set config like below, doesn't it throw exception?\n    CircuitBreakerConfig.custom()\n            .waitDurationInOpenState(Duration.ofMillis(3333))\n            .build();", "url": "https://github.com/resilience4j/resilience4j/pull/1216#discussion_r507752006", "createdAt": "2020-10-19T13:36:57Z", "author": {"login": "dlsrb6342"}, "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java", "diffHunk": "@@ -749,5 +760,13 @@ public CircuitBreakerConfig build() {\n                 .orElseGet(() -> recordExceptionPredicate != null ? recordExceptionPredicate\n                     : DEFAULT_RECORD_EXCEPTION_PREDICATE);\n         }\n+\n+        private IntervalFunction validateWaitIntervalFunctionInOpenState() {\n+            if (waitIntervalFunctionInOpenStateAlreadySet) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9179f54a37fc8d61ddbfb51b49b0226c740c0c7"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODM0Nzk1", "url": "https://github.com/resilience4j/resilience4j/pull/1216#pullrequestreview-511834795", "createdAt": "2020-10-19T14:35:55Z", "commit": {"oid": "c9179f54a37fc8d61ddbfb51b49b0226c740c0c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDozNTo1NVrOHkR7Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDozNTo1NVrOHkR7Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwNDUxNQ==", "bodyText": "This ATTENTION!!! is too strong :)\nI would remove it or replace with more formal \"Be aware that ...\"", "url": "https://github.com/resilience4j/resilience4j/pull/1216#discussion_r507804515", "createdAt": "2020-10-19T14:35:55Z", "author": {"login": "hexmind"}, "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java", "diffHunk": "@@ -342,6 +343,10 @@ public Builder writableStackTraceEnabled(boolean writableStackTraceEnabled) {\n          * Configures an interval function with a fixed wait duration which controls how long the\n          * CircuitBreaker should stay open, before it switches to half open. Default value is 60\n          * seconds.\n+         * <p>\n+         * <b>ATTENTION!!!</b> Do not use with {@link #waitIntervalFunctionInOpenState(IntervalFunction)}!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9179f54a37fc8d61ddbfb51b49b0226c740c0c7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e763a519c664d58063da1b4027c55e77ebc633e4", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/e763a519c664d58063da1b4027c55e77ebc633e4", "committedDate": "2020-10-19T15:06:13Z", "message": "When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden\n\n-fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d861f8c3882dc027e69fb4c0c5e60c1b6ce1fcff", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/d861f8c3882dc027e69fb4c0c5e60c1b6ce1fcff", "committedDate": "2020-10-19T15:11:02Z", "message": "When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden\n\n-fix javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzYxNzcz", "url": "https://github.com/resilience4j/resilience4j/pull/1216#pullrequestreview-512361773", "createdAt": "2020-10-20T06:17:55Z", "commit": {"oid": "d861f8c3882dc027e69fb4c0c5e60c1b6ce1fcff"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoxNzo1NVrOHksMpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoxNzo1NVrOHksMpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIzNDkxNg==", "bodyText": "Could you please change the message to:\n\"The waitIntervalFunction was configured twice which could result in an undesired state. Please use either waitIntervalFunctionInOpenState or  waitDurationInOpenState.\"", "url": "https://github.com/resilience4j/resilience4j/pull/1216#discussion_r508234916", "createdAt": "2020-10-20T06:17:55Z", "author": {"login": "RobWin"}, "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java", "diffHunk": "@@ -749,5 +761,13 @@ public CircuitBreakerConfig build() {\n                 .orElseGet(() -> recordExceptionPredicate != null ? recordExceptionPredicate\n                     : DEFAULT_RECORD_EXCEPTION_PREDICATE);\n         }\n+\n+        private IntervalFunction validateWaitIntervalFunctionInOpenState() {\n+            if (setWaitInOpenStateCounter > 1) {\n+                throw new IllegalStateException(\"You have already the durationInOpenState value from the waitDurationInOpenState method.\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d861f8c3882dc027e69fb4c0c5e60c1b6ce1fcff"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "948b884e5b6f2164be41d3848a90762caa33fa44", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/948b884e5b6f2164be41d3848a90762caa33fa44", "committedDate": "2020-10-20T13:28:38Z", "message": "When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden\n\n-the error message has been edited"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDI4NjM0", "url": "https://github.com/resilience4j/resilience4j/pull/1216#pullrequestreview-513428634", "createdAt": "2020-10-21T08:28:03Z", "commit": {"oid": "948b884e5b6f2164be41d3848a90762caa33fa44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoyODowM1rOHlgO4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoyODowM1rOHlgO4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA4NzQ1OQ==", "bodyText": "How about use Duration waitDurationInOpenState field and check like if (waitDurationInOpenState != null && waitIntervalFunctionInOpenState != null) at build()?", "url": "https://github.com/resilience4j/resilience4j/pull/1216#discussion_r509087459", "createdAt": "2020-10-21T08:28:03Z", "author": {"login": "dlsrb6342"}, "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java", "diffHunk": "@@ -251,6 +251,7 @@ public String toString() {\n             .ofSeconds(DEFAULT_SLOW_CALL_DURATION_THRESHOLD);\n         private Duration maxWaitDurationInHalfOpenState = Duration\n             .ofSeconds(DEFAULT_WAIT_DURATION_IN_HALF_OPEN_STATE);\n+        private byte setWaitInOpenStateCounter = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "948b884e5b6f2164be41d3848a90762caa33fa44"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61124dde6833c253f8f124112685e7cb332870bc", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/61124dde6833c253f8f124112685e7cb332870bc", "committedDate": "2020-10-22T13:18:37Z", "message": "When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden\n\n-the error message has been edited"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e9c46ff5ea6245b5b7ec7f73cb1f90af4f1820a", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/1e9c46ff5ea6245b5b7ec7f73cb1f90af4f1820a", "committedDate": "2020-10-22T14:57:18Z", "message": "When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden\n\n-rename counter name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NTA5MzQ1", "url": "https://github.com/resilience4j/resilience4j/pull/1216#pullrequestreview-516509345", "createdAt": "2020-10-26T07:11:29Z", "commit": {"oid": "1e9c46ff5ea6245b5b7ec7f73cb1f90af4f1820a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzoxMToyOVrOHoC9bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzoxMToyOVrOHoC9bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc1MzU4Mw==", "bodyText": "Could you please rename or delete this test?", "url": "https://github.com/resilience4j/resilience4j/pull/1216#discussion_r511753583", "createdAt": "2020-10-26T07:11:29Z", "author": {"login": "RobWin"}, "path": "resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfigTest.java", "diffHunk": "@@ -443,6 +443,39 @@ public void testToString() {\n         assertThat(result).endsWith(\"}\");\n     }\n \n+    @Test(expected = IllegalStateException.class)\n+    public void shouldNotUseWitIntervalFunctionInOpenStateAndWaitDurationInOpenStateTogether() {\n+        custom()\n+            .waitDurationInOpenState(Duration.ofMillis(3333))\n+            .waitIntervalFunctionInOpenState(IntervalFunction.of(Duration.ofMillis(1234)))\n+            .build();\n+    }\n+\n+    @Test\n+    public void test2() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e9c46ff5ea6245b5b7ec7f73cb1f90af4f1820a"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a0feb7d16700a7e00de508a333dfb6c8c757555", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/3a0feb7d16700a7e00de508a333dfb6c8c757555", "committedDate": "2020-10-27T04:11:46Z", "message": "Issue #1214: When used together, waitDurationInOpenState and waitIntervalFunctionInOpenStat waitDurationInOpenState will be overridden\n\n-rename test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NDQ0NTUy", "url": "https://github.com/resilience4j/resilience4j/pull/1216#pullrequestreview-517444552", "createdAt": "2020-10-27T08:23:12Z", "commit": {"oid": "3a0feb7d16700a7e00de508a333dfb6c8c757555"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1809, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}