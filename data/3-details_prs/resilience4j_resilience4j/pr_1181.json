{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0ODM0MDA4", "number": 1181, "title": "Timelimiter metrics/events: Register timeouts as timeouts and all other exceptions as errors", "bodyText": "Also see #1168 and #1095\nThe changes I'm making to resilience:\n\nA timelimiter rethrows any exception\nA timelimiter records TimeoutCancellationExceptions as java.util.concurrent.TimeoutExceptions, such that the event handler recognises this as a timeout.\nA timelimiter records any other exception as an error.\nA timelimiter records successfull results if no exception occured during execution", "createdAt": "2020-09-29T13:32:36Z", "url": "https://github.com/resilience4j/resilience4j/pull/1181", "merged": true, "mergeCommit": {"oid": "21f6cf8d8a58ba383f1eccd36bc7886514007d40"}, "closed": true, "closedAt": "2020-10-01T06:34:37Z", "author": {"login": "ZzAve"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNn8E1AH2gAyNDk0ODM0MDA4OmUxMDg2ZTBlM2E2NzkxOWM5OGQyNmFlYmY2NTc5YzcxNDQyOTQwY2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdN7UFLgH2gAyNDk0ODM0MDA4OjhkMmVhMjRjZWFlMWJkMjdjYzIyZWMwMzliMzUxOTZhM2M4NTQwYzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e1086e0e3a67919c98d26aebf6579c71442940ce", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/e1086e0e3a67919c98d26aebf6579c71442940ce", "committedDate": "2020-09-29T13:10:10Z", "message": "Consider timeouts as timeouts and errors as errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd81b1f1f571ab4a66fb0ef80826c4f07a3017ca", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/cd81b1f1f571ab4a66fb0ef80826c4f07a3017ca", "committedDate": "2020-09-30T07:28:37Z", "message": "Add tests to check if timeLimiter publishes expected events (success, timeout, error)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MTY0MjI5", "url": "https://github.com/resilience4j/resilience4j/pull/1181#pullrequestreview-499164229", "createdAt": "2020-09-30T07:44:54Z", "commit": {"oid": "cd81b1f1f571ab4a66fb0ef80826c4f07a3017ca"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzo0NDo1NVrOHaRL-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzo0NDo1NVrOHaRL-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMwNjYxOA==", "bodyText": "Would it even make sense to rethrow a  TimeoutException? That means:  Map a kotlinx.coroutines.TimeoutCancellationException to a java.util.concurrent.TimeoutException?\nIt might solve the following issue -> #1123", "url": "https://github.com/resilience4j/resilience4j/pull/1181#discussion_r497306618", "createdAt": "2020-09-30T07:44:55Z", "author": {"login": "RobWin"}, "path": "resilience4j-kotlin/src/main/kotlin/io/github/resilience4j/kotlin/timelimiter/TimeLimiter.kt", "diffHunk": "@@ -45,9 +46,9 @@ suspend fun <T> TimeLimiter.executeSuspendFunction(block: suspend () -> T): T =\n         }\n     } catch (t: Throwable) {\n         if (isCancellation(coroutineContext, t)) {\n-            onError(t)\n+            onError(TimeoutException(t.message))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd81b1f1f571ab4a66fb0ef80826c4f07a3017ca"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5281dcb883317da294ce15e95d75f979a28473a", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/a5281dcb883317da294ce15e95d75f979a28473a", "committedDate": "2020-09-30T08:51:17Z", "message": "Throw TimeoutExceptions instead of coroutines TimeoutCancellationException"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "74402b87782c0bf23282e2c03a0e68dbd96de4ec", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/74402b87782c0bf23282e2c03a0e68dbd96de4ec", "committedDate": "2020-09-30T08:40:59Z", "message": "Throw TimeoutExceptions instead of coroutines TimeoutCancellationException"}, "afterCommit": {"oid": "a5281dcb883317da294ce15e95d75f979a28473a", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/a5281dcb883317da294ce15e95d75f979a28473a", "committedDate": "2020-09-30T08:51:17Z", "message": "Throw TimeoutExceptions instead of coroutines TimeoutCancellationException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MjQ0MTM5", "url": "https://github.com/resilience4j/resilience4j/pull/1181#pullrequestreview-499244139", "createdAt": "2020-09-30T09:25:16Z", "commit": {"oid": "a5281dcb883317da294ce15e95d75f979a28473a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOToyNToxNlrOHaU-XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOToyNToxNlrOHaU-XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM2ODY2OA==", "bodyText": "I think we should not shed the root cause (stack) here, or?\nCan you use TimeoutException(t).\nDoes that work in Kotlin?", "url": "https://github.com/resilience4j/resilience4j/pull/1181#discussion_r497368668", "createdAt": "2020-09-30T09:25:16Z", "author": {"login": "RobWin"}, "path": "resilience4j-kotlin/src/main/kotlin/io/github/resilience4j/kotlin/timelimiter/TimeLimiter.kt", "diffHunk": "@@ -45,10 +47,12 @@ suspend fun <T> TimeLimiter.executeSuspendFunction(block: suspend () -> T): T =\n         }\n     } catch (t: Throwable) {\n         if (isCancellation(coroutineContext, t)) {\n-            onError(t)\n-        } else {\n-            onSuccess()\n+            val timeoutException = TimeoutException(t.message)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5281dcb883317da294ce15e95d75f979a28473a"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16423b45252475fc0d4bfa58a0bbf7982fca5af1", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/16423b45252475fc0d4bfa58a0bbf7982fca5af1", "committedDate": "2020-09-30T09:54:03Z", "message": "Extend TimeOutException to allow inclusion of cause and stracktrace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36b6f1814af1c7bc82d8d0b5751802012eba33eb", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/36b6f1814af1c7bc82d8d0b5751802012eba33eb", "committedDate": "2020-09-30T11:08:10Z", "message": "Use TimeOutException  to allow inclusion of cause and stracktrace"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MzI4MDI4", "url": "https://github.com/resilience4j/resilience4j/pull/1181#pullrequestreview-499328028", "createdAt": "2020-09-30T11:22:49Z", "commit": {"oid": "36b6f1814af1c7bc82d8d0b5751802012eba33eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d2ea24ceae1bd27cc22ec039b35196a3c8540c2", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/8d2ea24ceae1bd27cc22ec039b35196a3c8540c2", "committedDate": "2020-09-30T11:44:35Z", "message": "Extract generic timeoutExceptionCreation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1796, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}