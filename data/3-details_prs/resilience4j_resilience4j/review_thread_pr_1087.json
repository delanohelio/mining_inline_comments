{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNjcyNTQ4", "number": 1087, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTowNzo0OVrOEQXzFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjowODoyOVrOERhJHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjAyNTgyOnYy", "diffSide": "RIGHT", "path": "resilience4j-ratpack/src/main/java/io/github/resilience4j/ratpack/circuitbreaker/monitoring/endpoint/events/CircuitBreakerStreamEventsDTO.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTowNzo0OVrOG0fVQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTowNzo0OVrOG0fVQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5MjQ4Mg==", "bodyText": "Added similar to springboot2 health details.\n\n  \n    \n      resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/monitoring/health/CircuitBreakersHealthIndicator.java\n    \n    \n         Line 59\n      in\n      b4f5249\n    \n    \n    \n    \n\n        \n          \n           private static Health.Builder addDetails(Health.Builder builder,", "url": "https://github.com/resilience4j/resilience4j/pull/1087#discussion_r457692482", "createdAt": "2020-07-20T21:07:49Z", "author": {"login": "vijaycse"}, "path": "resilience4j-ratpack/src/main/java/io/github/resilience4j/ratpack/circuitbreaker/monitoring/endpoint/events/CircuitBreakerStreamEventsDTO.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Vijay Ram\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.github.resilience4j.ratpack.circuitbreaker.monitoring.endpoint.events;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import io.github.resilience4j.circuitbreaker.CircuitBreaker;\n+import io.github.resilience4j.circuitbreaker.CircuitBreakerConfig;\n+import io.github.resilience4j.circuitbreaker.event.CircuitBreakerEvent;\n+\n+\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+public class CircuitBreakerStreamEventsDTO {\n+\n+    private CircuitBreakerEvent circuitBreakerRecentEvent;\n+    private CircuitBreaker.Metrics metrics;\n+    private CircuitBreaker.State currentState;\n+    private float failureRateThreshold;\n+    private float slowCallRateThreshold;\n+\n+    public CircuitBreakerStreamEventsDTO(CircuitBreakerEvent circuitBreakerEvent,\n+                                         CircuitBreaker.State state,\n+                                         CircuitBreaker.Metrics metrics,\n+                                         CircuitBreakerConfig circuitBreakerConfig) {\n+        this.circuitBreakerRecentEvent = circuitBreakerEvent;\n+        this.metrics = metrics;\n+        this.currentState = state;\n+        this.failureRateThreshold = circuitBreakerConfig.getFailureRateThreshold();\n+        this.slowCallRateThreshold = circuitBreakerConfig.getSlowCallRateThreshold();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f650eb833c1e7586d41a99a4f405ae12c3497df4"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODAyNjc1OnYy", "diffSide": "RIGHT", "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerHystrixStreamEventsDTO.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjowNDoyOVrOG2RZkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozMjozOVrOG2SeNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2MTM2Mg==", "bodyText": "@vijaycse please update the description to not mention eco :D", "url": "https://github.com/resilience4j/resilience4j/pull/1087#discussion_r459561362", "createdAt": "2020-07-23T16:04:29Z", "author": {"login": "drmaas"}, "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerHystrixStreamEventsDTO.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package io.github.resilience4j.common.circuitbreaker.monitoring.endpoint;\n+\n+import io.github.resilience4j.circuitbreaker.CircuitBreaker;\n+import io.github.resilience4j.circuitbreaker.CircuitBreakerConfig;\n+import io.github.resilience4j.circuitbreaker.event.CircuitBreakerEvent;\n+\n+/**\n+ * @author vijayram\n+ */\n+\n+/**\n+ * This class is used to emit available data as SSE so that resilence4j SSE can be bridged\n+ * to suppose legacy hystrix eco tools such as hystrix dashboard , turbine and vizceral.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfdc9dbd6b9c7a838052e665be1a78ebed4a1186"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3MDgzOQ==", "bodyText": "I meant hystrix ecosystem of tools such as turbine. will update the docs @drmaas", "url": "https://github.com/resilience4j/resilience4j/pull/1087#discussion_r459570839", "createdAt": "2020-07-23T16:19:36Z", "author": {"login": "vijaycse"}, "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerHystrixStreamEventsDTO.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package io.github.resilience4j.common.circuitbreaker.monitoring.endpoint;\n+\n+import io.github.resilience4j.circuitbreaker.CircuitBreaker;\n+import io.github.resilience4j.circuitbreaker.CircuitBreakerConfig;\n+import io.github.resilience4j.circuitbreaker.event.CircuitBreakerEvent;\n+\n+/**\n+ * @author vijayram\n+ */\n+\n+/**\n+ * This class is used to emit available data as SSE so that resilence4j SSE can be bridged\n+ * to suppose legacy hystrix eco tools such as hystrix dashboard , turbine and vizceral.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2MTM2Mg=="}, "originalCommit": {"oid": "dfdc9dbd6b9c7a838052e665be1a78ebed4a1186"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3ODkzMg==", "bodyText": "Updated the document from eco to ecosystem", "url": "https://github.com/resilience4j/resilience4j/pull/1087#discussion_r459578932", "createdAt": "2020-07-23T16:32:39Z", "author": {"login": "vijaycse"}, "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerHystrixStreamEventsDTO.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package io.github.resilience4j.common.circuitbreaker.monitoring.endpoint;\n+\n+import io.github.resilience4j.circuitbreaker.CircuitBreaker;\n+import io.github.resilience4j.circuitbreaker.CircuitBreakerConfig;\n+import io.github.resilience4j.circuitbreaker.event.CircuitBreakerEvent;\n+\n+/**\n+ * @author vijayram\n+ */\n+\n+/**\n+ * This class is used to emit available data as SSE so that resilence4j SSE can be bridged\n+ * to suppose legacy hystrix eco tools such as hystrix dashboard , turbine and vizceral.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2MTM2Mg=="}, "originalCommit": {"oid": "dfdc9dbd6b9c7a838052e665be1a78ebed4a1186"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODA0MjU1OnYy", "diffSide": "RIGHT", "path": "resilience4j-ratpack/src/main/java/io/github/resilience4j/ratpack/circuitbreaker/monitoring/endpoint/CircuitBreakerChain.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjowODoyOVrOG2RjTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQyMTo0MjozN1rOG99_ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2Mzg1Mg==", "bodyText": "@RobWin do we want to name things hystrix - or name things turbine or a more generic name? The use case for all of this is that the streams are aggregated by turbine, which is polled by vizceral to provide real-time visualization of network traffic across all application instances.\nHystrix provided a streaming endpoint like this one - and Vijay is porting it forward for clients using resilience4j.", "url": "https://github.com/resilience4j/resilience4j/pull/1087#discussion_r459563852", "createdAt": "2020-07-23T16:08:29Z", "author": {"login": "drmaas"}, "path": "resilience4j-ratpack/src/main/java/io/github/resilience4j/ratpack/circuitbreaker/monitoring/endpoint/CircuitBreakerChain.java", "diffHunk": "@@ -111,6 +112,26 @@ public void execute(Chain chain) throws Exception {\n                             .event(c -> c.getEventType().name()).data(data));\n                 ctx.render(events);\n             });\n+            chain1.get(\"hystrixStream/events\", ctx -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfdc9dbd6b9c7a838052e665be1a78ebed4a1186"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQyMzE5MA==", "bodyText": "@RobWin  Can you answer this? Otherwise I believe I will update with more documentation as pointed out by @drmaas  and this PR is good to merge.", "url": "https://github.com/resilience4j/resilience4j/pull/1087#discussion_r464423190", "createdAt": "2020-08-03T13:45:52Z", "author": {"login": "vijaycse"}, "path": "resilience4j-ratpack/src/main/java/io/github/resilience4j/ratpack/circuitbreaker/monitoring/endpoint/CircuitBreakerChain.java", "diffHunk": "@@ -111,6 +112,26 @@ public void execute(Chain chain) throws Exception {\n                             .event(c -> c.getEventType().name()).data(data));\n                 ctx.render(events);\n             });\n+            chain1.get(\"hystrixStream/events\", ctx -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2Mzg1Mg=="}, "originalCommit": {"oid": "dfdc9dbd6b9c7a838052e665be1a78ebed4a1186"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU0OTY0OA==", "bodyText": "The streaming data format is turbine/hystrix specific, or?", "url": "https://github.com/resilience4j/resilience4j/pull/1087#discussion_r467549648", "createdAt": "2020-08-09T07:42:22Z", "author": {"login": "RobWin"}, "path": "resilience4j-ratpack/src/main/java/io/github/resilience4j/ratpack/circuitbreaker/monitoring/endpoint/CircuitBreakerChain.java", "diffHunk": "@@ -111,6 +112,26 @@ public void execute(Chain chain) throws Exception {\n                             .event(c -> c.getEventType().name()).data(data));\n                 ctx.render(events);\n             });\n+            chain1.get(\"hystrixStream/events\", ctx -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2Mzg1Mg=="}, "originalCommit": {"oid": "dfdc9dbd6b9c7a838052e665be1a78ebed4a1186"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYzMjA1OA==", "bodyText": "yes. They are intend for hystrix/turbine but can be used for any purpose. just enriching SSE with more data.. thats all @RobWin", "url": "https://github.com/resilience4j/resilience4j/pull/1087#discussion_r467632058", "createdAt": "2020-08-09T21:42:37Z", "author": {"login": "vijaycse"}, "path": "resilience4j-ratpack/src/main/java/io/github/resilience4j/ratpack/circuitbreaker/monitoring/endpoint/CircuitBreakerChain.java", "diffHunk": "@@ -111,6 +112,26 @@ public void execute(Chain chain) throws Exception {\n                             .event(c -> c.getEventType().name()).data(data));\n                 ctx.render(events);\n             });\n+            chain1.get(\"hystrixStream/events\", ctx -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2Mzg1Mg=="}, "originalCommit": {"oid": "dfdc9dbd6b9c7a838052e665be1a78ebed4a1186"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4982, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}