{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NTkxNDE3", "number": 1042, "title": "Added config param WaitDurationInHalfOpenState and unit tests", "bodyText": "This PR is continuation of #1007 .\nI have accidentally deleted the remote branch, hence I am creating new PR. This PR resolves all the review comments from #1007\nSorry for the inconvenience caused.\n@RobWin @dlsrb6342 @hexmind  for your review.", "createdAt": "2020-06-23T13:59:58Z", "url": "https://github.com/resilience4j/resilience4j/pull/1042", "merged": true, "mergeCommit": {"oid": "f0056f3520f79540cfa87ae0c6ec81c93aa85005"}, "closed": true, "closedAt": "2020-06-26T07:25:46Z", "author": {"login": "KrnSaurabh"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcttSBMgH2gAyNDM4NTkxNDE3OmI2MGZkODY2YjIxNjA2YTlmZDIwZGU3MDhmMzllODZiOGFkYjAyNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcu99OggFqTQzODA2NTU2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b60fd866b21606a9fd20de708f39e86b8adb0270", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/b60fd866b21606a9fd20de708f39e86b8adb0270", "committedDate": "2020-06-22T09:18:05Z", "message": "Added waitDurationInHalfOpenState config parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd7596cede94556415dfbda44d5865b020c9ab25", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/cd7596cede94556415dfbda44d5865b020c9ab25", "committedDate": "2020-06-23T13:27:25Z", "message": "Added unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NTI1Nzgx", "url": "https://github.com/resilience4j/resilience4j/pull/1042#pullrequestreview-436525781", "createdAt": "2020-06-24T10:36:09Z", "commit": {"oid": "cd7596cede94556415dfbda44d5865b020c9ab25"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDozNjowOVrOGoMkmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDozNjoxOFrOGoMk5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgwMjIwMQ==", "bodyText": "circuitBreaker: Please upper case.", "url": "https://github.com/resilience4j/resilience4j/pull/1042#discussion_r444802201", "createdAt": "2020-06-24T10:36:09Z", "author": {"login": "RobWin"}, "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java", "diffHunk": "@@ -363,6 +373,28 @@ public Builder slowCallDurationThreshold(Duration slowCallDurationThreshold) {\n             return this;\n         }\n \n+        /**\n+         * Configures CircuitBreaker with a fixed wait duration which controls how long the\n+         * CircuitBreaker should stay in Half Open state, before it switches to open. This is an\n+         * Optional parameter.\n+         *\n+         * By default circuitBreaker will stay in Half Open state until", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7596cede94556415dfbda44d5865b020c9ab25"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgwMjI3Nw==", "bodyText": "Optional please lower case", "url": "https://github.com/resilience4j/resilience4j/pull/1042#discussion_r444802277", "createdAt": "2020-06-24T10:36:18Z", "author": {"login": "RobWin"}, "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java", "diffHunk": "@@ -363,6 +373,28 @@ public Builder slowCallDurationThreshold(Duration slowCallDurationThreshold) {\n             return this;\n         }\n \n+        /**\n+         * Configures CircuitBreaker with a fixed wait duration which controls how long the\n+         * CircuitBreaker should stay in Half Open state, before it switches to open. This is an\n+         * Optional parameter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7596cede94556415dfbda44d5865b020c9ab25"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NTQ1MzE2", "url": "https://github.com/resilience4j/resilience4j/pull/1042#pullrequestreview-436545316", "createdAt": "2020-06-24T11:07:17Z", "commit": {"oid": "cd7596cede94556415dfbda44d5865b020c9ab25"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTowNzoxN1rOGoNfoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTowNzoxN1rOGoNfoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgxNzMxMg==", "bodyText": "I think waitDurationInHalfOpenState can be smaller than 1000ms like waitDurationInOpenState.\n\n  \n    \n      resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java\n    \n    \n        Lines 322 to 330\n      in\n      13bdd4b\n    \n    \n    \n    \n\n        \n          \n           public Builder waitDurationInOpenState(Duration waitDurationInOpenState) { \n        \n\n        \n          \n               long waitDurationInMillis = waitDurationInOpenState.toMillis(); \n        \n\n        \n          \n               if (waitDurationInMillis < 1) { \n        \n\n        \n          \n                   throw new IllegalArgumentException( \n        \n\n        \n          \n                       \"waitDurationInOpenState must be at least 1[ms]\"); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               this.waitIntervalFunctionInOpenState = IntervalFunction.of(waitDurationInMillis); \n        \n\n        \n          \n               return this; \n        \n\n        \n          \n           }", "url": "https://github.com/resilience4j/resilience4j/pull/1042#discussion_r444817312", "createdAt": "2020-06-24T11:07:17Z", "author": {"login": "dlsrb6342"}, "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java", "diffHunk": "@@ -363,6 +373,28 @@ public Builder slowCallDurationThreshold(Duration slowCallDurationThreshold) {\n             return this;\n         }\n \n+        /**\n+         * Configures CircuitBreaker with a fixed wait duration which controls how long the\n+         * CircuitBreaker should stay in Half Open state, before it switches to open. This is an\n+         * Optional parameter.\n+         *\n+         * By default circuitBreaker will stay in Half Open state until\n+         * {@code minimumNumberOfCalls} is completed with either success or failure.\n+         *\n+         * @param waitDurationInHalfOpenState the wait duration which specifies how long the\n+         *                                CircuitBreaker should stay in Half Open\n+         * @return the CircuitBreakerConfig.Builder\n+         * @throws IllegalArgumentException if {@code waitDurationInOpenState.toMillis() < 1000}\n+         */\n+        public Builder waitDurationInHalfOpenState(Duration waitDurationInHalfOpenState) {\n+            if (waitDurationInHalfOpenState.toMillis() < 1000) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7596cede94556415dfbda44d5865b020c9ab25"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39c820e2b1ba15111a3c4bb83797144161d27011", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/39c820e2b1ba15111a3c4bb83797144161d27011", "committedDate": "2020-06-25T08:19:07Z", "message": "Changed minimum value for waitDurationInHalfOpenState to 1ms"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NTIxNDM2", "url": "https://github.com/resilience4j/resilience4j/pull/1042#pullrequestreview-437521436", "createdAt": "2020-06-25T13:58:33Z", "commit": {"oid": "39c820e2b1ba15111a3c4bb83797144161d27011"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzo1ODozM1rOGo8BIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzo1ODozM1rOGo8BIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU3OTU1Mg==", "bodyText": "I think we should rename it to maxWaitDurationInHalfOpenState? Because the wait duration is shorter if minimumNumberOfCalls have been processed.", "url": "https://github.com/resilience4j/resilience4j/pull/1042#discussion_r445579552", "createdAt": "2020-06-25T13:58:33Z", "author": {"login": "RobWin"}, "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java", "diffHunk": "@@ -363,6 +373,28 @@ public Builder slowCallDurationThreshold(Duration slowCallDurationThreshold) {\n             return this;\n         }\n \n+        /**\n+         * Configures CircuitBreaker with a fixed wait duration which controls how long the\n+         * CircuitBreaker should stay in Half Open state, before it switches to open. This is an\n+         * optional parameter.\n+         *\n+         * By default CircuitBreaker will stay in Half Open state until\n+         * {@code minimumNumberOfCalls} is completed with either success or failure.\n+         *\n+         * @param waitDurationInHalfOpenState the wait duration which specifies how long the\n+         *                                CircuitBreaker should stay in Half Open\n+         * @return the CircuitBreakerConfig.Builder\n+         * @throws IllegalArgumentException if {@code waitDurationInOpenState.toMillis() < 1000}\n+         */\n+        public Builder waitDurationInHalfOpenState(Duration waitDurationInHalfOpenState) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c820e2b1ba15111a3c4bb83797144161d27011"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c5c31706c9781e319d42aca83f76fe8575018cc", "author": {"user": null}, "url": "https://github.com/resilience4j/resilience4j/commit/6c5c31706c9781e319d42aca83f76fe8575018cc", "committedDate": "2020-06-25T14:23:57Z", "message": "renamed waitDurationInHalfOpenState to maxWaitDurationInHalfOpenState"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTc1MjY1", "url": "https://github.com/resilience4j/resilience4j/pull/1042#pullrequestreview-437975265", "createdAt": "2020-06-26T02:24:32Z", "commit": {"oid": "6c5c31706c9781e319d42aca83f76fe8575018cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MDY1NTY0", "url": "https://github.com/resilience4j/resilience4j/pull/1042#pullrequestreview-438065564", "createdAt": "2020-06-26T07:17:41Z", "commit": {"oid": "6c5c31706c9781e319d42aca83f76fe8575018cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1749, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}