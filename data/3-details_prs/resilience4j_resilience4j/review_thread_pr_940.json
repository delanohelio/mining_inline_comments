{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODgzMzQy", "number": 940, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzo1MToxM1rODqzOKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzo1MToxM1rODqzOKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MjA1OTk0OnYy", "diffSide": "RIGHT", "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerEventDTOFactory.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzo1MToxM1rOF6xJ8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjowMzo0M1rOF63f9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE2NzA5MA==", "bodyText": "I think we need to add SLOW_CALL_RATE_EXCEEDED type too.\nWhat do you think @RobWin ?", "url": "https://github.com/resilience4j/resilience4j/pull/940#discussion_r397167090", "createdAt": "2020-03-24T13:51:13Z", "author": {"login": "dlsrb6342"}, "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerEventDTOFactory.java", "diffHunk": "@@ -54,6 +54,10 @@ public static CircuitBreakerEventDTO createCircuitBreakerEventDTO(CircuitBreaker\n                 CircuitBreakerOnCallNotPermittedEvent onCallNotPermittedEvent = (CircuitBreakerOnCallNotPermittedEvent) event;\n                 return newCircuitBreakerEventDTOBuilder(onCallNotPermittedEvent)\n                     .build();\n+            case FAILURE_RATE_EXCEEDED:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd94186925ba973448d5c0003125aed5882ccda4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE3MTkzNg==", "bodyText": "Yes", "url": "https://github.com/resilience4j/resilience4j/pull/940#discussion_r397171936", "createdAt": "2020-03-24T13:57:39Z", "author": {"login": "RobWin"}, "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerEventDTOFactory.java", "diffHunk": "@@ -54,6 +54,10 @@ public static CircuitBreakerEventDTO createCircuitBreakerEventDTO(CircuitBreaker\n                 CircuitBreakerOnCallNotPermittedEvent onCallNotPermittedEvent = (CircuitBreakerOnCallNotPermittedEvent) event;\n                 return newCircuitBreakerEventDTOBuilder(onCallNotPermittedEvent)\n                     .build();\n+            case FAILURE_RATE_EXCEEDED:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE2NzA5MA=="}, "originalCommit": {"oid": "fd94186925ba973448d5c0003125aed5882ccda4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE3Mzc3OA==", "bodyText": "@rusyasoft Please add SLOW_CALL_RATE_EXCEEDED  too.", "url": "https://github.com/resilience4j/resilience4j/pull/940#discussion_r397173778", "createdAt": "2020-03-24T14:00:09Z", "author": {"login": "dlsrb6342"}, "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerEventDTOFactory.java", "diffHunk": "@@ -54,6 +54,10 @@ public static CircuitBreakerEventDTO createCircuitBreakerEventDTO(CircuitBreaker\n                 CircuitBreakerOnCallNotPermittedEvent onCallNotPermittedEvent = (CircuitBreakerOnCallNotPermittedEvent) event;\n                 return newCircuitBreakerEventDTOBuilder(onCallNotPermittedEvent)\n                     .build();\n+            case FAILURE_RATE_EXCEEDED:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE2NzA5MA=="}, "originalCommit": {"oid": "fd94186925ba973448d5c0003125aed5882ccda4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI3MTAyOQ==", "bodyText": "@dlsrb6342  added SLOW_CALL_RATE_EXCEEDED case", "url": "https://github.com/resilience4j/resilience4j/pull/940#discussion_r397271029", "createdAt": "2020-03-24T16:03:43Z", "author": {"login": "rusyasoft"}, "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerEventDTOFactory.java", "diffHunk": "@@ -54,6 +54,10 @@ public static CircuitBreakerEventDTO createCircuitBreakerEventDTO(CircuitBreaker\n                 CircuitBreakerOnCallNotPermittedEvent onCallNotPermittedEvent = (CircuitBreakerOnCallNotPermittedEvent) event;\n                 return newCircuitBreakerEventDTOBuilder(onCallNotPermittedEvent)\n                     .build();\n+            case FAILURE_RATE_EXCEEDED:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE2NzA5MA=="}, "originalCommit": {"oid": "fd94186925ba973448d5c0003125aed5882ccda4"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 71, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}