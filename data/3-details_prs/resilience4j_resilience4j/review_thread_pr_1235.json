{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MDg4MjAy", "number": 1235, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoxNTo1NFrOE0ZT3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoxNjozMVrOE0ZVBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzc2MDk0OnYy", "diffSide": "RIGHT", "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/configuration/RetryConfigurationProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoxNTo1NFrOHsGIOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoxOTozOFrOHsGSJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk5OTgwMA==", "bodyText": "@RobWin Should I throw and exception when both RetryConfigurationProperties.InstanceProperties.waitDuration and RetryConfigurationProperties.InstanceProperties.intervalBiFunction are used or let RetryConfig.Builder.build to do the job?", "url": "https://github.com/resilience4j/resilience4j/pull/1235#discussion_r515999800", "createdAt": "2020-11-02T14:15:54Z", "author": {"login": "cosminseceleanu"}, "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/configuration/RetryConfigurationProperties.java", "diffHunk": "@@ -243,6 +245,12 @@ private void configureRandomizedWait(InstanceProperties properties, RetryConfig.\n         @Nullable\n         private Duration waitDuration;\n \n+        /*\n+         * retry intervalBiFunction class to be used to calculate wait based on exception or result\n+         */\n+        @Nullable\n+        private Class<? extends IntervalBiFunction<Object>> intervalBiFunction;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88072ccc6ab596fda131d6b23e03dd6f8203dc90"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAwMjM0Mg==", "bodyText": "Let RetryConfig.Builder.build do the job", "url": "https://github.com/resilience4j/resilience4j/pull/1235#discussion_r516002342", "createdAt": "2020-11-02T14:19:38Z", "author": {"login": "RobWin"}, "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/configuration/RetryConfigurationProperties.java", "diffHunk": "@@ -243,6 +245,12 @@ private void configureRandomizedWait(InstanceProperties properties, RetryConfig.\n         @Nullable\n         private Duration waitDuration;\n \n+        /*\n+         * retry intervalBiFunction class to be used to calculate wait based on exception or result\n+         */\n+        @Nullable\n+        private Class<? extends IntervalBiFunction<Object>> intervalBiFunction;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk5OTgwMA=="}, "originalCommit": {"oid": "88072ccc6ab596fda131d6b23e03dd6f8203dc90"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzc2MzkwOnYy", "diffSide": "RIGHT", "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/configuration/RetryConfigurationProperties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoxNjozMVrOHsGJ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoxNjozMVrOHsGJ7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAwMDIzNw==", "bodyText": "Will fix this", "url": "https://github.com/resilience4j/resilience4j/pull/1235#discussion_r516000237", "createdAt": "2020-11-02T14:16:31Z", "author": {"login": "cosminseceleanu"}, "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/configuration/RetryConfigurationProperties.java", "diffHunk": "@@ -18,10 +18,7 @@\n import io.github.resilience4j.common.CommonProperties;\n import io.github.resilience4j.common.CompositeCustomizer;\n import io.github.resilience4j.common.utils.ConfigUtils;\n-import io.github.resilience4j.core.ClassUtils;\n-import io.github.resilience4j.core.ConfigurationNotFoundException;\n-import io.github.resilience4j.core.IntervalFunction;\n-import io.github.resilience4j.core.StringUtils;\n+import io.github.resilience4j.core.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88072ccc6ab596fda131d6b23e03dd6f8203dc90"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 39, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}