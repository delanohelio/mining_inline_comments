{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMDQxMzAz", "number": 1464, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo0NTozNVrOEtIgxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo0NjoyMFrOEtIh2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzYwODM4OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/util/WagedValidationUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo0NTozNlrOHgwRqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzozODoxMlrOHgyMkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEwNzQzMw==", "bodyText": "This could be used in BestPossibleStateCalcStage.computeResourceBestPossibleStateWithWagedRebalancer as well. Could you check for other similar usages? Replacing those logic with this function is a step up for cleanness.", "url": "https://github.com/apache/helix/pull/1464#discussion_r504107433", "createdAt": "2020-10-13T16:45:36Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/util/WagedValidationUtil.java", "diffHunk": "@@ -88,4 +90,16 @@\n     }\n     return partitionCapacity;\n   }\n+\n+  /**\n+   * Checks whether or not a resource has enabled WAGED rebalancer.\n+   *\n+   * @param idealState {@code IdealState} of the resource being checked.\n+   * @return {@code true} if WAGED is enabled; otherwise, {@code false}.\n+   */\n+  public static boolean isWagedEnabled(IdealState idealState) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "696b75f068689fa8b2f68295b801d2ef7b5f5720"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzODg5Ng==", "bodyText": "Ideally, replacing those places with this API should be done in another PR. Since you've pointed out that place, I just made the change. If there are more places, let's make the change in another PR.", "url": "https://github.com/apache/helix/pull/1464#discussion_r504138896", "createdAt": "2020-10-13T17:38:12Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/util/WagedValidationUtil.java", "diffHunk": "@@ -88,4 +90,16 @@\n     }\n     return partitionCapacity;\n   }\n+\n+  /**\n+   * Checks whether or not a resource has enabled WAGED rebalancer.\n+   *\n+   * @param idealState {@code IdealState} of the resource being checked.\n+   * @return {@code true} if WAGED is enabled; otherwise, {@code false}.\n+   */\n+  public static boolean isWagedEnabled(IdealState idealState) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEwNzQzMw=="}, "originalCommit": {"oid": "696b75f068689fa8b2f68295b801d2ef7b5f5720"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzYxMTEzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo0NjoyMFrOHgwTcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzozOTo1NlrOHgyQWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEwNzg4OQ==", "bodyText": "Is this a behavior change (all resources -> waged only)?", "url": "https://github.com/apache/helix/pull/1464#discussion_r504107889", "createdAt": "2020-10-13T16:46:20Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -283,10 +284,10 @@ private void reportInstanceCapacityMetrics(ClusterStatusMonitor clusterStatusMon\n     asyncExecute(dataProvider.getAsyncTasksThreadPool(), () -> {\n       try {\n         // ResourceToRebalance map also has resources from current states.\n-        // Only use the resources in ideal states to parse all replicas.\n+        // Only use the resources in ideal states that enable WAGED to parse all replicas.\n         Map<String, IdealState> idealStateMap = dataProvider.getIdealStates();\n         Map<String, Resource> resourceToMonitorMap = resourceMap.entrySet().stream()\n-            .filter(idealStateMap::containsKey)\n+            .filter(entry -> WagedValidationUtil.isWagedEnabled(idealStateMap.get(entry.getKey())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "696b75f068689fa8b2f68295b801d2ef7b5f5720"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzOTg2NQ==", "bodyText": "Ideally, we would report every resource. But currently for those non WAGED resources, validation won't pass and HelixException would be thrown. So we'll skip non WAGED resources here.\nFYI, did a quick search, no other places are found. We should be good now.", "url": "https://github.com/apache/helix/pull/1464#discussion_r504139865", "createdAt": "2020-10-13T17:39:56Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -283,10 +284,10 @@ private void reportInstanceCapacityMetrics(ClusterStatusMonitor clusterStatusMon\n     asyncExecute(dataProvider.getAsyncTasksThreadPool(), () -> {\n       try {\n         // ResourceToRebalance map also has resources from current states.\n-        // Only use the resources in ideal states to parse all replicas.\n+        // Only use the resources in ideal states that enable WAGED to parse all replicas.\n         Map<String, IdealState> idealStateMap = dataProvider.getIdealStates();\n         Map<String, Resource> resourceToMonitorMap = resourceMap.entrySet().stream()\n-            .filter(idealStateMap::containsKey)\n+            .filter(entry -> WagedValidationUtil.isWagedEnabled(idealStateMap.get(entry.getKey())))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEwNzg4OQ=="}, "originalCommit": {"oid": "696b75f068689fa8b2f68295b801d2ef7b5f5720"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1023, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}