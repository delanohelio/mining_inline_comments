{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTYyNDI5", "number": 917, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxMDoyOVrODsPeLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNjo1OTo0NVrODsSlAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzE3NDIxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxMDoyOVrOF9DRcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxMDoyOVrOF9DRcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2MTA3Mg==", "bodyText": "More comments about the content of the map, please.", "url": "https://github.com/apache/helix/pull/917#discussion_r399561072", "createdAt": "2020-03-27T22:10:29Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -139,7 +139,7 @@\n   final AtomicReference<Map<String, LiveInstance>> _lastSeenInstances;\n   final AtomicReference<Map<String, LiveInstance>> _lastSeenSessions;\n \n-  final AtomicReference<Set<String>> _lastSeenCustomizedStateTypes;\n+  final AtomicReference<Map<String, Set<String>>> _lastSeenCustomizedStateTypesMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzE3NTQ0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxMTowNlrOF9DSNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxMTowNlrOF9DSNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2MTI2OA==", "bodyText": "nit Collections.emtpySet()", "url": "https://github.com/apache/helix/pull/917#discussion_r399561268", "createdAt": "2020-03-27T22:11:06Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -828,8 +828,14 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n     }\n \n     // TODO: remove the synchronization here once we move this update into dataCache.\n-    synchronized (_lastSeenCustomizedStateTypes) {\n-      Set<String> lastSeenCustomizedStateTypes = _lastSeenCustomizedStateTypes.get();\n+    synchronized (_lastSeenCustomizedStateTypesMap) {\n+      Map<String, Set<String>> lastSeenCustomizedStateTypesMap =\n+          _lastSeenCustomizedStateTypesMap.get();\n+      Set<String> lastSeenCustomizedStateTypes = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzE3ODExOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxMjozNVrOF9DTzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxMjozNVrOF9DTzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2MTY3Ng==", "bodyText": "lastSeenCustomizedStateTypes won't be null, right?", "url": "https://github.com/apache/helix/pull/917#discussion_r399561676", "createdAt": "2020-03-27T22:12:35Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -828,8 +828,14 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n     }\n \n     // TODO: remove the synchronization here once we move this update into dataCache.\n-    synchronized (_lastSeenCustomizedStateTypes) {\n-      Set<String> lastSeenCustomizedStateTypes = _lastSeenCustomizedStateTypes.get();\n+    synchronized (_lastSeenCustomizedStateTypesMap) {\n+      Map<String, Set<String>> lastSeenCustomizedStateTypesMap =\n+          _lastSeenCustomizedStateTypesMap.get();\n+      Set<String> lastSeenCustomizedStateTypes = new HashSet<>();\n+      if (lastSeenCustomizedStateTypesMap != null && lastSeenCustomizedStateTypesMap\n+          .containsKey(instanceName)) {\n+        lastSeenCustomizedStateTypes = lastSeenCustomizedStateTypesMap.get(instanceName);\n+      }\n       for (String customizedState : customizedStateTypes) {\n         try {\n           if (lastSeenCustomizedStateTypes == null || !lastSeenCustomizedStateTypes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzE3ODYzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxMjo1MlrOF9DUFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNDo0Mjo0MVrOF9GzZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2MTc1MA==", "bodyText": "Same here, do we really need to check this?", "url": "https://github.com/apache/helix/pull/917#discussion_r399561750", "createdAt": "2020-03-27T22:12:52Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -844,14 +850,24 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n         }\n       }\n \n-      for (String previousCustomizedState : lastSeenCustomizedStateTypes) {\n-        if (!customizedStateTypes.contains(previousCustomizedState)) {\n-          manager.removeListener(keyBuilder.customizedStates(instanceName, previousCustomizedState),\n-              this);\n+      if (lastSeenCustomizedStateTypes != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxODkxNg==", "bodyText": "Did you mean to remove this check or not?", "url": "https://github.com/apache/helix/pull/917#discussion_r399618916", "createdAt": "2020-03-28T04:42:41Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -844,14 +850,24 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n         }\n       }\n \n-      for (String previousCustomizedState : lastSeenCustomizedStateTypes) {\n-        if (!customizedStateTypes.contains(previousCustomizedState)) {\n-          manager.removeListener(keyBuilder.customizedStates(instanceName, previousCustomizedState),\n-              this);\n+      if (lastSeenCustomizedStateTypes != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2MTc1MA=="}, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzE4NzUyOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/ResourceControllerDataProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxNzoyNVrOF9DZig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNDo0MDo1NFrOF9Gy9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2MzE0Ng==", "bodyText": "This does not look right. If the config types have been changed just before the refresh with fewer items, we won't remove the extra types, right?", "url": "https://github.com/apache/helix/pull/917#discussion_r399563146", "createdAt": "2020-03-27T22:17:25Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/ResourceControllerDataProvider.java", "diffHunk": "@@ -197,18 +197,17 @@ private void refreshTargetExternalViews(final HelixDataAccessor accessor) {\n   public void refreshCustomizedViewMap(final HelixDataAccessor accessor) {\n     // As we are not listening on customized view change, customized view will be\n     // refreshed once during the cache's first refresh() call, or when full refresh is required\n-    List<String> newStateTypes = accessor.getChildNames(accessor.keyBuilder().customizedViews());\n     if (_propertyDataChangedMap.get(HelixConstants.ChangeType.CUSTOMIZED_VIEW).getAndSet(false)) {\n-      for (String stateType : newStateTypes) {\n+      for (String stateType : _aggregationEnabledTypes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU3MDA1NQ==", "bodyText": "In refresh logic, the refresh of customized state config (aggregationEnableTypes) happened before customized view. If we read stale aggregationEnabledTypes, it means that the event of customized state config change has not been processed yet. And it should be fine we do not remove stale types, right?", "url": "https://github.com/apache/helix/pull/917#discussion_r399570055", "createdAt": "2020-03-27T22:41:28Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/ResourceControllerDataProvider.java", "diffHunk": "@@ -197,18 +197,17 @@ private void refreshTargetExternalViews(final HelixDataAccessor accessor) {\n   public void refreshCustomizedViewMap(final HelixDataAccessor accessor) {\n     // As we are not listening on customized view change, customized view will be\n     // refreshed once during the cache's first refresh() call, or when full refresh is required\n-    List<String> newStateTypes = accessor.getChildNames(accessor.keyBuilder().customizedViews());\n     if (_propertyDataChangedMap.get(HelixConstants.ChangeType.CUSTOMIZED_VIEW).getAndSet(false)) {\n-      for (String stateType : newStateTypes) {\n+      for (String stateType : _aggregationEnabledTypes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2MzE0Ng=="}, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxODgwNA==", "bodyText": "I think I misread. This is for the in-memory cache not for the znodes.", "url": "https://github.com/apache/helix/pull/917#discussion_r399618804", "createdAt": "2020-03-28T04:40:54Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/ResourceControllerDataProvider.java", "diffHunk": "@@ -197,18 +197,17 @@ private void refreshTargetExternalViews(final HelixDataAccessor accessor) {\n   public void refreshCustomizedViewMap(final HelixDataAccessor accessor) {\n     // As we are not listening on customized view change, customized view will be\n     // refreshed once during the cache's first refresh() call, or when full refresh is required\n-    List<String> newStateTypes = accessor.getChildNames(accessor.keyBuilder().customizedViews());\n     if (_propertyDataChangedMap.get(HelixConstants.ChangeType.CUSTOMIZED_VIEW).getAndSet(false)) {\n-      for (String stateType : newStateTypes) {\n+      for (String stateType : _aggregationEnabledTypes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2MzE0Ng=="}, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzE5MDg2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/ResourceControllerDataProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxOTowMFrOF9DbmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoxOTowMFrOF9DbmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2MzY3Mw==", "bodyText": "The previous change is a good catch. But I don't think we need this converting if we just make removeCustomizedViewTypes receives a set.", "url": "https://github.com/apache/helix/pull/917#discussion_r399563673", "createdAt": "2020-03-27T22:19:00Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/ResourceControllerDataProvider.java", "diffHunk": "@@ -197,18 +197,17 @@ private void refreshTargetExternalViews(final HelixDataAccessor accessor) {\n   public void refreshCustomizedViewMap(final HelixDataAccessor accessor) {\n     // As we are not listening on customized view change, customized view will be\n     // refreshed once during the cache's first refresh() call, or when full refresh is required\n-    List<String> newStateTypes = accessor.getChildNames(accessor.keyBuilder().customizedViews());\n     if (_propertyDataChangedMap.get(HelixConstants.ChangeType.CUSTOMIZED_VIEW).getAndSet(false)) {\n-      for (String stateType : newStateTypes) {\n+      for (String stateType : _aggregationEnabledTypes) {\n         if (!_customizedViewCacheMap.containsKey(stateType)) {\n           CustomizedViewCache newCustomizedViewCache =\n               new CustomizedViewCache(getClusterName(), stateType);\n           _customizedViewCacheMap.put(stateType, newCustomizedViewCache);\n         }\n         _customizedViewCacheMap.get(stateType).refresh(accessor);\n       }\n-      Set<String> previousCachedStateTypes = _customizedViewCacheMap.keySet();\n-      previousCachedStateTypes.removeAll(newStateTypes);\n+      Set<String> previousCachedStateTypes = new HashSet<>(_customizedViewCacheMap.keySet());\n+      previousCachedStateTypes.removeAll(_aggregationEnabledTypes);\n       logger.info(\"Remove customizedView for state: \" + previousCachedStateTypes);\n       removeCustomizedViewTypes(new ArrayList<>(previousCachedStateTypes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzE5NDU3OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CustomizedViewAggregationStage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoyMTowNlrOF9Dd7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjo0NjoxMlrOF9D5ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NDI2OQ==", "bodyText": "Why? This list is a local variable, right?", "url": "https://github.com/apache/helix/pull/917#discussion_r399564269", "createdAt": "2020-03-27T22:21:06Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CustomizedViewAggregationStage.java", "diffHunk": "@@ -119,6 +117,7 @@ public void execute(final ClusterEvent event) throws Exception {\n               \"Failed to calculate customized view for resource \" + resource.getResourceName(), ex);\n         }\n       }\n+      updatedCustomizedViews.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU3MTMyMw==", "bodyText": "It's a variable defined outside state type for loop. If we do not clear it, it actually contains resource -> customized view mapping for all state types. When we update ZK, there's problem as we are updating state by state.\nBut I actually found this change is ugly, so I just moved the list inside the loop.", "url": "https://github.com/apache/helix/pull/917#discussion_r399571323", "createdAt": "2020-03-27T22:46:12Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CustomizedViewAggregationStage.java", "diffHunk": "@@ -119,6 +117,7 @@ public void execute(final ClusterEvent event) throws Exception {\n               \"Failed to calculate customized view for resource \" + resource.getResourceName(), ex);\n         }\n       }\n+      updatedCustomizedViews.clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NDI2OQ=="}, "originalCommit": {"oid": "00dfffc34e8656cc181d02ec7b87495b7917ada2"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzU5NTE0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNDo0NDowOVrOF9Gz3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNDo0NDowOVrOF9Gz3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxOTAzOQ==", "bodyText": "nit, since I am confused again while reviewing the code related to this field, shall we rename it to _lastSeenCustomizedStateTypesRef Or _lastSeenCustomizedStateTypesMapRef?", "url": "https://github.com/apache/helix/pull/917#discussion_r399619039", "createdAt": "2020-03-28T04:44:09Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -139,7 +139,9 @@\n   final AtomicReference<Map<String, LiveInstance>> _lastSeenInstances;\n   final AtomicReference<Map<String, LiveInstance>> _lastSeenSessions;\n \n-  final AtomicReference<Set<String>> _lastSeenCustomizedStateTypes;\n+  // map that stores the mapping between instance and the customized state types available on that\n+  //instance\n+  final AtomicReference<Map<String, Set<String>>> _lastSeenCustomizedStateTypesMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb0997aabdeaa5b20cf9353175f353db4fac10f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzU5NjY1OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNDo0NzozMFrOF9G0jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxOToxMTowNVrOF9Lo0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxOTIxMw==", "bodyText": "nit, if addCustomizedStateChangeListener already logs inside, we don't need this info log. Please confirm.", "url": "https://github.com/apache/helix/pull/917#discussion_r399619213", "createdAt": "2020-03-28T04:47:30Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -828,12 +830,17 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n     }\n \n     // TODO: remove the synchronization here once we move this update into dataCache.\n-    synchronized (_lastSeenCustomizedStateTypes) {\n-      Set<String> lastSeenCustomizedStateTypes = _lastSeenCustomizedStateTypes.get();\n+    synchronized (_lastSeenCustomizedStateTypesMap) {\n+      Map<String, Set<String>> lastSeenCustomizedStateTypesMap =\n+          _lastSeenCustomizedStateTypesMap.get();\n+      Set<String> lastSeenCustomizedStateTypes = Collections.emptySet();\n+      if (lastSeenCustomizedStateTypesMap != null && lastSeenCustomizedStateTypesMap\n+          .containsKey(instanceName)) {\n+        lastSeenCustomizedStateTypes = lastSeenCustomizedStateTypesMap.get(instanceName);\n+      }\n       for (String customizedState : customizedStateTypes) {\n         try {\n-          if (lastSeenCustomizedStateTypes == null || !lastSeenCustomizedStateTypes\n-              .contains(customizedState)) {\n+          if (!lastSeenCustomizedStateTypes.contains(customizedState)) {\n             manager.addCustomizedStateChangeListener(this, instanceName, customizedState);\n             logger.info(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb0997aabdeaa5b20cf9353175f353db4fac10f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNTkwNg==", "bodyText": "In ZkHelixManager, there's log for addListener, but in the controller, all the operations of adding listeners have this log, so I think it's better to keep consistent.", "url": "https://github.com/apache/helix/pull/917#discussion_r399625906", "createdAt": "2020-03-28T06:13:14Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -828,12 +830,17 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n     }\n \n     // TODO: remove the synchronization here once we move this update into dataCache.\n-    synchronized (_lastSeenCustomizedStateTypes) {\n-      Set<String> lastSeenCustomizedStateTypes = _lastSeenCustomizedStateTypes.get();\n+    synchronized (_lastSeenCustomizedStateTypesMap) {\n+      Map<String, Set<String>> lastSeenCustomizedStateTypesMap =\n+          _lastSeenCustomizedStateTypesMap.get();\n+      Set<String> lastSeenCustomizedStateTypes = Collections.emptySet();\n+      if (lastSeenCustomizedStateTypesMap != null && lastSeenCustomizedStateTypesMap\n+          .containsKey(instanceName)) {\n+        lastSeenCustomizedStateTypes = lastSeenCustomizedStateTypesMap.get(instanceName);\n+      }\n       for (String customizedState : customizedStateTypes) {\n         try {\n-          if (lastSeenCustomizedStateTypes == null || !lastSeenCustomizedStateTypes\n-              .contains(customizedState)) {\n+          if (!lastSeenCustomizedStateTypes.contains(customizedState)) {\n             manager.addCustomizedStateChangeListener(this, instanceName, customizedState);\n             logger.info(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxOTIxMw=="}, "originalCommit": {"oid": "bdb0997aabdeaa5b20cf9353175f353db4fac10f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyOTEzMg==", "bodyText": "The only additional information we get by printing this log is manager.getInstanceName(), I guess. I don't have a strong preference. But do whatever the other similar code does might cause redundant code. Please only keep this log if you think the extra helixmanager name can help us to debug in the future.", "url": "https://github.com/apache/helix/pull/917#discussion_r399629132", "createdAt": "2020-03-28T06:56:42Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -828,12 +830,17 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n     }\n \n     // TODO: remove the synchronization here once we move this update into dataCache.\n-    synchronized (_lastSeenCustomizedStateTypes) {\n-      Set<String> lastSeenCustomizedStateTypes = _lastSeenCustomizedStateTypes.get();\n+    synchronized (_lastSeenCustomizedStateTypesMap) {\n+      Map<String, Set<String>> lastSeenCustomizedStateTypesMap =\n+          _lastSeenCustomizedStateTypesMap.get();\n+      Set<String> lastSeenCustomizedStateTypes = Collections.emptySet();\n+      if (lastSeenCustomizedStateTypesMap != null && lastSeenCustomizedStateTypesMap\n+          .containsKey(instanceName)) {\n+        lastSeenCustomizedStateTypes = lastSeenCustomizedStateTypesMap.get(instanceName);\n+      }\n       for (String customizedState : customizedStateTypes) {\n         try {\n-          if (lastSeenCustomizedStateTypes == null || !lastSeenCustomizedStateTypes\n-              .contains(customizedState)) {\n+          if (!lastSeenCustomizedStateTypes.contains(customizedState)) {\n             manager.addCustomizedStateChangeListener(this, instanceName, customizedState);\n             logger.info(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxOTIxMw=="}, "originalCommit": {"oid": "bdb0997aabdeaa5b20cf9353175f353db4fac10f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5ODEyOQ==", "bodyText": "I think it can still provide some information, so keep it for now.", "url": "https://github.com/apache/helix/pull/917#discussion_r399698129", "createdAt": "2020-03-28T19:11:05Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -828,12 +830,17 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n     }\n \n     // TODO: remove the synchronization here once we move this update into dataCache.\n-    synchronized (_lastSeenCustomizedStateTypes) {\n-      Set<String> lastSeenCustomizedStateTypes = _lastSeenCustomizedStateTypes.get();\n+    synchronized (_lastSeenCustomizedStateTypesMap) {\n+      Map<String, Set<String>> lastSeenCustomizedStateTypesMap =\n+          _lastSeenCustomizedStateTypesMap.get();\n+      Set<String> lastSeenCustomizedStateTypes = Collections.emptySet();\n+      if (lastSeenCustomizedStateTypesMap != null && lastSeenCustomizedStateTypesMap\n+          .containsKey(instanceName)) {\n+        lastSeenCustomizedStateTypes = lastSeenCustomizedStateTypesMap.get(instanceName);\n+      }\n       for (String customizedState : customizedStateTypes) {\n         try {\n-          if (lastSeenCustomizedStateTypes == null || !lastSeenCustomizedStateTypes\n-              .contains(customizedState)) {\n+          if (!lastSeenCustomizedStateTypes.contains(customizedState)) {\n             manager.addCustomizedStateChangeListener(this, instanceName, customizedState);\n             logger.info(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxOTIxMw=="}, "originalCommit": {"oid": "bdb0997aabdeaa5b20cf9353175f353db4fac10f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzU5OTIyOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNDo1MTozMlrOF9G1uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNDo1MTozMlrOF9G1uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxOTUxMg==", "bodyText": "Might help to simplify the code.\nMap<String, Set> lastSeenCustomizedStateTypesMap =\n_lastSeenCustomizedStateTypesMap.get();\nif (null == lastSeenCustomizedStateTypesMap) {\nlastSeenCustomizedStateTypesMap = new HashMap();\n// lazy init the AtomicReference\n_lastSeenCustomizedStateTypesMapRef.set(lastSeenCustomizedStateTypesMap);\n}\nif (!lastSeenCustomizedStateTypesMap.containsKey(instanceName)) {\nlastSeenCustomizedStateTypesMap.put(instanceName, Collections.emptySet());\n}\nSet lastSeenCustomizedStateTypes = lastSeenCustomizedStateTypesMap.get(instanceName);\nThen you don't need to check null later.", "url": "https://github.com/apache/helix/pull/917#discussion_r399619512", "createdAt": "2020-03-28T04:51:32Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -828,12 +830,17 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n     }\n \n     // TODO: remove the synchronization here once we move this update into dataCache.\n-    synchronized (_lastSeenCustomizedStateTypes) {\n-      Set<String> lastSeenCustomizedStateTypes = _lastSeenCustomizedStateTypes.get();\n+    synchronized (_lastSeenCustomizedStateTypesMap) {\n+      Map<String, Set<String>> lastSeenCustomizedStateTypesMap =\n+          _lastSeenCustomizedStateTypesMap.get();\n+      Set<String> lastSeenCustomizedStateTypes = Collections.emptySet();\n+      if (lastSeenCustomizedStateTypesMap != null && lastSeenCustomizedStateTypesMap", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb0997aabdeaa5b20cf9353175f353db4fac10f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzY4MzIxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNjo1OTo0NVrOF9HcSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNzozNDoyMFrOF9Hmng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyOTM4Nw==", "bodyText": "Are you trying to do the following logic?\n// Update the last seen types cache\nlastSeenCustomizedStateTypes.clear()\nlastSeenCustomizedStateTypes.addAll(customizedStateTypes)", "url": "https://github.com/apache/helix/pull/917#discussion_r399629387", "createdAt": "2020-03-28T06:59:45Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -851,7 +865,7 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n         }\n       }\n \n-      _lastSeenCustomizedStateTypes.set(new HashSet<>(customizedStateTypes));\n+      lastSeenCustomizedStateTypes = new HashSet<>(customizedStateTypes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36d3ea1682493ad2676f9cbde08269729f87e8cd"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzMjAzMA==", "bodyText": "Yeah, messed it up.", "url": "https://github.com/apache/helix/pull/917#discussion_r399632030", "createdAt": "2020-03-28T07:34:20Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -851,7 +865,7 @@ public void onCustomizedStateRootChange(String instanceName, List<String> custom\n         }\n       }\n \n-      _lastSeenCustomizedStateTypes.set(new HashSet<>(customizedStateTypes));\n+      lastSeenCustomizedStateTypes = new HashSet<>(customizedStateTypes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyOTM4Nw=="}, "originalCommit": {"oid": "36d3ea1682493ad2676f9cbde08269729f87e8cd"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1418, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}