{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MzA2OTI4", "number": 1011, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDoxOTowOFrOD8sL-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjozOToyNFrOD8tlmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTY1MTE0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDoxOTowOFrOGVyZCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDoxOTowOFrOGVyZCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5ODg5MQ==", "bodyText": "can you create a private method with these common lines to avoid duplication?", "url": "https://github.com/apache/helix/pull/1011#discussion_r425498891", "createdAt": "2020-05-15T00:19:08Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "diffHunk": "@@ -1137,4 +1140,89 @@ private void validateZKNodeLimitation(int newConfigNodeCount) {\n           \"Cannot create more workflows or jobs because there are already too many items created in the path CONFIGS.\");\n     }\n   }\n+\n+  /**\n+   * Get the target task thread pool size of an instance, a value that's used to construct the task\n+   * thread pool and is created by users.\n+   * @param instanceName - name of the instance\n+   * @return the target task thread pool size of the instance\n+   */\n+  public int getTargetTaskThreadPoolSize(String instanceName) {\n+    InstanceConfig instanceConfig =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTY1MjM0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDoxOTo0MlrOGVyZsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDoxOTo0MlrOGVyZsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5OTA1OA==", "bodyText": "Same here. Duplicate code.", "url": "https://github.com/apache/helix/pull/1011#discussion_r425499058", "createdAt": "2020-05-15T00:19:42Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "diffHunk": "@@ -1137,4 +1140,89 @@ private void validateZKNodeLimitation(int newConfigNodeCount) {\n           \"Cannot create more workflows or jobs because there are already too many items created in the path CONFIGS.\");\n     }\n   }\n+\n+  /**\n+   * Get the target task thread pool size of an instance, a value that's used to construct the task\n+   * thread pool and is created by users.\n+   * @param instanceName - name of the instance\n+   * @return the target task thread pool size of the instance\n+   */\n+  public int getTargetTaskThreadPoolSize(String instanceName) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName);\n+    }\n+\n+    return instanceConfig.getTargetTaskThreadPoolSize();\n+  }\n+\n+  /**\n+   * Set the target task thread pool size of an instance. The target task thread pool size goes to\n+   * InstanceConfig, and is used to construct the task thread pool. The construction of thread pool\n+   * requires JVM restart after the target value has been set.\n+   * @param instanceName - name of the instance\n+   * @param targetTaskThreadPoolSize - the target task thread pool size of the instance\n+   */\n+  public void setTargetTaskThreadPoolSize(String instanceName, int targetTaskThreadPoolSize) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName + \"!\");\n+    }\n+\n+    instanceConfig.setTargetTaskThreadPoolSize(targetTaskThreadPoolSize);\n+  }\n+\n+  /**\n+   * Get the global target task thread pool size of the cluster, a value that's used to construct\n+   * task thread pools for the cluster's instances and is created by users.\n+   * @return the global target task thread pool size of the cluster\n+   */\n+  public int getGlobalTargetTaskThreadPoolSize() {\n+    ClusterConfig clusterConfig = _accessor.getProperty(_accessor.keyBuilder().clusterConfig());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTg3NDI0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjozNToyOVrOGV0fmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjozNToyOVrOGV0fmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzMzMzNw==", "bodyText": "A better way to say this is \"the newly-set task thread pool size will take effect upon a JVM restart\"", "url": "https://github.com/apache/helix/pull/1011#discussion_r425533337", "createdAt": "2020-05-15T02:35:29Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "diffHunk": "@@ -1137,4 +1140,89 @@ private void validateZKNodeLimitation(int newConfigNodeCount) {\n           \"Cannot create more workflows or jobs because there are already too many items created in the path CONFIGS.\");\n     }\n   }\n+\n+  /**\n+   * Get the target task thread pool size of an instance, a value that's used to construct the task\n+   * thread pool and is created by users.\n+   * @param instanceName - name of the instance\n+   * @return the target task thread pool size of the instance\n+   */\n+  public int getTargetTaskThreadPoolSize(String instanceName) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName);\n+    }\n+\n+    return instanceConfig.getTargetTaskThreadPoolSize();\n+  }\n+\n+  /**\n+   * Set the target task thread pool size of an instance. The target task thread pool size goes to\n+   * InstanceConfig, and is used to construct the task thread pool. The construction of thread pool\n+   * requires JVM restart after the target value has been set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTg4MDIyOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjozOTowOFrOGV0jPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjozOTowOFrOGV0jPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNDI3MA==", "bodyText": "Nit: add the cluster name here as well?", "url": "https://github.com/apache/helix/pull/1011#discussion_r425534270", "createdAt": "2020-05-15T02:39:08Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "diffHunk": "@@ -1137,4 +1140,89 @@ private void validateZKNodeLimitation(int newConfigNodeCount) {\n           \"Cannot create more workflows or jobs because there are already too many items created in the path CONFIGS.\");\n     }\n   }\n+\n+  /**\n+   * Get the target task thread pool size of an instance, a value that's used to construct the task\n+   * thread pool and is created by users.\n+   * @param instanceName - name of the instance\n+   * @return the target task thread pool size of the instance\n+   */\n+  public int getTargetTaskThreadPoolSize(String instanceName) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName);\n+    }\n+\n+    return instanceConfig.getTargetTaskThreadPoolSize();\n+  }\n+\n+  /**\n+   * Set the target task thread pool size of an instance. The target task thread pool size goes to\n+   * InstanceConfig, and is used to construct the task thread pool. The construction of thread pool\n+   * requires JVM restart after the target value has been set.\n+   * @param instanceName - name of the instance\n+   * @param targetTaskThreadPoolSize - the target task thread pool size of the instance\n+   */\n+  public void setTargetTaskThreadPoolSize(String instanceName, int targetTaskThreadPoolSize) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName + \"!\");\n+    }\n+\n+    instanceConfig.setTargetTaskThreadPoolSize(targetTaskThreadPoolSize);\n+  }\n+\n+  /**\n+   * Get the global target task thread pool size of the cluster, a value that's used to construct\n+   * task thread pools for the cluster's instances and is created by users.\n+   * @return the global target task thread pool size of the cluster\n+   */\n+  public int getGlobalTargetTaskThreadPoolSize() {\n+    ClusterConfig clusterConfig = _accessor.getProperty(_accessor.keyBuilder().clusterConfig());\n+    if (clusterConfig == null) {\n+      throw new IllegalStateException(\"Failed to find ClusterConfig!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTg4MDU3OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjozOToyNFrOGV0jhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjozOToyNFrOGV0jhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNDM0MA==", "bodyText": "Nit: add cluster name?", "url": "https://github.com/apache/helix/pull/1011#discussion_r425534340", "createdAt": "2020-05-15T02:39:24Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "diffHunk": "@@ -1137,4 +1140,89 @@ private void validateZKNodeLimitation(int newConfigNodeCount) {\n           \"Cannot create more workflows or jobs because there are already too many items created in the path CONFIGS.\");\n     }\n   }\n+\n+  /**\n+   * Get the target task thread pool size of an instance, a value that's used to construct the task\n+   * thread pool and is created by users.\n+   * @param instanceName - name of the instance\n+   * @return the target task thread pool size of the instance\n+   */\n+  public int getTargetTaskThreadPoolSize(String instanceName) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName);\n+    }\n+\n+    return instanceConfig.getTargetTaskThreadPoolSize();\n+  }\n+\n+  /**\n+   * Set the target task thread pool size of an instance. The target task thread pool size goes to\n+   * InstanceConfig, and is used to construct the task thread pool. The construction of thread pool\n+   * requires JVM restart after the target value has been set.\n+   * @param instanceName - name of the instance\n+   * @param targetTaskThreadPoolSize - the target task thread pool size of the instance\n+   */\n+  public void setTargetTaskThreadPoolSize(String instanceName, int targetTaskThreadPoolSize) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName + \"!\");\n+    }\n+\n+    instanceConfig.setTargetTaskThreadPoolSize(targetTaskThreadPoolSize);\n+  }\n+\n+  /**\n+   * Get the global target task thread pool size of the cluster, a value that's used to construct\n+   * task thread pools for the cluster's instances and is created by users.\n+   * @return the global target task thread pool size of the cluster\n+   */\n+  public int getGlobalTargetTaskThreadPoolSize() {\n+    ClusterConfig clusterConfig = _accessor.getProperty(_accessor.keyBuilder().clusterConfig());\n+    if (clusterConfig == null) {\n+      throw new IllegalStateException(\"Failed to find ClusterConfig!\");\n+    }\n+\n+    return clusterConfig.getGlobalTargetTaskThreadPoolSize();\n+  }\n+\n+  /**\n+   * Set the global target task thread pool size of the cluster. The global target task thread pool\n+   * size goes to ClusterConfig, and is applied to all instances of the cluster. If an instance\n+   * doesn't specify its target thread pool size in InstanceConfig, then this value in ClusterConfig\n+   * will be used to construct its task thread pool. The construction of thread pools requires JVM\n+   * restart. If none of the global and per-instance target thread pool sizes are set, a default\n+   * size will be used.\n+   * @param globalTargetTaskThreadPoolSize - the global target task thread pool size of the cluster\n+   */\n+  public void setGlobalTargetTaskThreadPoolSize(int globalTargetTaskThreadPoolSize) {\n+    ClusterConfig clusterConfig = _accessor.getProperty(_accessor.keyBuilder().clusterConfig());\n+    if (clusterConfig == null) {\n+      throw new IllegalStateException(\"Failed to find ClusterConfig!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1504, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}