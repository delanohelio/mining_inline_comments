{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyOTI4NDIz", "number": 681, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNTowNDoyM1rODYEHqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo0NDo0NVrODbuuAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTU5OTE1OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/HelixTimerTask.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNTowNDoyM1rOFdtaag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMjozNzo1MFrOFepy4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NzA2Ng==", "bodyText": "Would this break a class which extends HelixTimerTask in an external package?", "url": "https://github.com/apache/helix/pull/681#discussion_r366697066", "createdAt": "2020-01-15T05:04:23Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/HelixTimerTask.java", "diffHunk": "@@ -32,4 +32,9 @@\n    * Stop a timer task\n    */\n   public abstract void stop();\n+\n+  /**\n+   * Validate if the timer task is stopped\n+   */\n+  public abstract boolean isStopped();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcyNjc4Mg==", "bodyText": "If this is for test only, please keep it in the implementation classes and keep it protected.", "url": "https://github.com/apache/helix/pull/681#discussion_r366726782", "createdAt": "2020-01-15T07:30:05Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/HelixTimerTask.java", "diffHunk": "@@ -32,4 +32,9 @@\n    * Stop a timer task\n    */\n   public abstract void stop();\n+\n+  /**\n+   * Validate if the timer task is stopped\n+   */\n+  public abstract boolean isStopped();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NzA2Ng=="}, "originalCommit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzNjE0OA==", "bodyText": "The only exposed interface from ZkHelixManager is List<HelixTimerTask> _controllerTimerTasks = xxx and the actual implementation class is static class StatusDumpTask which is not exposed neither. How could I create a protected method and make it only visible for the test?", "url": "https://github.com/apache/helix/pull/681#discussion_r367036148", "createdAt": "2020-01-15T18:28:00Z", "author": {"login": "i3wangyi"}, "path": "helix-core/src/main/java/org/apache/helix/HelixTimerTask.java", "diffHunk": "@@ -32,4 +32,9 @@\n    * Stop a timer task\n    */\n   public abstract void stop();\n+\n+  /**\n+   * Validate if the timer task is stopped\n+   */\n+  public abstract boolean isStopped();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NzA2Ng=="}, "originalCommit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4NjM3MQ==", "bodyText": "One of the options is to cast the HelixTimerTask to a wrapper subclass only visible in test folders. And it assumes the objects in the list will be of type StatusDumpTask", "url": "https://github.com/apache/helix/pull/681#discussion_r367686371", "createdAt": "2020-01-16T22:37:50Z", "author": {"login": "i3wangyi"}, "path": "helix-core/src/main/java/org/apache/helix/HelixTimerTask.java", "diffHunk": "@@ -32,4 +32,9 @@\n    * Stop a timer task\n    */\n   public abstract void stop();\n+\n+  /**\n+   * Validate if the timer task is stopped\n+   */\n+  public abstract boolean isStopped();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NzA2Ng=="}, "originalCommit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTgwNzA1OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNzozODowNFrOFdvXEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMjozNjozNVrOFepxZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcyODk3OA==", "bodyText": "I think we have the same test case, or a similar test case. For example, TestStandAloneCMMain.java, there is more related test cases. The existing tests are actually more complicated than this one.\nI'm fine if you want to re-org the test so they are together. But can we remove the old duplicated tests and ensure we keep the most complicated cases in our test list?", "url": "https://github.com/apache/helix/pull/681#discussion_r366728978", "createdAt": "2020-01-15T07:38:04Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "diffHunk": "@@ -20,29 +20,136 @@\n  */\n \n import java.lang.management.ManagementFactory;\n+import java.util.List;\n import javax.management.MBeanServer;\n import javax.management.ObjectName;\n \n import org.apache.helix.AccessOption;\n import org.apache.helix.HelixDataAccessor;\n import org.apache.helix.HelixManager;\n import org.apache.helix.HelixManagerFactory;\n+import org.apache.helix.HelixTimerTask;\n import org.apache.helix.InstanceType;\n import org.apache.helix.PropertyPathBuilder;\n import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.ClusterControllerManager;\n import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.manager.zk.CallbackHandler;\n+import org.apache.helix.manager.zk.client.HelixZkClient;\n import org.apache.helix.model.IdealState;\n import org.apache.helix.model.LiveInstance;\n import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n import org.apache.helix.tools.ClusterVerifiers.BestPossibleExternalViewVerifier;\n import org.apache.helix.tools.ClusterVerifiers.ZkHelixClusterVerifier;\n import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n+\n+/**\n+ * Integration test on controller leadership on several phases given the test cluster:\n+ *  1. When a standby node becomes the leader node\n+ *     - single leader node mode\n+ *  2. When a leader node becomes standby node\n+ *     - single leader node mode\n+ *  3. When a leader node becomes standby node and the other leader node becomes leader node\n+ *     - The dual leader nodes mode when the leadership of the test cluster gets changed\n+ */\n public class TestControllerLeadershipChange extends ZkTestBase {\n+  private final String CLASS_NAME = getShortClassName();\n+  private final String CLUSTER_NAME = \"TestCluster-\" + CLASS_NAME;\n+\n+  @BeforeClass\n+  public void beforeClass()\n+      throws Exception {\n+    super.beforeClass();\n+    _gSetupTool.addCluster(CLUSTER_NAME, true);\n+    // add some instances\n+    _gSetupTool.addInstanceToCluster(CLUSTER_NAME, \"TestInstance\");\n+    _gSetupTool.addResourceToCluster(CLUSTER_NAME, \"TestResource\", 10, \"MasterSlave\");\n+  }\n \n   @Test\n-  public void testMissingTopStateDurationMonitoring() throws Exception {\n+  public void testOnSingleController() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzNDc1OA==", "bodyText": "Thanks for mentioning it! I was unaware of the existing test case at all (it's not trivial to find out). Will merge the similarities part later", "url": "https://github.com/apache/helix/pull/681#discussion_r367034758", "createdAt": "2020-01-15T18:25:10Z", "author": {"login": "i3wangyi"}, "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "diffHunk": "@@ -20,29 +20,136 @@\n  */\n \n import java.lang.management.ManagementFactory;\n+import java.util.List;\n import javax.management.MBeanServer;\n import javax.management.ObjectName;\n \n import org.apache.helix.AccessOption;\n import org.apache.helix.HelixDataAccessor;\n import org.apache.helix.HelixManager;\n import org.apache.helix.HelixManagerFactory;\n+import org.apache.helix.HelixTimerTask;\n import org.apache.helix.InstanceType;\n import org.apache.helix.PropertyPathBuilder;\n import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.ClusterControllerManager;\n import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.manager.zk.CallbackHandler;\n+import org.apache.helix.manager.zk.client.HelixZkClient;\n import org.apache.helix.model.IdealState;\n import org.apache.helix.model.LiveInstance;\n import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n import org.apache.helix.tools.ClusterVerifiers.BestPossibleExternalViewVerifier;\n import org.apache.helix.tools.ClusterVerifiers.ZkHelixClusterVerifier;\n import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n+\n+/**\n+ * Integration test on controller leadership on several phases given the test cluster:\n+ *  1. When a standby node becomes the leader node\n+ *     - single leader node mode\n+ *  2. When a leader node becomes standby node\n+ *     - single leader node mode\n+ *  3. When a leader node becomes standby node and the other leader node becomes leader node\n+ *     - The dual leader nodes mode when the leadership of the test cluster gets changed\n+ */\n public class TestControllerLeadershipChange extends ZkTestBase {\n+  private final String CLASS_NAME = getShortClassName();\n+  private final String CLUSTER_NAME = \"TestCluster-\" + CLASS_NAME;\n+\n+  @BeforeClass\n+  public void beforeClass()\n+      throws Exception {\n+    super.beforeClass();\n+    _gSetupTool.addCluster(CLUSTER_NAME, true);\n+    // add some instances\n+    _gSetupTool.addInstanceToCluster(CLUSTER_NAME, \"TestInstance\");\n+    _gSetupTool.addResourceToCluster(CLUSTER_NAME, \"TestResource\", 10, \"MasterSlave\");\n+  }\n \n   @Test\n-  public void testMissingTopStateDurationMonitoring() throws Exception {\n+  public void testOnSingleController() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcyODk3OA=="}, "originalCommit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4NTk5MQ==", "bodyText": "Synced offline. We both agree that the existing test is outdated and already broken. The new test case will cover the one since it's deleted in the PR", "url": "https://github.com/apache/helix/pull/681#discussion_r367685991", "createdAt": "2020-01-16T22:36:35Z", "author": {"login": "i3wangyi"}, "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "diffHunk": "@@ -20,29 +20,136 @@\n  */\n \n import java.lang.management.ManagementFactory;\n+import java.util.List;\n import javax.management.MBeanServer;\n import javax.management.ObjectName;\n \n import org.apache.helix.AccessOption;\n import org.apache.helix.HelixDataAccessor;\n import org.apache.helix.HelixManager;\n import org.apache.helix.HelixManagerFactory;\n+import org.apache.helix.HelixTimerTask;\n import org.apache.helix.InstanceType;\n import org.apache.helix.PropertyPathBuilder;\n import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.ClusterControllerManager;\n import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.manager.zk.CallbackHandler;\n+import org.apache.helix.manager.zk.client.HelixZkClient;\n import org.apache.helix.model.IdealState;\n import org.apache.helix.model.LiveInstance;\n import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n import org.apache.helix.tools.ClusterVerifiers.BestPossibleExternalViewVerifier;\n import org.apache.helix.tools.ClusterVerifiers.ZkHelixClusterVerifier;\n import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n+\n+/**\n+ * Integration test on controller leadership on several phases given the test cluster:\n+ *  1. When a standby node becomes the leader node\n+ *     - single leader node mode\n+ *  2. When a leader node becomes standby node\n+ *     - single leader node mode\n+ *  3. When a leader node becomes standby node and the other leader node becomes leader node\n+ *     - The dual leader nodes mode when the leadership of the test cluster gets changed\n+ */\n public class TestControllerLeadershipChange extends ZkTestBase {\n+  private final String CLASS_NAME = getShortClassName();\n+  private final String CLUSTER_NAME = \"TestCluster-\" + CLASS_NAME;\n+\n+  @BeforeClass\n+  public void beforeClass()\n+      throws Exception {\n+    super.beforeClass();\n+    _gSetupTool.addCluster(CLUSTER_NAME, true);\n+    // add some instances\n+    _gSetupTool.addInstanceToCluster(CLUSTER_NAME, \"TestInstance\");\n+    _gSetupTool.addResourceToCluster(CLUSTER_NAME, \"TestResource\", 10, \"MasterSlave\");\n+  }\n \n   @Test\n-  public void testMissingTopStateDurationMonitoring() throws Exception {\n+  public void testOnSingleController() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcyODk3OA=="}, "originalCommit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNDAyOTQzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo0Mjo0OVrOFjYiTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo1MjoyMFrOFjYz-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NjQ3OQ==", "bodyText": "Please keep the test cases as silent as possible. Only log or throw error asserts on failure case.", "url": "https://github.com/apache/helix/pull/681#discussion_r372646479", "createdAt": "2020-01-29T21:42:49Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "diffHunk": "@@ -30,19 +31,157 @@\n import org.apache.helix.InstanceType;\n import org.apache.helix.PropertyPathBuilder;\n import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.ClusterControllerManager;\n import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.manager.zk.CallbackHandler;\n+import org.apache.helix.manager.zk.client.HelixZkClient;\n import org.apache.helix.model.IdealState;\n import org.apache.helix.model.LiveInstance;\n import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n import org.apache.helix.tools.ClusterVerifiers.BestPossibleExternalViewVerifier;\n import org.apache.helix.tools.ClusterVerifiers.ZkHelixClusterVerifier;\n import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n+\n+/**\n+ * Integration test on controller leadership on several phases given the test cluster:\n+ *  1. When a standalone controller becomes the leader\n+ *  2. When a standalone leader relinquishes the leadership\n+ *  3. When the leader node relinquishes the leadership and the other controller takes it over\n+ */\n public class TestControllerLeadershipChange extends ZkTestBase {\n+  private final String CLASS_NAME = getShortClassName();\n+  private final String CLUSTER_NAME = \"TestCluster-\" + CLASS_NAME;\n+\n+  @BeforeClass\n+  public void beforeClass()\n+      throws Exception {\n+    super.beforeClass();\n+    _gSetupTool.addCluster(CLUSTER_NAME, true);\n+    _gSetupTool.addInstanceToCluster(CLUSTER_NAME, \"TestInstance\");\n+    _gSetupTool.addResourceToCluster(CLUSTER_NAME, \"TestResource\", 10, \"MasterSlave\");\n+  }\n+\n+  @AfterClass\n+  public void afterClass() {\n+    deleteCluster(CLUSTER_NAME);\n+  }\n \n   @Test\n-  public void testMissingTopStateDurationMonitoring() throws Exception {\n+  public void testControllerConnectThenDisconnect() {\n+    ClusterControllerManager controller =\n+        new ClusterControllerManager(ZK_ADDR, CLUSTER_NAME, \"TestController\");\n+    long start = System.currentTimeMillis();\n+    controller.syncStart();\n+    verifyControllerIsLeader(controller);\n+    System.out.println(System.currentTimeMillis() - start + \"ms spent on becoming the leader\");\n+\n+    start = System.currentTimeMillis();\n+    controller.syncStop();\n+    verifyControllerIsNotLeader(controller);\n+    verifyZKDisconnected(controller);\n+\n+    System.out.println(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f6c9af3d3171ca65ec3fc885412bc4526f5de"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1MTAwMA==", "bodyText": "I do need these output of recording the time duration spent on L -> S and S -> L (to prove the improvements). Modify the console print to LOG so it won't be printed out at least during mvn test", "url": "https://github.com/apache/helix/pull/681#discussion_r372651000", "createdAt": "2020-01-29T21:52:20Z", "author": {"login": "i3wangyi"}, "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "diffHunk": "@@ -30,19 +31,157 @@\n import org.apache.helix.InstanceType;\n import org.apache.helix.PropertyPathBuilder;\n import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.ClusterControllerManager;\n import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.manager.zk.CallbackHandler;\n+import org.apache.helix.manager.zk.client.HelixZkClient;\n import org.apache.helix.model.IdealState;\n import org.apache.helix.model.LiveInstance;\n import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n import org.apache.helix.tools.ClusterVerifiers.BestPossibleExternalViewVerifier;\n import org.apache.helix.tools.ClusterVerifiers.ZkHelixClusterVerifier;\n import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n+\n+/**\n+ * Integration test on controller leadership on several phases given the test cluster:\n+ *  1. When a standalone controller becomes the leader\n+ *  2. When a standalone leader relinquishes the leadership\n+ *  3. When the leader node relinquishes the leadership and the other controller takes it over\n+ */\n public class TestControllerLeadershipChange extends ZkTestBase {\n+  private final String CLASS_NAME = getShortClassName();\n+  private final String CLUSTER_NAME = \"TestCluster-\" + CLASS_NAME;\n+\n+  @BeforeClass\n+  public void beforeClass()\n+      throws Exception {\n+    super.beforeClass();\n+    _gSetupTool.addCluster(CLUSTER_NAME, true);\n+    _gSetupTool.addInstanceToCluster(CLUSTER_NAME, \"TestInstance\");\n+    _gSetupTool.addResourceToCluster(CLUSTER_NAME, \"TestResource\", 10, \"MasterSlave\");\n+  }\n+\n+  @AfterClass\n+  public void afterClass() {\n+    deleteCluster(CLUSTER_NAME);\n+  }\n \n   @Test\n-  public void testMissingTopStateDurationMonitoring() throws Exception {\n+  public void testControllerConnectThenDisconnect() {\n+    ClusterControllerManager controller =\n+        new ClusterControllerManager(ZK_ADDR, CLUSTER_NAME, \"TestController\");\n+    long start = System.currentTimeMillis();\n+    controller.syncStart();\n+    verifyControllerIsLeader(controller);\n+    System.out.println(System.currentTimeMillis() - start + \"ms spent on becoming the leader\");\n+\n+    start = System.currentTimeMillis();\n+    controller.syncStop();\n+    verifyControllerIsNotLeader(controller);\n+    verifyZKDisconnected(controller);\n+\n+    System.out.println(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NjQ3OQ=="}, "originalCommit": {"oid": "731f6c9af3d3171ca65ec3fc885412bc4526f5de"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNDAzNTg0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo0NDo0NVrOFjYl_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo1MDo0OVrOFjYxSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NzQyMw==", "bodyText": "nit, I believe the latest style file has changed exception throws to non-wrapping. Please update your local style configuration.", "url": "https://github.com/apache/helix/pull/681#discussion_r372647423", "createdAt": "2020-01-29T21:44:45Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "diffHunk": "@@ -117,16 +258,17 @@ public void testMissingTopStateDurationMonitoring() throws Exception {\n     // Resource lost top state, and manager1 lost leadership for 2000ms, because manager1 will\n     // clean monitoring cache after re-gaining leadership, so max value of hand off duration should\n     // not have such a large value\n-    Assert.assertTrue((long) beanServer.getAttribute(resourceMBeanObjectName,\n-        \"PartitionTopStateHandoffDurationGauge.Max\") < 500);\n+    Assert.assertTrue((long) beanServer\n+        .getAttribute(resourceMBeanObjectName, \"PartitionTopStateHandoffDurationGauge.Max\") < 500);\n \n     participant.syncStop();\n     manager1.disconnect();\n     manager2.disconnect();\n     deleteCluster(clusterName);\n   }\n \n-  private void setLeader(HelixManager manager) throws Exception {\n+  private void setLeader(HelixManager manager)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f6c9af3d3171ca65ec3fc885412bc4526f5de"}, "originalPosition": 207}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1MDMxMw==", "bodyText": "good catch. updated", "url": "https://github.com/apache/helix/pull/681#discussion_r372650313", "createdAt": "2020-01-29T21:50:49Z", "author": {"login": "i3wangyi"}, "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "diffHunk": "@@ -117,16 +258,17 @@ public void testMissingTopStateDurationMonitoring() throws Exception {\n     // Resource lost top state, and manager1 lost leadership for 2000ms, because manager1 will\n     // clean monitoring cache after re-gaining leadership, so max value of hand off duration should\n     // not have such a large value\n-    Assert.assertTrue((long) beanServer.getAttribute(resourceMBeanObjectName,\n-        \"PartitionTopStateHandoffDurationGauge.Max\") < 500);\n+    Assert.assertTrue((long) beanServer\n+        .getAttribute(resourceMBeanObjectName, \"PartitionTopStateHandoffDurationGauge.Max\") < 500);\n \n     participant.syncStop();\n     manager1.disconnect();\n     manager2.disconnect();\n     deleteCluster(clusterName);\n   }\n \n-  private void setLeader(HelixManager manager) throws Exception {\n+  private void setLeader(HelixManager manager)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NzQyMw=="}, "originalCommit": {"oid": "731f6c9af3d3171ca65ec3fc885412bc4526f5de"}, "originalPosition": 207}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1526, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}