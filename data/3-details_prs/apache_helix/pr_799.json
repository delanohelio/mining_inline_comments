{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjYxNjk4", "number": 799, "title": "[helix-rest] Add endpoint to get namespace routing data", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nImplements #798\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nAdd Java API to support get mapping of all sharding keys by realm: realm -> list of sharding keys.\nThis will help with reducing REST calls down to one single call to read all raw routing data in ZK.\nTests\n\n\n The following tests are written for this issue:\n\n\ntestGetShardingKeysGroupByRealm\n\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n\n[INFO] Tests run: 128, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 28.216 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 128, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:01 min\n[INFO] Finished at: 2020-02-22T20:29:35-08:00\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines, and I have squashed multiple commits if they address the same issue. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation\n\n In case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCode Quality\n\n My diff has been formatted using helix-style.xml", "createdAt": "2020-02-23T04:30:42Z", "url": "https://github.com/apache/helix/pull/799", "merged": true, "mergeCommit": {"oid": "f5c6f3fc95ab417b5837393ca5fecb6400e6a187"}, "closed": true, "closedAt": "2020-02-23T23:19:38Z", "author": {"login": "huizhilu"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHBPX9gH2gAyMzc4NjYxNjk4OjY4YjdmNzZiYmE4ODAwZDM2MjA4MzRmZjc3ZWI3YjQ3NjRiOTU3MzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHODqAgH2gAyMzc4NjYxNjk4OmQ5ODUzYjg4MTFjZWM0MWEzODZlNGJmZDM2ZmNmYjY5Mjg2NGQxNjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "68b7f76bba8800d3620834ff77eb7b4764b95734", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/68b7f76bba8800d3620834ff77eb7b4764b95734", "committedDate": "2020-02-23T04:30:15Z", "message": "Add REST endpoint to get sharding keys by realm"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDY1NDAw", "url": "https://github.com/apache/helix/pull/799#pullrequestreview-363065400", "createdAt": "2020-02-23T04:45:51Z", "commit": {"oid": "68b7f76bba8800d3620834ff77eb7b4764b95734"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNDo0NTo1MVrOFtOQQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNTozNDo0NVrOFtOZCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2Mzc3Ng==", "bodyText": "Consider making List to Collection for consistency with other APIs?", "url": "https://github.com/apache/helix/pull/799#discussion_r382963776", "createdAt": "2020-02-23T04:45:51Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/MetadataStoreDirectory.java", "diffHunk": "@@ -51,6 +52,14 @@\n    */\n   Collection<String> getAllShardingKeys(String namespace);\n \n+  /**\n+   * Returns all path-based sharding keys by realm in the given namespace.\n+   *\n+   * @param namespace namespace in metadata store directory.\n+   * @return Map: realm -> List of sharding keys\n+   */\n+  Map<String, List<String>> getShardingKeysByRealm(String namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68b7f76bba8800d3620834ff77eb7b4764b95734"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NTY4NQ==", "bodyText": "if (!_realmToShardingKeysMap.contains(namespace)) {\n  throw Exception(~~~);\n}\nreturn  _realmToShardingKeys.get(namespace);\n\nseems like a more concise way of expressing this.", "url": "https://github.com/apache/helix/pull/799#discussion_r382965685", "createdAt": "2020-02-23T05:27:20Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -111,6 +111,16 @@ public ZkMetadataStoreDirectory(Map<String, String> routingZkAddressMap)\n     return allShardingKeys;\n   }\n \n+  @Override\n+  public Map<String, List<String>> getShardingKeysByRealm(String namespace) {\n+    Map<String, List<String>> shardingKeysByRealmMap = _realmToShardingKeysMap.get(namespace);\n+    if (shardingKeysByRealmMap == null) {\n+      throw new NoSuchElementException(\"Namespace \" + namespace + \" does not exist!\");\n+    }\n+\n+    return shardingKeysByRealmMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68b7f76bba8800d3620834ff77eb7b4764b95734"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NTg5OA==", "bodyText": "if (prefix == null) {\n  if (groupByRealm) {\n    return getAllShardingKeysByRealm();\n  }\n  return getAllShardingKeys();\n}\n\nwould be a more concise and readable way of expressing this logic. what do you think?", "url": "https://github.com/apache/helix/pull/799#discussion_r382965898", "createdAt": "2020-02-23T05:31:45Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/server/resources/metadatastore/MetadataStoreDirectoryAccessor.java", "diffHunk": "@@ -167,11 +169,15 @@ public Response deleteMetadataStoreRealm(@PathParam(\"realm\") String realm) {\n    */\n   @GET\n   @Path(\"/sharding-keys\")\n-  public Response getShardingKeys(@QueryParam(\"prefix\") String prefix) {\n+  public Response getShardingKeys(@QueryParam(\"prefix\") String prefix,\n+      @DefaultValue(\"false\") @QueryParam(\"groupByRealm\") boolean groupByRealm) {\n     try {\n-      if (prefix == null) {\n+      if (prefix == null && !groupByRealm) {\n         // For endpoint: \"/sharding-keys\" to get all sharding keys in a namespace.\n         return getAllShardingKeys();\n+      } else if (prefix == null) {\n+        // For request: \"/sharding-keys?groupByRealm=true\" to get sharding keys by realm.\n+        return getAllShardingKeysByRealm();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68b7f76bba8800d3620834ff77eb7b4764b95734"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NjAyNg==", "bodyText": "Nit: do you think we should use Collection where appropriate to make things consistent? Let's first check if Jackson supports serialization of Collections.", "url": "https://github.com/apache/helix/pull/799#discussion_r382966026", "createdAt": "2020-02-23T05:34:45Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/datamodel/MetadataStoreShardingKeysByRealm.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.apache.helix.rest.metadatastore.datamodel;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.List;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+\n+\n+@JsonPropertyOrder({\"realm\", \"shardingKeys\"})\n+public class MetadataStoreShardingKeysByRealm {\n+  private String realm;\n+  private List<String> shardingKeys;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68b7f76bba8800d3620834ff77eb7b4764b95734"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dc2d06039620b0927c7d68ff92c0143f7d4701a", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/8dc2d06039620b0927c7d68ff92c0143f7d4701a", "committedDate": "2020-02-23T06:48:01Z", "message": "Address comments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "209303ab048ff1d3b2368f5a7aef350465d8cf99", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/209303ab048ff1d3b2368f5a7aef350465d8cf99", "committedDate": "2020-02-23T06:38:00Z", "message": "Address comments."}, "afterCommit": {"oid": "8dc2d06039620b0927c7d68ff92c0143f7d4701a", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/8dc2d06039620b0927c7d68ff92c0143f7d4701a", "committedDate": "2020-02-23T06:48:01Z", "message": "Address comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDcwMDc1", "url": "https://github.com/apache/helix/pull/799#pullrequestreview-363070075", "createdAt": "2020-02-23T07:09:40Z", "commit": {"oid": "8dc2d06039620b0927c7d68ff92c0143f7d4701a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNzowOTo0MFrOFtOr4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNzowOTo0MFrOFtOr4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MDg0OQ==", "bodyText": "Have you considered creating a separate endpoint for retrieving all realm-list of keys mappings?\nAs I previously commented, I believe that making sure an endpoint does as little as possible and keeping it simple is an important part of a good API design. But now this endpoint has multiple queryParams, and I think this makes it a little more confusing.\nThis is because this endpoint now does more than one thing depending on what queryParams are given, and in this case, the groupByRealm queryParam seems to be serving to specify an option/mode rather than a filter.\nCould we please create a separate endpoint called getAllRoutingData(String namespace)? This way, we keep the original getShardingKeys simple, and there's no confusion about what each of these endpoints is doing. The endpoint name could be something like /all-routing-data or whatever you see fit.", "url": "https://github.com/apache/helix/pull/799#discussion_r382970849", "createdAt": "2020-02-23T07:09:40Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/server/resources/metadatastore/MetadataStoreDirectoryAccessor.java", "diffHunk": "@@ -167,14 +183,22 @@ public Response deleteMetadataStoreRealm(@PathParam(\"realm\") String realm) {\n    */\n   @GET\n   @Path(\"/sharding-keys\")\n-  public Response getShardingKeys(@QueryParam(\"prefix\") String prefix) {\n+  public Response getShardingKeys(@QueryParam(\"prefix\") String prefix,\n+      @DefaultValue(\"false\") @QueryParam(\"groupByRealm\") boolean groupByRealm) {\n     try {\n-      if (prefix == null) {\n-        // For endpoint: \"/sharding-keys\" to get all sharding keys in a namespace.\n-        return getAllShardingKeys();\n+      if (prefix != null) {\n+        // For endpoint: \"/sharding-keys?prefix={prefix}\"\n+        // Ignore groupByRealm because response already has realm info for each sharding key.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dc2d06039620b0927c7d68ff92c0143f7d4701a"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeb5966ad0222bc9f44edf3243f5b2221a73ef29", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/aeb5966ad0222bc9f44edf3243f5b2221a73ef29", "committedDate": "2020-02-23T07:55:51Z", "message": "Change endpoint to /routing-data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "397afe4d80c32aa9afdcb8e62b1c7bbae2677207", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/397afe4d80c32aa9afdcb8e62b1c7bbae2677207", "committedDate": "2020-02-23T08:06:07Z", "message": "Refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMTEwNTYw", "url": "https://github.com/apache/helix/pull/799#pullrequestreview-363110560", "createdAt": "2020-02-23T17:33:56Z", "commit": {"oid": "397afe4d80c32aa9afdcb8e62b1c7bbae2677207"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxNzozMzo1NlrOFtR5UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxNzozMzo1NlrOFtR5UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyMzQ0MA==", "bodyText": "Nit: should we rename this method to getAllRoutingDataInNamespace(String namespace)? That way there's no ambiguity and is more consistent with other methods' names in this class.", "url": "https://github.com/apache/helix/pull/799#discussion_r383023440", "createdAt": "2020-02-23T17:33:56Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/MetadataStoreDirectory.java", "diffHunk": "@@ -51,6 +52,14 @@\n    */\n   Collection<String> getAllShardingKeys(String namespace);\n \n+  /**\n+   * Returns routing data in the given namespace.\n+   *\n+   * @param namespace namespace in metadata store directory.\n+   * @return Routing data map: realm -> List of sharding keys\n+   */\n+  Map<String, List<String>> getRoutingData(String namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "397afe4d80c32aa9afdcb8e62b1c7bbae2677207"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMTEwNTYz", "url": "https://github.com/apache/helix/pull/799#pullrequestreview-363110563", "createdAt": "2020-02-23T17:34:02Z", "commit": {"oid": "397afe4d80c32aa9afdcb8e62b1c7bbae2677207"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9853b8811cec41a386e4bfd36fcfb692864d164", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/d9853b8811cec41a386e4bfd36fcfb692864d164", "committedDate": "2020-02-23T19:26:13Z", "message": "Change name to getNamespaceRoutingData"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4965, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}