{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NzgzNDkx", "number": 1579, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjo1MToyOFrOFCwueQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozMjo0NFrOFDtwRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDM5ODAxOnYy", "diffSide": "RIGHT", "path": "helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/CurrentStatesResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjo1MToyOFrOICFIPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNzozMzoxNVrOICg0kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjA5Mg==", "bodyText": "This is fine, I guess you can just deprecate the older one.", "url": "https://github.com/apache/helix/pull/1579#discussion_r539052092", "createdAt": "2020-12-09T06:51:28Z", "author": {"login": "jiajunwang"}, "path": "helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/CurrentStatesResource.java", "diffHunk": "@@ -65,10 +66,10 @@ StringRepresentation getInstanceCurrentStatesRepresentation(String clusterName,\n     String instanceSessionId =\n         ClusterRepresentationUtil.getInstanceSessionId(zkClient, clusterName, instanceName);\n \n-    String message =\n-        ClusterRepresentationUtil\n-            .getInstancePropertyNameListAsString(zkClient, clusterName, instanceName,\n-                PropertyType.CURRENTSTATES, instanceSessionId, MediaType.APPLICATION_JSON);\n+    String message = ClusterRepresentationUtil\n+        .getMultiInstancePropertyNameListsAsString(zkClient, clusterName, instanceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUwNTgwOA==", "bodyText": "You mean deprecate getInstancePropertyNameListAsString? Technically it does different things from this new method, so is it better to keep it?", "url": "https://github.com/apache/helix/pull/1579#discussion_r539505808", "createdAt": "2020-12-09T17:33:15Z", "author": {"login": "NealSun96"}, "path": "helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/CurrentStatesResource.java", "diffHunk": "@@ -65,10 +66,10 @@ StringRepresentation getInstanceCurrentStatesRepresentation(String clusterName,\n     String instanceSessionId =\n         ClusterRepresentationUtil.getInstanceSessionId(zkClient, clusterName, instanceName);\n \n-    String message =\n-        ClusterRepresentationUtil\n-            .getInstancePropertyNameListAsString(zkClient, clusterName, instanceName,\n-                PropertyType.CURRENTSTATES, instanceSessionId, MediaType.APPLICATION_JSON);\n+    String message = ClusterRepresentationUtil\n+        .getMultiInstancePropertyNameListsAsString(zkClient, clusterName, instanceName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjA5Mg=="}, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDQwMTkwOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjo1Mjo0NVrOICFKXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoxMzo1NFrOICioUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjYzOA==", "bodyText": "A new controller supports the older participants. So this should not be a required path, no?", "url": "https://github.com/apache/helix/pull/1579#discussion_r539052638", "createdAt": "2020-12-09T06:52:45Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -153,6 +153,7 @@ public static boolean isInstanceSetup(RealmAwareZkClient zkclient, String cluste\n       requiredPaths.add(PropertyPathBuilder.instanceConfig(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceMessage(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceCurrentState(clusterName, instanceName));\n+      requiredPaths.add(PropertyPathBuilder.instanceTaskCurrentState(clusterName, instanceName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1NDY1MQ==", "bodyText": "You're right.", "url": "https://github.com/apache/helix/pull/1579#discussion_r539454651", "createdAt": "2020-12-09T16:28:46Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -153,6 +153,7 @@ public static boolean isInstanceSetup(RealmAwareZkClient zkclient, String cluste\n       requiredPaths.add(PropertyPathBuilder.instanceConfig(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceMessage(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceCurrentState(clusterName, instanceName));\n+      requiredPaths.add(PropertyPathBuilder.instanceTaskCurrentState(clusterName, instanceName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjYzOA=="}, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzNTQ0Mw==", "bodyText": "+1", "url": "https://github.com/apache/helix/pull/1579#discussion_r539535443", "createdAt": "2020-12-09T18:13:54Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -153,6 +153,7 @@ public static boolean isInstanceSetup(RealmAwareZkClient zkclient, String cluste\n       requiredPaths.add(PropertyPathBuilder.instanceConfig(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceMessage(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceCurrentState(clusterName, instanceName));\n+      requiredPaths.add(PropertyPathBuilder.instanceTaskCurrentState(clusterName, instanceName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjYzOA=="}, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDQwNzg2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/tools/commandtools/CurrentStateCleanUp.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjo1NDozOVrOICFNhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNzoyNDoyMVrOICga_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MzQ0NQ==", "bodyText": "Can we change to use the multi remove method that is also supported by the accessor?", "url": "https://github.com/apache/helix/pull/1579#discussion_r539053445", "createdAt": "2020-12-09T06:54:39Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/tools/commandtools/CurrentStateCleanUp.java", "diffHunk": "@@ -124,15 +125,21 @@ public ZNRecord update(ZNRecord currentData) {\n       LOG.info(String.format(\"Processing cleaning current state for instance: %s\", instanceName));\n       List<String> currentStateNames =\n           accessor.getChildNames(accessor.keyBuilder().currentStates(instanceName, session));\n-      for (String currentStateName : currentStateNames) {\n-        PropertyKey key =\n-            accessor.keyBuilder().currentState(instanceName, session, currentStateName);\n+      List<String> taskCurrentStateNames =\n+          accessor.getChildNames(accessor.keyBuilder().taskCurrentStates(instanceName, session));\n+      List<PropertyKey> allCurrentStateKeys = new ArrayList<>();\n+      currentStateNames.stream()\n+          .map(name -> accessor.keyBuilder().currentState(instanceName, session, name))\n+          .forEach(allCurrentStateKeys::add);\n+      taskCurrentStateNames.stream()\n+          .map(name -> accessor.keyBuilder().taskCurrentState(instanceName, session, name))\n+          .forEach(allCurrentStateKeys::add);\n+      for (PropertyKey key : allCurrentStateKeys) {\n         accessor.getBaseDataAccessor().update(key.getPath(), updater, AccessOption.PERSISTENT);\n         CurrentState currentState = accessor.getProperty(key);\n         if (currentState.getPartitionStateMap().size() == 0) {\n           accessor.getBaseDataAccessor().remove(key.getPath(), AccessOption.PERSISTENT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ5OTI2Mg==", "bodyText": "Sure, factoring out the remove to be done after filtering.", "url": "https://github.com/apache/helix/pull/1579#discussion_r539499262", "createdAt": "2020-12-09T17:24:21Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/main/java/org/apache/helix/tools/commandtools/CurrentStateCleanUp.java", "diffHunk": "@@ -124,15 +125,21 @@ public ZNRecord update(ZNRecord currentData) {\n       LOG.info(String.format(\"Processing cleaning current state for instance: %s\", instanceName));\n       List<String> currentStateNames =\n           accessor.getChildNames(accessor.keyBuilder().currentStates(instanceName, session));\n-      for (String currentStateName : currentStateNames) {\n-        PropertyKey key =\n-            accessor.keyBuilder().currentState(instanceName, session, currentStateName);\n+      List<String> taskCurrentStateNames =\n+          accessor.getChildNames(accessor.keyBuilder().taskCurrentStates(instanceName, session));\n+      List<PropertyKey> allCurrentStateKeys = new ArrayList<>();\n+      currentStateNames.stream()\n+          .map(name -> accessor.keyBuilder().currentState(instanceName, session, name))\n+          .forEach(allCurrentStateKeys::add);\n+      taskCurrentStateNames.stream()\n+          .map(name -> accessor.keyBuilder().taskCurrentState(instanceName, session, name))\n+          .forEach(allCurrentStateKeys::add);\n+      for (PropertyKey key : allCurrentStateKeys) {\n         accessor.getBaseDataAccessor().update(key.getPath(), updater, AccessOption.PERSISTENT);\n         CurrentState currentState = accessor.getProperty(key);\n         if (currentState.getPartitionStateMap().size() == 0) {\n           accessor.getBaseDataAccessor().remove(key.getPath(), AccessOption.PERSISTENT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MzQ0NQ=="}, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDQxNDAyOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjo1Njo1N1rOICFRIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjo1Njo1N1rOICFRIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1NDM2OA==", "bodyText": "nit, could you also update the method comment?\n\"at least 1 resource\" -> \"at least 1 resource or task\", something like this.", "url": "https://github.com/apache/helix/pull/1579#discussion_r539054368", "createdAt": "2020-12-09T06:56:57Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java", "diffHunk": "@@ -104,9 +104,8 @@ public static boolean hasResourceAssigned(HelixDataAccessor dataAccessor, String\n     if (liveInstance != null) {\n       String sessionId = liveInstance.getEphemeralOwner();\n \n-      List<String> resourceNames = dataAccessor.getChildNames(propertyKeyBuilder.currentStates(instanceName, sessionId));\n-      for (String resourceName : resourceNames) {\n-        PropertyKey currentStateKey = propertyKeyBuilder.currentState(instanceName, sessionId, resourceName);\n+      for (PropertyKey currentStateKey : getAllCurrentStateKeys(dataAccessor, instanceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDM5Mjc5OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozMTo0MVrOIDgRbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMDowNDozOVrOIDjGHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTM5MA==", "bodyText": "This is not necessary to instance validation util. Because this management API is used for check real data resource. Our split could even better to filter out the TASK current state.", "url": "https://github.com/apache/helix/pull/1579#discussion_r540545390", "createdAt": "2020-12-10T22:31:41Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java", "diffHunk": "@@ -188,11 +187,7 @@ public static boolean hasErrorPartitions(HelixDataAccessor dataAccessor, String\n     if (liveInstance != null) {\n       String sessionId = liveInstance.getEphemeralOwner();\n \n-      PropertyKey currentStatesKey = propertyKeyBuilder.currentStates(instanceName, sessionId);\n-      List<String> resourceNames = dataAccessor.getChildNames(currentStatesKey);\n-      for (String resourceName : resourceNames) {\n-        PropertyKey key = propertyKeyBuilder.currentState(instanceName, sessionId, resourceName);\n-\n+      for (PropertyKey key : getAllCurrentStateKeys(dataAccessor, instanceName, sessionId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74da32be1a891ca16215d4952a6c8d2343920c71"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5MTY0NA==", "bodyText": "@dasahcc removed", "url": "https://github.com/apache/helix/pull/1579#discussion_r540591644", "createdAt": "2020-12-11T00:04:39Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java", "diffHunk": "@@ -188,11 +187,7 @@ public static boolean hasErrorPartitions(HelixDataAccessor dataAccessor, String\n     if (liveInstance != null) {\n       String sessionId = liveInstance.getEphemeralOwner();\n \n-      PropertyKey currentStatesKey = propertyKeyBuilder.currentStates(instanceName, sessionId);\n-      List<String> resourceNames = dataAccessor.getChildNames(currentStatesKey);\n-      for (String resourceName : resourceNames) {\n-        PropertyKey key = propertyKeyBuilder.currentState(instanceName, sessionId, resourceName);\n-\n+      for (PropertyKey key : getAllCurrentStateKeys(dataAccessor, instanceName, sessionId)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTM5MA=="}, "originalCommit": {"oid": "74da32be1a891ca16215d4952a6c8d2343920c71"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDM5Njg3OnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/server/service/InstanceServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozMjo0NFrOIDgTqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozMjo0NFrOIDgTqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTk2Mw==", "bodyText": "Same here. We dont care about tasks for management API.", "url": "https://github.com/apache/helix/pull/1579#discussion_r540545963", "createdAt": "2020-12-10T22:32:44Z", "author": {"login": "junkaixue"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/server/service/InstanceServiceImpl.java", "diffHunk": "@@ -119,19 +120,25 @@ public InstanceInfo getInstanceInfo(String clusterId, String instanceName,\n       instanceInfoBuilder.liveInstance(liveInstance.getRecord());\n       String sessionId = liveInstance.getEphemeralOwner();\n \n+      Map<String, PropertyKey> resourcePropertyKeyPair = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74da32be1a891ca16215d4952a6c8d2343920c71"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 842, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}