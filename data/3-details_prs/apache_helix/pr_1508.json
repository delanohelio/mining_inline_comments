{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NDYxMzAx", "number": 1508, "title": "Fix ondemand rebalance flooding and log flooding caused by dangling jobs", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1506, #1507\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nThis PR fixes 2 issues:\n\nOndemand rebalance flooding after TF IS removal. This is caused by an old problem. A jobConfig can exist for the previous iterations of a workflow, but the job doesn't exist in the job DAG. Because of runtime DAG refresh logic, such a jobConfig will cause the runtime DAG to be refreshed every time the pipeline runs. A new runtime DAG causes all the jobs to be reprocessed, and during processing, the cleanup logic is run for every job that has already completed. Before IS removal, the cleanup logic attempts to delete the IS again, which has no effect; in the new code, an onDemand rebalance is triggered instead.\nThis \"dangling job\" will not be removed, so the job dag refresh keeps on happening, which causes the ondemand rebalances to keep on firing.\nLog flooding for jobs that miss target resources after TF IS removal. Similarly, \"dangling jobs\" can have missing target resources once their target resources are deleted. Before IS removal, this is not a problem because this log is only triggered when the job is first processed; now, the processing logic happens every pipeline (since it's config based, instead of IS based), so the log could keep on firing.\n\nTests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[INFO] Tests run: 1237, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4,907.142 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 1237, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:21 h\n[INFO] Finished at: 2020-11-03T13:22:54-08:00\n[INFO] ------------------------------------------------------------------------\n\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-11-03T03:45:12Z", "url": "https://github.com/apache/helix/pull/1508", "merged": true, "mergeCommit": {"oid": "ec214b2e809c6895382019243007e0167680502b"}, "closed": true, "closedAt": "2020-11-04T17:44:09Z", "author": {"login": "NealSun96"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYu30OgH2gAyNTE0NDYxMzAxOjFjY2JlYTE5ZmQzOGM5ZTVhYmU5MzMzYWQyZmZjODE1MDI0MDQ0NDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZCJYeAH2gAyNTE0NDYxMzAxOjhlMTRmMDEwNmIzZmQyY2E3NDUzYWYxNzdhMWI3YWYwOTNlZDU0ODI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ccbea19fd38c9e5abe9333ad2ffc81502404444", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/1ccbea19fd38c9e5abe9333ad2ffc81502404444", "committedDate": "2020-11-03T01:28:01Z", "message": "Fix ondemand rebalance flooding caused by dangling jobs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTc1OTc0", "url": "https://github.com/apache/helix/pull/1508#pullrequestreview-522175974", "createdAt": "2020-11-03T03:52:34Z", "commit": {"oid": "1ccbea19fd38c9e5abe9333ad2ffc81502404444"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMzo1MjozNFrOHsffbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMzo1MjozNFrOHsffbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQxNTM0MQ==", "bodyText": "Why this section is removed: this section is refresh runtime dags based on JobConfigs. For every new job config, its workflow is added; for ever job config that doesn't exist in the jobqueue's dag (seems to be duplicate with the first part of logic), its workflow is added.\nWith dangling jobs, their jobConfigs are never deleted, so this section is activated all the time and the workflow, if exists, will have its DAG refreshed all the time. The problem is detailed in PR description.\nI don't think the extra logic for new job config or for the race condition makes much sense, given that a new logic which compares WorkflowConfig version is in place - if a new job is added, eventually the DAG will be updated, which will cause a version change and a runtime dag refresh.", "url": "https://github.com/apache/helix/pull/1508#discussion_r516415341", "createdAt": "2020-11-03T03:52:34Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/main/java/org/apache/helix/common/caches/TaskDataCache.java", "diffHunk": "@@ -116,33 +116,6 @@ public synchronized boolean refresh(HelixDataAccessor accessor,\n       }\n     }\n \n-    // The following 3 blocks is for finding a list of workflows whose JobDAGs have been changed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ccbea19fd38c9e5abe9333ad2ffc81502404444"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNzE1MTk1", "url": "https://github.com/apache/helix/pull/1508#pullrequestreview-522715195", "createdAt": "2020-11-03T17:16:22Z", "commit": {"oid": "1ccbea19fd38c9e5abe9333ad2ffc81502404444"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzoxNjoyMlrOHs4y0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzoxNjoyMlrOHs4y0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyOTkwNQ==", "bodyText": "Maybe this comment needs to be changed. It was added for the purge race condition. Now it is serving as general-purpose workflow config modification.", "url": "https://github.com/apache/helix/pull/1508#discussion_r516829905", "createdAt": "2020-11-03T17:16:22Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/common/caches/TaskDataCache.java", "diffHunk": "@@ -116,33 +116,6 @@ public synchronized boolean refresh(HelixDataAccessor accessor,\n       }\n     }\n \n-    // The following 3 blocks is for finding a list of workflows whose JobDAGs have been changed\n-    // because their RuntimeJobDags would need to be re-built\n-    // newly added jobs\n-    for (String jobName : newJobConfigs.keySet()) {\n-      if (!_jobConfigMap.containsKey(jobName) && newJobConfigs.get(jobName).getWorkflow() != null) {\n-        workflowsUpdated.add(newJobConfigs.get(jobName).getWorkflow());\n-      }\n-\n-      // Only for JobQueues when a new job is enqueued, there exists a race condition where only\n-      // JobConfig is updated and the RuntimeJobDag does not get updated because when the client\n-      // (TaskDriver) submits, it creates JobConfig ZNode first and modifies its parent JobDag next.\n-      // To ensure that they are both properly updated, check that workflow's DAG and existing\n-      // JobConfigs are consistent for JobQueues\n-      JobConfig jobConfig = newJobConfigs.get(jobName);\n-      if (_workflowConfigMap.containsKey(jobConfig.getWorkflow())) {\n-        WorkflowConfig workflowConfig = _workflowConfigMap.get(jobConfig.getWorkflow());\n-        // Check that the job's parent workflow's DAG contains this job\n-        if ((workflowConfig.isJobQueue() || !workflowConfig.isTerminable()) && !_runtimeJobDagMap\n-            .get(workflowConfig.getWorkflowId()).getAllNodes().contains(jobName)) {\n-          // Inconsistency between JobConfigs and DAGs found. Add the workflow to workflowsUpdated\n-          // to rebuild the RuntimeJobDag\n-          workflowsUpdated.add(jobConfig.getWorkflow());\n-        }\n-      }\n-    }\n-\n-    // Removed jobs\n     // This block makes sure that the workflow config has been changed.\n     // This avoid the race condition where job config has been purged but job has not been deleted", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ccbea19fd38c9e5abe9333ad2ffc81502404444"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "278afc6f4570fd86aab8f5727f3b82204dd72996", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/278afc6f4570fd86aab8f5727f3b82204dd72996", "committedDate": "2020-11-03T19:59:16Z", "message": "Add test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyOTIzOTk4", "url": "https://github.com/apache/helix/pull/1508#pullrequestreview-522923998", "createdAt": "2020-11-03T22:35:30Z", "commit": {"oid": "278afc6f4570fd86aab8f5727f3b82204dd72996"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e14f0106b3fd2ca7453af177a1b7af093ed5482", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/8e14f0106b3fd2ca7453af177a1b7af093ed5482", "committedDate": "2020-11-03T23:55:24Z", "message": "Comment change"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4092, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}