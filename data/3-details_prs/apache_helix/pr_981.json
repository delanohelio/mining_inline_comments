{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwODg3NjU5", "number": 981, "title": "Stabilizing 4 flaky tests", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR title:\nFixes #977\nFixes #978\nFixes #979\nFixes #980\n\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nTestJobFailure was unstable because we get ExternalView of a resources and if the ExternalView is not populated yet by the controller, we hit NullPointerException.\nTestRebalanceRunningTask was unstable. In this PR, we make sure that the master is existed in two different nodes (master is switched to new instance) and then we check the assigned participants.\nTestRebalanceStopAndResume was unstable because of Thread.Sleep usage. Instead of stopping the workflow after some time, we first make sure that workflow and job is IN_PROGRESS and then stop the workflow.\nTestTaskSchedulingTwoCurrent has been stabilized by making sure that master has been switched to new instance after modifying IS. After that we make sure that task is assigned to the correct instance and make sure it does not switched to new instance and cancel is not being called incorrectly.\nTests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\nTest Result:\n[INFO] Results:\n[INFO]\n[ERROR] Failures:\n[ERROR]   TestTaskRebalancer.timeouts:200 expected: but was:\n[ERROR]   TestWorkflowTermination.testWorkflowRunningTimeout:131->verifyWorkflowCleanup:257 expected: but was:\n[ERROR]   TestClusterVerifier.testResourceSubset:225 expected: but was:\n[INFO]\n[ERROR] Tests run: 1144, Failures: 3, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:18 h\n[INFO] Finished at: 2020-04-29T11:25:52-07:00\n[INFO] ------------------------------------------------------------------------\n\nThe failed tests has passed when I ran it individually. The failed tests also need to be stabilized later\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines, and I have squashed multiple commits if they address the same issue. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml", "createdAt": "2020-04-29T18:47:11Z", "url": "https://github.com/apache/helix/pull/981", "merged": true, "mergeCommit": {"oid": "5a10292197b7233e6d37d0c669704e8d40bd7d6d"}, "closed": true, "closedAt": "2020-05-01T00:48:21Z", "author": {"login": "alirezazamani"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccbeyzAH2gAyNDEwODg3NjU5OjEwODI2YzUxZTdlMDVkMzc3YzExODUzNmVkZDRmZTFjMDVlNTg4ZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcc0EEQAFqTQwMzg5NDUwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "10826c51e7e05d377c118536edd4fe1c05e588e1", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/10826c51e7e05d377c118536edd4fe1c05e588e1", "committedDate": "2020-04-29T16:57:02Z", "message": "Stabilizing 4 flaky tests\n\nFour tests has been stabilized in this commit.\nThese tests are:\n1-TestJobFailure\n2-TestRebalanceRunningTask\n3-TestTaskRebalancerStopResume\n4-TestTaskSchedulingTwoCurrentStates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTcxODcw", "url": "https://github.com/apache/helix/pull/981#pullrequestreview-402971870", "createdAt": "2020-04-29T19:27:38Z", "commit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyNzozOFrOGONtHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyNzozOFrOGONtHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1Nzc5MA==", "bodyText": "Make sure external view has been created for the resource...", "url": "https://github.com/apache/helix/pull/981#discussion_r417557790", "createdAt": "2020-04-29T19:27:38Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view is has been created to the resource", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTc3NjYx", "url": "https://github.com/apache/helix/pull/981#pullrequestreview-402977661", "createdAt": "2020-04-29T19:36:28Z", "commit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozNjoyOFrOGON_zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozNjoyOFrOGON_zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjU3NA==", "bodyText": "If you're expecting null, there's really no reason to use getOrDefault?", "url": "https://github.com/apache/helix/pull/981#discussion_r417562574", "createdAt": "2020-04-29T19:36:28Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n+      if (state == null) {\n+        return false;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTc3Nzc0", "url": "https://github.com/apache/helix/pull/981#pullrequestreview-402977774", "createdAt": "2020-04-29T19:36:39Z", "commit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozNjozOVrOGOOAOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozNjozOVrOGOOAOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjY4Mw==", "bodyText": "redundant parentheses", "url": "https://github.com/apache/helix/pull/981#discussion_r417562683", "createdAt": "2020-04-29T19:36:39Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n+      if (state == null) {\n+        return false;\n+      }\n+      return (state.equals(\"MASTER\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "committedDate": "2020-04-29T19:55:18Z", "message": "Address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/5a1c6611f2a31ef262bf6f929ff9e30bc319f77e", "committedDate": "2020-04-29T17:04:10Z", "message": "Stabilizing 4 flaky tests\n\nFour tests has been stabilized in this commit.\nThese tests are:\n1-TestJobFailure\n2-TestRebalanceRunningTask\n3-TestTaskRebalancerStopResume\n4-TestTaskSchedulingTwoCurrentStates"}, "afterCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "committedDate": "2020-04-29T19:55:18Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTAzOTA2", "url": "https://github.com/apache/helix/pull/981#pullrequestreview-403103906", "createdAt": "2020-04-29T23:15:05Z", "commit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMzoxNTowNVrOGOUVGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMzoyMjo1MlrOGOUenw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NjMzMA==", "bodyText": "A counter is enough, no need to create a HashSet, right?", "url": "https://github.com/apache/helix/pull/981#discussion_r417666330", "createdAt": "2020-04-29T23:15:05Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,28 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n+      Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      for (Map.Entry<String, String> entry : stateMap1.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      return (masterInstances.size() == 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NzQ1Mw==", "bodyText": "Nit, I would just do assertTrue(TestHelper.verify()); to get rid of the temp boolean isExternalViewCreated var to minimize variable scope. Same for following usages.", "url": "https://github.com/apache/helix/pull/981#discussion_r417667453", "createdAt": "2020-04-29T23:18:42Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view is has been created for the resource\n+    boolean isExternalViewCreated = TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n+      return (externalView != null);\n+    }, TestHelper.WAIT_DURATION);\n+    Assert.assertTrue(isExternalViewCreated);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2ODQ2Mw==", "bodyText": "Is externalView possible to be null?", "url": "https://github.com/apache/helix/pull/981#discussion_r417668463", "createdAt": "2020-04-29T23:21:53Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,17 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2ODc2Nw==", "bodyText": "These checks could be simplified to \"MASTER\".equals(stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)));", "url": "https://github.com/apache/helix/pull/981#discussion_r417668767", "createdAt": "2020-04-29T23:22:52Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,17 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      if (!stateMap.containsKey(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1))) {\n+        return false;\n+      }\n+      return stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)).equals(\"MASTER\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f44801cbf9dbe8589155b418c411642dbcf9a23", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/5f44801cbf9dbe8589155b418c411642dbcf9a23", "committedDate": "2020-04-30T00:55:34Z", "message": "Fix comments 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4348d7b79a8d538aa3f776a4848d1435140e520", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/d4348d7b79a8d538aa3f776a4848d1435140e520", "committedDate": "2020-04-30T01:31:23Z", "message": "Added further checks in verify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/ffed6ca68399fb9c499807e866834ec2e63be9ae", "committedDate": "2020-04-30T02:46:17Z", "message": "final modifications"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd2749f85f65da5ebfb410878c2281b3d639c1e9", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/fd2749f85f65da5ebfb410878c2281b3d639c1e9", "committedDate": "2020-04-30T02:29:25Z", "message": "final modifications"}, "afterCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/ffed6ca68399fb9c499807e866834ec2e63be9ae", "committedDate": "2020-04-30T02:46:17Z", "message": "final modifications"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODI5OTc3", "url": "https://github.com/apache/helix/pull/981#pullrequestreview-403829977", "createdAt": "2020-04-30T19:51:47Z", "commit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1MTo0N1rOGO4BrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1NjoyMVrOGO4KYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTE4MQ==", "bodyText": "Parentheses aren't needed here.", "url": "https://github.com/apache/helix/pull/981#discussion_r418251181", "createdAt": "2020-04-30T19:51:47Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view has been created for the resource\n+    Assert.assertTrue(TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n+      return (externalView != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTYxNw==", "bodyText": "Could we declare it as Set instead of HashSet here?", "url": "https://github.com/apache/helix/pull/981#discussion_r418251617", "createdAt": "2020-04-30T19:52:43Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTg2MA==", "bodyText": "Nit: \"two masters exist on two different instances\"", "url": "https://github.com/apache/helix/pull/981#discussion_r418251860", "createdAt": "2020-04-30T19:53:15Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MjUwNw==", "bodyText": "Parentheses not needed?", "url": "https://github.com/apache/helix/pull/981#discussion_r418252507", "createdAt": "2020-04-30T19:54:30Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n+      Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n+      Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      for (Map.Entry<String, String> entry : stateMap1.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      return (masterInstances.size() == 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MzQxMA==", "bodyText": "Do we need to do a null check on stateMap here?", "url": "https://github.com/apache/helix/pull/981#discussion_r418253410", "createdAt": "2020-04-30T19:56:21Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n+      Map<String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      return \"MASTER\".equals(stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0437c03dcf8147bd70f8bfdddcf24a86c9746de", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/c0437c03dcf8147bd70f8bfdddcf24a86c9746de", "committedDate": "2020-04-30T20:19:26Z", "message": "address new comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODk0NTAz", "url": "https://github.com/apache/helix/pull/981#pullrequestreview-403894503", "createdAt": "2020-04-30T21:35:28Z", "commit": {"oid": "c0437c03dcf8147bd70f8bfdddcf24a86c9746de"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4797, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}