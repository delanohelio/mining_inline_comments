{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MzM2MzA2", "number": 1140, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMTo0MToyMFrOELf2WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMTo0MToyMFrOELf2WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDkxNjA5OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/task/TaskSynchronizedTestBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMTo0MToyMFrOGtFClg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo0Njo1M1rOGuJOug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkyMTY4Ng==", "bodyText": "Nit: use the constant in TaskConstants instead of hard-coded string", "url": "https://github.com/apache/helix/pull/1140#discussion_r449921686", "createdAt": "2020-07-05T21:41:20Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/task/TaskSynchronizedTestBase.java", "diffHunk": "@@ -181,12 +186,22 @@ protected void stopParticipants() {\n \n   protected void stopParticipant(int i) {\n     if (_participants.length <= i) {\n-      throw new HelixException(\n-          String.format(\"Can't stop participant %s, only %s participants\" + \"were set up.\", i,\n+      throw new HelixException(String\n+          .format(\"Can't stop participant %s, only %s participants\" + \"were set up.\", i,\n               _participants.length));\n     }\n-    if (_participants[i] != null && _participants[i].isConnected()) {\n-      _participants[i].syncStop();\n+    if (_participants[i] != null) {\n+      if (_participants[i].isConnected()) {\n+        _participants[i].syncStop();\n+      }\n+      // Shutdown the state model factories to close all threads.\n+      StateMachineEngine stateMachine = _participants[i].getStateMachineEngine();\n+      if (stateMachine != null) {\n+        StateModelFactory stateModelFactory = stateMachine.getStateModelFactory(\"Task\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdcbc50776aed38c50af049f0b5fd9b01f947cdf"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzODkwNg==", "bodyText": "good point. Fixed", "url": "https://github.com/apache/helix/pull/1140#discussion_r451038906", "createdAt": "2020-07-07T17:46:53Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/task/TaskSynchronizedTestBase.java", "diffHunk": "@@ -181,12 +186,22 @@ protected void stopParticipants() {\n \n   protected void stopParticipant(int i) {\n     if (_participants.length <= i) {\n-      throw new HelixException(\n-          String.format(\"Can't stop participant %s, only %s participants\" + \"were set up.\", i,\n+      throw new HelixException(String\n+          .format(\"Can't stop participant %s, only %s participants\" + \"were set up.\", i,\n               _participants.length));\n     }\n-    if (_participants[i] != null && _participants[i].isConnected()) {\n-      _participants[i].syncStop();\n+    if (_participants[i] != null) {\n+      if (_participants[i].isConnected()) {\n+        _participants[i].syncStop();\n+      }\n+      // Shutdown the state model factories to close all threads.\n+      StateMachineEngine stateMachine = _participants[i].getStateMachineEngine();\n+      if (stateMachine != null) {\n+        StateModelFactory stateModelFactory = stateMachine.getStateModelFactory(\"Task\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkyMTY4Ng=="}, "originalCommit": {"oid": "cdcbc50776aed38c50af049f0b5fd9b01f947cdf"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1224, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}