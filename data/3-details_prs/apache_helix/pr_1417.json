{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNDU1MjM4", "number": 1417, "title": "Add host name to the Participant History znode.", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nResolves #1396\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nAdd hostname to the Participant History znode.\nThis is to ensure that we can track the participant instance allocation even the live instance node has been removed.\nTests\n\n The following tests are written for this issue:\n\nTestInstanceHistory\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[ERROR] Failures:\n[ERROR]   TestP2PNoDuplicatedMessage.testP2PStateTransitionEnabled:174 expected:<2200> but was:<2174>\n[ERROR]   TestDeleteJobFromJobQueue.testForceDeleteJobFromJobQueue:73 \u00bb Helix Failed to ...\n[INFO]\n[ERROR] Tests run: 1210, Failures: 2, Errors: 0, Skipped: 0\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 01:02 min\n[INFO] Finished at: 2020-09-25T22:09:08-07:00\n[INFO] ------------------------------------------------------------------------\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-09-26T00:59:11Z", "url": "https://github.com/apache/helix/pull/1417", "merged": true, "mergeCommit": {"oid": "304a4e23e2afd085099757f182e7d5050ac96a45"}, "closed": true, "closedAt": "2020-09-29T17:39:18Z", "author": {"login": "jiajunwang"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMflpLAH2gAyNDkzNDU1MjM4OjQ3MjEzMDM3ZGZiMGZhMDliZThkODBmMjI4NjJlOTliMDc2NmJlNDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNhKLTAH2gAyNDkzNDU1MjM4OjYxMmM2OGFlYmYxMzFiYmU4NDEyZGUxODRjNWZmYTdjM2Q3NDA0MzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "47213037dfb0fa09be8d80f22862e99b0766be43", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/47213037dfb0fa09be8d80f22862e99b0766be43", "committedDate": "2020-09-26T00:52:30Z", "message": "Add host name to the Participant History znode.\n\nThis is to ensure that we can track the participant instance allocation even the live instance node has been removed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2OTQ3NTMw", "url": "https://github.com/apache/helix/pull/1417#pullrequestreview-496947530", "createdAt": "2020-09-26T06:49:47Z", "commit": {"oid": "47213037dfb0fa09be8d80f22862e99b0766be43"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjo0OTo0N1rOHYeSTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNzowMDozMlrOHYeWHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyNDA3Nw==", "bodyText": "How about a WARN level, since this doesn't break the service? Maybe an error is a bit too much to cause customers to worry about it. I've seen that helix kind of over uses error logging that could distract users' attention.", "url": "https://github.com/apache/helix/pull/1417#discussion_r495424077", "createdAt": "2020-09-26T06:49:47Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/model/ParticipantHistory.java", "diffHunk": "@@ -76,7 +80,15 @@ public void reportOffline() {\n    * @return\n    */\n   public void reportOnline(String sessionId, String version) {\n-    updateSessionHistory(sessionId, version);\n+    String hostname;\n+    try {\n+      hostname = InetAddress.getLocalHost().getHostName();\n+    } catch (UnknownHostException e) {\n+      LOG.error(\"Failed to get host name. Use {} for the participant history recording.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47213037dfb0fa09be8d80f22862e99b0766be43"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyNDI4MQ==", "bodyText": "Nit, HOST is good enough? As we are writing to zk, I think shorter string could reduce the znode size, since we keep adding the host history to the znode. And I think HOST is clear enough.", "url": "https://github.com/apache/helix/pull/1417#discussion_r495424281", "createdAt": "2020-09-26T06:52:49Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/model/ParticipantHistory.java", "diffHunk": "@@ -47,7 +50,8 @@\n     HISTORY,\n     OFFLINE,\n     VERSION,\n-    LAST_OFFLINE_TIME\n+    LAST_OFFLINE_TIME,\n+    HOST_NAME", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47213037dfb0fa09be8d80f22862e99b0766be43"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyNTA1NA==", "bodyText": "Nit, this InetAddress.getLocalHost().getHostName() doesn't seem to converge to the code. If there is a case this line throws UnknownHostException, it makes the test flaky. Do you think we should also this the test converge to the main code?", "url": "https://github.com/apache/helix/pull/1417#discussion_r495425054", "createdAt": "2020-09-26T07:00:32Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/paticipant/TestInstanceHistory.java", "diffHunk": "@@ -44,6 +46,13 @@\n     List<String> list = history.getRecord().getListField(\"HISTORY\");\n     Assert.assertEquals(list.size(), 1);\n \n+    Assert.assertTrue(list.get(0).contains(\"SESSION=\" + _participants[0].getSessionId()));\n+    Assert.assertTrue(list.get(0).contains(\"VERSION=\" + _participants[0].getVersion()));\n+    Assert\n+        .assertTrue(list.get(0).contains(\"HOST_NAME=\" + InetAddress.getLocalHost().getHostName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47213037dfb0fa09be8d80f22862e99b0766be43"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDk5NzMx", "url": "https://github.com/apache/helix/pull/1417#pullrequestreview-498099731", "createdAt": "2020-09-29T05:10:43Z", "commit": {"oid": "47213037dfb0fa09be8d80f22862e99b0766be43"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "612c68aebf131bbe8412de184c5ffa7c3d740430", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/612c68aebf131bbe8412de184c5ffa7c3d740430", "committedDate": "2020-09-29T05:16:14Z", "message": "Address comments."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4305, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}