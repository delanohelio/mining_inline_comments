{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MzYzMjU2", "number": 1049, "title": "Add PropertyStore write endpoint to Helix REST", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1048\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nHelix REST now supports a write endpoint that allows you to either write byte array or a ZNRecord to any path under PropertyStore, which is a directory in cluster metadata in ZK where applications can write custom data.\nTests\n\n The following tests are written for this issue:\n\ntestPutPropertyStore\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nHelix REST module:\n[INFO] Tests run: 161, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 37.495 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 161, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  43.454 s\n[INFO] Finished at: 2020-06-01T21:44:18-07:00\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-06-02T05:43:02Z", "url": "https://github.com/apache/helix/pull/1049", "merged": true, "mergeCommit": {"oid": "dbe283129c55429410b88d8ae37ab9e98322ee70"}, "closed": true, "closedAt": "2020-06-03T00:13:56Z", "author": {"login": "narendly"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnOKDlgH2gAyNDI2MzYzMjU2OmE3MWY3ZGU4YWYzOGRiYmY5MTM3ZWY2YzYyNjZjNmY0Y2QxNTMxNTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcndy_KAFqTQyMzEzMTI0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a71f7de8af38dbbf9137ef6c6266c6f4cd153151", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/a71f7de8af38dbbf9137ef6c6266c6f4cd153151", "committedDate": "2020-06-02T05:38:47Z", "message": "Add PropertyStore write endpoint to Helix REST\n\nHelix REST now supports a write endpoint that allows you to either write byte array or a ZNRecord to any path under PropertyStore, which is a directory in cluster metadata in ZK where applications can write custom data."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70a34cfa7259c17c1ddc190ed0337e56dd01f26c", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/70a34cfa7259c17c1ddc190ed0337e56dd01f26c", "committedDate": "2020-06-02T05:45:32Z", "message": "asdf"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDQ5NzM3", "url": "https://github.com/apache/helix/pull/1049#pullrequestreview-423049737", "createdAt": "2020-06-02T20:54:06Z", "commit": {"oid": "70a34cfa7259c17c1ddc190ed0337e56dd01f26c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDo1NDowNlrOGeDmOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDo1NDowNlrOGeDmOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2OTQwMg==", "bodyText": "Let's put it this way Response.serverError().entity(errorMsgToJson(errorMsg)).build() to be consistent with the others serverError methods.", "url": "https://github.com/apache/helix/pull/1049#discussion_r434169402", "createdAt": "2020-06-02T20:54:06Z", "author": {"login": "mgao0"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/server/resources/AbstractResource.java", "diffHunk": "@@ -98,6 +98,11 @@ protected Response serverError() {\n     return Response.serverError().build();\n   }\n \n+  protected Response serverError(String errorMsg) {\n+    return Response.status(Response.Status.INTERNAL_SERVER_ERROR).entity(errorMsgToJson(errorMsg))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70a34cfa7259c17c1ddc190ed0337e56dd01f26c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTMxMjQx", "url": "https://github.com/apache/helix/pull/1049#pullrequestreview-423131241", "createdAt": "2020-06-02T23:52:05Z", "commit": {"oid": "70a34cfa7259c17c1ddc190ed0337e56dd01f26c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4429, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}