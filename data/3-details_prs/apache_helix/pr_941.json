{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNTUyNTM0", "number": 941, "title": "Fix unexpceted partition movements in the CrushEd strategy.", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\n#940\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nThis is a workaround fix to ensure backward compatibility. An additional cache map is used to keep the stable partition list so as to remove the randomness in the algorithm input.\nNote that the right fix would be cleaner that we sort the list inside the strategy class. However, that will also change all existing cluster assignments in production.\nTests\n\n The following tests are written for this issue:\n\nTestResourceControllerDataProvider.testStablePartitionListCache\n\nNote that integration test is not quite doable unless we have a way to let JDK keySet() method return the same set with different iteration orders. Please comment if any good idea.\n\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[ERROR] Failures:\n[ERROR]   TestRebalancePipeline.testMsgTriggeredRebalance:208 expected: but was:\n[ERROR] org.apache.helix.integration.rebalancer.CrushRebalancers.TestCrushAutoRebalanceTopoplogyAwareDisabled.testLackEnoughLiveInstances(org.apache.helix.integration.rebalancer.CrushRebalancers.TestCrushAutoRebalanceTopoplogyAwareDisabled)\n[ERROR]   Run 1: TestCrushAutoRebalanceTopoplogyAwareDisabled.testLackEnoughLiveInstances:79->TestCrushAutoRebalanceNonRack.testLackEnoughLiveInstances:228->TestCrushAutoRebalanceNonRack.validateIsolation:301 expected:<2> but was:<1>\n[INFO]   Run 2: PASS\n[INFO]\n[INFO]\n[ERROR] Tests run: 1119, Failures: 2, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 01:14 h\n[INFO] Finished at: 2020-04-10T16:17:10-07:00\n[INFO] ------------------------------------------------------------------------\nRerun failed test\n[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 37.316 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 43.478 s\n[INFO] Finished at: 2020-04-10T16:32:30-07:00\n[INFO] ------------------------------------------------------------------------\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation (Optional)\n\n In case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-04-09T17:28:54Z", "url": "https://github.com/apache/helix/pull/941", "merged": true, "mergeCommit": {"oid": "8d6586bc4ec8e74d6e4db65d60c9f75ba012588b"}, "closed": true, "closedAt": "2020-04-14T23:27:37Z", "author": {"login": "jiajunwang"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV2SsXgH2gAyNDAxNTUyNTM0OjkwMTgyODljYTUxMDA1MjgyNjIyNjc4NzY4ZGZkZGJkZGJlMTA0M2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXsDRMAFqTM5MzM2MTMyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9018289ca51005282622678768dfddbddbe1043e", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/9018289ca51005282622678768dfddbddbe1043e", "committedDate": "2020-04-09T06:13:47Z", "message": "Fix unexpceted partition movements in the CrushEd strategy.\n\nThis is a workaround fix to ensure backward compatibility. An additonal cache map is used to keep the stable partition list so as to remove the randomness in the agorithm input.\nNote that the right fix would be cleaner that we sort the list inside the strategy class. However, that will also change all existing cluster assignments in production."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTU3NjAw", "url": "https://github.com/apache/helix/pull/941#pullrequestreview-391557600", "createdAt": "2020-04-10T17:16:43Z", "commit": {"oid": "9018289ca51005282622678768dfddbddbe1043e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzoxNjo0NFrOGEAc5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzoxNjo0NFrOGEAc5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg1NDg4Ng==", "bodyText": "When do you think we can fix it permanently?", "url": "https://github.com/apache/helix/pull/941#discussion_r406854886", "createdAt": "2020-04-10T17:16:44Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/AutoRebalancer.java", "diffHunk": "@@ -64,7 +64,12 @@ public IdealState computeNewIdealState(String resourceName,\n \n     LOG.info(\"Computing IdealState for \" + resourceName);\n \n-    List<String> partitions = new ArrayList<>(currentIdealState.getPartitionSet());\n+    // This is part of the backward compatible workaround to fix\n+    // https://github.com/apache/helix/issues/940.\n+    // TODO: remove the workaround once we are able to apply the simple fix without majorly", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9018289ca51005282622678768dfddbddbe1043e"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTYwMDk3", "url": "https://github.com/apache/helix/pull/941#pullrequestreview-391560097", "createdAt": "2020-04-10T17:21:55Z", "commit": {"oid": "9018289ca51005282622678768dfddbddbe1043e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzoyMTo1NVrOGEAlMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzoyMTo1NVrOGEAlMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg1NzAxMQ==", "bodyText": "This method is confusing. Another option is to call this method when the cluster data cache refresh IdealStates, this can keep all logic within data cache.\ni.e,\nsplit to two methods: 1) refreshPartitionList(), this is private.  and 2) getPartitionList(), this is public and used by the rebalancer (and probably in other stages too where a partition list is needed, so there will be consistent over all stages).", "url": "https://github.com/apache/helix/pull/941#discussion_r406857011", "createdAt": "2020-04-10T17:21:55Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/ResourceControllerDataProvider.java", "diffHunk": "@@ -294,4 +304,32 @@ public void clearMonitoringRecords() {\n     _missingTopStateMap.clear();\n     _lastTopStateLocationMap.clear();\n   }\n+\n+  /**\n+   * If the list items are the same, return the stable partition list cache. Otherwise, refresh\n+   * the cache with new list and return the new list.\n+   * This is for a backward compatible workaround to fix https://github.com/apache/helix/issues/940.\n+   *\n+   * @param resourceName\n+   * @param newPartitionSet\n+   */\n+  public List<String> getOrSetStablePartitionList(String resourceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9018289ca51005282622678768dfddbddbe1043e"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbea75cb2e398c6ecd40689b4e8cc60b99b901e4", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/bbea75cb2e398c6ecd40689b4e8cc60b99b901e4", "committedDate": "2020-04-10T21:51:13Z", "message": "Address comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMzI0NTUw", "url": "https://github.com/apache/helix/pull/941#pullrequestreview-392324550", "createdAt": "2020-04-13T18:07:49Z", "commit": {"oid": "bbea75cb2e398c6ecd40689b4e8cc60b99b901e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODowNzo0OVrOGEvg_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODowNzo0OVrOGEvg_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyNTk4Mw==", "bodyText": "Keep in mind \"newPartitionSet.containsAll(cachedPartitionList))\" could cause a performance (delay) issue, the operation is O(N^2), given if we have large number of partitions.", "url": "https://github.com/apache/helix/pull/941#discussion_r407625983", "createdAt": "2020-04-13T18:07:49Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/ResourceControllerDataProvider.java", "diffHunk": "@@ -294,4 +312,33 @@ public void clearMonitoringRecords() {\n     _missingTopStateMap.clear();\n     _lastTopStateLocationMap.clear();\n   }\n+\n+  /**\n+   * Return the cached stable partition list of the specified resource. If no such cached item,\n+   * return empty list.\n+   * This is for a backward compatible workaround to fix https://github.com/apache/helix/issues/940.\n+   *\n+   * @param resourceName\n+   */\n+  public List<String> getStablePartitionList(String resourceName) {\n+    return _stablePartitionListCache.getOrDefault(resourceName, Collections.EMPTY_LIST);\n+  }\n+\n+  /**\n+   * Refresh the stable partition list cache items and remove the non-exist resources' cache.\n+   * This is for a backward compatible workaround to fix https://github.com/apache/helix/issues/940.\n+   *\n+   * @param idealStateMap\n+   */\n+  final void refreshStablePartitionList(Map<String, IdealState> idealStateMap) {\n+    _stablePartitionListCache.keySet().retainAll(idealStateMap.keySet());\n+    for (String resourceName : idealStateMap.keySet()) {\n+      Set<String> newPartitionSet = idealStateMap.get(resourceName).getPartitionSet();\n+      List<String> cachedPartitionList = getStablePartitionList(resourceName);\n+      if (cachedPartitionList.size() != newPartitionSet.size() || !newPartitionSet\n+          .containsAll(cachedPartitionList)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbea75cb2e398c6ecd40689b4e8cc60b99b901e4"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMzI3Mjgy", "url": "https://github.com/apache/helix/pull/941#pullrequestreview-392327282", "createdAt": "2020-04-13T18:12:06Z", "commit": {"oid": "bbea75cb2e398c6ecd40689b4e8cc60b99b901e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODoxMjowNlrOGEvqHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODoxMjowNlrOGEvqHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyODMxNw==", "bodyText": "Let us think about if we  have any other way to do this.  We actually found containsAll() has been a big performance issue before, specially if you compare a set with a list (which take O(N) to iterator).", "url": "https://github.com/apache/helix/pull/941#discussion_r407628317", "createdAt": "2020-04-13T18:12:06Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/AbstractRebalancer.java", "diffHunk": "@@ -417,4 +417,25 @@ public int compare(String ins1, String ins2) {\n       return p1.compareTo(p2);\n     }\n   }\n+\n+  // This is for a backward compatible workaround to fix\n+  // https://github.com/apache/helix/issues/940.\n+  // TODO: remove the workaround once we are able to apply the simple fix without majorly\n+  // TODO: impacting user's clusters.\n+  protected List<String> getStablePartitionList(ResourceControllerDataProvider clusterData,\n+      IdealState currentIdealState) {\n+    List<String> partitions =\n+        clusterData.getStablePartitionList(currentIdealState.getResourceName());\n+    Set<String> currentPartitionSet = currentIdealState.getPartitionSet();\n+    if (partitions.size() != currentPartitionSet.size() || !currentPartitionSet\n+        .containsAll(partitions)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbea75cb2e398c6ecd40689b4e8cc60b99b901e4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMzI4MDQ3", "url": "https://github.com/apache/helix/pull/941#pullrequestreview-392328047", "createdAt": "2020-04-13T18:13:18Z", "commit": {"oid": "bbea75cb2e398c6ecd40689b4e8cc60b99b901e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODoxMzoxOFrOGEvsqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODoxMzoxOFrOGEvsqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyODk2OA==", "bodyText": "Why do  we compare here again? You are saying the IdealState used here could be different from  cluster data cache?", "url": "https://github.com/apache/helix/pull/941#discussion_r407628968", "createdAt": "2020-04-13T18:13:18Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/AbstractRebalancer.java", "diffHunk": "@@ -417,4 +417,25 @@ public int compare(String ins1, String ins2) {\n       return p1.compareTo(p2);\n     }\n   }\n+\n+  // This is for a backward compatible workaround to fix\n+  // https://github.com/apache/helix/issues/940.\n+  // TODO: remove the workaround once we are able to apply the simple fix without majorly\n+  // TODO: impacting user's clusters.\n+  protected List<String> getStablePartitionList(ResourceControllerDataProvider clusterData,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbea75cb2e398c6ecd40689b4e8cc60b99b901e4"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47c85a08cec56c6a0524d92f02ad53314872b348", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/47c85a08cec56c6a0524d92f02ad53314872b348", "committedDate": "2020-04-13T19:39:44Z", "message": "Address comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzYxMzI0", "url": "https://github.com/apache/helix/pull/941#pullrequestreview-393361324", "createdAt": "2020-04-14T23:25:44Z", "commit": {"oid": "47c85a08cec56c6a0524d92f02ad53314872b348"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4757, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}