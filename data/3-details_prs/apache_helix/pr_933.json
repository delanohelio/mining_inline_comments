{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMzc1Njgy", "number": 933, "title": "Fix MetadataStoreDirectory routing data cache refresh bug", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #927\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nThis PR fixes the MetadataStoreDirectory routing data cache refresh bug. In ZkMetadataStoreDirectory, it is now ensured that routing data cache is cleared before updating; when an exception is raised, the old data is still erased correctly.\nAlso, this PR fixes an edge case during TrieRoutingData creation. When there are zkRealms defined without a single sharding key, TrieRoutingData now correctly identifies the raw routing data as invalid and raise an exception.\nTests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[ERROR] Tests run: 145, Failures: 1, Errors: 0, Skipped: 7, Time elapsed: 28.895 s <<< FAILURE! - in TestSuite\n[ERROR] testResourceHealth(org.apache.helix.rest.server.TestResourceAccessor)  Time elapsed: 0.295 s  <<< FAILURE!\njava.lang.AssertionError: expected:<HEALTHY> but was:<UNHEALTHY>\n\tat org.apache.helix.rest.server.TestResourceAccessor.testResourceHealth(TestResourceAccessor.java:289)\n\n[INFO] \n[INFO] Results:\n[INFO] \n[ERROR] Failures: \n[ERROR]   TestResourceAccessor.testResourceHealth:289 expected:<HEALTHY> but was:<UNHEALTHY>\n[INFO] \n[ERROR] Tests run: 145, Failures: 1, Errors: 0, Skipped: 7\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  33.443 s\n[INFO] Finished at: 2020-04-03T13:47:22-07:00\n[INFO] ------------------------------------------------------------------------\n\nThe failed test is known flaky and is tracked by #932.\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-04-07T16:29:22Z", "url": "https://github.com/apache/helix/pull/933", "merged": true, "mergeCommit": {"oid": "645ec57461ae6ecd7d6e21bbc90fa998229969ea"}, "closed": true, "closedAt": "2020-04-08T01:03:51Z", "author": {"login": "NealSun96"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUHKAdAH2gAyNDAwMzc1NjgyOjBjYTI1MzgzOGJmODZmMjdmYTNjZmE2MDhkYjU2ZGFlZGZiYjI3MjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVa51wAFqTM4OTUzMDMxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0ca253838bf86f27fa3cfa608db56daedfbb2726", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/0ca253838bf86f27fa3cfa608db56daedfbb2726", "committedDate": "2020-04-03T20:44:50Z", "message": "Fix routing data cache refresh in MSD; fix TrieRoutingData creation edge case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mjk0MTc4", "url": "https://github.com/apache/helix/pull/933#pullrequestreview-389294178", "createdAt": "2020-04-07T16:35:24Z", "commit": {"oid": "0ca253838bf86f27fa3cfa608db56daedfbb2726"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjozNToyNFrOGCMP9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjozNToyNFrOGCMP9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1MTAyOA==", "bodyText": "NOTE: This check is added for the case when \"METADATA_STORE_ROUTING_DATA\" is deleted.\nThere is one edge case that's not handled: when \"METADATA_STORE_ROUTING_DATA\" contains no node, and then \"METADATA_STORE_ROUTING_DATA\" gets deleted.\nIn that case, before deletion, the routing data should be empty; after deletion, the routing data should return 404 due to missing namespace. However, since there is no listener on \"METADATA_STORE_ROUTING_DATA\" itself, its deletion event cannot be handled. Please share you thoughts on whether this edge case should be handled, or if you think this falls into misuse.", "url": "https://github.com/apache/helix/pull/933#discussion_r404951028", "createdAt": "2020-04-07T16:35:24Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -322,14 +322,19 @@ public void refreshRoutingData(String namespace) {\n     }\n \n     Map<String, List<String>> rawRoutingData;\n+    // Remove the raw data first in case of failure on creation\n+    _realmToShardingKeysMap.remove(namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ca253838bf86f27fa3cfa608db56daedfbb2726"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzA2Njc0", "url": "https://github.com/apache/helix/pull/933#pullrequestreview-389306674", "createdAt": "2020-04-07T16:50:27Z", "commit": {"oid": "0ca253838bf86f27fa3cfa608db56daedfbb2726"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1MDoyN1rOGCM3RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1MDoyN1rOGCM3RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2MTA5Mw==", "bodyText": "Why don't you just put _routingDataMap.remove(namespace); up there next to _realmToShardingKeysMap.remove(namespace);?\nWhy is there a need for this duplicate code? routingDataMap entry should be cleared anyway prior to update, right?", "url": "https://github.com/apache/helix/pull/933#discussion_r404961093", "createdAt": "2020-04-07T16:50:27Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -322,14 +322,19 @@ public void refreshRoutingData(String namespace) {\n     }\n \n     Map<String, List<String>> rawRoutingData;\n+    // Remove the raw data first in case of failure on creation\n+    _realmToShardingKeysMap.remove(namespace);\n     try {\n       rawRoutingData = _routingDataReaderMap.get(namespace).getRoutingData();\n       _realmToShardingKeysMap.put(namespace, rawRoutingData);\n     } catch (InvalidRoutingDataException e) {\n+      _routingDataMap.remove(namespace);\n       LOG.error(\"Failed to refresh cached routing data for namespace {}\", namespace, e);\n       return;\n     }\n \n+    // Remove routing data first in case of failure on creation\n+    _routingDataMap.remove(namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ca253838bf86f27fa3cfa608db56daedfbb2726"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzA4ODY1", "url": "https://github.com/apache/helix/pull/933#pullrequestreview-389308865", "createdAt": "2020-04-07T16:53:04Z", "commit": {"oid": "0ca253838bf86f27fa3cfa608db56daedfbb2726"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1MzowNFrOGCM-Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1MzowNFrOGCM-Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2Mjg5NQ==", "bodyText": "Explain why this should be invalid? I thought we agreed that it's acceptable to have a realm without any keys.", "url": "https://github.com/apache/helix/pull/933#discussion_r404962895", "createdAt": "2020-04-07T16:53:04Z", "author": {"login": "narendly"}, "path": "metadata-store-directory-common/src/main/java/org/apache/helix/msdcommon/datamodel/TrieRoutingData.java", "diffHunk": "@@ -48,6 +48,10 @@ public TrieRoutingData(Map<String, List<String>> routingData)\n       throw new InvalidRoutingDataException(\"routingData cannot be null or empty\");\n     }\n \n+    if (!containsShardingKey(routingData)) {\n+      throw new InvalidRoutingDataException(\"routingData needs at least 1 sharding key\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ca253838bf86f27fa3cfa608db56daedfbb2726"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b719c25a8cfe8abdb308ea744a32900464a9acc", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/6b719c25a8cfe8abdb308ea744a32900464a9acc", "committedDate": "2020-04-07T18:53:14Z", "message": "Cut out duplicate line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTMwMzE3", "url": "https://github.com/apache/helix/pull/933#pullrequestreview-389530317", "createdAt": "2020-04-07T22:19:13Z", "commit": {"oid": "6b719c25a8cfe8abdb308ea744a32900464a9acc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4751, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}