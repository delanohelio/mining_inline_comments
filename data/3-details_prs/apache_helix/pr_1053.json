{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTMwMjU1", "number": 1053, "title": "Fix test testDropInstance", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1051\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nTest testDropInstance doesn't assert expected exception and ignores the unexpected behavior. ZkBaseDataAccessor is created using a shared zkclient to create a live instance. The creation fails because shared zkclient doesn't support creating a live instance.\nThis PR addresses this problem by creating a dedicated zkclient in ZkBaseDataAccessor to create a live instance.\nTests\n\n The following tests are written for this issue:\n\nN/A\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nThere is no main code change, so just run this test class including testDropInstance. No more error message.\n[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 41.596 s - in org.apache.helix.tools.TestClusterSetup\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  47.458 s\n[INFO] Finished at: 2020-06-02T19:54:34-07:00\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation (Optional)\n\n In case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-06-03T02:49:54Z", "url": "https://github.com/apache/helix/pull/1053", "merged": true, "mergeCommit": {"oid": "02dfe1a29bc8a8f713575c92b2b522fb851e0f41"}, "closed": true, "closedAt": "2020-06-03T05:37:22Z", "author": {"login": "huizhilu"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcngOZcgH2gAyNDI2OTMwMjU1OmViNjBjYjBmZjgzNmI1YzRlODJhOWRiMWI3YjZkMzk4ZGIxMWY3NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnrWtVgFqTQyMzY4MTk5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eb60cb0ff836b5c4e82a9db1b7b6d398db11f752", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/eb60cb0ff836b5c4e82a9db1b7b6d398db11f752", "committedDate": "2020-06-03T02:41:49Z", "message": "Fix test testDropInstance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTk0MzMy", "url": "https://github.com/apache/helix/pull/1053#pullrequestreview-423194332", "createdAt": "2020-06-03T03:29:37Z", "commit": {"oid": "eb60cb0ff836b5c4e82a9db1b7b6d398db11f752"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzoyOTozN1rOGeK1fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzoyOTozN1rOGeK1fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4Nzk5Ng==", "bodyText": "Nit: usually a good idea to add a TestHelper.verify() to make sure the cluster has been dropped. This is recommended.", "url": "https://github.com/apache/helix/pull/1053#discussion_r434287996", "createdAt": "2020-06-03T03:29:37Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java", "diffHunk": "@@ -356,51 +360,57 @@ public void testDropInstance() throws Exception {\n         \"MasterSlave\", true); // do rebalance\n \n     // add fake liveInstance\n-    ZKHelixDataAccessor accessor =\n-        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(ZK_ADDR));\n-    Builder keyBuilder = new Builder(clusterName);\n-    LiveInstance liveInstance = new LiveInstance(\"localhost_12918\");\n-    liveInstance.setSessionId(\"session_0\");\n-    liveInstance.setHelixVersion(\"version_0\");\n-    accessor.setProperty(keyBuilder.liveInstance(\"localhost_12918\"), liveInstance);\n+    HelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,\n+        new ZkBaseDataAccessor.Builder<ZNRecord>()\n+            .setRealmMode(RealmAwareZkClient.RealmMode.SINGLE_REALM)\n+            .setZkClientType(ZkBaseDataAccessor.ZkClientType.DEDICATED)\n+            .setZkAddress(ZK_ADDR)\n+            .build());\n \n-    // drop without stop the process, should throw exception\n     try {\n-      ClusterSetup.processCommandLineArgs(new String[] {\n-          \"--zkSvr\", ZK_ADDR, \"--dropNode\", clusterName, \"localhost:12918\"\n-      });\n-      Assert.fail(\"Should throw exception since localhost_12918 is still in LIVEINSTANCES/\");\n-    } catch (Exception e) {\n-      // OK\n+      Builder keyBuilder = new Builder(clusterName);\n+      LiveInstance liveInstance = new LiveInstance(instanceName);\n+      liveInstance.setSessionId(\"session_0\");\n+      liveInstance.setHelixVersion(\"version_0\");\n+      accessor.setProperty(keyBuilder.liveInstance(instanceName), liveInstance);\n+\n+      // Drop instance without stopping the live instance, should throw HelixException\n+      try {\n+        ClusterSetup.processCommandLineArgs(\n+            new String[]{\"--zkSvr\", ZK_ADDR, \"--dropNode\", clusterName, instanceAddress});\n+        Assert.fail(\"Should throw exception since localhost_12918 is still in LIVEINSTANCES/\");\n+      } catch (HelixException expected) {\n+        Assert.assertEquals(expected.getMessage(),\n+            \"Cannot drop instance \" + instanceName + \" as it is still live. Please stop it first\");\n+      }\n+      accessor.removeProperty(keyBuilder.liveInstance(instanceName));\n+\n+      // drop without disable, should throw exception\n+      try {\n+        ClusterSetup.processCommandLineArgs(\n+            new String[]{\"--zkSvr\", ZK_ADDR, \"--dropNode\", clusterName, instanceAddress});\n+        Assert.fail(\"Should throw exception since \" + instanceName + \" is enabled\");\n+      } catch (HelixException expected) {\n+        Assert.assertEquals(expected.getMessage(),\n+            \"Node \" + instanceName + \" is enabled, cannot drop\");\n+      }\n+\n+      // Disable the instance\n+      ClusterSetup.processCommandLineArgs(\n+          new String[]{\"--zkSvr\", ZK_ADDR, \"--enableInstance\", clusterName, instanceName, \"false\"});\n+      // Drop the instance\n+      ClusterSetup.processCommandLineArgs(\n+          new String[]{\"--zkSvr\", ZK_ADDR, \"--dropNode\", clusterName, instanceAddress});\n+\n+      Assert.assertNull(accessor.getProperty(keyBuilder.instanceConfig(instanceName)),\n+          \"Instance config should be dropped\");\n+      Assert.assertFalse(_gZkClient.exists(PropertyPathBuilder.instance(clusterName, instanceName)),\n+          \"Instance/host should be dropped\");\n+    } finally {\n+      // Have to close the dedicated zkclient in accessor to avoid zkclient leakage.\n+      accessor.getBaseDataAccessor().close();\n+      TestHelper.dropCluster(clusterName, _gZkClient);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb60cb0ff836b5c4e82a9db1b7b6d398db11f752"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTk0Mzg2", "url": "https://github.com/apache/helix/pull/1053#pullrequestreview-423194386", "createdAt": "2020-06-03T03:29:50Z", "commit": {"oid": "eb60cb0ff836b5c4e82a9db1b7b6d398db11f752"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6feb10e1a662ba050ef04de89f165a52464114aa", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/6feb10e1a662ba050ef04de89f165a52464114aa", "committedDate": "2020-06-03T03:57:37Z", "message": "Verify cluster has been dropped"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06dc161aa23cd5b1c0255256991f5a7febac6b09", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/06dc161aa23cd5b1c0255256991f5a7febac6b09", "committedDate": "2020-06-03T04:29:15Z", "message": "Verify live instance creation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjgxOTkx", "url": "https://github.com/apache/helix/pull/1053#pullrequestreview-423681991", "createdAt": "2020-06-03T15:39:51Z", "commit": {"oid": "06dc161aa23cd5b1c0255256991f5a7febac6b09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNTozOTo1MVrOGehw7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNTozOTo1MVrOGehw7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY2MzY2Mg==", "bodyText": "Does this mean if user constructs a ZKHelixDataAccessor with a ZK-ADDR, they can create an ephemeral node before, but not anymore after they bump to 1.0.0?", "url": "https://github.com/apache/helix/pull/1053#discussion_r434663662", "createdAt": "2020-06-03T15:39:51Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java", "diffHunk": "@@ -356,51 +360,65 @@ public void testDropInstance() throws Exception {\n         \"MasterSlave\", true); // do rebalance\n \n     // add fake liveInstance\n-    ZKHelixDataAccessor accessor =\n-        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(ZK_ADDR));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06dc161aa23cd5b1c0255256991f5a7febac6b09"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4431, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}