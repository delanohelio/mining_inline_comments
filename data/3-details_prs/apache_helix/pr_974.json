{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMzU5MzM2", "number": 974, "title": "Enforce result check for data accessors batch get calls to prevent partial batch read.", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\n#969\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nEnforce result check for data accessors' batch read calls to prevent partial read.\nThis will help to ensure the main Helix logic does not calculate based on incomplete input.\nTests\n\n The following tests are written for this issue:\n\nNo new features or logic introduced. This PR only changes the usage of the accessors in the Helix logic to be more strict.\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nzookeeper-api\n[INFO] Tests run: 20, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.226 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 20, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 6.486 s\n[INFO] Finished at: 2020-04-27T23:06:28-07:00\n[INFO] ------------------------------------------------------------------------\nhelix-core\n[INFO] Tests run: 1144, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4,657.683 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 1144, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 01:17 h\n[INFO] Finished at: 2020-04-28T15:20:07-07:00\n[INFO] ------------------------------------------------------------------------\nhelix-rest\n[INFO] Tests run: 159, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 44.191 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 159, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 52.589 s\n[INFO] Finished at: 2020-04-27T23:05:45-07:00\n[INFO] ------------------------------------------------------------------------\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation (Optional)\n\n In case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-04-28T21:01:45Z", "url": "https://github.com/apache/helix/pull/974", "merged": true, "mergeCommit": {"oid": "6ff99f5a181fb5fe91340968f93ca2cd5329a90a"}, "closed": true, "closedAt": "2020-05-15T00:34:23Z", "author": {"login": "jiajunwang"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccKsRRAFqTQwMjIyMjMyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABchWGmNAFqTQxMjI1MjYxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjIyMzI0", "url": "https://github.com/apache/helix/pull/974#pullrequestreview-402222324", "createdAt": "2020-04-28T21:23:22Z", "commit": {"oid": "44d4766a3d15d0cb7344381b54354f40e2459d74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMToyMzoyMlrOGNnfMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMToyMzoyMlrOGNnfMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkzMTYzNA==", "bodyText": "Are we retrying for these? Or we need some way to monitor the failure ones.", "url": "https://github.com/apache/helix/pull/974#discussion_r416931634", "createdAt": "2020-04-28T21:23:22Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/messaging/DefaultMessagingService.java", "diffHunk": "@@ -186,7 +186,8 @@ private HelixDataAccessor getRecipientDataAccessor(final Criteria recipientCrite\n       Map<String, String> sessionIdMap = new HashMap<String, String>();\n       if (recipientCriteria.isSessionSpecific()) {\n         Builder keyBuilder = targetDataAccessor.keyBuilder();\n-        List<LiveInstance> liveInstances = targetDataAccessor.getChildValues(keyBuilder.liveInstances());\n+        List<LiveInstance> liveInstances =\n+            targetDataAccessor.getChildValues(keyBuilder.liveInstances(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d4766a3d15d0cb7344381b54354f40e2459d74"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44d4766a3d15d0cb7344381b54354f40e2459d74", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/44d4766a3d15d0cb7344381b54354f40e2459d74", "committedDate": "2020-04-28T20:55:56Z", "message": "Format fix."}, "afterCommit": {"oid": "cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e", "committedDate": "2020-05-05T00:19:14Z", "message": "Format fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDQyMjM2", "url": "https://github.com/apache/helix/pull/974#pullrequestreview-406042236", "createdAt": "2020-05-05T18:19:19Z", "commit": {"oid": "cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODoxOToyMFrOGQ16yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODoxOToyMFrOGQ16yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxMzgwMw==", "bodyText": "What is the unit of retryInterval, second or millisecond?  Should be use long?  Usually have three consecutive parameters with the same type is not easy to use.", "url": "https://github.com/apache/helix/pull/974#discussion_r420313803", "createdAt": "2020-05-05T18:19:20Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/main/java/org/apache/helix/BaseDataAccessor.java", "diffHunk": "@@ -166,6 +167,7 @@\n    * @param options Set the type of ZNode see the valid values in {@link AccessOption}\n    * @return A list of children of the parent ZNode\n    */\n+  @Deprecated\n   List<T> getChildren(String parentPath, List<Stat> stats, int options);\n \n   /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODYyNDk0", "url": "https://github.com/apache/helix/pull/974#pullrequestreview-406862494", "createdAt": "2020-05-06T18:06:31Z", "commit": {"oid": "cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowNjozMVrOGRfLKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowNjozMVrOGRfLKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4OTczOA==", "bodyText": "This is not a good idea. If we throws exception here, then there is no event to trigger message read. Then it could only relies on @mgao0 's periodical message refresh. But if user does not set this up?\nDo not throw exception at least can read some message back and process them. Also when ST done with these partial messages, delete message operation can trigger another round of read. I know relies on this logic is not robust. But at least, it is not worse scenario than throw exception here.", "url": "https://github.com/apache/helix/pull/974#discussion_r420989738", "createdAt": "2020-05-06T18:06:31Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/messaging/handling/HelixTaskExecutor.java", "diffHunk": "@@ -701,7 +701,7 @@ private void syncSessionToController(HelixManager manager) {\n       }\n     }\n \n-    List<Message> newMessages = accessor.getProperty(keys);\n+    List<Message> newMessages = accessor.getProperty(keys, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e", "committedDate": "2020-05-05T00:19:14Z", "message": "Format fix."}, "afterCommit": {"oid": "9e71c3881e7d5c65d15049beeeea09041a229c72", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/9e71c3881e7d5c65d15049beeeea09041a229c72", "committedDate": "2020-05-06T18:32:51Z", "message": "Address comments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e71c3881e7d5c65d15049beeeea09041a229c72", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/9e71c3881e7d5c65d15049beeeea09041a229c72", "committedDate": "2020-05-06T18:32:51Z", "message": "Address comments."}, "afterCommit": {"oid": "3e0b70e17f96b9bc004755ea795d6c4459bed261", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/3e0b70e17f96b9bc004755ea795d6c4459bed261", "committedDate": "2020-05-06T22:50:59Z", "message": "Address comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDYyNDc3", "url": "https://github.com/apache/helix/pull/974#pullrequestreview-412062477", "createdAt": "2020-05-14T18:08:48Z", "commit": {"oid": "3e0b70e17f96b9bc004755ea795d6c4459bed261"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODowODo0OFrOGVoaxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODowODo0OFrOGVoaxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNTQ5Mw==", "bodyText": "Does it mean if passing true here, it would throw exception? Then how do we handle this exception?", "url": "https://github.com/apache/helix/pull/974#discussion_r425335493", "createdAt": "2020-05-14T18:08:48Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/common/caches/TaskDataCache.java", "diffHunk": "@@ -194,9 +194,9 @@ private void refreshContextsAndPreviousAssignments(HelixDataAccessor accessor) {\n       }\n     }\n \n-    List<ZNRecord> contexts = accessor.getBaseDataAccessor().get(contextPaths, null, 0);\n+    List<ZNRecord> contexts = accessor.getBaseDataAccessor().get(contextPaths, null, 0, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e0b70e17f96b9bc004755ea795d6c4459bed261"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDY5MDgy", "url": "https://github.com/apache/helix/pull/974#pullrequestreview-412069082", "createdAt": "2020-05-14T18:17:55Z", "commit": {"oid": "3e0b70e17f96b9bc004755ea795d6c4459bed261"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoxNzo1NVrOGVouyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoxNzo1NVrOGVouyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MDYxOQ==", "bodyText": "Same question. Before this change, partial read would not terminate rest flow, so onLiveInstance(), onMessage() etc would be called.\nNow if exception thrown, this is not the case. This would\n1/ result onLiveInstance() etc not called, but the exception got caught in the ZkEvent thread.\n2/ For Molly's change to add perodical checking messages PULL request, this would break the time thread which calls onMessage(). Basically if the exception thrown from onMessage() when timer thread calls this one, this would stop later timer thread I believe. (We can test. I recall Java Concurrency Controller book mentioned this issue there.) This would defeat the purpose of Molly's change.", "url": "https://github.com/apache/helix/pull/974#discussion_r425340619", "createdAt": "2020-05-14T18:17:55Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -525,7 +526,7 @@ public void invoke(NotificationContext changeContext) throws Exception {\n \n   private <T extends HelixProperty> List<T> preFetch(PropertyKey key) {\n     if (_preFetchEnabled) {\n-      return _accessor.getChildValues(key);\n+      return _accessor.getChildValues(key, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e0b70e17f96b9bc004755ea795d6c4459bed261"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da07cf38fc759a8b997f591bf74e062c79004cdf", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/da07cf38fc759a8b997f591bf74e062c79004cdf", "committedDate": "2020-05-14T22:13:08Z", "message": "Enforce result check for data accessors batch get calls to prevent partial batch read.\n\nThis will help to ensure the main Helix logic does not calculate based on incomplete input."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ae66bb721e2ff5f27b744e74eb17e6dca4ab57d", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/2ae66bb721e2ff5f27b744e74eb17e6dca4ab57d", "committedDate": "2020-05-14T22:13:08Z", "message": "Format fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "305e112d89ffe49ed6bae1a3c26dc9776ca9ec9d", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/305e112d89ffe49ed6bae1a3c26dc9776ca9ec9d", "committedDate": "2020-05-14T22:13:08Z", "message": "Address comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37dc2db81e745d64458f2637c1841ce92180317c", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/37dc2db81e745d64458f2637c1841ce92180317c", "committedDate": "2020-05-14T22:47:25Z", "message": "Allow partial read in the ZkPathDataDumpTask and DefaultMessagingService class."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e0b70e17f96b9bc004755ea795d6c4459bed261", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/3e0b70e17f96b9bc004755ea795d6c4459bed261", "committedDate": "2020-05-06T22:50:59Z", "message": "Address comments."}, "afterCommit": {"oid": "37dc2db81e745d64458f2637c1841ce92180317c", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/37dc2db81e745d64458f2637c1841ce92180317c", "committedDate": "2020-05-14T22:47:25Z", "message": "Allow partial read in the ZkPathDataDumpTask and DefaultMessagingService class."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjUyNjEz", "url": "https://github.com/apache/helix/pull/974#pullrequestreview-412252613", "createdAt": "2020-05-14T23:30:42Z", "commit": {"oid": "37dc2db81e745d64458f2637c1841ce92180317c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4793, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}