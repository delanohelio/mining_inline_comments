{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MzA2OTI4", "number": 1011, "title": "Add CRUD endpoints to TaskDriver for configurable thread pool size support", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1010\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nWith the recent changes of configurable thread pool size, we need to allow users to modify the \"target thread pool sizes\" that will be used to construct task thread pools. We are adding CRUD endpoints to TaskDriver that support \"setting target thread pool sizes\", \"getting target thread pool sizes\", \"setting global target thread pool sizes\", \"getting global target thread pool sizes\", and \"getting current thread pool sizes\".\nTests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[INFO] Results:\n[INFO] \n[ERROR] Failures: \n[ERROR]   TestEnableCompression.testEnableCompressionResource:117 expected:<true> but was:<false>\n[ERROR]   TestCrossClusterMessagingService.TestMessageSimpleSendReceiveAsync:143\n[ERROR]   TestStateTransitionTimeout.testStateTransitionTimeOut:166 expected:<true> but was:<false>\n[ERROR]   TestStateTransitionTimeoutWithResource.testStateTransitionTimeOut:171 expected:<true> but was:<false>\n[ERROR]   TestStateTransitionTimeoutWithResource.testStateTransitionTimeoutByClusterLevel:196 expected:<true> but was:<false>\n[ERROR]   TestZkCacheAsyncOpSingleThread.testHappyPathExtOpZkCacheBaseDataAccessor:214 zkCache doesn't match data on Zk expected:<true> but was:<false>\n[INFO] \n[ERROR] Tests run: 1169, Failures: 6, Errors: 0, Skipped: 1\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:15 h\n[INFO] Finished at: 2020-05-14T16:18:58-07:00\n[INFO] ------------------------------------------------------------------------\n\nRerun failed tests\n[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 81.366 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:26 min\n[INFO] Finished at: 2020-05-14T16:23:04-07:00\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-05-15T00:09:38Z", "url": "https://github.com/apache/helix/pull/1011", "merged": true, "mergeCommit": {"oid": "4841bec6ae350d5098317ca6d3ecc1b57e61e4a8"}, "closed": true, "closedAt": "2020-05-18T18:33:59Z", "author": {"login": "NealSun96"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchUxg5AH2gAyNDE4MzA2OTI4OjhjMjczYTMzMjdkMGEwYmY5ZGViODA1N2FmMGIxZmI4ODE3OTJiOGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchpCvWgFqTQxMjk4MTQzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8c273a3327d0a0bf9deb8057af0b1fb881792b8f", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/8c273a3327d0a0bf9deb8057af0b1fb881792b8f", "committedDate": "2020-05-14T21:57:46Z", "message": "Added CRUD and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c", "committedDate": "2020-05-15T00:07:57Z", "message": "Better javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjY4NTE3", "url": "https://github.com/apache/helix/pull/1011#pullrequestreview-412268517", "createdAt": "2020-05-15T00:19:08Z", "commit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDoxOTowOFrOGVyZCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDoxOTo0MlrOGVyZsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5ODg5MQ==", "bodyText": "can you create a private method with these common lines to avoid duplication?", "url": "https://github.com/apache/helix/pull/1011#discussion_r425498891", "createdAt": "2020-05-15T00:19:08Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "diffHunk": "@@ -1137,4 +1140,89 @@ private void validateZKNodeLimitation(int newConfigNodeCount) {\n           \"Cannot create more workflows or jobs because there are already too many items created in the path CONFIGS.\");\n     }\n   }\n+\n+  /**\n+   * Get the target task thread pool size of an instance, a value that's used to construct the task\n+   * thread pool and is created by users.\n+   * @param instanceName - name of the instance\n+   * @return the target task thread pool size of the instance\n+   */\n+  public int getTargetTaskThreadPoolSize(String instanceName) {\n+    InstanceConfig instanceConfig =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5OTA1OA==", "bodyText": "Same here. Duplicate code.", "url": "https://github.com/apache/helix/pull/1011#discussion_r425499058", "createdAt": "2020-05-15T00:19:42Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "diffHunk": "@@ -1137,4 +1140,89 @@ private void validateZKNodeLimitation(int newConfigNodeCount) {\n           \"Cannot create more workflows or jobs because there are already too many items created in the path CONFIGS.\");\n     }\n   }\n+\n+  /**\n+   * Get the target task thread pool size of an instance, a value that's used to construct the task\n+   * thread pool and is created by users.\n+   * @param instanceName - name of the instance\n+   * @return the target task thread pool size of the instance\n+   */\n+  public int getTargetTaskThreadPoolSize(String instanceName) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName);\n+    }\n+\n+    return instanceConfig.getTargetTaskThreadPoolSize();\n+  }\n+\n+  /**\n+   * Set the target task thread pool size of an instance. The target task thread pool size goes to\n+   * InstanceConfig, and is used to construct the task thread pool. The construction of thread pool\n+   * requires JVM restart after the target value has been set.\n+   * @param instanceName - name of the instance\n+   * @param targetTaskThreadPoolSize - the target task thread pool size of the instance\n+   */\n+  public void setTargetTaskThreadPoolSize(String instanceName, int targetTaskThreadPoolSize) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName + \"!\");\n+    }\n+\n+    instanceConfig.setTargetTaskThreadPoolSize(targetTaskThreadPoolSize);\n+  }\n+\n+  /**\n+   * Get the global target task thread pool size of the cluster, a value that's used to construct\n+   * task thread pools for the cluster's instances and is created by users.\n+   * @return the global target task thread pool size of the cluster\n+   */\n+  public int getGlobalTargetTaskThreadPoolSize() {\n+    ClusterConfig clusterConfig = _accessor.getProperty(_accessor.keyBuilder().clusterConfig());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzA4NDcx", "url": "https://github.com/apache/helix/pull/1011#pullrequestreview-412308471", "createdAt": "2020-05-15T02:35:28Z", "commit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjozNToyOVrOGV0fmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjozOToyNFrOGV0jhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzMzMzNw==", "bodyText": "A better way to say this is \"the newly-set task thread pool size will take effect upon a JVM restart\"", "url": "https://github.com/apache/helix/pull/1011#discussion_r425533337", "createdAt": "2020-05-15T02:35:29Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "diffHunk": "@@ -1137,4 +1140,89 @@ private void validateZKNodeLimitation(int newConfigNodeCount) {\n           \"Cannot create more workflows or jobs because there are already too many items created in the path CONFIGS.\");\n     }\n   }\n+\n+  /**\n+   * Get the target task thread pool size of an instance, a value that's used to construct the task\n+   * thread pool and is created by users.\n+   * @param instanceName - name of the instance\n+   * @return the target task thread pool size of the instance\n+   */\n+  public int getTargetTaskThreadPoolSize(String instanceName) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName);\n+    }\n+\n+    return instanceConfig.getTargetTaskThreadPoolSize();\n+  }\n+\n+  /**\n+   * Set the target task thread pool size of an instance. The target task thread pool size goes to\n+   * InstanceConfig, and is used to construct the task thread pool. The construction of thread pool\n+   * requires JVM restart after the target value has been set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNDI3MA==", "bodyText": "Nit: add the cluster name here as well?", "url": "https://github.com/apache/helix/pull/1011#discussion_r425534270", "createdAt": "2020-05-15T02:39:08Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "diffHunk": "@@ -1137,4 +1140,89 @@ private void validateZKNodeLimitation(int newConfigNodeCount) {\n           \"Cannot create more workflows or jobs because there are already too many items created in the path CONFIGS.\");\n     }\n   }\n+\n+  /**\n+   * Get the target task thread pool size of an instance, a value that's used to construct the task\n+   * thread pool and is created by users.\n+   * @param instanceName - name of the instance\n+   * @return the target task thread pool size of the instance\n+   */\n+  public int getTargetTaskThreadPoolSize(String instanceName) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName);\n+    }\n+\n+    return instanceConfig.getTargetTaskThreadPoolSize();\n+  }\n+\n+  /**\n+   * Set the target task thread pool size of an instance. The target task thread pool size goes to\n+   * InstanceConfig, and is used to construct the task thread pool. The construction of thread pool\n+   * requires JVM restart after the target value has been set.\n+   * @param instanceName - name of the instance\n+   * @param targetTaskThreadPoolSize - the target task thread pool size of the instance\n+   */\n+  public void setTargetTaskThreadPoolSize(String instanceName, int targetTaskThreadPoolSize) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName + \"!\");\n+    }\n+\n+    instanceConfig.setTargetTaskThreadPoolSize(targetTaskThreadPoolSize);\n+  }\n+\n+  /**\n+   * Get the global target task thread pool size of the cluster, a value that's used to construct\n+   * task thread pools for the cluster's instances and is created by users.\n+   * @return the global target task thread pool size of the cluster\n+   */\n+  public int getGlobalTargetTaskThreadPoolSize() {\n+    ClusterConfig clusterConfig = _accessor.getProperty(_accessor.keyBuilder().clusterConfig());\n+    if (clusterConfig == null) {\n+      throw new IllegalStateException(\"Failed to find ClusterConfig!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNDM0MA==", "bodyText": "Nit: add cluster name?", "url": "https://github.com/apache/helix/pull/1011#discussion_r425534340", "createdAt": "2020-05-15T02:39:24Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskDriver.java", "diffHunk": "@@ -1137,4 +1140,89 @@ private void validateZKNodeLimitation(int newConfigNodeCount) {\n           \"Cannot create more workflows or jobs because there are already too many items created in the path CONFIGS.\");\n     }\n   }\n+\n+  /**\n+   * Get the target task thread pool size of an instance, a value that's used to construct the task\n+   * thread pool and is created by users.\n+   * @param instanceName - name of the instance\n+   * @return the target task thread pool size of the instance\n+   */\n+  public int getTargetTaskThreadPoolSize(String instanceName) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName);\n+    }\n+\n+    return instanceConfig.getTargetTaskThreadPoolSize();\n+  }\n+\n+  /**\n+   * Set the target task thread pool size of an instance. The target task thread pool size goes to\n+   * InstanceConfig, and is used to construct the task thread pool. The construction of thread pool\n+   * requires JVM restart after the target value has been set.\n+   * @param instanceName - name of the instance\n+   * @param targetTaskThreadPoolSize - the target task thread pool size of the instance\n+   */\n+  public void setTargetTaskThreadPoolSize(String instanceName, int targetTaskThreadPoolSize) {\n+    InstanceConfig instanceConfig =\n+        _accessor.getProperty(_accessor.keyBuilder().instanceConfig(instanceName));\n+    if (instanceConfig == null) {\n+      throw new IllegalArgumentException(\n+          \"Failed to find InstanceConfig with provided instance name \" + instanceName + \"!\");\n+    }\n+\n+    instanceConfig.setTargetTaskThreadPoolSize(targetTaskThreadPoolSize);\n+  }\n+\n+  /**\n+   * Get the global target task thread pool size of the cluster, a value that's used to construct\n+   * task thread pools for the cluster's instances and is created by users.\n+   * @return the global target task thread pool size of the cluster\n+   */\n+  public int getGlobalTargetTaskThreadPoolSize() {\n+    ClusterConfig clusterConfig = _accessor.getProperty(_accessor.keyBuilder().clusterConfig());\n+    if (clusterConfig == null) {\n+      throw new IllegalStateException(\"Failed to find ClusterConfig!\");\n+    }\n+\n+    return clusterConfig.getGlobalTargetTaskThreadPoolSize();\n+  }\n+\n+  /**\n+   * Set the global target task thread pool size of the cluster. The global target task thread pool\n+   * size goes to ClusterConfig, and is applied to all instances of the cluster. If an instance\n+   * doesn't specify its target thread pool size in InstanceConfig, then this value in ClusterConfig\n+   * will be used to construct its task thread pool. The construction of thread pools requires JVM\n+   * restart. If none of the global and per-instance target thread pool sizes are set, a default\n+   * size will be used.\n+   * @param globalTargetTaskThreadPoolSize - the global target task thread pool size of the cluster\n+   */\n+  public void setGlobalTargetTaskThreadPoolSize(int globalTargetTaskThreadPoolSize) {\n+    ClusterConfig clusterConfig = _accessor.getProperty(_accessor.keyBuilder().clusterConfig());\n+    if (clusterConfig == null) {\n+      throw new IllegalStateException(\"Failed to find ClusterConfig!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50fbf55bef3c451d1fb101d0e9cec69ea6ded8c"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4689bc861b975650c551d375689ef75256be0a70", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/4689bc861b975650c551d375689ef75256be0a70", "committedDate": "2020-05-15T19:20:47Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTgxNDMz", "url": "https://github.com/apache/helix/pull/1011#pullrequestreview-412981433", "createdAt": "2020-05-15T21:34:41Z", "commit": {"oid": "4689bc861b975650c551d375689ef75256be0a70"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4828, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}