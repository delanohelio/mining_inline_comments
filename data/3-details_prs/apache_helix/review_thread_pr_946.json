{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDc0MTcx", "number": 946, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMToyNDo1M1rODw3Wmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMToyNDo1M1rODw3Wmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTY1MTQ2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/TestCustomizedViewAggregation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMToyNDo1M1rOGEGR5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTo1MzozMVrOGEG1iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MDM3Mg==", "bodyText": "can we try somewhere in the test process to initialize a new routing table provider with different types? A little concerned that we have only one fixed data resources input here. Let's put the initialization before the update of config/states, and see whether that's stable.", "url": "https://github.com/apache/helix/pull/946#discussion_r406950372", "createdAt": "2020-04-10T21:24:53Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestCustomizedViewAggregation.java", "diffHunk": "@@ -120,6 +118,23 @@ public void beforeClass() throws Exception {\n     _localCustomizedView = new HashMap<>();\n     _routingTableProviderDataSources = new HashSet<>();\n     _aggregationEnabledTypes = new HashSet<>();\n+\n+    List<String> customizedStateTypes = Arrays\n+        .asList(CustomizedStateType.TYPE_A.name(), CustomizedStateType.TYPE_B.name(),\n+            CustomizedStateType.TYPE_C.name());\n+\n+    CustomizedStateConfig.Builder customizedStateConfigBuilder =\n+        new CustomizedStateConfig.Builder();\n+    customizedStateConfigBuilder.setAggregationEnabledTypes(customizedStateTypes);\n+    HelixDataAccessor accessor = _manager.getHelixDataAccessor();\n+    accessor.setProperty(accessor.keyBuilder().customizedStateConfig(),\n+        customizedStateConfigBuilder.build());\n+    _aggregationEnabledTypes.addAll(customizedStateTypes);\n+\n+    Map<PropertyType, List<String>> dataSource = new HashMap<>();\n+    dataSource.put(PropertyType.CUSTOMIZEDVIEW, customizedStateTypes);\n+    _routingTableProvider = new RoutingTableProvider(_spectator, dataSource);\n+    _routingTableProviderDataSources.addAll(customizedStateTypes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eab24d34bed93791bbabf2cdb96c6b518370322b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1OTQ5OQ==", "bodyText": "Good point. I added back two tests on this.", "url": "https://github.com/apache/helix/pull/946#discussion_r406959499", "createdAt": "2020-04-10T21:53:31Z", "author": {"login": "mgao0"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestCustomizedViewAggregation.java", "diffHunk": "@@ -120,6 +118,23 @@ public void beforeClass() throws Exception {\n     _localCustomizedView = new HashMap<>();\n     _routingTableProviderDataSources = new HashSet<>();\n     _aggregationEnabledTypes = new HashSet<>();\n+\n+    List<String> customizedStateTypes = Arrays\n+        .asList(CustomizedStateType.TYPE_A.name(), CustomizedStateType.TYPE_B.name(),\n+            CustomizedStateType.TYPE_C.name());\n+\n+    CustomizedStateConfig.Builder customizedStateConfigBuilder =\n+        new CustomizedStateConfig.Builder();\n+    customizedStateConfigBuilder.setAggregationEnabledTypes(customizedStateTypes);\n+    HelixDataAccessor accessor = _manager.getHelixDataAccessor();\n+    accessor.setProperty(accessor.keyBuilder().customizedStateConfig(),\n+        customizedStateConfigBuilder.build());\n+    _aggregationEnabledTypes.addAll(customizedStateTypes);\n+\n+    Map<PropertyType, List<String>> dataSource = new HashMap<>();\n+    dataSource.put(PropertyType.CUSTOMIZEDVIEW, customizedStateTypes);\n+    _routingTableProvider = new RoutingTableProvider(_spectator, dataSource);\n+    _routingTableProviderDataSources.addAll(customizedStateTypes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MDM3Mg=="}, "originalCommit": {"oid": "eab24d34bed93791bbabf2cdb96c6b518370322b"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1443, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}