{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MTYyODU0", "number": 1438, "title": "Fix TaskGarbageCollectionStage rebalance trigger when job purge interval is negative", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1353\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nSince we allow negative delay in scheduleRebalance, which leads to immediate rebalance (on-demand), the current logic is incorrect. When job purge interval is non-positive, a rebalance is always triggered immediately.\nAdding a check earlier to disable the rebalance triggering when job purge interval is non-positive.\nTests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[WARNING] Tests run: 1210, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 4,007.762 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[WARNING] Tests run: 1210, Failures: 0, Errors: 0, Skipped: 1\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:06 h\n[INFO] Finished at: 2020-10-05T17:04:49-07:00\n[INFO] ------------------------------------------------------------------------\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-10-05T22:56:30Z", "url": "https://github.com/apache/helix/pull/1438", "merged": true, "mergeCommit": {"oid": "9bf93a6525b551808648a92f2379bbb027a68b1e"}, "closed": true, "closedAt": "2020-10-07T00:31:06Z", "author": {"login": "NealSun96"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPr1waAH2gAyNDk4MTYyODU0OmU2YmUxZmFlYzgwY2YwNTdkZWM2NGU0NGNkYzQ5YTQ3OTcwNDEzMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP8pJmgFqTUwMzI0NDQ3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e6be1faec80cf057dec64e44cdc49a4797041322", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/e6be1faec80cf057dec64e44cdc49a4797041322", "committedDate": "2020-10-05T22:50:44Z", "message": "Bug fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTcyNjU1", "url": "https://github.com/apache/helix/pull/1438#pullrequestreview-503172655", "createdAt": "2020-10-06T16:56:02Z", "commit": {"oid": "e6be1faec80cf057dec64e44cdc49a4797041322"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjQ0NDc5", "url": "https://github.com/apache/helix/pull/1438#pullrequestreview-503244479", "createdAt": "2020-10-06T18:25:20Z", "commit": {"oid": "e6be1faec80cf057dec64e44cdc49a4797041322"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODoyNToyMFrOHdUlTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODoyNToyMFrOHdUlTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwNzk4MQ==", "bodyText": "why the previous way has a bug?", "url": "https://github.com/apache/helix/pull/1438#discussion_r500507981", "createdAt": "2020-10-06T18:25:20Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/TaskGarbageCollectionStage.java", "diffHunk": "@@ -73,9 +73,12 @@ public void process(ClusterEvent event) throws Exception {\n           continue;\n         }\n         long purgeInterval = workflowConfig.getJobPurgeInterval();\n+        if (purgeInterval <= 0) {\n+          continue;\n+        }\n         long currentTime = System.currentTimeMillis();\n         long nextPurgeTime = workflowContext.getLastJobPurgeTime() + purgeInterval;\n-        if (purgeInterval > 0 && nextPurgeTime <= currentTime) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6be1faec80cf057dec64e44cdc49a4797041322"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4319, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}