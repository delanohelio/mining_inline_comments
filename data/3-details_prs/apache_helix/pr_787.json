{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTg2NjE2", "number": 787, "title": "Fix tests in apache/zooscalability and rebase from apache/master", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #786\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nThere are some failing tests due to environment issues. This PR fixes them by enforcing a deterministic order among tests.\nThis PR also rebases apache/zooscalability from apache/master.\nTests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[INFO] Tests run: 123, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.476 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 123, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  51.287 s\n[INFO] Finished at: 2020-02-20T13:27:27-08:00\n[INFO] -------------------------------------------------\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines, and I have squashed multiple commits if they address the same issue. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml", "createdAt": "2020-02-20T21:36:38Z", "url": "https://github.com/apache/helix/pull/787", "merged": true, "mergeCommit": {"oid": "329319e55693581cce4c9ef521bd4fdd2459c982"}, "closed": true, "closedAt": "2020-02-20T21:52:29Z", "author": {"login": "narendly"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGSDUwgH2gAyMzc3OTg2NjE2OmNjNWIzNTc5MTAzZGIzYzhlNDhiNmU2YTA4NzA3YjlmMzk0ZDY0NmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGSTVLAFqTM2MjI1ODIzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cc5b3579103db3c8e48b6e6a08707b9f394d646e", "author": {"user": {"login": "i3wangyi", "name": "Yi Wang"}}, "url": "https://github.com/apache/helix/commit/cc5b3579103db3c8e48b6e6a08707b9f394d646e", "committedDate": "2020-02-20T21:31:33Z", "message": "Fix the flaky test (#749)\n\nFix the unstable TestZkWatch\r\n\r\nThe root cause of the instability is due to the incorrect condition notify time: it should notify other threads after zkClient finishes the unsubscribing the listener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21193d3be5d1492cb8d765db2e5ccdc9548ed197", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/21193d3be5d1492cb8d765db2e5ccdc9548ed197", "committedDate": "2020-02-20T21:31:33Z", "message": "Fix ConcurrentModification exception in Workflow Garbage Collection (#741)\n\nIn workflow Garbage collection, there is possibility that we encounter\r\nConcurrentMod exception while looping through the workflow contexts.\r\nThis commit fixes this issue by adding a try-catch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a8e83f4511b14537e31d483b43d4443d8ebef74", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/5a8e83f4511b14537e31d483b43d4443d8ebef74", "committedDate": "2020-02-20T21:31:33Z", "message": "Fix failing tests for metadata store directory service"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMjU4MjM2", "url": "https://github.com/apache/helix/pull/787#pullrequestreview-362258236", "createdAt": "2020-02-20T21:48:44Z", "commit": {"oid": "5a8e83f4511b14537e31d483b43d4443d8ebef74"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo0ODo0NVrOFskTwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo0ODo0NVrOFskTwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3NjU0NA==", "bodyText": "If we are catching concurrent modification exception, I think it is better to just catch this exception, instead of the general Exception.", "url": "https://github.com/apache/helix/pull/787#discussion_r382276544", "createdAt": "2020-02-20T21:48:45Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1043,23 +1043,40 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n    * @param dataProvider\n    * @param manager\n    */\n-  public static void workflowGarbageCollection(WorkflowControllerDataProvider dataProvider,\n+  public static void workflowGarbageCollection(final WorkflowControllerDataProvider dataProvider,\n       final HelixManager manager) {\n     // Garbage collections for conditions where workflow context exists but config is missing.\n-    Map<String, ZNRecord> contexts = dataProvider.getContexts();\n-    HelixDataAccessor accessor = manager.getHelixDataAccessor();\n-    HelixPropertyStore<ZNRecord> propertyStore = manager.getHelixPropertyStore();\n \n+    Set<String> existingContexts;\n+    /*\n+     * Here try-catch is used to avoid concurrent modification exception while doing deep copy.\n+     * Map.keySet() can produce concurrent modification exception.\n+     * Reason: If the map is modified while an iteration over the set is in progress, concurrent\n+     * modification exception will be thrown.\n+     */\n+    try {\n+      existingContexts = new HashSet<>(dataProvider.getContexts().keySet());\n+    } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a8e83f4511b14537e31d483b43d4443d8ebef74"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4987, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}