{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3OTg3MTc5", "number": 1520, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1MDo1MFrOE2950w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxOToyMDo0N1rOE4UAjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDcyNzg3OnYy", "diffSide": "RIGHT", "path": "helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1MDo1MFrOHwDArA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1MDo1MFrOHwDArA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE0MzAyMA==", "bodyText": "This is necessary to have due to #1391. Previously we were relying on the ideal state. Now once the config is added, the controller will process the job. If the job config does not have an ID field, TaskData cache does not see the config and the job will not get processed.", "url": "https://github.com/apache/helix/pull/1520#discussion_r520143020", "createdAt": "2020-11-09T21:50:50Z", "author": {"login": "alirezazamani"}, "path": "helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java", "diffHunk": "@@ -451,7 +451,7 @@ protected ClusterControllerManager startController(String cluster) {\n     for (int i = 0; i < numJobs; i++) {\n       JobConfig.Builder job =\n           new JobConfig.Builder().setCommand(\"DummyCommand\").setTargetResource(\"RESOURCE\")\n-              .setWorkflow(workflowName);\n+              .setWorkflow(workflowName).setJobId(workflowName + \"_\" + JOB_PREFIX + i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDczMDU2OnYy", "diffSide": "RIGHT", "path": "helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1MTozNVrOHwDCOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1MTozNVrOHwDCOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE0MzQxOA==", "bodyText": "This change is necessary. This was not correct from the beginning of the change.", "url": "https://github.com/apache/helix/pull/1520#discussion_r520143418", "createdAt": "2020-11-09T21:51:35Z", "author": {"login": "alirezazamani"}, "path": "helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java", "diffHunk": "@@ -105,7 +105,7 @@\n   // For a single-ZK/Helix environment\n   protected static final String ZK_ADDR = \"localhost:2123\";\n   protected static final String WORKFLOW_PREFIX = \"Workflow_\";\n-  protected static final String JOB_PREFIX = \"Job_\";\n+  protected static final String JOB_PREFIX = \"JOB\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDczNTcwOnYy", "diffSide": "RIGHT", "path": "helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1MzoxMFrOHwDFVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1MzoxMFrOHwDFVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE0NDIxMw==", "bodyText": "Since the test we are checking the accessor, this has been changed to FAILED. In this case, the status of the workflow will be unchanged and the controller does not change it. Hence, the job accessor test would work correctly.", "url": "https://github.com/apache/helix/pull/1520#discussion_r520144213", "createdAt": "2020-11-09T21:53:10Z", "author": {"login": "alirezazamani"}, "path": "helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java", "diffHunk": "@@ -426,9 +426,9 @@ protected ClusterControllerManager startController(String cluster) {\n       }\n       workflows.put(WORKFLOW_PREFIX + i, workflow.build());\n       WorkflowContext workflowContext = TaskTestUtil\n-          .buildWorkflowContext(WORKFLOW_PREFIX + i, TaskState.IN_PROGRESS,\n+          .buildWorkflowContext(WORKFLOW_PREFIX + i, TaskState.FAILED,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDczNzI5OnYy", "diffSide": "RIGHT", "path": "helix-rest/src/test/java/org/apache/helix/rest/server/TestWorkflowAccessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1Mzo0NFrOHwDGWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1Mzo0NFrOHwDGWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE0NDQ3Mg==", "bodyText": "See the comments above for an explanation of this change.", "url": "https://github.com/apache/helix/pull/1520#discussion_r520144472", "createdAt": "2020-11-09T21:53:44Z", "author": {"login": "alirezazamani"}, "path": "helix-rest/src/test/java/org/apache/helix/rest/server/TestWorkflowAccessor.java", "diffHunk": "@@ -112,7 +112,7 @@ public void testGetWorkflowContext() throws IOException {\n         Response.Status.OK.getStatusCode(), true);\n     JsonNode node = OBJECT_MAPPER.readTree(body);\n     Assert.assertEquals(node.get(\"STATE\").textValue(),\n-        TaskState.IN_PROGRESS.name());\n+        TaskState.FAILED.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDczNzg3OnYy", "diffSide": "RIGHT", "path": "helix-rest/src/test/java/org/apache/helix/rest/server/TestJobAccessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1Mzo1N1rOHwDGtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1Mzo1N1rOHwDGtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE0NDU2NQ==", "bodyText": "See the comments above for an explanation of this change.", "url": "https://github.com/apache/helix/pull/1520#discussion_r520144565", "createdAt": "2020-11-09T21:53:57Z", "author": {"login": "alirezazamani"}, "path": "helix-rest/src/test/java/org/apache/helix/rest/server/TestJobAccessor.java", "diffHunk": "@@ -178,8 +178,8 @@ public void testGetAddJobContent() throws IOException {\n   @Test(dependsOnMethods = \"testGetAddJobContent\")\n   public void testInvalidGetAndUpdateJobContentStore() {\n     System.out.println(\"Start test :\" + TestHelper.getTestMethodName());\n-    String validURI = \"clusters/\" + CLUSTER_NAME + \"/workflows/Workflow_0/jobs/Job_0/userContent\";\n-    String invalidURI1 = \"clusters/\" + CLUSTER_NAME + \"/workflows/xxx/jobs/Job_0/userContent\"; // workflow not exist\n+    String validURI = \"clusters/\" + CLUSTER_NAME + \"/workflows/Workflow_0/jobs/JOB0/userContent\";\n+    String invalidURI1 = \"clusters/\" + CLUSTER_NAME + \"/workflows/xxx/jobs/JOB0/userContent\"; // workflow not exist", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDczODEzOnYy", "diffSide": "RIGHT", "path": "helix-rest/src/test/java/org/apache/helix/rest/server/TestTaskAccessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1NDowMVrOHwDG2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTo1NDowMVrOHwDG2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE0NDYwMA==", "bodyText": "See the comments above for an explanation of this change.", "url": "https://github.com/apache/helix/pull/1520#discussion_r520144600", "createdAt": "2020-11-09T21:54:01Z", "author": {"login": "alirezazamani"}, "path": "helix-rest/src/test/java/org/apache/helix/rest/server/TestTaskAccessor.java", "diffHunk": "@@ -38,8 +38,8 @@\n   @Test\n   public void testGetAddTaskUserContent() throws IOException {\n     System.out.println(\"Start test :\" + TestHelper.getTestMethodName());\n-    String uri = \"clusters/\" + CLUSTER_NAME + \"/workflows/Workflow_0/jobs/Job_0/tasks/0/userContent\";\n-    String uriTaskDoesNotExist = \"clusters/\" + CLUSTER_NAME + \"/workflows/Workflow_0/jobs/Job_0/tasks/xxx/userContent\";\n+    String uri = \"clusters/\" + CLUSTER_NAME + \"/workflows/Workflow_0/jobs/JOB0/tasks/0/userContent\";\n+    String uriTaskDoesNotExist = \"clusters/\" + CLUSTER_NAME + \"/workflows/Workflow_0/jobs/JOB0/tasks/xxx/userContent\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDk0Nzg1OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/AttributeName.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo1OTo0M1rOHwrRWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo0ODo1MFrOHw0FPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMjY1MA==", "bodyText": "We may differentiate the names. Otherwise, it could be confusing.", "url": "https://github.com/apache/helix/pull/1520#discussion_r520802650", "createdAt": "2020-11-10T18:59:43Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/AttributeName.java", "diffHunk": "@@ -48,5 +48,7 @@\n   // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n   TO_BE_PURGED_WORKFLOWS,\n   // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n+  TO_BE_PURGED_JOBS,\n+  // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n   TO_BE_PURGED_JOBS_MAP", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzNjg4MQ==", "bodyText": "I will change the name. Thanks for the suggestion.", "url": "https://github.com/apache/helix/pull/1520#discussion_r520936881", "createdAt": "2020-11-10T23:21:16Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/AttributeName.java", "diffHunk": "@@ -48,5 +48,7 @@\n   // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n   TO_BE_PURGED_WORKFLOWS,\n   // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n+  TO_BE_PURGED_JOBS,\n+  // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n   TO_BE_PURGED_JOBS_MAP", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMjY1MA=="}, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NzAwNA==", "bodyText": "Done.", "url": "https://github.com/apache/helix/pull/1520#discussion_r520947004", "createdAt": "2020-11-10T23:48:50Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/AttributeName.java", "diffHunk": "@@ -48,5 +48,7 @@\n   // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n   TO_BE_PURGED_WORKFLOWS,\n   // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n+  TO_BE_PURGED_JOBS,\n+  // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n   TO_BE_PURGED_JOBS_MAP", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMjY1MA=="}, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDk2NTQxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/TaskGarbageCollectionStage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTowMjo1OFrOHwrc_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzoyMDo1NFrOHwzdLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwNTYzMA==", "bodyText": "Could this job still exist in WF context? Do we need to scan WF context and clean them up?", "url": "https://github.com/apache/helix/pull/1520#discussion_r520805630", "createdAt": "2020-11-10T19:02:58Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/TaskGarbageCollectionStage.java", "diffHunk": "@@ -93,12 +97,18 @@ public void process(ClusterEvent event) throws Exception {\n           .equals(TaskUtil.WORKFLOW_CONTEXT_KW)) {\n         // Find workflows that need to be purged\n         workflowsToBePurged.add(entry.getKey());\n+      } else if (jobConfig == null && entry.getValue() != null && entry.getValue().getId()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzNjc1MQ==", "bodyText": "This follows what we do for expired jobs. Note that in expired jobs we do not do that as well because main pipeline is responsible to update workflow context. The reason has been also explained in the comments:\n      // Update workflow context will be in main pipeline not here. Otherwise, it will cause\n      // concurrent write issue. It is possible that jobs got purged but there is no event to\n      // trigger the pipeline to clean context.", "url": "https://github.com/apache/helix/pull/1520#discussion_r520936751", "createdAt": "2020-11-10T23:20:54Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/TaskGarbageCollectionStage.java", "diffHunk": "@@ -93,12 +97,18 @@ public void process(ClusterEvent event) throws Exception {\n           .equals(TaskUtil.WORKFLOW_CONTEXT_KW)) {\n         // Find workflows that need to be purged\n         workflowsToBePurged.add(entry.getKey());\n+      } else if (jobConfig == null && entry.getValue() != null && entry.getValue().getId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwNTYzMA=="}, "originalCommit": {"oid": "3f7ce747e97a1a05eb40e820d1972805fc6855bf"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDgwODQ2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/AttributeName.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxOToxMjo1OVrOHyJ28A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDoyOTo0MVrOHyNL7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1MjM2OA==", "bodyText": "One minor question, why not call it TO_BE_PURGED_JOB directly?", "url": "https://github.com/apache/helix/pull/1520#discussion_r522352368", "createdAt": "2020-11-12T19:12:59Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/AttributeName.java", "diffHunk": "@@ -48,5 +48,7 @@\n   // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n   TO_BE_PURGED_WORKFLOWS,\n   // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n+  JOBS_WITHOUT_CONFIG,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85ddf61bc33780d40fb593b3399397f5fd7b611e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNjg5NQ==", "bodyText": "I used the name you suggested at the beginning. Junkai asked for the change and I think it makes sense to have a new name. TO_BE_PURGED_JOB causes confusion between jobs without config and the expired job that have passed their expiry time.", "url": "https://github.com/apache/helix/pull/1520#discussion_r522406895", "createdAt": "2020-11-12T20:29:41Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/AttributeName.java", "diffHunk": "@@ -48,5 +48,7 @@\n   // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n   TO_BE_PURGED_WORKFLOWS,\n   // This attribute should only be used in TaskGarbageCollectionStage, misuse could cause race conditions.\n+  JOBS_WITHOUT_CONFIG,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1MjM2OA=="}, "originalCommit": {"oid": "85ddf61bc33780d40fb593b3399397f5fd7b611e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDgyNzc4OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxOToxODo0MFrOHyKDEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDo0MToyM1rOHyNkCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1NTQ3Mg==", "bodyText": "This section is almost identical as removeJob(), could you please merge?", "url": "https://github.com/apache/helix/pull/1520#discussion_r522355472", "createdAt": "2020-11-12T19:18:40Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1142,6 +1142,35 @@ public static void workflowGarbageCollection(final Set<String> toBePurgedWorkflo\n     }\n   }\n \n+  /**\n+   * The function that removes IdealStates and job contexts of the jobs that need to be\n+   * deleted.\n+   * @param toBePurgedJobs\n+   * @param manager\n+   */\n+  public static void jobGarbageCollection(final Set<String> toBePurgedJobs,\n+      final HelixManager manager) {\n+    HelixDataAccessor accessor = manager.getHelixDataAccessor();\n+    HelixPropertyStore<ZNRecord> propertyStore = manager.getHelixPropertyStore();\n+\n+    for (String jobName : toBePurgedJobs) {\n+      LOG.warn(\n+          \"JobContext exists for job {}. However, job Config is missing! Deleting the JobContext and IdealState!!\",\n+          jobName);\n+\n+      // TODO: We dont need this in the future when TF is not relying on IS/EV anymore.\n+      if (!cleanupJobIdealStateExtView(accessor, jobName)) {\n+        LOG.warn(\"Error occurred while trying to remove job idealstate/externalview for {}.\",\n+            jobName);\n+        continue;\n+      }\n+\n+      if (!removeJobContext(propertyStore, jobName)) {\n+        LOG.warn(\"Error occurred while trying to remove job context for {}.\", jobName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85ddf61bc33780d40fb593b3399397f5fd7b611e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQxMzA2Nw==", "bodyText": "leveraged removeJob method.", "url": "https://github.com/apache/helix/pull/1520#discussion_r522413067", "createdAt": "2020-11-12T20:41:23Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1142,6 +1142,35 @@ public static void workflowGarbageCollection(final Set<String> toBePurgedWorkflo\n     }\n   }\n \n+  /**\n+   * The function that removes IdealStates and job contexts of the jobs that need to be\n+   * deleted.\n+   * @param toBePurgedJobs\n+   * @param manager\n+   */\n+  public static void jobGarbageCollection(final Set<String> toBePurgedJobs,\n+      final HelixManager manager) {\n+    HelixDataAccessor accessor = manager.getHelixDataAccessor();\n+    HelixPropertyStore<ZNRecord> propertyStore = manager.getHelixPropertyStore();\n+\n+    for (String jobName : toBePurgedJobs) {\n+      LOG.warn(\n+          \"JobContext exists for job {}. However, job Config is missing! Deleting the JobContext and IdealState!!\",\n+          jobName);\n+\n+      // TODO: We dont need this in the future when TF is not relying on IS/EV anymore.\n+      if (!cleanupJobIdealStateExtView(accessor, jobName)) {\n+        LOG.warn(\"Error occurred while trying to remove job idealstate/externalview for {}.\",\n+            jobName);\n+        continue;\n+      }\n+\n+      if (!removeJobContext(propertyStore, jobName)) {\n+        LOG.warn(\"Error occurred while trying to remove job context for {}.\", jobName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1NTQ3Mg=="}, "originalCommit": {"oid": "85ddf61bc33780d40fb593b3399397f5fd7b611e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDgzNTM0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxOToyMDo0N1rOHyKHsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDo0NjoxOFrOHyNt7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1NjY1OQ==", "bodyText": "I feel purgeExpiredJobs has a more complete logic to process if the removal fails. Why not using it directly. In this case, you won't need 2 lists in the event object. You can merge the job with no config to the expired job for purging.\nOr is there any conflict logic there?", "url": "https://github.com/apache/helix/pull/1520#discussion_r522356659", "createdAt": "2020-11-12T19:20:47Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1142,6 +1142,35 @@ public static void workflowGarbageCollection(final Set<String> toBePurgedWorkflo\n     }\n   }\n \n+  /**\n+   * The function that removes IdealStates and job contexts of the jobs that need to be\n+   * deleted.\n+   * @param toBePurgedJobs\n+   * @param manager\n+   */\n+  public static void jobGarbageCollection(final Set<String> toBePurgedJobs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85ddf61bc33780d40fb593b3399397f5fd7b611e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQxNTU5OA==", "bodyText": "They are different. Purged expiredJobs are for the jobs that exist in the queue and they have workflow config. However, this is a general method to delete the expired jobs whether they have workflow config or not, and also whether the jobs are associated with a queue or regular workflow. Also, expired jobs are for the queue that is currently running. If the queue has been deleted and the job didn't get deleted for some reason, then this part will cover it and does garbage collection.", "url": "https://github.com/apache/helix/pull/1520#discussion_r522415598", "createdAt": "2020-11-12T20:46:18Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1142,6 +1142,35 @@ public static void workflowGarbageCollection(final Set<String> toBePurgedWorkflo\n     }\n   }\n \n+  /**\n+   * The function that removes IdealStates and job contexts of the jobs that need to be\n+   * deleted.\n+   * @param toBePurgedJobs\n+   * @param manager\n+   */\n+  public static void jobGarbageCollection(final Set<String> toBePurgedJobs,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1NjY1OQ=="}, "originalCommit": {"oid": "85ddf61bc33780d40fb593b3399397f5fd7b611e"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 795, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}