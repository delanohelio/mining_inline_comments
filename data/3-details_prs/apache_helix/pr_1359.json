{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0NDk2MDc3", "number": 1359, "title": "Don't output the best possible state calculate result if the result is not valid.", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1358\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nThe invalid result may mislead the following stages in the pipeline and cause problems. For example, this change fixes the issue that resource monitor rebalance state may be inaccurately reported.\nTests\n\n The following tests are written for this issue:\n\nModified the existing test to cover change.\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[INFO] Results:\n[INFO]\n[ERROR] Failures:\n[ERROR]   TestDeleteJobFromJobQueue.testForceDeleteJobFromJobQueue:75 \u00bb Helix Failed to ...\n[INFO]\n[ERROR] Tests run: 1200, Failures: 1, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 01:14 h\n[INFO] Finished at: 2020-09-10T17:51:36-07:00\n[INFO] ------------------------------------------------------------------------\nRerun\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.305 s - in org.apache.helix.integration.task.TestDeleteJobFromJobQueue\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 14.473 s\n[INFO] Finished at: 2020-09-10T17:56:04-07:00\n[INFO] ------------------------------------------------------------------------\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-09-11T00:58:00Z", "url": "https://github.com/apache/helix/pull/1359", "merged": true, "mergeCommit": {"oid": "67f493760aa6d598dd0242996fe9b79c37085726"}, "closed": true, "closedAt": "2020-09-15T17:42:16Z", "author": {"login": "jiajunwang"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHq31LAFqTQ4NjQwOTIyMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdI7rP4ABqjM3NjU3NDU5NDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NDA5MjIw", "url": "https://github.com/apache/helix/pull/1359#pullrequestreview-486409220", "createdAt": "2020-09-11T01:11:42Z", "commit": {"oid": "938aa5a3be6de6865e2bb0809b2511c2bc9e731b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMToxMTo0MlrOHQKzQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMToxMTo0MlrOHQKzQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjcxNjIyNw==", "bodyText": "If checkBestPossibleStateCalculation(idealState) is true, will we ever get a null partitionStateAssignment?", "url": "https://github.com/apache/helix/pull/1359#discussion_r486716227", "createdAt": "2020-09-11T01:11:42Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/BestPossibleStateCalcStage.java", "diffHunk": "@@ -347,36 +347,39 @@ private boolean computeSingleResourceBestPossibleState(ClusterEvent event,\n       LogUtil.logError(logger, _eventId, \"Error computing assignment for resource \" + resourceName\n           + \". no rebalancer found. rebalancer: \" + rebalancer + \" mappingCalculator: \"\n           + mappingCalculator);\n-    }\n-\n-    if (rebalancer != null && mappingCalculator != null) {\n-      ResourceAssignment partitionStateAssignment = null;\n+    } else {\n       try {\n         HelixManager manager = event.getAttribute(AttributeName.helixmanager.name());\n         rebalancer.init(manager);\n         idealState =\n             rebalancer.computeNewIdealState(resourceName, idealState, currentStateOutput, cache);\n \n-        output.setPreferenceLists(resourceName, idealState.getPreferenceLists());\n+        // Check if calculation is done successfully\n+        if (!checkBestPossibleStateCalculation(idealState)) {\n+          LogUtil.logWarn(logger, _eventId,\n+              \"The calculated idealState is not valid, resource: \" + resourceName);\n+          return false;\n+        }\n \n         // Use the internal MappingCalculator interface to compute the final assignment\n         // The next release will support rebalancers that compute the mapping from start to finish\n-        partitionStateAssignment = mappingCalculator\n+        ResourceAssignment partitionStateAssignment = mappingCalculator\n             .computeBestPossiblePartitionState(cache, idealState, resource, currentStateOutput);\n \n         if (partitionStateAssignment == null) {\n           LogUtil.logWarn(logger, _eventId,\n-              \"PartitionStateAssignment is null, resource: \" + resourceName);\n+              \"The calculated partitionStateAssignment is null, resource: \" + resourceName);\n           return false;\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "938aa5a3be6de6865e2bb0809b2511c2bc9e731b"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NDEwNjgz", "url": "https://github.com/apache/helix/pull/1359#pullrequestreview-486410683", "createdAt": "2020-09-11T01:16:49Z", "commit": {"oid": "938aa5a3be6de6865e2bb0809b2511c2bc9e731b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMToxNjo0OVrOHQK4eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMToxNjo0OVrOHQK4eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjcxNzU2Mg==", "bodyText": "Is this to make sure if we ever get a null value for partitionStateAssignment, we don't set anything in the output?\nI wonder if this might cause a behavior change. Before this change, did output get populated with some preferenceList value (maybe the one from the previous, last successful pipeline)? After this change, if the computeBestPossiblePartitionState returns a null, then output will start having nothing, which is a different behavior from before this change?", "url": "https://github.com/apache/helix/pull/1359#discussion_r486717562", "createdAt": "2020-09-11T01:16:49Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/BestPossibleStateCalcStage.java", "diffHunk": "@@ -347,36 +347,39 @@ private boolean computeSingleResourceBestPossibleState(ClusterEvent event,\n       LogUtil.logError(logger, _eventId, \"Error computing assignment for resource \" + resourceName\n           + \". no rebalancer found. rebalancer: \" + rebalancer + \" mappingCalculator: \"\n           + mappingCalculator);\n-    }\n-\n-    if (rebalancer != null && mappingCalculator != null) {\n-      ResourceAssignment partitionStateAssignment = null;\n+    } else {\n       try {\n         HelixManager manager = event.getAttribute(AttributeName.helixmanager.name());\n         rebalancer.init(manager);\n         idealState =\n             rebalancer.computeNewIdealState(resourceName, idealState, currentStateOutput, cache);\n \n-        output.setPreferenceLists(resourceName, idealState.getPreferenceLists());\n+        // Check if calculation is done successfully\n+        if (!checkBestPossibleStateCalculation(idealState)) {\n+          LogUtil.logWarn(logger, _eventId,\n+              \"The calculated idealState is not valid, resource: \" + resourceName);\n+          return false;\n+        }\n \n         // Use the internal MappingCalculator interface to compute the final assignment\n         // The next release will support rebalancers that compute the mapping from start to finish\n-        partitionStateAssignment = mappingCalculator\n+        ResourceAssignment partitionStateAssignment = mappingCalculator\n             .computeBestPossiblePartitionState(cache, idealState, resource, currentStateOutput);\n \n         if (partitionStateAssignment == null) {\n           LogUtil.logWarn(logger, _eventId,\n-              \"PartitionStateAssignment is null, resource: \" + resourceName);\n+              \"The calculated partitionStateAssignment is null, resource: \" + resourceName);\n           return false;\n         }\n \n+        // Set the calculated result to the output.\n+        output.setPreferenceLists(resourceName, idealState.getPreferenceLists());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "938aa5a3be6de6865e2bb0809b2511c2bc9e731b"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjAxMzQ4", "url": "https://github.com/apache/helix/pull/1359#pullrequestreview-488201348", "createdAt": "2020-09-14T22:34:31Z", "commit": {"oid": "938aa5a3be6de6865e2bb0809b2511c2bc9e731b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dde10ad44cf551cef0df1ec69339757405ec71c7", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/dde10ad44cf551cef0df1ec69339757405ec71c7", "committedDate": "2020-09-14T23:19:40Z", "message": "Don't output the best possible state calculate result if the result is not valid.\n\nThe invalid result may mislead the following stages in the pipeline and cause problems. For example, this change fixes the issue that resource monitor rebalance state may be inaccurately reported."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "938aa5a3be6de6865e2bb0809b2511c2bc9e731b", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/938aa5a3be6de6865e2bb0809b2511c2bc9e731b", "committedDate": "2020-09-10T23:55:10Z", "message": "Don't output the best possible state calculate result if the result is not valid.\n\nThe invalid result may mislead the following stages in the pipeline and cause problems. For example, this change fixes the issue that resource monitor rebalance state may be inaccurately reported."}, "afterCommit": {"oid": "dde10ad44cf551cef0df1ec69339757405ec71c7", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/dde10ad44cf551cef0df1ec69339757405ec71c7", "committedDate": "2020-09-14T23:19:40Z", "message": "Don't output the best possible state calculate result if the result is not valid.\n\nThe invalid result may mislead the following stages in the pipeline and cause problems. For example, this change fixes the issue that resource monitor rebalance state may be inaccurately reported."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4273, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}