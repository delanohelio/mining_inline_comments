{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyOTIxMDEy", "number": 1215, "title": "Remove the unnecessary checks to allow cleaning up map/list fields in the ClusterConfig and InstanceConfig.", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nResolves #627\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nThe null check or empty check disallow class users to clean up the corresponding fields.\nThis change remove these checkes in follow methods,\n\nClusterConfig.setDefaultCapacityMap\nClusterConfig.setGlobalRebalancePreference\nClusterConfig.setAbnormalStateResolverMap\nInstanceConfig.setInstanceCapacityMap\n\nTests\n\n The following tests are written for this issue:\n\nModify the existing tests to cover the new change.\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nhelix-core\n[ERROR] Failures:\n[ERROR]   TestAutoRebalance.testAutoRebalance:177 expected: but was:\n[INFO]\n[ERROR] Tests run: 1151, Failures: 1, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 01:17 h\n[INFO] Finished at: 2020-08-04T00:12:37-07:00\n[INFO] ------------------------------------------------------------------------\nRerun\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 19.694 s\n[INFO] Finished at: 2020-08-04T11:03:57-07:00\n[INFO] ------------------------------------------------------------------------\nhelix-rest\n[INFO] Tests run: 164, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 53.047 s\n[INFO] Finished at: 2020-08-04T11:05:11-07:00\n[INFO] ------------------------------------------------------------------------\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation (Optional)\n\n In case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-08-04T18:07:14Z", "url": "https://github.com/apache/helix/pull/1215", "merged": true, "mergeCommit": {"oid": "97fd6d4bb977e02f8d3e91c3adac65a3fce1e2b4"}, "closed": true, "closedAt": "2020-08-07T20:07:52Z", "author": {"login": "jiajunwang"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7vNTcgFqTQ2MTI0MjM5MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8qIQRAH2gAyNDYyOTIxMDEyOmUyN2E5YTQ0YTVkODFiODY4ZjUwMTE4NTJhYTAxMzJmYjhkOTIzNmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjQyMzkx", "url": "https://github.com/apache/helix/pull/1215#pullrequestreview-461242391", "createdAt": "2020-08-04T23:27:40Z", "commit": {"oid": "eb80c6c82afbe44bf307a58a5bcaaf60cf3ca3f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyNzo0MVrOG703TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyNzo0MVrOG703TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NTI5Mw==", "bodyText": "What is the meaning of setting to 'null' and empty? What is the difference between  'null' and empty?", "url": "https://github.com/apache/helix/pull/1215#discussion_r465385293", "createdAt": "2020-08-04T23:27:41Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java", "diffHunk": "@@ -709,9 +709,6 @@ public void enableP2PMessage(boolean enabled) {\n    * @param capacityKeys\n    */\n   public void setInstanceCapacityKeys(List<String> capacityKeys) {\n-    if (capacityKeys == null || capacityKeys.isEmpty()) {\n-      throw new IllegalArgumentException(\"The input instance capacity key list is empty.\");\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb80c6c82afbe44bf307a58a5bcaaf60cf3ca3f9"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTIzMzU4", "url": "https://github.com/apache/helix/pull/1215#pullrequestreview-461923358", "createdAt": "2020-08-05T18:34:41Z", "commit": {"oid": "eb80c6c82afbe44bf307a58a5bcaaf60cf3ca3f9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb80c6c82afbe44bf307a58a5bcaaf60cf3ca3f9", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/eb80c6c82afbe44bf307a58a5bcaaf60cf3ca3f9", "committedDate": "2020-08-04T05:03:57Z", "message": "Remove the unnecessary checks to allow cleaning up map/list fields in the ClusterConfig and InstanceConfig.\n\nThe null check or empty check disallow class users to clean up the corresponding fields.\nThis change remove these checkes in follow methods,\n- ClusterConfig.setDefaultCapacityMap\n- ClusterConfig.setGlobalRebalancePreference\n- ClusterConfig.setAbnormalStateResolverMap\n- InstanceConfig.setInstanceCapacityMap"}, "afterCommit": {"oid": "f48718250558f4646a203c6c10c2e10475612b24", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/f48718250558f4646a203c6c10c2e10475612b24", "committedDate": "2020-08-05T20:53:30Z", "message": "Change the behavior when input null as the config value."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDkxOTEx", "url": "https://github.com/apache/helix/pull/1215#pullrequestreview-462091911", "createdAt": "2020-08-05T23:33:29Z", "commit": {"oid": "f48718250558f4646a203c6c10c2e10475612b24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozMzozMFrOG8eGMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzozMzozMFrOG8eGMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MDg0OQ==", "bodyText": "If the value string is not valid integer representation, will this throw other Exception? If so, do you want to catch it and convert to IllegalArgumentException?", "url": "https://github.com/apache/helix/pull/1215#discussion_r466060849", "createdAt": "2020-08-05T23:33:30Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java", "diffHunk": "@@ -788,39 +791,43 @@ public void setDefaultPartitionWeightMap(Map<String, Integer> weightDataMap)\n   private void setDefaultCapacityMap(ClusterConfigProperty capacityPropertyType,\n       Map<String, Integer> capacityDataMap) throws IllegalArgumentException {\n     if (capacityDataMap == null) {\n-      throw new IllegalArgumentException(\"Default capacity data is null\");\n+      _record.getMapFields().remove(capacityPropertyType.name());\n+    } else {\n+      Map<String, String> data = new HashMap<>();\n+      capacityDataMap.entrySet().stream().forEach(entry -> {\n+        if (entry.getValue() < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f48718250558f4646a203c6c10c2e10475612b24"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDk0ODY4", "url": "https://github.com/apache/helix/pull/1215#pullrequestreview-462094868", "createdAt": "2020-08-05T23:42:18Z", "commit": {"oid": "f48718250558f4646a203c6c10c2e10475612b24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzo0MjoxOFrOG8eQhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzo0MjoxOFrOG8eQhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MzQ5NQ==", "bodyText": "I am a little bit confused.\nanyMatch(className -> className == null)) means if there is a className (key) in resolverMap, we throw exception.\nThen how about value in resolverMap, can it be null? What does it mean then?", "url": "https://github.com/apache/helix/pull/1215#discussion_r466063495", "createdAt": "2020-08-05T23:42:18Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java", "diffHunk": "@@ -859,13 +866,18 @@ public boolean isGlobalRebalanceAsyncModeEnabled() {\n \n   /**\n    * Set the abnormal state resolver class map.\n+   * @param resolverMap - the resolver map\n+   *                    If null, the resolver map item will be removed from the config.\n    */\n   public void setAbnormalStateResolverMap(Map<String, String> resolverMap) {\n-    if (resolverMap.values().stream()\n-        .anyMatch(className -> className == null || className.isEmpty())) {\n+    if (resolverMap != null && resolverMap.values().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f48718250558f4646a203c6c10c2e10475612b24"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMTE0ODgy", "url": "https://github.com/apache/helix/pull/1215#pullrequestreview-462114882", "createdAt": "2020-08-06T00:47:20Z", "commit": {"oid": "0e2f4469f0e3d5e0fc43a374bcc4eda8133ecdd8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo0NzoyMVrOG8fXKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo0NzoyMVrOG8fXKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4MTU3Nw==", "bodyText": "resolverMap can also contain key as null. Do we want to throw exception of this case?", "url": "https://github.com/apache/helix/pull/1215#discussion_r466081577", "createdAt": "2020-08-06T00:47:21Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java", "diffHunk": "@@ -859,14 +866,20 @@ public boolean isGlobalRebalanceAsyncModeEnabled() {\n \n   /**\n    * Set the abnormal state resolver class map.\n+   * @param resolverMap - the resolver map\n+   *                    If null, the resolver map item will be removed from the config.\n    */\n   public void setAbnormalStateResolverMap(Map<String, String> resolverMap) {\n-    if (resolverMap.values().stream()\n-        .anyMatch(className -> className == null || className.isEmpty())) {\n-      throw new IllegalArgumentException(\n-          \"Invalid Abnormal State Resolver Map definition. Class name cannot be empty.\");\n+    if (resolverMap == null) {\n+      _record.getMapFields().remove(ClusterConfigProperty.ABNORMAL_STATES_RESOLVER_MAP.name());\n+    } else {\n+      if (resolverMap.values().stream()\n+          .anyMatch(className -> className == null || className.isEmpty())) {\n+        throw new IllegalArgumentException(\n+            \"Invalid Abnormal State Resolver Map definition. Class name cannot be empty.\");\n+      }\n+      _record.setMapField(ClusterConfigProperty.ABNORMAL_STATES_RESOLVER_MAP.name(), resolverMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e2f4469f0e3d5e0fc43a374bcc4eda8133ecdd8"}, "originalPosition": 124}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55d203d3a332806882a436eacccfee2b9a887c9c", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/55d203d3a332806882a436eacccfee2b9a887c9c", "committedDate": "2020-08-07T05:14:56Z", "message": "Remove the unnecessary checks to allow cleaning up map/list fields in the ClusterConfig and InstanceConfig.\n\nThe null check or empty check disallow class users to clean up the corresponding fields.\nThis change remove these checkes in follow methods,\n- ClusterConfig.setDefaultCapacityMap\n- ClusterConfig.setGlobalRebalancePreference\n- ClusterConfig.setAbnormalStateResolverMap\n- InstanceConfig.setInstanceCapacityMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cdfe12c919c92cd1bc29075241beefa0f68b860", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/1cdfe12c919c92cd1bc29075241beefa0f68b860", "committedDate": "2020-08-07T05:14:56Z", "message": "Change the behavior when input null as the config value."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ab19c5cd0c59c66a5d386c2f8b9ccbc86f39a1a", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/2ab19c5cd0c59c66a5d386c2f8b9ccbc86f39a1a", "committedDate": "2020-08-07T05:14:56Z", "message": "Address comment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6af5d1b273a11f5b92eae88fcd26165b4e3c55", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/1d6af5d1b273a11f5b92eae88fcd26165b4e3c55", "committedDate": "2020-08-07T05:14:56Z", "message": "Add more check for the abnormal resolver configuration set method."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4268b3e7979d33aa12b3739e4ad9d6516de2a57", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/a4268b3e7979d33aa12b3739e4ad9d6516de2a57", "committedDate": "2020-08-06T02:38:32Z", "message": "Add more check for the abnormal resolver configuration set method."}, "afterCommit": {"oid": "1d6af5d1b273a11f5b92eae88fcd26165b4e3c55", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/1d6af5d1b273a11f5b92eae88fcd26165b4e3c55", "committedDate": "2020-08-07T05:14:56Z", "message": "Add more check for the abnormal resolver configuration set method."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNTMwNDA4", "url": "https://github.com/apache/helix/pull/1215#pullrequestreview-463530408", "createdAt": "2020-08-07T18:47:59Z", "commit": {"oid": "1d6af5d1b273a11f5b92eae88fcd26165b4e3c55"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODo0Nzo1OVrOG9kUwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODo0Nzo1OVrOG9kUwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxMTQ1Ng==", "bodyText": "nit.\nStateModel definition name can't be null, resolver class name cannot be empty can't be null or empty.", "url": "https://github.com/apache/helix/pull/1215#discussion_r467211456", "createdAt": "2020-08-07T18:47:59Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java", "diffHunk": "@@ -859,14 +866,24 @@ public boolean isGlobalRebalanceAsyncModeEnabled() {\n \n   /**\n    * Set the abnormal state resolver class map.\n+   * @param resolverMap - the resolver map\n+   *                    If null, the resolver map item will be removed from the config.\n    */\n   public void setAbnormalStateResolverMap(Map<String, String> resolverMap) {\n-    if (resolverMap.values().stream()\n-        .anyMatch(className -> className == null || className.isEmpty())) {\n-      throw new IllegalArgumentException(\n-          \"Invalid Abnormal State Resolver Map definition. Class name cannot be empty.\");\n+    if (resolverMap == null) {\n+      _record.getMapFields().remove(ClusterConfigProperty.ABNORMAL_STATES_RESOLVER_MAP.name());\n+    } else {\n+      if (resolverMap.entrySet().stream().anyMatch(e -> {\n+        String stateModelDefName = e.getKey();\n+        String className = e.getValue();\n+        return stateModelDefName == null || stateModelDefName.isEmpty() || className == null\n+            || className.isEmpty();\n+      })) {\n+        throw new IllegalArgumentException(\n+            \"Invalid Abnormal State Resolver Map definition. StateModel definition name and the resolver class name cannot be empty.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6af5d1b273a11f5b92eae88fcd26165b4e3c55"}, "originalPosition": 126}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNTQ3MzI3", "url": "https://github.com/apache/helix/pull/1215#pullrequestreview-463547327", "createdAt": "2020-08-07T19:03:34Z", "commit": {"oid": "1d6af5d1b273a11f5b92eae88fcd26165b4e3c55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e27a9a44a5d81b868f5011852aa0132fb8d9236e", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/e27a9a44a5d81b868f5011852aa0132fb8d9236e", "committedDate": "2020-08-07T20:06:34Z", "message": "Update ClusterConfig.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4631, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}