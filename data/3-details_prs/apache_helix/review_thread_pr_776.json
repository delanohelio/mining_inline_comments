{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NzM1NTUx", "number": 776, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDoyMjoxMFrODg1yBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDoyMzoxNFrODg1zDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzYyMTgwOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/model/CustomizedStateAggregationConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDoyMjoxMVrOFrRJMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMjo0OTo1NFrOFrVVHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMzk2OQ==", "bodyText": "can we have AGGREGATION_ENABLED_TYPES instead?", "url": "https://github.com/apache/helix/pull/776#discussion_r380913969", "createdAt": "2020-02-18T20:22:11Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/model/CustomizedStateAggregationConfig.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package org.apache.helix.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.helix.HelixProperty;\n+import org.apache.helix.ZNRecord;\n+\n+/**\n+ * CustomizedStateAggregation configurations\n+ */\n+public class CustomizedStateAggregationConfig extends HelixProperty {\n+  /**\n+   * Indicate which customized states will be aggregated.\n+   * NOTE: Do NOT use this field name directly, use its corresponding getter/setter in the\n+   * CustomizedStateAggregationConfig.\n+   */\n+  public enum CustomizedStateAggregationProperty {\n+    AGGREGATION_ENABLED_STATES,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e331c2895b0f473f1f0b86c757cf8fb8c97794"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1Mjg2Nw==", "bodyText": "My thinking is that this field include all \"states\" names that shall be aggregated. I did not have \"types\" concept defined anywhere. Please let me know if need further discussion.", "url": "https://github.com/apache/helix/pull/776#discussion_r380952867", "createdAt": "2020-02-18T21:43:47Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/main/java/org/apache/helix/model/CustomizedStateAggregationConfig.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package org.apache.helix.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.helix.HelixProperty;\n+import org.apache.helix.ZNRecord;\n+\n+/**\n+ * CustomizedStateAggregation configurations\n+ */\n+public class CustomizedStateAggregationConfig extends HelixProperty {\n+  /**\n+   * Indicate which customized states will be aggregated.\n+   * NOTE: Do NOT use this field name directly, use its corresponding getter/setter in the\n+   * CustomizedStateAggregationConfig.\n+   */\n+  public enum CustomizedStateAggregationProperty {\n+    AGGREGATION_ENABLED_STATES,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMzk2OQ=="}, "originalCommit": {"oid": "45e331c2895b0f473f1f0b86c757cf8fb8c97794"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4MjU1Ng==", "bodyText": "Discussed offline. We'll use type to refer each individual customized state.", "url": "https://github.com/apache/helix/pull/776#discussion_r380982556", "createdAt": "2020-02-18T22:49:54Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/main/java/org/apache/helix/model/CustomizedStateAggregationConfig.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package org.apache.helix.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.helix.HelixProperty;\n+import org.apache.helix.ZNRecord;\n+\n+/**\n+ * CustomizedStateAggregation configurations\n+ */\n+public class CustomizedStateAggregationConfig extends HelixProperty {\n+  /**\n+   * Indicate which customized states will be aggregated.\n+   * NOTE: Do NOT use this field name directly, use its corresponding getter/setter in the\n+   * CustomizedStateAggregationConfig.\n+   */\n+  public enum CustomizedStateAggregationProperty {\n+    AGGREGATION_ENABLED_STATES,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMzk2OQ=="}, "originalCommit": {"oid": "45e331c2895b0f473f1f0b86c757cf8fb8c97794"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzYyNDQ3OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/model/CustomizedStateAggregationConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDoyMzoxNFrOFrRLAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDoyMzoxNFrOFrRLAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxNDQzMw==", "bodyText": "If we decided to go with AGGREGATION_ENABLED_TYPE, please change this name as well.", "url": "https://github.com/apache/helix/pull/776#discussion_r380914433", "createdAt": "2020-02-18T20:23:14Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/model/CustomizedStateAggregationConfig.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package org.apache.helix.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.helix.HelixProperty;\n+import org.apache.helix.ZNRecord;\n+\n+/**\n+ * CustomizedStateAggregation configurations\n+ */\n+public class CustomizedStateAggregationConfig extends HelixProperty {\n+  /**\n+   * Indicate which customized states will be aggregated.\n+   * NOTE: Do NOT use this field name directly, use its corresponding getter/setter in the\n+   * CustomizedStateAggregationConfig.\n+   */\n+  public enum CustomizedStateAggregationProperty {\n+    AGGREGATION_ENABLED_STATES,\n+  }\n+\n+  /**\n+   * Instantiate the CustomizedStateAggregationConfig\n+   * @param cluster\n+   */\n+  public CustomizedStateAggregationConfig(String cluster) {\n+    super(cluster);\n+  }\n+\n+  /**\n+   * Instantiate with a pre-populated record\n+   * @param record a ZNRecord corresponding to a CustomizedStateAggregationConfig\n+   */\n+  public CustomizedStateAggregationConfig(ZNRecord record) {\n+    super(record);\n+  }\n+\n+  /**\n+   * Instantiate the config using each field individually.\n+   * Users should use CustomizedStateAggregationConfig.Builder to create\n+   * CustomizedStateAggregationConfig.\n+   * @param cluster\n+   * @param aggregationEnabledStates\n+   */\n+  public CustomizedStateAggregationConfig(String cluster, List<String> aggregationEnabledStates) {\n+    super(cluster);\n+    _record.setListField(CustomizedStateAggregationProperty.AGGREGATION_ENABLED_STATES.name(),\n+        aggregationEnabledStates);\n+\n+  }\n+\n+  /**\n+   * Set the AGGREGATION_ENABLED_STATES field.\n+   * @param aggregationEnabledStates\n+   */\n+  public void setAggregationEnabledStates(List<String> aggregationEnabledStates) {\n+    _record.setListField(CustomizedStateAggregationProperty.AGGREGATION_ENABLED_STATES.name(),\n+        aggregationEnabledStates);\n+  }\n+\n+  /**\n+   * Get the AGGREGATION_ENABLED_STATES field.\n+   * @return AGGREGATION_ENABLED_STATES field.\n+   */\n+  public List<String> getAggregationEnabledStates() {\n+    return _record\n+        .getListField(CustomizedStateAggregationProperty.AGGREGATION_ENABLED_STATES.name());\n+  }\n+\n+  public static class Builder {\n+    private String _clusterName = null;\n+    private List<String> _aggregationEnabledStates;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e331c2895b0f473f1f0b86c757cf8fb8c97794"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1644, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}