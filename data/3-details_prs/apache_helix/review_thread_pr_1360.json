{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1NDU5NzYy", "number": 1360, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTozMzoxOVrOEjYosw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNDoxMToyOVrOEjaYCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTM5MjUxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/TestAlertingRebalancerFailure.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTozMzoxOVrOHRtPqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTozNzo0NFrOHT-v1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyOTEzMQ==", "bodyText": "Let us make sure I understand this test fix correctly. With #1359 fix, the net effect is that previous missing \"rebalance error\" metric is added. Also, avoid setting empty best possible state to the output which is used by later rebalance stage.\nIn this test, we did not assert anything about rebalance error metrics; thus, even missing one rebalance failure metrics, it would cause this test not stable. So why do we need the change in this test?\nPut it another way, what caused the this test unstable?", "url": "https://github.com/apache/helix/pull/1360#discussion_r488329131", "createdAt": "2020-09-15T01:33:19Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestAlertingRebalancerFailure.java", "diffHunk": "@@ -118,18 +120,25 @@ public void beforeMethod() throws IOException {\n \n   @Test\n   public void testParticipantUnavailable() throws Exception {\n-    _gSetupTool.addResourceToCluster(CLUSTER_NAME, testDb, 5,\n-        BuiltInStateModelDefinitions.MasterSlave.name(), RebalanceMode.FULL_AUTO.name());\n+    IdealState idealState = new FullAutoModeISBuilder(testDb)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e90e3767fbf5851b60a73a902b8ef6d77a6ca04"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMzMDc5MA==", "bodyText": "I see, this assertion may not work, if pipeline run another cycle?\n    pollForError(accessor, errorNodeKey);\n    checkRebalanceFailureGauge(true);\n    checkResourceBestPossibleCalFailureState(\n        ResourceMonitor.RebalanceStatus.BEST_POSSIBLE_STATE_CAL_FAILED, testDb);", "url": "https://github.com/apache/helix/pull/1360#discussion_r488330790", "createdAt": "2020-09-15T01:39:29Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestAlertingRebalancerFailure.java", "diffHunk": "@@ -118,18 +120,25 @@ public void beforeMethod() throws IOException {\n \n   @Test\n   public void testParticipantUnavailable() throws Exception {\n-    _gSetupTool.addResourceToCluster(CLUSTER_NAME, testDb, 5,\n-        BuiltInStateModelDefinitions.MasterSlave.name(), RebalanceMode.FULL_AUTO.name());\n+    IdealState idealState = new FullAutoModeISBuilder(testDb)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyOTEzMQ=="}, "originalCommit": {"oid": "5e90e3767fbf5851b60a73a902b8ef6d77a6ca04"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMzA0Nw==", "bodyText": "Out of date. Let's focus on the newer change.", "url": "https://github.com/apache/helix/pull/1360#discussion_r490713047", "createdAt": "2020-09-18T05:37:44Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestAlertingRebalancerFailure.java", "diffHunk": "@@ -118,18 +120,25 @@ public void beforeMethod() throws IOException {\n \n   @Test\n   public void testParticipantUnavailable() throws Exception {\n-    _gSetupTool.addResourceToCluster(CLUSTER_NAME, testDb, 5,\n-        BuiltInStateModelDefinitions.MasterSlave.name(), RebalanceMode.FULL_AUTO.name());\n+    IdealState idealState = new FullAutoModeISBuilder(testDb)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyOTEzMQ=="}, "originalCommit": {"oid": "5e90e3767fbf5851b60a73a902b8ef6d77a6ca04"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTY1NzcyOnYy", "diffSide": "LEFT", "path": "helix-core/src/test/java/org/apache/helix/integration/TestAlertingRebalancerFailure.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzo1OTo0MVrOHRvpqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMToxNzozMlrOHWMuLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2ODU1NQ==", "bodyText": "Previously, we use AutoRebalancer with AutoRebalanceStrategy. With this change, we use DelayedAutoRebalancer with CrushEd strategy.\nThe question is that now, by default with this change, we will use DelayedAutoRebalancer by default. If we forget to add CrushEdRebalanceStrategy, the default seems to be AutoRebalanceStrategy. Will that work?", "url": "https://github.com/apache/helix/pull/1360#discussion_r488368555", "createdAt": "2020-09-15T03:59:41Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestAlertingRebalancerFailure.java", "diffHunk": "@@ -161,7 +170,8 @@ public void testParticipantUnavailable() throws Exception {\n   @Test(dependsOnMethods = \"testParticipantUnavailable\")\n   public void testTagSetIncorrect() throws Exception {\n     _gSetupTool.addResourceToCluster(CLUSTER_NAME, testDb, 5,\n-        BuiltInStateModelDefinitions.MasterSlave.name(), RebalanceMode.FULL_AUTO.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e90e3767fbf5851b60a73a902b8ef6d77a6ca04"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNDA0Nw==", "bodyText": "It works in production. But it does not work in the test.\nThe reason is that our verifier does not read the controller cache (which is only used by the DelayedAutoRebalancer).\nSo the controller only does one calculation, and later pipeline will only read from the cache. But the verifier is calculating from scratch every time. And since the AutoRebalanceStrategy is not stable, the verify result will never converge.\nIf we change to CrushEd, then even the verifier computing from scratch, the result would be the same. And our tests can pass.", "url": "https://github.com/apache/helix/pull/1360#discussion_r490714047", "createdAt": "2020-09-18T05:41:01Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestAlertingRebalancerFailure.java", "diffHunk": "@@ -161,7 +170,8 @@ public void testParticipantUnavailable() throws Exception {\n   @Test(dependsOnMethods = \"testParticipantUnavailable\")\n   public void testTagSetIncorrect() throws Exception {\n     _gSetupTool.addResourceToCluster(CLUSTER_NAME, testDb, 5,\n-        BuiltInStateModelDefinitions.MasterSlave.name(), RebalanceMode.FULL_AUTO.name());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2ODU1NQ=="}, "originalCommit": {"oid": "5e90e3767fbf5851b60a73a902b8ef6d77a6ca04"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNTA4NQ==", "bodyText": "The argument here is that we do want to deprecate AutoRebalancer and AutoRebalanceStrategy. Since they are buggy and unstable. So even the behavior change will hurt some of their use cases (any logic that use the bestpossible verifier), we will take it.\nIf this assumption does not hold, then we can never change the default rebalancer to DelayedAutoRebalancer.", "url": "https://github.com/apache/helix/pull/1360#discussion_r490715085", "createdAt": "2020-09-18T05:44:33Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestAlertingRebalancerFailure.java", "diffHunk": "@@ -161,7 +170,8 @@ public void testParticipantUnavailable() throws Exception {\n   @Test(dependsOnMethods = \"testParticipantUnavailable\")\n   public void testTagSetIncorrect() throws Exception {\n     _gSetupTool.addResourceToCluster(CLUSTER_NAME, testDb, 5,\n-        BuiltInStateModelDefinitions.MasterSlave.name(), RebalanceMode.FULL_AUTO.name());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2ODU1NQ=="}, "originalCommit": {"oid": "5e90e3767fbf5851b60a73a902b8ef6d77a6ca04"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyNTY4NQ==", "bodyText": "So controller cache only works for DelayedAutoRebalancer and AutoRebalanceStrategy? I am not sure exactly where it is. Can you point to a code link?", "url": "https://github.com/apache/helix/pull/1360#discussion_r491225685", "createdAt": "2020-09-18T22:49:10Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestAlertingRebalancerFailure.java", "diffHunk": "@@ -161,7 +170,8 @@ public void testParticipantUnavailable() throws Exception {\n   @Test(dependsOnMethods = \"testParticipantUnavailable\")\n   public void testTagSetIncorrect() throws Exception {\n     _gSetupTool.addResourceToCluster(CLUSTER_NAME, testDb, 5,\n-        BuiltInStateModelDefinitions.MasterSlave.name(), RebalanceMode.FULL_AUTO.name());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2ODU1NQ=="}, "originalCommit": {"oid": "5e90e3767fbf5851b60a73a902b8ef6d77a6ca04"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzOTE1MA==", "bodyText": "Synced offline with Kai. It is clear now.", "url": "https://github.com/apache/helix/pull/1360#discussion_r493039150", "createdAt": "2020-09-22T21:17:32Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestAlertingRebalancerFailure.java", "diffHunk": "@@ -161,7 +170,8 @@ public void testParticipantUnavailable() throws Exception {\n   @Test(dependsOnMethods = \"testParticipantUnavailable\")\n   public void testTagSetIncorrect() throws Exception {\n     _gSetupTool.addResourceToCluster(CLUSTER_NAME, testDb, 5,\n-        BuiltInStateModelDefinitions.MasterSlave.name(), RebalanceMode.FULL_AUTO.name());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2ODU1NQ=="}, "originalCommit": {"oid": "5e90e3767fbf5851b60a73a902b8ef6d77a6ca04"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTY3NzUyOnYy", "diffSide": "LEFT", "path": "helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestRebalancerMetrics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNDoxMToyOVrOHRv1Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTo0MjowOVrOHT-1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM3MTQ5MQ==", "bodyText": "why remove this line?", "url": "https://github.com/apache/helix/pull/1360#discussion_r488371491", "createdAt": "2020-09-15T04:11:29Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestRebalancerMetrics.java", "diffHunk": "@@ -128,8 +128,10 @@ public void testLoadBalanceMetrics() {\n     event.addAttribute(AttributeName.CURRENT_STATE.name(), currentStateOutput);\n     setupLiveInstances(4);\n \n-    runStage(event, new ReadClusterDataStage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e90e3767fbf5851b60a73a902b8ef6d77a6ca04"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNDQxOA==", "bodyText": "It is moved to later. Since we do need to clear the cache before running this stage.", "url": "https://github.com/apache/helix/pull/1360#discussion_r490714418", "createdAt": "2020-09-18T05:42:09Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestRebalancerMetrics.java", "diffHunk": "@@ -128,8 +128,10 @@ public void testLoadBalanceMetrics() {\n     event.addAttribute(AttributeName.CURRENT_STATE.name(), currentStateOutput);\n     setupLiveInstances(4);\n \n-    runStage(event, new ReadClusterDataStage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM3MTQ5MQ=="}, "originalCommit": {"oid": "5e90e3767fbf5851b60a73a902b8ef6d77a6ca04"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 952, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}