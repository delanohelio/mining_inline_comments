{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MTQ4NTM1", "number": 1033, "title": "Add path existing check for customized state", "bodyText": "Issues\n\n[ X] My PR addresses the following Helix issues and references them in the PR description:\n\n(#1032 )\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nThis PR adds check for the existence of customized state path before adding listener to it. The check is mainly for backward compatibility, as our customers may still use previous helix, and do not have customized state root path created. In that case, we should not add listener to non existing path.\nTests\n\n[X ] The following is the result of the \"mvn test\" command on the appropriate module:\n\nhelix-core:\n[ERROR] Tests run: 1147, Failures: 1, Errors: 0, Skipped: 1, Time elapsed: 4,717.53 s <<< FAILURE! - in TestSuite\n[ERROR] testDisableCluster(org.apache.helix.integration.rebalancer.TestClusterInMaintenanceModeWhenReachingMaxPartition)  Time elapsed: 5.078 s  <<< FAILURE!\njava.lang.AssertionError: expected: but was:\nat org.apache.helix.integration.rebalancer.TestClusterInMaintenanceModeWhenReachingMaxPartition.testDisableCluster(TestClusterInMaintenanceModeWhenReachingMaxPartition.java:119)\n[INFO]\n[INFO] Results:\n[INFO]\n[ERROR] Failures:\n[ERROR]   TestClusterInMaintenanceModeWhenReachingMaxPartition.testDisableCluster:119 expected: but was:\n[INFO]\n[ERROR] Tests run: 1147, Failures: 1, Errors: 0, Skipped: 1\n[INFO]\nhelix-rest:\n[INFO] Tests run: 160, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 180.82 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 160, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  03:04 min\n[INFO] Finished at: 2020-05-27T14:11:30-07:00\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation (Optional)\n\n In case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-05-27T22:36:40Z", "url": "https://github.com/apache/helix/pull/1033", "merged": true, "mergeCommit": {"oid": "48da1680290b04f815f691c6d3e0c1f34db8550a"}, "closed": true, "closedAt": "2020-06-05T17:34:32Z", "author": {"login": "zhangmeng916"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclf8IagH2gAyNDI0MTQ4NTM1Ojc2OGVjODA5MGI5YjI3ODg4ZDE0MGFiZGQ5YjQ3YmE4YzUyYzk1NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoWL44gFqTQyNTQ5MzA5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "768ec8090b9b27888d140abdd9b47ba8c52c9545", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/768ec8090b9b27888d140abdd9b47ba8c52c9545", "committedDate": "2020-05-27T21:14:01Z", "message": "Add path existing check for customized state"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NjU5OTc5", "url": "https://github.com/apache/helix/pull/1033#pullrequestreview-419659979", "createdAt": "2020-05-27T22:42:48Z", "commit": {"oid": "768ec8090b9b27888d140abdd9b47ba8c52c9545"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjo0Mjo0OFrOGbfrjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjo0NToyM1rOGbfvLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4Mzc4OQ==", "bodyText": "You're creating a PropertyKey object with the given instance name and checking whether it's null? How would it be null if you've just created the path? In other words, when would this condition ever evaluate to false?\nDid you mean to check whether the path exists in ZooKeeper? If so, shouldn't you do an exist() check with a ZkClient-based API?\nUnless I'm mistaken and we actually somehow pre-populate the KeyBuilder with a whitelist of instances for the Customized State feature and returns null if the instance doesn't show up in the list?", "url": "https://github.com/apache/helix/pull/1033#discussion_r431483789", "createdAt": "2020-05-27T22:42:48Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -1256,14 +1256,18 @@ protected void checkLiveInstancesObservation(List<LiveInstance> liveInstances,\n \n         for (String instance : curInstances.keySet()) {\n           if (lastInstances == null || !lastInstances.containsKey(instance)) {\n-            try {\n-              manager.addCustomizedStateRootChangeListener(this, instance);\n-              logger.info(manager.getInstanceName() + \" added customized root change listener for\"\n-                  + \" \" + instance\n-                  + \", listener: \" + this);\n-            } catch (Exception e) {\n-              logger.error(\"Fail to add customized root change listener for instance: \" + instance,\n-                  e);\n+            PropertyKey propertyKey =\n+                keyBuilder.customizedStatesRoot(instance);\n+            if (propertyKey.getPath() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "768ec8090b9b27888d140abdd9b47ba8c52c9545"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4NDcxNw==", "bodyText": "\"customized root change\" is confusing. Could we explicitly state what it is? For example,\n\"Added (or Failed to add) the root path for Customized State ...\"\nAlso, this log doesn't seem entirely necessary. Don't need to log every time we add a listener - I'd make this a debug log so as not to pollute the log.", "url": "https://github.com/apache/helix/pull/1033#discussion_r431484717", "createdAt": "2020-05-27T22:45:23Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -1256,14 +1256,18 @@ protected void checkLiveInstancesObservation(List<LiveInstance> liveInstances,\n \n         for (String instance : curInstances.keySet()) {\n           if (lastInstances == null || !lastInstances.containsKey(instance)) {\n-            try {\n-              manager.addCustomizedStateRootChangeListener(this, instance);\n-              logger.info(manager.getInstanceName() + \" added customized root change listener for\"\n-                  + \" \" + instance\n-                  + \", listener: \" + this);\n-            } catch (Exception e) {\n-              logger.error(\"Fail to add customized root change listener for instance: \" + instance,\n-                  e);\n+            PropertyKey propertyKey =\n+                keyBuilder.customizedStatesRoot(instance);\n+            if (propertyKey.getPath() != null) {\n+              try {\n+                manager.addCustomizedStateRootChangeListener(this, instance);\n+                logger.info(\n+                    manager.getInstanceName() + \" added customized root change listener for\" + \" \" + instance\n+                        + \", listener: \" + this);\n+              } catch (Exception e) {\n+                logger.error(\"Fail to add customized root change listener for instance: \" + instance,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "768ec8090b9b27888d140abdd9b47ba8c52c9545"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6704924cc97d3d86dff8105b7299d744bae44ab", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/c6704924cc97d3d86dff8105b7299d744bae44ab", "committedDate": "2020-05-27T23:19:04Z", "message": "modify check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5Njc2MDcz", "url": "https://github.com/apache/helix/pull/1033#pullrequestreview-419676073", "createdAt": "2020-05-27T23:22:27Z", "commit": {"oid": "c6704924cc97d3d86dff8105b7299d744bae44ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoyMjoyN1rOGbggMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoyMjoyN1rOGbggMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NzI2Nw==", "bodyText": "Do you think it would be useful to log (warn) if this evaluates to false?", "url": "https://github.com/apache/helix/pull/1033#discussion_r431497267", "createdAt": "2020-05-27T23:22:27Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixManager.java", "diffHunk": "@@ -591,8 +591,11 @@ public void addCurrentStateChangeListener(org.apache.helix.CurrentStateChangeLis\n   @Override\n   public void addCustomizedStateRootChangeListener(CustomizedStateRootChangeListener listener,\n       String instanceName) throws Exception {\n-    addListener(listener, new Builder(_clusterName).customizedStatesRoot(instanceName),\n-        ChangeType.CUSTOMIZED_STATE_ROOT, new EventType[]{EventType.NodeChildrenChanged});\n+    PropertyKey propertyKey = _dataAccessor.keyBuilder().customizedStatesRoot(instanceName);\n+    if (_zkclient.exists(propertyKey.getPath())) {\n+      addListener(listener, new Builder(_clusterName).customizedStatesRoot(instanceName),\n+          ChangeType.CUSTOMIZED_STATE_ROOT, new EventType[]{EventType.NodeChildrenChanged});\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6704924cc97d3d86dff8105b7299d744bae44ab"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NjgxMTIz", "url": "https://github.com/apache/helix/pull/1033#pullrequestreview-419681123", "createdAt": "2020-05-27T23:35:38Z", "commit": {"oid": "c6704924cc97d3d86dff8105b7299d744bae44ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzozNTozOFrOGbgwqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzozNTozOFrOGbgwqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUwMTQ4Mw==", "bodyText": "I am concerned about the performance. This check adds more time for adding listeners because of network latency. I wonder if there is a better way so this check could be avoided.", "url": "https://github.com/apache/helix/pull/1033#discussion_r431501483", "createdAt": "2020-05-27T23:35:38Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixManager.java", "diffHunk": "@@ -591,8 +591,11 @@ public void addCurrentStateChangeListener(org.apache.helix.CurrentStateChangeLis\n   @Override\n   public void addCustomizedStateRootChangeListener(CustomizedStateRootChangeListener listener,\n       String instanceName) throws Exception {\n-    addListener(listener, new Builder(_clusterName).customizedStatesRoot(instanceName),\n-        ChangeType.CUSTOMIZED_STATE_ROOT, new EventType[]{EventType.NodeChildrenChanged});\n+    PropertyKey propertyKey = _dataAccessor.keyBuilder().customizedStatesRoot(instanceName);\n+    if (_zkclient.exists(propertyKey.getPath())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6704924cc97d3d86dff8105b7299d744bae44ab"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24cb974cb548df3a4906da625743ba9c9e920438", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/24cb974cb548df3a4906da625743ba9c9e920438", "committedDate": "2020-05-31T18:18:12Z", "message": "temporary solution to remove stack trace"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjMxNzQ4", "url": "https://github.com/apache/helix/pull/1033#pullrequestreview-422231748", "createdAt": "2020-06-01T22:47:55Z", "commit": {"oid": "24cb974cb548df3a4906da625743ba9c9e920438"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo0Nzo1NVrOGdch9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo0OTozNFrOGdcj2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyOTMzNA==", "bodyText": "I understand you may want to keep logging as original. But since you are changing the logging code here, I suggest changing it to use parameterized logging: logger.info(\"Hello {}\", world);. This parameterized logging has benefits of reduce string concatenation overhead when logging level info is not enabled, and easier to read in the code. Same as the other places in this PR.\nNit, I realized this for loop needs unindent.", "url": "https://github.com/apache/helix/pull/1033#discussion_r433529334", "createdAt": "2020-06-01T22:47:55Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -1258,12 +1258,12 @@ protected void checkLiveInstancesObservation(List<LiveInstance> liveInstances,\n           if (lastInstances == null || !lastInstances.containsKey(instance)) {\n             try {\n               manager.addCustomizedStateRootChangeListener(this, instance);\n-              logger.info(manager.getInstanceName() + \" added customized root change listener for\"\n-                  + \" \" + instance\n-                  + \", listener: \" + this);\n+              logger.info(manager.getInstanceName() + \" added root path listener for customized \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24cb974cb548df3a4906da625743ba9c9e920438"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyOTgxOA==", "bodyText": "fail to -> Failed to ? Same for the others.", "url": "https://github.com/apache/helix/pull/1033#discussion_r433529818", "createdAt": "2020-06-01T22:49:34Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -639,8 +638,13 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n             }\n           }\n         } catch (ZkNoNodeException | HelixMetaDataAccessException e) {\n-          logger.warn(\n-              \"fail to subscribe child/data change. path: \" + path + \", listener: \" + _listener, e);\n+          if (_changeType == CUSTOMIZED_STATE_ROOT) {\n+            logger.warn(\n+                \"fail to subscribe child/data change. path: \" + path + \", listener: \" + _listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24cb974cb548df3a4906da625743ba9c9e920438"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c62b51133b4cf0d48cb00ac5094c1cfa2a68f10", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/6c62b51133b4cf0d48cb00ac5094c1cfa2a68f10", "committedDate": "2020-06-02T18:28:08Z", "message": "change all log to parameterized log"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef24cf36c193828d8da2fff3b8cc17e2351685ae", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/ef24cf36c193828d8da2fff3b8cc17e2351685ae", "committedDate": "2020-06-02T15:48:39Z", "message": "change all log to parameterized log"}, "afterCommit": {"oid": "6c62b51133b4cf0d48cb00ac5094c1cfa2a68f10", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/6c62b51133b4cf0d48cb00ac5094c1cfa2a68f10", "committedDate": "2020-06-02T18:28:08Z", "message": "change all log to parameterized log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c648200a8b9c3af77f408a00008468832572ddab", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/c648200a8b9c3af77f408a00008468832572ddab", "committedDate": "2020-06-03T05:48:31Z", "message": "final improvement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzOTQ3Mzg1", "url": "https://github.com/apache/helix/pull/1033#pullrequestreview-423947385", "createdAt": "2020-06-03T21:23:10Z", "commit": {"oid": "6c62b51133b4cf0d48cb00ac5094c1cfa2a68f10"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMToyMzoxMFrOGeuGiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMToyMzo1MVrOGeuHwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg2NTgwMw==", "bodyText": "+ \"state change for\" + \" \"\nCan we please refine the format as well.", "url": "https://github.com/apache/helix/pull/1033#discussion_r434865803", "createdAt": "2020-06-03T21:23:10Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -1258,12 +1258,12 @@ protected void checkLiveInstancesObservation(List<LiveInstance> liveInstances,\n           if (lastInstances == null || !lastInstances.containsKey(instance)) {\n             try {\n               manager.addCustomizedStateRootChangeListener(this, instance);\n-              logger.info(manager.getInstanceName() + \" added customized root change listener for\"\n-                  + \" \" + instance\n-                  + \", listener: \" + this);\n+              logger.info(manager.getInstanceName() + \" added root path listener for customized \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyOTMzNA=="}, "originalCommit": {"oid": "24cb974cb548df3a4906da625743ba9c9e920438"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg2NjExNA==", "bodyText": "Why use 2 separate sections for the constant string contents?", "url": "https://github.com/apache/helix/pull/1033#discussion_r434866114", "createdAt": "2020-06-03T21:23:51Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -1258,12 +1258,12 @@ protected void checkLiveInstancesObservation(List<LiveInstance> liveInstances,\n           if (lastInstances == null || !lastInstances.containsKey(instance)) {\n             try {\n               manager.addCustomizedStateRootChangeListener(this, instance);\n-              logger.info(manager.getInstanceName() + \" added customized root change listener for\"\n-                  + \" \" + instance\n-                  + \", listener: \" + this);\n+              logger.info(manager.getInstanceName() + \" added root path listener for customized \"\n+                  + \"state change for\" + \" \" + instance + \", listener: \" + this);\n             } catch (Exception e) {\n-              logger.error(\"Fail to add customized root change listener for instance: \" + instance,\n-                  e);\n+              logger.error(\n+                  \"Fail to add root path listener for customized state change\" + \"for instance: \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c62b51133b4cf0d48cb00ac5094c1cfa2a68f10"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "401ae6f679b5d6c3071e298616c8bbe84b7092c8", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/401ae6f679b5d6c3071e298616c8bbe84b7092c8", "committedDate": "2020-06-03T23:23:49Z", "message": "fix comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDcwMDM4", "url": "https://github.com/apache/helix/pull/1033#pullrequestreview-424070038", "createdAt": "2020-06-04T03:03:20Z", "commit": {"oid": "401ae6f679b5d6c3071e298616c8bbe84b7092c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMzowMzoyMVrOGe0NcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMzowMzoyMVrOGe0NcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2NTg3Mw==", "bodyText": "Can we just merge these two conditions? There's practically no difference. Or catch exceptions separately and log an appropriate, differentiated log message. Otherwise, this just looks like duplicate code.", "url": "https://github.com/apache/helix/pull/1033#discussion_r434965873", "createdAt": "2020-06-04T03:03:21Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -639,14 +639,20 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n             }\n           }\n         } catch (ZkNoNodeException | HelixMetaDataAccessException e) {\n-          logger.warn(\n-              \"fail to subscribe child/data change. path: \" + path + \", listener: \" + _listener, e);\n+          // TODO: avoid calling getChildren for path that does not exist\n+          if (_changeType == CUSTOMIZED_STATE_ROOT) {\n+            logger.warn(\"Failed to subscribe child/data change. path: {}, listener: {}\", path,\n+                _listener);\n+          } else {\n+            logger.warn(\"Failed to subscribe child/data change. path: {}, listener: {}\", path,\n+                _listener, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "401ae6f679b5d6c3071e298616c8bbe84b7092c8"}, "originalPosition": 178}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ad37facb550a72509f281b387d7c56ad1bdf0b8", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/2ad37facb550a72509f281b387d7c56ad1bdf0b8", "committedDate": "2020-06-04T16:23:34Z", "message": "change log"}, "afterCommit": {"oid": "382f4582ae57cff353bf96d19ecb6539e363f87c", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/382f4582ae57cff353bf96d19ecb6539e363f87c", "committedDate": "2020-06-04T17:51:52Z", "message": "change log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d41a8ac5009770739f635a386e85e5ddf7423a7", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/8d41a8ac5009770739f635a386e85e5ddf7423a7", "committedDate": "2020-06-05T16:31:43Z", "message": "change log"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "382f4582ae57cff353bf96d19ecb6539e363f87c", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/382f4582ae57cff353bf96d19ecb6539e363f87c", "committedDate": "2020-06-04T17:51:52Z", "message": "change log"}, "afterCommit": {"oid": "8d41a8ac5009770739f635a386e85e5ddf7423a7", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/8d41a8ac5009770739f635a386e85e5ddf7423a7", "committedDate": "2020-06-05T16:31:43Z", "message": "change log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NDYwNzQw", "url": "https://github.com/apache/helix/pull/1033#pullrequestreview-425460740", "createdAt": "2020-06-05T16:45:15Z", "commit": {"oid": "8d41a8ac5009770739f635a386e85e5ddf7423a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjo0NToxNVrOGf1xVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjo0NToxNVrOGf1xVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA0MDAyMw==", "bodyText": "if (_changeType != CUSTOMIZED_STATE_ROOT) {\n  LOG.warn(\"Failed to subscribe .... Instance doesn't support Customized State!, path, _listerner);\n} else {\n  LOG.warn(\"Failed to.... \");\n}\n\nHow about this? this way you don't print all the exceptions stack trace, and it doesn't look like it's duplicate code, and the message is clear.", "url": "https://github.com/apache/helix/pull/1033#discussion_r436040023", "createdAt": "2020-06-05T16:45:15Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -639,14 +639,18 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n             }\n           }\n         } catch (ZkNoNodeException | HelixMetaDataAccessException e) {\n-          logger.warn(\n-              \"fail to subscribe child/data change. path: \" + path + \", listener: \" + _listener, e);\n+          logger.warn(\"Failed to subscribe child/data change. path: {}, listener: {}\", path,\n+              _listener);\n+          // TODO: avoid calling getChildren for path that does not exist\n+          if (_changeType != CUSTOMIZED_STATE_ROOT) {\n+            logger.warn(\"\", e);\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d41a8ac5009770739f635a386e85e5ddf7423a7"}, "originalPosition": 177}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee9a92862a5cbd3499cbc1dcc3c0e745e1155158", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/ee9a92862a5cbd3499cbc1dcc3c0e745e1155158", "committedDate": "2020-06-05T16:54:41Z", "message": "change log warn"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NDkzMDk0", "url": "https://github.com/apache/helix/pull/1033#pullrequestreview-425493094", "createdAt": "2020-06-05T17:33:57Z", "commit": {"oid": "ee9a92862a5cbd3499cbc1dcc3c0e745e1155158"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4404, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}