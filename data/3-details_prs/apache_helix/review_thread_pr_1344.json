{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MzY1MDUx", "number": 1344, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNTozOToyMVrOEf1EVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMTowMTo0NlrOEnRSkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODEwNzczOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNTozOToyMVrOHMWoLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjoxNjoxNlrOHM5PUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxNTY5NA==", "bodyText": "I feel like we could create an empty list here. So we won\u2019t return a null and no need to do the nullptr check later.", "url": "https://github.com/apache/helix/pull/1344#discussion_r482715694", "createdAt": "2020-09-03T05:39:21Z", "author": {"login": "xyuanlu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -533,7 +533,7 @@ public void invoke(NotificationContext changeContext) throws Exception {\n     }\n   }\n \n-  private void subscribeChildChange(String path, NotificationContext.Type callbackType) {\n+  private List<String> subscribeChildChange(String path, NotificationContext.Type callbackType) {\n     if (callbackType == NotificationContext.Type.INIT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cdc6ce5d03d8e7482830c44be1a132febe2a2aa"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczOTkyOA==", "bodyText": "I thought about it. There is still a possibility that childrenSubscribeResult.getChildren() returns null. The caller still needs to do the null check. So I just make it consistent with zkClient.subscribeChildChanges and let the caller determine the behavior.\nI also thought about using Optional, but it doesn't seem that would add too much value. And Optional will add more overhead than null. The original code also does null check, so for now I'd keep the change minimum. Later we will still have a better design and hopefully will make the code cleaner.", "url": "https://github.com/apache/helix/pull/1344#discussion_r482739928", "createdAt": "2020-09-03T06:43:45Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -533,7 +533,7 @@ public void invoke(NotificationContext changeContext) throws Exception {\n     }\n   }\n \n-  private void subscribeChildChange(String path, NotificationContext.Type callbackType) {\n+  private List<String> subscribeChildChange(String path, NotificationContext.Type callbackType) {\n     if (callbackType == NotificationContext.Type.INIT", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxNTY5NA=="}, "originalCommit": {"oid": "6cdc6ce5d03d8e7482830c44be1a132febe2a2aa"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwMTgxNA==", "bodyText": "Is it possible that you just return ChildrenSubscribeResult?\nThen if _isInstalled is false, no one will read the children. Otherwise, if _isInstalled, then the list should never be null.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483201814", "createdAt": "2020-09-03T19:19:00Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -533,7 +533,7 @@ public void invoke(NotificationContext changeContext) throws Exception {\n     }\n   }\n \n-  private void subscribeChildChange(String path, NotificationContext.Type callbackType) {\n+  private List<String> subscribeChildChange(String path, NotificationContext.Type callbackType) {\n     if (callbackType == NotificationContext.Type.INIT", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxNTY5NA=="}, "originalCommit": {"oid": "6cdc6ce5d03d8e7482830c44be1a132febe2a2aa"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI4Mjc3MQ==", "bodyText": "I also thought about it. But from the code, if _isInstalled == true, it is still possible that the children list is null:\n        try {\n          return getChildren(path, true);\n        } catch (ZkNoNodeException e) {\n          // ignore, the \"exists\" watch will listen for the parent node to appear\n          LOG.info(\"watchForChilds path not existing:{} skipWatchingNodeNoteExist: {}\",\n              path, skipWatchingNonExistNode);\n        }\n        return null;\n\nSo we could not determine if children list is null or not based on _isInstalled.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483282771", "createdAt": "2020-09-03T22:16:16Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -533,7 +533,7 @@ public void invoke(NotificationContext changeContext) throws Exception {\n     }\n   }\n \n-  private void subscribeChildChange(String path, NotificationContext.Type callbackType) {\n+  private List<String> subscribeChildChange(String path, NotificationContext.Type callbackType) {\n     if (callbackType == NotificationContext.Type.INIT", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxNTY5NA=="}, "originalCommit": {"oid": "6cdc6ce5d03d8e7482830c44be1a132febe2a2aa"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODYwODc0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwODoxNDo0NVrOHMbVQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODo0Njo1MlrOHMzS6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc5Mjc3MA==", "bodyText": "There is a slightly behavior difference here. Originally before this change, if type is Finalize, we still iterate trough all node and do subscribeDataChange .\nNow we do not return a children list when finalize (line 565) so we do not do subscribeDataChange for those nodes.\nI think we need to keep the getChildren when finalize. Also, This behavior difference cause unit test TestListenerCallbackBatchMode fail on my side. May I ask did you run in to this problem?\nThx.", "url": "https://github.com/apache/helix/pull/1344#discussion_r482792770", "createdAt": "2020-09-03T08:14:45Z", "author": {"login": "xyuanlu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -646,10 +645,9 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n               break;\n             }\n             default: {\n-              List<String> childNames = _zkClient.getChildren(path);\n-              if (childNames != null) {\n-                for (String childName : childNames) {\n-                  String childPath = path + \"/\" + childName;\n+              if (children != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cdc6ce5d03d8e7482830c44be1a132febe2a2aa"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE4NTM4Ng==", "bodyText": "Yeah, I was aware of the failed test and the code in subscribeChildChange() for NotificationContext.Type.FINALIZE.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483185386", "createdAt": "2020-09-03T18:46:52Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -646,10 +645,9 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n               break;\n             }\n             default: {\n-              List<String> childNames = _zkClient.getChildren(path);\n-              if (childNames != null) {\n-                for (String childName : childNames) {\n-                  String childPath = path + \"/\" + childName;\n+              if (children != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc5Mjc3MA=="}, "originalCommit": {"oid": "6cdc6ce5d03d8e7482830c44be1a132febe2a2aa"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDk5OTI0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODoxODo1NlrOHMyUPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODoxODo1NlrOHMyUPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2OTM0Mw==", "bodyText": "Method comment, please.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483169343", "createdAt": "2020-09-03T18:18:56Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -533,7 +533,7 @@ public void invoke(NotificationContext changeContext) throws Exception {\n     }\n   }\n \n-  private void subscribeChildChange(String path, NotificationContext.Type callbackType) {\n+  private List<String> subscribeChildChange(String path, NotificationContext.Type callbackType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45fddee6e66505621a9bcb10730a833cd7e1f92"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTIxMDU0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOToyMTowOFrOHM0XLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMDoyMToyOVrOHM2MQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwMjg2Mg==", "bodyText": "For debug, please add new fields to the end of the string. And don't change the existing content if they are not hurt too much. Otherwise, the dev needs to switch the code version back and forth to double-check before debugging the older version deployment.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483202862", "createdAt": "2020-09-03T19:21:08Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -592,8 +595,8 @@ private void subscribeForChangesAsyn(NotificationContext.Type callbackType, Stri\n \n   private void subscribeForChanges(NotificationContext.Type callbackType, String path,\n       boolean watchChild) {\n-    logger.info(\"Subscribing changes listener to path: {}, type: {}, listener: {}\", path,\n-        callbackType, _listener);\n+    logger.info(\"Subscribing changes listener to path: {}, callback type: {}, event types: {}, \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c56b2ada3d7659acde4e3528eff737dbb7b97a4a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIzMjgzMg==", "bodyText": "Actually when grepping, Subscribing changes listener to path:  would be good enough. Those variables could change for different callback and paths. we could grep for a specific string. Anyway, I'll address this to append the new fields to the end.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483232832", "createdAt": "2020-09-03T20:21:29Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -592,8 +595,8 @@ private void subscribeForChangesAsyn(NotificationContext.Type callbackType, Stri\n \n   private void subscribeForChanges(NotificationContext.Type callbackType, String path,\n       boolean watchChild) {\n-    logger.info(\"Subscribing changes listener to path: {}, type: {}, listener: {}\", path,\n-        callbackType, _listener);\n+    logger.info(\"Subscribing changes listener to path: {}, callback type: {}, event types: {}, \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwMjg2Mg=="}, "originalCommit": {"oid": "c56b2ada3d7659acde4e3528eff737dbb7b97a4a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTIxNDc4OnYy", "diffSide": "LEFT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOToyMjozMFrOHM0Z1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMDoxOTo1NlrOHM2HWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwMzU0MQ==", "bodyText": "I personally think these 2 info logs are still desired. Especially we are changing the subscription mechanism.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483203541", "createdAt": "2020-09-03T19:22:30Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -604,11 +607,8 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n     }\n \n     if (_eventTypes.contains(EventType.NodeChildrenChanged)) {\n-      logger.info(\"Subscribing child change listener to path: {}\", path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c56b2ada3d7659acde4e3528eff737dbb7b97a4a"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIzMTU3Nw==", "bodyText": "From my debug experience, these 2 logs are distracting and not helping much. The import log we want is event type. We can use event type to determine the code logic here. And these 2 add too many lines of logs to the log file. So I prefer to remove them and instead log the event types.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483231577", "createdAt": "2020-09-03T20:19:56Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -604,11 +607,8 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n     }\n \n     if (_eventTypes.contains(EventType.NodeChildrenChanged)) {\n-      logger.info(\"Subscribing child change listener to path: {}\", path);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwMzU0MQ=="}, "originalCommit": {"oid": "c56b2ada3d7659acde4e3528eff737dbb7b97a4a"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTIyNTkwOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOToyNjowNlrOHM0gpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNzozMjoyMFrOHOFaEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwNTI4Ng==", "bodyText": "As I mentioned above, if the return value is ChildrenSubscribeResult, then you just need to check \"_isInstalled\" for the following logic.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483205286", "createdAt": "2020-09-03T19:26:06Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -646,10 +645,14 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n               break;\n             }\n             default: {\n-              List<String> childNames = _zkClient.getChildren(path);\n-              if (childNames != null) {\n-                for (String childName : childNames) {\n-                  String childPath = path + \"/\" + childName;\n+              // When callback type is FINALIZE or PERIODIC_REFRESH, subscribeChildChange doesn't\n+              // get children list. We need to read children to unsubscribe data change listeners.\n+              if (callbackType != Type.INIT && callbackType != Type.CALLBACK) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c56b2ada3d7659acde4e3528eff737dbb7b97a4a"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUzMDcwNQ==", "bodyText": "Replied above.", "url": "https://github.com/apache/helix/pull/1344#discussion_r484530705", "createdAt": "2020-09-07T17:32:20Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -646,10 +645,14 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n               break;\n             }\n             default: {\n-              List<String> childNames = _zkClient.getChildren(path);\n-              if (childNames != null) {\n-                for (String childName : childNames) {\n-                  String childPath = path + \"/\" + childName;\n+              // When callback type is FINALIZE or PERIODIC_REFRESH, subscribeChildChange doesn't\n+              // get children list. We need to read children to unsubscribe data change listeners.\n+              if (callbackType != Type.INIT && callbackType != Type.CALLBACK) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwNTI4Ng=="}, "originalCommit": {"oid": "c56b2ada3d7659acde4e3528eff737dbb7b97a4a"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTM0NzMwOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMDowNjoyNlrOHM1rvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMDoxNjoxM1rOHM1-iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIyNDUwOQ==", "bodyText": "Parallel this using Asyc should bring more performance gain, right? why don't we do it here?", "url": "https://github.com/apache/helix/pull/1344#discussion_r483224509", "createdAt": "2020-09-03T20:06:26Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -646,10 +645,14 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n               break;\n             }\n             default: {\n-              List<String> childNames = _zkClient.getChildren(path);\n-              if (childNames != null) {\n-                for (String childName : childNames) {\n-                  String childPath = path + \"/\" + childName;\n+              // When callback type is FINALIZE, subscribeChildChange doesn't\n+              // get children list. We need to read children to unsubscribe data change listeners.\n+              if (callbackType == Type.FINALIZE) {\n+                children = _zkClient.getChildren(path);\n+              }\n+              if (children != null) {\n+                for (String child : children) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dd53547af981b0760d522d23012c25d99e2445f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIyOTMyMQ==", "bodyText": "async processing this will have more changes. I'll leave that later in another PR.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483229321", "createdAt": "2020-09-03T20:16:13Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -646,10 +645,14 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n               break;\n             }\n             default: {\n-              List<String> childNames = _zkClient.getChildren(path);\n-              if (childNames != null) {\n-                for (String childName : childNames) {\n-                  String childPath = path + \"/\" + childName;\n+              // When callback type is FINALIZE, subscribeChildChange doesn't\n+              // get children list. We need to read children to unsubscribe data change listeners.\n+              if (callbackType == Type.FINALIZE) {\n+                children = _zkClient.getChildren(path);\n+              }\n+              if (children != null) {\n+                for (String child : children) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIyNDUwOQ=="}, "originalCommit": {"oid": "7dd53547af981b0760d522d23012c25d99e2445f"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTM1NzEzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMDowOTo0M1rOHM1x9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMDoyOTowMlrOHM2bbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIyNjEwMg==", "bodyText": "I think the main issue here is that line 551\n_zkClient.subscribeChildChanges(path, this, callbackType != Type.INIT); we have two code path.\nif callbackType is init, the parent path of callback handler may not be created. Thus, the return would be null, or empty? Please verify.\nThe potentially issue is that note later at default, we re-use the return children list from here.\nNote, original code retrieve children one more time and it may retrieve node by then. Here, it may not.\nThis is different from previous logic. Not sure if this would bring a bug or not.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483226102", "createdAt": "2020-09-03T20:09:43Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -554,12 +554,15 @@ private void subscribeChildChange(String path, NotificationContext.Type callback\n       if (!childrenSubscribeResult.isInstalled()) {\n         logger.info(\"CallbackHandler {} subscribe data path {} failed!\", this, path);\n       }\n+      return childrenSubscribeResult.getChildren();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dd53547af981b0760d522d23012c25d99e2445f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIzNjcxNg==", "bodyText": "subscribeChildChanges returns null when the parent path doesn't exist.\nAbout the potential race condition, we can't rely on later getChildren to fetch children node if subscribeChildChanges returns null. Between these two calls, the time window is very tiny. And I believe the system could handle the change. If first is null (parent node does not exist), later it exists, we should be able to have another callback to handle.", "url": "https://github.com/apache/helix/pull/1344#discussion_r483236716", "createdAt": "2020-09-03T20:29:02Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -554,12 +554,15 @@ private void subscribeChildChange(String path, NotificationContext.Type callback\n       if (!childrenSubscribeResult.isInstalled()) {\n         logger.info(\"CallbackHandler {} subscribe data path {} failed!\", this, path);\n       }\n+      return childrenSubscribeResult.getChildren();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIyNjEwMg=="}, "originalCommit": {"oid": "7dd53547af981b0760d522d23012c25d99e2445f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Mzk2MzY4OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxOToxMzozMlrOHTAV3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMjowMzo1NlrOHXuMzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5MDU4OA==", "bodyText": "As we discussed, I think this check is not necessary. The later check for children != null is good enough.\nIf the node was not created and then create during this callback processing, then we will have another callback to process the event since the watcher has been added.", "url": "https://github.com/apache/helix/pull/1344#discussion_r489690588", "createdAt": "2020-09-16T19:13:32Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -646,10 +652,14 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n               break;\n             }\n             default: {\n-              List<String> childNames = _zkClient.getChildren(path);\n-              if (childNames != null) {\n-                for (String childName : childNames) {\n-                  String childPath = path + \"/\" + childName;\n+              // When callback type is FINALIZE, subscribeChildChange doesn't\n+              // get children list. We need to read children to unsubscribe data change listeners.\n+              if (callbackType == Type.FINALIZE) {\n+                children = _zkClient.getChildren(path);\n+              }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb643fb3620ea3381c5547432f13214a793ff2a"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYzNjIzNw==", "bodyText": "Moved the logic to subscribeChildChange: for FINALIZE, it also returns the children.", "url": "https://github.com/apache/helix/pull/1344#discussion_r494636237", "createdAt": "2020-09-24T22:03:56Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -646,10 +652,14 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n               break;\n             }\n             default: {\n-              List<String> childNames = _zkClient.getChildren(path);\n-              if (childNames != null) {\n-                for (String childName : childNames) {\n-                  String childPath = path + \"/\" + childName;\n+              // When callback type is FINALIZE, subscribeChildChange doesn't\n+              // get children list. We need to read children to unsubscribe data change listeners.\n+              if (callbackType == Type.FINALIZE) {\n+                children = _zkClient.getChildren(path);\n+              }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5MDU4OA=="}, "originalCommit": {"oid": "0eb643fb3620ea3381c5547432f13214a793ff2a"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjEzMjAyOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMTowMTo0NlrOHXxfiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMToyMjoxMFrOHXxyIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5MDE4NQ==", "bodyText": "The current logic will return a list even the type is not INIT/CALLBACK/FINALIZE, right? Although I guess it is expected.\n\nPlease fix the comment.\nThe method name becomes misleading somehow with this change. I guess it should be called getChildrenAndSubscribeChildChange. Obviously, not a good name. But feel free to change if you have a better idea. This is just a nice to have thing.", "url": "https://github.com/apache/helix/pull/1344#discussion_r494690185", "createdAt": "2020-09-25T01:01:46Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -538,7 +538,12 @@ public void invoke(NotificationContext changeContext) throws Exception {\n     }\n   }\n \n-  private void subscribeChildChange(String path, NotificationContext.Type callbackType) {\n+  /*\n+   * If callback type is INIT or CALLBACK, subscribes child change listener to the path\n+   * and returns the path's children names. The children list might be null when the path\n+   * doesn't exist or callback type is other than INIT/CALLBACK/FINALIZE.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8397ce26bb449c9bf76c995377051c05a895ed1b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5NDk0Ng==", "bodyText": "Resolved comment.\nSince we also have subscribeChildChanges() in ZkClient that returns children, so I'd like to keep it as it is to be consistent. Besides, I don't have a better name for this and I think it is OK to keep it.", "url": "https://github.com/apache/helix/pull/1344#discussion_r494694946", "createdAt": "2020-09-25T01:22:10Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -538,7 +538,12 @@ public void invoke(NotificationContext changeContext) throws Exception {\n     }\n   }\n \n-  private void subscribeChildChange(String path, NotificationContext.Type callbackType) {\n+  /*\n+   * If callback type is INIT or CALLBACK, subscribes child change listener to the path\n+   * and returns the path's children names. The children list might be null when the path\n+   * doesn't exist or callback type is other than INIT/CALLBACK/FINALIZE.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5MDE4NQ=="}, "originalCommit": {"oid": "8397ce26bb449c9bf76c995377051c05a895ed1b"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 934, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}