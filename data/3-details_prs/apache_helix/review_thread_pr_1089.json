{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNDQ4NjM0", "number": 1089, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMToyMjowNlrOEFMWQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMToyNzoxMlrOEFMaMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODgwNjQwOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMToyMjowNlrOGjR9Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMjoxMTowMFrOGjS17A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0NzU2Ng==", "bodyText": "You might want to checkout this method of the Zookeeper Stat class, simply implement an OutputArchive to avoid hardcode getting fields here.\npublic void serialize(OutputArchive a_, String tag) throws java.io.IOException {\na_.startRecord(this,tag);\na_.writeLong(czxid,\"czxid\");\na_.writeLong(mzxid,\"mzxid\");\na_.writeLong(ctime,\"ctime\");\na_.writeLong(mtime,\"mtime\");\na_.writeInt(version,\"version\");\na_.writeInt(cversion,\"cversion\");\na_.writeInt(aversion,\"aversion\");\na_.writeLong(ephemeralOwner,\"ephemeralOwner\");\na_.writeInt(dataLength,\"dataLength\");\na_.writeInt(numChildren,\"numChildren\");\na_.writeLong(pzxid,\"pzxid\");\na_.endRecord(this,tag);\n}", "url": "https://github.com/apache/helix/pull/1089#discussion_r439647566", "createdAt": "2020-06-12T21:22:06Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -632,4 +634,39 @@ private static RealmAwareZkClient getHelixZkClient(String zkAddr) {\n     return DedicatedZkClientFactory.getInstance()\n         .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr), clientConfig);\n   }\n+\n+  /**\n+   * Convert Stat fields into a Map.\n+   *     private long czxid;\n+   *     private long mzxid;\n+   *     private long ctime;\n+   *     private long mtime;\n+   *     private int version;\n+   *     private int cversion;\n+   *     private int aversion;\n+   *     private long ephemeralOwner;\n+   *     private int dataLength;\n+   *     private int numChildren;\n+   *     private long pzxid;\n+   * @param stat\n+   * @return\n+   */\n+  public static Map<String, String> fromStatToMap(Stat stat) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54d4950b029837a9b85c00442ecc3fc3b916586c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY1NzM4Ng==", "bodyText": "@jiajunwang I already did consider this option, but OutputArchive/serialize is used for different purposes (for real serialization to an output buffer of sort). This requires more code and adds complexity/dependency on apache.jute which we don't simply need.\nAt the end of the day, the Stat function is also hardcoding it, and I'm not worried about Stat arbitrarily changing internal fields moving forward.", "url": "https://github.com/apache/helix/pull/1089#discussion_r439657386", "createdAt": "2020-06-12T21:53:58Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -632,4 +634,39 @@ private static RealmAwareZkClient getHelixZkClient(String zkAddr) {\n     return DedicatedZkClientFactory.getInstance()\n         .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr), clientConfig);\n   }\n+\n+  /**\n+   * Convert Stat fields into a Map.\n+   *     private long czxid;\n+   *     private long mzxid;\n+   *     private long ctime;\n+   *     private long mtime;\n+   *     private int version;\n+   *     private int cversion;\n+   *     private int aversion;\n+   *     private long ephemeralOwner;\n+   *     private int dataLength;\n+   *     private int numChildren;\n+   *     private long pzxid;\n+   * @param stat\n+   * @return\n+   */\n+  public static Map<String, String> fromStatToMap(Stat stat) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0NzU2Ng=="}, "originalCommit": {"oid": "54d4950b029837a9b85c00442ecc3fc3b916586c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY2MjA2MA==", "bodyText": "Agreed. Great that you checked that option already.", "url": "https://github.com/apache/helix/pull/1089#discussion_r439662060", "createdAt": "2020-06-12T22:11:00Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -632,4 +634,39 @@ private static RealmAwareZkClient getHelixZkClient(String zkAddr) {\n     return DedicatedZkClientFactory.getInstance()\n         .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr), clientConfig);\n   }\n+\n+  /**\n+   * Convert Stat fields into a Map.\n+   *     private long czxid;\n+   *     private long mzxid;\n+   *     private long ctime;\n+   *     private long mtime;\n+   *     private int version;\n+   *     private int cversion;\n+   *     private int aversion;\n+   *     private long ephemeralOwner;\n+   *     private int dataLength;\n+   *     private int numChildren;\n+   *     private long pzxid;\n+   * @param stat\n+   * @return\n+   */\n+  public static Map<String, String> fromStatToMap(Stat stat) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0NzU2Ng=="}, "originalCommit": {"oid": "54d4950b029837a9b85c00442ecc3fc3b916586c"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODgxNjUwOnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/server/resources/zookeeper/ZooKeeperAccessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMToyNzoxMlrOGjSDqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMjowNDo0MFrOGjSvFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0OTE5Mw==", "bodyText": "I think getStat return null if the path does not exist. So you don't need to call exists before this line.", "url": "https://github.com/apache/helix/pull/1089#discussion_r439649193", "createdAt": "2020-06-12T21:27:12Z", "author": {"login": "jiajunwang"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/server/resources/zookeeper/ZooKeeperAccessor.java", "diffHunk": "@@ -165,6 +179,24 @@ private Response getChildren(BaseDataAccessor<byte[]> zkBaseDataAccessor, String\n     }\n   }\n \n+  /**\n+   * Returns the ZNode Stat object given the path.\n+   * @param zkBaseDataAccessor\n+   * @param path\n+   * @return\n+   */\n+  private Response getStat(BaseDataAccessor<byte[]> zkBaseDataAccessor, String path) {\n+    if (zkBaseDataAccessor.exists(path, AccessOption.PERSISTENT)) {\n+      Stat stat = zkBaseDataAccessor.getStat(path, AccessOption.PERSISTENT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54d4950b029837a9b85c00442ecc3fc3b916586c"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY2MDMwOA==", "bodyText": "Changed", "url": "https://github.com/apache/helix/pull/1089#discussion_r439660308", "createdAt": "2020-06-12T22:04:40Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/server/resources/zookeeper/ZooKeeperAccessor.java", "diffHunk": "@@ -165,6 +179,24 @@ private Response getChildren(BaseDataAccessor<byte[]> zkBaseDataAccessor, String\n     }\n   }\n \n+  /**\n+   * Returns the ZNode Stat object given the path.\n+   * @param zkBaseDataAccessor\n+   * @param path\n+   * @return\n+   */\n+  private Response getStat(BaseDataAccessor<byte[]> zkBaseDataAccessor, String path) {\n+    if (zkBaseDataAccessor.exists(path, AccessOption.PERSISTENT)) {\n+      Stat stat = zkBaseDataAccessor.getStat(path, AccessOption.PERSISTENT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0OTE5Mw=="}, "originalCommit": {"oid": "54d4950b029837a9b85c00442ecc3fc3b916586c"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1164, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}