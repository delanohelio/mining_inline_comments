{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNjYwODMy", "number": 1201, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDowMjoxNlrOEVNX1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOToxMjo0M1rOEVitSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjc0NjQ0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDowMjoxNlrOG71ggQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODoyOTozM1rOG8Vnzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5NTg0MQ==", "bodyText": "Shall we also stopOnDemandTimer on the FINALIZE notification? This is done for the PeriodRebalance timer.", "url": "https://github.com/apache/helix/pull/1201#discussion_r465395841", "createdAt": "2020-08-05T00:02:16Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -1272,7 +1280,7 @@ protected void checkLiveInstancesObservation(List<LiveInstance> liveInstances,\n \n   public void shutdown() throws InterruptedException {\n     stopPeriodRebalance();\n-\n+    stopOnDemandTimer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ebaf2ccd7c9ac4080dcd14479642e2ae7f2cd85"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNTY1NQ==", "bodyText": "I noticed it too. periodicalRebalanceTimer would be canceled in Finalize and created in init time. But this timer (added for p2p) did not do this. Maybe it is for a reason. (Not that familiar with P2P) I am afraid changing its life cycle may cause some unexpected behavior.", "url": "https://github.com/apache/helix/pull/1201#discussion_r465405655", "createdAt": "2020-08-05T00:38:28Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -1272,7 +1280,7 @@ protected void checkLiveInstancesObservation(List<LiveInstance> liveInstances,\n \n   public void shutdown() throws InterruptedException {\n     stopPeriodRebalance();\n-\n+    stopOnDemandTimer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5NTg0MQ=="}, "originalCommit": {"oid": "3ebaf2ccd7c9ac4080dcd14479642e2ae7f2cd85"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkyMTk5OA==", "bodyText": "In theory, if a FINALIZE notification comes, then we should stop any pending tasks. Or it will keep running even without the later INIT notification comes.\nBut I agree that this PR won't make it worse. We can skip that change for now.", "url": "https://github.com/apache/helix/pull/1201#discussion_r465921998", "createdAt": "2020-08-05T18:29:33Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -1272,7 +1280,7 @@ protected void checkLiveInstancesObservation(List<LiveInstance> liveInstances,\n \n   public void shutdown() throws InterruptedException {\n     stopPeriodRebalance();\n-\n+    stopOnDemandTimer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5NTg0MQ=="}, "originalCommit": {"oid": "3ebaf2ccd7c9ac4080dcd14479642e2ae7f2cd85"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDI0MjAxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOToxMjo0M1rOG8XC3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOToyODoxOFrOG8XiaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0NTMxMQ==", "bodyText": "nit, let's call this shutdownOnDemandTimer.\nConsidering the periodRebalanceTimer can be started and stopped repeatedly. But this shutdownOnDemandTimer will be one-time thing in our logic.", "url": "https://github.com/apache/helix/pull/1201#discussion_r465945311", "createdAt": "2020-08-05T19:12:43Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -357,6 +358,12 @@ void stopPeriodRebalance() {\n     }\n   }\n \n+  private void stopOnDemandTimer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ebaf2ccd7c9ac4080dcd14479642e2ae7f2cd85"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1MzM4NA==", "bodyText": "changed.", "url": "https://github.com/apache/helix/pull/1201#discussion_r465953384", "createdAt": "2020-08-05T19:28:18Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java", "diffHunk": "@@ -357,6 +358,12 @@ void stopPeriodRebalance() {\n     }\n   }\n \n+  private void stopOnDemandTimer() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0NTMxMQ=="}, "originalCommit": {"oid": "3ebaf2ccd7c9ac4080dcd14479642e2ae7f2cd85"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1291, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}