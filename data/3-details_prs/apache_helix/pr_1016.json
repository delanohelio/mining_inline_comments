{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzQyNjgx", "number": 1016, "title": "Add null check in close() of ZkConnectionManager", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1015\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nJava objects may not have been fully initialized when their callback/interface methods are called. This adds a null check to ensure that an NPE does not happen.\nTests\n\n The following tests are written for this issue:\n\nSimple null check. No explicit test needed.\nBuild result:\n[INFO] Reactor Summary for Apache Helix 1.0.1-SNAPSHOT:\n[INFO] \n[INFO] Apache Helix ....................................... SUCCESS [  1.461 s]\n[INFO] Apache Helix :: Metrics Common ..................... SUCCESS [  2.682 s]\n[INFO] Apache Helix :: Metadata Store Directory Common .... SUCCESS [  1.861 s]\n[INFO] Apache Helix :: ZooKeeper API ...................... SUCCESS [  3.128 s]\n[INFO] Apache Helix :: Helix Common ....................... SUCCESS [  1.780 s]\n[INFO] Apache Helix :: Core ............................... SUCCESS [ 20.650 s]\n[INFO] Apache Helix :: Admin Webapp ....................... SUCCESS [  2.814 s]\n[INFO] Apache Helix :: Restful Interface .................. SUCCESS [  5.717 s]\n[INFO] Apache Helix :: Distributed Lock ................... SUCCESS [  1.011 s]\n[INFO] Apache Helix :: HelixAgent ......................... SUCCESS [  1.552 s]\n[INFO] Apache Helix :: Recipes ............................ SUCCESS [  0.035 s]\n[INFO] Apache Helix :: Recipes :: Rabbitmq Consumer Group . SUCCESS [  0.964 s]\n[INFO] Apache Helix :: Recipes :: Rsync Replicated File Store SUCCESS [  1.051 s]\n[INFO] Apache Helix :: Recipes :: distributed lock manager  SUCCESS [  0.952 s]\n[INFO] Apache Helix :: Recipes :: distributed task execution SUCCESS [  0.885 s]\n[INFO] Apache Helix :: Recipes :: service discovery ....... SUCCESS [  0.903 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  48.452 s\n[INFO] Finished at: 2020-05-18T14:08:53-07:00\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation (Optional)\n\n In case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-05-18T21:07:51Z", "url": "https://github.com/apache/helix/pull/1016", "merged": true, "mergeCommit": {"oid": "ff0485bdb65d1051ca63ecc97c5b864aee932465"}, "closed": true, "closedAt": "2020-05-19T04:49:38Z", "author": {"login": "narendly"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcimTRagH2gAyNDE5NzQyNjgxOmI1MWRlNzIyNDkyMjgxYTE1OGZmNmJkNzk5YWJiMjI0ZTJmMjI3YmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcipkKjgFqTQxNDAyNzQwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b51de722492281a158ff6bd799abb224e2f227bd", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/b51de722492281a158ff6bd799abb224e2f227bd", "committedDate": "2020-05-18T20:56:57Z", "message": "Add null check in close() of ZkConnectionManager\n\nJava objects may not have been fully initialized when their callback/interface methods are called. This adds a null check to ensure that an NPE does not happen."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTg2OTI3", "url": "https://github.com/apache/helix/pull/1016#pullrequestreview-413986927", "createdAt": "2020-05-18T22:45:35Z", "commit": {"oid": "b51de722492281a158ff6bd799abb224e2f227bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjo0NTozNVrOGXJ3jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjo0NTozNVrOGXJ3jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMjEwOA==", "bodyText": "It seems _shareWatchers is initialized outside the constructor of ZkConnectionManager. If ZkConnectionManager completes initialization, _sharedWatchers should also complete initialization.\nDoing the null check is unnecessary: an instance should be constructed well before it is used. close() should be called after the instance completes init. Why close() is called before the instance's state is fully initialized? We should find it out.\nIn one case I've known, it is related to SharedZkClient. The ZkConnection is created within sharedZkClient, before the ZK session is established, it is passed to ZkConnectionManager and ZkClient's connect(). And in ZkClient's connect, this is a check for this shared connection. Because the session is not established, zkclient has to close(). Meanwhile, _shareWatchers is not initialized.\nI think we should fix the root cause, instead of covering the problem with this null check. The solution should be wait until connected in SharedZkClient if this connection is newly created.\n      connectionManager =\n          new ZkConnectionManager(createZkConnection(connectionConfig), connectInitTimeout,\n              connectionConfig.toString());\n      _connectionManagerPool.put(connectionConfig, connectionManager);\n\nwhat do you think?", "url": "https://github.com/apache/helix/pull/1016#discussion_r426932108", "createdAt": "2020-05-18T22:45:35Z", "author": {"login": "huizhilu"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/impl/factory/ZkConnectionManager.java", "diffHunk": "@@ -118,7 +118,7 @@ public void close() {\n \n   protected synchronized void close(boolean skipIfWatched) {\n     cleanupInactiveWatchers();\n-    if (_sharedWatchers.size() > 0) {\n+    if (_sharedWatchers != null && _sharedWatchers.size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b51de722492281a158ff6bd799abb224e2f227bd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MDI3NDAx", "url": "https://github.com/apache/helix/pull/1016#pullrequestreview-414027401", "createdAt": "2020-05-19T00:45:00Z", "commit": {"oid": "b51de722492281a158ff6bd799abb224e2f227bd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMDo0NTowMFrOGXMAXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMDo0NTowMFrOGXMAXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2NzEzMg==", "bodyText": "Synced offline. I missed the point ZkConnectionManager is managing connection. So there is a wait in ZkClient.\nThis NPE is thrown when ZkConnectionManager is being constructed and connection is not able to connect to ZK within timeout.", "url": "https://github.com/apache/helix/pull/1016#discussion_r426967132", "createdAt": "2020-05-19T00:45:00Z", "author": {"login": "huizhilu"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/impl/factory/ZkConnectionManager.java", "diffHunk": "@@ -118,7 +118,7 @@ public void close() {\n \n   protected synchronized void close(boolean skipIfWatched) {\n     cleanupInactiveWatchers();\n-    if (_sharedWatchers.size() > 0) {\n+    if (_sharedWatchers != null && _sharedWatchers.size() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMjEwOA=="}, "originalCommit": {"oid": "b51de722492281a158ff6bd799abb224e2f227bd"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4834, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}