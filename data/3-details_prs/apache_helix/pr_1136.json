{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjg0MjMy", "number": 1136, "title": "Allow getIdealAssignmentForWagedFullAuto return preference list based results, add result filtering", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1133\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nCurrently, getIdealAssignmentForWagedFullAuto() gets its final resource assignment results from the partition state mapping of output, which is calculated within the best possible state calculation stage. However, the partition state mapping contains the N+1 cases, which isn't suitable for certain use cases.\nWe would like to allow this function to return an assignment result that's based on the preference lists, which are closer to be the \"calculation result\" done by Waged.\nTests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[ERROR] Tests run: 1151, Failures: 2, Errors: 0, Skipped: 1, Time elapsed: 4,678.895 s <<< FAILURE! - in TestSuite\n[ERROR] testEnableCompressionResource(org.apache.helix.integration.TestEnableCompression)  Time elapsed: 218.88 s  <<< FAILURE!\njava.lang.AssertionError: expected:<true> but was:<false>\n        at org.apache.helix.integration.TestEnableCompression.testEnableCompressionResource(TestEnableCompression.java:117)\n\n[ERROR] testStateTransitionTimeoutByClusterLevel(org.apache.helix.integration.paticipant.TestStateTransitionTimeoutWithResource)  Time elapsed: 37.98 s  <<< FAILURE!\njava.lang.AssertionError: expected:<true> but was:<false>\n        at org.apache.helix.integration.paticipant.TestStateTransitionTimeoutWithResource.testStateTransitionTimeoutByClusterLevel(TestStateTransitionTimeoutWithResource.java:196)\n\n[INFO] \n[INFO] Results:\n[INFO] \n[ERROR] Failures: \n[ERROR]   TestEnableCompression.testEnableCompressionResource:117 expected:<true> but was:<false>\n[ERROR]   TestStateTransitionTimeoutWithResource.testStateTransitionTimeoutByClusterLevel:196 expected:<true> but was:<false>\n[INFO] \n[ERROR] Tests run: 1151, Failures: 2, Errors: 0, Skipped: 1\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:18 h\n[INFO] Finished at: 2020-07-13T15:10:11-07:00\n[INFO] ------------------------------------------------------------------------\n\nRerun\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 40.697 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  45.758 s\n[INFO] Finished at: 2020-07-13T15:29:29-07:00\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-07-02T18:41:22Z", "url": "https://github.com/apache/helix/pull/1136", "merged": true, "mergeCommit": {"oid": "3d732479657230ae59bf0354fb057c023a5b1780"}, "closed": true, "closedAt": "2020-07-13T22:51:12Z", "author": {"login": "NealSun96"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcw0sLhAH2gAyNDQzNjg0MjMyOjk2MTU1OTJlMzcyZGViMTQ5MjE5OGQxMjYyMWYwMDMwM2FiNWVjZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0nv48gH2gAyNDQzNjg0MjMyOmZmMjdiODNkMzJjZTg2YTczNmIyNzgwMjg0M2FhYzg3NjU2ZjA1OTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9615592e372deb1492198d12621f00303ab5ecfe", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/9615592e372deb1492198d12621f00303ab5ecfe", "committedDate": "2020-07-02T01:37:46Z", "message": "Add option to return pref lists based results"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTQ4NjY0", "url": "https://github.com/apache/helix/pull/1136#pullrequestreview-441948664", "createdAt": "2020-07-02T18:57:43Z", "commit": {"oid": "9615592e372deb1492198d12621f00303ab5ecfe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo1Nzo0M1rOGsZsOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo1Nzo0M1rOGsZsOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIxMTQ1MQ==", "bodyText": "The names are not clear enough, IMO.\nHow about getTargetAssignmentForWagedFullAuto and getImmediateAssignmentForWagedFullAutoImpl ?", "url": "https://github.com/apache/helix/pull/1136#discussion_r449211451", "createdAt": "2020-07-02T18:57:43Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -177,6 +178,39 @@ public static String serializeByComma(List<String> objects) {\n       String metadataStoreAddress, ClusterConfig clusterConfig,\n       List<InstanceConfig> instanceConfigs, List<String> liveInstances,\n       List<IdealState> idealStates, List<ResourceConfig> resourceConfigs) {\n+    return getIdealAssignmentForWagedFullAutoImpl(metadataStoreAddress, clusterConfig,\n+        instanceConfigs, liveInstances, idealStates, resourceConfigs, true);\n+  }\n+\n+  /**\n+   * Returns the expected ideal ResourceAssignments for the given resources in the cluster\n+   * calculated using the read-only WAGED rebalancer. The returned result is based on partition\n+   * state mapping.\n+   * @param metadataStoreAddress\n+   * @param clusterConfig\n+   * @param instanceConfigs\n+   * @param liveInstances\n+   * @param idealStates\n+   * @param resourceConfigs\n+   * @return\n+   */\n+  public static Map<String, ResourceAssignment> getIdealPartitionMapForWagedFullAuto(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9615592e372deb1492198d12621f00303ab5ecfe"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "107617e0d24367b13b5d0b4e0726d73b6287a16f", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/107617e0d24367b13b5d0b4e0726d73b6287a16f", "committedDate": "2020-07-02T20:27:15Z", "message": "Renaming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDA4MTQ5", "url": "https://github.com/apache/helix/pull/1136#pullrequestreview-442008149", "createdAt": "2020-07-02T20:45:46Z", "commit": {"oid": "107617e0d24367b13b5d0b4e0726d73b6287a16f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo0NTo0NlrOGschLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo0NTo0NlrOGschLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI1Nzc3Mg==", "bodyText": "Should we leave this unchanged since this is a public method and we know there are users using this?", "url": "https://github.com/apache/helix/pull/1136#discussion_r449257772", "createdAt": "2020-07-02T20:45:46Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -173,10 +174,43 @@ public static String serializeByComma(List<String> objects) {\n    * @param resourceConfigs\n    * @return\n    */\n-  public static Map<String, ResourceAssignment> getIdealAssignmentForWagedFullAuto(\n+  public static Map<String, ResourceAssignment> getTargetAssignmentForWagedFullAuto(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107617e0d24367b13b5d0b4e0726d73b6287a16f"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca07e4eccac12c0e51c58d6fc912836c23a51ed4", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/ca07e4eccac12c0e51c58d6fc912836c23a51ed4", "committedDate": "2020-07-02T23:48:09Z", "message": "Filter results and add comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTM1NTQy", "url": "https://github.com/apache/helix/pull/1136#pullrequestreview-447535542", "createdAt": "2020-07-13T19:25:00Z", "commit": {"oid": "ca07e4eccac12c0e51c58d6fc912836c23a51ed4"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNTowMFrOGw2lEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNTowMFrOGw2lEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3OTA1OQ==", "bodyText": "Let's add this section of test for the getImmediateAssignmentForWagedFullAuto too.", "url": "https://github.com/apache/helix/pull/1136#discussion_r453879059", "createdAt": "2020-07-13T19:25:00Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java", "diffHunk": "@@ -209,7 +229,7 @@ public void testRebalanceTool() throws InterruptedException {\n     }\n \n     utilResult = HelixUtil\n-        .getIdealAssignmentForWagedFullAuto(ZK_ADDR, clusterConfig, instanceConfigs, liveInstances,\n+        .getTargetAssignmentForWagedFullAuto(ZK_ADDR, clusterConfig, instanceConfigs, liveInstances,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca07e4eccac12c0e51c58d6fc912836c23a51ed4"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff27b83d32ce86a736b27802843aac87656f0596", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/ff27b83d32ce86a736b27802843aac87656f0596", "committedDate": "2020-07-13T20:48:45Z", "message": "expand test coverage"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4545, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}