{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjg0MjMy", "number": 1136, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo1Nzo0M1rOELBStw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNTowMFrOEN9S3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTkwOTY3OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo1Nzo0M1rOGsZsOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDoyNTowNlrOGsb_MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIxMTQ1MQ==", "bodyText": "The names are not clear enough, IMO.\nHow about getTargetAssignmentForWagedFullAuto and getImmediateAssignmentForWagedFullAutoImpl ?", "url": "https://github.com/apache/helix/pull/1136#discussion_r449211451", "createdAt": "2020-07-02T18:57:43Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -177,6 +178,39 @@ public static String serializeByComma(List<String> objects) {\n       String metadataStoreAddress, ClusterConfig clusterConfig,\n       List<InstanceConfig> instanceConfigs, List<String> liveInstances,\n       List<IdealState> idealStates, List<ResourceConfig> resourceConfigs) {\n+    return getIdealAssignmentForWagedFullAutoImpl(metadataStoreAddress, clusterConfig,\n+        instanceConfigs, liveInstances, idealStates, resourceConfigs, true);\n+  }\n+\n+  /**\n+   * Returns the expected ideal ResourceAssignments for the given resources in the cluster\n+   * calculated using the read-only WAGED rebalancer. The returned result is based on partition\n+   * state mapping.\n+   * @param metadataStoreAddress\n+   * @param clusterConfig\n+   * @param instanceConfigs\n+   * @param liveInstances\n+   * @param idealStates\n+   * @param resourceConfigs\n+   * @return\n+   */\n+  public static Map<String, ResourceAssignment> getIdealPartitionMapForWagedFullAuto(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9615592e372deb1492198d12621f00303ab5ecfe"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI0OTA3Mw==", "bodyText": "Sure, I was also thinking what's a good way to differentiate these two.", "url": "https://github.com/apache/helix/pull/1136#discussion_r449249073", "createdAt": "2020-07-02T20:25:06Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -177,6 +178,39 @@ public static String serializeByComma(List<String> objects) {\n       String metadataStoreAddress, ClusterConfig clusterConfig,\n       List<InstanceConfig> instanceConfigs, List<String> liveInstances,\n       List<IdealState> idealStates, List<ResourceConfig> resourceConfigs) {\n+    return getIdealAssignmentForWagedFullAutoImpl(metadataStoreAddress, clusterConfig,\n+        instanceConfigs, liveInstances, idealStates, resourceConfigs, true);\n+  }\n+\n+  /**\n+   * Returns the expected ideal ResourceAssignments for the given resources in the cluster\n+   * calculated using the read-only WAGED rebalancer. The returned result is based on partition\n+   * state mapping.\n+   * @param metadataStoreAddress\n+   * @param clusterConfig\n+   * @param instanceConfigs\n+   * @param liveInstances\n+   * @param idealStates\n+   * @param resourceConfigs\n+   * @return\n+   */\n+  public static Map<String, ResourceAssignment> getIdealPartitionMapForWagedFullAuto(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIxMTQ1MQ=="}, "originalCommit": {"oid": "9615592e372deb1492198d12621f00303ab5ecfe"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDIwNjQ3OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo0NTo0NlrOGschLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NDowOFrOGwxOtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI1Nzc3Mg==", "bodyText": "Should we leave this unchanged since this is a public method and we know there are users using this?", "url": "https://github.com/apache/helix/pull/1136#discussion_r449257772", "createdAt": "2020-07-02T20:45:46Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -173,10 +174,43 @@ public static String serializeByComma(List<String> objects) {\n    * @param resourceConfigs\n    * @return\n    */\n-  public static Map<String, ResourceAssignment> getIdealAssignmentForWagedFullAuto(\n+  public static Map<String, ResourceAssignment> getTargetAssignmentForWagedFullAuto(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107617e0d24367b13b5d0b4e0726d73b6287a16f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MTQxMg==", "bodyText": "That's my initial thought too, which is why I kept the method name in my initial commit.\nHowever, keeping this name makes it hard to differentiate from the other method (both are \"ideal\" assignments), and I liked Jiajun's new names. The only current reference is the migration testing tool, which I think is fine to be updated as Helix version is updated.", "url": "https://github.com/apache/helix/pull/1136#discussion_r453791412", "createdAt": "2020-07-13T16:54:08Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -173,10 +174,43 @@ public static String serializeByComma(List<String> objects) {\n    * @param resourceConfigs\n    * @return\n    */\n-  public static Map<String, ResourceAssignment> getIdealAssignmentForWagedFullAuto(\n+  public static Map<String, ResourceAssignment> getTargetAssignmentForWagedFullAuto(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI1Nzc3Mg=="}, "originalCommit": {"oid": "107617e0d24367b13b5d0b4e0726d73b6287a16f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDcxMTk4OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNTowMFrOGw2lEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMjoyOTo1NFrOGw81ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3OTA1OQ==", "bodyText": "Let's add this section of test for the getImmediateAssignmentForWagedFullAuto too.", "url": "https://github.com/apache/helix/pull/1136#discussion_r453879059", "createdAt": "2020-07-13T19:25:00Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java", "diffHunk": "@@ -209,7 +229,7 @@ public void testRebalanceTool() throws InterruptedException {\n     }\n \n     utilResult = HelixUtil\n-        .getIdealAssignmentForWagedFullAuto(ZK_ADDR, clusterConfig, instanceConfigs, liveInstances,\n+        .getTargetAssignmentForWagedFullAuto(ZK_ADDR, clusterConfig, instanceConfigs, liveInstances,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca07e4eccac12c0e51c58d6fc912836c23a51ed4"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk4MTU2Mw==", "bodyText": "Done so.", "url": "https://github.com/apache/helix/pull/1136#discussion_r453981563", "createdAt": "2020-07-13T22:29:54Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java", "diffHunk": "@@ -209,7 +229,7 @@ public void testRebalanceTool() throws InterruptedException {\n     }\n \n     utilResult = HelixUtil\n-        .getIdealAssignmentForWagedFullAuto(ZK_ADDR, clusterConfig, instanceConfigs, liveInstances,\n+        .getTargetAssignmentForWagedFullAuto(ZK_ADDR, clusterConfig, instanceConfigs, liveInstances,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3OTA1OQ=="}, "originalCommit": {"oid": "ca07e4eccac12c0e51c58d6fc912836c23a51ed4"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1221, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}