{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODMwMTQ2", "number": 751, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToxODozNVrODe7eQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTo1MjoxM1rODfT-Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzU4MjczOnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToxODozNVrOFoV0Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDo1NDo1OVrOFoYutQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NDc0Mw==", "bodyText": "Nit: let's use NoSuchElementException to keep it consistent with other methods in MSD?", "url": "https://github.com/apache/helix/pull/751#discussion_r377844743", "createdAt": "2020-02-11T19:18:35Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -119,14 +119,20 @@ public ZkMetadataStoreDirectory(Map<String, String> routingZkAddressMap)\n \n   @Override\n   public Map<String, String> getAllMappingUnderPath(String namespace, String path) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(\n+          \"Failed to get all mapping under path: Namespace \" + namespace + \" is not found!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1MzE5MA==", "bodyText": "The other methods in MSD use IllegalArgumentException such as the exact same check in addMetadataStoreRealm", "url": "https://github.com/apache/helix/pull/751#discussion_r377853190", "createdAt": "2020-02-11T19:34:20Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -119,14 +119,20 @@ public ZkMetadataStoreDirectory(Map<String, String> routingZkAddressMap)\n \n   @Override\n   public Map<String, String> getAllMappingUnderPath(String namespace, String path) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(\n+          \"Failed to get all mapping under path: Namespace \" + namespace + \" is not found!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NDc0Mw=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg3MjEyNQ==", "bodyText": "throw new NoSuchElementException(\"Namespace \" + namespace + \" does not exist!\");\n?\n\nFor read methods, please use NoSuchElement where appropriate.\nFor write methods, use IllegalArgument?", "url": "https://github.com/apache/helix/pull/751#discussion_r377872125", "createdAt": "2020-02-11T20:12:20Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -119,14 +119,20 @@ public ZkMetadataStoreDirectory(Map<String, String> routingZkAddressMap)\n \n   @Override\n   public Map<String, String> getAllMappingUnderPath(String namespace, String path) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(\n+          \"Failed to get all mapping under path: Namespace \" + namespace + \" is not found!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NDc0Mw=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5MjUzMw==", "bodyText": "I see what you mean. Agreed, changing.", "url": "https://github.com/apache/helix/pull/751#discussion_r377892533", "createdAt": "2020-02-11T20:54:59Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -119,14 +119,20 @@ public ZkMetadataStoreDirectory(Map<String, String> routingZkAddressMap)\n \n   @Override\n   public Map<String, String> getAllMappingUnderPath(String namespace, String path) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(\n+          \"Failed to get all mapping under path: Namespace \" + namespace + \" is not found!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NDc0Mw=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzU4MzQxOnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToxODo0N1rOFoV0eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozNDo0N1rOFoWV2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NDg1Ng==", "bodyText": "NoSuchElementException", "url": "https://github.com/apache/helix/pull/751#discussion_r377844856", "createdAt": "2020-02-11T19:18:47Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -119,14 +119,20 @@ public ZkMetadataStoreDirectory(Map<String, String> routingZkAddressMap)\n \n   @Override\n   public Map<String, String> getAllMappingUnderPath(String namespace, String path) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(\n+          \"Failed to get all mapping under path: Namespace \" + namespace + \" is not found!\");\n+    }\n+    return _routingDataMap.get(namespace).getAllMappingUnderPath(path);\n   }\n \n   @Override\n   public String getMetadataStoreRealm(String namespace, String shardingKey) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1MzQwMQ==", "bodyText": "Ditto above", "url": "https://github.com/apache/helix/pull/751#discussion_r377853401", "createdAt": "2020-02-11T19:34:47Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -119,14 +119,20 @@ public ZkMetadataStoreDirectory(Map<String, String> routingZkAddressMap)\n \n   @Override\n   public Map<String, String> getAllMappingUnderPath(String namespace, String path) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(\n+          \"Failed to get all mapping under path: Namespace \" + namespace + \" is not found!\");\n+    }\n+    return _routingDataMap.get(namespace).getAllMappingUnderPath(path);\n   }\n \n   @Override\n   public String getMetadataStoreRealm(String namespace, String shardingKey) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NDg1Ng=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzU4NTA0OnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToxOToxNFrOFoV1gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozNDo1NVrOFoWWHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NTEyMw==", "bodyText": "Should we fix this error message?", "url": "https://github.com/apache/helix/pull/751#discussion_r377845123", "createdAt": "2020-02-11T19:19:14Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -119,14 +119,20 @@ public ZkMetadataStoreDirectory(Map<String, String> routingZkAddressMap)\n \n   @Override\n   public Map<String, String> getAllMappingUnderPath(String namespace, String path) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(\n+          \"Failed to get all mapping under path: Namespace \" + namespace + \" is not found!\");\n+    }\n+    return _routingDataMap.get(namespace).getAllMappingUnderPath(path);\n   }\n \n   @Override\n   public String getMetadataStoreRealm(String namespace, String shardingKey) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(\n+          \"Failed to get all mapping under path: Namespace \" + namespace + \" is not found!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1MzQ2OA==", "bodyText": "Sorry about that, will fix.", "url": "https://github.com/apache/helix/pull/751#discussion_r377853468", "createdAt": "2020-02-11T19:34:55Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/ZkMetadataStoreDirectory.java", "diffHunk": "@@ -119,14 +119,20 @@ public ZkMetadataStoreDirectory(Map<String, String> routingZkAddressMap)\n \n   @Override\n   public Map<String, String> getAllMappingUnderPath(String namespace, String path) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(\n+          \"Failed to get all mapping under path: Namespace \" + namespace + \" is not found!\");\n+    }\n+    return _routingDataMap.get(namespace).getAllMappingUnderPath(path);\n   }\n \n   @Override\n   public String getMetadataStoreRealm(String namespace, String shardingKey) {\n-    // TODO: get it from routingData\n-    throw new UnsupportedOperationException();\n+    if (!_routingDataMap.containsKey(namespace)) {\n+      throw new IllegalArgumentException(\n+          \"Failed to get all mapping under path: Namespace \" + namespace + \" is not found!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NTEyMw=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzU4NzM4OnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/MetadataStoreRoutingDataReader.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToyMDowMVrOFoV3DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTowNzo1NlrOFoetNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NTUxNg==", "bodyText": "Could we be more specific about this? What does it actually mean to have the routing data \"missing\"? Which ZNodes do not exist? Which fields do not exist?", "url": "https://github.com/apache/helix/pull/751#discussion_r377845516", "createdAt": "2020-02-11T19:20:01Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/MetadataStoreRoutingDataReader.java", "diffHunk": "@@ -35,8 +35,7 @@\n    * @return a mapping from \"metadata store realm addresses\" to lists of \"metadata store sharding\n    *         keys\", where the sharding keys in a value list all route to the realm address in the\n    *         key\n-   * @throws InvalidRoutingDataException - when the routing data is malformed in any way that\n-   *           disallows a meaningful mapping to be returned\n+   * @throws InvalidRoutingDataException - when the routing data is missing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1NDU5Mw==", "bodyText": "Zk vocabulary shouldn't be used here because this is a generic interface. I can rework the wording here, maybe just reverting to the original one because it's still true.", "url": "https://github.com/apache/helix/pull/751#discussion_r377854593", "createdAt": "2020-02-11T19:37:07Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/MetadataStoreRoutingDataReader.java", "diffHunk": "@@ -35,8 +35,7 @@\n    * @return a mapping from \"metadata store realm addresses\" to lists of \"metadata store sharding\n    *         keys\", where the sharding keys in a value list all route to the realm address in the\n    *         key\n-   * @throws InvalidRoutingDataException - when the routing data is malformed in any way that\n-   *           disallows a meaningful mapping to be returned\n+   * @throws InvalidRoutingDataException - when the routing data is missing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NTUxNg=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1NzU5MQ==", "bodyText": "That's a good point. You could write that in \"ZK\"RoutingDataReader.", "url": "https://github.com/apache/helix/pull/751#discussion_r377957591", "createdAt": "2020-02-11T23:18:44Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/MetadataStoreRoutingDataReader.java", "diffHunk": "@@ -35,8 +35,7 @@\n    * @return a mapping from \"metadata store realm addresses\" to lists of \"metadata store sharding\n    *         keys\", where the sharding keys in a value list all route to the realm address in the\n    *         key\n-   * @throws InvalidRoutingDataException - when the routing data is malformed in any way that\n-   *           disallows a meaningful mapping to be returned\n+   * @throws InvalidRoutingDataException - when the routing data is missing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NTUxNg=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5MDQ1Mw==", "bodyText": "Done.", "url": "https://github.com/apache/helix/pull/751#discussion_r377990453", "createdAt": "2020-02-12T01:07:56Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/MetadataStoreRoutingDataReader.java", "diffHunk": "@@ -35,8 +35,7 @@\n    * @return a mapping from \"metadata store realm addresses\" to lists of \"metadata store sharding\n    *         keys\", where the sharding keys in a value list all route to the realm address in the\n    *         key\n-   * @throws InvalidRoutingDataException - when the routing data is malformed in any way that\n-   *           disallows a meaningful mapping to be returned\n+   * @throws InvalidRoutingDataException - when the routing data is missing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NTUxNg=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzU5NDQ5OnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToyMjowNVrOFoV7eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozNzoxNlrOFoWazw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NjY1MA==", "bodyText": "Nit: let's name our variables better.\nfor (String realmName : allRealmNames) {\nmight be a better pick?", "url": "https://github.com/apache/helix/pull/751#discussion_r377846650", "createdAt": "2020-02-11T19:22:05Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -85,23 +85,14 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n           \"Routing data directory ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH\n               + \" does not exist. Routing ZooKeeper address: \" + _zkAddress);\n     }\n-    if (children == null || children.isEmpty()) {\n-      throw new InvalidRoutingDataException(\n-          \"There are no metadata store realms defined. Routing ZooKeeper address: \" + _zkAddress);\n-    }\n     for (String child : children) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1NDY3MQ==", "bodyText": "Agreed. Changing it.", "url": "https://github.com/apache/helix/pull/751#discussion_r377854671", "createdAt": "2020-02-11T19:37:16Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -85,23 +85,14 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n           \"Routing data directory ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH\n               + \" does not exist. Routing ZooKeeper address: \" + _zkAddress);\n     }\n-    if (children == null || children.isEmpty()) {\n-      throw new InvalidRoutingDataException(\n-          \"There are no metadata store realms defined. Routing ZooKeeper address: \" + _zkAddress);\n-    }\n     for (String child : children) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NjY1MA=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzU5NzExOnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToyMjo1MlrOFoV9NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMjoyOTo0MVrOFobhqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NzA5Mw==", "bodyText": "If shardingKeys is empty, we should still return an empty list, correct? Otherwise the resulting map will be missing the entire realm, which would be incorrect.", "url": "https://github.com/apache/helix/pull/751#discussion_r377847093", "createdAt": "2020-02-11T19:22:52Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -85,23 +85,14 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n           \"Routing data directory ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH\n               + \" does not exist. Routing ZooKeeper address: \" + _zkAddress);\n     }\n-    if (children == null || children.isEmpty()) {\n-      throw new InvalidRoutingDataException(\n-          \"There are no metadata store realms defined. Routing ZooKeeper address: \" + _zkAddress);\n-    }\n     for (String child : children) {\n       ZNRecord record =\n           _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child);\n       List<String> shardingKeys =\n           record.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY);\n-      if (shardingKeys == null || shardingKeys.isEmpty()) {\n-        throw new InvalidRoutingDataException(\n-            \"Realm address ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child\n-                + \" does not have a value for key \"\n-                + MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY\n-                + \". Routing ZooKeeper address: \" + _zkAddress);\n+      if (shardingKeys != null && !shardingKeys.isEmpty()) {\n+        routingData.put(child, shardingKeys);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1NzYxOA==", "bodyText": "My opinion is that if a realm doesn't have sharding keys, it shouldn't be a part of the routing data, because it isn't providing \"routing\". Although I can understand that whoever tries to get all routing data may get surprised if the realm disappears.\nIf we are adding empty lists, I would have to change the behavior here also: https://github.com/apache/helix/pull/731/files#diff-cd0252f86478a5ece76fb628cd7edbfcR170", "url": "https://github.com/apache/helix/pull/751#discussion_r377857618", "createdAt": "2020-02-11T19:42:47Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -85,23 +85,14 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n           \"Routing data directory ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH\n               + \" does not exist. Routing ZooKeeper address: \" + _zkAddress);\n     }\n-    if (children == null || children.isEmpty()) {\n-      throw new InvalidRoutingDataException(\n-          \"There are no metadata store realms defined. Routing ZooKeeper address: \" + _zkAddress);\n-    }\n     for (String child : children) {\n       ZNRecord record =\n           _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child);\n       List<String> shardingKeys =\n           record.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY);\n-      if (shardingKeys == null || shardingKeys.isEmpty()) {\n-        throw new InvalidRoutingDataException(\n-            \"Realm address ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child\n-                + \" does not have a value for key \"\n-                + MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY\n-                + \". Routing ZooKeeper address: \" + _zkAddress);\n+      if (shardingKeys != null && !shardingKeys.isEmpty()) {\n+        routingData.put(child, shardingKeys);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NzA5Mw=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkzODM0NQ==", "bodyText": "On a second thought, getAllMetadataStoreRealms is dependent on this. The behavior has to be changed then.", "url": "https://github.com/apache/helix/pull/751#discussion_r377938345", "createdAt": "2020-02-11T22:29:41Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -85,23 +85,14 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n           \"Routing data directory ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH\n               + \" does not exist. Routing ZooKeeper address: \" + _zkAddress);\n     }\n-    if (children == null || children.isEmpty()) {\n-      throw new InvalidRoutingDataException(\n-          \"There are no metadata store realms defined. Routing ZooKeeper address: \" + _zkAddress);\n-    }\n     for (String child : children) {\n       ZNRecord record =\n           _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child);\n       List<String> shardingKeys =\n           record.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY);\n-      if (shardingKeys == null || shardingKeys.isEmpty()) {\n-        throw new InvalidRoutingDataException(\n-            \"Realm address ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child\n-                + \" does not have a value for key \"\n-                + MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY\n-                + \". Routing ZooKeeper address: \" + _zkAddress);\n+      if (shardingKeys != null && !shardingKeys.isEmpty()) {\n+        routingData.put(child, shardingKeys);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NzA5Mw=="}, "originalCommit": {"oid": "d6b682cddff4bf4e8ca06e18a1b24402aee8d6d9"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODMwNTc4OnYy", "diffSide": "RIGHT", "path": "helix-rest/src/test/java/org/apache/helix/rest/metadatastore/accessor/TestZkRoutingDataReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMzoyNjoxMlrOFoc3TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTowODoyNVrOFoetpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk2MDI2OQ==", "bodyText": "Do we need to add tests for the newly supported methods?", "url": "https://github.com/apache/helix/pull/751#discussion_r377960269", "createdAt": "2020-02-11T23:26:12Z", "author": {"login": "narendly"}, "path": "helix-rest/src/test/java/org/apache/helix/rest/metadatastore/accessor/TestZkRoutingDataReader.java", "diffHunk": "@@ -104,11 +104,10 @@ public void testGetRoutingDataMissingMSRDChildren() {\n     _baseAccessor.create(MetadataStoreRoutingConstants.ROUTING_DATA_PATH, new ZNRecord(\"test\"),\n         AccessOption.PERSISTENT);\n     try {\n-      _zkRoutingDataReader.getRoutingData();\n-      Assert.fail(\"Expecting InvalidRoutingDataException\");\n+      Map<String, List<String>> routingData = _zkRoutingDataReader.getRoutingData();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cca9d21bd2c56f36972400b78a5b6cfca95ac478"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5MDU2Nw==", "bodyText": "Yes. I realized that the constructor was not populating _routingDataMap. That has been fixed.", "url": "https://github.com/apache/helix/pull/751#discussion_r377990567", "createdAt": "2020-02-12T01:08:25Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/test/java/org/apache/helix/rest/metadatastore/accessor/TestZkRoutingDataReader.java", "diffHunk": "@@ -104,11 +104,10 @@ public void testGetRoutingDataMissingMSRDChildren() {\n     _baseAccessor.create(MetadataStoreRoutingConstants.ROUTING_DATA_PATH, new ZNRecord(\"test\"),\n         AccessOption.PERSISTENT);\n     try {\n-      _zkRoutingDataReader.getRoutingData();\n-      Assert.fail(\"Expecting InvalidRoutingDataException\");\n+      Map<String, List<String>> routingData = _zkRoutingDataReader.getRoutingData();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk2MDI2OQ=="}, "originalCommit": {"oid": "cca9d21bd2c56f36972400b78a5b6cfca95ac478"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTQ0NzMzOnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTowNjo1NVrOFo693w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMToyODowOFrOFo_LQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1MzQ3MQ==", "bodyText": "Do you have latest helix-style-intellij.xml imported in your IDE? This format shouldn't be changed if you have the style import. It would be better to keep the original code that is not your change.", "url": "https://github.com/apache/helix/pull/751#discussion_r378453471", "createdAt": "2020-02-12T19:06:55Z", "author": {"login": "huizhilu"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -36,8 +36,8 @@\n import org.apache.helix.zookeeper.zkclient.exception.ZkNoNodeException;\n import org.apache.zookeeper.Watcher;\n \n-\n-public class ZkRoutingDataReader implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {\n+public class ZkRoutingDataReader\n+    implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e52482491491715d886285192fb9083de6eaf03"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5MTgwMg==", "bodyText": "I'm using helix-style.xml as suggested by this doc: https://cwiki.apache.org/confluence/display/HELIX/Coding+Style . The linked doc come from https://iwww.corp.linkedin.com/wiki/cf/pages/viewpage.action?pageId=209597012 . helix-style-intellij.xml was not mentioned anywhere as far as I know.", "url": "https://github.com/apache/helix/pull/751#discussion_r378491802", "createdAt": "2020-02-12T20:22:05Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -36,8 +36,8 @@\n import org.apache.helix.zookeeper.zkclient.exception.ZkNoNodeException;\n import org.apache.zookeeper.Watcher;\n \n-\n-public class ZkRoutingDataReader implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {\n+public class ZkRoutingDataReader\n+    implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1MzQ3MQ=="}, "originalCommit": {"oid": "7e52482491491715d886285192fb9083de6eaf03"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUyMjQzMw==", "bodyText": "Turns out that the onboarding doc links to an incorrect coding style page. Correcting it.", "url": "https://github.com/apache/helix/pull/751#discussion_r378522433", "createdAt": "2020-02-12T21:28:08Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -36,8 +36,8 @@\n import org.apache.helix.zookeeper.zkclient.exception.ZkNoNodeException;\n import org.apache.zookeeper.Watcher;\n \n-\n-public class ZkRoutingDataReader implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {\n+public class ZkRoutingDataReader\n+    implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1MzQ3MQ=="}, "originalCommit": {"oid": "7e52482491491715d886285192fb9083de6eaf03"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTU0NDAxOnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTozNjo0N1rOFo77xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMToyNzo1OVrOFo_K6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2OTMxOQ==", "bodyText": "Has this been formatted properly?", "url": "https://github.com/apache/helix/pull/751#discussion_r378469319", "createdAt": "2020-02-12T19:36:47Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -36,8 +36,8 @@\n import org.apache.helix.zookeeper.zkclient.exception.ZkNoNodeException;\n import org.apache.zookeeper.Watcher;\n \n-\n-public class ZkRoutingDataReader implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {\n+public class ZkRoutingDataReader\n+    implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e52482491491715d886285192fb9083de6eaf03"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5MDM4NA==", "bodyText": "The previous formatting was not done by this PR. This is the result of using helix-style.xml to auto-format.\nNote: the previous formatting violates the first element in formatting guideline: the length exceeds 100 characters. (https://cwiki.apache.org/confluence/display/HELIX/Coding+Style)", "url": "https://github.com/apache/helix/pull/751#discussion_r378490384", "createdAt": "2020-02-12T20:18:56Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -36,8 +36,8 @@\n import org.apache.helix.zookeeper.zkclient.exception.ZkNoNodeException;\n import org.apache.zookeeper.Watcher;\n \n-\n-public class ZkRoutingDataReader implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {\n+public class ZkRoutingDataReader\n+    implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2OTMxOQ=="}, "originalCommit": {"oid": "7e52482491491715d886285192fb9083de6eaf03"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUyMjM0Ng==", "bodyText": "Turns out that the onboarding doc links to an incorrect coding style page. Correcting it.", "url": "https://github.com/apache/helix/pull/751#discussion_r378522346", "createdAt": "2020-02-12T21:27:59Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -36,8 +36,8 @@\n import org.apache.helix.zookeeper.zkclient.exception.ZkNoNodeException;\n import org.apache.zookeeper.Watcher;\n \n-\n-public class ZkRoutingDataReader implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {\n+public class ZkRoutingDataReader\n+    implements MetadataStoreRoutingDataReader, IZkDataListener, IZkChildListener, IZkStateListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2OTMxOQ=="}, "originalCommit": {"oid": "7e52482491491715d886285192fb9083de6eaf03"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTU0NDUxOnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTozNjo1OVrOFo78HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMDoxOTo0MVrOFo9PYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2OTQwNQ==", "bodyText": "Why does this keep changing?", "url": "https://github.com/apache/helix/pull/751#discussion_r378469405", "createdAt": "2020-02-12T19:36:59Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -53,55 +53,45 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n       throw new IllegalArgumentException(\"Zk address cannot be null or empty!\");\n     }\n     _zkAddress = zkAddress;\n-    _zkClient = DedicatedZkClientFactory.getInstance()\n-        .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddress),\n-            new HelixZkClient.ZkClientConfig().setZkSerializer(new ZNRecordSerializer()));\n+    _zkClient = DedicatedZkClientFactory.getInstance().buildZkClient(\n+        new HelixZkClient.ZkConnectionConfig(zkAddress),\n+        new HelixZkClient.ZkClientConfig().setZkSerializer(new ZNRecordSerializer()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e52482491491715d886285192fb9083de6eaf03"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5MDcyMQ==", "bodyText": "Ditto above. I used helix-style.xml to format the entire file and this was changed. Not sure if it was formatted previously.", "url": "https://github.com/apache/helix/pull/751#discussion_r378490721", "createdAt": "2020-02-12T20:19:41Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -53,55 +53,45 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n       throw new IllegalArgumentException(\"Zk address cannot be null or empty!\");\n     }\n     _zkAddress = zkAddress;\n-    _zkClient = DedicatedZkClientFactory.getInstance()\n-        .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddress),\n-            new HelixZkClient.ZkClientConfig().setZkSerializer(new ZNRecordSerializer()));\n+    _zkClient = DedicatedZkClientFactory.getInstance().buildZkClient(\n+        new HelixZkClient.ZkConnectionConfig(zkAddress),\n+        new HelixZkClient.ZkClientConfig().setZkSerializer(new ZNRecordSerializer()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2OTQwNQ=="}, "originalCommit": {"oid": "7e52482491491715d886285192fb9083de6eaf03"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTU5NjMwOnYy", "diffSide": "RIGHT", "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTo1MjoxNFrOFo8cVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMTo0NzozMVrOFo_vbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3NzY1NQ==", "bodyText": "It seems quite several places use this concatenation MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + realmAddress. I suggest creating a static util method to build the path, which may look cleaner.", "url": "https://github.com/apache/helix/pull/751#discussion_r378477655", "createdAt": "2020-02-12T19:52:14Z", "author": {"login": "huizhilu"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -53,55 +53,45 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n       throw new IllegalArgumentException(\"Zk address cannot be null or empty!\");\n     }\n     _zkAddress = zkAddress;\n-    _zkClient = DedicatedZkClientFactory.getInstance()\n-        .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddress),\n-            new HelixZkClient.ZkClientConfig().setZkSerializer(new ZNRecordSerializer()));\n+    _zkClient = DedicatedZkClientFactory.getInstance().buildZkClient(\n+        new HelixZkClient.ZkConnectionConfig(zkAddress),\n+        new HelixZkClient.ZkClientConfig().setZkSerializer(new ZNRecordSerializer()));\n     _routingDataListener = routingDataListener;\n     if (_routingDataListener != null) {\n       // Subscribe child changes\n       _zkClient.subscribeChildChanges(MetadataStoreRoutingConstants.ROUTING_DATA_PATH, this);\n       // Subscribe data changes\n       for (String child : _zkClient.getChildren(MetadataStoreRoutingConstants.ROUTING_DATA_PATH)) {\n-        _zkClient\n-            .subscribeDataChanges(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child,\n-                this);\n+        _zkClient.subscribeDataChanges(\n+            MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child, this);\n       }\n     }\n   }\n \n   /**\n    * Returns (realm, list of ZK path sharding keys) mappings.\n    * @return Map <realm, list of ZK path sharding keys>\n-   * @throws InvalidRoutingDataException\n+   * @throws InvalidRoutingDataException - when the node on\n+   *           MetadataStoreRoutingConstants.ROUTING_DATA_PATH is missing\n    */\n-  public Map<String, List<String>> getRoutingData()\n-      throws InvalidRoutingDataException {\n+  public Map<String, List<String>> getRoutingData() throws InvalidRoutingDataException {\n     Map<String, List<String>> routingData = new HashMap<>();\n-    List<String> children;\n+    List<String> allRealmAddresses;\n     try {\n-      children = _zkClient.getChildren(MetadataStoreRoutingConstants.ROUTING_DATA_PATH);\n+      allRealmAddresses = _zkClient.getChildren(MetadataStoreRoutingConstants.ROUTING_DATA_PATH);\n     } catch (ZkNoNodeException e) {\n       throw new InvalidRoutingDataException(\n           \"Routing data directory ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH\n               + \" does not exist. Routing ZooKeeper address: \" + _zkAddress);\n     }\n-    if (children == null || children.isEmpty()) {\n-      throw new InvalidRoutingDataException(\n-          \"There are no metadata store realms defined. Routing ZooKeeper address: \" + _zkAddress);\n-    }\n-    for (String child : children) {\n+    for (String realmAddress : allRealmAddresses) {\n       ZNRecord record =\n-          _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child);\n+          _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + realmAddress);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e52482491491715d886285192fb9083de6eaf03"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzMTY5Mw==", "bodyText": "This IMO is not significant enough to create a static method for. The logic is far too simple for a method to be created. If we have repeated occurrences of string-building such as MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + param1 + \"/\" + param2 + \"/\" + param3 then I agree it's necessary.", "url": "https://github.com/apache/helix/pull/751#discussion_r378531693", "createdAt": "2020-02-12T21:47:31Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -53,55 +53,45 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n       throw new IllegalArgumentException(\"Zk address cannot be null or empty!\");\n     }\n     _zkAddress = zkAddress;\n-    _zkClient = DedicatedZkClientFactory.getInstance()\n-        .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddress),\n-            new HelixZkClient.ZkClientConfig().setZkSerializer(new ZNRecordSerializer()));\n+    _zkClient = DedicatedZkClientFactory.getInstance().buildZkClient(\n+        new HelixZkClient.ZkConnectionConfig(zkAddress),\n+        new HelixZkClient.ZkClientConfig().setZkSerializer(new ZNRecordSerializer()));\n     _routingDataListener = routingDataListener;\n     if (_routingDataListener != null) {\n       // Subscribe child changes\n       _zkClient.subscribeChildChanges(MetadataStoreRoutingConstants.ROUTING_DATA_PATH, this);\n       // Subscribe data changes\n       for (String child : _zkClient.getChildren(MetadataStoreRoutingConstants.ROUTING_DATA_PATH)) {\n-        _zkClient\n-            .subscribeDataChanges(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child,\n-                this);\n+        _zkClient.subscribeDataChanges(\n+            MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child, this);\n       }\n     }\n   }\n \n   /**\n    * Returns (realm, list of ZK path sharding keys) mappings.\n    * @return Map <realm, list of ZK path sharding keys>\n-   * @throws InvalidRoutingDataException\n+   * @throws InvalidRoutingDataException - when the node on\n+   *           MetadataStoreRoutingConstants.ROUTING_DATA_PATH is missing\n    */\n-  public Map<String, List<String>> getRoutingData()\n-      throws InvalidRoutingDataException {\n+  public Map<String, List<String>> getRoutingData() throws InvalidRoutingDataException {\n     Map<String, List<String>> routingData = new HashMap<>();\n-    List<String> children;\n+    List<String> allRealmAddresses;\n     try {\n-      children = _zkClient.getChildren(MetadataStoreRoutingConstants.ROUTING_DATA_PATH);\n+      allRealmAddresses = _zkClient.getChildren(MetadataStoreRoutingConstants.ROUTING_DATA_PATH);\n     } catch (ZkNoNodeException e) {\n       throw new InvalidRoutingDataException(\n           \"Routing data directory ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH\n               + \" does not exist. Routing ZooKeeper address: \" + _zkAddress);\n     }\n-    if (children == null || children.isEmpty()) {\n-      throw new InvalidRoutingDataException(\n-          \"There are no metadata store realms defined. Routing ZooKeeper address: \" + _zkAddress);\n-    }\n-    for (String child : children) {\n+    for (String realmAddress : allRealmAddresses) {\n       ZNRecord record =\n-          _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child);\n+          _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + realmAddress);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3NzY1NQ=="}, "originalCommit": {"oid": "7e52482491491715d886285192fb9083de6eaf03"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1618, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}