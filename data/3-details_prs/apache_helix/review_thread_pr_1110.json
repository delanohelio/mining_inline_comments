{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDk5ODEw", "number": 1110, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozMToyM1rOEHvJ7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDozODozMVrOEHxfZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTQ4MDc2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/HelixPropertyFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozMToyM1rOGnRt9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTozMToyM1rOGnRt9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgzNzk0MA==", "bodyText": "Let's move this to the block, since it will be closed in finally block anyway.", "url": "https://github.com/apache/helix/pull/1110#discussion_r443837940", "createdAt": "2020-06-22T21:31:23Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/HelixPropertyFactory.java", "diffHunk": "@@ -47,17 +49,30 @@ public static HelixPropertyFactory getInstance() {\n    * Clients may override these values.\n    */\n   public HelixManagerProperty getHelixManagerProperty(String zkAddress, String clusterName) {\n-    ConfigAccessor configAccessor = new ConfigAccessor(zkAddress);\n     CloudConfig cloudConfig;\n-    // The try-catch logic is for backward compatibility reason only. Even if the cluster is not set\n-    // up yet, constructing a new ZKHelixManager should not throw an exception\n+    HelixZkClient zkClient = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "131ccd24b28155bb9ef0d802767c7c53ed9693cd"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTg2MzQxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/HelixPropertyFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDozODozMVrOGnVY2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDozODozMVrOGnVY2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5ODA3Mw==", "bodyText": "Let's mention another reason we want a dedicated client instead of shared client here is for the isolation level that we need.", "url": "https://github.com/apache/helix/pull/1110#discussion_r443898073", "createdAt": "2020-06-23T00:38:31Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/HelixPropertyFactory.java", "diffHunk": "@@ -47,17 +49,30 @@ public static HelixPropertyFactory getInstance() {\n    * Clients may override these values.\n    */\n   public HelixManagerProperty getHelixManagerProperty(String zkAddress, String clusterName) {\n-    ConfigAccessor configAccessor = new ConfigAccessor(zkAddress);\n     CloudConfig cloudConfig;\n-    // The try-catch logic is for backward compatibility reason only. Even if the cluster is not set\n-    // up yet, constructing a new ZKHelixManager should not throw an exception\n+    HelixZkClient zkClient = null;\n     try {\n-      cloudConfig =\n-          configAccessor.getCloudConfig(clusterName) == null ? buildEmptyCloudConfig(clusterName)\n-              : configAccessor.getCloudConfig(clusterName);\n-    } catch (HelixException e) {\n-      cloudConfig = buildEmptyCloudConfig(clusterName);\n+      // This configAccessor is a dedicated zkclient because HelixManager is single realm", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "131ccd24b28155bb9ef0d802767c7c53ed9693cd"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1189, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}