{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MTU0OTAw", "number": 1265, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTowNzozN1rOEYPIqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTowNzozN1rOEYPIqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODQ5MjU2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/paticipant/TestInstanceAutoJoin.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTowNzozN1rOHAduDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTozODo1MFrOHAeovA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI0ODk3Mg==", "bodyText": "Why this line is needed?", "url": "https://github.com/apache/helix/pull/1265#discussion_r470248972", "createdAt": "2020-08-13T21:07:37Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/paticipant/TestInstanceAutoJoin.java", "diffHunk": "@@ -110,14 +108,23 @@ public void testAutoRegistrationShouldFailWhenWaitingResponse() throws Exception\n         new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, instance3);\n     autoParticipant.syncStart();\n \n-    Assert.assertTrue(null == manager.getHelixDataAccessor()\n-        .getProperty(accessor.keyBuilder().liveInstance(instance3)));\n+    // if the test is run in cloud environment, auto registration will succeed and live instance\n+    // will be added, otherwise, auto registration will fail and instance config will not be\n+    // populated. An exception will be thrown.\n     try {\n       manager.getConfigAccessor().getInstanceConfig(CLUSTER_NAME, instance3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d001042fda45e70e388fa4dd7e545fba2f4f4bf"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1MDUyMg==", "bodyText": "This line is used to trigger the exception to be thrown as the instance config is not there.", "url": "https://github.com/apache/helix/pull/1265#discussion_r470250522", "createdAt": "2020-08-13T21:10:46Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/paticipant/TestInstanceAutoJoin.java", "diffHunk": "@@ -110,14 +108,23 @@ public void testAutoRegistrationShouldFailWhenWaitingResponse() throws Exception\n         new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, instance3);\n     autoParticipant.syncStart();\n \n-    Assert.assertTrue(null == manager.getHelixDataAccessor()\n-        .getProperty(accessor.keyBuilder().liveInstance(instance3)));\n+    // if the test is run in cloud environment, auto registration will succeed and live instance\n+    // will be added, otherwise, auto registration will fail and instance config will not be\n+    // populated. An exception will be thrown.\n     try {\n       manager.getConfigAccessor().getInstanceConfig(CLUSTER_NAME, instance3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI0ODk3Mg=="}, "originalCommit": {"oid": "9d001042fda45e70e388fa4dd7e545fba2f4f4bf"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI2Mzk5Ng==", "bodyText": "Got it. You are right.", "url": "https://github.com/apache/helix/pull/1265#discussion_r470263996", "createdAt": "2020-08-13T21:38:50Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/paticipant/TestInstanceAutoJoin.java", "diffHunk": "@@ -110,14 +108,23 @@ public void testAutoRegistrationShouldFailWhenWaitingResponse() throws Exception\n         new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, instance3);\n     autoParticipant.syncStart();\n \n-    Assert.assertTrue(null == manager.getHelixDataAccessor()\n-        .getProperty(accessor.keyBuilder().liveInstance(instance3)));\n+    // if the test is run in cloud environment, auto registration will succeed and live instance\n+    // will be added, otherwise, auto registration will fail and instance config will not be\n+    // populated. An exception will be thrown.\n     try {\n       manager.getConfigAccessor().getInstanceConfig(CLUSTER_NAME, instance3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI0ODk3Mg=="}, "originalCommit": {"oid": "9d001042fda45e70e388fa4dd7e545fba2f4f4bf"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 888, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}