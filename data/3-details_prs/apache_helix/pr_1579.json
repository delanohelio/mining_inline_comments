{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NzgzNDkx", "number": 1579, "title": "Task Current State Migration: helix-rest, utils, tests changes", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1549 (Partially)\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nTo address excessive ZooKeeper reads caused by task framework CurrentState updates, it is proposed to move task framework CurrentStates to their separate path.\nThe change is divided to multiple phases. This is a part of the first phase where non-essential changes are included. For the first part, see #1550.\nTests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[INFO] Tests run: 1251, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5,127.55 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 1251, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:25 h\n[INFO] Finished at: 2020-12-09T20:09:32-08:00\n[INFO] ------------------------------------------------------------------------\n\n[INFO] Tests run: 171, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 90.526 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 171, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:35 min\n[INFO] Finished at: 2020-12-10T09:38:47-08:00\n[INFO] ------------------------------------------------------------------------\n\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-12-08T23:06:05Z", "url": "https://github.com/apache/helix/pull/1579", "merged": true, "mergeCommit": {"oid": "222e56c7ea78175af011f58261349d29cb3cf389"}, "closed": true, "closedAt": "2020-12-14T22:00:56Z", "author": {"login": "NealSun96"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkSQHQAH2gAyNTM0NzgzNDkxOjlkMzk2M2JiYmEzZmI3YjQ2NWE5Y2QyNDkzMDBlODQzOTc4MDg4Zjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdk8cxDAH2gAyNTM0NzgzNDkxOmQ1ZTJjMTlkYzM0MWJhODlkMTk1NWQ0YzhmZmUzNjdlODYzMGNkOWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/9d3963bbba3fb7b465a9cd249300e843978088f8", "committedDate": "2020-12-08T22:54:24Z", "message": "revert non essential changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODgyMTg4", "url": "https://github.com/apache/helix/pull/1579#pullrequestreview-547882188", "createdAt": "2020-12-09T06:46:02Z", "commit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODg0NTE1", "url": "https://github.com/apache/helix/pull/1579#pullrequestreview-547884515", "createdAt": "2020-12-09T06:51:28Z", "commit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjo1MToyOFrOICFIPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjo1Njo1N1rOICFRIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjA5Mg==", "bodyText": "This is fine, I guess you can just deprecate the older one.", "url": "https://github.com/apache/helix/pull/1579#discussion_r539052092", "createdAt": "2020-12-09T06:51:28Z", "author": {"login": "jiajunwang"}, "path": "helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/CurrentStatesResource.java", "diffHunk": "@@ -65,10 +66,10 @@ StringRepresentation getInstanceCurrentStatesRepresentation(String clusterName,\n     String instanceSessionId =\n         ClusterRepresentationUtil.getInstanceSessionId(zkClient, clusterName, instanceName);\n \n-    String message =\n-        ClusterRepresentationUtil\n-            .getInstancePropertyNameListAsString(zkClient, clusterName, instanceName,\n-                PropertyType.CURRENTSTATES, instanceSessionId, MediaType.APPLICATION_JSON);\n+    String message = ClusterRepresentationUtil\n+        .getMultiInstancePropertyNameListsAsString(zkClient, clusterName, instanceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjYzOA==", "bodyText": "A new controller supports the older participants. So this should not be a required path, no?", "url": "https://github.com/apache/helix/pull/1579#discussion_r539052638", "createdAt": "2020-12-09T06:52:45Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -153,6 +153,7 @@ public static boolean isInstanceSetup(RealmAwareZkClient zkclient, String cluste\n       requiredPaths.add(PropertyPathBuilder.instanceConfig(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceMessage(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceCurrentState(clusterName, instanceName));\n+      requiredPaths.add(PropertyPathBuilder.instanceTaskCurrentState(clusterName, instanceName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MzQ0NQ==", "bodyText": "Can we change to use the multi remove method that is also supported by the accessor?", "url": "https://github.com/apache/helix/pull/1579#discussion_r539053445", "createdAt": "2020-12-09T06:54:39Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/tools/commandtools/CurrentStateCleanUp.java", "diffHunk": "@@ -124,15 +125,21 @@ public ZNRecord update(ZNRecord currentData) {\n       LOG.info(String.format(\"Processing cleaning current state for instance: %s\", instanceName));\n       List<String> currentStateNames =\n           accessor.getChildNames(accessor.keyBuilder().currentStates(instanceName, session));\n-      for (String currentStateName : currentStateNames) {\n-        PropertyKey key =\n-            accessor.keyBuilder().currentState(instanceName, session, currentStateName);\n+      List<String> taskCurrentStateNames =\n+          accessor.getChildNames(accessor.keyBuilder().taskCurrentStates(instanceName, session));\n+      List<PropertyKey> allCurrentStateKeys = new ArrayList<>();\n+      currentStateNames.stream()\n+          .map(name -> accessor.keyBuilder().currentState(instanceName, session, name))\n+          .forEach(allCurrentStateKeys::add);\n+      taskCurrentStateNames.stream()\n+          .map(name -> accessor.keyBuilder().taskCurrentState(instanceName, session, name))\n+          .forEach(allCurrentStateKeys::add);\n+      for (PropertyKey key : allCurrentStateKeys) {\n         accessor.getBaseDataAccessor().update(key.getPath(), updater, AccessOption.PERSISTENT);\n         CurrentState currentState = accessor.getProperty(key);\n         if (currentState.getPartitionStateMap().size() == 0) {\n           accessor.getBaseDataAccessor().remove(key.getPath(), AccessOption.PERSISTENT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1NDM2OA==", "bodyText": "nit, could you also update the method comment?\n\"at least 1 resource\" -> \"at least 1 resource or task\", something like this.", "url": "https://github.com/apache/helix/pull/1579#discussion_r539054368", "createdAt": "2020-12-09T06:56:57Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java", "diffHunk": "@@ -104,9 +104,8 @@ public static boolean hasResourceAssigned(HelixDataAccessor dataAccessor, String\n     if (liveInstance != null) {\n       String sessionId = liveInstance.getEphemeralOwner();\n \n-      List<String> resourceNames = dataAccessor.getChildNames(propertyKeyBuilder.currentStates(instanceName, sessionId));\n-      for (String resourceName : resourceNames) {\n-        PropertyKey currentStateKey = propertyKeyBuilder.currentState(instanceName, sessionId, resourceName);\n+      for (PropertyKey currentStateKey : getAllCurrentStateKeys(dataAccessor, instanceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0d0cb84da704e3c14dd4ff2d62d0ee3d2fa6bde", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/b0d0cb84da704e3c14dd4ff2d62d0ee3d2fa6bde", "committedDate": "2020-12-09T18:58:10Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NTU3NTEx", "url": "https://github.com/apache/helix/pull/1579#pullrequestreview-548557511", "createdAt": "2020-12-09T19:57:24Z", "commit": {"oid": "b0d0cb84da704e3c14dd4ff2d62d0ee3d2fa6bde"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74da32be1a891ca16215d4952a6c8d2343920c71", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/74da32be1a891ca16215d4952a6c8d2343920c71", "committedDate": "2020-12-09T23:05:39Z", "message": "revert webapp changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjU3ODU0", "url": "https://github.com/apache/helix/pull/1579#pullrequestreview-549657854", "createdAt": "2020-12-10T22:31:41Z", "commit": {"oid": "74da32be1a891ca16215d4952a6c8d2343920c71"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozMTo0MVrOIDgRbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozMjo0NFrOIDgTqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTM5MA==", "bodyText": "This is not necessary to instance validation util. Because this management API is used for check real data resource. Our split could even better to filter out the TASK current state.", "url": "https://github.com/apache/helix/pull/1579#discussion_r540545390", "createdAt": "2020-12-10T22:31:41Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java", "diffHunk": "@@ -188,11 +187,7 @@ public static boolean hasErrorPartitions(HelixDataAccessor dataAccessor, String\n     if (liveInstance != null) {\n       String sessionId = liveInstance.getEphemeralOwner();\n \n-      PropertyKey currentStatesKey = propertyKeyBuilder.currentStates(instanceName, sessionId);\n-      List<String> resourceNames = dataAccessor.getChildNames(currentStatesKey);\n-      for (String resourceName : resourceNames) {\n-        PropertyKey key = propertyKeyBuilder.currentState(instanceName, sessionId, resourceName);\n-\n+      for (PropertyKey key : getAllCurrentStateKeys(dataAccessor, instanceName, sessionId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74da32be1a891ca16215d4952a6c8d2343920c71"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTk2Mw==", "bodyText": "Same here. We dont care about tasks for management API.", "url": "https://github.com/apache/helix/pull/1579#discussion_r540545963", "createdAt": "2020-12-10T22:32:44Z", "author": {"login": "junkaixue"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/server/service/InstanceServiceImpl.java", "diffHunk": "@@ -119,19 +120,25 @@ public InstanceInfo getInstanceInfo(String clusterId, String instanceName,\n       instanceInfoBuilder.liveInstance(liveInstance.getRecord());\n       String sessionId = liveInstance.getEphemeralOwner();\n \n+      Map<String, PropertyKey> resourcePropertyKeyPair = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74da32be1a891ca16215d4952a6c8d2343920c71"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5e2c19dc341ba89d1955d4c8ffe367e8630cd9e", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/d5e2c19dc341ba89d1955d4c8ffe367e8630cd9e", "committedDate": "2020-12-11T00:04:14Z", "message": "Revert manage util changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4161, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}