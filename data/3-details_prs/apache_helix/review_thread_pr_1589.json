{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MzE5MzQ2", "number": 1589, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMDo0MzozOFrOFETDNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMTo0NDoyNFrOFF5HmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDUwNzQwOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMDo0MzozOFrOIEX-uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMDo0MzozOFrOIEX-uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1ODEwNQ==", "bodyText": "Should be the reverse way? I guess.\nCallbackProcessor callbackProcessor = _batchCallbackProcessorRef.get();", "url": "https://github.com/apache/helix/pull/1589#discussion_r541458105", "createdAt": "2020-12-12T00:43:38Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -319,13 +320,12 @@ public void enqueueTask(NotificationContext changeContext) throws Exception {\n         logger.info(\"CallbackHandler {} is not ready, ignore change callback from path: {}, for \"\n             + \"listener: {}\", _uid, _path, _listener);\n       } else {\n-        synchronized (this) {\n-          if (_batchCallbackProcessor != null) {\n-            _batchCallbackProcessor.queueEvent(changeContext.getType(), changeContext);\n-          } else {\n-            throw new HelixException(\n-                \"Failed to process callback in batch mode. Batch Callback Processor does not exist.\");\n-          }\n+        CallbackProcessor callbackProcessorRef = _batchCallbackProcessor.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87162ebb70fb30e9d5d24659aa00167b62556ab6"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDUxNDY0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMDo0NzoxOFrOIEYCXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMTo1MToxN1rOIFr_Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1OTAzNg==", "bodyText": "Just do getAndSet(null). Then shutdown the returned value.", "url": "https://github.com/apache/helix/pull/1589#discussion_r541459036", "createdAt": "2020-12-12T00:47:18Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -766,16 +769,16 @@ void reset(boolean isShutdown) {\n         isShutdown);\n     try {\n       _ready = false;\n-      synchronized (this) {\n-        if (_batchCallbackProcessor != null) {\n+      CallbackProcessor callbackProcessorRef = _batchCallbackProcessor.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87162ebb70fb30e9d5d24659aa00167b62556ab6"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgzNDUxMA==", "bodyText": "Sorry I did not quite follow here. We still need to do nullptr check of the return value from getAndSet and also need to check isShutdown in the outer if. It does not seems to make this embedded if simpler.", "url": "https://github.com/apache/helix/pull/1589#discussion_r542834510", "createdAt": "2020-12-14T21:51:17Z", "author": {"login": "xyuanlu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -766,16 +769,16 @@ void reset(boolean isShutdown) {\n         isShutdown);\n     try {\n       _ready = false;\n-      synchronized (this) {\n-        if (_batchCallbackProcessor != null) {\n+      CallbackProcessor callbackProcessorRef = _batchCallbackProcessor.get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1OTAzNg=="}, "originalCommit": {"oid": "87162ebb70fb30e9d5d24659aa00167b62556ab6"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDUzNjgzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMDo1OTowN1rOIEYNRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMTo0NzozM1rOIFrwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ2MTgyOA==", "bodyText": "This is not necessary if the start() is done after insertion, right?\nIf we change the design due to the previous comment, then it is a different story.", "url": "https://github.com/apache/helix/pull/1589#discussion_r541461828", "createdAt": "2020-12-12T00:59:07Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -643,14 +643,17 @@ public void init() {\n     logger.info(\"initializing CallbackHandler: {}, content: {} \", _uid, getContent());\n \n     if (_batchModeEnabled) {\n-      synchronized (this) {\n-        if (_batchCallbackProcessor != null) {\n-          _batchCallbackProcessor.resetEventQueue();\n+      CallbackProcessor callbackProcessorRef = _batchCallbackProcessor.get();\n+        if (callbackProcessorRef != null) {\n+          callbackProcessorRef.resetEventQueue();\n         } else {\n-          _batchCallbackProcessor = new CallbackProcessor(this);\n-          _batchCallbackProcessor.start();\n+          callbackProcessorRef = new CallbackProcessor(this);\n+          if (_batchCallbackProcessor.compareAndSet(null, callbackProcessorRef)) {\n+            callbackProcessorRef.start();\n+          } else {\n+            callbackProcessorRef.shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87162ebb70fb30e9d5d24659aa00167b62556ab6"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgzMDY0OQ==", "bodyText": "I think new CallbackProcessor(this) creates a new thread and we need to close it if the new thread is not updated to _batchCallbackProcessor. However, since are doing start and then insert now, we need this shutdown anyway.", "url": "https://github.com/apache/helix/pull/1589#discussion_r542830649", "createdAt": "2020-12-14T21:47:33Z", "author": {"login": "xyuanlu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -643,14 +643,17 @@ public void init() {\n     logger.info(\"initializing CallbackHandler: {}, content: {} \", _uid, getContent());\n \n     if (_batchModeEnabled) {\n-      synchronized (this) {\n-        if (_batchCallbackProcessor != null) {\n-          _batchCallbackProcessor.resetEventQueue();\n+      CallbackProcessor callbackProcessorRef = _batchCallbackProcessor.get();\n+        if (callbackProcessorRef != null) {\n+          callbackProcessorRef.resetEventQueue();\n         } else {\n-          _batchCallbackProcessor = new CallbackProcessor(this);\n-          _batchCallbackProcessor.start();\n+          callbackProcessorRef = new CallbackProcessor(this);\n+          if (_batchCallbackProcessor.compareAndSet(null, callbackProcessorRef)) {\n+            callbackProcessorRef.start();\n+          } else {\n+            callbackProcessorRef.shutdown();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ2MTgyOA=="}, "originalCommit": {"oid": "87162ebb70fb30e9d5d24659aa00167b62556ab6"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDU1NTQwOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTowOTowM1rOIEYWVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMTo0NTo1M1rOIFrpPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ2NDE0OQ==", "bodyText": "Consider the following operation order:\n\ninit() and reset() is called at the same time.\nIn init(), the code reaches line 652, but not start yet.\nAt the same time, in reset(), code reaches line 776, and tries to shutdown the thread. But it cannot, since the thread has not been started yet. Note, in java doc, \"Interrupting a thread that is not alive need not have any effect.\"\nThen the code in init() try to start, the thread is started.\n\nWe have a leaked thread, eventually.", "url": "https://github.com/apache/helix/pull/1589#discussion_r541464149", "createdAt": "2020-12-12T01:09:03Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -643,14 +643,17 @@ public void init() {\n     logger.info(\"initializing CallbackHandler: {}, content: {} \", _uid, getContent());\n \n     if (_batchModeEnabled) {\n-      synchronized (this) {\n-        if (_batchCallbackProcessor != null) {\n-          _batchCallbackProcessor.resetEventQueue();\n+      CallbackProcessor callbackProcessorRef = _batchCallbackProcessor.get();\n+        if (callbackProcessorRef != null) {\n+          callbackProcessorRef.resetEventQueue();\n         } else {\n-          _batchCallbackProcessor = new CallbackProcessor(this);\n-          _batchCallbackProcessor.start();\n+          callbackProcessorRef = new CallbackProcessor(this);\n+          if (_batchCallbackProcessor.compareAndSet(null, callbackProcessorRef)) {\n+            callbackProcessorRef.start();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87162ebb70fb30e9d5d24659aa00167b62556ab6"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ2NDQzMQ==", "bodyText": "I think you will need to start and then insert it into the atomic object.\nBut please revisit and see if there are any other ways.", "url": "https://github.com/apache/helix/pull/1589#discussion_r541464431", "createdAt": "2020-12-12T01:10:24Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -643,14 +643,17 @@ public void init() {\n     logger.info(\"initializing CallbackHandler: {}, content: {} \", _uid, getContent());\n \n     if (_batchModeEnabled) {\n-      synchronized (this) {\n-        if (_batchCallbackProcessor != null) {\n-          _batchCallbackProcessor.resetEventQueue();\n+      CallbackProcessor callbackProcessorRef = _batchCallbackProcessor.get();\n+        if (callbackProcessorRef != null) {\n+          callbackProcessorRef.resetEventQueue();\n         } else {\n-          _batchCallbackProcessor = new CallbackProcessor(this);\n-          _batchCallbackProcessor.start();\n+          callbackProcessorRef = new CallbackProcessor(this);\n+          if (_batchCallbackProcessor.compareAndSet(null, callbackProcessorRef)) {\n+            callbackProcessorRef.start();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ2NDE0OQ=="}, "originalCommit": {"oid": "87162ebb70fb30e9d5d24659aa00167b62556ab6"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgyODg2MA==", "bodyText": "TFTR. I think you are correct. We should't touch the callbackProcessorRef  object after compareAndSet returns true.\nNeed to start and then insert", "url": "https://github.com/apache/helix/pull/1589#discussion_r542828860", "createdAt": "2020-12-14T21:45:53Z", "author": {"login": "xyuanlu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -643,14 +643,17 @@ public void init() {\n     logger.info(\"initializing CallbackHandler: {}, content: {} \", _uid, getContent());\n \n     if (_batchModeEnabled) {\n-      synchronized (this) {\n-        if (_batchCallbackProcessor != null) {\n-          _batchCallbackProcessor.resetEventQueue();\n+      CallbackProcessor callbackProcessorRef = _batchCallbackProcessor.get();\n+        if (callbackProcessorRef != null) {\n+          callbackProcessorRef.resetEventQueue();\n         } else {\n-          _batchCallbackProcessor = new CallbackProcessor(this);\n-          _batchCallbackProcessor.start();\n+          callbackProcessorRef = new CallbackProcessor(this);\n+          if (_batchCallbackProcessor.compareAndSet(null, callbackProcessorRef)) {\n+            callbackProcessorRef.start();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ2NDE0OQ=="}, "originalCommit": {"oid": "87162ebb70fb30e9d5d24659aa00167b62556ab6"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNzIyMzM2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMTo0MTo1NVrOIGnzag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMTo0MTo1NVrOIGnzag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxNDUwNg==", "bodyText": "nit, extra ;", "url": "https://github.com/apache/helix/pull/1589#discussion_r543814506", "createdAt": "2020-12-16T01:41:55Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -133,7 +134,7 @@\n   private HelixCallbackMonitor _monitor;\n \n   // TODO: make this be per _manager or per _listener instaed of per callbackHandler -- Lei\n-  private CallbackProcessor _batchCallbackProcessor;\n+  private AtomicReference<CallbackProcessor> _batchCallbackProcessorRef = new AtomicReference<>();;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0187965ac3aec5541ee847906ee53a8169e02a1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNzIzMDMzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMTo0NDoyNFrOIGn3Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjozNjoxNVrOIGpvdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxNTQ3MA==", "bodyText": "Not necessarily wrong behavior. But this may change the behavior.\nThe older logic will throw an exception if the event won't be processed. But with the new code, it is possible that we add the event to a closed processor without throwing exception?", "url": "https://github.com/apache/helix/pull/1589#discussion_r543815470", "createdAt": "2020-12-16T01:44:24Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -319,13 +320,12 @@ public void enqueueTask(NotificationContext changeContext) throws Exception {\n         logger.info(\"CallbackHandler {} is not ready, ignore change callback from path: {}, for \"\n             + \"listener: {}\", _uid, _path, _listener);\n       } else {\n-        synchronized (this) {\n-          if (_batchCallbackProcessor != null) {\n-            _batchCallbackProcessor.queueEvent(changeContext.getType(), changeContext);\n-          } else {\n-            throw new HelixException(\n-                \"Failed to process callback in batch mode. Batch Callback Processor does not exist.\");\n-          }\n+        CallbackProcessor callbackProcessor = _batchCallbackProcessorRef.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0187965ac3aec5541ee847906ee53a8169e02a1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg0NjI2Mw==", "bodyText": "TFTR. Yes, it is a behavior change. However, I think in the old code when er get exception notice like this, we would treat it as a no-harm exception... So I think this change is ok.", "url": "https://github.com/apache/helix/pull/1589#discussion_r543846263", "createdAt": "2020-12-16T02:36:15Z", "author": {"login": "xyuanlu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -319,13 +320,12 @@ public void enqueueTask(NotificationContext changeContext) throws Exception {\n         logger.info(\"CallbackHandler {} is not ready, ignore change callback from path: {}, for \"\n             + \"listener: {}\", _uid, _path, _listener);\n       } else {\n-        synchronized (this) {\n-          if (_batchCallbackProcessor != null) {\n-            _batchCallbackProcessor.queueEvent(changeContext.getType(), changeContext);\n-          } else {\n-            throw new HelixException(\n-                \"Failed to process callback in batch mode. Batch Callback Processor does not exist.\");\n-          }\n+        CallbackProcessor callbackProcessor = _batchCallbackProcessorRef.get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxNTQ3MA=="}, "originalCommit": {"oid": "b0187965ac3aec5541ee847906ee53a8169e02a1"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 855, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}