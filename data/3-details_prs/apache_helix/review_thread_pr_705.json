{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NjI0ODU3", "number": 705, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoyODowNFrODaZzrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoyODozOFrODaZ0Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDEyMzk2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoyODowNFrOFhVm5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNDo1MToxNlrOFh38WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTM1MA==", "bodyText": "existed -> existing", "url": "https://github.com/apache/helix/pull/705#discussion_r370501350", "createdAt": "2020-01-24T07:28:04Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2Mzg5Ng==", "bodyText": "Fixed.", "url": "https://github.com/apache/helix/pull/705#discussion_r371063896", "createdAt": "2020-01-27T04:51:16Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTM1MA=="}, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDEyNDE0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoyODoxMlrOFhVnBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNDo1MTo1NFrOFh38mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTM4MQ==", "bodyText": "\"workflow context of the workflow whose workflow config does not exist\"", "url": "https://github.com/apache/helix/pull/705#discussion_r370501381", "createdAt": "2020-01-24T07:28:12Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and\n+   * Workflow Context if Workflow Config is missing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2Mzk2Mg==", "bodyText": "Done.", "url": "https://github.com/apache/helix/pull/705#discussion_r371063962", "createdAt": "2020-01-27T04:51:54Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and\n+   * Workflow Context if Workflow Config is missing.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTM4MQ=="}, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDEyNDQ2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoyODoyMVrOFhVnMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMzo0NTozNFrOFka0Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTQyNA==", "bodyText": "Here we are doing a loop based on workflow contexts. Could there be cases where IdealStates exist but contexts/configs do not?", "url": "https://github.com/apache/helix/pull/705#discussion_r370501424", "createdAt": "2020-01-24T07:28:21Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and\n+   * Workflow Context if Workflow Config is missing.\n+   * @param dataProvider\n+   * @param manager\n+   */\n+  public static void workflowGarbageCollection(WorkflowControllerDataProvider dataProvider,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2NDcwMQ==", "bodyText": "Since controller attempts to delete the workflow context after the successful deletion of the workflow config and IdealState, there is no need to consider cases where IS existed without contexts/configs.", "url": "https://github.com/apache/helix/pull/705#discussion_r371064701", "createdAt": "2020-01-27T04:58:08Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and\n+   * Workflow Context if Workflow Config is missing.\n+   * @param dataProvider\n+   * @param manager\n+   */\n+  public static void workflowGarbageCollection(WorkflowControllerDataProvider dataProvider,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTQyNA=="}, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MjMzNw==", "bodyText": "How could be sure that both WorkflowConfig and IS were deleted successfully? Is it possible that only config was removed and IS didn't get removed?", "url": "https://github.com/apache/helix/pull/705#discussion_r373682337", "createdAt": "2020-01-31T20:58:27Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and\n+   * Workflow Context if Workflow Config is missing.\n+   * @param dataProvider\n+   * @param manager\n+   */\n+  public static void workflowGarbageCollection(WorkflowControllerDataProvider dataProvider,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTQyNA=="}, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczMjM3OQ==", "bodyText": "Let's consider two scenarios:\n\n\nCase 1 where workflow config has been deleted but workflow context and IS have not been removed. In this case this PR addresses this scenario and deletes both of them. Note that in this PR context won't be removed unless IS is removed. If IS has not been successfully removed, we will try to delete it again in next pipeline.\n\n\nCase 2 where workflow config and context have been removed and IS has not been removed. I am arguing that this is not possible since context is always the last one that controller removes.", "url": "https://github.com/apache/helix/pull/705#discussion_r373732379", "createdAt": "2020-01-31T23:45:34Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and\n+   * Workflow Context if Workflow Config is missing.\n+   * @param dataProvider\n+   * @param manager\n+   */\n+  public static void workflowGarbageCollection(WorkflowControllerDataProvider dataProvider,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTQyNA=="}, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDEyNDcxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoyODozMFrOFhVnWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNDo1OTowM1rOFh3_-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTQ2NA==", "bodyText": "is existed -> exists", "url": "https://github.com/apache/helix/pull/705#discussion_r370501464", "createdAt": "2020-01-24T07:28:30Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and\n+   * Workflow Context if Workflow Config is missing.\n+   * @param dataProvider\n+   * @param manager\n+   */\n+  public static void workflowGarbageCollection(WorkflowControllerDataProvider dataProvider,\n+      final HelixManager manager) {\n+    // Garbage collections for conditions where workflow context is existed but config is missing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2NDgyNA==", "bodyText": "fixed.", "url": "https://github.com/apache/helix/pull/705#discussion_r371064824", "createdAt": "2020-01-27T04:59:03Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and\n+   * Workflow Context if Workflow Config is missing.\n+   * @param dataProvider\n+   * @param manager\n+   */\n+  public static void workflowGarbageCollection(WorkflowControllerDataProvider dataProvider,\n+      final HelixManager manager) {\n+    // Garbage collections for conditions where workflow context is existed but config is missing.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTQ2NA=="}, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDEyNDk0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoyODozOFrOFhVnew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNDo1OTo1MFrOFh4AZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTQ5OQ==", "bodyText": "When you do this, you'd want to take a snapshot of the entries because this might cause a ConcurrentModificationException.", "url": "https://github.com/apache/helix/pull/705#discussion_r370501499", "createdAt": "2020-01-24T07:28:38Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and\n+   * Workflow Context if Workflow Config is missing.\n+   * @param dataProvider\n+   * @param manager\n+   */\n+  public static void workflowGarbageCollection(WorkflowControllerDataProvider dataProvider,\n+      final HelixManager manager) {\n+    // Garbage collections for conditions where workflow context is existed but config is missing.\n+    Map<String, ZNRecord> contexts = dataProvider.getContexts();\n+    for (Map.Entry<String, ZNRecord> entry : contexts.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2NDkzNQ==", "bodyText": "Very good point. Fixed. Thanks.", "url": "https://github.com/apache/helix/pull/705#discussion_r371064935", "createdAt": "2020-01-27T04:59:50Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1036,6 +1037,46 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n     setNextJobPurgeTime(workflow, currentTime, purgeInterval, rebalanceScheduler, manager);\n   }\n \n+  /**\n+   * The function that loops through the all existed workflow contexts and removes IdealState and\n+   * Workflow Context if Workflow Config is missing.\n+   * @param dataProvider\n+   * @param manager\n+   */\n+  public static void workflowGarbageCollection(WorkflowControllerDataProvider dataProvider,\n+      final HelixManager manager) {\n+    // Garbage collections for conditions where workflow context is existed but config is missing.\n+    Map<String, ZNRecord> contexts = dataProvider.getContexts();\n+    for (Map.Entry<String, ZNRecord> entry : contexts.entrySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwMTQ5OQ=="}, "originalCommit": {"oid": "6ae41a96394af3ef6213d7d64727f44b434a5639"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1563, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}