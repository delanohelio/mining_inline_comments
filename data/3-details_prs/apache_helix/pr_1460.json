{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxODg2MjQx", "number": 1460, "title": "Silence Stacktrace from Stale Reply Messages", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1459\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nIf a reply message doesn't have a corresponding callback, AsyncCallbackService will raise an exception when creating a handler for it. Since stale reply messages may happen during participant reconnects, some customers prefer not seeing too verbose error messages since they don't require any actions of debugging.\nThis PR adds a less verbose (no stacktrace) HelixException and raises it for this specific case. It may also be used in other occasions if necessary.\nTests\n\n The following tests are written for this issue:\n\n[ERROR] Tests run: 1213, Failures: 1, Errors: 0, Skipped: 1, Time elapsed: 4,830.531 s <<< FAILURE! - in TestSuite\n[ERROR] testPeriodicRefresh(org.apache.helix.integration.spectator.TestRoutingTableProviderPeriodicRefresh)  Time elapsed: 2.031 s  <<< FAILURE!\njava.lang.AssertionError: expected:<4> but was:<3>\n        at org.apache.helix.integration.spectator.TestRoutingTableProviderPeriodicRefresh.testPeriodicRefresh(TestRoutingTableProviderPeriodicRefresh.java:214)\n\n[INFO] \n[INFO] Results:\n[INFO] \n[ERROR] Failures: \n[ERROR]   TestRoutingTableProviderPeriodicRefresh.testPeriodicRefresh:214 expected:<4> but was:<3>\n[INFO] \n[ERROR] Tests run: 1213, Failures: 1, Errors: 0, Skipped: 1\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:20 h\n[INFO] Finished at: 2020-10-12T16:36:07-07:00\n[INFO] ------------------------------------------------------------------------\n\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-10-12T23:55:24Z", "url": "https://github.com/apache/helix/pull/1460", "merged": true, "mergeCommit": {"oid": "032cd85ad40f6ddfc838fd48317a579e761e315f"}, "closed": true, "closedAt": "2020-10-21T23:10:04Z", "author": {"login": "NealSun96"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSLvy7AFqTUwNzY1ODY4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdULPuRgFqTUxMjE4MDUxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjU4Njg5", "url": "https://github.com/apache/helix/pull/1460#pullrequestreview-507658689", "createdAt": "2020-10-13T17:09:01Z", "commit": {"oid": "f602d70367538594a22f79d20e4b5c5520a7b3f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowOTowMVrOHgxJIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowOTowMVrOHgxJIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMTYzNA==", "bodyText": "A question regarding the description, if the error is just logged here, meaning the users won't really know there is a mismatch. If the callback is not done, they won't be able to distinguish between this error and other errors. Is this the expected behavior?", "url": "https://github.com/apache/helix/pull/1460#discussion_r504121634", "createdAt": "2020-10-13T17:09:01Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/main/java/org/apache/helix/messaging/handling/AsyncCallbackService.java", "diffHunk": "@@ -113,12 +104,19 @@ public HelixTaskResult handleMessage() throws InterruptedException {\n           + _correlationId);\n \n       AsyncCallback callback = _callbackMap.get(_correlationId);\n-      synchronized (callback) {\n-        callback.onReply(_message);\n-        if (callback.isDone()) {\n-          _logger.info(\"Removing finished callback, correlationid:\" + _correlationId);\n-          _callbackMap.remove(_correlationId);\n+      if (callback != null) {\n+        synchronized (callback) {\n+          callback.onReply(_message);\n+          if (callback.isDone()) {\n+            _logger.info(\"Removing finished callback, correlationid:\" + _correlationId);\n+            _callbackMap.remove(_correlationId);\n+          }\n         }\n+      } else {\n+        String msg = \"Message \" + _message.getMsgId()\n+            + \" does not have correponding callback. Probably timed out already. Correlation id: \"\n+            + _correlationId;\n+        _logger.warn(msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f602d70367538594a22f79d20e4b5c5520a7b3f2"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODU2NDE0", "url": "https://github.com/apache/helix/pull/1460#pullrequestreview-507856414", "createdAt": "2020-10-13T21:54:55Z", "commit": {"oid": "f602d70367538594a22f79d20e4b5c5520a7b3f2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTI4ODIw", "url": "https://github.com/apache/helix/pull/1460#pullrequestreview-507928820", "createdAt": "2020-10-14T01:11:23Z", "commit": {"oid": "f602d70367538594a22f79d20e4b5c5520a7b3f2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMToxMToyM1rOHg-r8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMToxMToyM1rOHg-r8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM0MzUzOQ==", "bodyText": "Alternatively, if the exception is not graceful, we can return null when createHandler() is triggered. This is much better than returning a handler that does nothing (but still consume system resources).\nOf course, the callers of createHandler() need to be improved to tolerate the null return value.", "url": "https://github.com/apache/helix/pull/1460#discussion_r504343539", "createdAt": "2020-10-14T01:11:23Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/messaging/handling/AsyncCallbackService.java", "diffHunk": "@@ -62,15 +62,6 @@ void verifyMessage(Message message) {\n       throw new HelixException(errorMsg);\n     }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f602d70367538594a22f79d20e4b5c5520a7b3f2"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a19533b1e091bc75872ebcd62000cad13aee5dc", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/9a19533b1e091bc75872ebcd62000cad13aee5dc", "committedDate": "2020-10-15T22:32:04Z", "message": "Create HelixException without stacktrace"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f602d70367538594a22f79d20e4b5c5520a7b3f2", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/f602d70367538594a22f79d20e4b5c5520a7b3f2", "committedDate": "2020-10-12T22:13:48Z", "message": "Allow stale reply messages to pass without exception"}, "afterCommit": {"oid": "9a19533b1e091bc75872ebcd62000cad13aee5dc", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/9a19533b1e091bc75872ebcd62000cad13aee5dc", "committedDate": "2020-10-15T22:32:04Z", "message": "Create HelixException without stacktrace"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTgwMjU5", "url": "https://github.com/apache/helix/pull/1460#pullrequestreview-512180259", "createdAt": "2020-10-19T21:41:25Z", "commit": {"oid": "9a19533b1e091bc75872ebcd62000cad13aee5dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0MToyNVrOHkispA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0MToyNVrOHkispA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3OTI2OA==", "bodyText": "So RuntimeException can be configured not to have stack trace out.", "url": "https://github.com/apache/helix/pull/1460#discussion_r508079268", "createdAt": "2020-10-19T21:41:25Z", "author": {"login": "kaisun2000"}, "path": "helix-common/src/main/java/org/apache/helix/HelixException.java", "diffHunk": "@@ -30,6 +30,16 @@ public HelixException(String message) {\n     super(message);\n   }\n \n+  /**\n+   * Create a HelixException that can optionally turn off stack trace. Its other characteristics are\n+   * the same as a HelixException with a message.\n+   * @param message the detail message\n+   * @param writableStackTrace whether or not the stack trace should be writable\n+   */\n+  public HelixException(String message, boolean writableStackTrace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a19533b1e091bc75872ebcd62000cad13aee5dc"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTgwNTE0", "url": "https://github.com/apache/helix/pull/1460#pullrequestreview-512180514", "createdAt": "2020-10-19T21:41:51Z", "commit": {"oid": "9a19533b1e091bc75872ebcd62000cad13aee5dc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4350, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}