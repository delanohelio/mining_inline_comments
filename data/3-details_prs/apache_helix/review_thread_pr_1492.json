{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMjEyNjY0", "number": 1492, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjo0Mjo0OFrOEzKFkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOTozNjoyMlrOE0hcQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDc4MDk2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/TestCleanupExternalView.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjo0Mjo0OFrOHqNsuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDo0MDowMlrOHsU2rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNjY4Mw==", "bodyText": "Why get it once more?", "url": "https://github.com/apache/helix/pull/1492#discussion_r514026683", "createdAt": "2020-10-29T06:42:48Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestCleanupExternalView.java", "diffHunk": "@@ -109,18 +109,14 @@ public void test() throws Exception {\n     // System.out.println(\"re-enabling controller\");\n     admin.enableCluster(clusterName, true);\n \n-    ExternalView externalView = null;\n-    for (int i = 0; i < 10; i++) {\n-      Thread.sleep(100);\n-      externalView = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));\n-      // System.out.println(\"externalView: \" + externalView);\n-      if (externalView == null) {\n-        break;\n-      }\n-    }\n \n-    Assert.assertNull(externalView, \"external-view for TestDB0 should be removed, but was: \"\n-        + externalView);\n+    result = TestHelper.verify(() -> {\n+      ExternalView externalView = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));\n+      return externalView == null;\n+    }, TestHelper.WAIT_DURATION);\n+\n+    ExternalView ev = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de5d2639d1a4af0f91b33844bc02888da2dcc901"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNzg5Ng==", "bodyText": "If it is just for the assert log, then you can do this,\nExternalView externalView = null;\nresult = TestHelper.verify(() -> {\nexternalView = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));\nreturn externalView == null;\n}, TestHelper.WAIT_DURATION);\nAssert.assertTrue(result, \"external-view for TestDB0 should be removed, but was: \" + externalView);", "url": "https://github.com/apache/helix/pull/1492#discussion_r514027896", "createdAt": "2020-10-29T06:44:30Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestCleanupExternalView.java", "diffHunk": "@@ -109,18 +109,14 @@ public void test() throws Exception {\n     // System.out.println(\"re-enabling controller\");\n     admin.enableCluster(clusterName, true);\n \n-    ExternalView externalView = null;\n-    for (int i = 0; i < 10; i++) {\n-      Thread.sleep(100);\n-      externalView = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));\n-      // System.out.println(\"externalView: \" + externalView);\n-      if (externalView == null) {\n-        break;\n-      }\n-    }\n \n-    Assert.assertNull(externalView, \"external-view for TestDB0 should be removed, but was: \"\n-        + externalView);\n+    result = TestHelper.verify(() -> {\n+      ExternalView externalView = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));\n+      return externalView == null;\n+    }, TestHelper.WAIT_DURATION);\n+\n+    ExternalView ev = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNjY4Mw=="}, "originalCommit": {"oid": "de5d2639d1a4af0f91b33844bc02888da2dcc901"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE5NzcwNQ==", "bodyText": "This way does not work. Lambda varable captured (externalView here) needs to be final. Changed it to use instance variable then.", "url": "https://github.com/apache/helix/pull/1492#discussion_r516197705", "createdAt": "2020-11-02T19:13:34Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestCleanupExternalView.java", "diffHunk": "@@ -109,18 +109,14 @@ public void test() throws Exception {\n     // System.out.println(\"re-enabling controller\");\n     admin.enableCluster(clusterName, true);\n \n-    ExternalView externalView = null;\n-    for (int i = 0; i < 10; i++) {\n-      Thread.sleep(100);\n-      externalView = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));\n-      // System.out.println(\"externalView: \" + externalView);\n-      if (externalView == null) {\n-        break;\n-      }\n-    }\n \n-    Assert.assertNull(externalView, \"external-view for TestDB0 should be removed, but was: \"\n-        + externalView);\n+    result = TestHelper.verify(() -> {\n+      ExternalView externalView = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));\n+      return externalView == null;\n+    }, TestHelper.WAIT_DURATION);\n+\n+    ExternalView ev = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNjY4Mw=="}, "originalCommit": {"oid": "de5d2639d1a4af0f91b33844bc02888da2dcc901"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MTA3MA==", "bodyText": "It certainly works. But it would be better to have a wrapper class (AtomicReference for example), to contain the result. The wrapper class can be final. Anyway, the goal is to ensure all test cases are independent of each other as far as we can.\nJust a suggestion, the current logic is also fine : )", "url": "https://github.com/apache/helix/pull/1492#discussion_r516241070", "createdAt": "2020-11-02T20:40:02Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestCleanupExternalView.java", "diffHunk": "@@ -109,18 +109,14 @@ public void test() throws Exception {\n     // System.out.println(\"re-enabling controller\");\n     admin.enableCluster(clusterName, true);\n \n-    ExternalView externalView = null;\n-    for (int i = 0; i < 10; i++) {\n-      Thread.sleep(100);\n-      externalView = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));\n-      // System.out.println(\"externalView: \" + externalView);\n-      if (externalView == null) {\n-        break;\n-      }\n-    }\n \n-    Assert.assertNull(externalView, \"external-view for TestDB0 should be removed, but was: \"\n-        + externalView);\n+    result = TestHelper.verify(() -> {\n+      ExternalView externalView = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));\n+      return externalView == null;\n+    }, TestHelper.WAIT_DURATION);\n+\n+    ExternalView ev = accessor.getProperty(keyBuilder.externalView(\"TestDB0\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNjY4Mw=="}, "originalCommit": {"oid": "de5d2639d1a4af0f91b33844bc02888da2dcc901"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTA5MzEyOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/TestCleanupExternalView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOTozNjoyMlrOHsS6aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjowOToxMlrOHsXdVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwOTI1Nw==", "bodyText": "nit: = null is not needed.", "url": "https://github.com/apache/helix/pull/1492#discussion_r516209257", "createdAt": "2020-11-02T19:36:22Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestCleanupExternalView.java", "diffHunk": "@@ -42,6 +42,7 @@\n  * orphan external-view\n  */\n public class TestCleanupExternalView extends ZkUnitTestBase {\n+  private ExternalView _externalView = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bf007e492b2d42dc7a4fe4be23deddfe319d085"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI4MzczNQ==", "bodyText": "right.\njust to make sure this is explicit, namely in normal path this is expected to be null all the time.", "url": "https://github.com/apache/helix/pull/1492#discussion_r516283735", "createdAt": "2020-11-02T22:09:12Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestCleanupExternalView.java", "diffHunk": "@@ -42,6 +42,7 @@\n  * orphan external-view\n  */\n public class TestCleanupExternalView extends ZkUnitTestBase {\n+  private ExternalView _externalView = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwOTI1Nw=="}, "originalCommit": {"oid": "3bf007e492b2d42dc7a4fe4be23deddfe319d085"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1058, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}