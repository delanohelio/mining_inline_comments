{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMzMwNTQ2", "number": 1409, "title": "Add Builder to ZKDistributedNonblockingLock to enable ZooScalability use", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1408\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nZKDistributedNonblockingLock and its related helix-lock API were not ZooScalability-compliant, meaning they could not be used in a multi-ZK environment. This PR updates the said APIs so that we could use them in multi-ZK environment by adding a Builder that allows users to set multi-ZK parameters.\nTests\n\n The following tests are written for this issue:\n\nNo logic change.\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nhelix-lock:\n[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.565 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-09-25T19:35:16Z", "url": "https://github.com/apache/helix/pull/1409", "merged": true, "mergeCommit": {"oid": "bf40f7ea34e48f27c71fc247f50b68a5197dcef8"}, "closed": true, "closedAt": "2020-10-02T18:35:39Z", "author": {"login": "narendly"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMa_wlAH2gAyNDkzMzMwNTQ2OmU1NTM3MDI3NThhMTg5YzcwMDRmNDdlYWQ4YzgwMjI0ZmRkZGFkNmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOptjFAFqTUwMTMzMTI3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e553702758a189c7004f47ead8c80224fdddad6e", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/e553702758a189c7004f47ead8c80224fdddad6e", "committedDate": "2020-09-25T19:31:30Z", "message": "Add Builder to ZKDistributedNonblockingLock to enable ZooScalability use\n\nZKDistributedNonblockingLock and its related helix-lock API were not ZooScalability-compliant, meaning they could not be used in a multi-ZK environment. This PR updates the said APIs so that we could use them in multi-ZK environment by adding a Builder that allows users to set multi-ZK parameters."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0a4d80fb30ad135a3136c86c9ad558f9a3e8519", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/a0a4d80fb30ad135a3136c86c9ad558f9a3e8519", "committedDate": "2020-09-25T19:36:24Z", "message": "Add JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97533e695f12b7e7b4bea7399c731b094f93ef98", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/97533e695f12b7e7b4bea7399c731b094f93ef98", "committedDate": "2020-09-25T22:11:27Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fb23deeb79a09cb101a8578244332d627e783c4", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/9fb23deeb79a09cb101a8578244332d627e783c4", "committedDate": "2020-09-29T17:41:52Z", "message": "Fix builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTEwNDE2", "url": "https://github.com/apache/helix/pull/1409#pullrequestreview-498910416", "createdAt": "2020-09-29T21:34:41Z", "commit": {"oid": "9fb23deeb79a09cb101a8578244332d627e783c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTozNDo0MVrOHaC-tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTozNDo0MVrOHaC-tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3Mzg0NA==", "bodyText": "I'm not sure the purpose of this comment. Is this targeting whoever changes this class? what about non zooscalablity use case?", "url": "https://github.com/apache/helix/pull/1409#discussion_r497073844", "createdAt": "2020-09-29T21:34:41Z", "author": {"login": "zhangmeng916"}, "path": "helix-lock/src/main/java/org/apache/helix/lock/helix/ZKDistributedNonblockingLock.java", "diffHunk": "@@ -24,17 +24,21 @@\n import org.apache.helix.AccessOption;\n import org.apache.helix.BaseDataAccessor;\n import org.apache.helix.HelixException;\n+import org.apache.helix.SystemPropertyKeys;\n import org.apache.helix.lock.DistributedLock;\n import org.apache.helix.lock.LockInfo;\n import org.apache.helix.lock.LockScope;\n+import org.apache.helix.manager.zk.GenericZkHelixApiBuilder;\n import org.apache.helix.manager.zk.ZkBaseDataAccessor;\n import org.apache.helix.zookeeper.datamodel.ZNRecord;\n import org.apache.helix.zookeeper.zkclient.DataUpdater;\n import org.apache.log4j.Logger;\n \n \n /**\n- * Helix nonblocking lock implementation based on Zookeeper\n+ * Helix nonblocking lock implementation based on Zookeeper.\n+ * NOTE: do NOT use ephemeral nodes in this implementation because ephemeral mode is not supported", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb23deeb79a09cb101a8578244332d627e783c4"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTEwOTgw", "url": "https://github.com/apache/helix/pull/1409#pullrequestreview-498910980", "createdAt": "2020-09-29T21:35:40Z", "commit": {"oid": "9fb23deeb79a09cb101a8578244332d627e783c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTozNTo0MVrOHaDAng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTozNTo0MVrOHaDAng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3NDMzNA==", "bodyText": "This line can be put together with the following comments.", "url": "https://github.com/apache/helix/pull/1409#discussion_r497074334", "createdAt": "2020-09-29T21:35:41Z", "author": {"login": "zhangmeng916"}, "path": "helix-lock/src/main/java/org/apache/helix/lock/helix/ZKDistributedNonblockingLock.java", "diffHunk": "@@ -143,11 +147,65 @@ public ZNRecord update(ZNRecord current) {\n       if (!(System.currentTimeMillis() < curLockInfo.getTimeout()) || isCurrentOwner()) {\n         return _record;\n       }\n-      // For users who are not the lock owner and try to do an update on a lock that is held by someone else, exception thrown is to be caught by data accessor, and return false for the update\n+      // For users who are not the lock owner and try to do an update on a lock that is held by\n+      // someone else, exception thrown is to be caught by data accessor, and return false for\n+      // the update\n       LOG.error(\n           \"User \" + _userId + \" tried to update the lock at \" + new Date(System.currentTimeMillis())\n               + \". Lock path: \" + _lockPath);\n       throw new HelixException(\"User is not authorized to perform this operation.\");\n     }\n   }\n+\n+  /**\n+   * Builder class to use with ZKDistributedNonblockingLock.\n+   */\n+  public static class Builder extends GenericZkHelixApiBuilder<Builder> {\n+    private LockScope _lockScope;\n+    private String _userId;\n+    private long _timeout;\n+    private String _lockMsg;\n+\n+    public Builder() {\n+    }\n+\n+    public Builder setLockScope(LockScope lockScope) {\n+      _lockScope = lockScope;\n+      return this;\n+    }\n+\n+    public Builder setUserId(String userId) {\n+      _userId = userId;\n+      return this;\n+    }\n+\n+    public Builder setTimeout(long timeout) {\n+      _timeout = timeout;\n+      return this;\n+    }\n+\n+    public Builder setLockMsg(String lockMsg) {\n+      _lockMsg = lockMsg;\n+      return this;\n+    }\n+\n+    public ZKDistributedNonblockingLock build() {\n+      // Resolve which way we want to create BaseDataAccessor instance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb23deeb79a09cb101a8578244332d627e783c4"}, "originalPosition": 104}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMzMxMjc4", "url": "https://github.com/apache/helix/pull/1409#pullrequestreview-501331278", "createdAt": "2020-10-02T17:48:02Z", "commit": {"oid": "9fb23deeb79a09cb101a8578244332d627e783c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4292, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}