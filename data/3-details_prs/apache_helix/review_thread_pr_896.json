{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NjE5NTEy", "number": 896, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMTo1ODoyMVrODn_2wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMTo1ODoyMVrODn_2wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjY3MjY2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMTo1ODoyMVrOF2Umbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMDozMToyNlrOF2WlPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwNDk0Mw==", "bodyText": "Nit, no need for else.", "url": "https://github.com/apache/helix/pull/896#discussion_r392504943", "createdAt": "2020-03-13T21:58:21Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -601,16 +607,30 @@ public static String toHexSessionId(long sessionId) {\n   }\n \n   /**\n-   * Returns a dedicated ZkClient.\n+   * Returns a dedicated ZkClient. A federatedZkClient will be used on multi-zk mode.\n+   * WARNING: ephemeral operations will not be supported on multi-zk mode!\n    * @return\n    */\n-  private static HelixZkClient getHelixZkClient(String zkAddr) {\n-    if (zkAddr == null || zkAddr.isEmpty()) {\n-      throw new HelixException(\"ZK Address given is either null or empty!\");\n+  private static RealmAwareZkClient getHelixZkClient(String zkAddr) {\n+    if (Boolean.getBoolean(SystemPropertyKeys.MULTI_ZK_ENABLED)) {\n+      try {\n+        // Create realm-aware ZkClient.\n+        RealmAwareZkClient.RealmAwareZkConnectionConfig connectionConfig =\n+            new RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder().build();\n+        RealmAwareZkClient.RealmAwareZkClientConfig clientConfig =\n+            new RealmAwareZkClient.RealmAwareZkClientConfig();\n+        return new FederatedZkClient(connectionConfig, clientConfig);\n+      } catch (IllegalArgumentException | IOException | InvalidRoutingDataException e) {\n+        throw new HelixException(\"Not able to connect on realm-aware mode\", e);\n+      }\n+    } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4edc7d10c99b2ba9c15510d2b6feb406a6f8c549"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzNzQwNw==", "bodyText": "Removed the else clause", "url": "https://github.com/apache/helix/pull/896#discussion_r392537407", "createdAt": "2020-03-14T00:31:26Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -601,16 +607,30 @@ public static String toHexSessionId(long sessionId) {\n   }\n \n   /**\n-   * Returns a dedicated ZkClient.\n+   * Returns a dedicated ZkClient. A federatedZkClient will be used on multi-zk mode.\n+   * WARNING: ephemeral operations will not be supported on multi-zk mode!\n    * @return\n    */\n-  private static HelixZkClient getHelixZkClient(String zkAddr) {\n-    if (zkAddr == null || zkAddr.isEmpty()) {\n-      throw new HelixException(\"ZK Address given is either null or empty!\");\n+  private static RealmAwareZkClient getHelixZkClient(String zkAddr) {\n+    if (Boolean.getBoolean(SystemPropertyKeys.MULTI_ZK_ENABLED)) {\n+      try {\n+        // Create realm-aware ZkClient.\n+        RealmAwareZkClient.RealmAwareZkConnectionConfig connectionConfig =\n+            new RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder().build();\n+        RealmAwareZkClient.RealmAwareZkClientConfig clientConfig =\n+            new RealmAwareZkClient.RealmAwareZkClientConfig();\n+        return new FederatedZkClient(connectionConfig, clientConfig);\n+      } catch (IllegalArgumentException | IOException | InvalidRoutingDataException e) {\n+        throw new HelixException(\"Not able to connect on realm-aware mode\", e);\n+      }\n+    } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwNDk0Mw=="}, "originalCommit": {"oid": "4edc7d10c99b2ba9c15510d2b6feb406a6f8c549"}, "originalPosition": 171}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1389, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}