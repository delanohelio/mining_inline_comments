{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTA4Mzc5", "number": 1483, "title": "Replace the system.out.printlns in the ThreadLeakageChecker with debug log or error log to avoid verbose output.", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\n#1482\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nReplace the system.out.printlns in the ThreadLeakageChecker with debug log or error log to avoid verbose output.\nThis is a pure test code change. No logic change.\nTests\n\n The following tests are written for this issue:\n\nNA\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nNA\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-10-23T17:30:29Z", "url": "https://github.com/apache/helix/pull/1483", "merged": true, "mergeCommit": {"oid": "09b217e68b623c500bcdcb139207e1bc0182cbec"}, "closed": true, "closedAt": "2020-10-26T19:07:59Z", "author": {"login": "jiajunwang"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVaAINgH2gAyNTA5MTA4Mzc5OjVhYWNhOWM4NjdkMzFiMDU4OTZiZGEzMDgxNjJiYzNlODQxYmY3YzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWZNnWAH2gAyNTA5MTA4Mzc5OmVhY2Q3OTUzODMzNWRkOWE5ZDYwOTllNTY4OGZiNDg4YThmZGFhMWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5aaca9c867d31b05896bda308162bc3e841bf7c5", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/5aaca9c867d31b05896bda308162bc3e841bf7c5", "committedDate": "2020-10-23T17:27:19Z", "message": "Replace the system.out.printlns in the ThreadLeakageChecker with debug log or error log to avoid verbose output.\n\nThis is a pure test code change. No logic change."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1ODc3MTEx", "url": "https://github.com/apache/helix/pull/1483#pullrequestreview-515877111", "createdAt": "2020-10-23T17:42:41Z", "commit": {"oid": "5aaca9c867d31b05896bda308162bc3e841bf7c5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo0Mjo0MVrOHnXaVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo0Mjo0MVrOHnXaVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA0MDA4NQ==", "bodyText": "LOG.error(\"message\", e);?", "url": "https://github.com/apache/helix/pull/1483#discussion_r511040085", "createdAt": "2020-10-23T17:42:41Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/ThreadLeakageChecker.java", "diffHunk": "@@ -160,7 +164,7 @@ public static boolean afterClassCheck(String classname) {\n               &&  ! \"system\".equals(p.getThreadGroup().getName())).\n           collect(Collectors.groupingBy(p -> p.getName()));\n     } catch (Exception e) {\n-      System.out.println(\"filtering thread failure with exception:\" + e.getStackTrace());\n+      LOG.error(\"Filtering thread failure with exception:\" + e.getStackTrace());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aaca9c867d31b05896bda308162bc3e841bf7c5"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTk2MDgz", "url": "https://github.com/apache/helix/pull/1483#pullrequestreview-516996083", "createdAt": "2020-10-26T17:06:59Z", "commit": {"oid": "5aaca9c867d31b05896bda308162bc3e841bf7c5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNzowNzowMFrOHoZv4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNzowNzowMFrOHoZv4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEyNjk0Nw==", "bodyText": "Nit: LOG.info may be better. Otherwise, it is hard for people using it to see the leaked thread if they wish as they need to turn on debug. which can result in a lot more other lines.", "url": "https://github.com/apache/helix/pull/1483#discussion_r512126947", "createdAt": "2020-10-26T17:07:00Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/ThreadLeakageChecker.java", "diffHunk": "@@ -189,26 +193,26 @@ public static boolean afterClassCheck(String classname) {\n         boolean dumpThread = false;\n         if (categoryThreadCnt > limit) {\n           checkStatus = false;\n-          System.out.println(\n+          LOG.info(\n               \"Failure \" + threadCategory.getDescription() + \" has \" + categoryThreadCnt + \" thread\");\n           dumpThread = true;\n         } else if (categoryThreadCnt > warningLimit) {\n-          System.out.println(\n+          LOG.info(\n               \"Warning \" + threadCategory.getDescription() + \" has \" + categoryThreadCnt + \" thread\");\n           dumpThread = true;\n         } else {\n-          System.out.println(threadCategory.getDescription() + \" has \" + categoryThreadCnt + \" thread\");\n+          LOG.info(threadCategory.getDescription() + \" has \" + categoryThreadCnt + \" thread\");\n         }\n         if (!dumpThread) {\n           continue;\n         }\n         // print first 100 thread names\n         int i = 0;\n         for (Thread t : threadByCat.get(threadCategory)) {\n-          System.out.println(i + \" thread:\" + t.getName());\n+          LOG.debug(i + \" thread:\" + t.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aaca9c867d31b05896bda308162bc3e841bf7c5"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTk2MTky", "url": "https://github.com/apache/helix/pull/1483#pullrequestreview-516996192", "createdAt": "2020-10-26T17:07:07Z", "commit": {"oid": "5aaca9c867d31b05896bda308162bc3e841bf7c5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eacd79538335dd9a9d6099e5688fb488a8fdaa1c", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/eacd79538335dd9a9d6099e5688fb488a8fdaa1c", "committedDate": "2020-10-26T19:06:04Z", "message": "Address comment."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4370, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}