{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNzgwMDEz", "number": 1124, "title": "Add stale message map to improve P2P message rate", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\n(#1067 )\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\nThis PR adds the stale message map in Instance Message cache and updates it in every current state computation stage. For those stale message, we do not put it in pending messages, so that it won't block the next state transition on that partition.\n\nTests\n\n The following tests are written for this issue:\n\n(List the names of added unit/integration tests)\n\n The following is the result of the \"mvn test\" command on the appropriate module:\nhelix-core\n[INFO] Results:\n[INFO]\n[ERROR] Failures:\n[ERROR]   TestRoutingTableProviderPeriodicRefresh.testPeriodicRefresh:192 expected:<7> but was:<6>\n[ERROR]   TestWorkflowTimeout.testWorkflowRunningTime:66 \u00bb Helix Workflow \"testWorkflowR...\n[INFO]\n[ERROR] Tests run: 1153, Failures: 2, Errors: 0, Skipped: 1\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:17 h\n[INFO] Finished at: 2020-07-21T10:44:32-07:00\n\nhelix-rest:\n[INFO] Tests run: 163, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 31.269 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 163, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  35.057 s\n[INFO] Finished at: 2020-07-14T23:21:11-07:00\nhelix-rest:\n[INFO] Tests run: 163, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 31.265 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 163, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  35.137 s\n[INFO] Finished at: 2020-07-15T11:25:19-07:00\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-06-26T20:46:31Z", "url": "https://github.com/apache/helix/pull/1124", "merged": true, "mergeCommit": {"oid": "ff55219f815e67aab39c60d514da53060f6a8cea"}, "closed": true, "closedAt": "2020-07-22T18:41:56Z", "author": {"login": "zhangmeng916"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0j2NdABqjM1NDAyODgxNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3fLi1gH2gAyNDQwNzgwMDEzOmI2MDc0ZjlmZDZkMDYzZWZkY2UyN2E2ZjBhM2UxM2YzZWQ3YTc5MDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3708e215a9b5527b47dcd42f72b858780e9ca01", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/f3708e215a9b5527b47dcd42f72b858780e9ca01", "committedDate": "2020-06-30T16:31:03Z", "message": "change is stale logic"}, "afterCommit": {"oid": "f797274abf4bf0057feedc4437bee5fcbd48fa51", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/f797274abf4bf0057feedc4437bee5fcbd48fa51", "committedDate": "2020-07-11T19:03:40Z", "message": "improve p2p"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f797274abf4bf0057feedc4437bee5fcbd48fa51", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/f797274abf4bf0057feedc4437bee5fcbd48fa51", "committedDate": "2020-07-11T19:03:40Z", "message": "improve p2p"}, "afterCommit": {"oid": "ccd1ef2310e00699dd14d92869702634c9d370dc", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/ccd1ef2310e00699dd14d92869702634c9d370dc", "committedDate": "2020-07-13T17:02:06Z", "message": "improve p2p"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Nzk5Mzcz", "url": "https://github.com/apache/helix/pull/1124#pullrequestreview-447799373", "createdAt": "2020-07-14T05:35:04Z", "commit": {"oid": "ccd1ef2310e00699dd14d92869702634c9d370dc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNTozNTowNFrOGxE0Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNTo1Mzo0M1rOGxFL2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDExMjI5MQ==", "bodyText": "nit, _ isTaskFrameworkPipeline", "url": "https://github.com/apache/helix/pull/1124#discussion_r454112291", "createdAt": "2020-07-14T05:35:04Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -56,11 +57,17 @@\n  */\n public class CurrentStateComputationStage extends AbstractBaseStage {\n   private static Logger LOG = LoggerFactory.getLogger(CurrentStateComputationStage.class);\n+  private boolean isTaskFrameworkPipeline = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccd1ef2310e00699dd14d92869702634c9d370dc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDExODM2MQ==", "bodyText": "This is never called? Or there are some other changes that you haven't pushed?", "url": "https://github.com/apache/helix/pull/1124#discussion_r454118361", "createdAt": "2020-07-14T05:53:43Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/BaseControllerDataProvider.java", "diffHunk": "@@ -544,6 +544,13 @@ public synchronized void setLiveInstances(List<LiveInstance> liveInstances) {\n     return _instanceMessagesCache.getMessages(instanceName);\n   }\n \n+  public void setStaleMessages(Map<String, Map<String, Message>> staleMessageMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccd1ef2310e00699dd14d92869702634c9d370dc"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mzk5Nzg2", "url": "https://github.com/apache/helix/pull/1124#pullrequestreview-448399786", "createdAt": "2020-07-14T19:26:39Z", "commit": {"oid": "e15747386bf64389facaaa0dbc2e96dd6fa3456a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToyNjozOVrOGxiDsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTozMTo0NFrOGxiOWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5MTQxMA==", "bodyText": "Not used?", "url": "https://github.com/apache/helix/pull/1124#discussion_r454591410", "createdAt": "2020-07-14T19:26:39Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/common/caches/InstanceMessagesCache.java", "diffHunk": "@@ -151,6 +153,13 @@ public boolean refresh(HelixDataAccessor accessor, Map<String, LiveInstance> liv\n     return true;\n   }\n \n+  public Map<String, Map<String, Message>> getStaleMessageCache() {\n+    return _staleMessageCache;\n+  }\n+\n+  public void setStaleMessageCache(Map<String, Map<String, Message>> staleMessageMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e15747386bf64389facaaa0dbc2e96dd6fa3456a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5MjU5Ng==", "bodyText": "If no set is called, how the items in the cache being updated?", "url": "https://github.com/apache/helix/pull/1124#discussion_r454592596", "createdAt": "2020-07-14T19:28:51Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/common/caches/InstanceMessagesCache.java", "diffHunk": "@@ -151,6 +153,13 @@ public boolean refresh(HelixDataAccessor accessor, Map<String, LiveInstance> liv\n     return true;\n   }\n \n+  public Map<String, Map<String, Message>> getStaleMessageCache() {\n+    return _staleMessageCache;\n+  }\n+\n+  public void setStaleMessageCache(Map<String, Map<String, Message>> staleMessageMap) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5MTQxMA=="}, "originalCommit": {"oid": "e15747386bf64389facaaa0dbc2e96dd6fa3456a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5MzIzOA==", "bodyText": "Can we just call \"currentStateOutput.setStaleMessage(instanceName, message);\" in the caller so we don't need this method?", "url": "https://github.com/apache/helix/pull/1124#discussion_r454593238", "createdAt": "2020-07-14T19:30:04Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -236,6 +267,11 @@ private void updateCurrentStates(LiveInstance instance, Collection<CurrentState>\n     }\n   }\n \n+  private void setStaleMessage(CurrentStateOutput currentStateOutput, String instanceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e15747386bf64389facaaa0dbc2e96dd6fa3456a"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5NDEzNg==", "bodyText": "Introducing _isTaskFrameworkPipeline to isStaleMessage is confusing. I would prefer do this,\n\"if (!_isTaskFrameworkPipeline && isStaleMessage(...)) {set stale message}\"", "url": "https://github.com/apache/helix/pull/1124#discussion_r454594136", "createdAt": "2020-07-14T19:31:44Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -191,6 +213,15 @@ private void updatePendingMessages(LiveInstance instance, Collection<Message> pe\n     }\n   }\n \n+  private boolean isStaleMessage(Message message, String currentState) {\n+    if (_isTaskFrameworkPipeline || currentState == null || message.getFromState() == null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e15747386bf64389facaaa0dbc2e96dd6fa3456a"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NDA2MTEz", "url": "https://github.com/apache/helix/pull/1124#pullrequestreview-448406113", "createdAt": "2020-07-14T19:36:12Z", "commit": {"oid": "32d10bd3fa6ffbfb33b0c2161de89d5d805e25e8"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTozNjoxM1rOGxiXHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTo0MTo0OFrOGxiidA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5NjM4Mw==", "bodyText": "nit, could be simpler by\nif (staleMessageMap != null && staleMessageMap.getOrDefault(msg.getTgtName(), EmptyMap()).remove(msg.getMsgId())) {\nif (staleMessageMap.get(msg.getTgtName()).size() == 0) {\nstaleMessageMap.remove(msg.getTgtName());\n}\n}", "url": "https://github.com/apache/helix/pull/1124#discussion_r454596383", "createdAt": "2020-07-14T19:36:13Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -344,6 +367,13 @@ private void schedulePendingMessageCleanUp(\n             if (accessor.removeProperty(msg.getKey(accessor.keyBuilder(), instanceName))) {\n               LogUtil.logInfo(logger, _eventId, String\n                   .format(\"Deleted message %s from instance %s\", msg.getMsgId(), instanceName));\n+              if (staleMessageMap != null && staleMessageMap.containsKey(msg.getTgtName())\n+                  && staleMessageMap.get(msg.getTgtName()).containsKey(msg.getMsgId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d10bd3fa6ffbfb33b0c2161de89d5d805e25e8"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5Njc3Mg==", "bodyText": "Can staleMsg be null?", "url": "https://github.com/apache/helix/pull/1124#discussion_r454596772", "createdAt": "2020-07-14T19:37:06Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -371,6 +401,14 @@ private boolean shouldCleanUpPendingMessage(Message pendingMsg, String currentSt\n     }\n   }\n \n+  private boolean shouldCleanUpStaleMessage(Message staleMsg, Long currentStateTransitionEndTime) {\n+    if (staleMsg == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d10bd3fa6ffbfb33b0c2161de89d5d805e25e8"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5NzU2MQ==", "bodyText": "I think staleMessageMap won't be null.", "url": "https://github.com/apache/helix/pull/1124#discussion_r454597561", "createdAt": "2020-07-14T19:38:41Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -344,6 +367,13 @@ private void schedulePendingMessageCleanUp(\n             if (accessor.removeProperty(msg.getKey(accessor.keyBuilder(), instanceName))) {\n               LogUtil.logInfo(logger, _eventId, String\n                   .format(\"Deleted message %s from instance %s\", msg.getMsgId(), instanceName));\n+              if (staleMessageMap != null && staleMessageMap.containsKey(msg.getTgtName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d10bd3fa6ffbfb33b0c2161de89d5d805e25e8"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5ODQxOQ==", "bodyText": "Better to move this logic into the logAndAddToCleanUp() method too.\nThis will increase the parameters, but the code here would be much simpler.", "url": "https://github.com/apache/helix/pull/1124#discussion_r454598419", "createdAt": "2020-07-14T19:40:16Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -188,14 +192,24 @@ private void generateMessage(final Resource resource, final BaseControllerDataPr\n \n         if (pendingMessage != null && shouldCleanUpPendingMessage(pendingMessage, currentState,\n             currentStateOutput.getEndTime(resourceName, partition, instanceName))) {\n-          LogUtil.logInfo(logger, _eventId, String.format(\n-              \"Adding pending message %s on instance %s to clean up. Msg: %s->%s, current state of resource %s:%s is %s\",\n-              pendingMessage.getMsgId(), instanceName, pendingMessage.getFromState(),\n-              pendingMessage.getToState(), resourceName, partition, currentState));\n-          if (!pendingMessagesToCleanUp.containsKey(instanceName)) {\n-            pendingMessagesToCleanUp.put(instanceName, new HashMap<String, Message>());\n+          String logMsg = String.format(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d10bd3fa6ffbfb33b0c2161de89d5d805e25e8"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5OTI4NA==", "bodyText": "This also helps to reduce the duplicate code that logs the stale messages.", "url": "https://github.com/apache/helix/pull/1124#discussion_r454599284", "createdAt": "2020-07-14T19:41:48Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -188,14 +192,24 @@ private void generateMessage(final Resource resource, final BaseControllerDataPr\n \n         if (pendingMessage != null && shouldCleanUpPendingMessage(pendingMessage, currentState,\n             currentStateOutput.getEndTime(resourceName, partition, instanceName))) {\n-          LogUtil.logInfo(logger, _eventId, String.format(\n-              \"Adding pending message %s on instance %s to clean up. Msg: %s->%s, current state of resource %s:%s is %s\",\n-              pendingMessage.getMsgId(), instanceName, pendingMessage.getFromState(),\n-              pendingMessage.getToState(), resourceName, partition, currentState));\n-          if (!pendingMessagesToCleanUp.containsKey(instanceName)) {\n-            pendingMessagesToCleanUp.put(instanceName, new HashMap<String, Message>());\n+          String logMsg = String.format(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5ODQxOQ=="}, "originalCommit": {"oid": "32d10bd3fa6ffbfb33b0c2161de89d5d805e25e8"}, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "087bd269de11f85e6d0e03e7aa662c0e45ab3e78", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/087bd269de11f85e6d0e03e7aa662c0e45ab3e78", "committedDate": "2020-07-14T21:56:23Z", "message": "more fix"}, "afterCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/a9cf48034a99ec06323fbdfa186145b49ebab0c4", "committedDate": "2020-07-14T22:46:52Z", "message": "more fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMTA0MzE3", "url": "https://github.com/apache/helix/pull/1124#pullrequestreview-450104317", "createdAt": "2020-07-16T18:24:47Z", "commit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "state": "COMMENTED", "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxODoyNDo0N1rOGy3LbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxOToxNDoxNFrOGy43IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4NjAyOA==", "bodyText": "This may potentially increase our future work to split the pipeline. We need a better and more centralized way to tell the pipeline type. Otherwise, once we need more types it would be very messy. For example aggregation pipeline.\nPlease add a TODO here that we should avoid this hacky style.", "url": "https://github.com/apache/helix/pull/1124#discussion_r455986028", "createdAt": "2020-07-16T18:24:47Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -56,11 +57,17 @@\n  */\n public class CurrentStateComputationStage extends AbstractBaseStage {\n   private static Logger LOG = LoggerFactory.getLogger(CurrentStateComputationStage.class);\n+  private boolean _isTaskFrameworkPipeline = false;\n \n   @Override\n   public void process(ClusterEvent event) throws Exception {\n     _eventId = event.getEventId();\n     BaseControllerDataProvider cache = event.getAttribute(AttributeName.ControllerDataProvider.name());\n+\n+    if (cache instanceof WorkflowControllerDataProvider) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NzEzMQ==", "bodyText": "nit, could you please move the existingStaleMessages so it adjacent to pendingMessages? That makes the params more organized.", "url": "https://github.com/apache/helix/pull/1124#discussion_r455997131", "createdAt": "2020-07-16T18:44:11Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -103,14 +114,20 @@ public void process(ClusterEvent event) throws Exception {\n   // update all pending messages to CurrentStateOutput.\n   private void updatePendingMessages(LiveInstance instance, Collection<Message> pendingMessages,\n       CurrentStateOutput currentStateOutput, Collection<Message> pendingRelayMessages,\n-      Map<String, Resource> resourceMap) {\n+      Map<String, Resource> resourceMap, Map<String, Map<String, Message>> existingStaleMessages) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NzI0MA==", "bodyText": "Maybe pendingRelayMessages as well : )", "url": "https://github.com/apache/helix/pull/1124#discussion_r455997240", "createdAt": "2020-07-16T18:44:24Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -103,14 +114,20 @@ public void process(ClusterEvent event) throws Exception {\n   // update all pending messages to CurrentStateOutput.\n   private void updatePendingMessages(LiveInstance instance, Collection<Message> pendingMessages,\n       CurrentStateOutput currentStateOutput, Collection<Message> pendingRelayMessages,\n-      Map<String, Resource> resourceMap) {\n+      Map<String, Resource> resourceMap, Map<String, Map<String, Message>> existingStaleMessages) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NzEzMQ=="}, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NzY0Ng==", "bodyText": "Please comment on what are the 2 strings in the map.", "url": "https://github.com/apache/helix/pull/1124#discussion_r455997646", "createdAt": "2020-07-16T18:45:06Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/common/caches/InstanceMessagesCache.java", "diffHunk": "@@ -55,6 +55,8 @@\n   // <instance -> {<MessageId, Message>}>\n   private Map<String, Map<String, Message>> _messageCache = Maps.newHashMap();\n \n+  private Map<String, Map<String, Message>> _staleMessageCache = Maps.newHashMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5OTU1OQ==", "bodyText": "Since currentStateOutput already has existingStaleMessages, we don't need existingStaleMessages in the parameter list, right?", "url": "https://github.com/apache/helix/pull/1124#discussion_r455999559", "createdAt": "2020-07-16T18:48:42Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -77,15 +84,19 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceName = instance.getInstanceName();\n       String instanceSessionId = instance.getEphemeralOwner();\n \n-      // update pending messages\n-      Map<String, Message> messages = cache.getMessages(instanceName);\n-      Map<String, Message> relayMessages = cache.getRelayMessages(instanceName);\n-      updatePendingMessages(instance, messages.values(), currentStateOutput, relayMessages.values(), resourceMap);\n-\n       // update current states.\n       Map<String, CurrentState> currentStateMap = cache.getCurrentState(instanceName,\n           instanceSessionId);\n       updateCurrentStates(instance, currentStateMap.values(), currentStateOutput, resourceMap);\n+\n+      Map<String, Map<String, Message>> existingStaleMessages = cache.getStaleMessages();\n+      currentStateOutput.setStaleMessageMap(existingStaleMessages);\n+      // update pending messages\n+      Map<String, Message> messages = cache.getMessages(instanceName);\n+      Map<String, Message> relayMessages = cache.getRelayMessages(instanceName);\n+      updatePendingMessages(instance, messages.values(), currentStateOutput,\n+          relayMessages.values(), resourceMap, existingStaleMessages);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwMDk4NA==", "bodyText": "What if we always calculate based on the current states and pending message lists? So don't update the cache, or don't have the cache even. Will that still work?", "url": "https://github.com/apache/helix/pull/1124#discussion_r456000984", "createdAt": "2020-07-16T18:51:21Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -77,15 +84,19 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceName = instance.getInstanceName();\n       String instanceSessionId = instance.getEphemeralOwner();\n \n-      // update pending messages\n-      Map<String, Message> messages = cache.getMessages(instanceName);\n-      Map<String, Message> relayMessages = cache.getRelayMessages(instanceName);\n-      updatePendingMessages(instance, messages.values(), currentStateOutput, relayMessages.values(), resourceMap);\n-\n       // update current states.\n       Map<String, CurrentState> currentStateMap = cache.getCurrentState(instanceName,\n           instanceSessionId);\n       updateCurrentStates(instance, currentStateMap.values(), currentStateOutput, resourceMap);\n+\n+      Map<String, Map<String, Message>> existingStaleMessages = cache.getStaleMessages();\n+      currentStateOutput.setStaleMessageMap(existingStaleMessages);\n+      // update pending messages\n+      Map<String, Message> messages = cache.getMessages(instanceName);\n+      Map<String, Message> relayMessages = cache.getRelayMessages(instanceName);\n+      updatePendingMessages(instance, messages.values(), currentStateOutput,\n+          relayMessages.values(), resourceMap, existingStaleMessages);\n+      cache.setStaleMessages(currentStateOutput.getStaleMessageMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwMTYyNg==", "bodyText": "To simplicity,\nexistingStaleMessages.getOrDefault(instanceName, Collection.EMPTY_MAP).containsKey(message.getMsgId())", "url": "https://github.com/apache/helix/pull/1124#discussion_r456001626", "createdAt": "2020-07-16T18:52:25Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -103,14 +114,20 @@ public void process(ClusterEvent event) throws Exception {\n   // update all pending messages to CurrentStateOutput.\n   private void updatePendingMessages(LiveInstance instance, Collection<Message> pendingMessages,\n       CurrentStateOutput currentStateOutput, Collection<Message> pendingRelayMessages,\n-      Map<String, Resource> resourceMap) {\n+      Map<String, Resource> resourceMap, Map<String, Map<String, Message>> existingStaleMessages) {\n     String instanceName = instance.getInstanceName();\n     String instanceSessionId = instance.getEphemeralOwner();\n \n     // update all pending messages\n     for (Message message : pendingMessages) {\n+      // ignore existing stale messages\n+      if (existingStaleMessages.containsKey(instanceName) && existingStaleMessages.get(instanceName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwMzI3Mg==", "bodyText": "Is this cache designed for performance concern only?", "url": "https://github.com/apache/helix/pull/1124#discussion_r456003272", "createdAt": "2020-07-16T18:55:13Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -77,15 +84,19 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceName = instance.getInstanceName();\n       String instanceSessionId = instance.getEphemeralOwner();\n \n-      // update pending messages\n-      Map<String, Message> messages = cache.getMessages(instanceName);\n-      Map<String, Message> relayMessages = cache.getRelayMessages(instanceName);\n-      updatePendingMessages(instance, messages.values(), currentStateOutput, relayMessages.values(), resourceMap);\n-\n       // update current states.\n       Map<String, CurrentState> currentStateMap = cache.getCurrentState(instanceName,\n           instanceSessionId);\n       updateCurrentStates(instance, currentStateMap.values(), currentStateOutput, resourceMap);\n+\n+      Map<String, Map<String, Message>> existingStaleMessages = cache.getStaleMessages();\n+      currentStateOutput.setStaleMessageMap(existingStaleMessages);\n+      // update pending messages\n+      Map<String, Message> messages = cache.getMessages(instanceName);\n+      Map<String, Message> relayMessages = cache.getRelayMessages(instanceName);\n+      updatePendingMessages(instance, messages.values(), currentStateOutput,\n+          relayMessages.values(), resourceMap, existingStaleMessages);\n+      cache.setStaleMessages(currentStateOutput.getStaleMessageMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwMDk4NA=="}, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwMzk1OA==", "bodyText": "Any comment?", "url": "https://github.com/apache/helix/pull/1124#discussion_r456003958", "createdAt": "2020-07-16T18:56:28Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -236,6 +267,11 @@ private void updateCurrentStates(LiveInstance instance, Collection<CurrentState>\n     }\n   }\n \n+  private void setStaleMessage(CurrentStateOutput currentStateOutput, String instanceName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5MzIzOA=="}, "originalCommit": {"oid": "e15747386bf64389facaaa0dbc2e96dd6fa3456a"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwNTAzMw==", "bodyText": "I would prefer \"_staleMessageMap = new HashMap<>(staleMessageMap)\" to avoid implicit reference.", "url": "https://github.com/apache/helix/pull/1124#discussion_r456005033", "createdAt": "2020-07-16T18:58:27Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateOutput.java", "diffHunk": "@@ -165,6 +168,19 @@ public void setPendingRelayMessage(String resourceName, Partition partition, Str\n     setStateMessage(resourceName, partition, instanceName, message, _pendingRelayMessageMap);\n   }\n \n+  public Map<String, Map<String, Message>> getStaleMessageMap() {\n+    return _staleMessageMap;\n+  }\n+\n+  public void setStaleMessageMap(Map<String, Map<String, Message>> staleMessageMap) {\n+    _staleMessageMap = staleMessageMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwNTIzNw==", "bodyText": "remove?", "url": "https://github.com/apache/helix/pull/1124#discussion_r456005237", "createdAt": "2020-07-16T18:58:49Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateOutput.java", "diffHunk": "@@ -194,6 +210,8 @@ public String getCurrentState(String resourceName, Partition partition, String i\n     return null;\n   }\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwNTg4Mg==", "bodyText": "Is this check necessary? You checked that if staleMessageMap is null or not later, right?", "url": "https://github.com/apache/helix/pull/1124#discussion_r456005882", "createdAt": "2020-07-16T18:59:53Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateOutput.java", "diffHunk": "@@ -238,6 +256,16 @@ public Message getPendingMessage(String resourceName, Partition partition, Strin\n     return getStateMessage(resourceName, partition, instanceName, _pendingMessageMap);\n   }\n \n+  public Set<Message> getStaleMessages(String instanceName) {\n+    if (_staleMessageMap.containsKey(instanceName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwNjk4MQ==", "bodyText": "nit, maybe call it getStaleMessagesByInstance would help to differentiate it from getStaleMessageMap", "url": "https://github.com/apache/helix/pull/1124#discussion_r456006981", "createdAt": "2020-07-16T19:01:58Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateOutput.java", "diffHunk": "@@ -238,6 +256,16 @@ public Message getPendingMessage(String resourceName, Partition partition, Strin\n     return getStateMessage(resourceName, partition, instanceName, _pendingMessageMap);\n   }\n \n+  public Set<Message> getStaleMessages(String instanceName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxMDY3OQ==", "bodyText": "Takes me a while to figure it out. So we shall call it messagesToCleanup now, right?", "url": "https://github.com/apache/helix/pull/1124#discussion_r456010679", "createdAt": "2020-07-16T19:08:41Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -77,8 +81,9 @@ protected void processEvent(ClusterEvent event, ResourcesStateMap resourcesState\n     BaseControllerDataProvider cache = event.getAttribute(AttributeName.ControllerDataProvider.name());\n     Map<String, Resource> resourceMap =\n         event.getAttribute(AttributeName.RESOURCES_TO_REBALANCE.name());\n-    Map<String, Map<String, Message>> pendingMessagesToCleanUp = new HashMap<>();\n     CurrentStateOutput currentStateOutput = event.getAttribute(AttributeName.CURRENT_STATE.name());\n+\n+    Map<String, Map<String, Message>> pendingMessagesToCleanUp = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxMTExNQ==", "bodyText": "Same for the names of the other parameters that are pointing to this same map.", "url": "https://github.com/apache/helix/pull/1124#discussion_r456011115", "createdAt": "2020-07-16T19:09:34Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -77,8 +81,9 @@ protected void processEvent(ClusterEvent event, ResourcesStateMap resourcesState\n     BaseControllerDataProvider cache = event.getAttribute(AttributeName.ControllerDataProvider.name());\n     Map<String, Resource> resourceMap =\n         event.getAttribute(AttributeName.RESOURCES_TO_REBALANCE.name());\n-    Map<String, Map<String, Message>> pendingMessagesToCleanUp = new HashMap<>();\n     CurrentStateOutput currentStateOutput = event.getAttribute(AttributeName.CURRENT_STATE.name());\n+\n+    Map<String, Map<String, Message>> pendingMessagesToCleanUp = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxMDY3OQ=="}, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxMjY1Nw==", "bodyText": "So based on what I commented before, if we calculate from scratch in every pipeline, we won't need to maintain this map here, right? Or we will have some usage side this stage that we will need to update the content of the map at runtime?", "url": "https://github.com/apache/helix/pull/1124#discussion_r456012657", "createdAt": "2020-07-16T19:12:29Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -335,15 +362,21 @@ private void addGeneratedMessageToMap(final Message message,\n    */\n   private void schedulePendingMessageCleanUp(\n       final Map<String, Map<String, Message>> pendingMessagesToPurge, ExecutorService workerPool,\n-      final HelixDataAccessor accessor) {\n+      final HelixDataAccessor accessor, Map<String, Map<String, Message>> staleMessageMap) {\n     workerPool.submit(new Callable<Object>() {\n-      @Override public Object call() {\n+      @Override\n+      public Object call() {\n         for (Map.Entry<String, Map<String, Message>> entry : pendingMessagesToPurge.entrySet()) {\n           String instanceName = entry.getKey();\n           for (Message msg : entry.getValue().values()) {\n             if (accessor.removeProperty(msg.getKey(accessor.keyBuilder(), instanceName))) {\n               LogUtil.logInfo(logger, _eventId, String\n                   .format(\"Deleted message %s from instance %s\", msg.getMsgId(), instanceName));\n+              staleMessageMap.getOrDefault(msg.getTgtName(), Collections.emptyMap())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxMzYwMA==", "bodyText": "nit, I think we can just put this logic to the caller. Since there is just one caller, and the logic is simple. The additional method layers will increase latency a little bit you know.", "url": "https://github.com/apache/helix/pull/1124#discussion_r456013600", "createdAt": "2020-07-16T19:14:14Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -371,6 +404,11 @@ private boolean shouldCleanUpPendingMessage(Message pendingMsg, String currentSt\n     }\n   }\n \n+  private boolean shouldCleanUpStaleMessage(Long currentStateTransitionEndTime) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cf48034a99ec06323fbdfa186145b49ebab0c4"}, "originalPosition": 127}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d74c100efdcfaf61b13ca8d7d19a2daf43daec0", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/3d74c100efdcfaf61b13ca8d7d19a2daf43daec0", "committedDate": "2020-07-18T05:53:14Z", "message": "add shallow copy and deletion"}, "afterCommit": {"oid": "7f317a5109008b69154d3a1448d7a9d01e6c09c9", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/7f317a5109008b69154d3a1448d7a9d01e6c09c9", "committedDate": "2020-07-20T00:18:26Z", "message": "add more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxOTU4NjE0", "url": "https://github.com/apache/helix/pull/1124#pullrequestreview-451958614", "createdAt": "2020-07-20T21:04:56Z", "commit": {"oid": "7f317a5109008b69154d3a1448d7a9d01e6c09c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTowNDo1N1rOG0fP8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTowNDo1N1rOG0fP8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5MTEyMg==", "bodyText": "I think you can do this when the _messageCache is refreshed in refresh() method.\n\nchanging values in a get method is not a good style. We want to be able to call get any time, but if it has a side effect then the callers need to review the detail of the method every time if they want to use it.\nThis is for cleaning up and prevent memory leakage only, so clean up when refresh is done at the beginning of the pipeline is enough, I think.", "url": "https://github.com/apache/helix/pull/1124#discussion_r457691122", "createdAt": "2020-07-20T21:04:57Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/common/caches/InstanceMessagesCache.java", "diffHunk": "@@ -151,6 +155,25 @@ public boolean refresh(HelixDataAccessor accessor, Map<String, LiveInstance> liv\n     return true;\n   }\n \n+  // filter stale message cache by message cache to remove deleted messages\n+  public Map<String, Map<String, Message>> getStaleMessageCache() {\n+    for (String instanceName : _staleMessageCache.keySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f317a5109008b69154d3a1448d7a9d01e6c09c9"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxOTYzMjA2", "url": "https://github.com/apache/helix/pull/1124#pullrequestreview-451963206", "createdAt": "2020-07-20T21:12:38Z", "commit": {"oid": "7f317a5109008b69154d3a1448d7a9d01e6c09c9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMToxMjozOFrOG0fdxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMToxOTowMlrOG0fppw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5NDY2Mg==", "bodyText": "nit, can we follow the same style that how the other 2 maps are used here?\nBasically passing the existingStaleMessages to updatePendingMessages too instead of set to the currentStateOutput here?", "url": "https://github.com/apache/helix/pull/1124#discussion_r457694662", "createdAt": "2020-07-20T21:12:38Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -77,15 +87,20 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceName = instance.getInstanceName();\n       String instanceSessionId = instance.getEphemeralOwner();\n \n-      // update pending messages\n-      Map<String, Message> messages = cache.getMessages(instanceName);\n-      Map<String, Message> relayMessages = cache.getRelayMessages(instanceName);\n-      updatePendingMessages(instance, messages.values(), currentStateOutput, relayMessages.values(), resourceMap);\n-\n       // update current states.\n       Map<String, CurrentState> currentStateMap = cache.getCurrentState(instanceName,\n           instanceSessionId);\n       updateCurrentStates(instance, currentStateMap.values(), currentStateOutput, resourceMap);\n+\n+      Map<String, Map<String, Message>> existingStaleMessages =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f317a5109008b69154d3a1448d7a9d01e6c09c9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5NTA0Ng==", "bodyText": "nit, cacheStaleMessages so all the updating message cache methods are named in the same way?", "url": "https://github.com/apache/helix/pull/1124#discussion_r457695046", "createdAt": "2020-07-20T21:13:25Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/BaseControllerDataProvider.java", "diffHunk": "@@ -544,6 +544,14 @@ public synchronized void setLiveInstances(List<LiveInstance> liveInstances) {\n     return _instanceMessagesCache.getMessages(instanceName);\n   }\n \n+  public Map<String, Map<String, Message>> getStaleMessages() {\n+    return _instanceMessagesCache.getStaleMessageCache();\n+  }\n+\n+  public void setStaleMessages(Map<String, Map<String, Message>> staleMessageMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f317a5109008b69154d3a1448d7a9d01e6c09c9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5NzcwMw==", "bodyText": "Now I have a better understanding of your change. And I think this cleanup is not necessary.\nThe stale message map in the current state output object is re-calculated from the cache every time. So as long as we clean the cache properly, we don't need to care about the output map. Please correct me if I missed anything.", "url": "https://github.com/apache/helix/pull/1124#discussion_r457697703", "createdAt": "2020-07-20T21:19:02Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -335,15 +363,21 @@ private void addGeneratedMessageToMap(final Message message,\n    */\n   private void schedulePendingMessageCleanUp(\n       final Map<String, Map<String, Message>> pendingMessagesToPurge, ExecutorService workerPool,\n-      final HelixDataAccessor accessor) {\n+      final HelixDataAccessor accessor, Map<String, Map<String, Message>> staleMessageMap) {\n     workerPool.submit(new Callable<Object>() {\n-      @Override public Object call() {\n+      @Override\n+      public Object call() {\n         for (Map.Entry<String, Map<String, Message>> entry : pendingMessagesToPurge.entrySet()) {\n           String instanceName = entry.getKey();\n           for (Message msg : entry.getValue().values()) {\n             if (accessor.removeProperty(msg.getKey(accessor.keyBuilder(), instanceName))) {\n               LogUtil.logInfo(logger, _eventId, String\n                   .format(\"Deleted message %s from instance %s\", msg.getMsgId(), instanceName));\n+              staleMessageMap.getOrDefault(msg.getTgtName(), Collections.emptyMap())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f317a5109008b69154d3a1448d7a9d01e6c09c9"}, "originalPosition": 138}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1312715799494c6e9fb76a371677062c4615906f", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/1312715799494c6e9fb76a371677062c4615906f", "committedDate": "2020-07-20T23:47:24Z", "message": "fix comment"}, "afterCommit": {"oid": "cc6470b7b5ed4f36702a0b035d49bbd7b2509f7e", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/cc6470b7b5ed4f36702a0b035d49bbd7b2509f7e", "committedDate": "2020-07-20T23:54:27Z", "message": "fix comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bfd40c3fe060b9d44d722ae0ad1fc109dd8aabd9", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/bfd40c3fe060b9d44d722ae0ad1fc109dd8aabd9", "committedDate": "2020-07-21T01:01:20Z", "message": "fix test"}, "afterCommit": {"oid": "2bdbd30effb0d7e7fd8d64f0f49cbcc4ee2c1758", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/2bdbd30effb0d7e7fd8d64f0f49cbcc4ee2c1758", "committedDate": "2020-07-21T05:36:48Z", "message": "fix comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25945a979f7fb61d707a7c2c7cfce9d5e6a6149e", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/25945a979f7fb61d707a7c2c7cfce9d5e6a6149e", "committedDate": "2020-07-21T17:54:44Z", "message": "simplify stale cache"}, "afterCommit": {"oid": "cf796450c2cb9dfbfce3b386c0c2baddd7765d29", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/cf796450c2cb9dfbfce3b386c0c2baddd7765d29", "committedDate": "2020-07-21T17:58:39Z", "message": "simplify stale cache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf796450c2cb9dfbfce3b386c0c2baddd7765d29", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/cf796450c2cb9dfbfce3b386c0c2baddd7765d29", "committedDate": "2020-07-21T17:58:39Z", "message": "simplify stale cache"}, "afterCommit": {"oid": "fa3be9aa3c6faf93095ac37ac895ec43961e62ff", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/fa3be9aa3c6faf93095ac37ac895ec43961e62ff", "committedDate": "2020-07-21T18:04:08Z", "message": "simplify stale cache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa3be9aa3c6faf93095ac37ac895ec43961e62ff", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/fa3be9aa3c6faf93095ac37ac895ec43961e62ff", "committedDate": "2020-07-21T18:04:08Z", "message": "simplify stale cache"}, "afterCommit": {"oid": "a045e7cc6192a94cbf8a9b113a45d24d6d8aa3a3", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/a045e7cc6192a94cbf8a9b113a45d24d6d8aa3a3", "committedDate": "2020-07-21T18:08:46Z", "message": "simplify stale cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNzE4MzIz", "url": "https://github.com/apache/helix/pull/1124#pullrequestreview-452718323", "createdAt": "2020-07-21T18:21:58Z", "commit": {"oid": "a045e7cc6192a94cbf8a9b113a45d24d6d8aa3a3"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODoyMTo1OFrOG1EaHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozMTowMFrOG1EuPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5OTkzNA==", "bodyText": "Is it really possible that we have a null element in the return set?", "url": "https://github.com/apache/helix/pull/1124#discussion_r458299934", "createdAt": "2020-07-21T18:21:58Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java", "diffHunk": "@@ -188,14 +196,21 @@ private void generateMessage(final Resource resource, final BaseControllerDataPr\n \n         if (pendingMessage != null && shouldCleanUpPendingMessage(pendingMessage, currentState,\n             currentStateOutput.getEndTime(resourceName, partition, instanceName))) {\n-          LogUtil.logInfo(logger, _eventId, String.format(\n-              \"Adding pending message %s on instance %s to clean up. Msg: %s->%s, current state of resource %s:%s is %s\",\n-              pendingMessage.getMsgId(), instanceName, pendingMessage.getFromState(),\n-              pendingMessage.getToState(), resourceName, partition, currentState));\n-          if (!pendingMessagesToCleanUp.containsKey(instanceName)) {\n-            pendingMessagesToCleanUp.put(instanceName, new HashMap<String, Message>());\n+          logAndAddToCleanUp(messagesToCleanUp, pendingMessage, instanceName, resourceName,\n+              partition, currentState, PENDING_MESSAGE);\n+        }\n+\n+        for (Message staleMessage : staleMessages) {\n+          if (staleMessage == null) {\n+            logger.warn(\"Should not contain a stale message as null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a045e7cc6192a94cbf8a9b113a45d24d6d8aa3a3"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwMzkyNw==", "bodyText": "We can call currentStateOutput.getStaleMessagesByInstance() to get the message set as the input, right?", "url": "https://github.com/apache/helix/pull/1124#discussion_r458303927", "createdAt": "2020-07-21T18:29:03Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -102,15 +114,22 @@ public void process(ClusterEvent event) throws Exception {\n \n   // update all pending messages to CurrentStateOutput.\n   private void updatePendingMessages(LiveInstance instance, Collection<Message> pendingMessages,\n-      CurrentStateOutput currentStateOutput, Collection<Message> pendingRelayMessages,\n-      Map<String, Resource> resourceMap) {\n+      Collection<Message> pendingRelayMessages,\n+      Map<String, Map<String, Message>> existingStaleMessages,\n+      CurrentStateOutput currentStateOutput, Map<String, Resource> resourceMap) {\n     String instanceName = instance.getInstanceName();\n     String instanceSessionId = instance.getEphemeralOwner();\n \n     // update all pending messages\n     for (Message message : pendingMessages) {\n+      // ignore existing stale messages\n+      if (existingStaleMessages.getOrDefault(instanceName, Collections.emptyMap())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a045e7cc6192a94cbf8a9b113a45d24d6d8aa3a3"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwNDM3MQ==", "bodyText": "As mentioned above, I prefer this to be an explicit set method, addStaleMessage()", "url": "https://github.com/apache/helix/pull/1124#discussion_r458304371", "createdAt": "2020-07-21T18:29:48Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -129,7 +148,14 @@ private void updatePendingMessages(LiveInstance instance, Collection<Message> pe\n         String partitionName = message.getPartitionName();\n         Partition partition = resource.getPartition(partitionName);\n         if (partition != null) {\n-          setMessageState(currentStateOutput, resourceName, partition, instanceName, message);\n+          String currentState = currentStateOutput.getCurrentState(resourceName, partition,\n+              instanceName);\n+          if (_isTaskFrameworkPipeline || !isStaleMessage(message, currentState)) {\n+            setMessageState(currentStateOutput, resourceName, partition, instanceName, message);\n+          } else {\n+            existingStaleMessages.putIfAbsent(instanceName, new HashMap<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a045e7cc6192a94cbf8a9b113a45d24d6d8aa3a3"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwNTA4Ng==", "bodyText": "So this one will return the map for modifying. I still don't like this implicit map/list ref for modifying purposes.\nAs I checked the current usage, I think you can replace it with 2 explicit modifying methods,\n\naddStaleMessage(instance, message)\nremoveStaleMessage(instance, message) -- or maybe always clean up when the cache is refreshed, so you don't even need this method?\n\nAs for supporting test, we can make it protected so only visible to test. Or keeping this method but always return shallow copy of the map only for the tests.", "url": "https://github.com/apache/helix/pull/1124#discussion_r458305086", "createdAt": "2020-07-21T18:31:00Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/BaseControllerDataProvider.java", "diffHunk": "@@ -544,6 +544,19 @@ public synchronized void setLiveInstances(List<LiveInstance> liveInstances) {\n     return _instanceMessagesCache.getMessages(instanceName);\n   }\n \n+  public Map<String, Map<String, Message>> getStaleMessages() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a045e7cc6192a94cbf8a9b113a45d24d6d8aa3a3"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c2a265bd720369a15ae00904441d1b55abb48a0", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/0c2a265bd720369a15ae00904441d1b55abb48a0", "committedDate": "2020-07-22T16:51:57Z", "message": "improve p2p"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a520ff57606148a2e7f68ffe278db852e2ef85e5", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/a520ff57606148a2e7f68ffe278db852e2ef85e5", "committedDate": "2020-07-22T16:51:57Z", "message": "fix comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e5346f753738b631ffb9ef14eb94653d03596a9", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/6e5346f753738b631ffb9ef14eb94653d03596a9", "committedDate": "2020-07-22T16:51:57Z", "message": "remove unused method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "994182b35253cfeaaa73bacc2a36c243a507d925", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/994182b35253cfeaaa73bacc2a36c243a507d925", "committedDate": "2020-07-22T16:51:57Z", "message": "fix comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e35ab95fc431c55bb99a087a114b81f46294c806", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/e35ab95fc431c55bb99a087a114b81f46294c806", "committedDate": "2020-07-22T16:51:57Z", "message": "more fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2169d88960e596832cad9603259dc9eed0303c12", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/2169d88960e596832cad9603259dc9eed0303c12", "committedDate": "2020-07-22T16:51:57Z", "message": "more fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb02d81122ae4e86720dcdf53310471172900977", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/fb02d81122ae4e86720dcdf53310471172900977", "committedDate": "2020-07-22T16:51:57Z", "message": "add shallow copy and deletion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14eb8c93f192b3924fb0372767dd35f14ccd5457", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/14eb8c93f192b3924fb0372767dd35f14ccd5457", "committedDate": "2020-07-22T16:52:13Z", "message": "add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc9ed8561c41f4ee2a76431c72e1e290e7f03e6e", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/fc9ed8561c41f4ee2a76431c72e1e290e7f03e6e", "committedDate": "2020-07-22T16:52:17Z", "message": "fix comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b069f7d6b92cd1851dd357f6e76eade514830027", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/b069f7d6b92cd1851dd357f6e76eade514830027", "committedDate": "2020-07-22T16:52:17Z", "message": "simplify stale cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "995e0561cb6e02e098155c5d66b0ae9a5c81d610", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/995e0561cb6e02e098155c5d66b0ae9a5c81d610", "committedDate": "2020-07-22T16:52:18Z", "message": "add refresh logic for stale message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0c28ad73d80327d32ee4096f1da6099716f4580", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/c0c28ad73d80327d32ee4096f1da6099716f4580", "committedDate": "2020-07-22T16:52:18Z", "message": "fix logic"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb95946465a6550427793e10304cbaf614bb9152", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/bb95946465a6550427793e10304cbaf614bb9152", "committedDate": "2020-07-22T01:49:47Z", "message": "fix logic"}, "afterCommit": {"oid": "c0c28ad73d80327d32ee4096f1da6099716f4580", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/c0c28ad73d80327d32ee4096f1da6099716f4580", "committedDate": "2020-07-22T16:52:18Z", "message": "fix logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTYxMDg1", "url": "https://github.com/apache/helix/pull/1124#pullrequestreview-453561085", "createdAt": "2020-07-22T18:05:07Z", "commit": {"oid": "c0c28ad73d80327d32ee4096f1da6099716f4580"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODowNTowN1rOG1uKmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODoxNDowN1rOG1uejQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4NDA5MQ==", "bodyText": "Let's add a @VisibleForTesting tag here", "url": "https://github.com/apache/helix/pull/1124#discussion_r458984091", "createdAt": "2020-07-22T18:05:07Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/BaseControllerDataProvider.java", "diffHunk": "@@ -544,6 +544,27 @@ public synchronized void setLiveInstances(List<LiveInstance> liveInstances) {\n     return _instanceMessagesCache.getMessages(instanceName);\n   }\n \n+  /**\n+   * This function is supposed to be only used by testing purpose for safety. For \"get\" usage,\n+   * please use getStaleMessagesByInstance.\n+   */\n+  public Map<String, Map<String, Message>> getStaleMessages() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0c28ad73d80327d32ee4096f1da6099716f4580"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4ODczMA==", "bodyText": "I think we have this method mainly for supporting the test. Otherwise, we can have the getStaleMessageForInstance() here, right?\nMy suggestion is that we should not change our business logic in any way because of the test requirement. So I will say, let's move the getStaleMessageForInstance() implementation here. And leave this method as @VisibleForTesting only.", "url": "https://github.com/apache/helix/pull/1124#discussion_r458988730", "createdAt": "2020-07-22T18:13:13Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/common/caches/InstanceMessagesCache.java", "diffHunk": "@@ -148,9 +152,20 @@ public boolean refresh(HelixDataAccessor accessor, Map<String, LiveInstance> liv\n     LOG.info(\n         \"END: InstanceMessagesCache.refresh(), {} of Messages read from ZooKeeper. took {} ms. \",\n         newMessageKeys.size(), (System.currentTimeMillis() - startTime));\n+\n+    refreshStaleMessageCache();\n     return true;\n   }\n \n+  public Map<String, Map<String, Message>> getStaleMessageCache() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0c28ad73d80327d32ee4096f1da6099716f4580"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4OTE5Nw==", "bodyText": "Or, if you can make the test to check InstanceMessagesCache only, that would be even better. But that is optional.", "url": "https://github.com/apache/helix/pull/1124#discussion_r458989197", "createdAt": "2020-07-22T18:14:07Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/common/caches/InstanceMessagesCache.java", "diffHunk": "@@ -148,9 +152,20 @@ public boolean refresh(HelixDataAccessor accessor, Map<String, LiveInstance> liv\n     LOG.info(\n         \"END: InstanceMessagesCache.refresh(), {} of Messages read from ZooKeeper. took {} ms. \",\n         newMessageKeys.size(), (System.currentTimeMillis() - startTime));\n+\n+    refreshStaleMessageCache();\n     return true;\n   }\n \n+  public Map<String, Map<String, Message>> getStaleMessageCache() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4ODczMA=="}, "originalCommit": {"oid": "c0c28ad73d80327d32ee4096f1da6099716f4580"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6074f9fd6d063efdce27a6f0a3e13f3ed7a7909", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/b6074f9fd6d063efdce27a6f0a3e13f3ed7a7909", "committedDate": "2020-07-22T18:31:35Z", "message": "minor fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4532, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}