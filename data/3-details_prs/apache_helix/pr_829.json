{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMDU4NDEw", "number": 829, "title": "Fix bugs in ZkRoutingDataReader and ZkRoutingDataWriter", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #828, #832\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nThis PR fixes the following bugs:\n\nWhen the routing data is not initialized for a namespace, creating a ZkRoutingDataReader for that namespace causes a NoNodeException due to a getChildren call. Fix: initialize the base node for routing data across all zookeeper-related actors (ZkMetadataStoreDirectory, ZkRoutingDataReader, ZkRoutingDataWriter)\nIn the getRoutingData() method of ZkRoutingDataReader, a null check is necessary before getting sharding keys from a realm node, because the realm node may be an invalid ZNRecord. Fix: add null check.\nThe hostname provided from system properties does not have the protocol. ZkRoutingDataWriter was using the hostname directly for request forwarding. Fix: add protocol to the hostname before request forwarding.\nZkRoutingDataReader's handleDataDeleted is missing an unsubscribe operation which may lead to watcher leak; handleChildChange is missing the resubscription operation. Fix: add both.\n\nThis PR also introduced an improvement to MetadataStoreDirectoryAccessor endpoints. Previously, the endpoints in MetadataStoreDirectoryAccessor are missing proper status codes for some cases: for example for IllegalArgumentException, it's most fitting to return 400 Bad Request to users, but currently the exception will not be handled and cause a 500 to be returned.\nA change that can fix this issue while improving the status code behavior is to bind exception types with status codes. NoSuchElementException should be paired with 404, IllegalArgumentException should be paired with 400, while IllegalStateException (currently used when underlying ZkClients are closed) should be paired with 500. This has two major benefits:\n\nCode maintenance is made easier. The exception types clearly and meaningfully translate to status codes. Developers no longer need to traverse layer by layer to figure out what happened to each exception; all of them are handled at the accessor layer.\nThe status codes are verbose and helpful, because they now contain the underlying exception messages that explain the exact reason behind the exceptions.\n\nTests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[INFO] Tests run: 136, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.201 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 136, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  52.954 s\n[INFO] Finished at: 2020-02-27T12:06:15-08:00\n[INFO] ------------------------------------------------------------------------\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines, and I have squashed multiple commits if they address the same issue. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml", "createdAt": "2020-02-27T20:30:43Z", "url": "https://github.com/apache/helix/pull/829", "merged": true, "mergeCommit": {"oid": "81fd2f24bd9a253ecb5437e4b47ce8abb83419ad"}, "closed": true, "closedAt": "2020-02-28T00:41:39Z", "author": {"login": "NealSun96"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIhUj0AH2gAyMzgxMDU4NDEwOjM4M2VjOTI5MmEwOTZjZGExY2JhMzI3OGRlZWQyNmNlZjQ5ODA1MzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIk6_3AH2gAyMzgxMDU4NDEwOmExNGE4ZmRlNzgzYTcyY2NkNzczN2Y5NWQ1NDE0NWUwZjJiYWNhOGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "383ec9292a096cda1cba3278deed26cef4980533", "author": {"user": {"login": "NealSun96", "name": "Neal Sun"}}, "url": "https://github.com/apache/helix/commit/383ec9292a096cda1cba3278deed26cef4980533", "committedDate": "2020-02-27T20:26:48Z", "message": "Fix bugs in ZkRoutingDataReader and ZkRoutingDataWriter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7650dcadf314ea517989259fecb19be7b6739b8c", "author": {"user": {"login": "NealSun96", "name": "Neal Sun"}}, "url": "https://github.com/apache/helix/commit/7650dcadf314ea517989259fecb19be7b6739b8c", "committedDate": "2020-02-27T22:17:30Z", "message": "Add child change subscription for handleChildChange"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDQxMjY3", "url": "https://github.com/apache/helix/pull/829#pullrequestreview-366041267", "createdAt": "2020-02-27T22:20:34Z", "commit": {"oid": "7650dcadf314ea517989259fecb19be7b6739b8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMDozNFrOFvjQyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMDozNFrOFvjQyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNTEzMA==", "bodyText": "After making the fix, handleChildChange and handleDataDeleted are completely equal now. I added a comment on line 127 based on what you told me to justify the duplication - sometimes the callbacks may go missing. Should we consider calling handleDataDeleted from handleChildChange, for example, to reduce duplication? @narendly", "url": "https://github.com/apache/helix/pull/829#discussion_r385405130", "createdAt": "2020-02-27T22:20:34Z", "author": {"login": "NealSun96"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -134,6 +147,7 @@ public synchronized void handleChildChange(String s, List<String> list) {\n \n     // Subscribe data changes again because some children might have been deleted or added\n     _zkClient.unsubscribeAll();\n+    _zkClient.subscribeChildChanges(MetadataStoreRoutingConstants.ROUTING_DATA_PATH, this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7650dcadf314ea517989259fecb19be7b6739b8c"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38278be73231ca5ec1f71d61957a41a5386720fb", "author": {"user": {"login": "NealSun96", "name": "Neal Sun"}}, "url": "https://github.com/apache/helix/commit/38278be73231ca5ec1f71d61957a41a5386720fb", "committedDate": "2020-02-28T00:01:41Z", "message": "change all endpoint's status code behavior and added test coverage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDg0MTg1", "url": "https://github.com/apache/helix/pull/829#pullrequestreview-366084185", "createdAt": "2020-02-28T00:03:41Z", "commit": {"oid": "38278be73231ca5ec1f71d61957a41a5386720fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowMzo0MVrOFvlbEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowMzo0MVrOFvlbEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0MDUyOQ==", "bodyText": "Nit: How about something like HTTP_PREFIX?", "url": "https://github.com/apache/helix/pull/829#discussion_r385440529", "createdAt": "2020-02-28T00:03:41Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/common/HttpConstants.java", "diffHunk": "@@ -26,4 +26,6 @@\n     PUT,\n     DELETE\n   }\n+\n+  public static final String HTTP_PROTOCOL = \"http://\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38278be73231ca5ec1f71d61957a41a5386720fb"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDg1MTc5", "url": "https://github.com/apache/helix/pull/829#pullrequestreview-366085179", "createdAt": "2020-02-28T00:06:32Z", "commit": {"oid": "38278be73231ca5ec1f71d61957a41a5386720fb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowNjozM1rOFvlebQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowNzo0OFrOFvlf_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0MTM4OQ==", "bodyText": "Null check on allRealmAddress just in case?", "url": "https://github.com/apache/helix/pull/829#discussion_r385441389", "createdAt": "2020-02-28T00:06:33Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -90,10 +99,12 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n     for (String realmAddress : allRealmAddresses) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38278be73231ca5ec1f71d61957a41a5386720fb"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0MTc4OA==", "bodyText": "Please refactor the logic out into a private method and call it handleResubscription() and call it in both of these methods.", "url": "https://github.com/apache/helix/pull/829#discussion_r385441788", "createdAt": "2020-02-28T00:07:48Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -128,17 +142,7 @@ public synchronized void handleDataDeleted(String s) {\n \n   @Override\n   public synchronized void handleChildChange(String s, List<String> list) {\n-    if (_zkClient.isClosed()) {\n-      return;\n-    }\n-\n-    // Subscribe data changes again because some children might have been deleted or added\n-    _zkClient.unsubscribeAll();\n-    for (String child : _zkClient.getChildren(MetadataStoreRoutingConstants.ROUTING_DATA_PATH)) {\n-      _zkClient.subscribeDataChanges(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + child,\n-          this);\n-    }\n-    _routingDataListener.refreshRoutingData(_namespace);\n+    handleDataDeleted(s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38278be73231ca5ec1f71d61957a41a5386720fb"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cc4d9452019577604928dfc8c8d374b1c49dbbd", "author": {"user": {"login": "NealSun96", "name": "Neal Sun"}}, "url": "https://github.com/apache/helix/commit/8cc4d9452019577604928dfc8c8d374b1c49dbbd", "committedDate": "2020-02-28T00:19:39Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDkwNjA5", "url": "https://github.com/apache/helix/pull/829#pullrequestreview-366090609", "createdAt": "2020-02-28T00:22:38Z", "commit": {"oid": "8cc4d9452019577604928dfc8c8d374b1c49dbbd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDk0NDg2", "url": "https://github.com/apache/helix/pull/829#pullrequestreview-366094486", "createdAt": "2020-02-28T00:35:05Z", "commit": {"oid": "8cc4d9452019577604928dfc8c8d374b1c49dbbd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDozNTowNVrOFvl-DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDozNTowNVrOFvl-DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0OTQ4NA==", "bodyText": "format", "url": "https://github.com/apache/helix/pull/829#discussion_r385449484", "createdAt": "2020-02-28T00:35:05Z", "author": {"login": "narendly"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/metadatastore/accessor/ZkRoutingDataReader.java", "diffHunk": "@@ -87,13 +96,18 @@ public ZkRoutingDataReader(String namespace, String zkAddress,\n           \"Routing data directory ZNode \" + MetadataStoreRoutingConstants.ROUTING_DATA_PATH\n               + \" does not exist. Routing ZooKeeper address: \" + _zkAddress);\n     }\n-    for (String realmAddress : allRealmAddresses) {\n-      ZNRecord record =\n-          _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + realmAddress);\n-      List<String> shardingKeys =\n-          record.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY);\n-      routingData\n-          .put(realmAddress, shardingKeys != null ? shardingKeys : Collections.emptyList());\n+    if (allRealmAddresses != null)\n+    {\n+      for (String realmAddress : allRealmAddresses) {\n+        ZNRecord record =\n+            _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + realmAddress);\n+        if (record != null) {\n+          List<String> shardingKeys =\n+              record.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY);\n+          routingData\n+              .put(realmAddress, shardingKeys != null ? shardingKeys : Collections.emptyList());\n+        }\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cc4d9452019577604928dfc8c8d374b1c49dbbd"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a14a8fde783a72ccd7737f95d54145e0f2baca8b", "author": {"user": {"login": "NealSun96", "name": "Neal Sun"}}, "url": "https://github.com/apache/helix/commit/a14a8fde783a72ccd7737f95d54145e0f2baca8b", "committedDate": "2020-02-28T00:38:30Z", "message": "fix formatting:"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4986, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}