{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NTgxMDkz", "number": 693, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMDozMzoxOFrODZrpzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoxMDoxOFrODaZovg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjU2MjA0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMDozMzoxOFrOFgNVtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMDozMzoxOFrOFgNVtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMxNzMwMQ==", "bodyText": "Nit, this line is unnecessary. Style format file is updated in master branch. You may want to re-import the file in your Intellij so this line won't be formatted.", "url": "https://github.com/apache/helix/pull/693#discussion_r369317301", "createdAt": "2020-01-22T00:33:18Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java", "diffHunk": "@@ -37,13 +37,15 @@\n import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n+\n public class TestZKUtil extends ZkUnitTestBase {\n   private static Logger LOG = LoggerFactory.getLogger(TestZKUtil.class);\n \n   String clusterName = CLUSTER_PREFIX + \"_\" + getShortClassName();\n \n   @BeforeClass()\n-  public void beforeClass() throws Exception {\n+  public void beforeClass()\n+      throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6835665556fd56a1f47791646c776ba1e34c894"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDA5NTk4OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzoxMDoxOFrOFhVXBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxODo1NToxOFrOFhnNCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ5NzI4NA==", "bodyText": "This is like delete and re-create the cluster, which I don't believe is a better way than deleting the path in the required methods.\nNot every method needs deleting. Ex. testIsClusterSetup.\nIn my opinion, if a method creates the path, it is the method's responsibility to clean up.", "url": "https://github.com/apache/helix/pull/693#discussion_r370497284", "createdAt": "2020-01-24T07:10:18Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java", "diffHunk": "@@ -63,6 +65,13 @@ public void afterClass() {\n     deleteCluster(clusterName);\n   }\n \n+  @AfterMethod()\n+  public void afterMethod() {\n+    String path = PropertyPathBuilder.instanceConfig(clusterName);\n+    _gZkClient.deleteRecursively(path);\n+    _gZkClient.createPersistent(path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9777873f68bc2bbb574d0970093a5a386b8a2b51"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc4NDk1MA==", "bodyText": "I agree it can cause unnecessary delete operation calls such as in testIsClusterSetup, but it doesn't add too much latency since what it does is deleting the nodes, not recreating the cluster . It is also safer than leaving the clean up responsibility to each method, as it can make sure the cluster is clean for each test method. I think both way work and it's barely a trade off.", "url": "https://github.com/apache/helix/pull/693#discussion_r370784950", "createdAt": "2020-01-24T18:45:51Z", "author": {"login": "mgao0"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java", "diffHunk": "@@ -63,6 +65,13 @@ public void afterClass() {\n     deleteCluster(clusterName);\n   }\n \n+  @AfterMethod()\n+  public void afterMethod() {\n+    String path = PropertyPathBuilder.instanceConfig(clusterName);\n+    _gZkClient.deleteRecursively(path);\n+    _gZkClient.createPersistent(path);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ5NzI4NA=="}, "originalCommit": {"oid": "9777873f68bc2bbb574d0970093a5a386b8a2b51"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc4OTY0Mg==", "bodyText": "I checked the test cases one by one, there is no test which is testing to create the root path (please correct me if I am wrong). Given so, re-create the root path is easier and safer.\nIf we really have a case that requires the root path non-exists, feel free to change that test.", "url": "https://github.com/apache/helix/pull/693#discussion_r370789642", "createdAt": "2020-01-24T18:55:18Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java", "diffHunk": "@@ -63,6 +65,13 @@ public void afterClass() {\n     deleteCluster(clusterName);\n   }\n \n+  @AfterMethod()\n+  public void afterMethod() {\n+    String path = PropertyPathBuilder.instanceConfig(clusterName);\n+    _gZkClient.deleteRecursively(path);\n+    _gZkClient.createPersistent(path);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ5NzI4NA=="}, "originalCommit": {"oid": "9777873f68bc2bbb574d0970093a5a386b8a2b51"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1544, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}