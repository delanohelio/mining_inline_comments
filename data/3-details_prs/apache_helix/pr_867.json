{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MTA4NDYy", "number": 867, "title": "Make ZkHelixClusterVerifier and its child classes realm-aware", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #866\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nChangelist:\n\nMake sure constructors accept RealmAwareZkClient\nAdd Builders in each child class of ZkHelixClusterVerifier so that ZkClient configs are configurable and uses realm-aware ZkClient APIs\n\nTests\n\n The following tests are written for this issue:\n\nCovered by existing tests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nhelix-core:\n\n[INFO] Results:\n[INFO]\n[ERROR] Failures:\n[ERROR]   TestCleanupExternalView.test:122 external-view for TestDB0 should be removed, but was: ZnRecord=TestDB0, {BUCKET_SIZE=0, IDEAL_STATE_MODE=AUTO, NUM_PARTITIONS=2, REBALANCE_MODE=SEMI_AUTO, REBALANCE_STRATEGY=DEFAULT, REPLICAS=2, STATE_MODEL_DEF_REF=MasterSlave, STATE_MODEL_FACTORY_NAME=DEFAULT}{TestDB0_0={localhost_12918=SLAVE, localhost_12919=MASTER}, TestDB0_1={localhost_12918=MASTER, localhost_12919=SLAVE}}{}, Stat=Stat {_version=5, _creationTime=1583435076996, _modifiedTime=1583435077917, _ephemeralOwner=0} expected: but was:\n[ERROR]   TestEnableCompression.testEnableCompressionResource:108 expected: but was:\n[ERROR]   TestRebalanceRunningTask.testFixedTargetTaskAndDisabledRebalanceAndNodeAdded:265 expected: but was:\n[ERROR]   TestHelixAdminCli.testDeactivateCluster:604 \u00bb Helix There are still LEADER in ...\n[INFO]\n[ERROR] Tests run: 1083, Failures: 4, Errors: 0, Skipped: 1\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:11 h\n[INFO] Finished at: 2020-03-05T11:11:14-08:00\n[INFO] ------------------------------------------------------------------------\n\nmvn test -Dtest=TestCleanupExternalView,TestEnableCompression,TestRebalanceRunningTask,TestHelixAdminCli\n\n[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 64.876 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  02:15 min\n[INFO] Finished at: 2020-03-05T15:01:00-08:00\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-03-05T07:21:01Z", "url": "https://github.com/apache/helix/pull/867", "merged": true, "mergeCommit": {"oid": "7077098fc9d6ab4a77958a846775942ea62cffc5"}, "closed": true, "closedAt": "2020-03-12T03:06:19Z", "author": {"login": "narendly"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcK5zXSgFqTM3MDA5NjI0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMy0loABqjMxMjEyMzc5MTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMDk2MjQx", "url": "https://github.com/apache/helix/pull/867#pullrequestreview-370096241", "createdAt": "2020-03-06T05:55:25Z", "commit": {"oid": "c4d99561c16f4abaf1a7900888c577e0e51252cd"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNTo1NToyNVrOFyt46A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNjowNDozN1rOFyuAAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNDk2OA==", "bodyText": "Shall we copy the list in case the builder would be used to create more objects?\nSame for the super class. But it is not shown here so I haven't reviewed it.", "url": "https://github.com/apache/helix/pull/867#discussion_r388724968", "createdAt": "2020-03-06T05:55:25Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java", "diffHunk": "@@ -94,29 +93,43 @@ public BestPossibleExternalViewVerifier(HelixZkClient zkClient, String clusterNa\n     _dataProvider = new ResourceControllerDataProvider();\n   }\n \n-  public static class Builder {\n-    private String _clusterName;\n+  private BestPossibleExternalViewVerifier(BestPossibleExternalViewVerifier.Builder builder) {\n+    super(builder);\n+    _errStates = builder._errStates;\n+    _resources = builder._resources;\n+    _expectLiveInstances = builder._expectLiveInstances;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d99561c16f4abaf1a7900888c577e0e51252cd"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNTQwMQ==", "bodyText": "Since we have the builder, shall we deprecated all the other constructors?", "url": "https://github.com/apache/helix/pull/867#discussion_r388725401", "createdAt": "2020-03-06T05:57:30Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java", "diffHunk": "@@ -84,7 +83,7 @@ public BestPossibleExternalViewVerifier(String zkAddr, String clusterName, Set<S\n     _dataProvider = new ResourceControllerDataProvider();\n   }\n \n-  public BestPossibleExternalViewVerifier(HelixZkClient zkClient, String clusterName,\n+  public BestPossibleExternalViewVerifier(RealmAwareZkClient zkClient, String clusterName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d99561c16f4abaf1a7900888c577e0e51252cd"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNTU5OQ==", "bodyText": "Is it possible that we merge this constructor logic into BestPossibleExternalViewVerifier(Builder); So we don't need to maintain both logics.", "url": "https://github.com/apache/helix/pull/867#discussion_r388725599", "createdAt": "2020-03-06T05:58:29Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java", "diffHunk": "@@ -94,29 +93,43 @@ public BestPossibleExternalViewVerifier(HelixZkClient zkClient, String clusterNa\n     _dataProvider = new ResourceControllerDataProvider();\n   }\n \n-  public static class Builder {\n-    private String _clusterName;\n+  private BestPossibleExternalViewVerifier(BestPossibleExternalViewVerifier.Builder builder) {\n+    super(builder);\n+    _errStates = builder._errStates;\n+    _resources = builder._resources;\n+    _expectLiveInstances = builder._expectLiveInstances;\n+    _dataProvider = new ResourceControllerDataProvider();\n+  }\n+\n+  public static class Builder extends ZkHelixClusterVerifier.Builder {\n+    private final String _clusterName;\n     private Map<String, Map<String, String>> _errStates;\n     private Set<String> _resources;\n     private Set<String> _expectLiveInstances;\n-    private String _zkAddr;\n-    private HelixZkClient _zkClient;\n+    private RealmAwareZkClient _zkClient;\n \n     public Builder(String clusterName) {\n       _clusterName = clusterName;\n     }\n \n     public BestPossibleExternalViewVerifier build() {\n-      if (_clusterName == null || (_zkAddr == null && _zkClient == null)) {\n+      if (_clusterName == null || (_zkAddress == null && _zkClient == null)) {\n         throw new IllegalArgumentException(\"Cluster name or zookeeper info is missing!\");\n       }\n \n       if (_zkClient != null) {\n         return new BestPossibleExternalViewVerifier(_zkClient, _clusterName, _resources, _errStates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d99561c16f4abaf1a7900888c577e0e51252cd"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNjA0Mg==", "bodyText": "Same here, shall we replace the existing constructor with the builder constructor?", "url": "https://github.com/apache/helix/pull/867#discussion_r388726042", "createdAt": "2020-03-06T06:00:38Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/ClusterLiveNodesVerifier.java", "diffHunk": "@@ -24,18 +24,24 @@\n import java.util.List;\n import java.util.Set;\n \n-import org.apache.helix.zookeeper.api.client.HelixZkClient;\n+import org.apache.helix.zookeeper.api.client.RealmAwareZkClient;\n+\n \n public class ClusterLiveNodesVerifier extends ZkHelixClusterVerifier {\n \n   final Set<String> _expectLiveNodes;\n \n-  public ClusterLiveNodesVerifier(HelixZkClient zkclient, String clusterName,\n+  public ClusterLiveNodesVerifier(RealmAwareZkClient zkclient, String clusterName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d99561c16f4abaf1a7900888c577e0e51252cd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNjc4NQ==", "bodyText": "Question, In which case we need to handle this fallback logic? It is expected in some condition or just for safe?", "url": "https://github.com/apache/helix/pull/867#discussion_r388726785", "createdAt": "2020-03-06T06:04:37Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/ZkHelixClusterVerifier.java", "diffHunk": "@@ -104,15 +112,49 @@ public ZkHelixClusterVerifier(String zkAddr, String clusterName) {\n     if (zkAddr == null || clusterName == null) {\n       throw new IllegalArgumentException(\"requires zkAddr|clusterName\");\n     }\n-    _zkClient = DedicatedZkClientFactory.getInstance()\n-        .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr));\n+\n+    RealmAwareZkClient zkClient;\n+    try {\n+      // First, try to create a RealmAwareZkClient that's a DedicatedZkClient\n+      RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder connectionConfigBuilder =\n+          new RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder();\n+      connectionConfigBuilder.setZkRealmShardingKey(\"/\" + clusterName);\n+      connectionConfigBuilder.setRealmMode(RealmAwareZkClient.RealmMode.SINGLE_REALM);\n+      zkClient = DedicatedZkClientFactory.getInstance()\n+          .buildZkClient(connectionConfigBuilder.build(),\n+              new RealmAwareZkClient.RealmAwareZkClientConfig());\n+    } catch (IOException | InvalidRoutingDataException | IllegalStateException e) {\n+      // Fallback option is to create a HelixZkClient that's a DedicatedZkClient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d99561c16f4abaf1a7900888c577e0e51252cd"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNTE0NjA4", "url": "https://github.com/apache/helix/pull/867#pullrequestreview-370514608", "createdAt": "2020-03-06T17:54:21Z", "commit": {"oid": "c4d99561c16f4abaf1a7900888c577e0e51252cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzo1NDoyMVrOFzB7tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzo1NDoyMVrOFzB7tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA1MzM2Ng==", "bodyText": "Is this necessary to change the deprecated method?", "url": "https://github.com/apache/helix/pull/867#discussion_r389053366", "createdAt": "2020-03-06T17:54:21Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZkBaseDataAccessor.java", "diffHunk": "@@ -102,14 +103,14 @@ public AccessResult() {\n \n   private static Logger LOG = LoggerFactory.getLogger(ZkBaseDataAccessor.class);\n \n-  private final HelixZkClient _zkClient;\n-  // true if ZkBaseDataAccessor was instantiated with a HelixZkClient, false otherwise\n+  private final RealmAwareZkClient _zkClient;\n+  // true if ZkBaseDataAccessor was instantiated with a RealmAwareZkClient, false otherwise\n   // This is used for close() to determine how ZkBaseDataAccessor should close the underlying\n   // ZkClient\n   private final boolean _usesExternalZkClient;\n \n   @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d99561c16f4abaf1a7900888c577e0e51252cd"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDkxODM2", "url": "https://github.com/apache/helix/pull/867#pullrequestreview-373091836", "createdAt": "2020-03-11T20:12:21Z", "commit": {"oid": "93b474c1dfceff26ebc2c42f82b99ad28375781a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDoxMjoyMlrOF1Hafw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDoxNDoyM1rOF1Hgxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0MDMxOQ==", "bodyText": "Nit: Maybe can we add javadoc for why it is deprecated and what is recommended to use?", "url": "https://github.com/apache/helix/pull/867#discussion_r391240319", "createdAt": "2020-03-11T20:12:22Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java", "diffHunk": "@@ -84,7 +84,8 @@ public BestPossibleExternalViewVerifier(String zkAddr, String clusterName, Set<S\n     _dataProvider = new ResourceControllerDataProvider();\n   }\n \n-  public BestPossibleExternalViewVerifier(HelixZkClient zkClient, String clusterName,\n+  @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b474c1dfceff26ebc2c42f82b99ad28375781a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0MTkyNw==", "bodyText": "It seems the original constructors don't do deep copy. Is there a reason we do deep copy here? Maybe to prevent it from any concurrent modification exception as seen in prod or tests?", "url": "https://github.com/apache/helix/pull/867#discussion_r391241927", "createdAt": "2020-03-11T20:14:23Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java", "diffHunk": "@@ -94,29 +95,47 @@ public BestPossibleExternalViewVerifier(HelixZkClient zkClient, String clusterNa\n     _dataProvider = new ResourceControllerDataProvider();\n   }\n \n-  public static class Builder {\n-    private String _clusterName;\n+  private BestPossibleExternalViewVerifier(Builder builder) {\n+    super(builder);\n+    // Deep copy data from Builder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b474c1dfceff26ebc2c42f82b99ad28375781a"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTczMTc5", "url": "https://github.com/apache/helix/pull/867#pullrequestreview-373173179", "createdAt": "2020-03-11T22:36:23Z", "commit": {"oid": "93b474c1dfceff26ebc2c42f82b99ad28375781a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4027d589c407f3697276eefe7a11e626e70a1072", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/4027d589c407f3697276eefe7a11e626e70a1072", "committedDate": "2020-03-12T02:48:48Z", "message": "Make ZkHelixClusterVerifier and its child classes realm-aware\n\nChangelist:\n1. Make sure constructors accept RealmAwareZkClient\n2. Add Builders in each child class of ZkHelixClusterVerifier so that ZkClient configs are configurable and uses realm-aware ZkClient APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b231111a2877ad65156320e4253ef19702462c08", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/b231111a2877ad65156320e4253ef19702462c08", "committedDate": "2020-03-12T02:48:48Z", "message": "sadf'\ngit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "125509b5b2f9507a3517ba03337a3b69a4d25639", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/125509b5b2f9507a3517ba03337a3b69a4d25639", "committedDate": "2020-03-12T02:48:48Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0630b06ee69c2a0bbab121847adeeb185ef1244", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/c0630b06ee69c2a0bbab121847adeeb185ef1244", "committedDate": "2020-03-12T02:48:48Z", "message": "address"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "922b7062a56bc5a5d26ec6ddd6c26694bbfb27ac", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/922b7062a56bc5a5d26ec6ddd6c26694bbfb27ac", "committedDate": "2020-03-12T03:05:36Z", "message": "sadf"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93b474c1dfceff26ebc2c42f82b99ad28375781a", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/93b474c1dfceff26ebc2c42f82b99ad28375781a", "committedDate": "2020-03-11T01:55:53Z", "message": "address"}, "afterCommit": {"oid": "922b7062a56bc5a5d26ec6ddd6c26694bbfb27ac", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/922b7062a56bc5a5d26ec6ddd6c26694bbfb27ac", "committedDate": "2020-03-12T03:05:36Z", "message": "sadf"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4672, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}