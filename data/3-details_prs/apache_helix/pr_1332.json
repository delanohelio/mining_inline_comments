{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1Njk0Mzc1", "number": 1332, "title": "Fix PreFetch annotation in ZkClient and CallbackHandler", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1331\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nPreFetch annotation in class CallbackHandler is using org.apache.helix.api.listeners.PreFetch.\nThen when it is disabled, the value is not honor in ZkClient. So ZkClient still prefetches the data for callback handler. Because in ZkClient, the annotation org.apache.helix.zookeeper.zkclient.annotation.PreFetch is used.\nThis PR also changes the existing annotation in zookeeper-api org.apache.helix.zookeeper.zkclient.annotation.PreFetch is proposed to org.apache.helix.zookeeper.zkclient.annotation.PreFetchChangedData.\nTests\n\n\n The following tests are written for this issue:\n\n\nTestPrefetchChangedData\n\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n\n[ERROR] Tests run: 1200, Failures: 1, Errors: 0, Skipped: 1, Time elapsed: 4,750.436 s <<< FAILURE! - in TestSuite\n[ERROR] testQueueParallelJobs(org.apache.helix.integration.task.TestEnqueueJobs)  Time elapsed: 300.013 s  <<< FAILURE!\norg.testng.internal.thread.ThreadTimeoutException: Method org.testng.internal.TestNGMethod.testQueueParallelJobs() didn't finish within the time-out 300000\n[INFO]\n[INFO] Results:\n[INFO]\n[ERROR] Failures:\n[ERROR]   TestEnqueueJobs.testQueueParallelJobs \u00bb ThreadTimeout Method org.testng.intern...\n[INFO]\n[ERROR] Tests run: 1200, Failures: 1, Errors: 0, Skipped: 1\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:19 h\n[INFO] Finished at: 2020-08-31T17:33:39-07:00\n[INFO] ------------------------------------------------------------------------\n\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-08-29T00:48:20Z", "url": "https://github.com/apache/helix/pull/1332", "merged": true, "mergeCommit": {"oid": "8320f916fa60a58dbc545c84f42eaad688ce6047"}, "closed": true, "closedAt": "2020-09-01T02:03:27Z", "author": {"login": "huizhilu"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDer85AH2gAyNDc1Njk0Mzc1OjMyOTgwODhlM2JkMjlhZjgyMjMzNzY3NmRkNTU4OTM2MjkwMmEwZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEZF_RAFqTQ3ODk0Mjg2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3298088e3bd29af822337676dd5589362902a0dd", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/3298088e3bd29af822337676dd5589362902a0dd", "committedDate": "2020-08-29T00:44:10Z", "message": "Fix PreFetch annotation in ZkClient and CallbackHandler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MDgzNTA4", "url": "https://github.com/apache/helix/pull/1332#pullrequestreview-478083508", "createdAt": "2020-08-29T00:51:10Z", "commit": {"oid": "3298088e3bd29af822337676dd5589362902a0dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMDo1MToxMFrOHJXo5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMDo1MToxMFrOHJXo5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4NjUzNQ==", "bodyText": "Can we add more description here, such as if this is disabled, in the ZkClient's callback handleDataChange(Path, Data), you should expect the data is null.  Also, mention what is the default value if not set.", "url": "https://github.com/apache/helix/pull/1332#discussion_r479586535", "createdAt": "2020-08-29T00:51:10Z", "author": {"login": "lei-xia"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/annotation/PreFetchChangedData.java", "diffHunk": "@@ -22,8 +22,19 @@\n import java.lang.annotation.Retention;\n import java.lang.annotation.RetentionPolicy;\n \n-\n+/**\n+ * An annotation used to prefetch changed data for\n+ * {@link org.apache.helix.zookeeper.zkclient.IZkDataListener} in ZkClient.\n+ * <p>\n+ * Example:\n+ * <pre>\n+ * {@code @PreFetch(enabled = false)}\n+ *  public class MyCallback implements IZkDataListener\n+ * </pre>\n+ * {@code @PreFetch(enabled = false)} means data will not be prefetched in ZkClient before\n+ * handling data change.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3298088e3bd29af822337676dd5589362902a0dd"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5044b62832a9b6e62787804e048c1fb12e6337cc", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/5044b62832a9b6e62787804e048c1fb12e6337cc", "committedDate": "2020-08-29T05:35:28Z", "message": "Add more javadocs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d8afd2566bb0f9f0409cf658987ddc4ad2dbb4a", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/6d8afd2566bb0f9f0409cf658987ddc4ad2dbb4a", "committedDate": "2020-08-29T05:18:20Z", "message": "Add more javadocs"}, "afterCommit": {"oid": "5044b62832a9b6e62787804e048c1fb12e6337cc", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/5044b62832a9b6e62787804e048c1fb12e6337cc", "committedDate": "2020-08-29T05:35:28Z", "message": "Add more javadocs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTQ0Nzgx", "url": "https://github.com/apache/helix/pull/1332#pullrequestreview-478144781", "createdAt": "2020-08-29T17:56:16Z", "commit": {"oid": "5044b62832a9b6e62787804e048c1fb12e6337cc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNzo1NjoxNlrOHJc-Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNzo1NjoxNlrOHJc-Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MzkyNw==", "bodyText": "By default, prefetch is enabled or disabled? Line 28 and 31 are conflict.", "url": "https://github.com/apache/helix/pull/1332#discussion_r479673927", "createdAt": "2020-08-29T17:56:16Z", "author": {"login": "lei-xia"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/annotation/PreFetchChangedData.java", "diffHunk": "@@ -22,8 +22,25 @@\n import java.lang.annotation.Retention;\n import java.lang.annotation.RetentionPolicy;\n \n-\n+/**\n+ * An annotation used to prefetch changed data for\n+ * {@link org.apache.helix.zookeeper.zkclient.IZkDataListener} in ZkClient.\n+ * By default, prefetch is enabled: when ZkClient handles a data change event,\n+ * ZkClient will read data and pass data object to\n+ * {@link org.apache.helix.zookeeper.zkclient.IZkDataListener#handleDataChange(String, Object)}.\n+ * By default, prefetch is disabled: ZkClient will not read data, so data object is passed as null.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5044b62832a9b6e62787804e048c1fb12e6337cc"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be9efec486c129923c6b56222be8a7a2ec1bcf8", "author": {"user": {"login": "huizhilu", "name": "Huizhi Lu"}}, "url": "https://github.com/apache/helix/commit/5be9efec486c129923c6b56222be8a7a2ec1bcf8", "committedDate": "2020-08-29T20:26:12Z", "message": "Address javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4OTIzNzA2", "url": "https://github.com/apache/helix/pull/1332#pullrequestreview-478923706", "createdAt": "2020-08-31T20:17:09Z", "commit": {"oid": "5be9efec486c129923c6b56222be8a7a2ec1bcf8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDoxNzowOVrOHKHxXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDoxNzowOVrOHKHxXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3NTEzMg==", "bodyText": "What is the use for this @retention ?", "url": "https://github.com/apache/helix/pull/1332#discussion_r480375132", "createdAt": "2020-08-31T20:17:09Z", "author": {"login": "kaisun2000"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/annotation/PreFetchChangedData.java", "diffHunk": "@@ -22,8 +22,25 @@\n import java.lang.annotation.Retention;\n import java.lang.annotation.RetentionPolicy;\n \n-\n+/**\n+ * An annotation used to prefetch changed data for\n+ * {@link org.apache.helix.zookeeper.zkclient.IZkDataListener} in ZkClient.\n+ * By default, prefetch is enabled: when ZkClient handles a data change event,\n+ * ZkClient will read data and pass data object to\n+ * {@link org.apache.helix.zookeeper.zkclient.IZkDataListener#handleDataChange(String, Object)}.\n+ * If disabled({@code false}): ZkClient will not read data, so data object is passed as null.\n+ * <p>\n+ * Example:\n+ * <pre>\n+ * {@code @PreFetch(enabled = false)}\n+ *  public class MyCallback implements IZkDataListener\n+ * </pre>\n+ *\n+ * {@code @PreFetch(enabled = false)} means data will not be prefetched in ZkClient before\n+ * handling data change: data is null in\n+ * {@link org.apache.helix.zookeeper.zkclient.IZkDataListener#handleDataChange(String, Object)}\n+ */\n @Retention(RetentionPolicy.RUNTIME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be9efec486c129923c6b56222be8a7a2ec1bcf8"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4OTI2MzY2", "url": "https://github.com/apache/helix/pull/1332#pullrequestreview-478926366", "createdAt": "2020-08-31T20:21:16Z", "commit": {"oid": "5be9efec486c129923c6b56222be8a7a2ec1bcf8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDoyMToxN1rOHKH5qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDoyMToxN1rOHKH5qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3NzI1Ng==", "bodyText": "Previously (in production) callbackhandler not using prefetch, do we verify?", "url": "https://github.com/apache/helix/pull/1332#discussion_r480377256", "createdAt": "2020-08-31T20:21:17Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -102,8 +102,7 @@\n import static org.apache.helix.HelixConstants.ChangeType.RESOURCE_CONFIG;\n import static org.apache.helix.HelixConstants.ChangeType.TARGET_EXTERNAL_VIEW;\n \n-\n-@PreFetch(enabled = false)\n+@PreFetchChangedData(enabled = false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be9efec486c129923c6b56222be8a7a2ec1bcf8"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4OTI4MjQx", "url": "https://github.com/apache/helix/pull/1332#pullrequestreview-478928241", "createdAt": "2020-08-31T20:24:11Z", "commit": {"oid": "5be9efec486c129923c6b56222be8a7a2ec1bcf8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDoyNDoxMlrOHKH_UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDoyNDoxMlrOHKH_UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3ODcwNQ==", "bodyText": "3L is 3 milli second? This can be a source of test unstableness. Let us try 3 second. Using 3 second does not really mean you will wait 3 second anyway.\nnit: Also, define the waiting period using a constant static.", "url": "https://github.com/apache/helix/pull/1332#discussion_r480378705", "createdAt": "2020-08-31T20:24:12Z", "author": {"login": "kaisun2000"}, "path": "zookeeper-api/src/test/java/org/apache/helix/zookeeper/zkclient/TestPrefetchChangedData.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package org.apache.helix.zookeeper.zkclient;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.helix.zookeeper.impl.TestHelper;\n+import org.apache.helix.zookeeper.impl.ZkTestBase;\n+import org.apache.helix.zookeeper.impl.client.ZkClient;\n+import org.apache.helix.zookeeper.zkclient.annotation.PreFetchChangedData;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+public class TestPrefetchChangedData extends ZkTestBase {\n+  @Test\n+  public void testPrefetchChangedDataEnabled() throws InterruptedException {\n+    String path = \"/\" + TestHelper.getTestMethodName();\n+    ZkClient zkClient = new ZkClient(ZkTestBase.ZK_ADDR);\n+\n+    try {\n+      zkClient.createPersistent(path, \"v1\");\n+\n+      CountDownLatch countDownLatch = new CountDownLatch(1);\n+      PreFetchZkDataListener dataListener = new PreFetchZkDataListener(countDownLatch);\n+      zkClient.subscribeDataChanges(path, dataListener);\n+      zkClient.writeData(path, \"v2\");\n+\n+      Assert.assertTrue(countDownLatch.await(3L, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be9efec486c129923c6b56222be8a7a2ec1bcf8"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4OTQyODYz", "url": "https://github.com/apache/helix/pull/1332#pullrequestreview-478942863", "createdAt": "2020-08-31T20:47:06Z", "commit": {"oid": "5be9efec486c129923c6b56222be8a7a2ec1bcf8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4253, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}