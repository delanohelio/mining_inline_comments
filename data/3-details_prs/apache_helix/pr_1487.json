{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMTQ2MTU0", "number": 1487, "title": "Add a configuration option to allow enable/disable writing error log to ZK", "bodyText": "Issues\n\n\n My PR addresses the following Helix issues and references them in the PR description:\nfix #1486\n\n\nDescription\n\n\n Here are some details about my PR, including screenshots of any UI changes:\nImprove statusUpdateUtil log error to ZK by adding an option to enabled\nit. By default, it would not log error to ZK. This is to avoid some\nerror code path that keep flooding ZK sever which cause DoS to Zk.\nSuch as HelixTaskExecutor onMessage creation messageHandler exception.\n\n\nTests\n\n\n The following tests are written for this issue:\nTestStatusUpdateUtil\n\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n\ngithub passed.\nhttps://github.com/apache/helix/runs/1344486165?check_suite_focus=true\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-10-27T22:36:49Z", "url": "https://github.com/apache/helix/pull/1487", "merged": true, "mergeCommit": {"oid": "1242dc16d249816176e64a7304583bdc78fbe030"}, "closed": true, "closedAt": "2020-11-11T07:13:42Z", "author": {"login": "kaisun2000"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWgadfAH2gAyNTExMTQ2MTU0OjEwYTllOWEwOThlY2NiNTIzOWZhZTc1NDE3ZThjYTc4NDdiNmIzZjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbXBOsgFqTUyNzg3MDA0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "10a9e9a098eccb5239fae75417e8ca7847b6b3f7", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/10a9e9a098eccb5239fae75417e8ca7847b6b3f7", "committedDate": "2020-10-27T03:29:26Z", "message": "fix #1486\nImprove statusUpdateUtil log error to ZK by adding an option to enabled\nit. By default, it would not log error to ZK. This is to avoid some\nerror code path that keep flooding ZK sever which cause DoS to Zk.\nSuch as HelixTaskExecutor onMessage creation messageHandler exception."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/cfa04ecefa590bb77ab16ece0ac13061bfa85e46", "committedDate": "2020-10-27T22:31:30Z", "message": "add a test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MTMxNjM1", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-519131635", "createdAt": "2020-10-28T22:28:07Z", "commit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMjoyODowN1rOHp_0-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMjoyODowN1rOHp_0-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5OTQxNg==", "bodyText": "minor: \"helix.StateUpdateUtil.errorLogToZK.enabled\"?  We still log error to local logfile, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513799416", "createdAt": "2020-10-28T22:28:07Z", "author": {"login": "lei-xia"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MTU3NDM1", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-519157435", "createdAt": "2020-10-28T23:28:54Z", "commit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMzoyODo1NFrOHqBKtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMzoyODo1NFrOHqBKtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgyMTM2NA==", "bodyText": "Please use HelixUtil.getSystemPropertyAsBoolean(), it allows you to specify the default value there in the method.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513821364", "createdAt": "2020-10-28T23:28:54Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -55,6 +56,12 @@\n public class StatusUpdateUtil {\n   static Logger _logger = LoggerFactory.getLogger(StatusUpdateUtil.class);\n \n+  public static final boolean ERROR_LOG_TO_ZK_ENABLED;\n+  static {\n+    String valueString = System.getProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"\");\n+    ERROR_LOG_TO_ZK_ENABLED = valueString.equals(\"enabled\") ? true : false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MTYzNzk2", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-519163796", "createdAt": "2020-10-28T23:46:09Z", "commit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMzo0NjowOVrOHqBg4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMzo0NjowOVrOHqBg4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgyNzA0Mg==", "bodyText": "Same here, use HelixUtil.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513827042", "createdAt": "2020-10-28T23:46:09Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "diffHunk": "@@ -66,6 +66,9 @@\n public class TestParticipantManager extends ZkTestBase {\n   private MBeanServer _server = ManagementFactory.getPlatformMBeanServer();\n   private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.setProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"enabled\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/c0b3b1463548b8d9716db34780cb3c1dac1b52a9", "committedDate": "2020-10-29T01:38:01Z", "message": "update based lei's feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MjgwMzU4", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-519280358", "createdAt": "2020-10-29T02:07:30Z", "commit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjowNzozMFrOHqEoBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjowNzozMFrOHqEoBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg3ODAyMg==", "bodyText": "Can you test enable it by the new config?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513878022", "createdAt": "2020-10-29T02:07:30Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+\n+import org.apache.helix.HelixConstants;\n+import org.apache.helix.PropertyPathBuilder;\n+import org.apache.helix.SystemPropertyKeys;\n+import org.apache.helix.TestHelper;\n+import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.messaging.handling.HelixStateTransitionHandler;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.zookeeper.datamodel.ZNRecord;\n+import org.apache.helix.zookeeper.zkclient.exception.ZkException;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestStatusUpdateUtil extends ZkTestBase {\n+  private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.clearProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED);\n+  }\n+\n+  @Test\n+  public void testDisableErrorLogByDefault() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MjkwMDMw", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-519290030", "createdAt": "2020-10-29T02:38:01Z", "commit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjozODowMVrOHqFfPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0ODo0MVrOHqF1HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5MjE1Ng==", "bodyText": "This import is not used.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513892156", "createdAt": "2020-10-29T02:38:01Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -62,6 +62,7 @@\n import org.apache.helix.model.ResourceAssignment;\n import org.apache.helix.model.ResourceConfig;\n import org.apache.helix.model.StateModelDefinition;\n+import org.apache.helix.tools.ClusterVerifiers.StrictMatchExternalViewVerifier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NDA2Nw==", "bodyText": "We don't have to create this method to be redundant.\nSimply, Boolean.getBoolean(propertyKey, propertyDefaultValue) is already what is needed, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513894067", "createdAt": "2020-10-29T02:41:23Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -470,11 +471,26 @@ public static int getSystemPropertyAsInt(String propertyKey, int propertyDefault\n   }\n \n   /**\n-   * Get the value of system property\n+   * Get the boolean value of system property\n    * @param propertyKey\n    * @param propertyDefaultValue\n    * @return\n    */\n+  public static boolean getSystemPropertyAsBoolean(String propertyKey, String propertyDefaultValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NDM0Mw==", "bodyText": "Boolean.getBoolean(propertyKey, propertyDefaultValue) is simple and good enough?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513894343", "createdAt": "2020-10-29T02:41:57Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -55,6 +56,10 @@\n public class StatusUpdateUtil {\n   static Logger _logger = LoggerFactory.getLogger(StatusUpdateUtil.class);\n \n+  public static final boolean ERROR_LOG_TO_ZK_ENABLED =\n+      HelixUtil.getSystemPropertyAsBoolean(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"false\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NDc2NA==", "bodyText": "Nit, record.toString() is redundant, record is enough as toString() would be auto called.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513894764", "createdAt": "2020-10-29T02:42:48Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +565,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NjExMg==", "bodyText": "Can you help me understand why you set the property here, but clear it in TestStatusUpdateUtil? Why do we not put both in the test method? Otherwise, the system config would affect other tests, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513896112", "createdAt": "2020-10-29T02:45:11Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "diffHunk": "@@ -66,6 +66,9 @@\n public class TestParticipantManager extends ZkTestBase {\n   private MBeanServer _server = ManagementFactory.getPlatformMBeanServer();\n   private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.setProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NjQzMw==", "bodyText": "Missing apache license. Maybe you could setup apache license in your intellij?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513896433", "createdAt": "2020-10-29T02:45:52Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5Nzc1Nw==", "bodyText": "Why assertTrue(True); which is always true? Just put a comment it is expected. Or to be more accurate, we can assert the exception message to ensure the exception is the expected one not others(same exception type but different message thrown from other places).", "url": "https://github.com/apache/helix/pull/1487#discussion_r513897757", "createdAt": "2020-10-29T02:48:41Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+\n+import org.apache.helix.HelixConstants;\n+import org.apache.helix.PropertyPathBuilder;\n+import org.apache.helix.SystemPropertyKeys;\n+import org.apache.helix.TestHelper;\n+import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.messaging.handling.HelixStateTransitionHandler;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.zookeeper.datamodel.ZNRecord;\n+import org.apache.helix.zookeeper.zkclient.exception.ZkException;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestStatusUpdateUtil extends ZkTestBase {\n+  private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.clearProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED);\n+  }\n+\n+  @Test\n+  public void testDisableErrorLogByDefault() throws Exception {\n+    StatusUpdateUtil _statusUpdateUtil = new StatusUpdateUtil();\n+    int n = 1;\n+\n+    Exception e = new RuntimeException(\"test exception\");\n+\n+    TestHelper.setupCluster(clusterName, ZK_ADDR, 12918, // participant port\n+        \"localhost\", // participant name prefix\n+        \"TestDB\", // resource name prefix\n+        1, // resources\n+        1, // partitions per resource\n+        n, // number of nodes\n+        1, // replicas\n+        \"MasterSlave\", true);\n+\n+    MockParticipantManager[] participants = new MockParticipantManager[n];\n+\n+    for (int i = 0; i < n; i++) {\n+      String instanceName = \"localhost_\" + (12918 + i);\n+      participants[i] = new MockParticipantManager(ZK_ADDR, clusterName, instanceName);\n+      participants[i].syncStart();\n+    }\n+\n+    Message message = new Message(Message.MessageType.STATE_TRANSITION, \"Some unique id\");\n+    message.setSrcName(\"cm-instance-0\");\n+    message.setTgtSessionId(participants[0].getSessionId());\n+    message.setFromState(\"Offline\");\n+    message.setToState(\"Slave\");\n+    message.setPartitionName(\"TestDB_0\");\n+    message.setMsgId(\"Some unique message id\");\n+    message.setResourceName(\"TestDB\");\n+    message.setTgtName(\"localhost_12918\");\n+    message.setStateModelDef(\"MasterSlave\");\n+    message.setStateModelFactoryName(HelixConstants.DEFAULT_STATE_MODEL_FACTORY);\n+    _statusUpdateUtil.logError(message, HelixStateTransitionHandler.class, e,\n+        \"test status update\", participants[0]);\n+\n+    // assert by default, not logged to Zookeeper\n+    String errPath = PropertyPathBuilder.instanceError(clusterName, \"localhost_12918\",\n+        participants[0].getSessionId(),\n+        \"TestDB\", \"TestDB_0\");\n+    try {\n+      ZNRecord error = _gZkClient.readData(errPath);\n+      Assert.fail(\"not expecting being able to send error logs to ZK by default.\");\n+    } catch (ZkException zke) {\n+      Assert.assertTrue(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MzY5OTIy", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-519369922", "createdAt": "2020-10-29T06:39:33Z", "commit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjozOTozM1rOHqNi5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjozOTozM1rOHqNi5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNDE2Nw==", "bodyText": "IMHO,\nif (!ERROR_LOG_TO_ZK_ENABLED) {\n_logger.error(\"StatusUpdate Error record: {}\", record.toString());\nreturn;\n}\n...", "url": "https://github.com/apache/helix/pull/1487#discussion_r514024167", "createdAt": "2020-10-29T06:39:33Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +565,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record.toString());\n+    if (!ERROR_LOG_TO_ZK_ENABLED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MzcwNTQx", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-519370541", "createdAt": "2020-10-29T06:41:03Z", "commit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjo0MTowM1rOHqNnfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjo0MTowM1rOHqNnfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNTM0Mw==", "bodyText": "This is a potential thread leak if test failure.", "url": "https://github.com/apache/helix/pull/1487#discussion_r514025343", "createdAt": "2020-10-29T06:41:03Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+\n+import org.apache.helix.HelixConstants;\n+import org.apache.helix.PropertyPathBuilder;\n+import org.apache.helix.SystemPropertyKeys;\n+import org.apache.helix.TestHelper;\n+import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.messaging.handling.HelixStateTransitionHandler;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.zookeeper.datamodel.ZNRecord;\n+import org.apache.helix.zookeeper.zkclient.exception.ZkException;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestStatusUpdateUtil extends ZkTestBase {\n+  private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.clearProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED);\n+  }\n+\n+  @Test\n+  public void testDisableErrorLogByDefault() throws Exception {\n+    StatusUpdateUtil _statusUpdateUtil = new StatusUpdateUtil();\n+    int n = 1;\n+\n+    Exception e = new RuntimeException(\"test exception\");\n+\n+    TestHelper.setupCluster(clusterName, ZK_ADDR, 12918, // participant port\n+        \"localhost\", // participant name prefix\n+        \"TestDB\", // resource name prefix\n+        1, // resources\n+        1, // partitions per resource\n+        n, // number of nodes\n+        1, // replicas\n+        \"MasterSlave\", true);\n+\n+    MockParticipantManager[] participants = new MockParticipantManager[n];\n+\n+    for (int i = 0; i < n; i++) {\n+      String instanceName = \"localhost_\" + (12918 + i);\n+      participants[i] = new MockParticipantManager(ZK_ADDR, clusterName, instanceName);\n+      participants[i].syncStart();\n+    }\n+\n+    Message message = new Message(Message.MessageType.STATE_TRANSITION, \"Some unique id\");\n+    message.setSrcName(\"cm-instance-0\");\n+    message.setTgtSessionId(participants[0].getSessionId());\n+    message.setFromState(\"Offline\");\n+    message.setToState(\"Slave\");\n+    message.setPartitionName(\"TestDB_0\");\n+    message.setMsgId(\"Some unique message id\");\n+    message.setResourceName(\"TestDB\");\n+    message.setTgtName(\"localhost_12918\");\n+    message.setStateModelDef(\"MasterSlave\");\n+    message.setStateModelFactoryName(HelixConstants.DEFAULT_STATE_MODEL_FACTORY);\n+    _statusUpdateUtil.logError(message, HelixStateTransitionHandler.class, e,\n+        \"test status update\", participants[0]);\n+\n+    // assert by default, not logged to Zookeeper\n+    String errPath = PropertyPathBuilder.instanceError(clusterName, \"localhost_12918\",\n+        participants[0].getSessionId(),\n+        \"TestDB\", \"TestDB_0\");\n+    try {\n+      ZNRecord error = _gZkClient.readData(errPath);\n+      Assert.fail(\"not expecting being able to send error logs to ZK by default.\");\n+    } catch (ZkException zke) {\n+      Assert.assertTrue(true);\n+    }\n+\n+    for (int i = 0; i < n; i++) {\n+      participants[i].syncStop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NzUyMzkx", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-519752391", "createdAt": "2020-10-29T14:53:57Z", "commit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1Mzo1N1rOHqfvUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1Mzo1N1rOHqfvUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMjI1Nw==", "bodyText": "Again, we are disabling log to ZK, not disabling error log (to log file) at all, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r514322257", "createdAt": "2020-10-29T14:53:57Z", "author": {"login": "lei-xia"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6d0e988286fb67a21785f5a442a06ae2e92e19e", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/d6d0e988286fb67a21785f5a442a06ae2e92e19e", "committedDate": "2020-11-02T20:43:45Z", "message": "revised based on feedback."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80071711323c418b78f288194e34e8bb9eecd825", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/80071711323c418b78f288194e34e8bb9eecd825", "committedDate": "2020-11-02T21:33:38Z", "message": "refactor logging in statusUpdateUtil."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/df89ed7c80801cbeaa978e8c31f0739fe079f675", "committedDate": "2020-11-02T21:36:12Z", "message": "revert change to helix-core/src/main/java/org/apache/helix/util/HelixUtil.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2ODE5ODYw", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-526819860", "createdAt": "2020-11-10T03:08:49Z", "commit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzowODo0OVrOHwKBIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzoyMjo1M1rOHwKQrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NzgyNg==", "bodyText": "I thought more about this configuration. Can we directly make it an enum now instead of changing it later? Otherwise, we will need to deprecate this item and go through the painful backward compatibility checklist in the future.\nI suggest making it STATEUPDATE_ERROR_REPORTING_CHANNEL.", "url": "https://github.com/apache/helix/pull/1487#discussion_r520257826", "createdAt": "2020-11-10T03:08:49Z", "author": {"login": "jiajunwang"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG2ZK_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2MTQzMw==", "bodyText": "nit, we can move this line out of the if-else block too.", "url": "https://github.com/apache/helix/pull/1487#discussion_r520261433", "createdAt": "2020-11-10T03:21:28Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -492,47 +496,39 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n \n     Builder keyBuilder = accessor.keyBuilder();\n     if (!_recordedMessages.containsKey(message.getMsgId())) {\n-      if (isController) {\n-        accessor\n-            .updateProperty(keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey),\n-                new StatusUpdate(createMessageLogRecord(message)));\n+      ZNRecord statusUpdateRecord = createMessageLogRecord(message);\n+      PropertyKey propertyKey;\n \n+      if (isController) {\n+        propertyKey = keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey);\n+        accessor.updateProperty(propertyKey, new StatusUpdate(statusUpdateRecord));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2MTgwNw==", "bodyText": "same here.", "url": "https://github.com/apache/helix/pull/1487#discussion_r520261807", "createdAt": "2020-11-10T03:22:53Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -492,47 +496,39 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n \n     Builder keyBuilder = accessor.keyBuilder();\n     if (!_recordedMessages.containsKey(message.getMsgId())) {\n-      if (isController) {\n-        accessor\n-            .updateProperty(keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey),\n-                new StatusUpdate(createMessageLogRecord(message)));\n+      ZNRecord statusUpdateRecord = createMessageLogRecord(message);\n+      PropertyKey propertyKey;\n \n+      if (isController) {\n+        propertyKey = keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey);\n+        accessor.updateProperty(propertyKey, new StatusUpdate(statusUpdateRecord));\n       } else {\n-\n-        PropertyKey propertyKey =\n+        propertyKey =\n             keyBuilder.stateTransitionStatus(instanceName, sessionId, statusUpdateSubPath,\n                 statusUpdateKey);\n-\n-        ZNRecord statusUpdateRecord = createMessageLogRecord(message);\n-\n-        // For now write participant StatusUpdates to log4j.\n-        // we are using restlet as another data channel to report to controller.\n-        if (_logger.isTraceEnabled()) {\n-          _logger.trace(\"StatusUpdate path:\" + propertyKey.getPath() + \", updates:\"\n-              + statusUpdateRecord);\n-        }\n         accessor.updateProperty(propertyKey, new StatusUpdate(statusUpdateRecord));\n+      }\n \n+      if (_logger.isTraceEnabled()) {\n+        _logger.trace(\"StatusUpdate path:\" + propertyKey.getPath() + \", updates:\"\n+            + statusUpdateRecord);\n       }\n       _recordedMessages.put(message.getMsgId(), message.getMsgId());\n     }\n \n+    PropertyKey propertyKey;\n     if (isController) {\n-      accessor.updateProperty(\n-          keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey), new StatusUpdate(\n-              record));\n+      propertyKey = keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey);\n+      accessor.updateProperty(propertyKey, new StatusUpdate(record));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTc2ODgx", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-527576881", "createdAt": "2020-11-10T20:21:42Z", "commit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoyMTo0MlrOHwuL_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoyMTo0MlrOHwuL_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1MDQyOA==", "bodyText": "Do we really need this error log for the whole record? It may eat up the disk, imagine if znrecord is close to 1 MB. I am not sure if we really need the record for troubleshooting. Maybe logging the instanceName, updateSubPath, sessionId, etc. is good enough?", "url": "https://github.com/apache/helix/pull/1487#discussion_r520850428", "createdAt": "2020-11-10T20:21:42Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +556,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 87}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad369bf2706797c79e382192fe900775d5650f21", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/ad369bf2706797c79e382192fe900775d5650f21", "committedDate": "2020-11-10T21:45:00Z", "message": "fix some nits and nameing issue based on feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Nzk5MTAw", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-527799100", "createdAt": "2020-11-11T02:24:12Z", "commit": {"oid": "ad369bf2706797c79e382192fe900775d5650f21"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjoyNDoxM1rOHw5VhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjoyNDoxM1rOHw5VhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAzMzA5Mg==", "bodyText": "nit, private?\nSince we already doing reflection, I think making it private won't block the test, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r521033092", "createdAt": "2020-11-11T02:24:13Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -55,6 +56,9 @@\n public class StatusUpdateUtil {\n   static Logger _logger = LoggerFactory.getLogger(StatusUpdateUtil.class);\n \n+  public static final boolean ERROR_LOG_TO_ZK_ENABLED =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad369bf2706797c79e382192fe900775d5650f21"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a064886a21175187108be41d8ed20cba1a0be581", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/a064886a21175187108be41d8ed20cba1a0be581", "committedDate": "2020-11-11T04:40:46Z", "message": "unset system property after the test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODcwMDQ4", "url": "https://github.com/apache/helix/pull/1487#pullrequestreview-527870048", "createdAt": "2020-11-11T05:22:20Z", "commit": {"oid": "ad369bf2706797c79e382192fe900775d5650f21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNToyMjoyMFrOHw-oAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNToyMjoyMFrOHw-oAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTExOTc0NQ==", "bodyText": "The system property is JVM level. If we don't unset the config, later tests will be using this config. Maybe there are no tests using the config yet. But I suggest, as a good practice, we also unset the config to make unit tests isolated, ensuring other tests won't be impacted by this test's configs.", "url": "https://github.com/apache/helix/pull/1487#discussion_r521119745", "createdAt": "2020-11-11T05:22:20Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "diffHunk": "@@ -66,6 +66,9 @@\n public class TestParticipantManager extends ZkTestBase {\n   private MBeanServer _server = ManagementFactory.getPlatformMBeanServer();\n   private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.setProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_PERSISTENCY_ENABLED, \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad369bf2706797c79e382192fe900775d5650f21"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4376, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}