{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MDQwNzgx", "number": 1059, "title": "Add monitor to record the abnormal states processing.", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\n#1028\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nAdd a monitor wrapper class so that the abnormal state resolver reports the abnormal states detected and the recovery attempt count.\nExample ObjectName of the new monitor MBean: Rebalancer:ClusterName=, EntityName=AbnormalStates.\nAttributes,\n\nAbnormalStatePartitionCounter: record the total count of the partitions that has been found in abnormal status. Note that if one partition has been found to be abnormal twice, then we will record it twice in this counter as well.\nRecoveryAttemptCounter: record the total count of succuessful recovery computation that has been done by the resolver.\n\nTests\n\n The following tests are written for this issue:\n\nTestAbnormalStatesResolverMonitor\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[ERROR] Failures:\n[ERROR]   TestCustomizedViewAggregation.testCustomizedViewAggregation:389->validateAggregationSnapshot:233 expected: but was:\n[ERROR]   TestNoThrottleDisabledPartitions.testDisablingTopStateReplicaByDisablingInstance:98 expected: but was:\n[ERROR]   TestJobQueueCleanUp.testJobQueueAutoCleanUp \u00bb ThreadTimeout Method org.testng....\n[ERROR]   TestWorkflowTermination.testWorkflowPausedTimeout:170->verifyWorkflowCleanup:258 expected: but was:\n[INFO]\n[ERROR] Tests run: 1143, Failures: 4, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 01:24 h\n[INFO] Finished at: 2020-06-09T15:41:00-07:00\n[INFO] ------------------------------------------------------------------------\n[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 79.678 s - in TestSuite\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 01:26 min\n[INFO] Finished at: 2020-06-09T15:55:40-07:00\n[INFO] ------------------------------------------------------------------------\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation (Optional)\n\n In case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-06-04T19:23:56Z", "url": "https://github.com/apache/helix/pull/1059", "merged": true, "mergeCommit": {"oid": "9f134a6a8e0791710868902ca8193d45246065e2"}, "closed": true, "closedAt": "2020-06-15T18:53:08Z", "author": {"login": "jiajunwang"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoHDVlABqjM0MDkxNTk0OTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrlR4vgH2gAyNDI4MDQwNzgxOmVjODdiODBlMmUzZThhMzFiOGM5ZjAzNmJlZTI1NzYxNTJiMWQ4YzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53ab6296f65e67508c741c43a81adb4f935375cc", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/53ab6296f65e67508c741c43a81adb4f935375cc", "committedDate": "2020-06-04T19:13:36Z", "message": "Add monitor to record the abnormal states processing.\n\nExample ObjectName of the new monitor MBean: Rebalancer:ClusterName=<clusterName>, EntityName=AbnormalStates.<StateModelDefName>\nAttributes,\n1. AbnormalStatePartitionCounter: record the total count of the partitions that has been found in abnormal status. Note that if one partition has been found to be abnormal twice, then we will record it twice in this counter as well.\n2. RecoveryAttemptCounter: record the total count of succuessful recovery computation that has been done by the resolver."}, "afterCommit": {"oid": "a6cf4dbe0f84502e560378b61653ebceab6e676c", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/a6cf4dbe0f84502e560378b61653ebceab6e676c", "committedDate": "2020-06-04T23:30:01Z", "message": "Add monitor to record the abnormal states processing.\n\nExample ObjectName of the new monitor MBean: Rebalancer:ClusterName=<clusterName>, EntityName=AbnormalStates.<StateModelDefName>\nAttributes,\n1. AbnormalStatePartitionCounter: record the total count of the partitions that has been found in abnormal status. Note that if one partition has been found to be abnormal twice, then we will record it twice in this counter as well.\n2. RecoveryAttemptCounter: record the total count of succuessful recovery computation that has been done by the resolver."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6cf4dbe0f84502e560378b61653ebceab6e676c", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/a6cf4dbe0f84502e560378b61653ebceab6e676c", "committedDate": "2020-06-04T23:30:01Z", "message": "Add monitor to record the abnormal states processing.\n\nExample ObjectName of the new monitor MBean: Rebalancer:ClusterName=<clusterName>, EntityName=AbnormalStates.<StateModelDefName>\nAttributes,\n1. AbnormalStatePartitionCounter: record the total count of the partitions that has been found in abnormal status. Note that if one partition has been found to be abnormal twice, then we will record it twice in this counter as well.\n2. RecoveryAttemptCounter: record the total count of succuessful recovery computation that has been done by the resolver."}, "afterCommit": {"oid": "17583c0ca5f8b165cd19a885dcf3308e9d142c1f", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/17583c0ca5f8b165cd19a885dcf3308e9d142c1f", "committedDate": "2020-06-05T04:57:42Z", "message": "Add monitor to record the abnormal states processing.\n\nExample ObjectName of the new monitor MBean: Rebalancer:ClusterName=<clusterName>, EntityName=AbnormalStates.<StateModelDefName>\nAttributes,\n1. AbnormalStatePartitionCounter: record the total count of the partitions that has been found in abnormal status. Note that if one partition has been found to be abnormal twice, then we will record it twice in this counter as well.\n2. RecoveryAttemptCounter: record the total count of succuessful recovery computation that has been done by the resolver."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d422e71640d537f8b9cd6003bdeb9c99c6f92c5", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/2d422e71640d537f8b9cd6003bdeb9c99c6f92c5", "committedDate": "2020-06-09T21:14:27Z", "message": "Add monitor to record the abnormal states processing.\n\nExample ObjectName of the new monitor MBean: Rebalancer:ClusterName=<clusterName>, EntityName=AbnormalStates.<StateModelDefName>\nAttributes,\n1. AbnormalStatePartitionCounter: record the total count of the partitions that has been found in abnormal status. Note that if one partition has been found to be abnormal twice, then we will record it twice in this counter as well.\n2. RecoveryAttemptCounter: record the total count of succuessful recovery computation that has been done by the resolver."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17583c0ca5f8b165cd19a885dcf3308e9d142c1f", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/17583c0ca5f8b165cd19a885dcf3308e9d142c1f", "committedDate": "2020-06-05T04:57:42Z", "message": "Add monitor to record the abnormal states processing.\n\nExample ObjectName of the new monitor MBean: Rebalancer:ClusterName=<clusterName>, EntityName=AbnormalStates.<StateModelDefName>\nAttributes,\n1. AbnormalStatePartitionCounter: record the total count of the partitions that has been found in abnormal status. Note that if one partition has been found to be abnormal twice, then we will record it twice in this counter as well.\n2. RecoveryAttemptCounter: record the total count of succuessful recovery computation that has been done by the resolver."}, "afterCommit": {"oid": "2d422e71640d537f8b9cd6003bdeb9c99c6f92c5", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/2d422e71640d537f8b9cd6003bdeb9c99c6f92c5", "committedDate": "2020-06-09T21:14:27Z", "message": "Add monitor to record the abnormal states processing.\n\nExample ObjectName of the new monitor MBean: Rebalancer:ClusterName=<clusterName>, EntityName=AbnormalStates.<StateModelDefName>\nAttributes,\n1. AbnormalStatePartitionCounter: record the total count of the partitions that has been found in abnormal status. Note that if one partition has been found to be abnormal twice, then we will record it twice in this counter as well.\n2. RecoveryAttemptCounter: record the total count of succuessful recovery computation that has been done by the resolver."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MzI0OTYx", "url": "https://github.com/apache/helix/pull/1059#pullrequestreview-429324961", "createdAt": "2020-06-11T22:04:18Z", "commit": {"oid": "2d422e71640d537f8b9cd6003bdeb9c99c6f92c5"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjowNDoxOFrOGiwXfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjoxMjo0NFrOGiwjVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NzIxMw==", "bodyText": "CONSTANT MBEAN_SERVER?", "url": "https://github.com/apache/helix/pull/1059#discussion_r439097213", "createdAt": "2020-06-11T22:04:18Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/controller/rebalancer/constraint/TestAbnormalStatesResolverMonitor.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package org.apache.helix.controller.rebalancer.constraint;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.lang.management.ManagementFactory;\n+import java.util.Random;\n+import javax.management.AttributeNotFoundException;\n+import javax.management.InstanceNotFoundException;\n+import javax.management.MBeanException;\n+import javax.management.MBeanServer;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.management.ReflectionException;\n+\n+import org.apache.helix.model.MasterSlaveSMD;\n+import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n+import org.apache.helix.monitoring.metrics.AbnormalStatesMetricCollector;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+public class TestAbnormalStatesResolverMonitor {\n+  private static final MBeanServer beanServer = ManagementFactory.getPlatformMBeanServer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d422e71640d537f8b9cd6003bdeb9c99c6f92c5"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NzI4OA==", "bodyText": "long?", "url": "https://github.com/apache/helix/pull/1059#discussion_r439097288", "createdAt": "2020-06-11T22:04:31Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/controller/rebalancer/constraint/TestAbnormalStatesResolverMonitor.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package org.apache.helix.controller.rebalancer.constraint;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.lang.management.ManagementFactory;\n+import java.util.Random;\n+import javax.management.AttributeNotFoundException;\n+import javax.management.InstanceNotFoundException;\n+import javax.management.MBeanException;\n+import javax.management.MBeanServer;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.management.ReflectionException;\n+\n+import org.apache.helix.model.MasterSlaveSMD;\n+import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n+import org.apache.helix.monitoring.metrics.AbnormalStatesMetricCollector;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+public class TestAbnormalStatesResolverMonitor {\n+  private static final MBeanServer beanServer = ManagementFactory.getPlatformMBeanServer();\n+\n+  @Test\n+  public void testMonitorResolver()\n+      throws MalformedObjectNameException, AttributeNotFoundException, MBeanException,\n+      ReflectionException, InstanceNotFoundException {\n+    final String clusterName = \"TestCluster\";\n+\n+    final String TEST_RESOLVER_MONITOR_MBEAN_NAME = String\n+        .format(\"%s:%s=%s, %s=%s.%s\", MonitorDomainNames.Rebalancer, \"ClusterName\", clusterName,\n+            \"EntityName\", \"AbnormalStates\", MasterSlaveSMD.name);\n+    final ObjectName TEST_RESOLVER_MONITOR_MBEAN_OBJECT_NAME =\n+        new ObjectName(TEST_RESOLVER_MONITOR_MBEAN_NAME);\n+\n+    Assert.assertFalse(beanServer.isRegistered(TEST_RESOLVER_MONITOR_MBEAN_OBJECT_NAME));\n+\n+    // Update the resolver configuration for MasterSlave state model.\n+    MonitoredAbnormalResolver monitoredAbnormalResolver =\n+        new MonitoredAbnormalResolver(new MockAbnormalStateResolver(), clusterName,\n+            MasterSlaveSMD.name);\n+\n+    // Validate if the MBean has been registered\n+    Assert.assertTrue(beanServer.isRegistered(TEST_RESOLVER_MONITOR_MBEAN_OBJECT_NAME));\n+    Assert.assertEquals(beanServer.getAttribute(TEST_RESOLVER_MONITOR_MBEAN_OBJECT_NAME,\n+        AbnormalStatesMetricCollector.AbnormalStatesMetricNames.AbnormalStatePartitionCounter.name()),\n+        0L);\n+    Assert.assertEquals(beanServer.getAttribute(TEST_RESOLVER_MONITOR_MBEAN_OBJECT_NAME,\n+        AbnormalStatesMetricCollector.AbnormalStatesMetricNames.RecoveryAttemptCounter.name()), 0L);\n+    // Validate if the metrics recording methods work as expected\n+    Random ran = new Random(System.currentTimeMillis());\n+    Long expectation = 1L + ran.nextInt(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d422e71640d537f8b9cd6003bdeb9c99c6f92c5"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5Nzk1OA==", "bodyText": "Apache lisence?", "url": "https://github.com/apache/helix/pull/1059#discussion_r439097958", "createdAt": "2020-06-11T22:06:16Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/monitoring/metrics/AbnormalStatesMetricCollector.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.apache.helix.monitoring.metrics;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d422e71640d537f8b9cd6003bdeb9c99c6f92c5"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5ODA1MQ==", "bodyText": "Maybe some java doc for the public class to explain this monitor?", "url": "https://github.com/apache/helix/pull/1059#discussion_r439098051", "createdAt": "2020-06-11T22:06:35Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/monitoring/metrics/AbnormalStatesMetricCollector.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.apache.helix.monitoring.metrics;\n+\n+import javax.management.JMException;\n+\n+import org.apache.helix.HelixException;\n+import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n+import org.apache.helix.monitoring.metrics.implementation.RebalanceCounter;\n+import org.apache.helix.monitoring.metrics.model.CountMetric;\n+\n+public class AbnormalStatesMetricCollector extends MetricCollector {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d422e71640d537f8b9cd6003bdeb9c99c6f92c5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5OTExNQ==", "bodyText": "Hardcoded AbnormalStatesMetricCollector -> AbnormalStatesMetricCollector.class.getSimpleName()? Benefit is  when refactoring the class name we wouldn't miss this.", "url": "https://github.com/apache/helix/pull/1059#discussion_r439099115", "createdAt": "2020-06-11T22:09:31Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/monitoring/metrics/AbnormalStatesMetricCollector.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.apache.helix.monitoring.metrics;\n+\n+import javax.management.JMException;\n+\n+import org.apache.helix.HelixException;\n+import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n+import org.apache.helix.monitoring.metrics.implementation.RebalanceCounter;\n+import org.apache.helix.monitoring.metrics.model.CountMetric;\n+\n+public class AbnormalStatesMetricCollector extends MetricCollector {\n+  private static final String ABNORMAL_STATES_ENTITY_NAME = \"AbnormalStates\";\n+\n+  public enum AbnormalStatesMetricNames {\n+    AbnormalStatePartitionCounter, RecoveryAttemptCounter\n+  }\n+\n+  public AbnormalStatesMetricCollector(String clusterName, String stateModelDef) {\n+    super(MonitorDomainNames.Rebalancer.name(), clusterName,\n+        String.format(\"%s.%s\", ABNORMAL_STATES_ENTITY_NAME, stateModelDef));\n+    createMetrics();\n+    if (clusterName != null) {\n+      try {\n+        register();\n+      } catch (JMException e) {\n+        throw new HelixException(\"Failed to register MBean for the AbnormalStatesMetricCollector\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d422e71640d537f8b9cd6003bdeb9c99c6f92c5"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwMDI0NQ==", "bodyText": "static final?", "url": "https://github.com/apache/helix/pull/1059#discussion_r439100245", "createdAt": "2020-06-11T22:12:44Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/constraint/MonitoredAbnormalResolver.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package org.apache.helix.controller.rebalancer.constraint;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.helix.api.rebalancer.constraint.AbnormalStateResolver;\n+import org.apache.helix.controller.stages.CurrentStateOutput;\n+import org.apache.helix.model.Partition;\n+import org.apache.helix.model.StateModelDefinition;\n+import org.apache.helix.monitoring.metrics.AbnormalStatesMetricCollector;\n+import org.apache.helix.monitoring.metrics.model.CountMetric;\n+\n+/**\n+ * A wrap class to add monitor functionality into an AbnormalStateResolver implementation.\n+ */\n+public class MonitoredAbnormalResolver implements AbnormalStateResolver {\n+  private final AbnormalStateResolver _resolver;\n+  private final AbnormalStatesMetricCollector _metricCollector;\n+\n+  /**\n+   * A placeholder which will be used when the resolver is not specified.\n+   * This is a dummy class that does not really functional.\n+   */\n+  public static MonitoredAbnormalResolver DUMMY_STATE_RESOLVER =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d422e71640d537f8b9cd6003bdeb9c99c6f92c5"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5486570ca6912b84e2a0ae90c85338aaf89c235", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/a5486570ca6912b84e2a0ae90c85338aaf89c235", "committedDate": "2020-06-12T20:43:58Z", "message": "Address comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTMxMTM3", "url": "https://github.com/apache/helix/pull/1059#pullrequestreview-430131137", "createdAt": "2020-06-13T10:52:27Z", "commit": {"oid": "a5486570ca6912b84e2a0ae90c85338aaf89c235"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxMDo1MjoyOFrOGjW-8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxMDo1NDozOFrOGjW_SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyOTkwNQ==", "bodyText": "Just curious. Why do you use this constant style var name for the local var even it is final?", "url": "https://github.com/apache/helix/pull/1059#discussion_r439729905", "createdAt": "2020-06-13T10:52:28Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/controller/rebalancer/constraint/TestAbnormalStatesResolverMonitor.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package org.apache.helix.controller.rebalancer.constraint;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.lang.management.ManagementFactory;\n+import java.util.Random;\n+import javax.management.AttributeNotFoundException;\n+import javax.management.InstanceNotFoundException;\n+import javax.management.MBeanException;\n+import javax.management.MBeanServer;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.management.ReflectionException;\n+\n+import org.apache.helix.model.MasterSlaveSMD;\n+import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n+import org.apache.helix.monitoring.metrics.AbnormalStatesMetricCollector;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+public class TestAbnormalStatesResolverMonitor {\n+  private static final MBeanServer MBEAN_SERVER = ManagementFactory.getPlatformMBeanServer();\n+\n+  @Test\n+  public void testMonitorResolver()\n+      throws MalformedObjectNameException, AttributeNotFoundException, MBeanException,\n+      ReflectionException, InstanceNotFoundException {\n+    final String clusterName = \"TestCluster\";\n+\n+    final String TEST_RESOLVER_MONITOR_MBEAN_NAME = String", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5486570ca6912b84e2a0ae90c85338aaf89c235"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyOTk5Mw==", "bodyText": "Nit, maybe javadoc style /** comment */ so the comments would be shown in javadoc where it is supposed to be, as I see this as public and external user could see the javadoc? If you expect to expose the comments in javadoc", "url": "https://github.com/apache/helix/pull/1059#discussion_r439729993", "createdAt": "2020-06-13T10:54:38Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/monitoring/metrics/AbnormalStatesMetricCollector.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package org.apache.helix.monitoring.metrics;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import javax.management.JMException;\n+\n+import org.apache.helix.HelixException;\n+import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n+import org.apache.helix.monitoring.metrics.implementation.RebalanceCounter;\n+import org.apache.helix.monitoring.metrics.model.CountMetric;\n+\n+public class AbnormalStatesMetricCollector extends MetricCollector {\n+  private static final String ABNORMAL_STATES_ENTITY_NAME = \"AbnormalStates\";\n+\n+  public enum AbnormalStatesMetricNames {\n+    // The counter of the partitions that contains abnormal state.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5486570ca6912b84e2a0ae90c85338aaf89c235"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec87b80e2e3e8a31b8c9f036bee2576152b1d8c4", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/ec87b80e2e3e8a31b8c9f036bee2576152b1d8c4", "committedDate": "2020-06-15T18:50:51Z", "message": "Address comments."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4440, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}