{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3OTAyNzYz", "number": 1181, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjoxNTozMlrOES4y7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjoxNTozOVrOES4zGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjQwMzY3OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobQueueCleanUp.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjoxNTozM1rOG4UQew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjoxNTozM1rOG4UQew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwNTMzOQ==", "bodyText": "Can you change this to TestHeper.WAIT_DURATION?", "url": "https://github.com/apache/helix/pull/1181#discussion_r461705339", "createdAt": "2020-07-28T16:15:33Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobQueueCleanUp.java", "diffHunk": "@@ -105,14 +105,19 @@ public void testJobQueueAutoCleanUp() throws InterruptedException {\n     }\n     _driver.start(builder.build());\n     _driver.pollForJobState(queueName, TaskUtil.getNamespacedJobName(queueName, \"JOB\" + (capacity - 1)), TaskState.FAILED);\n-    Thread.sleep(2000);\n \n-    WorkflowConfig config = _driver.getWorkflowConfig(queueName);\n-    Assert.assertEquals(config.getJobDag().getAllNodes(), remainJobs);\n+    Assert\n+        .assertTrue(TestHelper.verify(() -> {\n+          WorkflowConfig config = _driver.getWorkflowConfig(queueName);\n+          System.out.println(\"|Current time: \" + System.currentTimeMillis() +\" **TEST: \" + config.getJobDag().getAllNodes());\n+          return config.getJobDag().getAllNodes().equals(remainJobs);\n+        }, 10000));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70f2ccdd5f6963ea3ae7226a27c9939ed77f0bd6"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjQwNDEwOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobQueueCleanUp.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjoxNTozOVrOG4UQvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjoxNTozOVrOG4UQvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwNTQwNA==", "bodyText": "Can you change this to TestHeper.WAIT_DURATION?", "url": "https://github.com/apache/helix/pull/1181#discussion_r461705404", "createdAt": "2020-07-28T16:15:39Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobQueueCleanUp.java", "diffHunk": "@@ -105,14 +105,19 @@ public void testJobQueueAutoCleanUp() throws InterruptedException {\n     }\n     _driver.start(builder.build());\n     _driver.pollForJobState(queueName, TaskUtil.getNamespacedJobName(queueName, \"JOB\" + (capacity - 1)), TaskState.FAILED);\n-    Thread.sleep(2000);\n \n-    WorkflowConfig config = _driver.getWorkflowConfig(queueName);\n-    Assert.assertEquals(config.getJobDag().getAllNodes(), remainJobs);\n+    Assert\n+        .assertTrue(TestHelper.verify(() -> {\n+          WorkflowConfig config = _driver.getWorkflowConfig(queueName);\n+          System.out.println(\"|Current time: \" + System.currentTimeMillis() +\" **TEST: \" + config.getJobDag().getAllNodes());\n+          return config.getJobDag().getAllNodes().equals(remainJobs);\n+        }, 10000));\n \n-    WorkflowContext context = _driver.getWorkflowContext(queueName);\n-    Assert.assertEquals(context.getJobStates().keySet(), remainJobs);\n-    Assert.assertTrue(remainJobs.containsAll(context.getJobStartTimes().keySet()));\n+    Assert.assertTrue(TestHelper.verify(() -> {\n+      WorkflowContext context = _driver.getWorkflowContext(queueName);\n+      return context.getJobStates().keySet().equals(remainJobs) && remainJobs\n+          .containsAll(context.getJobStartTimes().keySet());\n+    }, 10000));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70f2ccdd5f6963ea3ae7226a27c9939ed77f0bd6"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1268, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}