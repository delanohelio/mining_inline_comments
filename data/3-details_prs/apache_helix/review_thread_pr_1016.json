{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzQyNjgx", "number": 1016, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjo0NTozNVrOD9k5XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjo0NTozNVrOD9k5XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODk0MjM3OnYy", "diffSide": "RIGHT", "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/impl/factory/ZkConnectionManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjo0NTozNVrOGXJ3jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMDo0NTowMFrOGXMAXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMjEwOA==", "bodyText": "It seems _shareWatchers is initialized outside the constructor of ZkConnectionManager. If ZkConnectionManager completes initialization, _sharedWatchers should also complete initialization.\nDoing the null check is unnecessary: an instance should be constructed well before it is used. close() should be called after the instance completes init. Why close() is called before the instance's state is fully initialized? We should find it out.\nIn one case I've known, it is related to SharedZkClient. The ZkConnection is created within sharedZkClient, before the ZK session is established, it is passed to ZkConnectionManager and ZkClient's connect(). And in ZkClient's connect, this is a check for this shared connection. Because the session is not established, zkclient has to close(). Meanwhile, _shareWatchers is not initialized.\nI think we should fix the root cause, instead of covering the problem with this null check. The solution should be wait until connected in SharedZkClient if this connection is newly created.\n      connectionManager =\n          new ZkConnectionManager(createZkConnection(connectionConfig), connectInitTimeout,\n              connectionConfig.toString());\n      _connectionManagerPool.put(connectionConfig, connectionManager);\n\nwhat do you think?", "url": "https://github.com/apache/helix/pull/1016#discussion_r426932108", "createdAt": "2020-05-18T22:45:35Z", "author": {"login": "huizhilu"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/impl/factory/ZkConnectionManager.java", "diffHunk": "@@ -118,7 +118,7 @@ public void close() {\n \n   protected synchronized void close(boolean skipIfWatched) {\n     cleanupInactiveWatchers();\n-    if (_sharedWatchers.size() > 0) {\n+    if (_sharedWatchers != null && _sharedWatchers.size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b51de722492281a158ff6bd799abb224e2f227bd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2NzEzMg==", "bodyText": "Synced offline. I missed the point ZkConnectionManager is managing connection. So there is a wait in ZkClient.\nThis NPE is thrown when ZkConnectionManager is being constructed and connection is not able to connect to ZK within timeout.", "url": "https://github.com/apache/helix/pull/1016#discussion_r426967132", "createdAt": "2020-05-19T00:45:00Z", "author": {"login": "huizhilu"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/impl/factory/ZkConnectionManager.java", "diffHunk": "@@ -118,7 +118,7 @@ public void close() {\n \n   protected synchronized void close(boolean skipIfWatched) {\n     cleanupInactiveWatchers();\n-    if (_sharedWatchers.size() > 0) {\n+    if (_sharedWatchers != null && _sharedWatchers.size() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMjEwOA=="}, "originalCommit": {"oid": "b51de722492281a158ff6bd799abb224e2f227bd"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1511, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}