{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMzk0MTg5", "number": 1355, "title": "Enhance logging for CallbackHandler and Zkclient", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nresolve #1352\nDescription\n\n\n Here are some details about my PR, including screenshots of any UI changes:\nCallbackHandlder and ZkClient methods are invoked over multiple threads.\nIt can be hard to correlate one object's execution threads over multiple\njava threads. This poses a serious issue in production log examination.\nWe propose to add unique id to each methods' logging to help the\ncorrelation and also track the object's life cycle.\n\n\nTests\n\n The following tests are written for this issue:\n\nNone\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nrunning\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-09-09T01:11:23Z", "url": "https://github.com/apache/helix/pull/1355", "merged": true, "mergeCommit": {"oid": "7028bf36a45b2c03d92193ef69d74324171db73d"}, "closed": true, "closedAt": "2020-09-23T21:46:10Z", "author": {"login": "kaisun2000"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHBEDLAH2gAyNDgyMzk0MTg5OmZmYzg5Y2U5NTUzMmQ1MmU3YmUxOWIzMzlkZDNjMmUyY2Y2MDcyZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLzkXggH2gAyNDgyMzk0MTg5OmE0ZTBlODYyNzBmNWY4NTg5MmFlZDc1YWU3YzgwMjUyYzdkZjFiZWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/ffc89ce95532d52e7be19b339dd3c2e2cf6072e5", "committedDate": "2020-09-09T00:29:02Z", "message": "resolve #1352\n\nCallbackHandlder and ZkClient methods are invoked over multiple threads.\nIt can be hard to correlate one object's execution threads over multiple\njava threads. This poses a serious issue in production log examination.\n\nWe propose to add unique id to each methods' logging to help the\ncorrelation and also track the object's life cycle."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NjQ2ODIw", "url": "https://github.com/apache/helix/pull/1355#pullrequestreview-484646820", "createdAt": "2020-09-09T04:08:18Z", "commit": {"oid": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNDowODoxOFrOHO15NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNDowODoxOFrOHO15NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMyNTEwOA==", "bodyText": "I think a toString() would give a comprehensive meaning/description for an object. Here, a uid doesn't achieve the purpose. If you just want to log uid, then put uid in log is enough.\nIf I override a toString(), I would add more descriptions/fields for this object, eg: \"CallbackHandler[uid=xxx, path=xxx, ...]\".", "url": "https://github.com/apache/helix/pull/1355#discussion_r485325108", "createdAt": "2020-09-09T04:08:18Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -660,24 +666,31 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n           //TODO: avoid calling getChildren for path that does not exist\n           if (_changeType == CUSTOMIZED_STATE_ROOT) {\n             logger.warn(\n-                \"Failed to subscribe child/data change on path: {}, listener: {}. Instance \"\n-                    + \"does not support Customized State!\", path, _listener);\n+                \"CallbackHandler {}, Failed to subscribe child/data change on path: {}, listener: {}. Instance \"\n+                    + \"does not support Customized State!\", this.toString(), path, _listener);\n           } else {\n-            logger.warn(\"Failed to subscribe child/data change. path: {}, listener: {}\", path,\n-                _listener, e);\n+            logger.warn(\"CallbackHandler {}, Failed to subscribe child/data change. path: {}, listener: {}\",\n+                this.toString(), path, _listener, e);\n           }\n         }\n       }\n     }\n \n     long end = System.currentTimeMillis();\n-    logger.info(\"Subscribing to path: {} took: {}\", path, (end - start));\n+    logger.info(\"CallbackHandler{}, Subscribing to path: {} took: {}\", this.toString(), path, (end - start));\n   }\n \n   public EventType[] getEventTypes() {\n     return (EventType[]) _eventTypes.toArray();\n   }\n \n+  @Override\n+  public String toString() {\n+    StringBuilder stringBuilder = new StringBuilder();\n+    stringBuilder.append(_uid);\n+    return stringBuilder.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5"}, "originalPosition": 201}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjU0MDk3", "url": "https://github.com/apache/helix/pull/1355#pullrequestreview-488254097", "createdAt": "2020-09-15T01:07:38Z", "commit": {"oid": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTowNzozOFrOHRsz2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMToxMDoxOFrOHRs2jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjAxMQ==", "bodyText": "I agree to what Huizhi mentioned, please include the basic information. If only uid is needed, then just refer to the _uid field in the code. No need to override toString().", "url": "https://github.com/apache/helix/pull/1355#discussion_r488322011", "createdAt": "2020-09-15T01:07:38Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -660,24 +666,31 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n           //TODO: avoid calling getChildren for path that does not exist\n           if (_changeType == CUSTOMIZED_STATE_ROOT) {\n             logger.warn(\n-                \"Failed to subscribe child/data change on path: {}, listener: {}. Instance \"\n-                    + \"does not support Customized State!\", path, _listener);\n+                \"CallbackHandler {}, Failed to subscribe child/data change on path: {}, listener: {}. Instance \"\n+                    + \"does not support Customized State!\", this.toString(), path, _listener);\n           } else {\n-            logger.warn(\"Failed to subscribe child/data change. path: {}, listener: {}\", path,\n-                _listener, e);\n+            logger.warn(\"CallbackHandler {}, Failed to subscribe child/data change. path: {}, listener: {}\",\n+                this.toString(), path, _listener, e);\n           }\n         }\n       }\n     }\n \n     long end = System.currentTimeMillis();\n-    logger.info(\"Subscribing to path: {} took: {}\", path, (end - start));\n+    logger.info(\"CallbackHandler{}, Subscribing to path: {} took: {}\", this.toString(), path, (end - start));\n   }\n \n   public EventType[] getEventTypes() {\n     return (EventType[]) _eventTypes.toArray();\n   }\n \n+  @Override\n+  public String toString() {\n+    StringBuilder stringBuilder = new StringBuilder();\n+    stringBuilder.append(_uid);\n+    return stringBuilder.toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMyNTEwOA=="}, "originalCommit": {"oid": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjEyNw==", "bodyText": "Same thing here, it seems that directly refer to _uid is enough.", "url": "https://github.com/apache/helix/pull/1355#discussion_r488322127", "createdAt": "2020-09-15T01:08:09Z", "author": {"login": "jiajunwang"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -204,6 +204,13 @@ public void recordPathStat(Stat stat, OptionalLong notificationTime) {\n     }\n   }\n \n+  @Override\n+  public String toString() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjM0Nw==", "bodyText": "nit \"_uid\" => \"uid\"", "url": "https://github.com/apache/helix/pull/1355#discussion_r488322347", "createdAt": "2020-09-15T01:08:58Z", "author": {"login": "jiajunwang"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -220,7 +227,7 @@ protected ZkClient(IZkConnection zkConnection, int connectionTimeout, long opera\n \n     _asyncCallRetryThread = new ZkAsyncRetryThread(zkConnection.getServers());\n     _asyncCallRetryThread.start();\n-    LOG.debug(\"ZkClient created with _uid {}, _asyncCallRetryThread id {}\", _uid, _asyncCallRetryThread.getId());\n+    LOG.debug(\"ZkClient created with _uid {}, _asyncCallRetryThread id {}\", this.toString(), _asyncCallRetryThread.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjcwMg==", "bodyText": "I just notice that _uid here was not made final field, could you please fix it? It should be a final field.", "url": "https://github.com/apache/helix/pull/1355#discussion_r488322702", "createdAt": "2020-09-15T01:10:18Z", "author": {"login": "jiajunwang"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -204,6 +204,13 @@ public void recordPathStat(Stat stat, OptionalLong notificationTime) {\n     }\n   }\n \n+  @Override\n+  public String toString() {\n+    StringBuilder stringBuilder = new StringBuilder();\n+    stringBuilder.append(_uid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3af895545b294257c596db3be9de31cbcdb3701b", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/3af895545b294257c596db3be9de31cbcdb3701b", "committedDate": "2020-09-22T04:22:31Z", "message": "change to _uid based on feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0MjE4MTc2", "url": "https://github.com/apache/helix/pull/1355#pullrequestreview-494218176", "createdAt": "2020-09-23T06:13:57Z", "commit": {"oid": "3af895545b294257c596db3be9de31cbcdb3701b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNjoxMzo1N1rOHWX1HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNjoxODo0NFrOHWX8Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIyMTE0OQ==", "bodyText": "It'd be great to make these similar messages easier to read, like Closing zkclient. uid={}, zk={}?", "url": "https://github.com/apache/helix/pull/1355#discussion_r493221149", "createdAt": "2020-09-23T06:13:57Z", "author": {"login": "huizhilu"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -2228,7 +2233,7 @@ public void close() throws ZkInterruptedException {\n       _eventThread.interrupt();\n       _eventThread.join(2000);\n       if (isManagingZkConnection()) {\n-        LOG.info(\"Closing zkclient: \" + ((ZkConnection) connection).getZookeeper());\n+        LOG.info(\"zkclient{}, Closing zkclient zk: {} \", this._uid, ((ZkConnection) connection).getZookeeper());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af895545b294257c596db3be9de31cbcdb3701b"}, "originalPosition": 393}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIyMjk3NQ==", "bodyText": "static final?\nAnd also give it a more comprehensive name, like CALLBACK_HANDLER_UID or NEXT_ID?", "url": "https://github.com/apache/helix/pull/1355#discussion_r493222975", "createdAt": "2020-09-23T06:18:44Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -105,7 +106,9 @@\n @PreFetchChangedData(enabled = false)\n public class CallbackHandler implements IZkChildListener, IZkDataListener {\n   private static Logger logger = LoggerFactory.getLogger(CallbackHandler.class);\n+  private static AtomicLong CB_UID = new AtomicLong();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af895545b294257c596db3be9de31cbcdb3701b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0MjY5OTIy", "url": "https://github.com/apache/helix/pull/1355#pullrequestreview-494269922", "createdAt": "2020-09-23T06:44:28Z", "commit": {"oid": "3af895545b294257c596db3be9de31cbcdb3701b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNjo0NDoyOFrOHWYnPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNjo0NDoyOFrOHWYnPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIzMzk4Mw==", "bodyText": "This is not used. Remove it?", "url": "https://github.com/apache/helix/pull/1355#discussion_r493233983", "createdAt": "2020-09-23T06:44:28Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -28,6 +28,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import java.util.concurrent.atomic.AtomicInteger;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af895545b294257c596db3be9de31cbcdb3701b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "591254ab11c7317e51866c5a7c6722aa7eaa08e7", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/591254ab11c7317e51866c5a7c6722aa7eaa08e7", "committedDate": "2020-09-23T17:56:29Z", "message": "some small fix based on feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTE1Njk2", "url": "https://github.com/apache/helix/pull/1355#pullrequestreview-494915696", "createdAt": "2020-09-23T18:04:34Z", "commit": {"oid": "591254ab11c7317e51866c5a7c6722aa7eaa08e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTE2NDQ3", "url": "https://github.com/apache/helix/pull/1355#pullrequestreview-494916447", "createdAt": "2020-09-23T18:05:32Z", "commit": {"oid": "591254ab11c7317e51866c5a7c6722aa7eaa08e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowNTozMlrOHW6cgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowNTozMlrOHW6cgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4ODI5MQ==", "bodyText": "@kaisun2000 This one? CALLBACK_HANDLER_UI -> CALLBACK_HANDLER_UID", "url": "https://github.com/apache/helix/pull/1355#discussion_r493788291", "createdAt": "2020-09-23T18:05:32Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -105,7 +105,9 @@\n @PreFetchChangedData(enabled = false)\n public class CallbackHandler implements IZkChildListener, IZkDataListener {\n   private static Logger logger = LoggerFactory.getLogger(CallbackHandler.class);\n+  private static final AtomicLong CALLBACK_HANDLER_UI = new AtomicLong();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "591254ab11c7317e51866c5a7c6722aa7eaa08e7"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8b43c005f88d39ec498954d01b7ccd48ac02a7f", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/f8b43c005f88d39ec498954d01b7ccd48ac02a7f", "committedDate": "2020-09-23T20:11:18Z", "message": "fix a typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDU2ODYx", "url": "https://github.com/apache/helix/pull/1355#pullrequestreview-495056861", "createdAt": "2020-09-23T21:19:35Z", "commit": {"oid": "f8b43c005f88d39ec498954d01b7ccd48ac02a7f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMToxOTozNVrOHXBX9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMToxOTozNVrOHXBX9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMTgxNQ==", "bodyText": "nit, \"this.\" in \"this._uid\" is not necessary, right?\nSame as the following places.", "url": "https://github.com/apache/helix/pull/1355#discussion_r493901815", "createdAt": "2020-09-23T21:19:35Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -354,10 +359,10 @@ public void enqueueTask(NotificationContext changeContext) throws Exception {\n     // async mode only applicable to CALLBACK from ZK, During INIT and FINALIZE invoke the\n     // callback's immediately.\n     if (_batchModeEnabled && changeContext.getType() == NotificationContext.Type.CALLBACK) {\n-      logger.debug(\"Enqueuing callback\");\n+      logger.debug(\"Callbackhandler {}, Enqueuing callback\", this._uid );\n       if (!isReady()) {\n-        logger.info(\"CallbackHandler is not ready, ignore change callback from path: {}, for \"\n-            + \"listener: {}\", _path, _listener);\n+        logger.info(\"CallbackHandler {} is not ready, ignore change callback from path: {}, for \"\n+            + \"listener: {}\", this._uid, _path, _listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b43c005f88d39ec498954d01b7ccd48ac02a7f"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4e0e86270f5f85892aed75ae7c80252c7df1bef", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/a4e0e86270f5f85892aed75ae7c80252c7df1bef", "committedDate": "2020-09-23T21:35:17Z", "message": "remove this"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4268, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}