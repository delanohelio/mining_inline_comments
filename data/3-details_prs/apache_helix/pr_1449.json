{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4OTY0Mjkw", "number": 1449, "title": "HelixClusterVerifier verify() with default waitTillVerify time -- part one", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nfix #1448 part 1\nDescription\n\n\n Here are some details about my PR, including screenshots of any UI changes:\nHelixClusterVerifier verify() and related method may return\npre-maturely. The reason is that the verify the converging stable\ncondition too early before controller has a chance to make\nchange. Basically the previous stable state is mistaken as the\nexpected next stable state.\nWe fix this issue by adding waitTillVerify() timeout in\nconstruction time of verifier.\n\n\nTests\n\n The following tests are written for this issue:\n\ngithub run https://github.com/apache/helix/runs/1222609480?check_suite_focus=true\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n2020-10-07T21:51:30.9005474Z\n2020-10-07T21:51:31.3163346Z [ERROR] Failures:\n2020-10-07T21:51:31.3164350Z [ERROR]   TestDisableCustomCodeRunner.test:236 expected: but was:\n2020-10-07T21:51:31.3187463Z [ERROR]   TestTaskRebalancer.testNamedQueue \u00bb ThreadTimeout Method org.testng.internal.T...\n2020-10-07T21:51:31.3189714Z [ERROR]   TestHelixAdminCli.testInstanceOperations:469 \u00bb Helix Failed to drop instance: ...\n2020-10-07T21:51:31.3190815Z [ERROR] Tests run: 1212, Failures: 3, Errors: 0, Skipped: 4\n2020-10-07T21:51:31.3310693Z [ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M3:test (default-test) on project helix-core: There are test failures.\n2020-10-07T21:51:31.3311431Z [ERROR]\n2020-10-07T21:51:31.3312114Z [ERROR] Please refer to /home/runner/work/helix/helix/helix-core/target/surefire-reports for the individual test results.\n2020-10-07T21:51:31.3312933Z [ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\n2020-10-07T21:51:31.3313549Z [ERROR] -> [Help 1]\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-10-07T04:10:53Z", "url": "https://github.com/apache/helix/pull/1449", "merged": true, "mergeCommit": {"oid": "02e16baf3f559f62657a1c713e1cdcd5b029045e"}, "closed": true, "closedAt": "2020-10-07T23:58:43Z", "author": {"login": "kaisun2000"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQEtN7AH2gAyNDk4OTY0MjkwOjEwNGU0NTZkMjE2NDdlOWYyYmI2NGFkZjliNzQ2YTJkYjI1OWI4MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQVvNsAFqTUwNDMzOTQ0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "104e456d21647e9f2bb64adf9b746a2db259b802", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/104e456d21647e9f2bb64adf9b746a2db259b802", "committedDate": "2020-10-07T03:49:02Z", "message": "fix #1448 part\n\nHelixClusterVerifier verify() and related method may return\npre-maturely. The reason is that the verify the converging stable\ncondition too early before controller has a chance to make\nchange. Basically the previous stable state is mistaken as the\nexpected next stable state.\n\nWe fix this issue by adding waitTillVerify() timeout in\nconstruction time of verifier."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acdaf01bd39e8b4a22dbca7d18be9ad4ced4396c", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/acdaf01bd39e8b4a22dbca7d18be9ad4ced4396c", "committedDate": "2020-10-07T04:06:56Z", "message": "some more."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MTgzMTE4", "url": "https://github.com/apache/helix/pull/1449#pullrequestreview-504183118", "createdAt": "2020-10-07T19:03:52Z", "commit": {"oid": "acdaf01bd39e8b4a22dbca7d18be9ad4ced4396c"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTowMzo1MlrOHeBjIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTozMjoxMFrOHeCeLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI0NDcwNg==", "bodyText": "Does this number change mean what we previously tested was wrong? How to justify the number change?", "url": "https://github.com/apache/helix/pull/1449#discussion_r501244706", "createdAt": "2020-10-07T19:03:52Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/controller/changedetector/TestResourceChangeDetector.java", "diffHunk": "@@ -438,7 +441,7 @@ public void testResetSnapshots() {\n     Assert.assertEquals(\n         changeDetector.getAdditionsByType(ChangeType.IDEAL_STATE).size() + changeDetector\n             .getChangesByType(ChangeType.IDEAL_STATE).size() + changeDetector\n-            .getRemovalsByType(ChangeType.IDEAL_STATE).size(), 2);\n+            .getRemovalsByType(ChangeType.IDEAL_STATE).size(), 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acdaf01bd39e8b4a22dbca7d18be9ad4ced4396c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI0NzYxNA==", "bodyText": "Just want to make sure, besides waiting for some time before verifying, the verify by polling function is same as what we previously did.", "url": "https://github.com/apache/helix/pull/1449#discussion_r501247614", "createdAt": "2020-10-07T19:09:25Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestDisableCustomCodeRunner.java", "diffHunk": "@@ -209,9 +214,7 @@ public void test() throws Exception {\n \n     // Re-enable custom-code runner\n     admin.enableResource(clusterName, customCodeRunnerResource, true);\n-    result = ClusterStateVerifier.verifyByZkCallback(\n-        new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR, clusterName));\n-    Assert.assertTrue(result);\n+    Assert.assertTrue(verifier.verifyByPolling());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acdaf01bd39e8b4a22dbca7d18be9ad4ced4396c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI0Nzg0OQ==", "bodyText": "Remove this line.", "url": "https://github.com/apache/helix/pull/1449#discussion_r501247849", "createdAt": "2020-10-07T19:09:54Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestEnableCompression.java", "diffHunk": "@@ -111,10 +111,14 @@ public void testEnableCompressionResource() throws Exception {\n     }\n \n     BestPossibleExternalViewVerifier verifier =\n-        new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR)\n-            .setExpectLiveInstances(expectedLiveInstances).setResources(expectedResources).build();\n-    boolean result = verifier.verify(120000L);\n-    Assert.assertTrue(result);\n+        new BestPossibleExternalViewVerifier.Builder(clusterName).setZkClient(_gZkClient)\n+            .setExpectLiveInstances(expectedLiveInstances).setResources(expectedResources)\n+            .setWaitTillVerify(TestHelper.DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)\n+            .build();\n+\n+    System.out.println(\"before TestEnableCompression verify by polling\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acdaf01bd39e8b4a22dbca7d18be9ad4ced4396c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI0ODUzNw==", "bodyText": "Can we define the number somewhere instead of using a math expression?", "url": "https://github.com/apache/helix/pull/1449#discussion_r501248537", "createdAt": "2020-10-07T19:11:10Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestEnableCompression.java", "diffHunk": "@@ -111,10 +111,14 @@ public void testEnableCompressionResource() throws Exception {\n     }\n \n     BestPossibleExternalViewVerifier verifier =\n-        new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR)\n-            .setExpectLiveInstances(expectedLiveInstances).setResources(expectedResources).build();\n-    boolean result = verifier.verify(120000L);\n-    Assert.assertTrue(result);\n+        new BestPossibleExternalViewVerifier.Builder(clusterName).setZkClient(_gZkClient)\n+            .setExpectLiveInstances(expectedLiveInstances).setResources(expectedResources)\n+            .setWaitTillVerify(TestHelper.DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)\n+            .build();\n+\n+    System.out.println(\"before TestEnableCompression verify by polling\");\n+    boolean reuslt = verifier.verifyByPolling(20 * 60 * 1000, 2000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acdaf01bd39e8b4a22dbca7d18be9ad4ced4396c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1OTQ3Nw==", "bodyText": "Is previous verification moved to somewhere else?", "url": "https://github.com/apache/helix/pull/1449#discussion_r501259477", "createdAt": "2020-10-07T19:31:38Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestSemiAutoRebalance.java", "diffHunk": "@@ -92,33 +95,11 @@ public void beforeClass() throws InterruptedException {\n     _controller = new ClusterControllerManager(ZK_ADDR, CLUSTER_NAME, controllerName);\n     _controller.syncStart();\n \n-    Thread.sleep(1000);\n-\n-    // verify ideal state and external view\n-    IdealState idealState = _accessor.getProperty(_keyBuilder.idealStates(DB_NAME));\n-    Assert.assertNotNull(idealState);\n-    Assert.assertEquals(idealState.getNumPartitions(), PARTITION_NUMBER);\n-    for (String partition : idealState.getPartitionSet()) {\n-      List<String> preferenceList = idealState.getPreferenceList(partition);\n-      Assert.assertNotNull(preferenceList);\n-      Assert.assertEquals(preferenceList.size(), REPLICA_NUMBER);\n-    }\n-\n-    ExternalView externalView = _accessor.getProperty(_keyBuilder.externalView(DB_NAME));\n-    Assert.assertNotNull(externalView);\n-    Assert.assertEquals(externalView.getPartitionSet().size(), PARTITION_NUMBER);\n-    for (String partition : externalView.getPartitionSet()) {\n-      Map<String, String> stateMap = externalView.getStateMap(partition);\n-      Assert.assertEquals(stateMap.size(), REPLICA_NUMBER);\n-\n-      int masters = 0;\n-      for (String state : stateMap.values()) {\n-        if (state.equals(MasterSlaveSMD.States.MASTER.name())) {\n-          ++masters;\n-        }\n-      }\n-      Assert.assertEquals(masters, 1);\n-    }\n+    ZkHelixClusterVerifier verifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acdaf01bd39e8b4a22dbca7d18be9ad4ced4396c"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1OTgyMg==", "bodyText": "Please change Db2 to a better name.", "url": "https://github.com/apache/helix/pull/1449#discussion_r501259822", "createdAt": "2020-10-07T19:32:10Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestAutoRebalance.java", "diffHunk": "@@ -164,9 +169,19 @@ public void testAutoRebalance() throws Exception {\n     // kill 1 node\n     _participants[0].syncStop();\n \n-    boolean result = ClusterStateVerifier\n-        .verifyByZkCallback(new ExternalViewBalancedVerifier(_gZkClient, CLUSTER_NAME, TEST_DB));\n-    Assert.assertTrue(result);\n+    ZkHelixClusterVerifier verifierTestDb = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME)\n+        .setResources(new HashSet<>(Collections.singleton(TEST_DB)))\n+        .setZkClient(_gZkClient)\n+        .setWaitTillVerify(TestHelper.DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)\n+        .build();\n+    Assert.assertTrue(verifierTestDb.verifyByPolling());\n+\n+    ZkHelixClusterVerifier verifierDb2 = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acdaf01bd39e8b4a22dbca7d18be9ad4ced4396c"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08064b4b323a84d6eaa3f749a6d3bfd83f72889f", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/08064b4b323a84d6eaa3f749a6d3bfd83f72889f", "committedDate": "2020-10-07T20:27:40Z", "message": "some updates based on Meng's feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MzM5NDQ1", "url": "https://github.com/apache/helix/pull/1449#pullrequestreview-504339445", "createdAt": "2020-10-07T23:39:36Z", "commit": {"oid": "08064b4b323a84d6eaa3f749a6d3bfd83f72889f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4331, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}