{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NzM1NTUx", "number": 776, "title": "add CustomizedStateAggregation config", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\n(#728 )\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nHelix will introduce the concept of customized state, which allows customer to define the states they are interested. Helix will also help aggregate these states for customers' easier usage. This PR implements a new cluster level config called customized state aggregation config. If customer would like Helix to aggregate their customized states, they need to add the specific customized state in this config.\nTests\n\n The following tests are written for this issue:\n\nTestCustomizedStateAggregationConfig\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[ERROR] Tests run: 905, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 3,340.648 s <<< FAILURE! - in TestSuite\n[ERROR] testJobQueueAddingJobsOneByOne(org.apache.helix.integration.task.TestEnqueueJobs)  Time elapsed: 10.104 s  <<< FAILURE!\norg.apache.helix.HelixException: Workflow \"testJobQueueAddingJobsOneByOne\" context is null or job \"testJobQueueAddingJobsOneByOne_JOB0\" is not in states: [COMPLETED]\nat org.apache.helix.integration.task.TestEnqueueJobs.testJobQueueAddingJobsOneByOne(TestEnqueueJobs.java:32)\n[INFO]\n[INFO] Results:\n[INFO]\n[ERROR] Failures:\n[ERROR]   TestEnqueueJobs.testJobQueueAddingJobsOneByOne:32 \u00bb Helix Workflow \"testJobQue...\n[INFO]\n[ERROR] Tests run: 905, Failures: 1, Errors: 0, Skipped: 0\nCommits\n\n[X ] My commits all reference appropriate Apache Helix GitHub issues in their subject lines, and I have squashed multiple commits if they address the same issue. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml", "createdAt": "2020-02-18T17:09:38Z", "url": "https://github.com/apache/helix/pull/776", "merged": true, "mergeCommit": {"oid": "f80d76e602feb2814aac8ea489d8cccdc76d6ba3"}, "closed": true, "closedAt": "2020-02-20T19:53:45Z", "author": {"login": "zhangmeng916"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFk_v7gH2gAyMzc2NzM1NTUxOjQ1ZTMzMWMyODk1YjBmNDczZjFmMGI4NmM3NTdjZjhmYjhjOTc3OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFrw_eAFqTM2MDc3NzgyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "45e331c2895b0f473f1f0b86c757cf8fb8c97794", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/45e331c2895b0f473f1f0b86c757cf8fb8c97794", "committedDate": "2020-02-18T17:01:55Z", "message": "add CustomizedStateAggregation config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjQ1ODUz", "url": "https://github.com/apache/helix/pull/776#pullrequestreview-360645853", "createdAt": "2020-02-18T20:22:10Z", "commit": {"oid": "45e331c2895b0f473f1f0b86c757cf8fb8c97794"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDoyMjoxMVrOFrRJMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDoyMzoxNFrOFrRLAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMzk2OQ==", "bodyText": "can we have AGGREGATION_ENABLED_TYPES instead?", "url": "https://github.com/apache/helix/pull/776#discussion_r380913969", "createdAt": "2020-02-18T20:22:11Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/model/CustomizedStateAggregationConfig.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package org.apache.helix.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.helix.HelixProperty;\n+import org.apache.helix.ZNRecord;\n+\n+/**\n+ * CustomizedStateAggregation configurations\n+ */\n+public class CustomizedStateAggregationConfig extends HelixProperty {\n+  /**\n+   * Indicate which customized states will be aggregated.\n+   * NOTE: Do NOT use this field name directly, use its corresponding getter/setter in the\n+   * CustomizedStateAggregationConfig.\n+   */\n+  public enum CustomizedStateAggregationProperty {\n+    AGGREGATION_ENABLED_STATES,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e331c2895b0f473f1f0b86c757cf8fb8c97794"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxNDQzMw==", "bodyText": "If we decided to go with AGGREGATION_ENABLED_TYPE, please change this name as well.", "url": "https://github.com/apache/helix/pull/776#discussion_r380914433", "createdAt": "2020-02-18T20:23:14Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/model/CustomizedStateAggregationConfig.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package org.apache.helix.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.helix.HelixProperty;\n+import org.apache.helix.ZNRecord;\n+\n+/**\n+ * CustomizedStateAggregation configurations\n+ */\n+public class CustomizedStateAggregationConfig extends HelixProperty {\n+  /**\n+   * Indicate which customized states will be aggregated.\n+   * NOTE: Do NOT use this field name directly, use its corresponding getter/setter in the\n+   * CustomizedStateAggregationConfig.\n+   */\n+  public enum CustomizedStateAggregationProperty {\n+    AGGREGATION_ENABLED_STATES,\n+  }\n+\n+  /**\n+   * Instantiate the CustomizedStateAggregationConfig\n+   * @param cluster\n+   */\n+  public CustomizedStateAggregationConfig(String cluster) {\n+    super(cluster);\n+  }\n+\n+  /**\n+   * Instantiate with a pre-populated record\n+   * @param record a ZNRecord corresponding to a CustomizedStateAggregationConfig\n+   */\n+  public CustomizedStateAggregationConfig(ZNRecord record) {\n+    super(record);\n+  }\n+\n+  /**\n+   * Instantiate the config using each field individually.\n+   * Users should use CustomizedStateAggregationConfig.Builder to create\n+   * CustomizedStateAggregationConfig.\n+   * @param cluster\n+   * @param aggregationEnabledStates\n+   */\n+  public CustomizedStateAggregationConfig(String cluster, List<String> aggregationEnabledStates) {\n+    super(cluster);\n+    _record.setListField(CustomizedStateAggregationProperty.AGGREGATION_ENABLED_STATES.name(),\n+        aggregationEnabledStates);\n+\n+  }\n+\n+  /**\n+   * Set the AGGREGATION_ENABLED_STATES field.\n+   * @param aggregationEnabledStates\n+   */\n+  public void setAggregationEnabledStates(List<String> aggregationEnabledStates) {\n+    _record.setListField(CustomizedStateAggregationProperty.AGGREGATION_ENABLED_STATES.name(),\n+        aggregationEnabledStates);\n+  }\n+\n+  /**\n+   * Get the AGGREGATION_ENABLED_STATES field.\n+   * @return AGGREGATION_ENABLED_STATES field.\n+   */\n+  public List<String> getAggregationEnabledStates() {\n+    return _record\n+        .getListField(CustomizedStateAggregationProperty.AGGREGATION_ENABLED_STATES.name());\n+  }\n+\n+  public static class Builder {\n+    private String _clusterName = null;\n+    private List<String> _aggregationEnabledStates;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e331c2895b0f473f1f0b86c757cf8fb8c97794"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a929129ed2ae76da052a439fb263cc60eb5c050", "author": {"user": {"login": "zhangmeng916", "name": "Meng Zhang"}}, "url": "https://github.com/apache/helix/commit/4a929129ed2ae76da052a439fb263cc60eb5c050", "committedDate": "2020-02-18T22:48:00Z", "message": "change naming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzc3ODIw", "url": "https://github.com/apache/helix/pull/776#pullrequestreview-360777820", "createdAt": "2020-02-19T00:55:08Z", "commit": {"oid": "4a929129ed2ae76da052a439fb263cc60eb5c050"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4983, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}