{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyOTI4NDIz", "number": 681, "title": "Integration test for controller connect and disconnect", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\n#661\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\n(Write a concise description including what, why, how)\nwhat\nAdd the integration test case to simulate the controller node becomes on/off leader for the test cluster; Also add the case to simulate the leadership switch case.\nwhy\n\nTo unblock the progress on PR #662 and help us understand the risks  when the leadership switch happens\n\n\n\n\nIs controller the leader\nImportant checkpoints\n\n\n\n\nYes\n1. CallBack Handlers are all active and correctly registered 2. The LEADER node on ZK reflects the right leadership 3. Controller timer tasks are all active 4. ZK connection is open\n\n\nNo\n1. CallBack Handlers list is empty 2. The LEADER node on ZK is either empty or showing a different leader 3. Controller timer tasks are all disabled 4. ZK connection can be open or closed\n\n\n\n\nTo help us verify some important properties when the controller is the leader and not the leader\nIt also serves a quick easy way to figure out the latency on leader -> standby and standby -> leader\nTODO: There's no good way to check if controller timer tasks are all stopped without adding a public method only for test purpose\nThe diff also contains certain code style changes\n\nTests\n\n The following tests are written for this issue:\n\n(List the names of added unit/integration tests)\nTestControllerLeadershipChange\n\n\ntestControllerConnectThenDisconnect\n\n\ntestWhenControllerAlreadyExists\n\n\ntestWhenLeadershipSwitch\n\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n\n(Copy & paste the result of \"mvn test\")\n[ERROR] Tests run: 899, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 3,819.652 s <<< FAILURE! - in TestSuite\n[ERROR] testForceDeleteJobFromJobQueue(org.apache.helix.integration.task.TestDeleteJobFromJobQueue)  Time elapsed: 0.458 s  <<< FAILURE!\norg.apache.helix.HelixException: Failed to delete job: testForceDeleteJobFromJobQueue_job2 from queue: testForceDeleteJobFromJobQueue\nat org.apache.helix.integration.task.TestDeleteJobFromJobQueue.testForceDeleteJobFromJobQueue(TestDeleteJobFromJobQueue.java:75)\n[INFO]\n[INFO] Results:\n[INFO]\n[ERROR] Failures:\n[ERROR]   TestDeleteJobFromJobQueue.testForceDeleteJobFromJobQueue:75 \u00bb Helix Failed to ...\n[INFO]\n[ERROR] Tests run: 899, Failures: 1, Errors: 0, Skipped: 0\n[INFO]\nThe failing test passed when running individually in IDE\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines, and I have squashed multiple commits if they address the same issue. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation\n\n In case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCode Quality\n\n My diff has been formatted using helix-style.xml", "createdAt": "2020-01-15T02:38:05Z", "url": "https://github.com/apache/helix/pull/681", "merged": true, "mergeCommit": {"oid": "db2e373c321cf79406bdd421f42b04c062fd4495"}, "closed": true, "closedAt": "2020-01-30T22:41:54Z", "author": {"login": "i3wangyi"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6eYRaAFqTM0Mjk5MDEwNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_NLj0gBqjI5OTEyMjk2OTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTkwMTA3", "url": "https://github.com/apache/helix/pull/681#pullrequestreview-342990107", "createdAt": "2020-01-15T05:04:22Z", "commit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNTowNDoyM1rOFdtaag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNTowNDoyM1rOFdtaag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NzA2Ng==", "bodyText": "Would this break a class which extends HelixTimerTask in an external package?", "url": "https://github.com/apache/helix/pull/681#discussion_r366697066", "createdAt": "2020-01-15T05:04:23Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/HelixTimerTask.java", "diffHunk": "@@ -32,4 +32,9 @@\n    * Stop a timer task\n    */\n   public abstract void stop();\n+\n+  /**\n+   * Validate if the timer task is stopped\n+   */\n+  public abstract boolean isStopped();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMDI2ODgy", "url": "https://github.com/apache/helix/pull/681#pullrequestreview-343026882", "createdAt": "2020-01-15T07:30:05Z", "commit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNzozMDowNVrOFdvOfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNzozODowNFrOFdvXEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcyNjc4Mg==", "bodyText": "If this is for test only, please keep it in the implementation classes and keep it protected.", "url": "https://github.com/apache/helix/pull/681#discussion_r366726782", "createdAt": "2020-01-15T07:30:05Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/HelixTimerTask.java", "diffHunk": "@@ -32,4 +32,9 @@\n    * Stop a timer task\n    */\n   public abstract void stop();\n+\n+  /**\n+   * Validate if the timer task is stopped\n+   */\n+  public abstract boolean isStopped();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NzA2Ng=="}, "originalCommit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcyODk3OA==", "bodyText": "I think we have the same test case, or a similar test case. For example, TestStandAloneCMMain.java, there is more related test cases. The existing tests are actually more complicated than this one.\nI'm fine if you want to re-org the test so they are together. But can we remove the old duplicated tests and ensure we keep the most complicated cases in our test list?", "url": "https://github.com/apache/helix/pull/681#discussion_r366728978", "createdAt": "2020-01-15T07:38:04Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "diffHunk": "@@ -20,29 +20,136 @@\n  */\n \n import java.lang.management.ManagementFactory;\n+import java.util.List;\n import javax.management.MBeanServer;\n import javax.management.ObjectName;\n \n import org.apache.helix.AccessOption;\n import org.apache.helix.HelixDataAccessor;\n import org.apache.helix.HelixManager;\n import org.apache.helix.HelixManagerFactory;\n+import org.apache.helix.HelixTimerTask;\n import org.apache.helix.InstanceType;\n import org.apache.helix.PropertyPathBuilder;\n import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.ClusterControllerManager;\n import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.manager.zk.CallbackHandler;\n+import org.apache.helix.manager.zk.client.HelixZkClient;\n import org.apache.helix.model.IdealState;\n import org.apache.helix.model.LiveInstance;\n import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n import org.apache.helix.tools.ClusterVerifiers.BestPossibleExternalViewVerifier;\n import org.apache.helix.tools.ClusterVerifiers.ZkHelixClusterVerifier;\n import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n+\n+/**\n+ * Integration test on controller leadership on several phases given the test cluster:\n+ *  1. When a standby node becomes the leader node\n+ *     - single leader node mode\n+ *  2. When a leader node becomes standby node\n+ *     - single leader node mode\n+ *  3. When a leader node becomes standby node and the other leader node becomes leader node\n+ *     - The dual leader nodes mode when the leadership of the test cluster gets changed\n+ */\n public class TestControllerLeadershipChange extends ZkTestBase {\n+  private final String CLASS_NAME = getShortClassName();\n+  private final String CLUSTER_NAME = \"TestCluster-\" + CLASS_NAME;\n+\n+  @BeforeClass\n+  public void beforeClass()\n+      throws Exception {\n+    super.beforeClass();\n+    _gSetupTool.addCluster(CLUSTER_NAME, true);\n+    // add some instances\n+    _gSetupTool.addInstanceToCluster(CLUSTER_NAME, \"TestInstance\");\n+    _gSetupTool.addResourceToCluster(CLUSTER_NAME, \"TestResource\", 10, \"MasterSlave\");\n+  }\n \n   @Test\n-  public void testMissingTopStateDurationMonitoring() throws Exception {\n+  public void testOnSingleController() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ecd9d7913f8c65f4f4928dad365ddc74caeb3e"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MjY2MDgx", "url": "https://github.com/apache/helix/pull/681#pullrequestreview-344266081", "createdAt": "2020-01-16T22:43:41Z", "commit": {"oid": "1c5a9cb67776d695c3f90a0cd680329167b73ea5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f71c65c7866bf3d0c4c7a90f71f86c69f6536935", "author": {"user": {"login": "i3wangyi", "name": "Yi Wang"}}, "url": "https://github.com/apache/helix/commit/f71c65c7866bf3d0c4c7a90f71f86c69f6536935", "committedDate": "2020-01-18T02:10:45Z", "message": "draft impl on cleaning up objects"}, "afterCommit": {"oid": "b53609b37098f5e0e0dc7bfebd46685b2f572a33", "author": {"user": {"login": "i3wangyi", "name": "Yi Wang"}}, "url": "https://github.com/apache/helix/commit/b53609b37098f5e0e0dc7bfebd46685b2f572a33", "committedDate": "2020-01-28T02:31:08Z", "message": "Integration test for verifying controller on/off leadership of a cluster"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDQ0OTAx", "url": "https://github.com/apache/helix/pull/681#pullrequestreview-350444901", "createdAt": "2020-01-29T21:42:49Z", "commit": {"oid": "731f6c9af3d3171ca65ec3fc885412bc4526f5de"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo0Mjo0OVrOFjYiTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo0NDo0NVrOFjYl_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NjQ3OQ==", "bodyText": "Please keep the test cases as silent as possible. Only log or throw error asserts on failure case.", "url": "https://github.com/apache/helix/pull/681#discussion_r372646479", "createdAt": "2020-01-29T21:42:49Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "diffHunk": "@@ -30,19 +31,157 @@\n import org.apache.helix.InstanceType;\n import org.apache.helix.PropertyPathBuilder;\n import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.ClusterControllerManager;\n import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.manager.zk.CallbackHandler;\n+import org.apache.helix.manager.zk.client.HelixZkClient;\n import org.apache.helix.model.IdealState;\n import org.apache.helix.model.LiveInstance;\n import org.apache.helix.monitoring.mbeans.MonitorDomainNames;\n import org.apache.helix.tools.ClusterVerifiers.BestPossibleExternalViewVerifier;\n import org.apache.helix.tools.ClusterVerifiers.ZkHelixClusterVerifier;\n import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n+\n+/**\n+ * Integration test on controller leadership on several phases given the test cluster:\n+ *  1. When a standalone controller becomes the leader\n+ *  2. When a standalone leader relinquishes the leadership\n+ *  3. When the leader node relinquishes the leadership and the other controller takes it over\n+ */\n public class TestControllerLeadershipChange extends ZkTestBase {\n+  private final String CLASS_NAME = getShortClassName();\n+  private final String CLUSTER_NAME = \"TestCluster-\" + CLASS_NAME;\n+\n+  @BeforeClass\n+  public void beforeClass()\n+      throws Exception {\n+    super.beforeClass();\n+    _gSetupTool.addCluster(CLUSTER_NAME, true);\n+    _gSetupTool.addInstanceToCluster(CLUSTER_NAME, \"TestInstance\");\n+    _gSetupTool.addResourceToCluster(CLUSTER_NAME, \"TestResource\", 10, \"MasterSlave\");\n+  }\n+\n+  @AfterClass\n+  public void afterClass() {\n+    deleteCluster(CLUSTER_NAME);\n+  }\n \n   @Test\n-  public void testMissingTopStateDurationMonitoring() throws Exception {\n+  public void testControllerConnectThenDisconnect() {\n+    ClusterControllerManager controller =\n+        new ClusterControllerManager(ZK_ADDR, CLUSTER_NAME, \"TestController\");\n+    long start = System.currentTimeMillis();\n+    controller.syncStart();\n+    verifyControllerIsLeader(controller);\n+    System.out.println(System.currentTimeMillis() - start + \"ms spent on becoming the leader\");\n+\n+    start = System.currentTimeMillis();\n+    controller.syncStop();\n+    verifyControllerIsNotLeader(controller);\n+    verifyZKDisconnected(controller);\n+\n+    System.out.println(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f6c9af3d3171ca65ec3fc885412bc4526f5de"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NzQyMw==", "bodyText": "nit, I believe the latest style file has changed exception throws to non-wrapping. Please update your local style configuration.", "url": "https://github.com/apache/helix/pull/681#discussion_r372647423", "createdAt": "2020-01-29T21:44:45Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/controller/TestControllerLeadershipChange.java", "diffHunk": "@@ -117,16 +258,17 @@ public void testMissingTopStateDurationMonitoring() throws Exception {\n     // Resource lost top state, and manager1 lost leadership for 2000ms, because manager1 will\n     // clean monitoring cache after re-gaining leadership, so max value of hand off duration should\n     // not have such a large value\n-    Assert.assertTrue((long) beanServer.getAttribute(resourceMBeanObjectName,\n-        \"PartitionTopStateHandoffDurationGauge.Max\") < 500);\n+    Assert.assertTrue((long) beanServer\n+        .getAttribute(resourceMBeanObjectName, \"PartitionTopStateHandoffDurationGauge.Max\") < 500);\n \n     participant.syncStop();\n     manager1.disconnect();\n     manager2.disconnect();\n     deleteCluster(clusterName);\n   }\n \n-  private void setLeader(HelixManager manager) throws Exception {\n+  private void setLeader(HelixManager manager)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f6c9af3d3171ca65ec3fc885412bc4526f5de"}, "originalPosition": 207}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b6fb5dd98aacc9de458611fc6b385ad1c1549ea", "author": {"user": {"login": "i3wangyi", "name": "Yi Wang"}}, "url": "https://github.com/apache/helix/commit/9b6fb5dd98aacc9de458611fc6b385ad1c1549ea", "committedDate": "2020-01-29T21:46:12Z", "message": "Integration test for verifying controller on/off leadership of a cluster"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfdbf7334a5ce32f60b66d7085c0482cb4e721ff", "author": {"user": {"login": "i3wangyi", "name": "Yi Wang"}}, "url": "https://github.com/apache/helix/commit/cfdbf7334a5ce32f60b66d7085c0482cb4e721ff", "committedDate": "2020-01-29T21:46:12Z", "message": "Add a TODO for testing controller timer tasks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7536846baade72d06c807c4f86f9cb3ef2933d24", "author": {"user": {"login": "i3wangyi", "name": "Yi Wang"}}, "url": "https://github.com/apache/helix/commit/7536846baade72d06c807c4f86f9cb3ef2933d24", "committedDate": "2020-01-29T21:50:55Z", "message": "Update the code style and remove the system print"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "731f6c9af3d3171ca65ec3fc885412bc4526f5de", "author": {"user": {"login": "i3wangyi", "name": "Yi Wang"}}, "url": "https://github.com/apache/helix/commit/731f6c9af3d3171ca65ec3fc885412bc4526f5de", "committedDate": "2020-01-29T00:57:43Z", "message": "Add a TODO for testing controller timer tasks"}, "afterCommit": {"oid": "7536846baade72d06c807c4f86f9cb3ef2933d24", "author": {"user": {"login": "i3wangyi", "name": "Yi Wang"}}, "url": "https://github.com/apache/helix/commit/7536846baade72d06c807c4f86f9cb3ef2933d24", "committedDate": "2020-01-29T21:50:55Z", "message": "Update the code style and remove the system print"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4855, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}