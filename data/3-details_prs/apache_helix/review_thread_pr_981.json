{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwODg3NjU5", "number": 981, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyNzozOFrOD3xPrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1NjoyMVrOD4L3jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODA1MTAxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOToyNzozOFrOGONtHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1NTo0MlrOGOOpoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1Nzc5MA==", "bodyText": "Make sure external view has been created for the resource...", "url": "https://github.com/apache/helix/pull/981#discussion_r417557790", "createdAt": "2020-04-29T19:27:38Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view is has been created to the resource", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3MzI4MQ==", "bodyText": "Done.", "url": "https://github.com/apache/helix/pull/981#discussion_r417573281", "createdAt": "2020-04-29T19:55:42Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view is has been created to the resource", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1Nzc5MA=="}, "originalCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODA4MTc4OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozNjoyOFrOGON_zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1NjowN1rOGOOqbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjU3NA==", "bodyText": "If you're expecting null, there's really no reason to use getOrDefault?", "url": "https://github.com/apache/helix/pull/981#discussion_r417562574", "createdAt": "2020-04-29T19:36:28Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n+      if (state == null) {\n+        return false;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2Mjg3OA==", "bodyText": "In this case, a simple containsKey check would do..", "url": "https://github.com/apache/helix/pull/981#discussion_r417562878", "createdAt": "2020-04-29T19:37:05Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n+      if (state == null) {\n+        return false;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjU3NA=="}, "originalCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3MzQ4Nw==", "bodyText": "Fixed. I simplified the logic.", "url": "https://github.com/apache/helix/pull/981#discussion_r417573487", "createdAt": "2020-04-29T19:56:07Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n+      if (state == null) {\n+        return false;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjU3NA=="}, "originalCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODA4MjUzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozNjozOVrOGOOAOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1NjoxNVrOGOOqww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjY4Mw==", "bodyText": "redundant parentheses", "url": "https://github.com/apache/helix/pull/981#discussion_r417562683", "createdAt": "2020-04-29T19:36:39Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n+      if (state == null) {\n+        return false;\n+      }\n+      return (state.equals(\"MASTER\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3MzU3MQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/helix/pull/981#discussion_r417573571", "createdAt": "2020-04-29T19:56:15Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n+      if (state == null) {\n+        return false;\n+      }\n+      return (state.equals(\"MASTER\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjY4Mw=="}, "originalCommit": {"oid": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODczNDcxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMzoxNTowNVrOGOUVGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDo0MDoyOVrOGOV7Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NjMzMA==", "bodyText": "A counter is enough, no need to create a HashSet, right?", "url": "https://github.com/apache/helix/pull/981#discussion_r417666330", "createdAt": "2020-04-29T23:15:05Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,28 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n+      Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      for (Map.Entry<String, String> entry : stateMap1.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      return (masterInstances.size() == 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5MjQ0Mg==", "bodyText": "Please note that we want to make sure that the master for two different resources are existed in two different instances. Counter is also possible. However, I still think this implementation in more readable. Specially considering that this is only a test.", "url": "https://github.com/apache/helix/pull/981#discussion_r417692442", "createdAt": "2020-04-30T00:40:29Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,28 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n+      Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      for (Map.Entry<String, String> entry : stateMap1.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      return (masterInstances.size() == 2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NjMzMA=="}, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODc0MTk0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMzoxODo0MlrOGOUZfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDo0NTozMFrOGOWAiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NzQ1Mw==", "bodyText": "Nit, I would just do assertTrue(TestHelper.verify()); to get rid of the temp boolean isExternalViewCreated var to minimize variable scope. Same for following usages.", "url": "https://github.com/apache/helix/pull/981#discussion_r417667453", "createdAt": "2020-04-29T23:18:42Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view is has been created for the resource\n+    boolean isExternalViewCreated = TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n+      return (externalView != null);\n+    }, TestHelper.WAIT_DURATION);\n+    Assert.assertTrue(isExternalViewCreated);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5MzgzMw==", "bodyText": "Good suggestion. Changed.", "url": "https://github.com/apache/helix/pull/981#discussion_r417693833", "createdAt": "2020-04-30T00:45:30Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view is has been created for the resource\n+    boolean isExternalViewCreated = TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n+      return (externalView != null);\n+    }, TestHelper.WAIT_DURATION);\n+    Assert.assertTrue(isExternalViewCreated);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NzQ1Mw=="}, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODc0ODg0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMzoyMTo1M1rOGOUdbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDo1MDo1NlrOGOWGBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2ODQ2Mw==", "bodyText": "Is externalView possible to be null?", "url": "https://github.com/apache/helix/pull/981#discussion_r417668463", "createdAt": "2020-04-29T23:21:53Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,17 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5NTIzNg==", "bodyText": "Yeah it is possible. I added new check for the null EV.", "url": "https://github.com/apache/helix/pull/981#discussion_r417695236", "createdAt": "2020-04-30T00:50:56Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,17 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2ODQ2Mw=="}, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODc1MDczOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMzoyMjo1MlrOGOUenw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDo0ODo1M1rOGOWD8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2ODc2Nw==", "bodyText": "These checks could be simplified to \"MASTER\".equals(stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)));", "url": "https://github.com/apache/helix/pull/981#discussion_r417668767", "createdAt": "2020-04-29T23:22:52Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,17 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      if (!stateMap.containsKey(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1))) {\n+        return false;\n+      }\n+      return stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)).equals(\"MASTER\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5NDcwNQ==", "bodyText": "Fixed. Thanks.", "url": "https://github.com/apache/helix/pull/981#discussion_r417694705", "createdAt": "2020-04-30T00:48:53Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,17 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      if (!stateMap.containsKey(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1))) {\n+        return false;\n+      }\n+      return stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)).equals(\"MASTER\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2ODc2Nw=="}, "originalCommit": {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjM5ODk4OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1MTo0N1rOGO4BrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjoyMjo1NlrOGO8Yew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTE4MQ==", "bodyText": "Parentheses aren't needed here.", "url": "https://github.com/apache/helix/pull/981#discussion_r418251181", "createdAt": "2020-04-30T19:51:47Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view has been created for the resource\n+    Assert.assertTrue(TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n+      return (externalView != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMjU1NQ==", "bodyText": "Done.", "url": "https://github.com/apache/helix/pull/981#discussion_r418322555", "createdAt": "2020-04-30T22:22:56Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view has been created for the resource\n+    Assert.assertTrue(TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n+      return (externalView != null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTE4MQ=="}, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjQwMTcwOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1Mjo0M1rOGO4DYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjoyMzowNVrOGO8YtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTYxNw==", "bodyText": "Could we declare it as Set instead of HashSet here?", "url": "https://github.com/apache/helix/pull/981#discussion_r418251617", "createdAt": "2020-04-30T19:52:43Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMjYxMg==", "bodyText": "Done.", "url": "https://github.com/apache/helix/pull/981#discussion_r418322612", "createdAt": "2020-04-30T22:23:05Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTYxNw=="}, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjQwMzIxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1MzoxNVrOGO4EVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjoyMzoxOVrOGO8ZFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTg2MA==", "bodyText": "Nit: \"two masters exist on two different instances\"", "url": "https://github.com/apache/helix/pull/981#discussion_r418251860", "createdAt": "2020-04-30T19:53:15Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMjcwOA==", "bodyText": "Fixed.", "url": "https://github.com/apache/helix/pull/981#discussion_r418322708", "createdAt": "2020-04-30T22:23:19Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTg2MA=="}, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjQwNzI1OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1NDozMFrOGO4G2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjoyMzoxMlrOGO8Y5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MjUwNw==", "bodyText": "Parentheses not needed?", "url": "https://github.com/apache/helix/pull/981#discussion_r418252507", "createdAt": "2020-04-30T19:54:30Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n+      Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n+      Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      for (Map.Entry<String, String> entry : stateMap1.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      return (masterInstances.size() == 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMjY2MQ==", "bodyText": "Done.", "url": "https://github.com/apache/helix/pull/981#discussion_r418322661", "createdAt": "2020-04-30T22:23:12Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n+      Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n+      Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      for (Map.Entry<String, String> entry : stateMap1.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      return (masterInstances.size() == 2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MjUwNw=="}, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjQxMjkzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1NjoyMVrOGO4KYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjoyMzozNVrOGO8ZgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MzQxMA==", "bodyText": "Do we need to do a null check on stateMap here?", "url": "https://github.com/apache/helix/pull/981#discussion_r418253410", "createdAt": "2020-04-30T19:56:21Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n+      Map<String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      return \"MASTER\".equals(stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMjgxNw==", "bodyText": "Added null check.", "url": "https://github.com/apache/helix/pull/981#discussion_r418322817", "createdAt": "2020-04-30T22:23:35Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n+      Map<String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      return \"MASTER\".equals(stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MzQxMA=="}, "originalCommit": {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1478, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}