{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NjgwMDAz", "number": 1243, "title": "Make HelixCustomCodeRunner multi-ZK aware", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1242\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nThis class was an edge case that was neglected as part of ZooScalability API migration. This commit makes HelixCustomCodeRunner realm-aware by adding a constructor that accepts a RealmAwareZkConnectionConfig.\nTests\n\n The following tests are written for this issue:\n\nNone. Tests exist for CustomCodeRunner.\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nmvn test on helix-core:\n[ERROR] Failures: \n[ERROR]   TestZKCallback.testInvocation:223\n[ERROR]   TestEnableCompression.testEnableCompressionResource:117 expected:<true> but was:<false>\n[INFO] \n[ERROR] Tests run: 1162, Failures: 2, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n\nRun separately:\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 27.043 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-08-10T19:13:23Z", "url": "https://github.com/apache/helix/pull/1243", "merged": true, "mergeCommit": {"oid": "a86b7d46bea2743592baa2f2fede2c0f45bfacd6"}, "closed": true, "closedAt": "2020-08-11T00:40:45Z", "author": {"login": "narendly"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9nHHeAH2gAyNDY1NjgwMDAzOmNlYjIwZGMxY2E5NjRlMzEwN2ZmODk0NzNhNWRkZWI2MTNlZWVhOGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9pjD8AFqTQ2NDYxNzM4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ceb20dc1ca964e3107ff89473a5ddeb613eeea8c", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/ceb20dc1ca964e3107ff89473a5ddeb613eeea8c", "committedDate": "2020-08-10T19:09:32Z", "message": "Make HelixCustomCodeRunner multi-ZK aware\n\nThis class was an edge case that was neglected as part of ZooScalability API migration. This commit makes HelixCustomCodeRunner realm-aware by adding a constructor that accepts a RealmAwareZkConnectionConfig."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NTgyNDY4", "url": "https://github.com/apache/helix/pull/1243#pullrequestreview-464582468", "createdAt": "2020-08-10T20:57:13Z", "commit": {"oid": "ceb20dc1ca964e3107ff89473a5ddeb613eeea8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDo1NzoxM1rOG-fh8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDo1NzoxM1rOG-fh8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE4MTQ5MQ==", "bodyText": "if zkaddress is null and we are initialize it with FederatedZKClient, do we have problem? For example, we cannot get the routing key and cause any problems?", "url": "https://github.com/apache/helix/pull/1243#discussion_r468181491", "createdAt": "2020-08-10T20:57:13Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/participant/HelixCustomCodeRunner.java", "diffHunk": "@@ -130,14 +147,23 @@ public void start() throws Exception {\n \n     StateMachineEngine stateMach = _manager.getStateMachineEngine();\n     stateMach.registerStateModelFactory(LEADER_STANDBY, _stateModelFty, _resourceName);\n-    HelixZkClient zkClient = null;\n+    RealmAwareZkClient zkClient = null;\n     try {\n       // manually add ideal state for participant leader using LeaderStandby\n       // model\n-      HelixZkClient.ZkClientConfig clientConfig = new HelixZkClient.ZkClientConfig();\n-      clientConfig.setZkSerializer(new ZNRecordSerializer());\n-      zkClient = SharedZkClientFactory.getInstance()\n-          .buildZkClient(new HelixZkClient.ZkConnectionConfig(_zkAddr), clientConfig);\n+      if (Boolean.getBoolean(SystemPropertyKeys.MULTI_ZK_ENABLED) || _zkAddr == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceb20dc1ca964e3107ff89473a5ddeb613eeea8c"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NjE3Mzg4", "url": "https://github.com/apache/helix/pull/1243#pullrequestreview-464617388", "createdAt": "2020-08-10T21:59:52Z", "commit": {"oid": "ceb20dc1ca964e3107ff89473a5ddeb613eeea8c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4213, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}