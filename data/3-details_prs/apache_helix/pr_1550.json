{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NjkxNjcz", "number": 1550, "title": "Controller-side Task Current State Migration", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1549 (Partially)\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nTo address excessive ZooKeeper reads caused by task framework CurrentState updates, it is proposed to move task framework CurrentStates to their separate path.\nThe change is divided to multiple phases. This is the first phase, where the main focus of the changes are on the controller side. These changes should be backward compatible, and should not break anything even without further changes on participant sides\nTests\n\n The following tests are written for this issue:\n\n(List the names of added unit/integration tests)\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[INFO] Tests run: 1250, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5,108.977 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 1250, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:25 h\n[INFO] Finished at: 2020-12-01T12:14:17-08:00\n[INFO] ------------------------------------------------------------------------\n\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-11-24T19:00:00Z", "url": "https://github.com/apache/helix/pull/1550", "merged": true, "mergeCommit": {"oid": "31d522be812385ffabf454c8cd39197d88a3ff26"}, "closed": true, "closedAt": "2020-12-08T22:31:13Z", "author": {"login": "NealSun96"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdftBOMgH2gAyNTI2NjkxNjczOjg0OWZhMjc2NjA4ZGRjYTFkZjA1YmU3MTRkYjdjNTZmZDExYzQ4OTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkOVv0AFqTU0NzUwNTc4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "849fa276608ddca1df05be714db7c56fd11c4899", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/849fa276608ddca1df05be714db7c56fd11c4899", "committedDate": "2020-11-24T17:15:57Z", "message": "Current State Moving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5d6286bbdd6334f162f3b813fc932f007349dc2", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/c5d6286bbdd6334f162f3b813fc932f007349dc2", "committedDate": "2020-11-24T17:15:57Z", "message": "test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4032b287aa567111e36858f8f797d3ab97b2f70", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/b4032b287aa567111e36858f8f797d3ab97b2f70", "committedDate": "2020-11-24T17:15:57Z", "message": "Property Key incorrect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6156220b00b2de6198f41a74a90100de1ada54d2", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/6156220b00b2de6198f41a74a90100de1ada54d2", "committedDate": "2020-11-24T17:15:57Z", "message": "Fix things"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9edc6adb9a46a8e38cfbd2c0c5c33aa79697a155", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/9edc6adb9a46a8e38cfbd2c0c5c33aa79697a155", "committedDate": "2020-11-24T17:15:57Z", "message": "remove participant side change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "171aef9918c6c2f4611a6c1392e62813ca079a00", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/171aef9918c6c2f4611a6c1392e62813ca079a00", "committedDate": "2020-11-24T17:15:57Z", "message": "bug fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f644e540210f988ae2f4d5b54dc681eac84915d0", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/f644e540210f988ae2f4d5b54dc681eac84915d0", "committedDate": "2020-11-24T17:19:05Z", "message": "Fix watcher test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3ODIyNTIx", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-537822521", "createdAt": "2020-11-24T19:06:37Z", "commit": {"oid": "f644e540210f988ae2f4d5b54dc681eac84915d0"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOTowNjozN1rOH5RQYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOToxNjoyMVrOH5RlRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxMzYwMg==", "bodyText": "Unused import?", "url": "https://github.com/apache/helix/pull/1550#discussion_r529813602", "createdAt": "2020-11-24T19:06:37Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/BaseControllerDataProvider.java", "diffHunk": "@@ -44,6 +44,7 @@\n import org.apache.helix.common.caches.CurrentStateCache;\n import org.apache.helix.common.caches.InstanceMessagesCache;\n import org.apache.helix.common.caches.PropertyCache;\n+import org.apache.helix.common.caches.TaskCurrentStateCache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f644e540210f988ae2f4d5b54dc681eac84915d0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxNzEwOA==", "bodyText": "Why do we need to refreh here? Can TaskCurrentState get refreshed like regular current states?", "url": "https://github.com/apache/helix/pull/1550#discussion_r529817108", "createdAt": "2020-11-24T19:13:02Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/WorkflowControllerDataProvider.java", "diffHunk": "@@ -78,14 +82,17 @@ private void refreshClusterStateChangeFlags(Set<HelixConstants.ChangeType> prope\n         // This check (and set) is necessary for now since the current state flag in\n         // _propertyDataChangedMap is not used by the BaseControllerDataProvider for now.\n         _propertyDataChangedMap.get(HelixConstants.ChangeType.CURRENT_STATE).getAndSet(false)\n-            || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE).getAndSet(false)\n-            || propertyRefreshed.contains(HelixConstants.ChangeType.CURRENT_STATE)\n+            || _propertyDataChangedMap.get(HelixConstants.ChangeType.TASK_CURRENT_STATE)\n+            .getAndSet(false) || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE)\n+            .getAndSet(false) || propertyRefreshed.contains(HelixConstants.ChangeType.CURRENT_STATE)\n+            || propertyRefreshed.contains(HelixConstants.ChangeType.TASK_CURRENT_STATE)\n             || propertyRefreshed.contains(HelixConstants.ChangeType.LIVE_INSTANCE);\n   }\n \n   public synchronized void refresh(HelixDataAccessor accessor) {\n     long startTime = System.currentTimeMillis();\n     Set<HelixConstants.ChangeType> propertyRefreshed = super.doRefresh(accessor);\n+    _taskCurrentStateCache.refresh(accessor, getLiveInstanceCache().getPropertyMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f644e540210f988ae2f4d5b54dc681eac84915d0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxNzk4Nw==", "bodyText": "Assuming we only refresh the task current state for the task pipeline then I got my answer to the above question? \ud83d\udc4d", "url": "https://github.com/apache/helix/pull/1550#discussion_r529817987", "createdAt": "2020-11-24T19:14:41Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -89,6 +90,13 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceSessionId = instance.getEphemeralOwner();\n \n       // update current states.\n+      // Like ResourceComputationStage, we give priority to regular resources, so update task ones\n+      // first and allow regular ones to overwrite if there's any name conflicts.\n+      if (_isTaskFrameworkPipeline) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f644e540210f988ae2f4d5b54dc681eac84915d0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxODk1MA==", "bodyText": "Good comment", "url": "https://github.com/apache/helix/pull/1550#discussion_r529818950", "createdAt": "2020-11-24T19:16:21Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/ResourceComputationStage.java", "diffHunk": "@@ -79,7 +79,25 @@ public void process(ClusterEvent event) throws Exception {\n \n     // It's important to get partitions from CurrentState as well since the\n     // idealState might be removed.\n-    processCurrentStates(cache, resourceMap, resourceToRebalance, idealStates, isTaskCache);\n+    Map<String, LiveInstance> availableInstances = cache.getLiveInstances();\n+    for (LiveInstance instance : availableInstances.values()) {\n+      String instanceName = instance.getInstanceName();\n+      String clientSessionId = instance.getEphemeralOwner();\n+\n+      Map<String, CurrentState> currentStateMap =\n+          cache.getCurrentState(instanceName, clientSessionId);\n+      processCurrentStates(currentStateMap, resourceMap, resourceToRebalance, idealStates,\n+          isTaskCache);\n+      // Duplicate resource names between regular and task resources may happen, but most likely\n+      // won't. If it does, let regular resources overwrite task resources. To avoid duplicate\n+      // resource overwriting, it's better to split regular and task pipelines entirely.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f644e540210f988ae2f4d5b54dc681eac84915d0"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31d63853bead4e6fb4c85fe163879fe5b2346f32", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/31d63853bead4e6fb4c85fe163879fe5b2346f32", "committedDate": "2020-11-24T19:39:40Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMTExOTUy", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-541111952", "createdAt": "2020-11-30T17:04:15Z", "commit": {"oid": "31d63853bead4e6fb4c85fe163879fe5b2346f32"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzowNDoxNVrOH8Ev-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzowODozOVrOH8E8XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NDQyNw==", "bodyText": "Both current state and task current state are using the same CurrentState. Logically it's fine, but it is really confusing. Is this the ultimate solution? Do we have plan to rename?", "url": "https://github.com/apache/helix/pull/1550#discussion_r532754427", "createdAt": "2020-11-30T17:04:15Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/main/java/org/apache/helix/PropertyKey.java", "diffHunk": "@@ -485,6 +486,52 @@ public PropertyKey currentState(String instanceName, String sessionId, String re\n       }\n     }\n \n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance and session. This key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d63853bead4e6fb4c85fe163879fe5b2346f32"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NzU5Ng==", "bodyText": "I have a high level question about this PR. It separates current states to different paths and update them separately. How do you ensure the backward compatibility? e.g., routing table provider listens to current state path change, but now task related current state changes are removed from that path, routing table provider does have a different behavior than before, right? This may be what you want? But still this is not backward compatible.", "url": "https://github.com/apache/helix/pull/1550#discussion_r532757596", "createdAt": "2020-11-30T17:08:39Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -89,6 +89,13 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceSessionId = instance.getEphemeralOwner();\n \n       // update current states.\n+      // Like ResourceComputationStage, we give priority to regular resources, so update task ones", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d63853bead4e6fb4c85fe163879fe5b2346f32"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjIyMzEw", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-541222310", "createdAt": "2020-11-30T19:25:47Z", "commit": {"oid": "31d63853bead4e6fb4c85fe163879fe5b2346f32"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/2f45672f996a68b36634f88b02619af26f7a42b4", "committedDate": "2020-12-01T00:04:40Z", "message": "remove non essential changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzk1OTU1", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-541395955", "createdAt": "2020-12-01T00:16:43Z", "commit": {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoxNjo0M1rOH8TClg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoxNjo0M1rOH8TClg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4ODU2Ng==", "bodyText": "This change is just a refactor: same code before and after.", "url": "https://github.com/apache/helix/pull/1550#discussion_r532988566", "createdAt": "2020-12-01T00:16:43Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/ResourceComputationStage.java", "diffHunk": "@@ -179,66 +197,53 @@ private void processJobConfigs(WorkflowControllerDataProvider taskDataCache, Map\n   /*\n    * Construct Resources based on CurrentStates and add them to resource maps\n    */\n-  private void processCurrentStates(BaseControllerDataProvider cache,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDAzMTY2", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-541403166", "createdAt": "2020-12-01T00:35:35Z", "commit": {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDA3NjIy", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-541407622", "createdAt": "2020-12-01T00:47:32Z", "commit": {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDo0NzozMlrOH8Tskw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDo1NTo0NFrOH8T3kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5OTMxNQ==", "bodyText": "Please remember to handle the instances are created but not have this path.", "url": "https://github.com/apache/helix/pull/1550#discussion_r532999315", "createdAt": "2020-12-01T00:47:32Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -193,6 +193,8 @@ public void addInstance(String clusterName, InstanceConfig instanceConfig) {\n \n     _zkClient.createPersistent(PropertyPathBuilder.instanceMessage(clusterName, nodeId), true);\n     _zkClient.createPersistent(PropertyPathBuilder.instanceCurrentState(clusterName, nodeId), true);\n+    _zkClient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMTE5MA==", "bodyText": "This \"else\" keyword is not necessary. You can have it as:\nif (xxx) {\nreturn xxx\n}\nreturn xxxx;", "url": "https://github.com/apache/helix/pull/1550#discussion_r533001190", "createdAt": "2020-12-01T00:53:04Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/PropertyKey.java", "diffHunk": "@@ -485,6 +486,52 @@ public PropertyKey currentState(String instanceName, String sessionId, String re\n       }\n     }\n \n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance and session. This key\n+     * is for TaskCurrentState specifically.\n+     * @param instanceName\n+     * @param sessionId\n+     * @return {@link PropertyKey}\n+     */\n+    public PropertyKey taskCurrentStates(String instanceName, String sessionId) {\n+      return new PropertyKey(TASKCURRENTSTATES, CurrentState.class, _clusterName, instanceName,\n+          sessionId);\n+    }\n+\n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance, session, and\n+     * resource. This key is for TaskCurrentState specifically.\n+     * @param instanceName\n+     * @param sessionId\n+     * @param resourceName\n+     * @return {@link PropertyKey}\n+     */\n+    public PropertyKey taskCurrentState(String instanceName, String sessionId, String resourceName) {\n+      return new PropertyKey(TASKCURRENTSTATES, CurrentState.class, _clusterName, instanceName,\n+          sessionId, resourceName);\n+    }\n+\n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance, session, resource,\n+     * and bucket name. This key is for TaskCurrentState specifically.\n+     * @param instanceName\n+     * @param sessionId\n+     * @param resourceName\n+     * @param bucketName\n+     * @return {@link PropertyKey}\n+     */\n+    public PropertyKey taskCurrentState(String instanceName, String sessionId, String resourceName,\n+        String bucketName) {\n+      if (bucketName == null) {\n+        return new PropertyKey(TASKCURRENTSTATES, CurrentState.class, _clusterName, instanceName,\n+            sessionId, resourceName);\n+\n+      } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMjEzMQ==", "bodyText": "This is same logic as regular current state, right? We can create two different object for CurrentStateCache instead of creating a new class", "url": "https://github.com/apache/helix/pull/1550#discussion_r533002131", "createdAt": "2020-12-01T00:55:44Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/common/caches/TaskCurrentStateCache.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.apache.helix.common.caches;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.apache.helix.HelixDataAccessor;\n+import org.apache.helix.PropertyKey;\n+import org.apache.helix.common.controllers.ControlContextProvider;\n+import org.apache.helix.model.CurrentState;\n+import org.apache.helix.model.LiveInstance;\n+\n+\n+/**\n+ * Cache to hold all task CurrentStates of a cluster.\n+ */\n+public class TaskCurrentStateCache extends ParticipantStateCache<CurrentState> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDE1NDE3", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-541415417", "createdAt": "2020-12-01T01:08:41Z", "commit": {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMTowODo0MVrOH8UIbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMTowODo0MVrOH8UIbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjQ0Nw==", "bodyText": "I would suggest we add a default implementation for this newly added API for backwards compatibility. I've noticed that a helix user ambry implements this interface. So if we don't add a default implementation, it'll break ambry build if they upgrades helix.\nAnd another benefit of default implementation is, we don't need to add an empty implementation in those classes like MockClusterManager in tests. Thus less changed files.", "url": "https://github.com/apache/helix/pull/1550#discussion_r533006447", "createdAt": "2020-12-01T01:08:41Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/HelixManager.java", "diffHunk": "@@ -229,6 +229,15 @@ void addCurrentStateChangeListener(CurrentStateChangeListener listener, String i\n   void addCurrentStateChangeListener(org.apache.helix.CurrentStateChangeListener listener, String instanceName,\n       String sessionId) throws Exception;\n \n+  /**\n+   * Uses CurrentStateChangeListener since TaskCurrentState shares the same CurrentState model\n+   * @see CurrentStateChangeListener#onStateChange(String, List, NotificationContext)\n+   * @param listener\n+   * @param instanceName\n+   */\n+  void addTaskCurrentStateChangeListener(CurrentStateChangeListener listener, String instanceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a16720a5f03a543754c65238d690f36bb788c0b7", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/a16720a5f03a543754c65238d690f36bb788c0b7", "committedDate": "2020-12-01T06:49:54Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/9f3abb9cca12266241593d849ce6b31b6b76ae89", "committedDate": "2020-12-01T18:36:37Z", "message": "Fix no node exceptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMTk5NDA3", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-542199407", "createdAt": "2020-12-01T18:52:16Z", "commit": {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODo1MjoxNlrOH87HQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODo1ODoyMlrOH87WOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTEyMg==", "bodyText": "So we already split them. Is this necessary to combine them into current state output? Can we just change the later logic get current state from cache?", "url": "https://github.com/apache/helix/pull/1550#discussion_r533645122", "createdAt": "2020-12-01T18:52:16Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -89,6 +89,13 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceSessionId = instance.getEphemeralOwner();\n \n       // update current states.\n+      // Like ResourceComputationStage, we give priority to regular resources, so update task ones\n+      // first and allow regular ones to overwrite if there's any name conflicts.\n+      if (_isTaskFrameworkPipeline) {\n+        Map<String, CurrentState> taskCurrentStateMap = ((WorkflowControllerDataProvider) cache)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0ODk1NQ==", "bodyText": "This changes the behavior, right? Can you elaborate what kind of scenario you will see this?", "url": "https://github.com/apache/helix/pull/1550#discussion_r533648955", "createdAt": "2020-12-01T18:58:22Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -527,8 +540,11 @@ public void invoke(NotificationContext changeContext) throws Exception {\n       _zkClient.unsubscribeChildChanges(path, this);\n     }\n \n-    // List of children could be empty, but won't be null.\n-    return _zkClient.getChildren(path);\n+    try {\n+      return _zkClient.getChildren(path);\n+    } catch (ZkNoNodeException e) {\n+      return null;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTEyNTE2", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-542512516", "createdAt": "2020-12-02T05:39:02Z", "commit": {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTozOTowMlrOH9LNrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTo1ODoxMlrOH9Lmeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwODkxMQ==", "bodyText": "nit, but might be important, can we just call it TASK_STATE for simplicity?", "url": "https://github.com/apache/helix/pull/1550#discussion_r533908911", "createdAt": "2020-12-02T05:39:02Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/HelixConstants.java", "diffHunk": "@@ -34,6 +34,7 @@\n     CLUSTER_CONFIG (PropertyType.CONFIGS),\n     LIVE_INSTANCE (PropertyType.LIVEINSTANCES),\n     CURRENT_STATE (PropertyType.CURRENTSTATES),\n+    TASK_CURRENT_STATE (PropertyType.TASKCURRENTSTATES),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwOTU3Mw==", "bodyText": "Shall we call it jobName instead of resourceName?", "url": "https://github.com/apache/helix/pull/1550#discussion_r533909573", "createdAt": "2020-12-02T05:41:02Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/PropertyKey.java", "diffHunk": "@@ -485,6 +486,50 @@ public PropertyKey currentState(String instanceName, String sessionId, String re\n       }\n     }\n \n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance and session. This key\n+     * is for TaskCurrentState specifically.\n+     * @param instanceName\n+     * @param sessionId\n+     * @return {@link PropertyKey}\n+     */\n+    public PropertyKey taskCurrentStates(String instanceName, String sessionId) {\n+      return new PropertyKey(TASKCURRENTSTATES, CurrentState.class, _clusterName, instanceName,\n+          sessionId);\n+    }\n+\n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance, session, and\n+     * resource. This key is for TaskCurrentState specifically.\n+     * @param instanceName\n+     * @param sessionId\n+     * @param resourceName\n+     * @return {@link PropertyKey}\n+     */\n+    public PropertyKey taskCurrentState(String instanceName, String sessionId, String resourceName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxMzE2Ng==", "bodyText": "Seems you did not update the propertyRefreshed flag for _taskCurrentStateCache, so the refreshClusterStateChangeFlags() won't work as expected.", "url": "https://github.com/apache/helix/pull/1550#discussion_r533913166", "createdAt": "2020-12-02T05:51:16Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/WorkflowControllerDataProvider.java", "diffHunk": "@@ -78,14 +82,17 @@ private void refreshClusterStateChangeFlags(Set<HelixConstants.ChangeType> prope\n         // This check (and set) is necessary for now since the current state flag in\n         // _propertyDataChangedMap is not used by the BaseControllerDataProvider for now.\n         _propertyDataChangedMap.get(HelixConstants.ChangeType.CURRENT_STATE).getAndSet(false)\n-            || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE).getAndSet(false)\n-            || propertyRefreshed.contains(HelixConstants.ChangeType.CURRENT_STATE)\n+            || _propertyDataChangedMap.get(HelixConstants.ChangeType.TASK_CURRENT_STATE)\n+            .getAndSet(false) || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE)\n+            .getAndSet(false) || propertyRefreshed.contains(HelixConstants.ChangeType.CURRENT_STATE)\n+            || propertyRefreshed.contains(HelixConstants.ChangeType.TASK_CURRENT_STATE)\n             || propertyRefreshed.contains(HelixConstants.ChangeType.LIVE_INSTANCE);\n   }\n \n   public synchronized void refresh(HelixDataAccessor accessor) {\n     long startTime = System.currentTimeMillis();\n     Set<HelixConstants.ChangeType> propertyRefreshed = super.doRefresh(accessor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNDc1Nw==", "bodyText": "Strictly speaking, the pipelines are already split. So there won't be a separate project to split the pipeline further. Note that we have 2 pipelines already. The project we planned to do is split the code. So if you can do it in this PR, we will save some later work. Otherwise, any new code you added here using a branch might need to be re-write soon : )", "url": "https://github.com/apache/helix/pull/1550#discussion_r533914757", "createdAt": "2020-12-02T05:56:34Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -89,6 +89,13 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceSessionId = instance.getEphemeralOwner();\n \n       // update current states.\n+      // Like ResourceComputationStage, we give priority to regular resources, so update task ones\n+      // first and allow regular ones to overwrite if there's any name conflicts.\n+      if (_isTaskFrameworkPipeline) {\n+        Map<String, CurrentState> taskCurrentStateMap = ((WorkflowControllerDataProvider) cache)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTEyMg=="}, "originalCommit": {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNTI1OA==", "bodyText": "Since processCurrentStates already takes isTaskCache, can we put these complex into the processCurrentStates() method?", "url": "https://github.com/apache/helix/pull/1550#discussion_r533915258", "createdAt": "2020-12-02T05:58:12Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/ResourceComputationStage.java", "diffHunk": "@@ -79,7 +79,25 @@ public void process(ClusterEvent event) throws Exception {\n \n     // It's important to get partitions from CurrentState as well since the\n     // idealState might be removed.\n-    processCurrentStates(cache, resourceMap, resourceToRebalance, idealStates, isTaskCache);\n+    Map<String, LiveInstance> availableInstances = cache.getLiveInstances();\n+    for (LiveInstance instance : availableInstances.values()) {\n+      String instanceName = instance.getInstanceName();\n+      String clientSessionId = instance.getEphemeralOwner();\n+\n+      Map<String, CurrentState> currentStateMap =\n+          cache.getCurrentState(instanceName, clientSessionId);\n+      processCurrentStates(currentStateMap, resourceMap, resourceToRebalance, idealStates,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "065d91b727ea0ab5ecddcc9b63632033a54f7411", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/065d91b727ea0ab5ecddcc9b63632033a54f7411", "committedDate": "2020-12-02T20:37:11Z", "message": "rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67098bb2974371d57983837f8d53a4256c1d9c04", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/67098bb2974371d57983837f8d53a4256c1d9c04", "committedDate": "2020-12-02T22:07:23Z", "message": "resource computation refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b7c428dcd07113968fea59c9ec30e0f1f109778", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/9b7c428dcd07113968fea59c9ec30e0f1f109778", "committedDate": "2020-12-02T22:09:51Z", "message": "wrong flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961", "committedDate": "2020-12-03T01:24:14Z", "message": "remove propertyRefreshed line because it doesn't work"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MjY5MzI1", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-544269325", "createdAt": "2020-12-03T18:45:09Z", "commit": {"oid": "7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODo0NTowOVrOH-rvpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODo0NTowOVrOH-rvpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ5MDQ2OQ==", "bodyText": "Let's make the consistent format", "url": "https://github.com/apache/helix/pull/1550#discussion_r535490469", "createdAt": "2020-12-03T18:45:09Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/WorkflowControllerDataProvider.java", "diffHunk": "@@ -78,14 +82,16 @@ private void refreshClusterStateChangeFlags(Set<HelixConstants.ChangeType> prope\n         // This check (and set) is necessary for now since the current state flag in\n         // _propertyDataChangedMap is not used by the BaseControllerDataProvider for now.\n         _propertyDataChangedMap.get(HelixConstants.ChangeType.CURRENT_STATE).getAndSet(false)\n-            || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE).getAndSet(false)\n-            || propertyRefreshed.contains(HelixConstants.ChangeType.CURRENT_STATE)\n-            || propertyRefreshed.contains(HelixConstants.ChangeType.LIVE_INSTANCE);\n+            || _propertyDataChangedMap.get(HelixConstants.ChangeType.TASK_CURRENT_STATE)\n+            .getAndSet(false) || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE)\n+            .getAndSet(false) || propertyRefreshed\n+            .contains(HelixConstants.ChangeType.LIVE_INSTANCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MjkwNzA3", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-544290707", "createdAt": "2020-12-03T19:10:22Z", "commit": {"oid": "7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOToxMDoyMlrOH-sxQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOToxMDoyMlrOH-sxQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUwNzI2NA==", "bodyText": "This is for backward compatibility, right?\nCan we create another private method to get the full task current state smartly? So you don't need 2 processCurrentStateMap calls here.", "url": "https://github.com/apache/helix/pull/1550#discussion_r535507264", "createdAt": "2020-12-03T19:10:22Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/stages/ResourceComputationStage.java", "diffHunk": "@@ -189,56 +189,69 @@ private void processCurrentStates(BaseControllerDataProvider cache,\n         String instanceName = instance.getInstanceName();\n         String clientSessionId = instance.getEphemeralOwner();\n \n-        Map<String, CurrentState> currentStateMap =\n-            cache.getCurrentState(instanceName, clientSessionId);\n-        if (currentStateMap == null || currentStateMap.size() == 0) {\n-          continue;\n+        processCurrentStateMap(cache.getCurrentState(instanceName, clientSessionId), resourceMap,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjU0Nzkw", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-544654790", "createdAt": "2020-12-04T04:49:09Z", "commit": {"oid": "7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e1c8a4af2fde057550045f83f1ac7c299500ade", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/4e1c8a4af2fde057550045f83f1ac7c299500ade", "committedDate": "2020-12-04T05:48:26Z", "message": "split"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7921c8045339ec6be08b6625e36551b430a10da", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/a7921c8045339ec6be08b6625e36551b430a10da", "committedDate": "2020-12-04T18:54:37Z", "message": "bugfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c367b32560895764b2731f34720814ba73d9925", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/5c367b32560895764b2731f34720814ba73d9925", "committedDate": "2020-12-04T19:25:21Z", "message": "bugfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62f86bb60dd354f3617dc8f3ba2eb5637a4cb044", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/62f86bb60dd354f3617dc8f3ba2eb5637a4cb044", "committedDate": "2020-12-04T23:30:27Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c06688b62b58e097b830c87f6dc140e503237c9", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/7c06688b62b58e097b830c87f6dc140e503237c9", "committedDate": "2020-12-05T01:01:40Z", "message": "wrong fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9806091d41b12641cbfd467d36c2a3471f07a7c", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/e9806091d41b12641cbfd467d36c2a3471f07a7c", "committedDate": "2020-12-05T02:43:33Z", "message": "comments and stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d01094c85614b3f8c2a7f5c00593bea109a1df56", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/d01094c85614b3f8c2a7f5c00593bea109a1df56", "committedDate": "2020-12-07T17:14:09Z", "message": "formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTA1Nzgw", "url": "https://github.com/apache/helix/pull/1550#pullrequestreview-547505780", "createdAt": "2020-12-08T18:20:56Z", "commit": {"oid": "d01094c85614b3f8c2a7f5c00593bea109a1df56"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4143, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}