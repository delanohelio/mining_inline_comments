{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MTMwNTE3", "number": 1185, "title": "Fix ZkHelixClusterVerifier related resource leakage", "bodyText": "Issues\n\n My PR addresses the following Helix issues #1184\n\nDescription\n\n\n Here are some details about my PR, including screenshots of any UI changes:\nZkHelixClusterVerifier and its subclass built with ZK addres would\ncreate an internal ZkClient. Without properly closing the ZkClient\nor using global ZkClient in the test base. There would be four\nthreads and one ZooKeeper client object leaked. The leaked threads\nwould be in thousands and thus be one of the main contributor\npreventing the unit test from finishing. This pull request address\nthis issue.\n\n\nTests\n\n The following tests are written for this issue:\n\nNone\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nlog ERROR on\n[ERROR] Tests run: 1155, Failures: 4, Errors: 0, Skipped: 1, Time elapsed: 5,337.325 s <<< FAILURE! - in TestSuite\n[ERROR] testResetSnapshots(org.apache.helix.controller.changedetector.TestResourceChangeDetector)  Time elapsed: 300.01 s  <<< FAILURE!\norg.testng.internal.thread.ThreadTimeoutException: Method org.testng.internal.TestNGMethod.testResetSnapshots() didn't finish within the time-out 300000\nat org.apache.helix.controller.changedetector.TestResourceChangeDetector.testResetSnapshots(TestResourceChangeDetector.java:431)\n[ERROR] testWorkflowRunningTime(org.apache.helix.integration.task.TestWorkflowTimeout)  Time elapsed: 10.068 s  <<< FAILURE!\norg.apache.helix.HelixException: Workflow \"testWorkflowRunningTime\" context is empty or not in states: \"[TIMED_OUT]\", current state: \"COMPLETED\"\nat org.apache.helix.integration.task.TestWorkflowTimeout.testWorkflowRunningTime(TestWorkflowTimeout.java:66)\n[ERROR] testFixedTargetTaskAndDisabledRebalanceAndNodeAdded(org.apache.helix.integration.task.TestRebalanceRunningTask)  Time elapsed: 10.25 s  <<< FAILURE!\njava.lang.AssertionError: expected: but was:\nat org.apache.helix.integration.task.TestRebalanceRunningTask.testFixedTargetTaskAndDisabledRebalanceAndNodeAdded(TestRebalanceRunningTask.java:297)\n[ERROR] testLostZkConnection(org.apache.helix.integration.TestZkConnectionLost)  Time elapsed: 300.015 s  <<< FAILURE!\norg.testng.internal.thread.ThreadTimeoutException: Method org.testng.internal.TestNGMethod.testLostZkConnection() didn't finish within the time-out 300000\n[INFO]\n[INFO] Results:\n[INFO]\n[ERROR] Failures:\n[ERROR]   TestResourceChangeDetector.testResetSnapshots:431 \u00bb ThreadTimeout Method org.t...\n[ERROR]   TestZkConnectionLost.testLostZkConnection \u00bb ThreadTimeout Method org.testng.in...\n[ERROR]   TestRebalanceRunningTask.testFixedTargetTaskAndDisabledRebalanceAndNodeAdded:297 expected: but was:\n[ERROR]   TestWorkflowTimeout.testWorkflowRunningTime:66 \u00bb Helix Workflow \"testWorkflowR...\n[INFO]\n[ERROR] Tests run: 1155, Failures: 4, Errors: 0, Skipped: 1\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:29 h\n[INFO] Finished at: 2020-07-30T22:21:18-07:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M3:test (default-test) on project helix-core: There are test failures.\n[ERROR]\n[ERROR] Please refer to /Users/ksun/dev_branch_helix/helix/helix-core/target/surefire-reports for the individual test results.\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\nksun-mn1:helix-core ksun$\n\nlog INFO on\n[ERROR] Tests run: 1154, Failures: 16, Errors: 0, Skipped: 8, Time elapsed: 6,344.539 s <<< FAILURE! - in TestSuite\n[ERROR] testDisableDelayRebalanceInCluster(org.apache.helix.integration.rebalancer.WagedRebalancer.TestDelayedWagedRebalanceWithDisabledInstance)  Time elapsed: 1.26 s  <<< FAILURE!\njava.lang.AssertionError: Test-DB-createTestDBs0's best possible assignment is null for partition Test-DB-createTestDBs0_0 expected: but was:\nat org.apache.helix.integration.rebalancer.WagedRebalancer.TestDelayedWagedRebalanceWithDisabledInstance.testDisableDelayRebalanceInCluster(TestDelayedWagedRebalanceWithDisabledInstance.java:88)\n[ERROR] testPartitionMovementAfterDelayTime(org.apache.helix.integration.rebalancer.WagedRebalancer.TestDelayedWagedRebalanceWithDisabledInstance)  Time elapsed: 1.076 s  <<< FAILURE!\njava.lang.AssertionError: Test-DB-createTestDBs0's best possible assignment is null for partition Test-DB-createTestDBs0_0 expected: but was:\nat org.apache.helix.integration.rebalancer.WagedRebalancer.TestDelayedWagedRebalanceWithDisabledInstance.testPartitionMovementAfterDelayTime(TestDelayedWagedRebalanceWithDisabledInstance.java:82)\n[ERROR] testAddZone(org.apache.helix.integration.rebalancer.WagedRebalancer.TestWagedRebalanceFaultZone)  Time elapsed: 0.54 s  <<< FAILURE!\njava.lang.NullPointerException\nat org.apache.helix.integration.rebalancer.WagedRebalancer.TestWagedRebalanceFaultZone.validateZoneAndTagIsolation(TestWagedRebalanceFaultZone.java:327)\nat org.apache.helix.integration.rebalancer.WagedRebalancer.TestWagedRebalanceFaultZone.validate(TestWagedRebalanceFaultZone.java:315)\nat org.apache.helix.integration.rebalancer.WagedRebalancer.TestWagedRebalanceFaultZone.testAddZone(TestWagedRebalanceFaultZone.java:239)\n[ERROR] testRebalancerReset(org.apache.helix.integration.rebalancer.WagedRebalancer.TestWagedRebalance)  Time elapsed: 5.844 s  <<< FAILURE!\njava.lang.AssertionError: expected: but was:\nat org.apache.helix.integration.rebalancer.WagedRebalancer.TestWagedRebalance.validate(TestWagedRebalance.java:646)\nat org.apache.helix.integration.rebalancer.WagedRebalancer.TestWagedRebalance.testRebalancerReset(TestWagedRebalance.java:611)\n[ERROR] testAddZone(org.apache.helix.integration.rebalancer.WagedRebalancer.TestWagedRebalanceTopologyAware)  Time elapsed: 0.633 s  <<< FAILURE!\njava.lang.NullPointerException\nat org.apache.helix.integration.rebalancer.WagedRebalancer.TestWagedRebalanceTopologyAware.testAddZone(TestWagedRebalanceTopologyAware.java:112)\n[ERROR] testClusterExpansion(org.apache.helix.integration.rebalancer.PartitionMigration.TestExpandCluster)  Time elapsed: 12.021 s  <<< FAILURE!\njava.lang.AssertionError: expected: but was:\nat org.apache.helix.integration.rebalancer.PartitionMigration.TestExpandCluster.testClusterExpansion(TestExpandCluster.java:61)\n[ERROR] testLackEnoughRacks(org.apache.helix.integration.rebalancer.CrushRebalancers.TestCrushAutoRebalance)  Time elapsed: 1.201 s  <<< FAILURE!\njava.lang.AssertionError: expected:<2> but was:<1>\nat org.apache.helix.integration.rebalancer.CrushRebalancers.TestCrushAutoRebalance.validateZoneAndTagIsolation(TestCrushAutoRebalance.java:293)\nat org.apache.helix.integration.rebalancer.CrushRebalancers.TestCrushAutoRebalance.testLackEnoughRacks(TestCrushAutoRebalance.java:259)\n[ERROR] test(org.apache.helix.integration.rebalancer.CrushRebalancers.TestCrushAutoRebalanceTopoplogyAwareDisabled)  Time elapsed: 6.005 s  <<< FAILURE!\njava.lang.AssertionError: expected: but was:\nat org.apache.helix.integration.rebalancer.CrushRebalancers.TestCrushAutoRebalanceTopoplogyAwareDisabled.test(TestCrushAutoRebalanceTopoplogyAwareDisabled.java:66)\n[ERROR] testP2PStateTransitionEnabled(org.apache.helix.integration.messaging.TestP2PNoDuplicatedMessage)  Time elapsed: 39.132 s  <<< FAILURE!\njava.lang.AssertionError: expected:<2200> but was:<1754>\nat org.apache.helix.integration.messaging.TestP2PNoDuplicatedMessage.testP2PStateTransitionEnabled(TestP2PNoDuplicatedMessage.java:174)\n[ERROR] afterMethod(org.apache.helix.tools.TestClusterStateVerifier)  Time elapsed: 1.262 s  <<< FAILURE!\njava.lang.IllegalStateException: ZkClient already closed!\nat org.apache.helix.tools.TestClusterStateVerifier.afterMethod(TestClusterStateVerifier.java:98)\n[ERROR] beforeClass(org.apache.helix.integration.rebalancer.TestAutoRebalancePartitionLimit)  Time elapsed: 1.726 s  <<< FAILURE!\njava.lang.AssertionError: expected: but was:\nat org.apache.helix.integration.rebalancer.TestAutoRebalancePartitionLimit.beforeClass(TestAutoRebalancePartitionLimit.java:80)\n[ERROR] testEnableCompressionResource(org.apache.helix.integration.TestEnableCompression)  Time elapsed: 139.954 s  <<< FAILURE!\njava.lang.AssertionError: expected: but was:\nat org.apache.helix.integration.TestEnableCompression.testEnableCompressionResource(TestEnableCompression.java:117)\n[ERROR] testWorkflowRunningTime(org.apache.helix.integration.task.TestWorkflowTimeout)  Time elapsed: 10.073 s  <<< FAILURE!\norg.apache.helix.HelixException: Workflow \"testWorkflowRunningTime\" context is empty or not in states: \"[TIMED_OUT]\", current state: \"COMPLETED\"\nat org.apache.helix.integration.task.TestWorkflowTimeout.testWorkflowRunningTime(TestWorkflowTimeout.java:66)\n[ERROR] testLostZkConnection(org.apache.helix.integration.TestZkConnectionLost)  Time elapsed: 300.019 s  <<< FAILURE!\norg.testng.internal.thread.ThreadTimeoutException: Method org.testng.internal.TestNGMethod.testLostZkConnection() didn't finish within the time-out 300000\n[ERROR] test(org.apache.helix.integration.TestDisableCustomCodeRunner)  Time elapsed: 1.845 s  <<< FAILURE!\njava.lang.AssertionError: expected: but was:\nat org.apache.helix.integration.TestDisableCustomCodeRunner.test(TestDisableCustomCodeRunner.java:233)\n[ERROR] testClusterStatusMonitorLifecycle(org.apache.helix.monitoring.TestClusterStatusMonitorLifecycle)  Time elapsed: 6.693 s  <<< FAILURE!\njava.lang.AssertionError: expected: but was:\nat org.apache.helix.monitoring.TestClusterStatusMonitorLifecycle.testClusterStatusMonitorLifecycle(TestClusterStatusMonitorLifecycle.java:274)\n[INFO]\n[INFO] Results:\n[INFO]\n[ERROR] Failures:\n[ERROR]   TestDisableCustomCodeRunner.test:233 expected: but was:\n[ERROR]   TestEnableCompression.testEnableCompressionResource:117 expected: but was:\n[ERROR]   TestZkConnectionLost.testLostZkConnection \u00bb ThreadTimeout Method org.testng.in...\n[ERROR]   TestP2PNoDuplicatedMessage.testP2PStateTransitionEnabled:174 expected:<2200> but was:<1754>\n[ERROR]   TestCrushAutoRebalance.testLackEnoughRacks:259->validateZoneAndTagIsolation:293 expected:<2> but was:<1>\n[ERROR] org.apache.helix.integration.rebalancer.CrushRebalancers.TestCrushAutoRebalanceTopoplogyAwareDisabled.test(org.apache.helix.integration.rebalancer.CrushRebalancers.TestCrushAutoRebalanceTopoplogyAwareDisabled)\n[INFO]   Run 1: PASS\n[ERROR]   Run 2: TestCrushAutoRebalanceTopoplogyAwareDisabled.test:66->TestCrushAutoRebalanceNonRack.test:159 expected: but was:\n[INFO]\n[ERROR]   TestExpandCluster.testClusterExpansion:61 expected: but was:\n[ERROR]   TestAutoRebalancePartitionLimit.beforeClass:80 expected: but was:\n[ERROR]   TestDelayedWagedRebalanceWithDisabledInstance.testDisableDelayRebalanceInCluster:88->TestDelayedAutoRebalanceWithDisabledInstance.testDisableDelayRebalanceInCluster:270->ZkTestBase.validateMinActiveAndTopStateReplica:499 Test-DB-createTestDBs0's best possible assignment is null for partition Test-DB-createTestDBs0_0 expected: but was:\n[ERROR]   TestDelayedWagedRebalanceWithDisabledInstance.testPartitionMovementAfterDelayTime:82->TestDelayedAutoRebalanceWithDisabledInstance.testPartitionMovementAfterDelayTime:192->ZkTestBase.validateMinActiveAndTopStateReplica:499 Test-DB-createTestDBs0's best possible assignment is null for partition Test-DB-createTestDBs0_0 expected: but was:\n[ERROR]   TestWagedRebalance.testRebalancerReset:611->validate:646 expected: but was:\n[ERROR]   TestWagedRebalanceFaultZone.testAddZone:239->validate:315->validateZoneAndTagIsolation:327 NullPointer\n[ERROR]   TestWagedRebalanceTopologyAware.testAddZone:112->TestWagedRebalanceFaultZone.testAddZone:239->TestWagedRebalanceFaultZone.validate:315->TestWagedRebalanceFaultZone.validateZoneAndTagIsolation:328 \u00bb NullPointer\n[ERROR]   TestWorkflowTimeout.testWorkflowRunningTime:66 \u00bb Helix Workflow \"testWorkflowR...\n[ERROR]   TestClusterStatusMonitorLifecycle.testClusterStatusMonitorLifecycle:274 expected: but was:\n[ERROR]   TestClusterStateVerifier.afterMethod:98 \u00bb IllegalState ZkClient already closed...\n[INFO]\n[ERROR] Tests run: 1153, Failures: 16, Errors: 0, Skipped: 8\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:45 h\n[INFO] Finished at: 2020-07-30T16:47:39-07:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M3:test (default-test) on project helix-core: There are test failures.\n[ERROR]\n[ERROR] Please refer to /Users/ksun/dev_branch_helix/helix/helix-core/target/surefire-reports for the individual test results.\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\nksun-mn1:helix-core ksun$ mvn test\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation (Optional)\n\n In case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-07-29T00:48:40Z", "url": "https://github.com/apache/helix/pull/1185", "merged": true, "mergeCommit": {"oid": "56cf1259add5d00bb13fefb018a5de9679a1c6a7"}, "closed": true, "closedAt": "2020-08-06T02:47:56Z", "author": {"login": "kaisun2000"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5lgqqAFqTQ1NzI0MjMwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8CaQxAFqTQ2MjA0ODY5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MjQyMzAz", "url": "https://github.com/apache/helix/pull/1185#pullrequestreview-457242303", "createdAt": "2020-07-29T06:56:41Z", "commit": {"oid": "bf8abba3d01aa0623c3d289426708f3f9997b66b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo1Njo0MVrOG4rEYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzowMDowOFrOG4rKvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3OTA3Mw==", "bodyText": "@kaisun2000 Could you rebase this PR with master?", "url": "https://github.com/apache/helix/pull/1185#discussion_r462079073", "createdAt": "2020-07-29T06:56:41Z", "author": {"login": "huizhilu"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/callback/ZkAsyncCallbacks.java", "diffHunk": "@@ -120,6 +122,41 @@ public void handle() {\n     }\n   }\n \n+  public static class SyncCallbackHandler extends DefaultCallback implements AsyncCallback.VoidCallback {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf8abba3d01aa0623c3d289426708f3f9997b66b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4MDcwMg==", "bodyText": "It seems this log is for your debugging. Do we want to remove it then?", "url": "https://github.com/apache/helix/pull/1185#discussion_r462080702", "createdAt": "2020-07-29T07:00:08Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/ClusterManager.java", "diffHunk": "@@ -74,7 +81,8 @@ public void syncStart() {\n \n     _watcher = new Thread(this);\n     _watcher.setName(String\n-        .format(\"ClusterManager_Watcher_%s_%s_%s\", _clusterName, _instanceName, _type.name()));\n+        .format(\"ClusterManager_Watcher_%s_%s_%s_%d\", _clusterName, _instanceName, _type.name(), _uid));\n+    LOG.info(\"ClusterManager_watcher_{}_{}_{}_{} started, stacktrace {}\", _clusterName, _instanceName, _type.name(), _uid, Thread.currentThread().getStackTrace());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf8abba3d01aa0623c3d289426708f3f9997b66b"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf8abba3d01aa0623c3d289426708f3f9997b66b", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/bf8abba3d01aa0623c3d289426708f3f9997b66b", "committedDate": "2020-07-29T00:31:32Z", "message": "Eliminate resource leak related to ZkHelixClusterVerifier (#1184)\n\nZkHelixClusterVerifier and its subclass built with ZK addres would\ncreate an internal ZkClient. Without properly closing the ZkClient\nor using global ZkClient in the test base. There would be four\nthreads and one ZooKeeper client object leaked. The leaked threads\nwould be in thousands and thus be one of the main contributor\npreventing the unit test from finishing. This pull request address\nthis issue."}, "afterCommit": {"oid": "27d985b183c55332c1c1d87fcf2d0a70cd4f7618", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/27d985b183c55332c1c1d87fcf2d0a70cd4f7618", "committedDate": "2020-07-30T20:09:16Z", "message": "Eliminate resource leak related to ZkHelixClusterVerifier (#1184)\n\nZkHelixClusterVerifier and its subclass built with ZK addres would\ncreate an internal ZkClient. Without properly closing the ZkClient\nor using global ZkClient in the test base. There would be four\nthreads and one ZooKeeper client object leaked. The leaked threads\nwould be in thousands and thus be one of the main contributor\npreventing the unit test from finishing. This pull request address\nthis issue."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjc4MDA3", "url": "https://github.com/apache/helix/pull/1185#pullrequestreview-461278007", "createdAt": "2020-08-05T01:22:45Z", "commit": {"oid": "14cb3603449c0339a3390e667cf5e7957ede41db"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMToyMjo0NVrOG720_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMjowMDowMlrOG73dCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxNzQ3MA==", "bodyText": "AfterSuite is done after all test classes have been executed. So if you attach the class name, it won't be very informative, IMHO. What's the usage of this log?", "url": "https://github.com/apache/helix/pull/1185#discussion_r465417470", "createdAt": "2020-08-05T01:22:45Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/common/ZkTestBase.java", "diffHunk": "@@ -200,6 +200,7 @@ private void startZooKeeper(int i)\n \n   @AfterSuite\n   public void afterSuite() throws IOException {\n+    System.out.println(\"afterSuite \" + getClass().getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14cb3603449c0339a3390e667cf5e7957ede41db"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxODMxNw==", "bodyText": "Just curious, why somewhere we use _gZkCLient, but other places we keep using the ZK_ADDR?\nIf this is because of the test creates more ZKServers, then will the people who add more verifiers with the raw address make more leakage later?", "url": "https://github.com/apache/helix/pull/1185#discussion_r465418317", "createdAt": "2020-08-05T01:25:34Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestDriver.java", "diffHunk": "@@ -246,7 +246,11 @@ public static void verifyCluster(String uniqClusterName, long beginTime, long ti\n \n     ZkHelixClusterVerifier verifier =\n         new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14cb3603449c0339a3390e667cf5e7957ede41db"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxODgyNw==", "bodyText": "I don't think watcher is created here. It was created when sync start is called.", "url": "https://github.com/apache/helix/pull/1185#discussion_r465418827", "createdAt": "2020-08-05T01:27:37Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/ClusterManager.java", "diffHunk": "@@ -51,6 +55,9 @@ protected ClusterManager(String zkAddr, String clusterName, String instanceName,\n     _clusterName = clusterName;\n     _instanceName = instanceName;\n     _type = type;\n+    _uid = UID.getAndIncrement();\n+\n+    LOG.info(\"ClusterManager_watcher_{}_{}_{}_{} created, stacktrace {}\", _clusterName, _instanceName, _type.name(), _uid, Thread.currentThread().getStackTrace());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14cb3603449c0339a3390e667cf5e7957ede41db"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxOTExNg==", "bodyText": "What's the usage of stacktrace? If this is for human debug, I would suggest making it debug log.", "url": "https://github.com/apache/helix/pull/1185#discussion_r465419116", "createdAt": "2020-08-05T01:28:40Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/ClusterManager.java", "diffHunk": "@@ -74,7 +81,8 @@ public void syncStart() {\n \n     _watcher = new Thread(this);\n     _watcher.setName(String\n-        .format(\"ClusterManager_Watcher_%s_%s_%s\", _clusterName, _instanceName, _type.name()));\n+        .format(\"ClusterManager_Watcher_%s_%s_%s_%d\", _clusterName, _instanceName, _type.name(), _uid));\n+    LOG.info(\"ClusterManager_watcher_{}_{}_{}_{} started, stacktrace {}\", _clusterName, _instanceName, _type.name(), _uid, Thread.currentThread().getStackTrace());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4MDcwMg=="}, "originalCommit": {"oid": "bf8abba3d01aa0623c3d289426708f3f9997b66b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyNTU4OA==", "bodyText": "This is not testing code, please be careful not to pollute the log in production. I think recording this info in the related thread would be good enough to support detecting leakage in test.", "url": "https://github.com/apache/helix/pull/1185#discussion_r465425588", "createdAt": "2020-08-05T01:52:26Z", "author": {"login": "jiajunwang"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -215,13 +218,21 @@ protected ZkClient(IZkConnection zkConnection, int connectionTimeout, long opera\n       throw new NullPointerException(\"Zookeeper connection is null!\");\n     }\n \n+    _uid = UID.getAndIncrement();\n+    if (LOG.isInfoEnabled()) {\n+      LOG.info(\"ZkClient created with _uid {}, stacktrace {}\", _uid, Thread.currentThread().getStackTrace());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14cb3603449c0339a3390e667cf5e7957ede41db"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyNTcxNQ==", "bodyText": "Same here", "url": "https://github.com/apache/helix/pull/1185#discussion_r465425715", "createdAt": "2020-08-05T01:52:53Z", "author": {"login": "jiajunwang"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -215,13 +218,21 @@ protected ZkClient(IZkConnection zkConnection, int connectionTimeout, long opera\n       throw new NullPointerException(\"Zookeeper connection is null!\");\n     }\n \n+    _uid = UID.getAndIncrement();\n+    if (LOG.isInfoEnabled()) {\n+      LOG.info(\"ZkClient created with _uid {}, stacktrace {}\", _uid, Thread.currentThread().getStackTrace());\n+    }\n+\n     _connection = zkConnection;\n     _pathBasedZkSerializer = zkSerializer;\n     _operationRetryTimeoutInMillis = operationRetryTimeout;\n     _isNewSessionEventFired = false;\n \n     _asyncCallRetryThread = new ZkAsyncRetryThread(zkConnection.getServers());\n     _asyncCallRetryThread.start();\n+    if (LOG.isInfoEnabled()) {\n+      LOG.info(\"ZkClient created with _uid {}, _asyncCallRetryThread id {}\", _uid, _asyncCallRetryThread.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14cb3603449c0339a3390e667cf5e7957ede41db"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyNTc0OA==", "bodyText": "Same here", "url": "https://github.com/apache/helix/pull/1185#discussion_r465425748", "createdAt": "2020-08-05T01:52:59Z", "author": {"login": "jiajunwang"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -2157,6 +2166,8 @@ public void connect(final long maxMsToWaitUntilConnected, Watcher watcher)\n       _eventThread = new ZkEventThread(zkConnection.getServers());\n       _eventThread.start();\n \n+      LOG.info(\"ZkClient created with _uid {}, _eventThread {}\", _uid, _eventThread.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14cb3603449c0339a3390e667cf5e7957ede41db"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyNjcwMw==", "bodyText": "Remove", "url": "https://github.com/apache/helix/pull/1185#discussion_r465426703", "createdAt": "2020-08-05T01:56:23Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/resources/log4j.properties", "diffHunk": "@@ -37,5 +38,6 @@ log4j.logger.org.I0Itec=ERROR\n log4j.logger.org.apache=ERROR\n log4j.logger.com.noelios=ERROR\n log4j.logger.org.restlet=ERROR\n+#log4j.logger.org.apache.helix=INFO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14cb3603449c0339a3390e667cf5e7957ede41db"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyNzYxNQ==", "bodyText": "Do we need this by default? If this is just for human investigation, please don't enable it.\nIMO, the only condition we need the file is when we have a bot exam the log file and print some critical information automatically.", "url": "https://github.com/apache/helix/pull/1185#discussion_r465427615", "createdAt": "2020-08-05T01:59:42Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/resources/log4j.properties", "diffHunk": "@@ -17,7 +17,7 @@\n # under the License.\n #\n # Set root logger level to DEBUG and its only appender to R.\n-log4j.rootLogger=ERROR, C\n+log4j.rootLogger=ERROR, C, R", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14cb3603449c0339a3390e667cf5e7957ede41db"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyNzcyMQ==", "bodyText": "Same here, what's the usage of this output?", "url": "https://github.com/apache/helix/pull/1185#discussion_r465427721", "createdAt": "2020-08-05T02:00:02Z", "author": {"login": "jiajunwang"}, "path": "helix-lock/src/test/java/org/apache/helix/lock/helix/TestZKHelixNonblockingLock.java", "diffHunk": "@@ -76,6 +76,7 @@ public void beforeMethod() {\n \n   @AfterSuite\n   public void afterSuite() throws IOException {\n+    System.out.println(\"afterSuite \" + getClass().getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14cb3603449c0339a3390e667cf5e7957ede41db"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9b0553f1f1248f70e4a2679ed8d2eda3cef9d76", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/e9b0553f1f1248f70e4a2679ed8d2eda3cef9d76", "committedDate": "2020-08-05T19:45:02Z", "message": "Add sync() call first for new session handling (#1118)\n\nHelix may see stale data when session expires and get reconnected to\na slower ZKServer. This would cause various correctness problem.\nWe would call sync() to ZKserver first. This ensures Helix would\nnot see data that saw before."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4cc3b0db6529850983f36ba7943b10e8f94e72d", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/f4cc3b0db6529850983f36ba7943b10e8f94e72d", "committedDate": "2020-08-05T19:45:53Z", "message": "blocking version."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53bfd32662e8db9b4c2303c58ba5070516ce764f", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/53bfd32662e8db9b4c2303c58ba5070516ce764f", "committedDate": "2020-08-05T19:46:01Z", "message": "leverage AsyncCallbacks pattern; rebased"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb2c8c7c5cfedcfc97a5de948c1aba3546d006de", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/bb2c8c7c5cfedcfc97a5de948c1aba3546d006de", "committedDate": "2020-08-05T19:46:01Z", "message": "some further refactor based on feedback."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2209376c8b309b07966b1e66a527a22a2828df1f", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/2209376c8b309b07966b1e66a527a22a2828df1f", "committedDate": "2020-08-05T19:46:55Z", "message": "treat sync() metric the same as Zk server metric"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5b8543c167e22736f3d33ba3f77b64583437f80", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/e5b8543c167e22736f3d33ba3f77b64583437f80", "committedDate": "2020-08-05T19:47:02Z", "message": "added tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTcyNTA1", "url": "https://github.com/apache/helix/pull/1185#pullrequestreview-461972505", "createdAt": "2020-08-05T19:47:30Z", "commit": {"oid": "88555bc345e58d87c42f1853e51844636785306f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcd46eb8cb801086c4c3e44d7463c5af1d19b172", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/fcd46eb8cb801086c4c3e44d7463c5af1d19b172", "committedDate": "2020-08-05T19:47:46Z", "message": "mintor style fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34f24b6e592ca6b9d31d105b6746a7b8f9c4d11f", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/34f24b6e592ca6b9d31d105b6746a7b8f9c4d11f", "committedDate": "2020-08-05T19:47:51Z", "message": "remove redundant params to issueSync()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9814e570966487774393bf9e34e459aafd4d62dc", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/9814e570966487774393bf9e34e459aafd4d62dc", "committedDate": "2020-08-05T19:47:51Z", "message": "some change based on huizhi's feedback."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b2f06de4221eb9f6ee87c40bb99b2c681e593cb", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/1b2f06de4221eb9f6ee87c40bb99b2c681e593cb", "committedDate": "2020-08-05T19:47:51Z", "message": "change to make sure not understanding return code is logged."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18946c737f8475fdde1d0c905f07c7695c976d82", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/18946c737f8475fdde1d0c905f07c7695c976d82", "committedDate": "2020-08-05T19:49:59Z", "message": "Eliminate resource leak related to ZkHelixClusterVerifier (#1184)\n\nZkHelixClusterVerifier and its subclass built with ZK addres would\ncreate an internal ZkClient. Without properly closing the ZkClient\nor using global ZkClient in the test base. There would be four\nthreads and one ZooKeeper client object leaked. The leaked threads\nwould be in thousands and thus be one of the main contributor\npreventing the unit test from finishing. This pull request address\nthis issue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "300c2c9c533d45d7714efa9b71dd7a375f8a2df0", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/300c2c9c533d45d7714efa9b71dd7a375f8a2df0", "committedDate": "2020-08-05T19:50:03Z", "message": "invoke gc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75f68e9da144f5035cc8b47ceb3afe606f1aeb6c", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/75f68e9da144f5035cc8b47ceb3afe606f1aeb6c", "committedDate": "2020-08-05T19:51:02Z", "message": "stablize one test a little bit more if logging enabled. The gist\nis still verifier has timing issue. It may validate too early."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e797fb478a6bd00f95b9f0b362e8c1ac146d4520", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/e797fb478a6bd00f95b9f0b362e8c1ac146d4520", "committedDate": "2020-08-05T19:51:34Z", "message": "change logging based on jj's feedback."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88555bc345e58d87c42f1853e51844636785306f", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/88555bc345e58d87c42f1853e51844636785306f", "committedDate": "2020-08-05T03:14:28Z", "message": "change logging based on jj's feedback."}, "afterCommit": {"oid": "e797fb478a6bd00f95b9f0b362e8c1ac146d4520", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/e797fb478a6bd00f95b9f0b362e8c1ac146d4520", "committedDate": "2020-08-05T19:51:34Z", "message": "change logging based on jj's feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTc2Mzg2", "url": "https://github.com/apache/helix/pull/1185#pullrequestreview-461976386", "createdAt": "2020-08-05T19:53:40Z", "commit": {"oid": "88555bc345e58d87c42f1853e51844636785306f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo1NTowNFrOG8YX5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo1NTowNFrOG8YX5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk2NzA3Ng==", "bodyText": "Remove?", "url": "https://github.com/apache/helix/pull/1185#discussion_r465967076", "createdAt": "2020-08-05T19:55:04Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/common/ZkStandAloneCMTestBase.java", "diffHunk": "@@ -81,7 +81,8 @@ public void beforeClass() throws Exception {\n     _controller = new ClusterControllerManager(ZK_ADDR, CLUSTER_NAME, controllerName);\n     _controller.syncStart();\n \n-    _clusterVerifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkAddr(ZK_ADDR).build();\n+    //_clusterVerifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkAddr(ZK_ADDR).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e797fb478a6bd00f95b9f0b362e8c1ac146d4520"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTc4NjMx", "url": "https://github.com/apache/helix/pull/1185#pullrequestreview-461978631", "createdAt": "2020-08-05T19:57:08Z", "commit": {"oid": "e797fb478a6bd00f95b9f0b362e8c1ac146d4520"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo1NzowOFrOG8YcMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo1NzowOFrOG8YcMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk2ODE3Nw==", "bodyText": "What's the motivation for this change? Did we hit the limitation?\nOnce we have the test log cleaned up, we will have a smaller log and fit the default file size, right?", "url": "https://github.com/apache/helix/pull/1185#discussion_r465968177", "createdAt": "2020-08-05T19:57:08Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/resources/log4j.properties", "diffHunk": "@@ -27,6 +27,7 @@ log4j.appender.R=org.apache.log4j.RollingFileAppender\n log4j.appender.R.layout=org.apache.log4j.PatternLayout\n log4j.appender.R.layout.ConversionPattern=%5p [%C:%M] (%F:%L) - %m%n\n log4j.appender.R.File=target/ClusterManagerLogs/log.txt\n+log4j.appender.R.MaxBackupIndex=20", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e797fb478a6bd00f95b9f0b362e8c1ac146d4520"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cd79e2a4c5b961b832b05f48866d0067a722ecb", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/6cd79e2a4c5b961b832b05f48866d0067a722ecb", "committedDate": "2020-08-05T19:59:19Z", "message": "remove accidentally added log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aed8703aee909c32b87033a5b2d87292d66d7089", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/aed8703aee909c32b87033a5b2d87292d66d7089", "committedDate": "2020-08-05T20:04:35Z", "message": "remove comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDQ4Njkw", "url": "https://github.com/apache/helix/pull/1185#pullrequestreview-462048690", "createdAt": "2020-08-05T21:50:02Z", "commit": {"oid": "aed8703aee909c32b87033a5b2d87292d66d7089"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4597, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}