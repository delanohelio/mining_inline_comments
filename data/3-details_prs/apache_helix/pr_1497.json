{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExOTM0ODU4", "number": 1497, "title": "Fix TestRoutingTableProviderPeriodicRefresh.", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nThis is to mitigate #1250, but we still need a good complete fix.\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nThe test was unstable and do not clean up the environment one the failure. This PR tolerates more test results to be accepted as a good result.\nAlso, enhance the cleanup logic to prevent leakages.\nTests\n\n The following tests are written for this issue:\n\nTestRoutingTableProviderPeriodicRefresh passed\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\nNA, pure test changes.\nDocumentation (Optional)\n\nIn case of new functionality, my PR adds documentation in the following wiki page:\n\n(Link the GitHub wiki you added)\nCommits\n\nMy commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\nMy diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-10-29T00:31:32Z", "url": "https://github.com/apache/helix/pull/1497", "merged": true, "mergeCommit": {"oid": "a6057b1d8f8af36d099f908b0be35092e5bc48a1"}, "closed": true, "closedAt": "2020-10-29T19:51:44Z", "author": {"login": "jiajunwang"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXHABPgH2gAyNTExOTM0ODU4OjcxODM4MTA3ZmM5ODc4YmQyYTkzMTFiMzVlNmY0NzU3MDQ2YzVmMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXXlwagFqTUyMDAxNjUxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "71838107fc9878bd2a9311b35e6f4757046c5f10", "author": {"user": {"login": "jiajunwang", "name": "Jiajun Wang"}}, "url": "https://github.com/apache/helix/commit/71838107fc9878bd2a9311b35e6f4757046c5f10", "committedDate": "2020-10-29T00:26:51Z", "message": "Fix TestRoutingTableProviderPeriodicRefresh.\n\nThe test was unstable and do not clean up the environment one the failure. This PR tolerates more test results to be accepted as good result.\nAlso enhance the clean up logic to prevent leakages."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MjMwMjE2", "url": "https://github.com/apache/helix/pull/1497#pullrequestreview-519230216", "createdAt": "2020-10-29T00:43:29Z", "commit": {"oid": "71838107fc9878bd2a9311b35e6f4757046c5f10"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMDo0MzoyOVrOHqCiFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMDo0Mzo1OFrOHqCikA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg0MzczMg==", "bodyText": "Could you elaborate on the reason of failure before? Is it because periodic refresh sometimes take a bit more than 1000, so it's possible that newRefreshCount == prevRefreshCount; or, is it because periodic refresh may take less time, so it's possible that newRefreshCount == prevRefreshCount + 2?", "url": "https://github.com/apache/helix/pull/1497#discussion_r513843732", "createdAt": "2020-10-29T00:43:29Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProviderPeriodicRefresh.java", "diffHunk": "@@ -203,34 +208,32 @@ synchronized int getRefreshCount() {\n \n   @Test\n   public void testPeriodicRefresh() throws InterruptedException {\n-    // Wait so that initial refreshes finish (not triggered by periodic refresh timer)\n-    Thread.sleep(1000L);\n+    // Wait to ensure that the initial refreshes finish (not triggered by periodic refresh timer)\n+    Thread.sleep(REFRESH_PERIOD_MS * 2);\n \n     // Test short refresh\n     int prevRefreshCount = _routingTableProvider.getRefreshCount();\n-    // Wait for one timer duration\n-    Thread.sleep(1000L);\n-    // The timer should have gone off, incrementing the refresh count\n-    Assert.assertEquals(_routingTableProvider.getRefreshCount(), prevRefreshCount + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71838107fc9878bd2a9311b35e6f4757046c5f10"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg0Mzg1Ng==", "bodyText": "While this eliminates flakiness, would it be too loose to ensure correctness?", "url": "https://github.com/apache/helix/pull/1497#discussion_r513843856", "createdAt": "2020-10-29T00:43:58Z", "author": {"login": "NealSun96"}, "path": "helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProviderPeriodicRefresh.java", "diffHunk": "@@ -203,34 +208,32 @@ synchronized int getRefreshCount() {\n \n   @Test\n   public void testPeriodicRefresh() throws InterruptedException {\n-    // Wait so that initial refreshes finish (not triggered by periodic refresh timer)\n-    Thread.sleep(1000L);\n+    // Wait to ensure that the initial refreshes finish (not triggered by periodic refresh timer)\n+    Thread.sleep(REFRESH_PERIOD_MS * 2);\n \n     // Test short refresh\n     int prevRefreshCount = _routingTableProvider.getRefreshCount();\n-    // Wait for one timer duration\n-    Thread.sleep(1000L);\n-    // The timer should have gone off, incrementing the refresh count\n-    Assert.assertEquals(_routingTableProvider.getRefreshCount(), prevRefreshCount + 1);\n+    // Wait for more than one timer duration\n+    Thread.sleep((long) (REFRESH_PERIOD_MS * 1.5));\n+    // The timer should have gone off, incrementing the refresh count by one or two depends on the\n+    // timing.\n+    int newRefreshCount = _routingTableProvider.getRefreshCount();\n+    Assert.assertTrue(\n+        newRefreshCount == prevRefreshCount + 1 || newRefreshCount == prevRefreshCount + 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71838107fc9878bd2a9311b35e6f4757046c5f10"}, "originalPosition": 123}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NzcxNDg1", "url": "https://github.com/apache/helix/pull/1497#pullrequestreview-519771485", "createdAt": "2020-10-29T15:11:28Z", "commit": {"oid": "71838107fc9878bd2a9311b35e6f4757046c5f10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToxMToyOFrOHqgmyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToxMToyOFrOHqgmyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMzNjQ1Nw==", "bodyText": "why 1000ms, could 500ms, or even 100ms work? That will reduce the test time.", "url": "https://github.com/apache/helix/pull/1497#discussion_r514336457", "createdAt": "2020-10-29T15:11:28Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/test/java/org/apache/helix/integration/spectator/TestRoutingTableProviderPeriodicRefresh.java", "diffHunk": "@@ -64,6 +62,8 @@\n   private static final int PARTITION_NUMBER = 20;\n   private static final int REPLICA_NUMBER = 3;\n \n+  private static final long REFRESH_PERIOD_MS = 1000L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71838107fc9878bd2a9311b35e6f4757046c5f10"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMDE2NTEw", "url": "https://github.com/apache/helix/pull/1497#pullrequestreview-520016510", "createdAt": "2020-10-29T19:46:33Z", "commit": {"oid": "71838107fc9878bd2a9311b35e6f4757046c5f10"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4389, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}