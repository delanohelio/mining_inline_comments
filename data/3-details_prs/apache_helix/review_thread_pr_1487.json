{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMTQ2MTU0", "number": 1487, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMjoyODowN1rOEzBn5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNToyMjoyMFrOE3jvYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTM5NDMwOnYy", "diffSide": "RIGHT", "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMjoyODowN1rOHp_0-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMDozOTo1M1rOHqCeOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5OTQxNg==", "bodyText": "minor: \"helix.StateUpdateUtil.errorLogToZK.enabled\"?  We still log error to local logfile, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513799416", "createdAt": "2020-10-28T22:28:07Z", "author": {"login": "lei-xia"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg0Mjc0NQ==", "bodyText": "This is not minor, this is a MAJOR, a very good point. Let me make sure we have error level log out to logfile.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513842745", "createdAt": "2020-10-29T00:39:53Z", "author": {"login": "kaisun2000"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5OTQxNg=="}, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTU0MDk2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMzoyODo1NFrOHqBKtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMDo1MDoyOVrOHqCpdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgyMTM2NA==", "bodyText": "Please use HelixUtil.getSystemPropertyAsBoolean(), it allows you to specify the default value there in the method.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513821364", "createdAt": "2020-10-28T23:28:54Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -55,6 +56,12 @@\n public class StatusUpdateUtil {\n   static Logger _logger = LoggerFactory.getLogger(StatusUpdateUtil.class);\n \n+  public static final boolean ERROR_LOG_TO_ZK_ENABLED;\n+  static {\n+    String valueString = System.getProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"\");\n+    ERROR_LOG_TO_ZK_ENABLED = valueString.equals(\"enabled\") ? true : false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg0NTYyMg==", "bodyText": "There is only HelixUtil.getSystemPropertyAsInt/Long, no asBoolean(). Let me add as Boolean then, make the changes a little bit wider.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513845622", "createdAt": "2020-10-29T00:50:29Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -55,6 +56,12 @@\n public class StatusUpdateUtil {\n   static Logger _logger = LoggerFactory.getLogger(StatusUpdateUtil.class);\n \n+  public static final boolean ERROR_LOG_TO_ZK_ENABLED;\n+  static {\n+    String valueString = System.getProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"\");\n+    ERROR_LOG_TO_ZK_ENABLED = valueString.equals(\"enabled\") ? true : false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgyMTM2NA=="}, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTU3OTAxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMzo0NjowOVrOHqBg4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMDo0OToxOFrOHqCoJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgyNzA0Mg==", "bodyText": "Same here, use HelixUtil.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513827042", "createdAt": "2020-10-28T23:46:09Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "diffHunk": "@@ -66,6 +66,9 @@\n public class TestParticipantManager extends ZkTestBase {\n   private MBeanServer _server = ManagementFactory.getPlatformMBeanServer();\n   private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.setProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"enabled\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg0NTI4NA==", "bodyText": "In this test, here we are setting this property so that later test which asserting existence of error record in Zk won't fail. HelixUtil does not apply here as it is used to retrieve record.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513845284", "createdAt": "2020-10-29T00:49:18Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "diffHunk": "@@ -66,6 +66,9 @@\n public class TestParticipantManager extends ZkTestBase {\n   private MBeanServer _server = ManagementFactory.getPlatformMBeanServer();\n   private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.setProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"enabled\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgyNzA0Mg=="}, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTkwNDA5OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjowNzozMFrOHqEoBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDo0NDo1M1rOHsVAPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg3ODAyMg==", "bodyText": "Can you test enable it by the new config?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513878022", "createdAt": "2020-10-29T02:07:30Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+\n+import org.apache.helix.HelixConstants;\n+import org.apache.helix.PropertyPathBuilder;\n+import org.apache.helix.SystemPropertyKeys;\n+import org.apache.helix.TestHelper;\n+import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.messaging.handling.HelixStateTransitionHandler;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.zookeeper.datamodel.ZNRecord;\n+import org.apache.helix.zookeeper.zkclient.exception.ZkException;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestStatusUpdateUtil extends ZkTestBase {\n+  private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.clearProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED);\n+  }\n+\n+  @Test\n+  public void testDisableErrorLogByDefault() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg4MDU2MA==", "bodyText": "It is already tested in TestParticipantManager. testSessionExpiryInTransition assert the error log znode is not null. Do we need to add another explicit one here?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513880560", "createdAt": "2020-10-29T02:12:56Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+\n+import org.apache.helix.HelixConstants;\n+import org.apache.helix.PropertyPathBuilder;\n+import org.apache.helix.SystemPropertyKeys;\n+import org.apache.helix.TestHelper;\n+import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.messaging.handling.HelixStateTransitionHandler;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.zookeeper.datamodel.ZNRecord;\n+import org.apache.helix.zookeeper.zkclient.exception.ZkException;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestStatusUpdateUtil extends ZkTestBase {\n+  private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.clearProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED);\n+  }\n+\n+  @Test\n+  public void testDisableErrorLogByDefault() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg3ODAyMg=="}, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyNzQ4Mw==", "bodyText": "It is better to add both positive and negative tests in here. The main purpose of the other test is not testing error log though.", "url": "https://github.com/apache/helix/pull/1487#discussion_r514327483", "createdAt": "2020-10-29T15:00:01Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+\n+import org.apache.helix.HelixConstants;\n+import org.apache.helix.PropertyPathBuilder;\n+import org.apache.helix.SystemPropertyKeys;\n+import org.apache.helix.TestHelper;\n+import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.messaging.handling.HelixStateTransitionHandler;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.zookeeper.datamodel.ZNRecord;\n+import org.apache.helix.zookeeper.zkclient.exception.ZkException;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestStatusUpdateUtil extends ZkTestBase {\n+  private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.clearProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED);\n+  }\n+\n+  @Test\n+  public void testDisableErrorLogByDefault() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg3ODAyMg=="}, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MzUxOA==", "bodyText": "both added now.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516243518", "createdAt": "2020-11-02T20:44:53Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+\n+import org.apache.helix.HelixConstants;\n+import org.apache.helix.PropertyPathBuilder;\n+import org.apache.helix.SystemPropertyKeys;\n+import org.apache.helix.TestHelper;\n+import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.messaging.handling.HelixStateTransitionHandler;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.zookeeper.datamodel.ZNRecord;\n+import org.apache.helix.zookeeper.zkclient.exception.ZkException;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestStatusUpdateUtil extends ZkTestBase {\n+  private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.clearProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED);\n+  }\n+\n+  @Test\n+  public void testDisableErrorLogByDefault() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg3ODAyMg=="}, "originalCommit": {"oid": "cfa04ecefa590bb77ab16ece0ac13061bfa85e46"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTk5NDI1OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjozODowMVrOHqFfPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToyMzo1NlrOHsShCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5MjE1Ng==", "bodyText": "This import is not used.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513892156", "createdAt": "2020-10-29T02:38:01Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -62,6 +62,7 @@\n import org.apache.helix.model.ResourceAssignment;\n import org.apache.helix.model.ResourceConfig;\n import org.apache.helix.model.StateModelDefinition;\n+import org.apache.helix.tools.ClusterVerifiers.StrictMatchExternalViewVerifier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMjc2Mg==", "bodyText": "removed.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516202762", "createdAt": "2020-11-02T19:23:56Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -62,6 +62,7 @@\n import org.apache.helix.model.ResourceAssignment;\n import org.apache.helix.model.ResourceConfig;\n import org.apache.helix.model.StateModelDefinition;\n+import org.apache.helix.tools.ClusterVerifiers.StrictMatchExternalViewVerifier;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5MjE1Ng=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDAwNTc5OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0MToyM1rOHqFmsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToyNDo1NFrOHsSjFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NDA2Nw==", "bodyText": "We don't have to create this method to be redundant.\nSimply, Boolean.getBoolean(propertyKey, propertyDefaultValue) is already what is needed, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513894067", "createdAt": "2020-10-29T02:41:23Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -470,11 +471,26 @@ public static int getSystemPropertyAsInt(String propertyKey, int propertyDefault\n   }\n \n   /**\n-   * Get the value of system property\n+   * Get the boolean value of system property\n    * @param propertyKey\n    * @param propertyDefaultValue\n    * @return\n    */\n+  public static boolean getSystemPropertyAsBoolean(String propertyKey, String propertyDefaultValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU5ODIyNQ==", "bodyText": "+1. Unless you need some error handling in the function.", "url": "https://github.com/apache/helix/pull/1487#discussion_r514598225", "createdAt": "2020-10-29T22:13:59Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -470,11 +471,26 @@ public static int getSystemPropertyAsInt(String propertyKey, int propertyDefault\n   }\n \n   /**\n-   * Get the value of system property\n+   * Get the boolean value of system property\n    * @param propertyKey\n    * @param propertyDefaultValue\n    * @return\n    */\n+  public static boolean getSystemPropertyAsBoolean(String propertyKey, String propertyDefaultValue) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NDA2Nw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMzI4NQ==", "bodyText": "removed.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516203285", "createdAt": "2020-11-02T19:24:54Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/HelixUtil.java", "diffHunk": "@@ -470,11 +471,26 @@ public static int getSystemPropertyAsInt(String propertyKey, int propertyDefault\n   }\n \n   /**\n-   * Get the value of system property\n+   * Get the boolean value of system property\n    * @param propertyKey\n    * @param propertyDefaultValue\n    * @return\n    */\n+  public static boolean getSystemPropertyAsBoolean(String propertyKey, String propertyDefaultValue) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NDA2Nw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDAwNzU5OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0MTo1N1rOHqFnxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0MTo1N1rOHqFnxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NDM0Mw==", "bodyText": "Boolean.getBoolean(propertyKey, propertyDefaultValue) is simple and good enough?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513894343", "createdAt": "2020-10-29T02:41:57Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -55,6 +56,10 @@\n public class StatusUpdateUtil {\n   static Logger _logger = LoggerFactory.getLogger(StatusUpdateUtil.class);\n \n+  public static final boolean ERROR_LOG_TO_ZK_ENABLED =\n+      HelixUtil.getSystemPropertyAsBoolean(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"false\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDAxMDIyOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0Mjo0OFrOHqFpbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToyNzoyNVrOHsSoZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NDc2NA==", "bodyText": "Nit, record.toString() is redundant, record is enough as toString() would be auto called.", "url": "https://github.com/apache/helix/pull/1487#discussion_r513894764", "createdAt": "2020-10-29T02:42:48Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +565,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwNDY0Ng==", "bodyText": "changed.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516204646", "createdAt": "2020-11-02T19:27:25Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +565,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NDc2NA=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDAxODI2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0NToxMVrOHqFusA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDozNzoyN1rOHsUyAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NjExMg==", "bodyText": "Can you help me understand why you set the property here, but clear it in TestStatusUpdateUtil? Why do we not put both in the test method? Otherwise, the system config would affect other tests, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513896112", "createdAt": "2020-10-29T02:45:11Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "diffHunk": "@@ -66,6 +66,9 @@\n public class TestParticipantManager extends ZkTestBase {\n   private MBeanServer _server = ManagementFactory.getPlatformMBeanServer();\n   private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.setProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzODY3MA==", "bodyText": "public void testSessionExpiryInTransition() throws Exception {\n\n    String errPath = PropertyPathBuilder.instanceError(clusterName, \"localhost_12918\", oldSessionId,\n        \"TestDB0\", \"TestDB0_0\");\n    ZNRecord error = _gZkClient.readData(errPath);\n    Assert.assertNotNull(error,\n        \"InterruptedException should happen in old session since task is being cancelled during handleNewSession\");\n\n\nTo make sure the following test would work.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516238670", "createdAt": "2020-11-02T20:34:55Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "diffHunk": "@@ -66,6 +66,9 @@\n public class TestParticipantManager extends ZkTestBase {\n   private MBeanServer _server = ManagementFactory.getPlatformMBeanServer();\n   private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.setProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NjExMg=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzOTg3Mg==", "bodyText": "ERROR_LOG_TO_ZK_ENABLED in StatusUpdateUtil is static. I changed to use reflection to control the value now. So there is no need to set or clear it in TestStatusUpdateUtil anymore.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516239872", "createdAt": "2020-11-02T20:37:27Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "diffHunk": "@@ -66,6 +66,9 @@\n public class TestParticipantManager extends ZkTestBase {\n   private MBeanServer _server = ManagementFactory.getPlatformMBeanServer();\n   private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.setProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED, \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NjExMg=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDAyMDA1OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0NTo1MlrOHqFv8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToyODozNFrOHsSq2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NjQzMw==", "bodyText": "Missing apache license. Maybe you could setup apache license in your intellij?", "url": "https://github.com/apache/helix/pull/1487#discussion_r513896433", "createdAt": "2020-10-29T02:45:52Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwNTI3NQ==", "bodyText": "added.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516205275", "createdAt": "2020-11-02T19:28:34Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NjQzMw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDAyNzU0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0ODo0MVrOHqF1HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0ODo0MVrOHqF1HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5Nzc1Nw==", "bodyText": "Why assertTrue(True); which is always true? Just put a comment it is expected. Or to be more accurate, we can assert the exception message to ensure the exception is the expected one not others(same exception type but different message thrown from other places).", "url": "https://github.com/apache/helix/pull/1487#discussion_r513897757", "createdAt": "2020-10-29T02:48:41Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+\n+import org.apache.helix.HelixConstants;\n+import org.apache.helix.PropertyPathBuilder;\n+import org.apache.helix.SystemPropertyKeys;\n+import org.apache.helix.TestHelper;\n+import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.messaging.handling.HelixStateTransitionHandler;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.zookeeper.datamodel.ZNRecord;\n+import org.apache.helix.zookeeper.zkclient.exception.ZkException;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestStatusUpdateUtil extends ZkTestBase {\n+  private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.clearProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED);\n+  }\n+\n+  @Test\n+  public void testDisableErrorLogByDefault() throws Exception {\n+    StatusUpdateUtil _statusUpdateUtil = new StatusUpdateUtil();\n+    int n = 1;\n+\n+    Exception e = new RuntimeException(\"test exception\");\n+\n+    TestHelper.setupCluster(clusterName, ZK_ADDR, 12918, // participant port\n+        \"localhost\", // participant name prefix\n+        \"TestDB\", // resource name prefix\n+        1, // resources\n+        1, // partitions per resource\n+        n, // number of nodes\n+        1, // replicas\n+        \"MasterSlave\", true);\n+\n+    MockParticipantManager[] participants = new MockParticipantManager[n];\n+\n+    for (int i = 0; i < n; i++) {\n+      String instanceName = \"localhost_\" + (12918 + i);\n+      participants[i] = new MockParticipantManager(ZK_ADDR, clusterName, instanceName);\n+      participants[i].syncStart();\n+    }\n+\n+    Message message = new Message(Message.MessageType.STATE_TRANSITION, \"Some unique id\");\n+    message.setSrcName(\"cm-instance-0\");\n+    message.setTgtSessionId(participants[0].getSessionId());\n+    message.setFromState(\"Offline\");\n+    message.setToState(\"Slave\");\n+    message.setPartitionName(\"TestDB_0\");\n+    message.setMsgId(\"Some unique message id\");\n+    message.setResourceName(\"TestDB\");\n+    message.setTgtName(\"localhost_12918\");\n+    message.setStateModelDef(\"MasterSlave\");\n+    message.setStateModelFactoryName(HelixConstants.DEFAULT_STATE_MODEL_FACTORY);\n+    _statusUpdateUtil.logError(message, HelixStateTransitionHandler.class, e,\n+        \"test status update\", participants[0]);\n+\n+    // assert by default, not logged to Zookeeper\n+    String errPath = PropertyPathBuilder.instanceError(clusterName, \"localhost_12918\",\n+        participants[0].getSessionId(),\n+        \"TestDB\", \"TestDB_0\");\n+    try {\n+      ZNRecord error = _gZkClient.readData(errPath);\n+      Assert.fail(\"not expecting being able to send error logs to ZK by default.\");\n+    } catch (ZkException zke) {\n+      Assert.assertTrue(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDc2NjM1OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjozOTozM1rOHqNi5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDo0NzoxMlrOHsVEkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNDE2Nw==", "bodyText": "IMHO,\nif (!ERROR_LOG_TO_ZK_ENABLED) {\n_logger.error(\"StatusUpdate Error record: {}\", record.toString());\nreturn;\n}\n...", "url": "https://github.com/apache/helix/pull/1487#discussion_r514024167", "createdAt": "2020-10-29T06:39:33Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +565,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record.toString());\n+    if (!ERROR_LOG_TO_ZK_ENABLED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMTY4Ng==", "bodyText": "Not actually, even we disable writting to ZK, we still need to log into local log file, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r514321686", "createdAt": "2020-10-29T14:53:13Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +565,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record.toString());\n+    if (!ERROR_LOG_TO_ZK_ENABLED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNDE2Nw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQzMjg5OQ==", "bodyText": "I don't have a strong preference here.\nBut I think it depends on how we treat this util, is it a more powerful logger? Or it is a status updater like the name suggested.\nThe current implementation is treating this class as a pure status updater. There is no extra log done unless the update process fails. And I think it is clean. If a log is needed, then the caller shall call logger method in parallel with the publishErrorRecord() method.\nOn the other hand, if we want to twist this class to be a more powerful logger, then we will have mixed usage. Only part of the code is using it. And whether to use it or not is not clear.\nOverall, I treat the log here as a fallback logic when ERROR_LOG_TO_ZK_ENABLED == false. So it shall not log when the util still writes to ZK.", "url": "https://github.com/apache/helix/pull/1487#discussion_r515432899", "createdAt": "2020-10-31T00:30:44Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +565,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record.toString());\n+    if (!ERROR_LOG_TO_ZK_ENABLED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNDE2Nw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMDEwMw==", "bodyText": "So let us keep it this way. The reasoning is that source of truth logging is in log file.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516200103", "createdAt": "2020-11-02T19:18:39Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +565,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record.toString());\n+    if (!ERROR_LOG_TO_ZK_ENABLED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNDE2Nw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzOTAxMA==", "bodyText": "I'm fine with both designs. But as I mentioned, this change is half-way. Please either ensure that the source of truth is with the log for ALL the status util call (including log error, log status, etc.) or please don't log here otherwise the util is mixed up with some methods with log and the others don't.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516239010", "createdAt": "2020-11-02T20:35:38Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +565,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record.toString());\n+    if (!ERROR_LOG_TO_ZK_ENABLED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNDE2Nw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0NDYyNQ==", "bodyText": "Good point. The log are in publishStatusUpdateRecord and publishErrorRecord.\nHere publishStatusUpdateRecord would never log to Zk anymore. The participant side, it has trace level log to log4j, but not controller side. Let me revise it to the way that both controller and participant side has log to log4j then.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516244625", "createdAt": "2020-11-02T20:47:12Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +565,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record.toString());\n+    if (!ERROR_LOG_TO_ZK_ENABLED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNDE2Nw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDc3MzExOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjo0MTowM1rOHqNnfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDozMjo0M1rOHsUo4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNTM0Mw==", "bodyText": "This is a potential thread leak if test failure.", "url": "https://github.com/apache/helix/pull/1487#discussion_r514025343", "createdAt": "2020-10-29T06:41:03Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+\n+import org.apache.helix.HelixConstants;\n+import org.apache.helix.PropertyPathBuilder;\n+import org.apache.helix.SystemPropertyKeys;\n+import org.apache.helix.TestHelper;\n+import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.messaging.handling.HelixStateTransitionHandler;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.zookeeper.datamodel.ZNRecord;\n+import org.apache.helix.zookeeper.zkclient.exception.ZkException;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestStatusUpdateUtil extends ZkTestBase {\n+  private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.clearProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED);\n+  }\n+\n+  @Test\n+  public void testDisableErrorLogByDefault() throws Exception {\n+    StatusUpdateUtil _statusUpdateUtil = new StatusUpdateUtil();\n+    int n = 1;\n+\n+    Exception e = new RuntimeException(\"test exception\");\n+\n+    TestHelper.setupCluster(clusterName, ZK_ADDR, 12918, // participant port\n+        \"localhost\", // participant name prefix\n+        \"TestDB\", // resource name prefix\n+        1, // resources\n+        1, // partitions per resource\n+        n, // number of nodes\n+        1, // replicas\n+        \"MasterSlave\", true);\n+\n+    MockParticipantManager[] participants = new MockParticipantManager[n];\n+\n+    for (int i = 0; i < n; i++) {\n+      String instanceName = \"localhost_\" + (12918 + i);\n+      participants[i] = new MockParticipantManager(ZK_ADDR, clusterName, instanceName);\n+      participants[i].syncStart();\n+    }\n+\n+    Message message = new Message(Message.MessageType.STATE_TRANSITION, \"Some unique id\");\n+    message.setSrcName(\"cm-instance-0\");\n+    message.setTgtSessionId(participants[0].getSessionId());\n+    message.setFromState(\"Offline\");\n+    message.setToState(\"Slave\");\n+    message.setPartitionName(\"TestDB_0\");\n+    message.setMsgId(\"Some unique message id\");\n+    message.setResourceName(\"TestDB\");\n+    message.setTgtName(\"localhost_12918\");\n+    message.setStateModelDef(\"MasterSlave\");\n+    message.setStateModelFactoryName(HelixConstants.DEFAULT_STATE_MODEL_FACTORY);\n+    _statusUpdateUtil.logError(message, HelixStateTransitionHandler.class, e,\n+        \"test status update\", participants[0]);\n+\n+    // assert by default, not logged to Zookeeper\n+    String errPath = PropertyPathBuilder.instanceError(clusterName, \"localhost_12918\",\n+        participants[0].getSessionId(),\n+        \"TestDB\", \"TestDB_0\");\n+    try {\n+      ZNRecord error = _gZkClient.readData(errPath);\n+      Assert.fail(\"not expecting being able to send error logs to ZK by default.\");\n+    } catch (ZkException zke) {\n+      Assert.assertTrue(true);\n+    }\n+\n+    for (int i = 0; i < n; i++) {\n+      participants[i].syncStop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzNzUzOA==", "bodyText": "fixed in tearing down in afterClass()", "url": "https://github.com/apache/helix/pull/1487#discussion_r516237538", "createdAt": "2020-11-02T20:32:43Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/util/TestStatusUpdateUtil.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.apache.helix.util;\n+\n+import org.apache.helix.HelixConstants;\n+import org.apache.helix.PropertyPathBuilder;\n+import org.apache.helix.SystemPropertyKeys;\n+import org.apache.helix.TestHelper;\n+import org.apache.helix.common.ZkTestBase;\n+import org.apache.helix.integration.manager.MockParticipantManager;\n+import org.apache.helix.messaging.handling.HelixStateTransitionHandler;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.zookeeper.datamodel.ZNRecord;\n+import org.apache.helix.zookeeper.zkclient.exception.ZkException;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+public class TestStatusUpdateUtil extends ZkTestBase {\n+  private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.clearProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_LOG_ENABLED);\n+  }\n+\n+  @Test\n+  public void testDisableErrorLogByDefault() throws Exception {\n+    StatusUpdateUtil _statusUpdateUtil = new StatusUpdateUtil();\n+    int n = 1;\n+\n+    Exception e = new RuntimeException(\"test exception\");\n+\n+    TestHelper.setupCluster(clusterName, ZK_ADDR, 12918, // participant port\n+        \"localhost\", // participant name prefix\n+        \"TestDB\", // resource name prefix\n+        1, // resources\n+        1, // partitions per resource\n+        n, // number of nodes\n+        1, // replicas\n+        \"MasterSlave\", true);\n+\n+    MockParticipantManager[] participants = new MockParticipantManager[n];\n+\n+    for (int i = 0; i < n; i++) {\n+      String instanceName = \"localhost_\" + (12918 + i);\n+      participants[i] = new MockParticipantManager(ZK_ADDR, clusterName, instanceName);\n+      participants[i].syncStart();\n+    }\n+\n+    Message message = new Message(Message.MessageType.STATE_TRANSITION, \"Some unique id\");\n+    message.setSrcName(\"cm-instance-0\");\n+    message.setTgtSessionId(participants[0].getSessionId());\n+    message.setFromState(\"Offline\");\n+    message.setToState(\"Slave\");\n+    message.setPartitionName(\"TestDB_0\");\n+    message.setMsgId(\"Some unique message id\");\n+    message.setResourceName(\"TestDB\");\n+    message.setTgtName(\"localhost_12918\");\n+    message.setStateModelDef(\"MasterSlave\");\n+    message.setStateModelFactoryName(HelixConstants.DEFAULT_STATE_MODEL_FACTORY);\n+    _statusUpdateUtil.logError(message, HelixStateTransitionHandler.class, e,\n+        \"test status update\", participants[0]);\n+\n+    // assert by default, not logged to Zookeeper\n+    String errPath = PropertyPathBuilder.instanceError(clusterName, \"localhost_12918\",\n+        participants[0].getSessionId(),\n+        \"TestDB\", \"TestDB_0\");\n+    try {\n+      ZNRecord error = _gZkClient.readData(errPath);\n+      Assert.fail(\"not expecting being able to send error logs to ZK by default.\");\n+    } catch (ZkException zke) {\n+      Assert.assertTrue(true);\n+    }\n+\n+    for (int i = 0; i < n; i++) {\n+      participants[i].syncStop();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAyNTM0Mw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjY1MTY4OnYy", "diffSide": "RIGHT", "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1Mzo1N1rOHqfvUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToyMjoyNlrOHsSeNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMjI1Nw==", "bodyText": "Again, we are disabling log to ZK, not disabling error log (to log file) at all, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r514322257", "createdAt": "2020-10-29T14:53:57Z", "author": {"login": "lei-xia"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU5ODAyNA==", "bodyText": "We have a class ZkSystemPropertyKeys to hold this kind of system property. Please put this there.", "url": "https://github.com/apache/helix/pull/1487#discussion_r514598024", "createdAt": "2020-10-29T22:13:27Z", "author": {"login": "junkaixue"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMjI1Nw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMDgxMg==", "bodyText": "@lei-xia, so let us change the name to \" STATEUPDATEUTIL_ERROR_LOG2ZK_ENABLED?", "url": "https://github.com/apache/helix/pull/1487#discussion_r516200812", "createdAt": "2020-11-02T19:20:00Z", "author": {"login": "kaisun2000"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMjI1Nw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMjAzOQ==", "bodyText": "@dasahcc, ZkSystemPropertyKeys is for Zookeeper related. This is more to me like logging related.", "url": "https://github.com/apache/helix/pull/1487#discussion_r516202039", "createdAt": "2020-11-02T19:22:26Z", "author": {"login": "kaisun2000"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMjI1Nw=="}, "originalCommit": {"oid": "c0b3b1463548b8d9716db34780cb3c1dac1b52a9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTQ4NDcwOnYy", "diffSide": "RIGHT", "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzowODo0OVrOHwKBIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMTozNjo0NVrOHwwjoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NzgyNg==", "bodyText": "I thought more about this configuration. Can we directly make it an enum now instead of changing it later? Otherwise, we will need to deprecate this item and go through the painful backward compatibility checklist in the future.\nI suggest making it STATEUPDATE_ERROR_REPORTING_CHANNEL.", "url": "https://github.com/apache/helix/pull/1487#discussion_r520257826", "createdAt": "2020-11-10T03:08:49Z", "author": {"login": "jiajunwang"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG2ZK_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NzY2OQ==", "bodyText": "Can you illustrate the idea how to make it enum? Something like\nenum STATEUPDATE_ERROR_REPORTING_CHANNEL {\n    LOG4J,\n    LOG2ZK\n};\n\n\nand in the system property,\npublic static final String STATEUPDATEUTIL_ERROR_LOG2ZK_ENABLED = <enum value>;\nthen we will convert the system property to enum value?", "url": "https://github.com/apache/helix/pull/1487#discussion_r520747669", "createdAt": "2020-11-10T17:38:28Z", "author": {"login": "kaisun2000"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG2ZK_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NzgyNg=="}, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg0NTQ1NQ==", "bodyText": "STATEUPDATEUTIL_ERROR_PERSISTANCY_ENABLED", "url": "https://github.com/apache/helix/pull/1487#discussion_r520845455", "createdAt": "2020-11-10T20:12:10Z", "author": {"login": "kaisun2000"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG2ZK_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NzgyNg=="}, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4OTI0OA==", "bodyText": "changed.", "url": "https://github.com/apache/helix/pull/1487#discussion_r520889248", "createdAt": "2020-11-10T21:36:45Z", "author": {"login": "kaisun2000"}, "path": "helix-common/src/main/java/org/apache/helix/SystemPropertyKeys.java", "diffHunk": "@@ -82,4 +82,6 @@\n   // System Property Metadata Store Directory Server endpoint key\n   public static final String MSDS_SERVER_ENDPOINT_KEY =\n       MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY;\n+\n+  public static final String STATEUPDATEUTIL_ERROR_LOG2ZK_ENABLED = \"helix.StateUpdateUtil.errorLog.enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NzgyNg=="}, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTUwOTMzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzoyMToyOFrOHwKPOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMTozNjoyNVrOHwwjCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2MTQzMw==", "bodyText": "nit, we can move this line out of the if-else block too.", "url": "https://github.com/apache/helix/pull/1487#discussion_r520261433", "createdAt": "2020-11-10T03:21:28Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -492,47 +496,39 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n \n     Builder keyBuilder = accessor.keyBuilder();\n     if (!_recordedMessages.containsKey(message.getMsgId())) {\n-      if (isController) {\n-        accessor\n-            .updateProperty(keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey),\n-                new StatusUpdate(createMessageLogRecord(message)));\n+      ZNRecord statusUpdateRecord = createMessageLogRecord(message);\n+      PropertyKey propertyKey;\n \n+      if (isController) {\n+        propertyKey = keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey);\n+        accessor.updateProperty(propertyKey, new StatusUpdate(statusUpdateRecord));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4OTA5Ng==", "bodyText": "fixed.", "url": "https://github.com/apache/helix/pull/1487#discussion_r520889096", "createdAt": "2020-11-10T21:36:25Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -492,47 +496,39 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n \n     Builder keyBuilder = accessor.keyBuilder();\n     if (!_recordedMessages.containsKey(message.getMsgId())) {\n-      if (isController) {\n-        accessor\n-            .updateProperty(keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey),\n-                new StatusUpdate(createMessageLogRecord(message)));\n+      ZNRecord statusUpdateRecord = createMessageLogRecord(message);\n+      PropertyKey propertyKey;\n \n+      if (isController) {\n+        propertyKey = keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey);\n+        accessor.updateProperty(propertyKey, new StatusUpdate(statusUpdateRecord));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2MTQzMw=="}, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTUxMTgzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzoyMjo1M1rOHwKQrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMTozNjozNFrOHwwjPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2MTgwNw==", "bodyText": "same here.", "url": "https://github.com/apache/helix/pull/1487#discussion_r520261807", "createdAt": "2020-11-10T03:22:53Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -492,47 +496,39 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n \n     Builder keyBuilder = accessor.keyBuilder();\n     if (!_recordedMessages.containsKey(message.getMsgId())) {\n-      if (isController) {\n-        accessor\n-            .updateProperty(keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey),\n-                new StatusUpdate(createMessageLogRecord(message)));\n+      ZNRecord statusUpdateRecord = createMessageLogRecord(message);\n+      PropertyKey propertyKey;\n \n+      if (isController) {\n+        propertyKey = keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey);\n+        accessor.updateProperty(propertyKey, new StatusUpdate(statusUpdateRecord));\n       } else {\n-\n-        PropertyKey propertyKey =\n+        propertyKey =\n             keyBuilder.stateTransitionStatus(instanceName, sessionId, statusUpdateSubPath,\n                 statusUpdateKey);\n-\n-        ZNRecord statusUpdateRecord = createMessageLogRecord(message);\n-\n-        // For now write participant StatusUpdates to log4j.\n-        // we are using restlet as another data channel to report to controller.\n-        if (_logger.isTraceEnabled()) {\n-          _logger.trace(\"StatusUpdate path:\" + propertyKey.getPath() + \", updates:\"\n-              + statusUpdateRecord);\n-        }\n         accessor.updateProperty(propertyKey, new StatusUpdate(statusUpdateRecord));\n+      }\n \n+      if (_logger.isTraceEnabled()) {\n+        _logger.trace(\"StatusUpdate path:\" + propertyKey.getPath() + \", updates:\"\n+            + statusUpdateRecord);\n       }\n       _recordedMessages.put(message.getMsgId(), message.getMsgId());\n     }\n \n+    PropertyKey propertyKey;\n     if (isController) {\n-      accessor.updateProperty(\n-          keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey), new StatusUpdate(\n-              record));\n+      propertyKey = keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey);\n+      accessor.updateProperty(propertyKey, new StatusUpdate(record));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4OTE0OQ==", "bodyText": "fixed.", "url": "https://github.com/apache/helix/pull/1487#discussion_r520889149", "createdAt": "2020-11-10T21:36:34Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -492,47 +496,39 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n \n     Builder keyBuilder = accessor.keyBuilder();\n     if (!_recordedMessages.containsKey(message.getMsgId())) {\n-      if (isController) {\n-        accessor\n-            .updateProperty(keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey),\n-                new StatusUpdate(createMessageLogRecord(message)));\n+      ZNRecord statusUpdateRecord = createMessageLogRecord(message);\n+      PropertyKey propertyKey;\n \n+      if (isController) {\n+        propertyKey = keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey);\n+        accessor.updateProperty(propertyKey, new StatusUpdate(statusUpdateRecord));\n       } else {\n-\n-        PropertyKey propertyKey =\n+        propertyKey =\n             keyBuilder.stateTransitionStatus(instanceName, sessionId, statusUpdateSubPath,\n                 statusUpdateKey);\n-\n-        ZNRecord statusUpdateRecord = createMessageLogRecord(message);\n-\n-        // For now write participant StatusUpdates to log4j.\n-        // we are using restlet as another data channel to report to controller.\n-        if (_logger.isTraceEnabled()) {\n-          _logger.trace(\"StatusUpdate path:\" + propertyKey.getPath() + \", updates:\"\n-              + statusUpdateRecord);\n-        }\n         accessor.updateProperty(propertyKey, new StatusUpdate(statusUpdateRecord));\n+      }\n \n+      if (_logger.isTraceEnabled()) {\n+        _logger.trace(\"StatusUpdate path:\" + propertyKey.getPath() + \", updates:\"\n+            + statusUpdateRecord);\n       }\n       _recordedMessages.put(message.getMsgId(), message.getMsgId());\n     }\n \n+    PropertyKey propertyKey;\n     if (isController) {\n-      accessor.updateProperty(\n-          keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey), new StatusUpdate(\n-              record));\n+      propertyKey = keyBuilder.controllerTaskStatus(statusUpdateSubPath, statusUpdateKey);\n+      accessor.updateProperty(propertyKey, new StatusUpdate(record));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2MTgwNw=="}, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTI0OTYwOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoyMTo0MlrOHwuL_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMTozMjoxNVrOHwwadg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1MDQyOA==", "bodyText": "Do we really need this error log for the whole record? It may eat up the disk, imagine if znrecord is close to 1 MB. I am not sure if we really need the record for troubleshooting. Maybe logging the instanceName, updateSubPath, sessionId, etc. is good enough?", "url": "https://github.com/apache/helix/pull/1487#discussion_r520850428", "createdAt": "2020-11-10T20:21:42Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +556,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4NjkwMg==", "bodyText": "This is not a concern. Previously the issue is that N participant would write the log to one Zk quorum at the same time repeatedly. Here, we are writing to N participant at the same time. If this is a concern, we need to revisit all the participant side logging then.", "url": "https://github.com/apache/helix/pull/1487#discussion_r520886902", "createdAt": "2020-11-10T21:32:15Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -560,6 +556,10 @@ void publishStatusUpdateRecord(ZNRecord record, Message message, Level level,\n    */\n   void publishErrorRecord(ZNRecord record, String instanceName, String updateSubPath,\n       String updateKey, String sessionId, HelixDataAccessor accessor, boolean isController) {\n+    _logger.error(\"StatusUpdate Error record: {}\", record);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1MDQyOA=="}, "originalCommit": {"oid": "df89ed7c80801cbeaa978e8c31f0739fe079f675"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NjM5NzY0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjoyNDoxM1rOHw5VhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDo0OTowOFrOHw-H5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAzMzA5Mg==", "bodyText": "nit, private?\nSince we already doing reflection, I think making it private won't block the test, right?", "url": "https://github.com/apache/helix/pull/1487#discussion_r521033092", "createdAt": "2020-11-11T02:24:13Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -55,6 +56,9 @@\n public class StatusUpdateUtil {\n   static Logger _logger = LoggerFactory.getLogger(StatusUpdateUtil.class);\n \n+  public static final boolean ERROR_LOG_TO_ZK_ENABLED =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad369bf2706797c79e382192fe900775d5650f21"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEwOTcyNQ==", "bodyText": "Actually it is not the case. Making it private won't work as I just tested. I am not an expert in this area. If you know other trick, let me know.", "url": "https://github.com/apache/helix/pull/1487#discussion_r521109725", "createdAt": "2020-11-11T04:43:41Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -55,6 +56,9 @@\n public class StatusUpdateUtil {\n   static Logger _logger = LoggerFactory.getLogger(StatusUpdateUtil.class);\n \n+  public static final boolean ERROR_LOG_TO_ZK_ENABLED =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAzMzA5Mg=="}, "originalCommit": {"oid": "ad369bf2706797c79e382192fe900775d5650f21"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTExMTUyNA==", "bodyText": "This is not the case. Just tested, it does not work. I am not an expert in this area. Feel free to let me know if you know the trick here.", "url": "https://github.com/apache/helix/pull/1487#discussion_r521111524", "createdAt": "2020-11-11T04:49:08Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/main/java/org/apache/helix/util/StatusUpdateUtil.java", "diffHunk": "@@ -55,6 +56,9 @@\n public class StatusUpdateUtil {\n   static Logger _logger = LoggerFactory.getLogger(StatusUpdateUtil.class);\n \n+  public static final boolean ERROR_LOG_TO_ZK_ENABLED =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAzMzA5Mg=="}, "originalCommit": {"oid": "ad369bf2706797c79e382192fe900775d5650f21"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NjkyNzA2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNToyMjoyMFrOHw-oAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNToyMjoyMFrOHw-oAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTExOTc0NQ==", "bodyText": "The system property is JVM level. If we don't unset the config, later tests will be using this config. Maybe there are no tests using the config yet. But I suggest, as a good practice, we also unset the config to make unit tests isolated, ensuring other tests won't be impacted by this test's configs.", "url": "https://github.com/apache/helix/pull/1487#discussion_r521119745", "createdAt": "2020-11-11T05:22:20Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java", "diffHunk": "@@ -66,6 +66,9 @@\n public class TestParticipantManager extends ZkTestBase {\n   private MBeanServer _server = ManagementFactory.getPlatformMBeanServer();\n   private String clusterName = TestHelper.getTestClassName();\n+  static {\n+    System.setProperty(SystemPropertyKeys.STATEUPDATEUTIL_ERROR_PERSISTENCY_ENABLED, \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad369bf2706797c79e382192fe900775d5650f21"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1052, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}