{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MTk5MTM2", "number": 1114, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowNzoyNlrOEICX-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowNzoyNlrOEICX-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODYyOTY4OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/task/WorkflowDispatcher.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowNzoyNlrOGnwX8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxMTo0NFrOGnwjhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0MDIwOQ==", "bodyText": "workflowCtx.getWorkflowState() is not going to be null right? If it could return null, we should do a reverse check.\nAlso, for enums, == would be the standard for comparison vs using equals().", "url": "https://github.com/apache/helix/pull/1114#discussion_r444340209", "createdAt": "2020-06-23T16:07:26Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/WorkflowDispatcher.java", "diffHunk": "@@ -174,6 +174,16 @@ public void updateWorkflowStatus(String workflow, WorkflowConfig workflowCfg,\n       }\n       return;\n     }\n+\n+    // Step 6: handle workflow that should go IN_PROGRESS state after is has been resumed\n+    // This block is added to make sure if workflow/queue context state becomes IN_PROGRESS for the\n+    // case where A Queue which has been stopped before is just resumed and queue does not contain\n+    // any job that needs to be run.\n+    if (targetState.equals(TargetState.START)\n+        && workflowCtx.getWorkflowState().equals(TaskState.STOPPED)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c832d81005d9a528ea08263ad832e1b453727ae2"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0MjI2Nw==", "bodyText": "No it can't. If it is null, the method returns NOT_STARTED:\n  public TaskState getWorkflowState() {\n    String state = _record.getSimpleField(WorkflowContextProperties.STATE.name());\n    if (state == null) {\n      return TaskState.NOT_STARTED;\n    }\n\n    return TaskState.valueOf(state);\n  }", "url": "https://github.com/apache/helix/pull/1114#discussion_r444342267", "createdAt": "2020-06-23T16:10:24Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/task/WorkflowDispatcher.java", "diffHunk": "@@ -174,6 +174,16 @@ public void updateWorkflowStatus(String workflow, WorkflowConfig workflowCfg,\n       }\n       return;\n     }\n+\n+    // Step 6: handle workflow that should go IN_PROGRESS state after is has been resumed\n+    // This block is added to make sure if workflow/queue context state becomes IN_PROGRESS for the\n+    // case where A Queue which has been stopped before is just resumed and queue does not contain\n+    // any job that needs to be run.\n+    if (targetState.equals(TargetState.START)\n+        && workflowCtx.getWorkflowState().equals(TaskState.STOPPED)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0MDIwOQ=="}, "originalCommit": {"oid": "c832d81005d9a528ea08263ad832e1b453727ae2"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0MzE3NA==", "bodyText": "Thanks for the review. I will change it to ==", "url": "https://github.com/apache/helix/pull/1114#discussion_r444343174", "createdAt": "2020-06-23T16:11:44Z", "author": {"login": "alirezazamani"}, "path": "helix-core/src/main/java/org/apache/helix/task/WorkflowDispatcher.java", "diffHunk": "@@ -174,6 +174,16 @@ public void updateWorkflowStatus(String workflow, WorkflowConfig workflowCfg,\n       }\n       return;\n     }\n+\n+    // Step 6: handle workflow that should go IN_PROGRESS state after is has been resumed\n+    // This block is added to make sure if workflow/queue context state becomes IN_PROGRESS for the\n+    // case where A Queue which has been stopped before is just resumed and queue does not contain\n+    // any job that needs to be run.\n+    if (targetState.equals(TargetState.START)\n+        && workflowCtx.getWorkflowState().equals(TaskState.STOPPED)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0MDIwOQ=="}, "originalCommit": {"oid": "c832d81005d9a528ea08263ad832e1b453727ae2"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1196, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}