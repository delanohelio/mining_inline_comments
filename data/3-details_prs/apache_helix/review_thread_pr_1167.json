{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MjQ4OTE0", "number": 1167, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoxOToxMFrOERJLVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoyMzo1MVrOERJSPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDExNjA1OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/WagedRebalancer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoxOToxMFrOG1sckg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoxOToxMFrOG1sckg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1NTkyMg==", "bodyText": "The current baseline assignment record does not contain all resources assignment....", "url": "https://github.com/apache/helix/pull/1167#discussion_r458955922", "createdAt": "2020-07-22T17:19:10Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/WagedRebalancer.java", "diffHunk": "@@ -643,23 +643,28 @@ private void validateInput(ResourceControllerDataProvider clusterData,\n   private Map<String, ResourceAssignment> getBaselineAssignment(\n       AssignmentMetadataStore assignmentMetadataStore, CurrentStateOutput currentStateOutput,\n       Set<String> resources) throws HelixRebalanceException {\n-    Map<String, ResourceAssignment> currentBaseline = Collections.emptyMap();\n+    Map<String, ResourceAssignment> currentBaseline = new HashMap<>();\n     if (assignmentMetadataStore != null) {\n       try {\n         _stateReadLatency.startMeasuringLatency();\n-        currentBaseline = assignmentMetadataStore.getBaseline();\n+        currentBaseline = new HashMap<>(assignmentMetadataStore.getBaseline());\n         _stateReadLatency.endMeasuringLatency();\n       } catch (Exception ex) {\n         throw new HelixRebalanceException(\n             \"Failed to get the current baseline assignment because of unexpected error.\",\n             HelixRebalanceException.Type.INVALID_REBALANCER_STATUS, ex);\n       }\n     }\n-    if (currentBaseline.isEmpty()) {\n+    currentBaseline.keySet().retainAll(resources);\n+    if (!currentBaseline.keySet().containsAll(resources)) {\n       LOG.warn(\"The current baseline assignment record is empty. Use the current states instead.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e81ad341f4892a3b07209d2b2b1ef2281c21fff"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDEyMTQyOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/WagedRebalancer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoyMDozNVrOG1sf5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoyMDozNVrOG1sf5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1Njc3Mw==", "bodyText": "containsAll() will iterate through resources anyway. So just do the loop without check here.", "url": "https://github.com/apache/helix/pull/1167#discussion_r458956773", "createdAt": "2020-07-22T17:20:35Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/WagedRebalancer.java", "diffHunk": "@@ -643,23 +643,28 @@ private void validateInput(ResourceControllerDataProvider clusterData,\n   private Map<String, ResourceAssignment> getBaselineAssignment(\n       AssignmentMetadataStore assignmentMetadataStore, CurrentStateOutput currentStateOutput,\n       Set<String> resources) throws HelixRebalanceException {\n-    Map<String, ResourceAssignment> currentBaseline = Collections.emptyMap();\n+    Map<String, ResourceAssignment> currentBaseline = new HashMap<>();\n     if (assignmentMetadataStore != null) {\n       try {\n         _stateReadLatency.startMeasuringLatency();\n-        currentBaseline = assignmentMetadataStore.getBaseline();\n+        currentBaseline = new HashMap<>(assignmentMetadataStore.getBaseline());\n         _stateReadLatency.endMeasuringLatency();\n       } catch (Exception ex) {\n         throw new HelixRebalanceException(\n             \"Failed to get the current baseline assignment because of unexpected error.\",\n             HelixRebalanceException.Type.INVALID_REBALANCER_STATUS, ex);\n       }\n     }\n-    if (currentBaseline.isEmpty()) {\n+    currentBaseline.keySet().retainAll(resources);\n+    if (!currentBaseline.keySet().containsAll(resources)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e81ad341f4892a3b07209d2b2b1ef2281c21fff"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDEyMjg4OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/WagedRebalancer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoyMDo1N1rOG1sg4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoyMDo1N1rOG1sg4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1NzAyNQ==", "bodyText": "currentBaseline.putIfAbsent() ?", "url": "https://github.com/apache/helix/pull/1167#discussion_r458957025", "createdAt": "2020-07-22T17:20:57Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/WagedRebalancer.java", "diffHunk": "@@ -643,23 +643,28 @@ private void validateInput(ResourceControllerDataProvider clusterData,\n   private Map<String, ResourceAssignment> getBaselineAssignment(\n       AssignmentMetadataStore assignmentMetadataStore, CurrentStateOutput currentStateOutput,\n       Set<String> resources) throws HelixRebalanceException {\n-    Map<String, ResourceAssignment> currentBaseline = Collections.emptyMap();\n+    Map<String, ResourceAssignment> currentBaseline = new HashMap<>();\n     if (assignmentMetadataStore != null) {\n       try {\n         _stateReadLatency.startMeasuringLatency();\n-        currentBaseline = assignmentMetadataStore.getBaseline();\n+        currentBaseline = new HashMap<>(assignmentMetadataStore.getBaseline());\n         _stateReadLatency.endMeasuringLatency();\n       } catch (Exception ex) {\n         throw new HelixRebalanceException(\n             \"Failed to get the current baseline assignment because of unexpected error.\",\n             HelixRebalanceException.Type.INVALID_REBALANCER_STATUS, ex);\n       }\n     }\n-    if (currentBaseline.isEmpty()) {\n+    currentBaseline.keySet().retainAll(resources);\n+    if (!currentBaseline.keySet().containsAll(resources)) {\n       LOG.warn(\"The current baseline assignment record is empty. Use the current states instead.\");\n-      currentBaseline = currentStateOutput.getAssignment(resources);\n+      for (Map.Entry<String, ResourceAssignment> entry : currentStateOutput.getAssignment(resources)\n+          .entrySet()) {\n+        if (resources.contains(entry.getKey()) && !currentBaseline.containsKey(entry.getKey())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e81ad341f4892a3b07209d2b2b1ef2281c21fff"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDEzMzc0OnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/WagedRebalancer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoyMzo1MVrOG1snqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoyNDo1N1rOG1sqKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1ODc2MA==", "bodyText": "getAssignment() is very expensive, let's do it for the missing resources only. If you do it for all resources, the algorithm performance would be impacted.", "url": "https://github.com/apache/helix/pull/1167#discussion_r458958760", "createdAt": "2020-07-22T17:23:51Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/WagedRebalancer.java", "diffHunk": "@@ -643,23 +643,28 @@ private void validateInput(ResourceControllerDataProvider clusterData,\n   private Map<String, ResourceAssignment> getBaselineAssignment(\n       AssignmentMetadataStore assignmentMetadataStore, CurrentStateOutput currentStateOutput,\n       Set<String> resources) throws HelixRebalanceException {\n-    Map<String, ResourceAssignment> currentBaseline = Collections.emptyMap();\n+    Map<String, ResourceAssignment> currentBaseline = new HashMap<>();\n     if (assignmentMetadataStore != null) {\n       try {\n         _stateReadLatency.startMeasuringLatency();\n-        currentBaseline = assignmentMetadataStore.getBaseline();\n+        currentBaseline = new HashMap<>(assignmentMetadataStore.getBaseline());\n         _stateReadLatency.endMeasuringLatency();\n       } catch (Exception ex) {\n         throw new HelixRebalanceException(\n             \"Failed to get the current baseline assignment because of unexpected error.\",\n             HelixRebalanceException.Type.INVALID_REBALANCER_STATUS, ex);\n       }\n     }\n-    if (currentBaseline.isEmpty()) {\n+    currentBaseline.keySet().retainAll(resources);\n+    if (!currentBaseline.keySet().containsAll(resources)) {\n       LOG.warn(\"The current baseline assignment record is empty. Use the current states instead.\");\n-      currentBaseline = currentStateOutput.getAssignment(resources);\n+      for (Map.Entry<String, ResourceAssignment> entry : currentStateOutput.getAssignment(resources)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e81ad341f4892a3b07209d2b2b1ef2281c21fff"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1OTQwMw==", "bodyText": "Better to do:\n\nfind all the missing resources\ncall getAssignment() to get the corresponding assignment\nadd assignments to the return map.", "url": "https://github.com/apache/helix/pull/1167#discussion_r458959403", "createdAt": "2020-07-22T17:24:57Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/WagedRebalancer.java", "diffHunk": "@@ -643,23 +643,28 @@ private void validateInput(ResourceControllerDataProvider clusterData,\n   private Map<String, ResourceAssignment> getBaselineAssignment(\n       AssignmentMetadataStore assignmentMetadataStore, CurrentStateOutput currentStateOutput,\n       Set<String> resources) throws HelixRebalanceException {\n-    Map<String, ResourceAssignment> currentBaseline = Collections.emptyMap();\n+    Map<String, ResourceAssignment> currentBaseline = new HashMap<>();\n     if (assignmentMetadataStore != null) {\n       try {\n         _stateReadLatency.startMeasuringLatency();\n-        currentBaseline = assignmentMetadataStore.getBaseline();\n+        currentBaseline = new HashMap<>(assignmentMetadataStore.getBaseline());\n         _stateReadLatency.endMeasuringLatency();\n       } catch (Exception ex) {\n         throw new HelixRebalanceException(\n             \"Failed to get the current baseline assignment because of unexpected error.\",\n             HelixRebalanceException.Type.INVALID_REBALANCER_STATUS, ex);\n       }\n     }\n-    if (currentBaseline.isEmpty()) {\n+    currentBaseline.keySet().retainAll(resources);\n+    if (!currentBaseline.keySet().containsAll(resources)) {\n       LOG.warn(\"The current baseline assignment record is empty. Use the current states instead.\");\n-      currentBaseline = currentStateOutput.getAssignment(resources);\n+      for (Map.Entry<String, ResourceAssignment> entry : currentStateOutput.getAssignment(resources)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1ODc2MA=="}, "originalCommit": {"oid": "6e81ad341f4892a3b07209d2b2b1ef2281c21fff"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1249, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}