{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMTA5OTQ4", "number": 1537, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0MzoyM1rOE6Kiow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMDozNjoxNFrOE8YuXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDI1NTcxOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0MzoyM1rOH1D49A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo1NjoxMFrOH2HFbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwMDMwOA==", "bodyText": "@zhangmeng916 and @lei-xia , could you please confirm if this is the expectation? I understand that Kai needs to change it since the current run does not always succeed with 100% threshold. But I'm not sure if this should be our expectation?", "url": "https://github.com/apache/helix/pull/1537#discussion_r525400308", "createdAt": "2020-11-17T18:43:23Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java", "diffHunk": "@@ -174,7 +174,10 @@ public void testP2PStateTransitionEnabled() {\n       verifyP2PEnabled(startTime);\n     }\n \n-    Assert.assertEquals(p2pTrigged, total);\n+    // The success rate really depends on how quick participant act in relationship with controller.\n+    // For now, we set 90% threshold.\n+    long threshold = Math.round(total * 0.9);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "990d5572ad1c75f18f4214065153e1fb8910a106"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzMTIyMA==", "bodyText": "@jiajunwang, I sync-ed with Meng offline. @zhangmeng916, can you help to comment?", "url": "https://github.com/apache/helix/pull/1537#discussion_r525431220", "createdAt": "2020-11-17T19:30:27Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java", "diffHunk": "@@ -174,7 +174,10 @@ public void testP2PStateTransitionEnabled() {\n       verifyP2PEnabled(startTime);\n     }\n \n-    Assert.assertEquals(p2pTrigged, total);\n+    // The success rate really depends on how quick participant act in relationship with controller.\n+    // For now, we set 90% threshold.\n+    long threshold = Math.round(total * 0.9);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwMDMwOA=="}, "originalCommit": {"oid": "990d5572ad1c75f18f4214065153e1fb8910a106"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUzNTk3Mg==", "bodyText": "I think we cannot guarantee 100% P2P for all kinds of infrastructure. Although local tests always passed, there're some failures in our testing environment. The percent is always above 90% though. I believe there are corner cases that we cannot label all stale messages, which will block the sending of P2P.", "url": "https://github.com/apache/helix/pull/1537#discussion_r525535972", "createdAt": "2020-11-17T21:28:11Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java", "diffHunk": "@@ -174,7 +174,10 @@ public void testP2PStateTransitionEnabled() {\n       verifyP2PEnabled(startTime);\n     }\n \n-    Assert.assertEquals(p2pTrigged, total);\n+    // The success rate really depends on how quick participant act in relationship with controller.\n+    // For now, we set 90% threshold.\n+    long threshold = Math.round(total * 0.9);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwMDMwOA=="}, "originalCommit": {"oid": "990d5572ad1c75f18f4214065153e1fb8910a106"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwMTIyOA==", "bodyText": "Please make sure other reviewers are ok with this too.", "url": "https://github.com/apache/helix/pull/1537#discussion_r526501228", "createdAt": "2020-11-18T23:56:10Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java", "diffHunk": "@@ -174,7 +174,10 @@ public void testP2PStateTransitionEnabled() {\n       verifyP2PEnabled(startTime);\n     }\n \n-    Assert.assertEquals(p2pTrigged, total);\n+    // The success rate really depends on how quick participant act in relationship with controller.\n+    // For now, we set 90% threshold.\n+    long threshold = Math.round(total * 0.9);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwMDMwOA=="}, "originalCommit": {"oid": "990d5572ad1c75f18f4214065153e1fb8910a106"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTA4MDQ4OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo1NTo0MFrOH2HEyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMToxNDoxOVrOH2Islw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwMTA2NQ==", "bodyText": "Can you change to \"TODO\", and put before the sleep line?", "url": "https://github.com/apache/helix/pull/1537#discussion_r526501065", "createdAt": "2020-11-18T23:55:40Z", "author": {"login": "zhangmeng916"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java", "diffHunk": "@@ -69,7 +69,14 @@ public void testForceDeleteJobFromJobQueue() throws InterruptedException {\n     Assert\n         .assertNotNull(_driver.getJobContext(TaskUtil.getNamespacedJobName(jobQueueName, \"job2\")));\n \n-    // The following force delete for the job should go through without getting an exception\n+    // Force deletion can have Exception thrown as controller is writing to propertystore path too.\n+    // https://github.com/apache/helix/issues/1406, also force deletion may not be safe.\n+    // Thus, we stop pipeline to make sure there is not such race condition.\n+    _gSetupTool.getClusterManagementTool().enableCluster(CLUSTER_NAME, false);\n+    Thread.sleep(3000);\n+    // note this sleep is critical as it would take time for controller to stop.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "990d5572ad1c75f18f4214065153e1fb8910a106"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyNzYzOQ==", "bodyText": "changed.", "url": "https://github.com/apache/helix/pull/1537#discussion_r526527639", "createdAt": "2020-11-19T01:14:19Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java", "diffHunk": "@@ -69,7 +69,14 @@ public void testForceDeleteJobFromJobQueue() throws InterruptedException {\n     Assert\n         .assertNotNull(_driver.getJobContext(TaskUtil.getNamespacedJobName(jobQueueName, \"job2\")));\n \n-    // The following force delete for the job should go through without getting an exception\n+    // Force deletion can have Exception thrown as controller is writing to propertystore path too.\n+    // https://github.com/apache/helix/issues/1406, also force deletion may not be safe.\n+    // Thus, we stop pipeline to make sure there is not such race condition.\n+    _gSetupTool.getClusterManagementTool().enableCluster(CLUSTER_NAME, false);\n+    Thread.sleep(3000);\n+    // note this sleep is critical as it would take time for controller to stop.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwMTA2NQ=="}, "originalCommit": {"oid": "990d5572ad1c75f18f4214065153e1fb8910a106"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMTQ5NTQ5OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQwNzoyNzo0OFrOH3p42g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQwMzozMTowM1rOH3zang==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODEyMDAyNg==", "bodyText": "CLUSTER_NAME is a defined in the parent class which is also used by other tests. How could you ensure disabling this CLUSTER_NAME would not impact or fail other tests that use the same cluster?", "url": "https://github.com/apache/helix/pull/1537#discussion_r528120026", "createdAt": "2020-11-21T07:27:48Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java", "diffHunk": "@@ -69,7 +69,14 @@ public void testForceDeleteJobFromJobQueue() throws InterruptedException {\n     Assert\n         .assertNotNull(_driver.getJobContext(TaskUtil.getNamespacedJobName(jobQueueName, \"job2\")));\n \n-    // The following force delete for the job should go through without getting an exception\n+    // Force deletion can have Exception thrown as controller is writing to propertystore path too.\n+    // https://github.com/apache/helix/issues/1406, also force deletion may not be safe.\n+    // Thus, we stop pipeline to make sure there is not such race condition.\n+    _gSetupTool.getClusterManagementTool().enableCluster(CLUSTER_NAME, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71ce59eaa1984cb519d5a4aedbd709618b01773c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODEzNzU0Mw==", "bodyText": "protected final String CLUSTER_NAME = CLUSTER_PREFIX + \"_\" + getShortClassName(); each test class has unique  cluster name.", "url": "https://github.com/apache/helix/pull/1537#discussion_r528137543", "createdAt": "2020-11-21T07:52:24Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java", "diffHunk": "@@ -69,7 +69,14 @@ public void testForceDeleteJobFromJobQueue() throws InterruptedException {\n     Assert\n         .assertNotNull(_driver.getJobContext(TaskUtil.getNamespacedJobName(jobQueueName, \"job2\")));\n \n-    // The following force delete for the job should go through without getting an exception\n+    // Force deletion can have Exception thrown as controller is writing to propertystore path too.\n+    // https://github.com/apache/helix/issues/1406, also force deletion may not be safe.\n+    // Thus, we stop pipeline to make sure there is not such race condition.\n+    _gSetupTool.getClusterManagementTool().enableCluster(CLUSTER_NAME, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODEyMDAyNg=="}, "originalCommit": {"oid": "71ce59eaa1984cb519d5a4aedbd709618b01773c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI3NjEyNg==", "bodyText": "Ops, naming style as a constant but it is not... So easy to misread.", "url": "https://github.com/apache/helix/pull/1537#discussion_r528276126", "createdAt": "2020-11-22T03:31:03Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java", "diffHunk": "@@ -69,7 +69,14 @@ public void testForceDeleteJobFromJobQueue() throws InterruptedException {\n     Assert\n         .assertNotNull(_driver.getJobContext(TaskUtil.getNamespacedJobName(jobQueueName, \"job2\")));\n \n-    // The following force delete for the job should go through without getting an exception\n+    // Force deletion can have Exception thrown as controller is writing to propertystore path too.\n+    // https://github.com/apache/helix/issues/1406, also force deletion may not be safe.\n+    // Thus, we stop pipeline to make sure there is not such race condition.\n+    _gSetupTool.getClusterManagementTool().enableCluster(CLUSTER_NAME, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODEyMDAyNg=="}, "originalCommit": {"oid": "71ce59eaa1984cb519d5a4aedbd709618b01773c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzU1MTAzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMDozNjoxNFrOH4eZfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMDowMjozMFrOH4kLxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk4MDM1MA==", "bodyText": "Typo, and use uppercase \"TODO\", please.", "url": "https://github.com/apache/helix/pull/1537#discussion_r528980350", "createdAt": "2020-11-23T20:36:14Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java", "diffHunk": "@@ -69,7 +69,14 @@ public void testForceDeleteJobFromJobQueue() throws InterruptedException {\n     Assert\n         .assertNotNull(_driver.getJobContext(TaskUtil.getNamespacedJobName(jobQueueName, \"job2\")));\n \n-    // The following force delete for the job should go through without getting an exception\n+    // Force deletion can have Exception thrown as controller is writing to propertystore path too.\n+    // https://github.com/apache/helix/issues/1406, also force deletion may not be safe.\n+    // Thus, we stop pipeline to make sure there is not such race condition.\n+    _gSetupTool.getClusterManagementTool().enableCluster(CLUSTER_NAME, false);\n+    // note this sleep is critical as it would take time for controller to stop.\n+    // todo: this is not best practice to sleep. Let GenericHelixController gives out a signal would\n+    // todO: be another way. But this needs much more careful design.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71ce59eaa1984cb519d5a4aedbd709618b01773c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA3NTE0Mw==", "bodyText": "fixed.", "url": "https://github.com/apache/helix/pull/1537#discussion_r529075143", "createdAt": "2020-11-24T00:02:30Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestDeleteJobFromJobQueue.java", "diffHunk": "@@ -69,7 +69,14 @@ public void testForceDeleteJobFromJobQueue() throws InterruptedException {\n     Assert\n         .assertNotNull(_driver.getJobContext(TaskUtil.getNamespacedJobName(jobQueueName, \"job2\")));\n \n-    // The following force delete for the job should go through without getting an exception\n+    // Force deletion can have Exception thrown as controller is writing to propertystore path too.\n+    // https://github.com/apache/helix/issues/1406, also force deletion may not be safe.\n+    // Thus, we stop pipeline to make sure there is not such race condition.\n+    _gSetupTool.getClusterManagementTool().enableCluster(CLUSTER_NAME, false);\n+    // note this sleep is critical as it would take time for controller to stop.\n+    // todo: this is not best practice to sleep. Let GenericHelixController gives out a signal would\n+    // todO: be another way. But this needs much more careful design.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk4MDM1MA=="}, "originalCommit": {"oid": "71ce59eaa1984cb519d5a4aedbd709618b01773c"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 811, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}