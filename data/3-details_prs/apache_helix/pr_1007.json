{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NTUzODMw", "number": 1007, "title": "Add more accurate error message for resetPartition ", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nAddress #1003\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nWhen user reset one or more particular partition(s) using resetPartition API, Helix will throw an exception if the given instance can not be found under aliveInstance path. This could be caused by either of of the following reasons:\n\nThe instance was part of given cluster but is not alive now, or\nThe instance is not part of this cluster ever.\nThis PR differentiate these two causes for better debuggability.\n\nThis PR also adds a unit test for resetPartition since there is no existing test for it previously.\nTests\n\n The following tests are written for this issue:\n\ntestResetPartition\n\nThe following is the result of the \"mvn test\" command on the appropriate module:\n\n\n[ERROR] Failures:\n[ERROR]   TestControllerLeadershipChange.testMissingTopStateDurationMonitoring:262 expected: but was:\n[ERROR]   TestMessagingService.TestMessageSimpleSendReceiveAsync:240\n[ERROR]   TestStateTransitionTimeout.testStateTransitionTimeOut:166 expected: but was:\n[ERROR]   TestRebalanceRunningTask.testFixedTargetTaskAndDisabledRebalanceAndNodeAdded:297 expected: but was:\n[INFO]\n[ERROR] Tests run: 1146, Failures: 4, Errors: 0, Skipped: 1\nrerun:\n[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 14.992 s - in org.apache.helix.integration.controller.TestControllerLeadershipChange\n[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 31.445 s - in org.apache.helix.integration.messaging.TestMessagingService\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.014 s - in org.apache.helix.integration.paticipant.TestStateTransitionTimeout\n[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 21.551 s - in org.apache.helix.integration.task.TestRebalanceRunningTask\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation (Optional)\n\n In case of new functionality, my PR adds documentation in the following wiki page:X\n\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-05-13T19:04:14Z", "url": "https://github.com/apache/helix/pull/1007", "merged": true, "mergeCommit": {"oid": "6c62cd9b21b102c7effe646103f0c382570d70ed"}, "closed": true, "closedAt": "2020-06-03T21:18:59Z", "author": {"login": "xyuanlu"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg933IgBqjMzMzM1NDA2MDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnZeSLAH2gAyNDE3NTUzODMwOmRhZTI5ZTk4ZTBiOTA1ZTk5ZWQ4ZDBhYmZiYTViYTQwNTc4MTZiNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2ca6d294296d8cf93b5a6e8984be216d65a3e78", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/a2ca6d294296d8cf93b5a6e8984be216d65a3e78", "committedDate": "2020-05-13T18:27:51Z", "message": "refine comments"}, "afterCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/8438bf23038a05bf422c8a5bf07e69da90d95d46", "committedDate": "2020-05-13T19:16:10Z", "message": "sq commits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzEyODMy", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-411312832", "createdAt": "2020-05-13T21:28:24Z", "commit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToyODoyNFrOGVELUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToyOTo0OFrOGVENvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MTcxMg==", "bodyText": "Suggest diamond new HashSet<>()\nAnd it seems the partitions are only used for next step containsAll(). Would it be fine just use the reference to keySet() partitions = Address unclean helix controller leadership switch, instead of making a copy?", "url": "https://github.com/apache/helix/pull/1007#discussion_r424741712", "createdAt": "2020-05-13T21:28:24Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -588,20 +596,16 @@ public void resetPartition(String clusterName, String instanceName, String resou\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n+    Set<String> partitions;\n     if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-      Set<String> partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());\n-      if (!partitions.containsAll(resetPartitionNames)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-                + \", because not all \" + partitionNames + \" exist\");\n-      }\n+       partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MjMzNQ==", "bodyText": "No need to catch this exception. If an exception is thrown from connect(), the test will throw this exception and fail.", "url": "https://github.com/apache/helix/pull/1007#discussion_r424742335", "createdAt": "2020-05-13T21:29:48Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,93 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a non-exist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource,\n+          Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(),\n+          \"Can't reset state for \" + testResource  + \"/[1, 2] on WrongTestInstance,\" +\n+              \" because WrongTestInstance never existed in cluster \" + clusterName);\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-alive instance.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource,\n+          Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance is not alive.\n+      Assert.assertEquals(expected.getMessage(),\n+          \"Can't reset state for \" + testResource  + \"/[1, 2] on \" + instanceName\n+              + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");\n+    }\n+\n+    HelixManager manager = initializeHelixManager(clusterName, instanceConfig.getInstanceName());\n+    try {\n+      manager.connect();\n+    } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzIyNzQ5", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-411322749", "createdAt": "2020-05-13T21:46:24Z", "commit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0NjoyNFrOGVErBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo1MToxM1rOGVEzTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0OTgzMQ==", "bodyText": "\"has ever existed\"", "url": "https://github.com/apache/helix/pull/1007#discussion_r424749831", "createdAt": "2020-05-13T21:46:24Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,9 +573,17 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has ever exist in the cluster", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MDcwMA==", "bodyText": "\"not live\"", "url": "https://github.com/apache/helix/pull/1007#discussion_r424750700", "createdAt": "2020-05-13T21:48:20Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,9 +573,17 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has ever exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      if (!_zkClient.exists(instancePath)) {\n+        throw new HelixException(\n+            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n+            + \", because \" + instanceName + \" never existed in cluster \" + clusterName);\n+      } else {\n+        throw new HelixException(\n+            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n+            + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MDk4Nw==", "bodyText": "Can you just create the error message in the if-else block and throw only once to avoid code duplication?", "url": "https://github.com/apache/helix/pull/1007#discussion_r424750987", "createdAt": "2020-05-13T21:48:59Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,9 +573,17 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has ever exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      if (!_zkClient.exists(instancePath)) {\n+        throw new HelixException(\n+            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n+            + \", because \" + instanceName + \" never existed in cluster \" + clusterName);\n+      } else {\n+        throw new HelixException(\n+            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n+            + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MTcwOQ==", "bodyText": "\"nonexistent\"", "url": "https://github.com/apache/helix/pull/1007#discussion_r424751709", "createdAt": "2020-05-13T21:50:41Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,93 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a non-exist instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MTg3OA==", "bodyText": "non-live", "url": "https://github.com/apache/helix/pull/1007#discussion_r424751878", "createdAt": "2020-05-13T21:51:03Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,93 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a non-exist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource,\n+          Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(),\n+          \"Can't reset state for \" + testResource  + \"/[1, 2] on WrongTestInstance,\" +\n+              \" because WrongTestInstance never existed in cluster \" + clusterName);\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-alive instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MTk1MQ==", "bodyText": "not live", "url": "https://github.com/apache/helix/pull/1007#discussion_r424751951", "createdAt": "2020-05-13T21:51:13Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,93 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a non-exist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource,\n+          Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(),\n+          \"Can't reset state for \" + testResource  + \"/[1, 2] on WrongTestInstance,\" +\n+              \" because WrongTestInstance never existed in cluster \" + clusterName);\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-alive instance.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource,\n+          Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance is not alive.\n+      Assert.assertEquals(expected.getMessage(),\n+          \"Can't reset state for \" + testResource  + \"/[1, 2] on \" + instanceName\n+              + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzQyOTM4", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-411342938", "createdAt": "2020-05-13T22:27:29Z", "commit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMjoyNzoyOVrOGVFsng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMjoyNzoyOVrOGVFsng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2NjYyMg==", "bodyText": "Let's use \".\" instead of \"/\" to connect the resource name and partition name?\nAnd use String.format() to make the code cleaner.", "url": "https://github.com/apache/helix/pull/1007#discussion_r424766622", "createdAt": "2020-05-13T22:27:29Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,9 +573,17 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has ever exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      if (!_zkClient.exists(instancePath)) {\n+        throw new HelixException(\n+            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/8438bf23038a05bf422c8a5bf07e69da90d95d46", "committedDate": "2020-05-13T19:16:10Z", "message": "sq commits"}, "afterCommit": {"oid": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/4564141b3557c8437fb410a9da9af0eb3661f3e1", "committedDate": "2020-05-14T01:33:29Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMTMzMzk4", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-412133398", "createdAt": "2020-05-14T19:49:47Z", "commit": {"oid": "4564141b3557c8437fb410a9da9af0eb3661f3e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo0OTo0OFrOGVrxZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo0OTo0OFrOGVrxZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5MDQzNg==", "bodyText": "Looks like either branch of the below if/else needs this, might as well just init partitions here?\nAlso, since the original code makes a copy, better keep the original semantics here to prevent accidental mutation.\nJunlong\n: )", "url": "https://github.com/apache/helix/pull/1007#discussion_r425390436", "createdAt": "2020-05-14T19:49:48Z", "author": {"login": "junlong-gao"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+      } else {\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n+            clusterName);\n+      }\n+      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + resourceName + \" is not added\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n+              partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n+    Set<String> partitions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4564141b3557c8437fb410a9da9af0eb3661f3e1"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e0c31e0acdd9e69995f006ad79f1cee86326224", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/6e0c31e0acdd9e69995f006ad79f1cee86326224", "committedDate": "2020-05-14T20:48:01Z", "message": "format"}, "afterCommit": {"oid": "f44662a0ddd5566a4a3524b505a36eba812a3fe6", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/f44662a0ddd5566a4a3524b505a36eba812a3fe6", "committedDate": "2020-05-14T20:59:26Z", "message": "address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f44662a0ddd5566a4a3524b505a36eba812a3fe6", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/f44662a0ddd5566a4a3524b505a36eba812a3fe6", "committedDate": "2020-05-14T20:59:26Z", "message": "address comments"}, "afterCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/57fa62f9ef322843d54f2e13c32b494859ed6ca8", "committedDate": "2020-05-14T21:00:18Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzEwMTY5", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-412310169", "createdAt": "2020-05-15T02:41:15Z", "commit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjo0MToxNVrOGV0lag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjo0MToxNVrOGV0lag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNDgyNg==", "bodyText": "does not -> is not", "url": "https://github.com/apache/helix/pull/1007#discussion_r425534826", "createdAt": "2020-05-15T02:41:15Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+      } else {\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzEwNDk0", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-412310494", "createdAt": "2020-05-15T02:42:27Z", "commit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjo0MjoyN1rOGV0mYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjo0Njo1OFrOGV0qoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNTA3NA==", "bodyText": "Please add a TestHelper.verify() to verify that the cluster has indeed been fully deleted at this point.", "url": "https://github.com/apache/helix/pull/1007#discussion_r425535074", "createdAt": "2020-05-15T02:42:27Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on WrongTestInstance, because WrongTestInstance\"\n+              + \" has never existed in cluster %s\", testResource, clusterName));\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-live instance.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance is not alive.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          testResource, instanceName, instanceName, clusterName));\n+    }\n+\n+    HelixManager manager = initializeHelixManager(clusterName, instanceConfig.getInstanceName());\n+    manager.connect();\n+\n+    // resetPartition is expected to throw an exception when provided with a non-exist resource.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the resource is not added.\n+      Assert.assertEquals(expected.getMessage(), String\n+          .format(\"Can't reset state for %s.[1, 2] on %s, because %s is not added\", testResource,\n+              instanceName, testResource));\n+    }\n+\n+    IdealState idealState = new IdealState(testResource);\n+    idealState.setNumPartitions(3);\n+    admin.addStateModelDef(clusterName, \"MasterSlave\", new MasterSlaveSMD());\n+    idealState.setStateModelDefRef(\"MasterSlave\");\n+    idealState.setRebalanceMode(IdealState.RebalanceMode.FULL_AUTO);\n+    admin.addResource(clusterName, testResource, idealState);\n+\n+    admin.enableResource(clusterName, testResource, true);\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because partitions do not exist.\n+      Assert.assertEquals(expected.getMessage(), String\n+          .format(\"Can't reset state for %s.[1, 2] on %s, because not all [1, 2] exist\",\n+              testResource, instanceName));\n+    }\n+\n+    // clean up\n+    manager.disconnect();\n+    admin.dropCluster(clusterName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNTMwNA==", "bodyText": "nonexistent", "url": "https://github.com/apache/helix/pull/1007#discussion_r425535304", "createdAt": "2020-05-15T02:43:19Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexist instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNTQ4MQ==", "bodyText": "Make \"WrongTestInstance\" a string constant throughout?", "url": "https://github.com/apache/helix/pull/1007#discussion_r425535481", "createdAt": "2020-05-15T02:44:03Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource, Arrays.asList(\"1\", \"2\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNTgyNw==", "bodyText": "nonexistent", "url": "https://github.com/apache/helix/pull/1007#discussion_r425535827", "createdAt": "2020-05-15T02:45:35Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on WrongTestInstance, because WrongTestInstance\"\n+              + \" has never existed in cluster %s\", testResource, clusterName));\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-live instance.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance is not alive.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          testResource, instanceName, instanceName, clusterName));\n+    }\n+\n+    HelixManager manager = initializeHelixManager(clusterName, instanceConfig.getInstanceName());\n+    manager.connect();\n+\n+    // resetPartition is expected to throw an exception when provided with a non-exist resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNjA5Mg==", "bodyText": "Do you need to add a verifier check here? It might take some time for the controller to rebalance.", "url": "https://github.com/apache/helix/pull/1007#discussion_r425536092", "createdAt": "2020-05-15T02:46:43Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on WrongTestInstance, because WrongTestInstance\"\n+              + \" has never existed in cluster %s\", testResource, clusterName));\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-live instance.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance is not alive.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          testResource, instanceName, instanceName, clusterName));\n+    }\n+\n+    HelixManager manager = initializeHelixManager(clusterName, instanceConfig.getInstanceName());\n+    manager.connect();\n+\n+    // resetPartition is expected to throw an exception when provided with a non-exist resource.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the resource is not added.\n+      Assert.assertEquals(expected.getMessage(), String\n+          .format(\"Can't reset state for %s.[1, 2] on %s, because %s is not added\", testResource,\n+              instanceName, testResource));\n+    }\n+\n+    IdealState idealState = new IdealState(testResource);\n+    idealState.setNumPartitions(3);\n+    admin.addStateModelDef(clusterName, \"MasterSlave\", new MasterSlaveSMD());\n+    idealState.setStateModelDefRef(\"MasterSlave\");\n+    idealState.setRebalanceMode(IdealState.RebalanceMode.FULL_AUTO);\n+    admin.addResource(clusterName, testResource, idealState);\n+\n+    admin.enableResource(clusterName, testResource, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNjE2MQ==", "bodyText": "Do we need a verifier check after this?", "url": "https://github.com/apache/helix/pull/1007#discussion_r425536161", "createdAt": "2020-05-15T02:46:58Z", "author": {"login": "narendly"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzQzMjQ3", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-412343247", "createdAt": "2020-05-15T04:42:54Z", "commit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNDo0Mjo1NFrOGV2S0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNDo1MzowNVrOGV2bbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2MjgzMg==", "bodyText": "Why there is still a \"+\", it is not necessary, right?", "url": "https://github.com/apache/helix/pull/1007#discussion_r425562832", "createdAt": "2020-05-15T04:42:54Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2Mjk4Ng==", "bodyText": "BTW, if this is for the format, just use the auto format supported by the IDE after you import the Helix code style.", "url": "https://github.com/apache/helix/pull/1007#discussion_r425562986", "createdAt": "2020-05-15T04:43:30Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2MjgzMg=="}, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2MzQyNQ==", "bodyText": "The check only shows it is not alive for now. \"anymore\" is not accurate, we can remove it.", "url": "https://github.com/apache/helix/pull/1007#discussion_r425563425", "createdAt": "2020-05-15T04:45:40Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+      } else {\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2Mzc5MA==", "bodyText": "nit, You can init the errMessage like String.format( \"Can't reset state for %s.%s on %s,\", resourceName, partitionNames, instanceName), then in the different branches, append more content.", "url": "https://github.com/apache/helix/pull/1007#discussion_r425563790", "createdAt": "2020-05-15T04:47:26Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2NDMwMg==", "bodyText": "nit, you could use (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED)? idealState.getRecord().getMapFields().keySet() : partitions = idealState.getRecord().getListFields().keySet() to simplify it a little bit.", "url": "https://github.com/apache/helix/pull/1007#discussion_r425564302", "createdAt": "2020-05-15T04:49:47Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+      } else {\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n+            clusterName);\n+      }\n+      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + resourceName + \" is not added\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n+              partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n+    Set<String> partitions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5MDQzNg=="}, "originalCommit": {"oid": "4564141b3557c8437fb410a9da9af0eb3661f3e1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2NTAzNg==", "bodyText": "It looks like there are many error messages look like this, I think we can have a private method to generate the formated messaged based on the input, the parameters could be: partitionNames, instanceName, failure reason (so the callers just have different logic of generating the different reasons).", "url": "https://github.com/apache/helix/pull/1007#discussion_r425565036", "createdAt": "2020-05-15T04:53:05Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+      } else {\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n+            clusterName);\n+      }\n+      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + resourceName + \" is not added\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n+              partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n+    Set<String> partitions;\n     if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-      Set<String> partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());\n-      if (!partitions.containsAll(resetPartitionNames)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-                + \", because not all \" + partitionNames + \" exist\");\n-      }\n+      partitions = idealState.getRecord().getMapFields().keySet();\n     } else {\n-      Set<String> partitions = new HashSet<String>(idealState.getRecord().getListFields().keySet());\n-      if (!partitions.containsAll(resetPartitionNames)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-                + \", because not all \" + partitionNames + \" exist\");\n-      }\n+      partitions = idealState.getRecord().getListFields().keySet();\n+    }\n+    if (!partitions.containsAll(resetPartitionNames)) {\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8"}, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/57fa62f9ef322843d54f2e13c32b494859ed6ca8", "committedDate": "2020-05-14T21:00:18Z", "message": "address comments"}, "afterCommit": {"oid": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "committedDate": "2020-05-15T07:13:37Z", "message": "Address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eae6e646cf5f056d7f0675a81a6944bd724ce26c", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/eae6e646cf5f056d7f0675a81a6944bd724ce26c", "committedDate": "2020-05-15T07:27:09Z", "message": "Address comments"}, "afterCommit": {"oid": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/d3d95cff2d4b3aeac09c936e3893f40ad00c63d2", "committedDate": "2020-05-15T07:29:38Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODQ2Mzc2", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-413846376", "createdAt": "2020-05-18T18:41:31Z", "commit": {"oid": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODo0MTozMlrOGXDN5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODo0OTo1MFrOGXDepQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMzE0MA==", "bodyText": "nit, this is about style.\nIn Java, you can put fields into enum items. This format string can be a field of the ResetPartitionFailureReason enum item. Then you don't need the switch here.", "url": "https://github.com/apache/helix/pull/1007#discussion_r426823140", "createdAt": "2020-05-18T18:41:32Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -560,6 +560,51 @@ private void processMaintenanceMode(String clusterName, final boolean enabled,\n     }\n   }\n \n+  private enum ResetPartitionFailureReason {\n+    INSTANCE_NOTALIVE,\n+    INSTANCE_NONEXISTENT,\n+    RESOURCE_NONEXISTENT,\n+    PARTITION_NONEXISTENT,\n+    PARTITION_NOT_ERROR,\n+    STATE_MODEL_NONEXISTENT,\n+    PENDING_MSG\n+  }\n+\n+  private String resetPartitionLogHelper(String clusterName, String instanceName,\n+      String resourceName, List<String> partitionNames, String strArg,\n+      ResetPartitionFailureReason reason) {\n+    String errMessage = String\n+        .format(\"Can't reset state for %s.%s on %s, because \", resourceName, partitionNames,\n+            instanceName);\n+\n+    switch (reason) {\n+      case INSTANCE_NOTALIVE:\n+        errMessage +=\n+            String.format(\"%s has never existed in cluster %s\", instanceName, clusterName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyNzQyOQ==", "bodyText": "This test case works but not very clean. Since the testResource has not been created, the resetPartition may fail due to other reasons. So the test logic here might be impacted if we change that logic. For example, we check the resource existence first in the future.\nTo avoid that impact, let's have the resource created and then test reset.\nBTW, in that case, you will need to use the verifier to wait until resource assignment has been done and state converged.", "url": "https://github.com/apache/helix/pull/1007#discussion_r426827429", "createdAt": "2020-05-18T18:49:50Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    String wrongTestInstance = \"WrongTestInstance\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexistent instance.\n+    try {\n+      admin.resetPartition(clusterName, wrongTestInstance, testResource, Arrays.asList(\"1\", \"2\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODgwNTgw", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-413880580", "createdAt": "2020-05-18T19:30:27Z", "commit": {"oid": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTozMDoyN1rOGXEvnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTozMDoyN1rOGXEvnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg0ODE1OQ==", "bodyText": "Nit, just about style :) To reduce the duplicate code, I would do something like this\nString failureReason = _zkClient.exists(instancePath) ? ResetPartitionFailureReason.INSTANCE_NONEXISTENT) :  ResetPartitionFailureReason.INSTANCE_NOTALIVE);\nthrow new HelixException(...);", "url": "https://github.com/apache/helix/pull/1007#discussion_r426848159", "createdAt": "2020-05-18T19:30:27Z", "author": {"login": "huizhilu"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +618,36 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      if (!_zkClient.exists(instancePath)) {\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NOTALIVE));\n+      } else {\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NONEXISTENT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2"}, "originalPosition": 68}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/d3d95cff2d4b3aeac09c936e3893f40ad00c63d2", "committedDate": "2020-05-15T07:29:38Z", "message": "Address comments"}, "afterCommit": {"oid": "d1c0cf419d437a320853a84464c868afce5fca46", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/d1c0cf419d437a320853a84464c868afce5fca46", "committedDate": "2020-05-19T21:26:06Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MDEwNTc0", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-415010574", "createdAt": "2020-05-20T05:52:07Z", "commit": {"oid": "d1c0cf419d437a320853a84464c868afce5fca46"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNTo1MjowN1rOGX8MPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNTo1Mjo1MFrOGX8NTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc1NjYwNw==", "bodyText": "The method should either return a formated message or a pure format string. The current design is mixing and would be hard to use.", "url": "https://github.com/apache/helix/pull/1007#discussion_r427756607", "createdAt": "2020-05-20T05:52:07Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -560,6 +560,29 @@ private void processMaintenanceMode(String clusterName, final boolean enabled,\n     }\n   }\n \n+  private enum ResetPartitionFailureReason {\n+    INSTANCE_NOTALIVE(\"%s is not alive in cluster %s\"),\n+    INSTANCE_NONEXISTENT(\"%s does not exist in cluster %s\"),\n+    RESOURCE_NONEXISTENT(\"resource %s is not added\"),\n+    PARTITION_NONEXISTENT(\"not all %s exist\"),\n+    PARTITION_NOT_ERROR(\"%s is NOT found\"),\n+    STATE_MODEL_NONEXISTENT(\"%s is NOT found\"),\n+    PENDING_MSG(\"a pending message exists: %s\");\n+\n+    private String message;\n+\n+    ResetPartitionFailureReason(String message) {\n+      this.message = message;\n+    }\n+\n+    public String getMessage(String instanceName, String resourceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1c0cf419d437a320853a84464c868afce5fca46"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc1Njg3Nw==", "bodyText": "I would suggest passing the cluster name to getMessage, and let it return the fully formated string.", "url": "https://github.com/apache/helix/pull/1007#discussion_r427756877", "createdAt": "2020-05-20T05:52:50Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +596,31 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has added to the cluster\n+      String instanceConfigPath = PropertyPathBuilder.instanceConfig(clusterName, instanceName);\n+      throw new HelixException(String.format(\n+          _zkClient.exists(instanceConfigPath) ? ResetPartitionFailureReason.INSTANCE_NOTALIVE\n+              .getMessage(instanceName, resourceName, partitionNames)\n+              : ResetPartitionFailureReason.INSTANCE_NONEXISTENT\n+                  .getMessage(instanceName, resourceName, partitionNames), instanceName,\n+          clusterName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1c0cf419d437a320853a84464c868afce5fca46"}, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1c0cf419d437a320853a84464c868afce5fca46", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/d1c0cf419d437a320853a84464c868afce5fca46", "committedDate": "2020-05-19T21:26:06Z", "message": "Address comments"}, "afterCommit": {"oid": "8e7fee0b9f4bff34e20426b476495709ffc529d1", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/8e7fee0b9f4bff34e20426b476495709ffc529d1", "committedDate": "2020-05-20T06:48:36Z", "message": "Adddress comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e7fee0b9f4bff34e20426b476495709ffc529d1", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/8e7fee0b9f4bff34e20426b476495709ffc529d1", "committedDate": "2020-05-20T06:48:36Z", "message": "Adddress comment"}, "afterCommit": {"oid": "437168584083b3fa2d3241ddb45221f7c77a7a70", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/437168584083b3fa2d3241ddb45221f7c77a7a70", "committedDate": "2020-05-20T06:56:23Z", "message": "Adddress comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "437168584083b3fa2d3241ddb45221f7c77a7a70", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/437168584083b3fa2d3241ddb45221f7c77a7a70", "committedDate": "2020-05-20T06:56:23Z", "message": "Adddress comment"}, "afterCommit": {"oid": "e493b1c0f5f3f1a46a2d43b435ea0f8e2b925d76", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/e493b1c0f5f3f1a46a2d43b435ea0f8e2b925d76", "committedDate": "2020-05-21T00:06:02Z", "message": "address comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e493b1c0f5f3f1a46a2d43b435ea0f8e2b925d76", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/e493b1c0f5f3f1a46a2d43b435ea0f8e2b925d76", "committedDate": "2020-05-21T00:06:02Z", "message": "address comment"}, "afterCommit": {"oid": "7394764e0a1ad0ec6247e75b949ca15ddee78c1e", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/7394764e0a1ad0ec6247e75b949ca15ddee78c1e", "committedDate": "2020-05-26T00:44:54Z", "message": "add verifier for clean up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NTY0OTI2", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-419564926", "createdAt": "2020-05-27T19:59:42Z", "commit": {"oid": "7394764e0a1ad0ec6247e75b949ca15ddee78c1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxOTo1OTo0M1rOGbbE7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxOTo1OTo0M1rOGbbE7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwODM2Nw==", "bodyText": "Let's make the naming convention consistent. NON will be a word that better to have:\nINSTANCE_NOT_ALIVE\nINSTANCE_NON_EXISTENT\n...\nPARTITION_NOT_ERROR", "url": "https://github.com/apache/helix/pull/1007#discussion_r431408367", "createdAt": "2020-05-27T19:59:43Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -560,6 +560,28 @@ private void processMaintenanceMode(String clusterName, final boolean enabled,\n     }\n   }\n \n+  private enum ResetPartitionFailureReason {\n+    INSTANCE_NOTALIVE(\"%s is not alive in cluster %s\"),\n+    INSTANCE_NONEXISTENT(\"%s does not exist in cluster %s\"),\n+    RESOURCE_NONEXISTENT(\"resource %s is not added to cluster %s\"),\n+    PARTITION_NONEXISTENT(\"not all %s exist in cluster %s\"),\n+    PARTITION_NOT_ERROR(\"%s is NOT found in cluster %s\"),\n+    STATE_MODEL_NONEXISTENT(\"%s is NOT found in cluster %s\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7394764e0a1ad0ec6247e75b949ca15ddee78c1e"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7394764e0a1ad0ec6247e75b949ca15ddee78c1e", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/7394764e0a1ad0ec6247e75b949ca15ddee78c1e", "committedDate": "2020-05-26T00:44:54Z", "message": "add verifier for clean up"}, "afterCommit": {"oid": "8613b685f1a6bd8d1fe3ab454c9993c9b356b629", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/8613b685f1a6bd8d1fe3ab454c9993c9b356b629", "committedDate": "2020-05-28T18:52:21Z", "message": "Address comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMTgzNDcy", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-422183472", "createdAt": "2020-06-01T21:08:39Z", "commit": {"oid": "8613b685f1a6bd8d1fe3ab454c9993c9b356b629"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMTowODozOVrOGdaN4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMTowODozOVrOGdaN4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ5MTQyNQ==", "bodyText": "Let's don't bother including PENDING_MSG here. This is not compatible with the other types. And if there is no other better way, we should not be blocked on this.\nJust leave it as it originally be.", "url": "https://github.com/apache/helix/pull/1007#discussion_r433491425", "createdAt": "2020-06-01T21:08:39Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -560,6 +560,28 @@ private void processMaintenanceMode(String clusterName, final boolean enabled,\n     }\n   }\n \n+  private enum ResetPartitionFailureReason {\n+    INSTANCE_NOT_ALIVE(\"%s is not alive in cluster %s\"),\n+    INSTANCE_NON_EXISTENT(\"%s does not exist in cluster %s\"),\n+    RESOURCE_NON_EXISTENT(\"resource %s is not added to cluster %s\"),\n+    PARTITION_NON_EXISTENT(\"not all %s exist in cluster %s\"),\n+    PARTITION_NOT_ERROR(\"%s is NOT found in cluster %s\"),\n+    STATE_MODEL_NON_EXISTENT(\"%s is NOT found in cluster %s\"),\n+    PENDING_MSG(\"a pending message %s exists for resource %s\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8613b685f1a6bd8d1fe3ab454c9993c9b356b629"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96881338cbdb1f43b41d30e8b777d02de917ad72", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/96881338cbdb1f43b41d30e8b777d02de917ad72", "committedDate": "2020-06-01T23:37:20Z", "message": "sq commits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8984aa7af708f97b43bd444512b3702abc8d0fd", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/f8984aa7af708f97b43bd444512b3702abc8d0fd", "committedDate": "2020-06-01T23:37:20Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ac63d93bae47a29c5ac9bb7fcc51170436b6bf4", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/1ac63d93bae47a29c5ac9bb7fcc51170436b6bf4", "committedDate": "2020-06-01T23:37:20Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b27ab21d77bc418188226f71aa160d7bdc8a34da", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/b27ab21d77bc418188226f71aa160d7bdc8a34da", "committedDate": "2020-06-01T23:37:20Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da5d5942e4da0a6fbb18472fff45804addefa2bd", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/da5d5942e4da0a6fbb18472fff45804addefa2bd", "committedDate": "2020-06-01T23:37:20Z", "message": "Adddress comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9523d3987741c2333f4cb11f6a238c30c983032b", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/9523d3987741c2333f4cb11f6a238c30c983032b", "committedDate": "2020-06-01T23:37:20Z", "message": "address comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fcdacb1b715940577319443bd6bad26ad556014", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/7fcdacb1b715940577319443bd6bad26ad556014", "committedDate": "2020-06-01T23:37:20Z", "message": "add verifier for clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f63ebeeb7b814747d63c75ec4a865ef0e76e3c1", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/6f63ebeeb7b814747d63c75ec4a865ef0e76e3c1", "committedDate": "2020-06-01T23:37:20Z", "message": "Address comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a27da800047648cb017b3411aedcfbb0d76fd2c", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/9a27da800047648cb017b3411aedcfbb0d76fd2c", "committedDate": "2020-06-01T23:37:20Z", "message": "address comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8613b685f1a6bd8d1fe3ab454c9993c9b356b629", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/8613b685f1a6bd8d1fe3ab454c9993c9b356b629", "committedDate": "2020-05-28T18:52:21Z", "message": "Address comment"}, "afterCommit": {"oid": "9a27da800047648cb017b3411aedcfbb0d76fd2c", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/9a27da800047648cb017b3411aedcfbb0d76fd2c", "committedDate": "2020-06-01T23:37:20Z", "message": "address comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzc2ODYz", "url": "https://github.com/apache/helix/pull/1007#pullrequestreview-422376863", "createdAt": "2020-06-02T06:30:20Z", "commit": {"oid": "9a27da800047648cb017b3411aedcfbb0d76fd2c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjozMDoyMFrOGdjyJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjozMDoyMFrOGdjyJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY0ODE2NA==", "bodyText": "nit, but will the following code be easier:\n(_zkClient.exists(instanceConfigPath) ? ResetPartitionFailureReason.INSTANCE_NOT_ALIVE : ResetPartitionFailureReason.INSTANCE_NON_EXISTENT)\n.getMessage(resourceName, partitionNames, instanceName, instanceName, clusterName);", "url": "https://github.com/apache/helix/pull/1007#discussion_r433648164", "createdAt": "2020-06-02T06:30:20Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +594,32 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance exists in the cluster\n+      String instanceConfigPath = PropertyPathBuilder.instanceConfig(clusterName, instanceName);\n+      throw new HelixException(String.format(\n+          _zkClient.exists(instanceConfigPath) ? ResetPartitionFailureReason.INSTANCE_NOT_ALIVE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a27da800047648cb017b3411aedcfbb0d76fd2c"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dae29e98e0b905e99ed8d0abfba5ba4057816b66", "author": {"user": {"login": "xyuanlu", "name": null}}, "url": "https://github.com/apache/helix/commit/dae29e98e0b905e99ed8d0abfba5ba4057816b66", "committedDate": "2020-06-02T18:49:50Z", "message": "Address comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4822, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}