{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTA1NjY1", "number": 831, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzo0MTo1NFrODlUVFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzo0MTo1NFrODlUVFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDU2OTgzOnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/controller/stages/TestSendCancellationMessageFromOFFLINEToDROPPED.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzo0MTo1NFrOFyJE3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTowODowNFrOFygQAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEyMTgyMw==", "bodyText": "Can we just add this test method to some existing test classes? And the name is too long.", "url": "https://github.com/apache/helix/pull/831#discussion_r388121823", "createdAt": "2020-03-05T07:41:54Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/controller/stages/TestSendCancellationMessageFromOFFLINEToDROPPED.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package org.apache.helix.controller.stages;\n+\n+import java.lang.reflect.Array;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.helix.HelixDefinedState;\n+import org.apache.helix.HelixManager;\n+import org.apache.helix.controller.common.PartitionStateMap;\n+import org.apache.helix.controller.common.ResourcesStateMap;\n+import org.apache.helix.controller.dataproviders.BaseControllerDataProvider;\n+import org.apache.helix.model.ClusterConfig;\n+import org.apache.helix.model.LiveInstance;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.model.Partition;\n+import org.apache.helix.model.Resource;\n+import org.apache.helix.model.StateModelDefinition;\n+import org.apache.helix.task.TaskConstants;\n+import org.apache.helix.tools.StateModelConfigGenerator;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * This test checks the cancellation message generation when currentState=null and desiredState=DROPPED\n+ */\n+public class TestSendCancellationMessageFromOFFLINEToDROPPED extends MessageGenerationPhase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566725513d77301b155b89440e97ca61a0df6a00"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5ODgyNA==", "bodyText": "I'll change it to a shorter name. It has to be a separate class because it needs to extend MessageGenerationPhase so I can run this class alone. Since it is a very specific case, it's better we can run this stage alone so we can control the input to this message generation phase.", "url": "https://github.com/apache/helix/pull/831#discussion_r388498824", "createdAt": "2020-03-05T19:03:28Z", "author": {"login": "mgao0"}, "path": "helix-core/src/test/java/org/apache/helix/controller/stages/TestSendCancellationMessageFromOFFLINEToDROPPED.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package org.apache.helix.controller.stages;\n+\n+import java.lang.reflect.Array;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.helix.HelixDefinedState;\n+import org.apache.helix.HelixManager;\n+import org.apache.helix.controller.common.PartitionStateMap;\n+import org.apache.helix.controller.common.ResourcesStateMap;\n+import org.apache.helix.controller.dataproviders.BaseControllerDataProvider;\n+import org.apache.helix.model.ClusterConfig;\n+import org.apache.helix.model.LiveInstance;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.model.Partition;\n+import org.apache.helix.model.Resource;\n+import org.apache.helix.model.StateModelDefinition;\n+import org.apache.helix.task.TaskConstants;\n+import org.apache.helix.tools.StateModelConfigGenerator;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * This test checks the cancellation message generation when currentState=null and desiredState=DROPPED\n+ */\n+public class TestSendCancellationMessageFromOFFLINEToDROPPED extends MessageGenerationPhase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEyMTgyMw=="}, "originalCommit": {"oid": "566725513d77301b155b89440e97ca61a0df6a00"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUwMTUwNg==", "bodyText": "Sure, sounds good.", "url": "https://github.com/apache/helix/pull/831#discussion_r388501506", "createdAt": "2020-03-05T19:08:04Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/controller/stages/TestSendCancellationMessageFromOFFLINEToDROPPED.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package org.apache.helix.controller.stages;\n+\n+import java.lang.reflect.Array;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.helix.HelixDefinedState;\n+import org.apache.helix.HelixManager;\n+import org.apache.helix.controller.common.PartitionStateMap;\n+import org.apache.helix.controller.common.ResourcesStateMap;\n+import org.apache.helix.controller.dataproviders.BaseControllerDataProvider;\n+import org.apache.helix.model.ClusterConfig;\n+import org.apache.helix.model.LiveInstance;\n+import org.apache.helix.model.Message;\n+import org.apache.helix.model.Partition;\n+import org.apache.helix.model.Resource;\n+import org.apache.helix.model.StateModelDefinition;\n+import org.apache.helix.task.TaskConstants;\n+import org.apache.helix.tools.StateModelConfigGenerator;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * This test checks the cancellation message generation when currentState=null and desiredState=DROPPED\n+ */\n+public class TestSendCancellationMessageFromOFFLINEToDROPPED extends MessageGenerationPhase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEyMTgyMw=="}, "originalCommit": {"oid": "566725513d77301b155b89440e97ca61a0df6a00"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1704, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}