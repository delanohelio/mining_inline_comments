{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MTEzOTQ5", "number": 920, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowNjowMVrODtRK6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowNjowMVrODtRK6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NzkzODMyOnYy", "diffSide": "RIGHT", "path": "helix-core/src/main/java/org/apache/helix/spectator/RoutingDataCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowNjowMVrOF-mLNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowNjowMVrOF-mLNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4MTQ5Mw==", "bodyText": "Why do not we refresh the liveInstance when there is CurrentState change at the BasicClusterDataCache?", "url": "https://github.com/apache/helix/pull/920#discussion_r401181493", "createdAt": "2020-03-31T20:06:01Z", "author": {"login": "lei-xia"}, "path": "helix-core/src/main/java/org/apache/helix/spectator/RoutingDataCache.java", "diffHunk": "@@ -79,6 +79,17 @@ public synchronized void refresh(HelixDataAccessor accessor) {\n         .get(HelixConstants.ChangeType.CURRENT_STATE)) {\n       long start = System.currentTimeMillis();\n       _propertyDataChangedMap.put(HelixConstants.ChangeType.CURRENT_STATE, false);\n+      /**\n+       * Workaround of https://github.com/apache/helix/issues/919.\n+       * Why it is workaround?\n+       * 1. Before a larger scale refactoring, to minimize the impact on cache logic, this change\n+       * introduces extra read to update the liveInstance list before processing current states.\n+       * 2. This change does not handle the corresponding callback handlers, which should also be\n+       * registered when a new liveInstance node is found.\n+       * TODO: Refactor cache processing logic and also refine the callback handler registration\n+       * TODO: logic.\n+       **/\n+      _liveInstancePropertyCache.refresh(accessor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c77ec5505d91905d998fe200cba4a04a497eb90b"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1421, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}