{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTYzMDkw", "number": 1104, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjowMDoyMFrOEG7TVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjowMDoyMFrOEG7TVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njk4NTE2OnYy", "diffSide": "RIGHT", "path": "helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjowMDoyMFrOGmBobw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMjoyODoxN1rOGmik9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyNTgwNw==", "bodyText": "Please correct me if I am wrong.\nWhen the participant handles the new session, this folder of the old session will be removed, right? With the new change, should the watcher be removed as well when the folder being deleted?", "url": "https://github.com/apache/helix/pull/1104#discussion_r442525807", "createdAt": "2020-06-18T22:00:20Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java", "diffHunk": "@@ -605,9 +605,12 @@ public void onStateChange(String instanceName, List<CurrentState> statesInfo,\n         \"Should have 1 data-watches: MESSAGES\");\n     Assert.assertEquals(watchPaths.get(\"childWatches\").size(), 1,\n         \"Should have 1 child-watches: MESSAGES\");\n-    Assert\n-        .assertEquals(watchPaths.get(\"existWatches\").size(), 2,\n-            \"Should have 2 exist-watches: CURRENTSTATE/{oldSessionId} and CURRENTSTATE/{oldSessionId}/TestDB0\");\n+    result = TestHelper.verify(()-> {\n+      Map<String, List<String>> wPaths = ZkTestHelper.getZkWatch(participantToExpire.getZkClient());\n+      return wPaths.get(\"existWatches\").size() == 1;\n+    }, 10000);\n+    Assert.assertTrue(result,\n+        \"Should have 1 exist-watches: CURRENTSTATE/{oldSessionId}\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8475450c98f0bf15cf81f9fb69cc6fef876a9ac3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2NzY2Ng==", "bodyText": "This test is confusing. Note here it is a participant0, register and currentstate/{sessionid} callbackhandler of itself.\nThis does not normally happen in production,\nThe only case this can happen is that controller have CB for participant 1. At the same time controller and participant 1 both have session expiration.\nBack to the question, yes, the old session will be removed from participant point of view. But from router point of view (participant0 is also router as it subscribe to callbackhandler of current state), each existing callbackhandler of router would be called via lambda from zkclient event queue inserted by fireAllEvent() after session expiration.\n fireChildChangedEvents(entry.getKey(), entry.getValue(), true);\nThe lambda would install this watch.\nNote, this is normally not a problem as we don't have such usage case. Only if both participant and controller/router have session expiration at the same time.\nLater, we plan to make it clear the responsibility of who should install watcher. We can simplify the logic here.", "url": "https://github.com/apache/helix/pull/1104#discussion_r442567666", "createdAt": "2020-06-19T00:20:13Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java", "diffHunk": "@@ -605,9 +605,12 @@ public void onStateChange(String instanceName, List<CurrentState> statesInfo,\n         \"Should have 1 data-watches: MESSAGES\");\n     Assert.assertEquals(watchPaths.get(\"childWatches\").size(), 1,\n         \"Should have 1 child-watches: MESSAGES\");\n-    Assert\n-        .assertEquals(watchPaths.get(\"existWatches\").size(), 2,\n-            \"Should have 2 exist-watches: CURRENTSTATE/{oldSessionId} and CURRENTSTATE/{oldSessionId}/TestDB0\");\n+    result = TestHelper.verify(()-> {\n+      Map<String, List<String>> wPaths = ZkTestHelper.getZkWatch(participantToExpire.getZkClient());\n+      return wPaths.get(\"existWatches\").size() == 1;\n+    }, 10000);\n+    Assert.assertTrue(result,\n+        \"Should have 1 exist-watches: CURRENTSTATE/{oldSessionId}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyNTgwNw=="}, "originalCommit": {"oid": "8475450c98f0bf15cf81f9fb69cc6fef876a9ac3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NDQ3MQ==", "bodyText": "Make sense. Thanks for the explanation. Could you please add the critical points of the explanation to the comment of the code? I think we will need to improve this further, and for sure the test case needs to be updated accordingly. Then with this additional info, it would easier to understand what shall we expect in this scenario later.", "url": "https://github.com/apache/helix/pull/1104#discussion_r442584471", "createdAt": "2020-06-19T01:31:19Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java", "diffHunk": "@@ -605,9 +605,12 @@ public void onStateChange(String instanceName, List<CurrentState> statesInfo,\n         \"Should have 1 data-watches: MESSAGES\");\n     Assert.assertEquals(watchPaths.get(\"childWatches\").size(), 1,\n         \"Should have 1 child-watches: MESSAGES\");\n-    Assert\n-        .assertEquals(watchPaths.get(\"existWatches\").size(), 2,\n-            \"Should have 2 exist-watches: CURRENTSTATE/{oldSessionId} and CURRENTSTATE/{oldSessionId}/TestDB0\");\n+    result = TestHelper.verify(()-> {\n+      Map<String, List<String>> wPaths = ZkTestHelper.getZkWatch(participantToExpire.getZkClient());\n+      return wPaths.get(\"existWatches\").size() == 1;\n+    }, 10000);\n+    Assert.assertTrue(result,\n+        \"Should have 1 exist-watches: CURRENTSTATE/{oldSessionId}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyNTgwNw=="}, "originalCommit": {"oid": "8475450c98f0bf15cf81f9fb69cc6fef876a9ac3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA2NTU4OA==", "bodyText": "Good point, added the comment.", "url": "https://github.com/apache/helix/pull/1104#discussion_r443065588", "createdAt": "2020-06-19T22:28:17Z", "author": {"login": "kaisun2000"}, "path": "helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java", "diffHunk": "@@ -605,9 +605,12 @@ public void onStateChange(String instanceName, List<CurrentState> statesInfo,\n         \"Should have 1 data-watches: MESSAGES\");\n     Assert.assertEquals(watchPaths.get(\"childWatches\").size(), 1,\n         \"Should have 1 child-watches: MESSAGES\");\n-    Assert\n-        .assertEquals(watchPaths.get(\"existWatches\").size(), 2,\n-            \"Should have 2 exist-watches: CURRENTSTATE/{oldSessionId} and CURRENTSTATE/{oldSessionId}/TestDB0\");\n+    result = TestHelper.verify(()-> {\n+      Map<String, List<String>> wPaths = ZkTestHelper.getZkWatch(participantToExpire.getZkClient());\n+      return wPaths.get(\"existWatches\").size() == 1;\n+    }, 10000);\n+    Assert.assertTrue(result,\n+        \"Should have 1 exist-watches: CURRENTSTATE/{oldSessionId}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyNTgwNw=="}, "originalCommit": {"oid": "8475450c98f0bf15cf81f9fb69cc6fef876a9ac3"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1177, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}