{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MzQ2MTI0", "number": 1040, "title": "Remove previousAssignment in processTaskWithPendingMessage method", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR title:\nFixes #1039\n\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\nThe processTaskWithPendingMessage method is relying on the previousAssignment.\nIn this PR, this method has been modified and previousAssignment has been\nreplaced with currentState.\n\nTests\n\n\n The following tests are written for this issue:\nTestUpdatePreviousAssignedTaskStatusWithPendingMessage\n\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n\nHelix-Core:\n[ERROR] Tests run: 1146, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 5,255.063 s <<< FAILURE! - in TestSuite\n[ERROR] testJobQueueAutoCleanUp(org.apache.helix.integration.task.TestJobQueueCleanUp)  Time elapsed: 300.012 s  <<< FAILURE!\norg.testng.internal.thread.ThreadTimeoutException: Method org.testng.internal.TestNGMethod.testJobQueueAutoCleanUp() didn't finish within the time-out 300000\n\n[INFO] \n[INFO] Results:\n[INFO] \n[ERROR] Failures: \n[ERROR]   TestJobQueueCleanUp.testJobQueueAutoCleanUp \u00bb ThreadTimeout Method org.testng....\n[INFO] \n[ERROR] Tests run: 1146, Failures: 1, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:27 h\n[INFO] Finished at: 2020-05-29T14:14:16-07:00\n[INFO] ------------------------------------------------------------------------\n\nThe failed tests have passed when I ran them individually.\nmvn test -Dtest=\"TestJobQueueCleanUp\"\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.521 s - in org.apache.helix.integration.task.TestJobQueueCleanUp\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  22.301 s\n[INFO] Finished at: 2020-05-29T14:38:54-07:00\n[INFO] ------------------------------------------------------------------------\n\nHelix-rest:\n[INFO] Tests run: 159, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 41.274 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 159, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  46.810 s\n[INFO] Finished at: 2020-05-29T14:40:07-07:00\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines, and I have squashed multiple commits if they address the same issue. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml", "createdAt": "2020-05-29T21:42:07Z", "url": "https://github.com/apache/helix/pull/1040", "merged": true, "mergeCommit": {"oid": "ccfb94b297dc2b2ab691756e441f0870f9b7e928"}, "closed": true, "closedAt": "2020-06-04T17:52:55Z", "author": {"login": "alirezazamani"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmJSdpgH2gAyNDI1MzQ2MTI0OjczNDM3NTcyYWRlZjcyNzg1MTIxNDVkZTBmM2M1MDE4Y2E0NTBlZTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcn18E5gFqTQyNDA4NTUzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "73437572adef7278512145de0f3c5018ca450ee6", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/73437572adef7278512145de0f3c5018ca450ee6", "committedDate": "2020-05-29T21:24:31Z", "message": "Remove previousAssignment in processTaskWithPendingMessage method\n\nThe processTaskWithPendingMessage has parts that is relying on the previousAssignment.\nIn this commit, this method has been modified and previousAssignment has been\nreplaced with currentState."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzMxMTAw", "url": "https://github.com/apache/helix/pull/1040#pullrequestreview-421331100", "createdAt": "2020-05-29T22:29:22Z", "commit": {"oid": "73437572adef7278512145de0f3c5018ca450ee6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMjoyOToyMlrOGcuA-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMjoyOToyMlrOGcuA-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2NzIyNA==", "bodyText": "Could this cause problem? If there is a cancel message, so the toState is not RUNNING, it should INIT? Then are we cancelling the CANCEL message?", "url": "https://github.com/apache/helix/pull/1040#discussion_r432767224", "createdAt": "2020-05-29T22:29:22Z", "author": {"login": "junkaixue"}, "path": "helix-core/src/main/java/org/apache/helix/task/AbstractTaskDispatcher.java", "diffHunk": "@@ -449,43 +448,31 @@ private void updatePartitionInformationInJobContext(CurrentStateOutput currentSt\n    * @param paMap\n    * @param assignedPartitions\n    */\n-  private void processTaskWithPendingMessage(ResourceAssignment prevAssignment, Integer pId,\n-      String pName, String instance, Message pendingMessage, TaskState jobState,\n-      TaskPartitionState currState, Map<Integer, PartitionAssignment> paMap,\n-      Map<String, Set<Integer>> assignedPartitions) {\n-\n-    // stateMap is a mapping of Instance -> TaskPartitionState (String)\n-    Map<String, String> stateMap = prevAssignment.getReplicaMap(new Partition(pName));\n-    if (stateMap != null) {\n-      String prevState = stateMap.get(instance);\n-      if (!pendingMessage.getToState().equals(prevState)) {\n-        LOG.warn(String.format(\n-            \"Task pending to-state is %s while previous assigned state is %s. This should not\"\n-                + \"happen.\",\n-            pendingMessage.getToState(), prevState));\n+  private void processTaskWithPendingMessage(Integer pId, String pName, String instance,\n+      Message pendingMessage, TaskState jobState, TaskPartitionState currState,\n+      Map<Integer, PartitionAssignment> paMap, Map<String, Set<Integer>> assignedPartitions) {\n+\n+    if (jobState == TaskState.TIMING_OUT && currState == TaskPartitionState.INIT\n+        && pendingMessage.getToState().equals(TaskPartitionState.RUNNING.name())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73437572adef7278512145de0f3c5018ca450ee6"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTQ4MzMw", "url": "https://github.com/apache/helix/pull/1040#pullrequestreview-421548330", "createdAt": "2020-06-01T01:04:36Z", "commit": {"oid": "73437572adef7278512145de0f3c5018ca450ee6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMTowNDozNlrOGc8hig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMTowNDozNlrOGc8hig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAwNDkzOA==", "bodyText": "I think a better state to assign here might be DROPPED? Previously, we would send things to INIT but that would be a long-winded way to cause this to be dropped. And I'm not sure with the recent changes, the tasks that are timing out that are in INIT state will indeed be dropped eventually.\nIf they don't, then there's a problem - init state takes up a quota in the quota calculation, and we might end up seeing quota leaks.\nHave you tried to drop here directly? We can try to run some tests to see what the consequences are for dropping directly here.", "url": "https://github.com/apache/helix/pull/1040#discussion_r433004938", "createdAt": "2020-06-01T01:04:36Z", "author": {"login": "narendly"}, "path": "helix-core/src/main/java/org/apache/helix/task/AbstractTaskDispatcher.java", "diffHunk": "@@ -449,43 +448,31 @@ private void updatePartitionInformationInJobContext(CurrentStateOutput currentSt\n    * @param paMap\n    * @param assignedPartitions\n    */\n-  private void processTaskWithPendingMessage(ResourceAssignment prevAssignment, Integer pId,\n-      String pName, String instance, Message pendingMessage, TaskState jobState,\n-      TaskPartitionState currState, Map<Integer, PartitionAssignment> paMap,\n-      Map<String, Set<Integer>> assignedPartitions) {\n-\n-    // stateMap is a mapping of Instance -> TaskPartitionState (String)\n-    Map<String, String> stateMap = prevAssignment.getReplicaMap(new Partition(pName));\n-    if (stateMap != null) {\n-      String prevState = stateMap.get(instance);\n-      if (!pendingMessage.getToState().equals(prevState)) {\n-        LOG.warn(String.format(\n-            \"Task pending to-state is %s while previous assigned state is %s. This should not\"\n-                + \"happen.\",\n-            pendingMessage.getToState(), prevState));\n+  private void processTaskWithPendingMessage(Integer pId, String pName, String instance,\n+      Message pendingMessage, TaskState jobState, TaskPartitionState currState,\n+      Map<Integer, PartitionAssignment> paMap, Map<String, Set<Integer>> assignedPartitions) {\n+\n+    if (jobState == TaskState.TIMING_OUT && currState == TaskPartitionState.INIT\n+        && pendingMessage.getToState().equals(TaskPartitionState.RUNNING.name())) {\n+      // While job is timing out, if the task is pending on INIT->RUNNING, set it back to INIT,\n+      // so that Helix will cancel the transition.\n+      paMap.put(pId, new PartitionAssignment(instance, TaskPartitionState.INIT.name()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73437572adef7278512145de0f3c5018ca450ee6"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "279207a14842a6d3fd5a64f823eee74c004b538c", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/279207a14842a6d3fd5a64f823eee74c004b538c", "committedDate": "2020-06-01T20:07:08Z", "message": "Drop the task in INIT state of job is goes to be TIMED_OUT soon"}, "afterCommit": {"oid": "2417eb626593eb5c02665efe3a946c7a4ae7bfd0", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/2417eb626593eb5c02665efe3a946c7a4ae7bfd0", "committedDate": "2020-06-01T20:17:27Z", "message": "Drop the task in INIT state of job is goes to be TIMED_OUT soon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22cb1dd0345022f1a31674c2d418b0110f00b607", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/22cb1dd0345022f1a31674c2d418b0110f00b607", "committedDate": "2020-06-03T21:43:21Z", "message": "Drop the task in INIT state of job is goes to be TIMED_OUT soon"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2417eb626593eb5c02665efe3a946c7a4ae7bfd0", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/2417eb626593eb5c02665efe3a946c7a4ae7bfd0", "committedDate": "2020-06-01T20:17:27Z", "message": "Drop the task in INIT state of job is goes to be TIMED_OUT soon"}, "afterCommit": {"oid": "22cb1dd0345022f1a31674c2d418b0110f00b607", "author": {"user": {"login": "alirezazamani", "name": "Ali Reza Zamani Zadeh Najari"}}, "url": "https://github.com/apache/helix/commit/22cb1dd0345022f1a31674c2d418b0110f00b607", "committedDate": "2020-06-03T21:43:21Z", "message": "Drop the task in INIT state of job is goes to be TIMED_OUT soon"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDg1NTM5", "url": "https://github.com/apache/helix/pull/1040#pullrequestreview-424085539", "createdAt": "2020-06-04T03:59:43Z", "commit": {"oid": "22cb1dd0345022f1a31674c2d418b0110f00b607"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4415, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}