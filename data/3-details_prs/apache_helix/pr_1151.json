{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTIxNzA0", "number": 1151, "title": "Fix enableWagedRebalance by respecting resource names argument", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1150\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nenableWagedRebalance() is not currently respecting the resource names that are passed to it - it's enabling waged for all resources, which isn't correct. The fix is to only enable waged for the provided resource names.\nTests\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[ERROR] Tests run: 1153, Failures: 6, Errors: 0, Skipped: 1, Time elapsed: 4,443.367 s <<< FAILURE! - in TestSuite\n[ERROR] testResourceSubset(org.apache.helix.tools.TestClusterStateVerifier)  Time elapsed: 1.034 s  <<< FAILURE!\norg.apache.helix.HelixException: Failed to create pause signal\n        at org.apache.helix.tools.TestClusterStateVerifier.testResourceSubset(TestClusterStateVerifier.java:115)\n\n[ERROR] afterMethod(org.apache.helix.tools.TestClusterStateVerifier)  Time elapsed: 1.06 s  <<< FAILURE!\njava.lang.IllegalStateException: ZkClient already closed!\n        at org.apache.helix.tools.TestClusterStateVerifier.afterMethod(TestClusterStateVerifier.java:98)\n\n[ERROR] testWorkflowJobFail(org.apache.helix.integration.task.TestWorkflowTermination)  Time elapsed: 10.085 s  <<< FAILURE!\norg.apache.helix.HelixException: Workflow \"testWorkflowJobFail\" context is empty or not in states: \"[FAILED]\", current state: \"IN_PROGRESS\"\n        at org.apache.helix.integration.task.TestWorkflowTermination.testWorkflowJobFail(TestWorkflowTermination.java:229)\n\n[ERROR] TestMessageSimpleSendReceiveAsync(org.apache.helix.integration.messaging.TestCrossClusterMessagingService)  Time elapsed: 2.29 s  <<< FAILURE!\njava.lang.AssertionError: \n        at org.apache.helix.integration.messaging.TestCrossClusterMessagingService.TestMessageSimpleSendReceiveAsync(TestCrossClusterMessagingService.java:145)\n\n[ERROR] testEnableCompressionResource(org.apache.helix.integration.TestEnableCompression)  Time elapsed: 170.378 s  <<< FAILURE!\njava.lang.AssertionError: expected:<true> but was:<false>\n        at org.apache.helix.integration.TestEnableCompression.testEnableCompressionResource(TestEnableCompression.java:117)\n\n[ERROR] testStateTransitionTimeoutByClusterLevel(org.apache.helix.integration.paticipant.TestStateTransitionTimeoutWithResource)  Time elapsed: 37.223 s  <<< FAILURE!\njava.lang.AssertionError: expected:<true> but was:<false>\n        at org.apache.helix.integration.paticipant.TestStateTransitionTimeoutWithResource.testStateTransitionTimeoutByClusterLevel(TestStateTransitionTimeoutWithResource.java:196)\n\n[INFO] \n[INFO] Results:\n[INFO] \n[ERROR] Failures: \n[ERROR]   TestEnableCompression.testEnableCompressionResource:117 expected:<true> but was:<false>\n[ERROR]   TestCrossClusterMessagingService.TestMessageSimpleSendReceiveAsync:145\n[ERROR]   TestStateTransitionTimeoutWithResource.testStateTransitionTimeoutByClusterLevel:196 expected:<true> but was:<false>\n[ERROR]   TestWorkflowTermination.testWorkflowJobFail:229 \u00bb Helix Workflow \"testWorkflow...\n[ERROR]   TestClusterStateVerifier.afterMethod:98 \u00bb IllegalState ZkClient already closed...\n[ERROR]   TestClusterStateVerifier.testResourceSubset:115 \u00bb Helix Failed to create pause...\n[INFO] \n[ERROR] Tests run: 1153, Failures: 6, Errors: 0, Skipped: 1\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:14 h\n[INFO] Finished at: 2020-07-14T18:35:17-07:00\n[INFO] ------------------------------------------------------------------------\n\nRerun\n[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 107.433 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:52 min\n[INFO] Finished at: 2020-07-14T20:22:25-07:00\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-07-14T21:24:15Z", "url": "https://github.com/apache/helix/pull/1151", "merged": true, "mergeCommit": {"oid": "91933c231a6c7481e049bfa7ff045bc3c2d2b388"}, "closed": true, "closedAt": "2020-07-15T18:25:23Z", "author": {"login": "NealSun96"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc048z7gH2gAyNDQ5MTIxNzA0OmU0ZGYyNDMwZGU1NWI4MGRmNWNjNjJlNzkwNDE3MDcyMTFlM2E1NmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1OiNHAFqTQ0OTIwMTg5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e4df2430de55b80df5cc62e79041707211e3a56c", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/e4df2430de55b80df5cc62e79041707211e3a56c", "committedDate": "2020-07-14T16:51:15Z", "message": "Fix enableWagedRebalance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NDg5NTQx", "url": "https://github.com/apache/helix/pull/1151#pullrequestreview-448489541", "createdAt": "2020-07-14T21:46:16Z", "commit": {"oid": "e4df2430de55b80df5cc62e79041707211e3a56c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTo0NjoxNlrOGxmhag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTo1MDoyNFrOGxmopQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2NDU1NA==", "bodyText": "I don't think we need this list, just throw the exception on the first null IS.", "url": "https://github.com/apache/helix/pull/1151#discussion_r454664554", "createdAt": "2020-07-14T21:46:16Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -1861,23 +1861,25 @@ public boolean enableWagedRebalance(String clusterName, List<String> resourceNam\n     HelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n-    List<IdealState> idealStates = accessor.getChildValues(keyBuilder.idealStates(), true);\n+    List<IdealState> idealStates = new ArrayList<>();\n+    List<PropertyKey> idealStateKeys = new ArrayList<>();\n     List<String> nullIdealStates = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4df2430de55b80df5cc62e79041707211e3a56c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2NjQwNQ==", "bodyText": "The original batch call is more efficient. Why do we want to change it?\nYou can still iterate the returned IS list but filter by the resourceNames list. Then check if any item in the resourceNames but not in the returned IS list.", "url": "https://github.com/apache/helix/pull/1151#discussion_r454666405", "createdAt": "2020-07-14T21:50:24Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -1861,23 +1861,25 @@ public boolean enableWagedRebalance(String clusterName, List<String> resourceNam\n     HelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n-    List<IdealState> idealStates = accessor.getChildValues(keyBuilder.idealStates(), true);\n+    List<IdealState> idealStates = new ArrayList<>();\n+    List<PropertyKey> idealStateKeys = new ArrayList<>();\n     List<String> nullIdealStates = new ArrayList<>();\n-    for (int i = 0; i < idealStates.size(); i++) {\n-      if (idealStates.get(i) == null) {\n-        nullIdealStates.add(resourceNames.get(i));\n+    for (String resourceName : resourceNames) {\n+      PropertyKey key = keyBuilder.idealStates(resourceName);\n+      IdealState idealState = accessor.getProperty(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4df2430de55b80df5cc62e79041707211e3a56c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca2860bb3187e35244098daa1e006e0f2ec07b20", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/ca2860bb3187e35244098daa1e006e0f2ec07b20", "committedDate": "2020-07-14T22:41:27Z", "message": "Batch call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceda668f76718f50eb1e39205dd71d9f5cdb8849", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/ceda668f76718f50eb1e39205dd71d9f5cdb8849", "committedDate": "2020-07-14T22:48:59Z", "message": "null check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NTE5MzMy", "url": "https://github.com/apache/helix/pull/1151#pullrequestreview-448519332", "createdAt": "2020-07-14T22:52:39Z", "commit": {"oid": "ceda668f76718f50eb1e39205dd71d9f5cdb8849"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjo1MjozOVrOGxoGfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjo1NDowMlrOGxoIcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5MDQzMA==", "bodyText": "nit, use Set so the contains check is faster.", "url": "https://github.com/apache/helix/pull/1151#discussion_r454690430", "createdAt": "2020-07-14T22:52:39Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -1861,24 +1861,28 @@ public boolean enableWagedRebalance(String clusterName, List<String> resourceNam\n     HelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n+    List<IdealState> enabledIdealStates = new ArrayList<>();\n+    List<PropertyKey> enabledIdealStateKeys = new ArrayList<>();\n+    List<String> enabledResourceNames = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceda668f76718f50eb1e39205dd71d9f5cdb8849"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5MDkzMA==", "bodyText": "if (!enabledResourceNames.containsAll(resourceNames)) {\nthrow\n}", "url": "https://github.com/apache/helix/pull/1151#discussion_r454690930", "createdAt": "2020-07-14T22:54:02Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -1861,24 +1861,28 @@ public boolean enableWagedRebalance(String clusterName, List<String> resourceNam\n     HelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n+    List<IdealState> enabledIdealStates = new ArrayList<>();\n+    List<PropertyKey> enabledIdealStateKeys = new ArrayList<>();\n+    List<String> enabledResourceNames = new ArrayList<>();\n+\n     List<IdealState> idealStates = accessor.getChildValues(keyBuilder.idealStates(), true);\n-    List<String> nullIdealStates = new ArrayList<>();\n-    for (int i = 0; i < idealStates.size(); i++) {\n-      if (idealStates.get(i) == null) {\n-        nullIdealStates.add(resourceNames.get(i));\n-      } else {\n-        idealStates.get(i).setRebalancerClassName(WagedRebalancer.class.getName());\n-        idealStates.get(i).setRebalanceMode(RebalanceMode.FULL_AUTO);\n+    for (IdealState idealState : idealStates) {\n+      if (idealState != null && resourceNames.contains(idealState.getResourceName())) {\n+        idealState.setRebalancerClassName(WagedRebalancer.class.getName());\n+        idealState.setRebalanceMode(RebalanceMode.FULL_AUTO);\n+        enabledIdealStates.add(idealState);\n+        enabledIdealStateKeys.add(keyBuilder.idealStates(idealState.getResourceName()));\n+        enabledResourceNames.add(idealState.getResourceName());\n       }\n     }\n-    if (!nullIdealStates.isEmpty()) {\n+    List<String> resourcesNotFound =\n+        resourceNames.stream().filter(resourceName -> !enabledResourceNames.contains(resourceName))\n+            .collect(Collectors.toList());\n+    if (!resourcesNotFound.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceda668f76718f50eb1e39205dd71d9f5cdb8849"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "073e633bf15384bf292d45b0012bf1941b9aba5b", "author": {"user": null}, "url": "https://github.com/apache/helix/commit/073e633bf15384bf292d45b0012bf1941b9aba5b", "committedDate": "2020-07-14T23:37:28Z", "message": "Set over list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MjAxODkw", "url": "https://github.com/apache/helix/pull/1151#pullrequestreview-449201890", "createdAt": "2020-07-15T18:00:06Z", "commit": {"oid": "073e633bf15384bf292d45b0012bf1941b9aba5b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4559, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}