{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNjc2MDMx", "number": 836, "title": "Make MSDS endpoint configurable for HttpRoutingDataReader", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #835\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nWe need to add a few more constructors that allows the users to configure which MSDS to talk to. Applications may wish to create RealmAwareZkClients connecting to different regions or namespaces.\nTests\n\n The following tests are written for this issue:\n\nExisting tests have coverage for this component.\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  6.689 s\n[INFO] Finished at: 2020-02-28T17:40:18-08:00\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-02-29T01:40:44Z", "url": "https://github.com/apache/helix/pull/836", "merged": true, "mergeCommit": {"oid": "f80d7840f48308cdea3789b7cf5a7fd3d9f3809b"}, "closed": true, "closedAt": "2020-02-29T02:47:42Z", "author": {"login": "narendly"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcI5MEjgH2gAyMzgxNjc2MDMxOjVkMzdjMWEyMGM1Mzk0Yjc4MTQzNzljNjQ2Mzg3NmMxMjI5ZDI0YWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKwJ4vAFqTM2OTgyMTE3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5d37c1a20c5394b7814379c6463876c1229d24af", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/5d37c1a20c5394b7814379c6463876c1229d24af", "committedDate": "2020-02-29T00:15:15Z", "message": "Make MSDS endpoint configurable for HttpRoutingDataReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "099d11f3fb9bfe182f7e56607fdbc24f18c1cf8a", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/099d11f3fb9bfe182f7e56607fdbc24f18c1cf8a", "committedDate": "2020-02-29T01:43:43Z", "message": "Fix formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzcxNDA1", "url": "https://github.com/apache/helix/pull/836#pullrequestreview-366771405", "createdAt": "2020-02-29T02:46:01Z", "commit": {"oid": "099d11f3fb9bfe182f7e56607fdbc24f18c1cf8a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5ODIxMTc0", "url": "https://github.com/apache/helix/pull/836#pullrequestreview-369821174", "createdAt": "2020-03-05T18:44:37Z", "commit": {"oid": "099d11f3fb9bfe182f7e56607fdbc24f18c1cf8a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODo0NDozOFrOFyfctg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODo1MToxNFrOFyfqfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4ODM3NA==", "bodyText": "This should be concurrentHashMap()", "url": "https://github.com/apache/helix/pull/836#discussion_r388488374", "createdAt": "2020-03-05T18:44:38Z", "author": {"login": "kaisun2000"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/util/HttpRoutingDataReader.java", "diffHunk": "@@ -41,13 +42,17 @@\n \n \n public class HttpRoutingDataReader {\n-  private static final String MSDS_ENDPOINT =\n+  private static final String SYSTEM_MSDS_ENDPOINT =\n       System.getProperty(MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY);\n   private static final int HTTP_TIMEOUT_IN_MS = 5000;\n \n   /** Double-checked locking requires that the following fields be volatile */\n-  private static volatile Map<String, List<String>> _rawRoutingData;\n-  private static volatile MetadataStoreRoutingData _metadataStoreRoutingData;\n+  // The following map stands for (MSDS endpoint, Raw Routing Data)\n+  private static volatile Map<String, Map<String, List<String>>> _rawRoutingDataMap =\n+      new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "099d11f3fb9bfe182f7e56607fdbc24f18c1cf8a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4ODU0Mg==", "bodyText": "concurrentHashMap()", "url": "https://github.com/apache/helix/pull/836#discussion_r388488542", "createdAt": "2020-03-05T18:44:58Z", "author": {"login": "kaisun2000"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/util/HttpRoutingDataReader.java", "diffHunk": "@@ -41,13 +42,17 @@\n \n \n public class HttpRoutingDataReader {\n-  private static final String MSDS_ENDPOINT =\n+  private static final String SYSTEM_MSDS_ENDPOINT =\n       System.getProperty(MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY);\n   private static final int HTTP_TIMEOUT_IN_MS = 5000;\n \n   /** Double-checked locking requires that the following fields be volatile */\n-  private static volatile Map<String, List<String>> _rawRoutingData;\n-  private static volatile MetadataStoreRoutingData _metadataStoreRoutingData;\n+  // The following map stands for (MSDS endpoint, Raw Routing Data)\n+  private static volatile Map<String, Map<String, List<String>>> _rawRoutingDataMap =\n+      new HashMap<>();\n+  // The following map stands for (MSDS endpoint, MetadataStoreRoutingData)\n+  private static volatile Map<String, MetadataStoreRoutingData> _metadataStoreRoutingDataMap =\n+      new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "099d11f3fb9bfe182f7e56607fdbc24f18c1cf8a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4OTU4Mg==", "bodyText": "Here, multiple thread can reach this get and thus we should use concurrentHashmap. Declaring it to volatile is not enough.\nSee my previous discussion with @pkuwm in the federatedZkClient.", "url": "https://github.com/apache/helix/pull/836#discussion_r388489582", "createdAt": "2020-03-05T18:46:56Z", "author": {"login": "kaisun2000"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/util/HttpRoutingDataReader.java", "diffHunk": "@@ -56,44 +61,78 @@ private HttpRoutingDataReader() {\n   }\n \n   /**\n-   * Fetches routing data from the data source via HTTP.\n-   * @return a mapping from \"metadata store realm addresses\" to lists of\n-   * \"metadata store sharding keys\", where the sharding keys in a value list all route to\n-   * the realm address in the key disallows a meaningful mapping to be returned\n+   * Fetches routing data from the data source via HTTP by querying the MSDS configured in the JVM config.\n+   * @return\n+   * @throws IOException\n    */\n   public static Map<String, List<String>> getRawRoutingData() throws IOException {\n-    if (MSDS_ENDPOINT == null || MSDS_ENDPOINT.isEmpty()) {\n+    if (SYSTEM_MSDS_ENDPOINT == null || SYSTEM_MSDS_ENDPOINT.isEmpty()) {\n       throw new IllegalStateException(\n           \"HttpRoutingDataReader was unable to find a valid MSDS endpoint String in System Properties!\");\n     }\n-    if (_rawRoutingData == null) {\n+    return getRawRoutingData(SYSTEM_MSDS_ENDPOINT);\n+  }\n+\n+  /**\n+   * Fetches routing data from the data source via HTTP.\n+   * @return a mapping from \"metadata store realm addresses\" to lists of\n+   * \"metadata store sharding keys\", where the sharding keys in a value list all route to\n+   * the realm address in the key disallows a meaningful mapping to be returned.\n+   * @param msdsEndpoint Metadata Store Directory Store endpoint to query from\n+   */\n+  public static Map<String, List<String>> getRawRoutingData(String msdsEndpoint)\n+      throws IOException {\n+    Map<String, List<String>> rawRoutingData = _rawRoutingDataMap.get(msdsEndpoint);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "099d11f3fb9bfe182f7e56607fdbc24f18c1cf8a"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5MTkwMA==", "bodyText": "In fact, if my understanding is correct, we people use this one, for one product, there is only one SYSTEM_MSDS_ENDPOINT would be defined. Say storagesystem1, or storagesystem2. They can't co-exist. Put it another way, this map the first key field would alway have only one value, right?\nI guess the intention is that to make this httproutingdatareader servering multiple namespaces (storagesystem1, storagesysgtem2). In reality, they would still serve only one.\nOr am I missing something here?", "url": "https://github.com/apache/helix/pull/836#discussion_r388491900", "createdAt": "2020-03-05T18:51:14Z", "author": {"login": "kaisun2000"}, "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/util/HttpRoutingDataReader.java", "diffHunk": "@@ -41,13 +42,17 @@\n \n \n public class HttpRoutingDataReader {\n-  private static final String MSDS_ENDPOINT =\n+  private static final String SYSTEM_MSDS_ENDPOINT =\n       System.getProperty(MetadataStoreRoutingConstants.MSDS_SERVER_ENDPOINT_KEY);\n   private static final int HTTP_TIMEOUT_IN_MS = 5000;\n \n   /** Double-checked locking requires that the following fields be volatile */\n-  private static volatile Map<String, List<String>> _rawRoutingData;\n-  private static volatile MetadataStoreRoutingData _metadataStoreRoutingData;\n+  // The following map stands for (MSDS endpoint, Raw Routing Data)\n+  private static volatile Map<String, Map<String, List<String>>> _rawRoutingDataMap =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "099d11f3fb9bfe182f7e56607fdbc24f18c1cf8a"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4994, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}