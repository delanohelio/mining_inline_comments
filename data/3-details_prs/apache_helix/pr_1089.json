{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNDQ4NjM0", "number": 1089, "title": "Implement getStat in ZookeeperAccessor", "bodyText": "Issues\n\n My PR addresses the following Helix issues and references them in the PR description:\n\nFixes #1088\nDescription\n\n Here are some details about my PR, including screenshots of any UI changes:\n\nHelix REST doesn't provide a way for users to get the Stat object for a ZNode. This commit enables this with a getStat command.\nTests\n\n The following tests are written for this issue:\n\nZookeeperAccessor::testGetStat\n\n The following is the result of the \"mvn test\" command on the appropriate module:\n\n[INFO] Tests run: 163, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 35.178 s - in TestSuite\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 163, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n\nCommits\n\n My commits all reference appropriate Apache Helix GitHub issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nCode Quality\n\n My diff has been formatted using helix-style.xml\n(helix-style-intellij.xml if IntelliJ IDE is used)", "createdAt": "2020-06-12T03:53:38Z", "url": "https://github.com/apache/helix/pull/1089", "merged": true, "mergeCommit": {"oid": "406802faada838b6ec74b04f83d2981f92510d95"}, "closed": true, "closedAt": "2020-06-13T04:05:11Z", "author": {"login": "narendly"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqakovgH2gAyNDMzNDQ4NjM0OjlmYTM3YWI1ZWQ2Yjg5NmE5NjU0ZTgwNmRiMjJjYzEyNTBhZTI5ODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqqXeGgFqTQzMDA2MzE3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9fa37ab5ed6b896a9654e806db22cc1250ae2985", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/9fa37ab5ed6b896a9654e806db22cc1250ae2985", "committedDate": "2020-06-12T03:48:27Z", "message": "Implement getStat in ZookeeperAccessor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f06e1108ee8d641fc59d4f85b4b84b52a413481", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/5f06e1108ee8d641fc59d4f85b4b84b52a413481", "committedDate": "2020-06-12T03:54:23Z", "message": "sadf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8583f8275afe90e7a2b27a45cafa3311f57ac6ec", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/8583f8275afe90e7a2b27a45cafa3311f57ac6ec", "committedDate": "2020-06-12T03:56:07Z", "message": "adsf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54d4950b029837a9b85c00442ecc3fc3b916586c", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/54d4950b029837a9b85c00442ecc3fc3b916586c", "committedDate": "2020-06-12T06:13:43Z", "message": "add stat by default"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMDQ0NjM1", "url": "https://github.com/apache/helix/pull/1089#pullrequestreview-430044635", "createdAt": "2020-06-12T21:22:05Z", "commit": {"oid": "54d4950b029837a9b85c00442ecc3fc3b916586c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMToyMjowNlrOGjR9Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMToyNzoxMlrOGjSDqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0NzU2Ng==", "bodyText": "You might want to checkout this method of the Zookeeper Stat class, simply implement an OutputArchive to avoid hardcode getting fields here.\npublic void serialize(OutputArchive a_, String tag) throws java.io.IOException {\na_.startRecord(this,tag);\na_.writeLong(czxid,\"czxid\");\na_.writeLong(mzxid,\"mzxid\");\na_.writeLong(ctime,\"ctime\");\na_.writeLong(mtime,\"mtime\");\na_.writeInt(version,\"version\");\na_.writeInt(cversion,\"cversion\");\na_.writeInt(aversion,\"aversion\");\na_.writeLong(ephemeralOwner,\"ephemeralOwner\");\na_.writeInt(dataLength,\"dataLength\");\na_.writeInt(numChildren,\"numChildren\");\na_.writeLong(pzxid,\"pzxid\");\na_.endRecord(this,tag);\n}", "url": "https://github.com/apache/helix/pull/1089#discussion_r439647566", "createdAt": "2020-06-12T21:22:06Z", "author": {"login": "jiajunwang"}, "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -632,4 +634,39 @@ private static RealmAwareZkClient getHelixZkClient(String zkAddr) {\n     return DedicatedZkClientFactory.getInstance()\n         .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr), clientConfig);\n   }\n+\n+  /**\n+   * Convert Stat fields into a Map.\n+   *     private long czxid;\n+   *     private long mzxid;\n+   *     private long ctime;\n+   *     private long mtime;\n+   *     private int version;\n+   *     private int cversion;\n+   *     private int aversion;\n+   *     private long ephemeralOwner;\n+   *     private int dataLength;\n+   *     private int numChildren;\n+   *     private long pzxid;\n+   * @param stat\n+   * @return\n+   */\n+  public static Map<String, String> fromStatToMap(Stat stat) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54d4950b029837a9b85c00442ecc3fc3b916586c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0OTE5Mw==", "bodyText": "I think getStat return null if the path does not exist. So you don't need to call exists before this line.", "url": "https://github.com/apache/helix/pull/1089#discussion_r439649193", "createdAt": "2020-06-12T21:27:12Z", "author": {"login": "jiajunwang"}, "path": "helix-rest/src/main/java/org/apache/helix/rest/server/resources/zookeeper/ZooKeeperAccessor.java", "diffHunk": "@@ -165,6 +179,24 @@ private Response getChildren(BaseDataAccessor<byte[]> zkBaseDataAccessor, String\n     }\n   }\n \n+  /**\n+   * Returns the ZNode Stat object given the path.\n+   * @param zkBaseDataAccessor\n+   * @param path\n+   * @return\n+   */\n+  private Response getStat(BaseDataAccessor<byte[]> zkBaseDataAccessor, String path) {\n+    if (zkBaseDataAccessor.exists(path, AccessOption.PERSISTENT)) {\n+      Stat stat = zkBaseDataAccessor.getStat(path, AccessOption.PERSISTENT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54d4950b029837a9b85c00442ecc3fc3b916586c"}, "originalPosition": 112}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7d2e5fb40e803aa0c52521bb0e2b31f899f18c1", "author": {"user": {"login": "narendly", "name": "Hunter Lee"}}, "url": "https://github.com/apache/helix/commit/e7d2e5fb40e803aa0c52521bb0e2b31f899f18c1", "committedDate": "2020-06-12T22:04:09Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMDYzMTcw", "url": "https://github.com/apache/helix/pull/1089#pullrequestreview-430063170", "createdAt": "2020-06-12T22:12:33Z", "commit": {"oid": "e7d2e5fb40e803aa0c52521bb0e2b31f899f18c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4488, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}