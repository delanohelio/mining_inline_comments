{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMDYzNjM3", "number": 2168, "title": "Bot pathfinding tweaks", "bodyText": "Some pathfinding tweaks to the bot after observing fairly poor decision making in \"chase\" and \"breakthrough\" type scenarios.\n\nactually generate long-range jump paths as opposed to two sets of ground-bound long-range paths\njump path-specific clipping/\"decoration\" (for low-gravity environments)\ndon't attempt to keep an enemy in range when the unit has somewhere to be\nASFs don't generate long-range paths, which was mistakenly causing them to behave as if they were engaging in battle rather than moving to a destination edge", "createdAt": "2020-08-23T02:19:10Z", "url": "https://github.com/MegaMek/megamek/pull/2168", "merged": true, "mergeCommit": {"oid": "3c39a79a06b2fd298a70952670605d467268a271"}, "closed": true, "closedAt": "2020-08-23T03:30:27Z", "author": {"login": "NickAragua"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBcUUtAH2gAyNDcyMDYzNjM3OjU2NDE1YzFkOGIzZDg5MjY0MWEyOTY3ODk2ZDEyM2VmZDUwMjQ2MmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBld5RAH2gAyNDcyMDYzNjM3OjQ4MzAxOGU0M2NjYWQwODczODc1MzI4MWUzOGVhMDRiM2RlODg1OWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "56415c1d8b3d892641a2967896d123efd502462f", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/56415c1d8b3d892641a2967896d123efd502462f", "committedDate": "2020-08-22T16:50:42Z", "message": "actual generation of long-range jump paths"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "426a77171ce59adac21710f523a912267cddcb49", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/426a77171ce59adac21710f523a912267cddcb49", "committedDate": "2020-08-23T01:20:05Z", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into bot_pathfinding_tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22d9b569f044a2f052fc2ea9fc052d9ed88e0f89", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/22d9b569f044a2f052fc2ea9fc052d9ed88e0f89", "committedDate": "2020-08-23T02:12:48Z", "message": "don't check for engagement if attempting to flee"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b194db097dd8e427513240f1f4e574fdbaabad35", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/b194db097dd8e427513240f1f4e574fdbaabad35", "committedDate": "2020-08-23T02:14:05Z", "message": "remove debugging code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTczOTQ5", "url": "https://github.com/MegaMek/megamek/pull/2168#pullrequestreview-472973949", "createdAt": "2020-08-23T02:19:59Z", "commit": {"oid": "22d9b569f044a2f052fc2ea9fc052d9ed88e0f89"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMDozN1rOHFJd-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMjozNFrOHFJebA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDA1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(!isAirborneAeroOnGroundMap && !getOwner().wantsToFallBack(mover)) {\n          \n          \n            \n                            if (!isAirborneAeroOnGroundMap && !getOwner().wantsToFallBack(mover)) {", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160057", "createdAt": "2020-08-23T02:20:37Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/PathRanker.java", "diffHunk": "@@ -195,7 +196,8 @@ abstract RankedPath rankPath(MovePath path, IGame game, int maxRange, double fal\n \n                 // Make sure I'm trying to get/stay in range of a target.\n                 // Skip this part if I'm an aero on the ground map, as it's kind of irrelevant\n-                if(!isAirborneAeroOnGroundMap) {\n+                // also skip this part if I'm attempting to retreat, as engagement is not the point here\n+                if(!isAirborneAeroOnGroundMap && !getOwner().wantsToFallBack(mover)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d9b569f044a2f052fc2ea9fc052d9ed88e0f89"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDA3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(!mover.isAirborne()) {                \n          \n          \n            \n                            if (!mover.isAirborne()) {", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160078", "createdAt": "2020-08-23T02:20:53Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/Princess.java", "diffHunk": "@@ -1521,7 +1521,10 @@ protected void initFiring() {\n             // so just have it mill around in place as usual. Also set the behavior to \"no path to destination\"\n             // so it doesn't hump the walls due to \"self preservation mods\"\n             if ((bulldozerPaths == null) || (bulldozerPaths.size() == 0)) {\n-                getUnitBehaviorTracker().overrideBehaviorType(mover, BehaviorType.NoPathToDestination);\n+                \n+                if(!mover.isAirborne()) {                ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d9b569f044a2f052fc2ea9fc052d9ed88e0f89"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDExMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(jumpMPNoGravity == null) {\n          \n          \n            \n                    if (jumpMPNoGravity == null) {", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160110", "createdAt": "2020-08-23T02:21:41Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "diffHunk": "@@ -106,6 +108,22 @@ public int getTorsoJumpJets() {\n         return torsoJumpJets;\n     }\n     \n+    public int getJumpMPNoGravity() {\n+        if(jumpMPNoGravity == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b194db097dd8e427513240f1f4e574fdbaabad35"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDEzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(runMPNoGravity == null) {\n          \n          \n            \n                    if (runMPNoGravity == null) {", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160133", "createdAt": "2020-08-23T02:21:48Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "diffHunk": "@@ -106,6 +108,22 @@ public int getTorsoJumpJets() {\n         return torsoJumpJets;\n     }\n     \n+    public int getJumpMPNoGravity() {\n+        if(jumpMPNoGravity == null) {\n+            jumpMPNoGravity = backingEntity.getJumpMP(false);\n+        }\n+        \n+        return jumpMPNoGravity;\n+    }\n+    \n+    public int getRunMPNoGravity() {\n+        if(runMPNoGravity == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b194db097dd8e427513240f1f4e574fdbaabad35"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDE3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(int desiredMP : desiredMPs) {\n          \n          \n            \n                    for (int desiredMP : desiredMPs) {", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160172", "createdAt": "2020-08-23T02:22:34Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/PathDecorator.java", "diffHunk": "@@ -33,10 +33,62 @@\n  */\n public class PathDecorator {\n     \n+    public static Set<MovePath> decoratePath(BulldozerMovePath source) {\n+        Set<MovePath> result = new HashSet<>();\n+        \n+        // paths that aren't on the ground require separate and special logic\n+        if (source.isJumping()) {\n+            result.addAll(decorateJumpPath(source));\n+        } else if (source.getEntity().isAirborne()) {\n+            result.add(source);\n+        } else if (source.getGame().useVectorMove()) {\n+            result.add(source);\n+        } else {\n+            result.addAll(decorateGroundPath(source));\n+        }\n+        \n+        return result;\n+    }\n+    \n+    /**\n+     * Takes a given (jumping) path and returns a list of child paths that lead up to max jump MP or\n+     * max jump MP without gravity.\n+     */\n+    public static Set<MovePath> decorateJumpPath(BulldozerMovePath source) {\n+        Set<MovePath> retVal = new HashSet<>();\n+        \n+        MovePath clippedSource = source.clone();\n+        clippedSource.clipToPossible();\n+        \n+        // jumping move paths are pretty easy to clip\n+        // there are two interesting MP amounts - current jump MP and jump MP without \"bonus\" for low gravity.\n+        Set<Integer> desiredMPs = new HashSet<>();\n+        desiredMPs.add(source.getCachedEntityState().getJumpMP());\n+        desiredMPs.add(source.getCachedEntityState().getJumpMPNoGravity());\n+        \n+        for(int desiredMP : desiredMPs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b194db097dd8e427513240f1f4e574fdbaabad35"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "483018e43ccad08738753281e38ea04b3de8859b", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/483018e43ccad08738753281e38ea04b3de8859b", "committedDate": "2020-08-23T03:30:18Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4730, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}