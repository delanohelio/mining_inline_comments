{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NDQyOTYx", "number": 2060, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNzoyMFrOEN9WiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNzo0MlrOEN9XDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDcyMTM2OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNzoyMFrOGw2qZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNzoyMFrOGw2qZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MDQyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n          \n          \n            \n                        } else if (mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {", "url": "https://github.com/MegaMek/megamek/pull/2060#discussion_r453880421", "createdAt": "2020-07-13T19:27:20Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -247,14 +247,18 @@ public boolean shouldStay(MovePath movePath) {\n                 SpheroidPathFinder spf = SpheroidPathFinder.getInstance(game);\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n-            // this handles the case of the mover being an infantry unit of some kind\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY)) {\n+            // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n+            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64912548b8da861b0a4e5e79ca36ff0846f1a110"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDcyMjA2OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNzozMFrOGw2qxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNzozMFrOGw2qxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MDUxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else if(!mover.isAero() && mover.isAirborne()) {\n          \n          \n            \n                        } else if (!mover.isAero() && mover.isAirborne()) {", "url": "https://github.com/MegaMek/megamek/pull/2060#discussion_r453880519", "createdAt": "2020-07-13T19:27:30Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -247,14 +247,18 @@ public boolean shouldStay(MovePath movePath) {\n                 SpheroidPathFinder spf = SpheroidPathFinder.getInstance(game);\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n-            // this handles the case of the mover being an infantry unit of some kind\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY)) {\n+            // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n+            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n                 InfantryPathFinder ipf = InfantryPathFinder.getInstance(getGame());\n                 ipf.run(new MovePath(game, mover));\n                 paths.addAll(ipf.getAllComputedPathsUncategorized());\n                 \n                 // generate long-range paths appropriate to the bot's current state\n                 updateLongRangePaths(mover);\n+            // this handles situations wher a unit is high up in the air, but is not an aircraft\n+            // such as an ejected pilot or a unit hot dropping from a dropship, as these cannot move\n+            } else if(!mover.isAero() && mover.isAirborne()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64912548b8da861b0a4e5e79ca36ff0846f1a110"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDcyMjcxOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNzo0MlrOGw2rMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNzo0MlrOGw2rMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MDYyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // this handles situations wher a unit is high up in the air, but is not an aircraft\n          \n          \n            \n                        // this handles situations where a unit is high up in the air, but is not an aircraft", "url": "https://github.com/MegaMek/megamek/pull/2060#discussion_r453880626", "createdAt": "2020-07-13T19:27:42Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -247,14 +247,18 @@ public boolean shouldStay(MovePath movePath) {\n                 SpheroidPathFinder spf = SpheroidPathFinder.getInstance(game);\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n-            // this handles the case of the mover being an infantry unit of some kind\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY)) {\n+            // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n+            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n                 InfantryPathFinder ipf = InfantryPathFinder.getInstance(getGame());\n                 ipf.run(new MovePath(game, mover));\n                 paths.addAll(ipf.getAllComputedPathsUncategorized());\n                 \n                 // generate long-range paths appropriate to the bot's current state\n                 updateLongRangePaths(mover);\n+            // this handles situations wher a unit is high up in the air, but is not an aircraft", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64912548b8da861b0a4e5e79ca36ff0846f1a110"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2851, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}