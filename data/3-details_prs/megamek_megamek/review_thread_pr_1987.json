{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODk5OTMz", "number": 1987, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMjoyNjo0M1rOEB-rWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0OToyM1rOEC8VjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTEwOTM2OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/BotClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMjoyNjo0M1rOGeJ86g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMjoyNjo0M1rOGeJ86g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3MzUxNA==", "bodyText": "Could we rename this to fitnessOfPathToEdge or something?", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r434273514", "createdAt": "2020-06-03T02:26:43Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/client/bot/BotClient.java", "diffHunk": "@@ -915,33 +920,30 @@ protected Coords getFirstValidCoords(Entity deployedUnit, List<Coords> possibleD\n         return result;\n     }\n \n-    /**\n-     * Gets the {@link BoardEdgePathFinder} for an {@link Entity} for their\n-     * current movement mode.\n-     * @param entity The entity to retrieve the {@link BoardEdgePathFinder}.\n-     * @return The appropriate {@link BoardEdgePathFinder} for the given entity.\n-     */\n-    private BoardEdgePathFinder getBoardEdgePathFinder(Entity entity) {\n-        return deploymentPathFinders.computeIfAbsent(entity.getMovementMode(), \n-            e -> new BoardEdgePathFinder());\n-    }\n-\n-    // ToDo: Change this to 'hasSafePathToCenter' to account for buildings, lava and similar hazards.\n     /**\n      * Determines if the given entity has a reasonable path to the \"opposite\" edge of the board from its\n-     * current position.\n-     * @param entity\n-     * @param board\n-     * @return\n+     * current position. Returns 0 if this can be accomplished without destroying any terrain, \n+     * -50 if this can be accomplished but terrain must be destroyed,\n+     * -100 if this cannot be accomplished at all\n      */\n-    private boolean hasPathToEdge(Entity entity, IBoard board) {\n+    private int hasPathToEdge(Entity entity, IBoard board) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b59a243e6be4b10b80eb01e51454b1a82724242c"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTExMDU1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/BotClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMjoyNzo0NVrOGeJ9xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMjozNTozOFrOGeKE_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3MzczMg==", "bodyText": "If this is expensive you could move this into an else block after the noReductionZoneSize > 0 check.", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r434273732", "createdAt": "2020-06-03T02:27:45Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/client/bot/BotClient.java", "diffHunk": "@@ -915,33 +920,30 @@ protected Coords getFirstValidCoords(Entity deployedUnit, List<Coords> possibleD\n         return result;\n     }\n \n-    /**\n-     * Gets the {@link BoardEdgePathFinder} for an {@link Entity} for their\n-     * current movement mode.\n-     * @param entity The entity to retrieve the {@link BoardEdgePathFinder}.\n-     * @return The appropriate {@link BoardEdgePathFinder} for the given entity.\n-     */\n-    private BoardEdgePathFinder getBoardEdgePathFinder(Entity entity) {\n-        return deploymentPathFinders.computeIfAbsent(entity.getMovementMode(), \n-            e -> new BoardEdgePathFinder());\n-    }\n-\n-    // ToDo: Change this to 'hasSafePathToCenter' to account for buildings, lava and similar hazards.\n     /**\n      * Determines if the given entity has a reasonable path to the \"opposite\" edge of the board from its\n-     * current position.\n-     * @param entity\n-     * @param board\n-     * @return\n+     * current position. Returns 0 if this can be accomplished without destroying any terrain, \n+     * -50 if this can be accomplished but terrain must be destroyed,\n+     * -100 if this cannot be accomplished at all\n      */\n-    private boolean hasPathToEdge(Entity entity, IBoard board) {\n+    private int hasPathToEdge(Entity entity, IBoard board) {\n         // Flying units can always get anywhere\n         if (entity.isAirborne() || entity instanceof VTOL) {\n-            return true;\n+            return 0;\n         }\n         \n-        MovePath mp = getBoardEdgePathFinder(entity).findPathToEdge(entity);\n-        return mp != null;\n+        CardinalEdge destinationEdge = BoardUtilities.determineOppositeEdge(entity);\n+        \n+        int noReductionZoneSize = getClusterTracker().getDestinationCoords(entity, destinationEdge, false).size();\n+        int reductionZoneSize = getClusterTracker().getDestinationCoords(entity, destinationEdge, true).size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b59a243e6be4b10b80eb01e51454b1a82724242c"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3NTU4MA==", "bodyText": "Running time of n hashmap lookups where n is the width/height of the edge, so probably not worth it.", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r434275580", "createdAt": "2020-06-03T02:35:38Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/client/bot/BotClient.java", "diffHunk": "@@ -915,33 +920,30 @@ protected Coords getFirstValidCoords(Entity deployedUnit, List<Coords> possibleD\n         return result;\n     }\n \n-    /**\n-     * Gets the {@link BoardEdgePathFinder} for an {@link Entity} for their\n-     * current movement mode.\n-     * @param entity The entity to retrieve the {@link BoardEdgePathFinder}.\n-     * @return The appropriate {@link BoardEdgePathFinder} for the given entity.\n-     */\n-    private BoardEdgePathFinder getBoardEdgePathFinder(Entity entity) {\n-        return deploymentPathFinders.computeIfAbsent(entity.getMovementMode(), \n-            e -> new BoardEdgePathFinder());\n-    }\n-\n-    // ToDo: Change this to 'hasSafePathToCenter' to account for buildings, lava and similar hazards.\n     /**\n      * Determines if the given entity has a reasonable path to the \"opposite\" edge of the board from its\n-     * current position.\n-     * @param entity\n-     * @param board\n-     * @return\n+     * current position. Returns 0 if this can be accomplished without destroying any terrain, \n+     * -50 if this can be accomplished but terrain must be destroyed,\n+     * -100 if this cannot be accomplished at all\n      */\n-    private boolean hasPathToEdge(Entity entity, IBoard board) {\n+    private int hasPathToEdge(Entity entity, IBoard board) {\n         // Flying units can always get anywhere\n         if (entity.isAirborne() || entity instanceof VTOL) {\n-            return true;\n+            return 0;\n         }\n         \n-        MovePath mp = getBoardEdgePathFinder(entity).findPathToEdge(entity);\n-        return mp != null;\n+        CardinalEdge destinationEdge = BoardUtilities.determineOppositeEdge(entity);\n+        \n+        int noReductionZoneSize = getClusterTracker().getDestinationCoords(entity, destinationEdge, false).size();\n+        int reductionZoneSize = getClusterTracker().getDestinationCoords(entity, destinationEdge, true).size();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3MzczMg=="}, "originalCommit": {"oid": "b59a243e6be4b10b80eb01e51454b1a82724242c"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTExNDM4OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/Tank.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMjozMDo0MFrOGeKARQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMjozNjowMVrOGeKFVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3NDM3Mw==", "bodyText": "These and's and or's are confusing as to who binds to who, so I'm struggling to determine if these are \"correct\".", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r434274373", "createdAt": "2020-06-03T02:30:40Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/common/Tank.java", "diffHunk": "@@ -580,59 +580,60 @@ public boolean isLocationProhibited(Coords c, int currElevation) {\n \n         boolean hasFlotationHull = hasWorkingMisc(MiscType.F_FLOTATION_HULL);\n         boolean isAmphibious = hasWorkingMisc(MiscType.F_FULLY_AMPHIBIOUS);\n+        boolean hexHasRoad =  hex.containsTerrain(Terrains.ROAD);\n \n         switch (movementMode) {\n             case TRACKED:\n                 if (!isSuperHeavy()) {\n-                    return (hex.terrainLevel(Terrains.WOODS) > 1)\n+                    return (hex.terrainLevel(Terrains.WOODS) > 1) && !hexHasRoad", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b59a243e6be4b10b80eb01e51454b1a82724242c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3NTY3MA==", "bodyText": "I can put 'em into parens, and write up some comments.", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r434275670", "createdAt": "2020-06-03T02:36:01Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/Tank.java", "diffHunk": "@@ -580,59 +580,60 @@ public boolean isLocationProhibited(Coords c, int currElevation) {\n \n         boolean hasFlotationHull = hasWorkingMisc(MiscType.F_FLOTATION_HULL);\n         boolean isAmphibious = hasWorkingMisc(MiscType.F_FULLY_AMPHIBIOUS);\n+        boolean hexHasRoad =  hex.containsTerrain(Terrains.ROAD);\n \n         switch (movementMode) {\n             case TRACKED:\n                 if (!isSuperHeavy()) {\n-                    return (hex.terrainLevel(Terrains.WOODS) > 1)\n+                    return (hex.terrainLevel(Terrains.WOODS) > 1) && !hexHasRoad", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3NDM3Mw=="}, "originalCommit": {"oid": "b59a243e6be4b10b80eb01e51454b1a82724242c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTExNTE4OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMjozMTowOFrOGeKAwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMjozMTowOFrOGeKAwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3NDQ5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for(int y = 0; y < board.getHeight(); y++) {                \n          \n          \n            \n                        for(int y = 0; y < board.getHeight(); y++) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r434274497", "createdAt": "2020-06-03T02:31:08Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -157,18 +192,18 @@ public void updateMovableAreas(Entity entity) {\n         IBoard board = entity.getGame().getBoard();\n         int clusterID = 0;\n         \n-        boolean isHovercraft = entity.getMovementMode() == EntityMovementMode.HOVER;\n-        boolean isAmphibious = entity.hasWorkingMisc(MiscType.F_AMPHIBIOUS) ||\n-                                entity.hasWorkingMisc(MiscType.F_FULLY_AMPHIBIOUS) ||\n-                                entity.hasWorkingMisc(MiscType.F_LIMITED_AMPHIBIOUS);\n+        MovementType movementType = MovementType.getMovementType(entity);\n+        boolean isHovercraft = movementType == MovementType.Hover;\n+        boolean isAmphibious = movementType == MovementType.WheeledAmphi ||\n+                                movementType == MovementType.TrackedAmphi;\n         \n         for(int x = 0; x < board.getWidth(); x++) {\n-            for(int y = 0; y < board.getHeight(); y++) {\n+            for(int y = 0; y < board.getHeight(); y++) {                ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b59a243e6be4b10b80eb01e51454b1a82724242c"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE2MTA0OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/BotClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozNDoxMVrOGfsq4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozNDoxMVrOGfsq4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5MDkxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(noReductionZoneSize > 0) {\n          \n          \n            \n                        return 0;\n          \n          \n            \n                    } else if(reductionZoneSize > 0) {\n          \n          \n            \n                    if (noReductionZoneSize > 0) {\n          \n          \n            \n                        return 0;\n          \n          \n            \n                    } else if (reductionZoneSize > 0) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435890913", "createdAt": "2020-06-05T12:34:11Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/BotClient.java", "diffHunk": "@@ -916,32 +921,29 @@ protected Coords getFirstValidCoords(Entity deployedUnit, List<Coords> possibleD\n     }\n \n     /**\n-     * Gets the {@link BoardEdgePathFinder} for an {@link Entity} for their\n-     * current movement mode.\n-     * @param entity The entity to retrieve the {@link BoardEdgePathFinder}.\n-     * @return The appropriate {@link BoardEdgePathFinder} for the given entity.\n+     * Determines if the given entity has reasonable access to the \"opposite\" edge of the board from its\n+     * current position. Returns 0 if this can be accomplished without destroying any terrain, \n+     * -50 if this can be accomplished but terrain must be destroyed,\n+     * -100 if this cannot be accomplished at all\n      */\n-    private BoardEdgePathFinder getBoardEdgePathFinder(Entity entity) {\n-        return deploymentPathFinders.computeIfAbsent(entity.getMovementMode(), \n-            e -> new BoardEdgePathFinder());\n-    }\n-\n-    // ToDo: Change this to 'hasSafePathToCenter' to account for buildings, lava and similar hazards.\n-    /**\n-     * Determines if the given entity has a reasonable path to the \"opposite\" edge of the board from its\n-     * current position.\n-     * @param entity\n-     * @param board\n-     * @return\n-     */\n-    private boolean hasPathToEdge(Entity entity, IBoard board) {\n+    private int calculateEdgeAccessFitness(Entity entity, IBoard board) {\n         // Flying units can always get anywhere\n         if (entity.isAirborne() || entity instanceof VTOL) {\n-            return true;\n+            return 0;\n         }\n         \n-        MovePath mp = getBoardEdgePathFinder(entity).findPathToEdge(entity);\n-        return mp != null;\n+        CardinalEdge destinationEdge = BoardUtilities.determineOppositeEdge(entity);\n+        \n+        int noReductionZoneSize = getClusterTracker().getDestinationCoords(entity, destinationEdge, false).size();\n+        int reductionZoneSize = getClusterTracker().getDestinationCoords(entity, destinationEdge, true).size();\n+        \n+        if(noReductionZoneSize > 0) {\n+            return 0;\n+        } else if(reductionZoneSize > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE2NTEzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/util/BoardUtilities.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozNToyOFrOGfstdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDowMTozNVrOGgAOOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5MTU3Mg==", "bodyText": "Shouldn't this say closest instead of opposite?", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435891572", "createdAt": "2020-06-05T12:35:28Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/util/BoardUtilities.java", "diffHunk": "@@ -1564,7 +1566,7 @@ private static int normRNG(int factor) {\n     }\n \n     /**\n-     * Figures out the \"opposite\" edge for the given entity on the entity's game board\n+     * Figures out the \"closest\" edge for the given entity on the entity's game board\n      * @param entity Entity to evaluate\n      * @return the Board.START_ constant representing the \"opposite\" edge", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxMTI1OQ==", "bodyText": "Yep.", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r436211259", "createdAt": "2020-06-06T00:01:35Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/util/BoardUtilities.java", "diffHunk": "@@ -1564,7 +1566,7 @@ private static int normRNG(int factor) {\n     }\n \n     /**\n-     * Figures out the \"opposite\" edge for the given entity on the entity's game board\n+     * Figures out the \"closest\" edge for the given entity on the entity's game board\n      * @param entity Entity to evaluate\n      * @return the Board.START_ constant representing the \"opposite\" edge", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5MTU3Mg=="}, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE2Njg1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/util/BoardUtilities.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozNTo1M1rOGfsuXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozNTo1M1rOGfsuXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5MTgwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(oppositeEdge != Board.START_NONE) {\n          \n          \n            \n                    if (oppositeEdge != Board.START_NONE) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435891807", "createdAt": "2020-06-05T12:35:53Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/util/BoardUtilities.java", "diffHunk": "@@ -1586,6 +1588,26 @@ public static CardinalEdge getClosestEdge(Entity entity) {\n             return closerNorthThanSouth ? CardinalEdge.NORTH : CardinalEdge.SOUTH;\n         }\n     }\n+    \n+    /**\n+     * Figures out the \"opposite\" edge for the given entity.\n+     * @param entity Entity to evaluate\n+     * @return the Board.START_ constant representing the \"opposite\" edge\n+     */\n+    public static CardinalEdge determineOppositeEdge(Entity entity) {\n+        IBoard board = entity.getGame().getBoard();\n+\n+        // the easiest part is if the entity is supposed to start on a particular edge. Just return the opposite edge.\n+        int oppositeEdge = board.getOppositeEdge(entity.getStartingPos());\n+        if(oppositeEdge != Board.START_NONE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE3MTgwOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozNzozNFrOGfsxaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozNzozNFrOGfsxaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5MjU4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                (bestPath == null || movePathComparator.compare(bestPath, currentPath) > 0)) {\n          \n          \n            \n                                ((bestPath == null) || (movePathComparator.compare(bestPath, currentPath) > 0))) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435892587", "createdAt": "2020-06-05T12:37:34Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -100,11 +100,10 @@ public BulldozerMovePath findPathToCoords(Entity entity, Set<Coords> destination\n \n         while(!candidates.isEmpty()) {\n             BulldozerMovePath currentPath = candidates.pollFirst();\n-            \n-            candidates.addAll(generateChildNodes(currentPath, shortestPathsToCoords));\n+            candidates.addAll(generateChildNodes(currentPath, shortestPathsToCoords));            \n             \n             if(destinationCoords.contains(currentPath.getFinalCoords()) &&\n-                    (bestPath == null || movePathComparator.compare(bestPath, currentPath) < 0)) {\n+                    (bestPath == null || movePathComparator.compare(bestPath, currentPath) > 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE3MzE1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozODowM1rOGfsyVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozODowM1rOGfsyVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5MjgyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(tieBreakerDiff == 0) {\n          \n          \n            \n                            if (tieBreakerDiff == 0) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435892821", "createdAt": "2020-06-05T12:38:03Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -246,15 +251,22 @@ public int compare(BulldozerMovePath first, BulldozerMovePath second) {\n             // getFacingDiff returns a number between 0 and 3 inclusive. \n             // if the value diff is larger than 3, then it won't make a difference and we skip calculating it\n             if (Math.abs(dd) < 4) {\n+                dd *= 10; // facing diff doesn't matter as much as the other stuff, only use it as a tie-breaker\n                 dd += ShortestPathFinder.getFacingDiff(first, destination, backwards);\n                 dd -= ShortestPathFinder.getFacingDiff(second, destination, backwards);\n             }\n     \n+            // dd != 0 implies that the two paths are not identical\n             if (dd != 0) {\n                 return dd;\n             } else {\n-                return first.getHexesMoved() - second.getHexesMoved();\n-            }           \n+                int tieBreakerDiff = first.getHexesMoved() - second.getHexesMoved();\n+                if(tieBreakerDiff == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE3NjE5OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/BoardEdgePathFinder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozOTowMVrOGfs0VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozOTowMVrOGfs0VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5MzMzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(entity.hasETypeFlag(Entity.ETYPE_MECH) && \n          \n          \n            \n                    if (entity.hasETypeFlag(Entity.ETYPE_MECH) &&", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435893333", "createdAt": "2020-06-05T12:39:01Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardEdgePathFinder.java", "diffHunk": "@@ -620,7 +624,8 @@ public static int calculateUnitElevationInHex(IHex hex, Entity entity, boolean i\n \n         int hexElevation = hex.getLevel();\n \n-        if(entity.hasETypeFlag(Entity.ETYPE_MECH) && hex.containsTerrain(Terrains.BLDG_CF)) {\n+        if(entity.hasETypeFlag(Entity.ETYPE_MECH) && ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE3NzIyOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/BoardEdgePathFinder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozOToyMVrOGfs0_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozOToyMVrOGfs0_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5MzUwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            || (destHex.containsTerrain(Terrains.SNOW) && destHex.terrainLevel(Terrains.SNOW) > 1));\n          \n          \n            \n                            || (destHex.containsTerrain(Terrains.SNOW) && (destHex.terrainLevel(Terrains.SNOW) > 1)));", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435893503", "createdAt": "2020-06-05T12:39:21Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardEdgePathFinder.java", "diffHunk": "@@ -584,9 +587,10 @@ private MoveLegalityIndicator isLegalMove(MovePath movePath, IHex destHex, Build\n \n         // wheeled tanks cannot go into rough terrain or rubble of any kind, or buildings for that matter\n         // even if you level them they still turn to rubble. Additionally, they cannot go into deep snow.\n-        mli.wheeledTankRestriction = isWheeled &&\n+        mli.wheeledTankRestriction = isWheeled && !destHexHasRoad &&\n                 (destHex.containsTerrain(Terrains.ROUGH) || destHex.containsTerrain(Terrains.RUBBLE)\n-                || destHex.containsTerrain(Terrains.BLDG_CF) || (destHex.containsTerrain(Terrains.SNOW) && destHex.terrainLevel(Terrains.SNOW) > 1));\n+                || destinationHasBuilding\n+                || (destHex.containsTerrain(Terrains.SNOW) && destHex.terrainLevel(Terrains.SNOW) > 1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE4Mzk1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/princess/CardinalEdge.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0MToyMFrOGfs5Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0MToyMFrOGfs5Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5NDU1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    switch(direction) {\n          \n          \n            \n                    switch (direction) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435894558", "createdAt": "2020-06-05T12:41:20Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/CardinalEdge.java", "diffHunk": "@@ -46,4 +48,35 @@ public static CardinalEdge getCardinalEdge(int index) {\n         }\r\n         return null;\r\n     }\r\n+    \r\n+    public static CardinalEdge getCardinalEdge(OffBoardDirection direction) {\r\n+        switch(direction) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE4NDMzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/princess/CardinalEdge.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0MToyNlrOGfs5Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0MToyNlrOGfs5Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5NDYyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    switch(edge) {\n          \n          \n            \n                    switch (edge) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435894626", "createdAt": "2020-06-05T12:41:26Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/CardinalEdge.java", "diffHunk": "@@ -46,4 +48,35 @@ public static CardinalEdge getCardinalEdge(int index) {\n         }\r\n         return null;\r\n     }\r\n+    \r\n+    public static CardinalEdge getCardinalEdge(OffBoardDirection direction) {\r\n+        switch(direction) {\r\n+        case NORTH:\r\n+            return NORTH;\r\n+        case SOUTH:\r\n+            return SOUTH;\r\n+        case EAST:\r\n+            return EAST;\r\n+        case WEST:\r\n+            return WEST;\r\n+        default:\r\n+            return NEAREST_OR_NONE;\r\n+        }\r\n+    }\r\n+    \r\n+    public static CardinalEdge getOppositeEdge(CardinalEdge edge) {\r\n+        switch(edge) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE5MDE1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/GunEmplacement.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0MzoxNFrOGfs87g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0MzoxNFrOGfs87g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5NTUzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(checkCrew && (null != getCrew()) && getCrew().isDead()) {\n          \n          \n            \n                    if (checkCrew && (null != getCrew()) && getCrew().isDead()) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435895534", "createdAt": "2020-06-05T12:43:14Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/GunEmplacement.java", "diffHunk": "@@ -479,11 +479,14 @@ public int getTotalCommGearTons() {\n \n     @Override\n     public boolean isCrippled(boolean checkCrew) {\n-        return isCrippled();\n-    }\n-\n-    @Override\n-    public boolean isCrippled() {\n+        if(checkCrew && (null != getCrew()) && getCrew().isDead()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE5NjE5OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/MovePath.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0NDo1M1rOGftAcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0NDo1M1rOGftAcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5NjQzNA==", "bodyText": "Maybe add a comment here mentioning it is for debugging, or remove this line", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435896434", "createdAt": "2020-06-05T12:44:53Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/MovePath.java", "diffHunk": "@@ -1197,16 +1199,7 @@ public void findPathTo(final Coords dest, final MoveStepType type) {\n \n         pf.run(this.clone());\n         MovePath finPath = pf.getComputedPath(dest);\n-        // code that's useful to test the destruction-aware pathfinder\n-        // remove when code review and testing complete\n-        /*DestructionAwareDestinationPathfinder dpf = new DestructionAwareDestinationPathfinder();\n-        Set<Coords> destinationSet = new HashSet<Coords>();\n-        destinationSet.add(dest);\n-        \n-        long marker1 = System.currentTimeMillis();\n-        MovePath finPath = dpf.findPathToCoords(entity, destinationSet, true);\n-        long marker2 = System.currentTimeMillis();\n-        long marker3 = marker2 - marker1;*/\n+        //MovePath finPath = calculateDestructionAwarePath(dest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE5ODk1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/MovePath.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0NTo0MFrOGftCMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDowMDozMFrOGgANSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5Njg4Mw==", "bodyText": "Is this meant to be removed now?", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435896883", "createdAt": "2020-06-05T12:45:40Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/MovePath.java", "diffHunk": "@@ -1840,4 +1833,26 @@ public boolean setStrafingStep(Coords pos) {\n     public boolean nextForwardStepOffBoard() {\n         return !game.getBoard().contains(getFinalCoords().translated(getFinalFacing()));\n     }\n+    \n+    /**\n+     * Debugging method that calculates a destruction-aware move path to the destination coordinates\n+     */\n+    public MovePath calculateDestructionAwarePath(Coords dest) {\n+        // code that's useful to test the destruction-aware pathfinder\n+        // remove when code review and testing complete", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxMTAxOQ==", "bodyText": "Guess not anymore.", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r436211019", "createdAt": "2020-06-06T00:00:30Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/MovePath.java", "diffHunk": "@@ -1840,4 +1833,26 @@ public boolean setStrafingStep(Coords pos) {\n     public boolean nextForwardStepOffBoard() {\n         return !game.getBoard().contains(getFinalCoords().translated(getFinalFacing()));\n     }\n+    \n+    /**\n+     * Debugging method that calculates a destruction-aware move path to the destination coordinates\n+     */\n+    public MovePath calculateDestructionAwarePath(Coords dest) {\n+        // code that's useful to test the destruction-aware pathfinder\n+        // remove when code review and testing complete", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5Njg4Mw=="}, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTIwNTA4OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0NzoyNlrOGftFzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0NzoyNlrOGftFzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5NzgwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(!movableAreas.containsKey(movementType)) {\n          \n          \n            \n                    if (!movableAreas.containsKey(movementType)) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435897807", "createdAt": "2020-06-05T12:47:26Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -131,8 +161,13 @@ public void clearMovableAreas() {\n     public void updateMovableAreas(Entity entity) {\n         MovementType movementType = MovementType.getMovementType(entity);\n         \n-        movableAreas.putIfAbsent(movementType, generateClusters(entity, false));\n-        movableAreasWithTerrainReduction.putIfAbsent(movementType, generateClusters(entity, true));\n+        if(!movableAreas.containsKey(movementType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTIwNzQzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0ODowNlrOGftHPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0ODowNlrOGftHPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5ODE3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(!movableAreasWithTerrainReduction.containsKey(movementType)) {\n          \n          \n            \n                    if (!movableAreasWithTerrainReduction.containsKey(movementType)) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435898173", "createdAt": "2020-06-05T12:48:06Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -131,8 +161,13 @@ public void clearMovableAreas() {\n     public void updateMovableAreas(Entity entity) {\n         MovementType movementType = MovementType.getMovementType(entity);\n         \n-        movableAreas.putIfAbsent(movementType, generateClusters(entity, false));\n-        movableAreasWithTerrainReduction.putIfAbsent(movementType, generateClusters(entity, true));\n+        if(!movableAreas.containsKey(movementType)) {\n+            movableAreas.put(movementType, generateClusters(entity, false));\n+        }\n+        \n+        if(!movableAreasWithTerrainReduction.containsKey(movementType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTIwOTM5OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0ODo0M1rOGftIeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0ODo0M1rOGftIeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5ODQ4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    if((elevationDiff > entity.getMaxElevationChange())\n          \n          \n            \n                                    if ((elevationDiff > entity.getMaxElevationChange())", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435898488", "createdAt": "2020-06-05T12:48:43Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -185,8 +220,11 @@ public void updateMovableAreas(Entity entity) {\n                         int myElevation = BoardEdgePathFinder.calculateUnitElevationInHex(board.getHex(c), entity, isHovercraft, isAmphibious);\n                         \n                         // if we can't reach from here to the neighbor due to elevation differences, move on\n+                        // buildings require special handling - while a tank technically CAN plow through a building\n+                        // it is highly inadvisable and we will avoid it for now.\n                         int elevationDiff = Math.abs(neighborElevation - myElevation);\n-                        if(elevationDiff > entity.getMaxElevationChange()) {\n+                        if((elevationDiff > entity.getMaxElevationChange())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTIxMTY0OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0OToyM1rOGftJ5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0OToyM1rOGftJ5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5ODg1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else if (relevantMovementType != MovementType.Flyer &&\n          \n          \n            \n                            relevantMovementType != MovementType.Jump &&\n          \n          \n            \n                            relevantMovementType != MovementType.None &&\n          \n          \n            \n                            relevantMovementType != MovementType.Water) {\n          \n          \n            \n                    } else if ((relevantMovementType != MovementType.Flyer) &&\n          \n          \n            \n                            (relevantMovementType != MovementType.Jump) &&\n          \n          \n            \n                            (relevantMovementType != MovementType.None) &&\n          \n          \n            \n                            (relevantMovementType != MovementType.Water)) {", "url": "https://github.com/MegaMek/megamek/pull/1987#discussion_r435898854", "createdAt": "2020-06-05T12:49:23Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -231,6 +269,34 @@ public void updateMovableAreas(Entity entity) {\n         return clusters;\n     }\n     \n+    /**\n+     * Whether or not we are required to plow through a building if we enter this hex.\n+     */\n+    private boolean buildingPlowThroughRequired(Entity entity, MovementType relevantMovementType, Coords coords) {\n+        // basic premise:\n+        // ground tanks cannot climb over buildings and must plow through\n+        // mechs can climb over buildings that won't collapse under them\n+        // the relative height comparison is handled elsewhere\n+        \n+        IBoard board = entity.getGame().getBoard();\n+        IHex hex = board.getHex(coords);\n+        \n+        if (!hex.containsTerrain(Terrains.BLDG_CF) && !hex.containsExit(Terrains.FUEL_TANK_CF)) {\n+            return false;\n+        } else if (relevantMovementType == MovementType.Walker) {\n+            int buildingCF = board.getBuildingAt(coords).getCurrentCF(coords);\n+            \n+            return entity.getWeight() > buildingCF;            \n+        } else if (relevantMovementType != MovementType.Flyer &&\n+                relevantMovementType != MovementType.Jump &&\n+                relevantMovementType != MovementType.None &&\n+                relevantMovementType != MovementType.Water) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cd98416734bec0f5e42a81b7b43ea958a47820"}, "originalPosition": 159}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2804, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}