{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNjYzMTA1", "number": 2256, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzo1NDo1NVrOEnzMEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzo1NDo1NVrOEnzMEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTY4NTk0OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/weapons/WeaponHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzo1NDo1NVrOHYkaHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNDoxODowNlrOHYkg3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyNDM4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    getLogger().error(getClass(), \"Unexpected target type: \" + target.getTargetType());\n          \n          \n            \n                                    getLogger().error(this, \"Unexpected target type: \" + target.getTargetType());", "url": "https://github.com/MegaMek/megamek/pull/2256#discussion_r495524381", "createdAt": "2020-09-27T03:54:55Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/weapons/WeaponHandler.java", "diffHunk": "@@ -1173,33 +1173,34 @@ public boolean handle(IGame.Phase phase, Vector<Report> returnedReports) {\n                         r.subject = subjectId;\n                         vPhaseReport.addElement(r);\n                         hits = 0;\n-                    }\n-                    // targeting a hex for igniting\n-                    if ((target.getTargetType() == Targetable.TYPE_HEX_IGNITE)\n+                    // targeting a hex for igniting    \n+                    } else if ((target.getTargetType() == Targetable.TYPE_HEX_IGNITE)\n                             || (target.getTargetType() == Targetable.TYPE_BLDG_IGNITE)) {\n                         handleIgnitionDamage(vPhaseReport, bldg, hits);\n                         hits = 0;\n-                    }\n                     // targeting a hex for clearing\n-                    if (target.getTargetType() == Targetable.TYPE_HEX_CLEAR) {\n+                    } else if (target.getTargetType() == Targetable.TYPE_HEX_CLEAR) {\n                         nDamage = nDamPerHit * hits;\n                         handleClearDamage(vPhaseReport, bldg, nDamage);\n                         hits = 0;\n-                    }\n                     // Targeting a building.\n-                    if (target.getTargetType() == Targetable.TYPE_BUILDING) {\n+                    } else if (target.getTargetType() == Targetable.TYPE_BUILDING) {\n                         // The building takes the full brunt of the attack.\n                         nDamage = nDamPerHit * hits;\n                         handleBuildingDamage(vPhaseReport, bldg, nDamage,\n                                 target.getPosition());\n                         hits = 0;\n-                    }\n-                    if (entityTarget != null) {\n+                    } else if (entityTarget != null) {\n                         handleEntityDamage(entityTarget, vPhaseReport, bldg,\n                                 hits, nCluster, bldgAbsorbs);\n                         server.creditKill(entityTarget, ae);\n                         hits -= nCluster;\n                         firstHit = false;\n+                    } else {\n+                        // we shouldn't be here, but if we get here, let's set hits to 0\n+                        // to avoid infinite loops\n+                        hits = 0;\n+                        getLogger().error(getClass(), \"Unexpected target type: \" + target.getTargetType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05ef4a280204a3afe11a9e088a43a73e432f01a8"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyNjExMA==", "bodyText": "Under the hood, the 'error' method just calls 'getClass()' anyway, so I don't see why this is necessary.", "url": "https://github.com/MegaMek/megamek/pull/2256#discussion_r495526110", "createdAt": "2020-09-27T04:18:06Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/weapons/WeaponHandler.java", "diffHunk": "@@ -1173,33 +1173,34 @@ public boolean handle(IGame.Phase phase, Vector<Report> returnedReports) {\n                         r.subject = subjectId;\n                         vPhaseReport.addElement(r);\n                         hits = 0;\n-                    }\n-                    // targeting a hex for igniting\n-                    if ((target.getTargetType() == Targetable.TYPE_HEX_IGNITE)\n+                    // targeting a hex for igniting    \n+                    } else if ((target.getTargetType() == Targetable.TYPE_HEX_IGNITE)\n                             || (target.getTargetType() == Targetable.TYPE_BLDG_IGNITE)) {\n                         handleIgnitionDamage(vPhaseReport, bldg, hits);\n                         hits = 0;\n-                    }\n                     // targeting a hex for clearing\n-                    if (target.getTargetType() == Targetable.TYPE_HEX_CLEAR) {\n+                    } else if (target.getTargetType() == Targetable.TYPE_HEX_CLEAR) {\n                         nDamage = nDamPerHit * hits;\n                         handleClearDamage(vPhaseReport, bldg, nDamage);\n                         hits = 0;\n-                    }\n                     // Targeting a building.\n-                    if (target.getTargetType() == Targetable.TYPE_BUILDING) {\n+                    } else if (target.getTargetType() == Targetable.TYPE_BUILDING) {\n                         // The building takes the full brunt of the attack.\n                         nDamage = nDamPerHit * hits;\n                         handleBuildingDamage(vPhaseReport, bldg, nDamage,\n                                 target.getPosition());\n                         hits = 0;\n-                    }\n-                    if (entityTarget != null) {\n+                    } else if (entityTarget != null) {\n                         handleEntityDamage(entityTarget, vPhaseReport, bldg,\n                                 hits, nCluster, bldgAbsorbs);\n                         server.creditKill(entityTarget, ae);\n                         hits -= nCluster;\n                         firstHit = false;\n+                    } else {\n+                        // we shouldn't be here, but if we get here, let's set hits to 0\n+                        // to avoid infinite loops\n+                        hits = 0;\n+                        getLogger().error(getClass(), \"Unexpected target type: \" + target.getTargetType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyNDM4MQ=="}, "originalCommit": {"oid": "05ef4a280204a3afe11a9e088a43a73e432f01a8"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2728, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}