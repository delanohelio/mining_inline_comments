{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MjE3Mjk2", "number": 2088, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxNzoyMzozMVrOEUZsCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxNzoyMzozMVrOEUZsCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODI3ODQ4OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxNzoyMzozMVrOG6mitA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxNzoyMzozMVrOG6mitA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMjA2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /** \n          \n          \n            \n                 * Retrieves the name of the method calling log/info/error etc. \n          \n          \n            \n                 * from the stack trace. \n          \n          \n            \n                 */\n          \n          \n            \n                private String getCallingMethod() {\n          \n          \n            \n                /** \n          \n          \n            \n                 * Retrieves the name of the method calling log/info/error etc. \n          \n          \n            \n                 * from the stack trace. \n          \n          \n            \n                 *\n          \n          \n            \n                 * This method MUST be called from a top-level method (such as info or fatal)\n          \n          \n            \n                 * as it depends on the call stack depth of exactly three methods between\n          \n          \n            \n                 * internally calling getStackTrace and the user's code.\n          \n          \n            \n                 */\n          \n          \n            \n                private String getCallingMethod() {", "url": "https://github.com/MegaMek/megamek/pull/2088#discussion_r464102068", "createdAt": "2020-08-02T17:23:31Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -279,6 +294,23 @@ public void info(final Class<?> callingClass,\n         log(callingClass, methodName, LogLevel.INFO, message);\n     }\n \n+    @Override\n+    public void info(Object callingObject, String message) {\n+        log(callingObject.getClass(), getCallingMethod(), LogLevel.INFO, message);\n+    }\n+    \n+    /** \n+     * Retrieves the name of the method calling log/info/error etc. \n+     * from the stack trace. \n+     */\n+    private String getCallingMethod() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12bb1de31733cd669068c28d714e676a6c289be8"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2870, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}