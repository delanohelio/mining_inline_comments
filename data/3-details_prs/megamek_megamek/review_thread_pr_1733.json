{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMDY4NTc0", "number": 1733, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDozODo0OFrODkGxdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTowMToyMFrODo2ZJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTg2MjkzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/MegaMek.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDozODo0OFrOFwQCQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMToxMToxM1rOFwQL5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODY5MQ==", "bodyText": "Is that needed if we're calling System.exit below?", "url": "https://github.com/MegaMek/megamek/pull/1733#discussion_r386138691", "createdAt": "2020-03-01T20:38:48Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/MegaMek.java", "diffHunk": "@@ -121,23 +108,22 @@ public static void main(String[] args) {\n \n                 String interfaceName = cp.getGuiName();\n                 if (interfaceName == null) {\n-                    interfaceName = PreferenceManager.getClientPreferences()\n-                            .getGUIName();\n+                    interfaceName = PreferenceManager.getClientPreferences().getGUIName();\n                 }\n                 MegaMek.startGUI(interfaceName, restArgs);\n             }\n \n         } catch (CommandLineParser.ParseException e) {\n-            StringBuilder message = new StringBuilder(INCORRECT_ARGUMENTS_MESSAGE)\n-                    .append(e.getMessage()).append('\\n');\n-            message.append(ARGUMENTS_DESCRIPTION_MESSAGE);\n-            MegaMek.displayMessageAndExit(message.toString(),\n-                                          \"main(String[])\");\n+            String message = INCORRECT_ARGUMENTS_MESSAGE + e.getMessage() + '\\n'\n+                    + ARGUMENTS_DESCRIPTION_MESSAGE;\n+            getLogger().log(MegaMek.class, \"main(String[])\", LogLevel.INFO, message);\n+            TimerSingleton.getInstance().killTimer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51c1ca8497e80103cd44e9f6bb0f6f607943514f"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzOTExMw==", "bodyText": "Was copying origin functionality, but looking at it again that doesn't make sense to me.", "url": "https://github.com/MegaMek/megamek/pull/1733#discussion_r386139113", "createdAt": "2020-03-01T20:44:30Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/MegaMek.java", "diffHunk": "@@ -121,23 +108,22 @@ public static void main(String[] args) {\n \n                 String interfaceName = cp.getGuiName();\n                 if (interfaceName == null) {\n-                    interfaceName = PreferenceManager.getClientPreferences()\n-                            .getGUIName();\n+                    interfaceName = PreferenceManager.getClientPreferences().getGUIName();\n                 }\n                 MegaMek.startGUI(interfaceName, restArgs);\n             }\n \n         } catch (CommandLineParser.ParseException e) {\n-            StringBuilder message = new StringBuilder(INCORRECT_ARGUMENTS_MESSAGE)\n-                    .append(e.getMessage()).append('\\n');\n-            message.append(ARGUMENTS_DESCRIPTION_MESSAGE);\n-            MegaMek.displayMessageAndExit(message.toString(),\n-                                          \"main(String[])\");\n+            String message = INCORRECT_ARGUMENTS_MESSAGE + e.getMessage() + '\\n'\n+                    + ARGUMENTS_DESCRIPTION_MESSAGE;\n+            getLogger().log(MegaMek.class, \"main(String[])\", LogLevel.INFO, message);\n+            TimerSingleton.getInstance().killTimer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODY5MQ=="}, "originalCommit": {"oid": "51c1ca8497e80103cd44e9f6bb0f6f607943514f"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE0MTE1Nw==", "bodyText": "It runs as a daemon thread, so I'm pretty sure it is not needed as it will be garbage collected on exit.", "url": "https://github.com/MegaMek/megamek/pull/1733#discussion_r386141157", "createdAt": "2020-03-01T21:11:13Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/MegaMek.java", "diffHunk": "@@ -121,23 +108,22 @@ public static void main(String[] args) {\n \n                 String interfaceName = cp.getGuiName();\n                 if (interfaceName == null) {\n-                    interfaceName = PreferenceManager.getClientPreferences()\n-                            .getGUIName();\n+                    interfaceName = PreferenceManager.getClientPreferences().getGUIName();\n                 }\n                 MegaMek.startGUI(interfaceName, restArgs);\n             }\n \n         } catch (CommandLineParser.ParseException e) {\n-            StringBuilder message = new StringBuilder(INCORRECT_ARGUMENTS_MESSAGE)\n-                    .append(e.getMessage()).append('\\n');\n-            message.append(ARGUMENTS_DESCRIPTION_MESSAGE);\n-            MegaMek.displayMessageAndExit(message.toString(),\n-                                          \"main(String[])\");\n+            String message = INCORRECT_ARGUMENTS_MESSAGE + e.getMessage() + '\\n'\n+                    + ARGUMENTS_DESCRIPTION_MESSAGE;\n+            getLogger().log(MegaMek.class, \"main(String[])\", LogLevel.INFO, message);\n+            TimerSingleton.getInstance().killTimer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODY5MQ=="}, "originalCommit": {"oid": "51c1ca8497e80103cd44e9f6bb0f6f607943514f"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTg2MzYzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/MegaMek.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDo0MDoyNVrOFwQCpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDo0NDo0NFrOFwQD9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODc4OQ==", "bodyText": "Is this really creating a directory called ./docs? Wouldn't it be ./logs?", "url": "https://github.com/MegaMek/megamek/pull/1733#discussion_r386138789", "createdAt": "2020-03-01T20:40:25Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/MegaMek.java", "diffHunk": "@@ -255,41 +242,43 @@ public static String getMegaMekSHA256() {\n     public static String getMemoryUsed() {\n         long heap = Runtime.getRuntime().totalMemory();\n         long free = Runtime.getRuntime().freeMemory();\n-        long used = (heap - free) / 1024;\n-        return commafy.format(used) + \" kB\"; //$NON-NLS-1$\n+        return commafy.format((heap - free) / 1024) + \" kB\";\n     }\n \n     /**\n      * This function redirects the standard error and output streams to the\n      * given File name.\n      *\n-     * @param logFileName\n-     *            The file name to redirect to.\n+     * @param logFileName The file name to redirect to.\n      */\n     private static void redirectOutput(String logFileName) {\n-        try {\n-            System.out.println(\"Redirecting output to \" + logFileName); //$NON-NLS-1$\n-            String sLogDir = PreferenceManager.getClientPreferences()\n-                    .getLogDirectory();\n-            File logDir = new File(sLogDir);\n-            if (!logDir.exists()) {\n-                logDir.mkdir();\n+        getLogger().info(MegaMek.class, \"redirectOutput\",\n+                \"Redirecting output to \" + logFileName);\n+        String sLogDir = PreferenceManager.getClientPreferences().getLogDirectory();\n+        File logDir = new File(sLogDir);\n+        if (!logDir.exists()) {\n+            if (!logDir.mkdir()) {\n+                getLogger().error(MegaMek.class, \"redirectOutput\",\n+                        \"Error in creating directory ./docs. We know this is annoying, and apologise. \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51c1ca8497e80103cd44e9f6bb0f6f607943514f"}, "originalPosition": 262}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzOTEyNw==", "bodyText": "Copy-paste error, fixing", "url": "https://github.com/MegaMek/megamek/pull/1733#discussion_r386139127", "createdAt": "2020-03-01T20:44:44Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/MegaMek.java", "diffHunk": "@@ -255,41 +242,43 @@ public static String getMegaMekSHA256() {\n     public static String getMemoryUsed() {\n         long heap = Runtime.getRuntime().totalMemory();\n         long free = Runtime.getRuntime().freeMemory();\n-        long used = (heap - free) / 1024;\n-        return commafy.format(used) + \" kB\"; //$NON-NLS-1$\n+        return commafy.format((heap - free) / 1024) + \" kB\";\n     }\n \n     /**\n      * This function redirects the standard error and output streams to the\n      * given File name.\n      *\n-     * @param logFileName\n-     *            The file name to redirect to.\n+     * @param logFileName The file name to redirect to.\n      */\n     private static void redirectOutput(String logFileName) {\n-        try {\n-            System.out.println(\"Redirecting output to \" + logFileName); //$NON-NLS-1$\n-            String sLogDir = PreferenceManager.getClientPreferences()\n-                    .getLogDirectory();\n-            File logDir = new File(sLogDir);\n-            if (!logDir.exists()) {\n-                logDir.mkdir();\n+        getLogger().info(MegaMek.class, \"redirectOutput\",\n+                \"Redirecting output to \" + logFileName);\n+        String sLogDir = PreferenceManager.getClientPreferences().getLogDirectory();\n+        File logDir = new File(sLogDir);\n+        if (!logDir.exists()) {\n+            if (!logDir.mkdir()) {\n+                getLogger().error(MegaMek.class, \"redirectOutput\",\n+                        \"Error in creating directory ./docs. We know this is annoying, and apologise. \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODc4OQ=="}, "originalCommit": {"oid": "51c1ca8497e80103cd44e9f6bb0f6f607943514f"}, "originalPosition": 262}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzI4MTQ1OnYy", "diffSide": "LEFT", "path": "megamek/src/megamek/MegaMek.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjo1Njo0M1rOFz_7LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1OTozOVrOF1pakg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2OTAzNg==", "bodyText": "Why are you removing this (here and elsewhere)?", "url": "https://github.com/MegaMek/megamek/pull/1733#discussion_r390069036", "createdAt": "2020-03-10T02:56:43Z", "author": {"login": "neoancient"}, "path": "megamek/src/megamek/MegaMek.java", "diffHunk": "@@ -73,33 +62,30 @@\n  * @author mev This is the class where the execution of the megamek game starts.\n  */\n public class MegaMek {\n+    private static MMLogger logger = null;\n \n-    private static final MMLogger logger = DefaultMmLogger.getInstance();\n-\n-    public static String VERSION = \"0.47.5-SNAPSHOT\"; //$NON-NLS-1$\n-    public static long TIMESTAMP = new File(PreferenceManager\n-            .getClientPreferences().getLogDirectory()\n-            + File.separator\n-            + \"timestamp\").lastModified(); //$NON-NLS-1$\n+    public static String VERSION = \"0.47.5-SNAPSHOT\";\n+    public static long TIMESTAMP = new File(PreferenceManager.getClientPreferences().getLogDirectory()\n+            + File.separator + \"timestamp\").lastModified();\n \n     private static final NumberFormat commafy = NumberFormat.getInstance();\n-    private static final String INCORRECT_ARGUMENTS_MESSAGE = \"Incorrect arguments:\"; //$NON-NLS-1$\n-    private static final String ARGUMENTS_DESCRIPTION_MESSAGE = \"Arguments syntax:\\n\\t MegaMek [-log <logfile>] [(-gui <guiname>)|(-dedicated)|(-validate)|(-export)|(-eqdb)|(-eqedb) (-oul)] [<args>]\"; //$NON-NLS-1$\n-    private static final String UNKNOWN_GUI_MESSAGE = \"Unknown GUI:\"; //$NON-NLS-1$\n-    private static final String GUI_CLASS_NOT_FOUND_MESSAGE = \"Couldn't find the GUI Class:\"; //$NON-NLS-1$\n-    private static final String DEFAULT_LOG_FILE_NAME = \"megameklog.txt\"; //$NON-NLS-1$\n+    private static final String INCORRECT_ARGUMENTS_MESSAGE = \"Incorrect arguments:\";\n+    private static final String ARGUMENTS_DESCRIPTION_MESSAGE = \"Arguments syntax:\\n\\t MegaMek \"\n+            + \"[-log <logfile>] [(-gui <guiname>)|(-dedicated)|(-validate)|(-export)|(-eqdb)|\"\n+            + \"(-eqedb) (-oul)] [<args>]\";\n+    private static final String UNKNOWN_GUI_MESSAGE = \"Unknown GUI:\";\n+    private static final String GUI_CLASS_NOT_FOUND_MESSAGE = \"Couldn't find the GUI Class:\";\n+    private static final String DEFAULT_LOG_FILE_NAME = \"megameklog.txt\";\n \n     public static void main(String[] args) {\n-\n         String logFileName = DEFAULT_LOG_FILE_NAME;\n-\n         CommandLineParser cp = new CommandLineParser(args);\n \n         try {\n             cp.parse();\n             String lf = cp.getLogFilename();\n             if (lf != null) {\n-                if (lf.equals(\"none\") || lf.equals(\"off\")) { //$NON-NLS-1$ //$NON-NLS-2$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ad9d4dc8cb2959c911abca16c9b219e64e4d8b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5NzM5NA==", "bodyText": "Visually distracting and increases the parsing time of a line of code, for something that is only used by a single IDE while running a specific setting.", "url": "https://github.com/MegaMek/megamek/pull/1733#discussion_r391797394", "createdAt": "2020-03-12T17:59:39Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/MegaMek.java", "diffHunk": "@@ -73,33 +62,30 @@\n  * @author mev This is the class where the execution of the megamek game starts.\n  */\n public class MegaMek {\n+    private static MMLogger logger = null;\n \n-    private static final MMLogger logger = DefaultMmLogger.getInstance();\n-\n-    public static String VERSION = \"0.47.5-SNAPSHOT\"; //$NON-NLS-1$\n-    public static long TIMESTAMP = new File(PreferenceManager\n-            .getClientPreferences().getLogDirectory()\n-            + File.separator\n-            + \"timestamp\").lastModified(); //$NON-NLS-1$\n+    public static String VERSION = \"0.47.5-SNAPSHOT\";\n+    public static long TIMESTAMP = new File(PreferenceManager.getClientPreferences().getLogDirectory()\n+            + File.separator + \"timestamp\").lastModified();\n \n     private static final NumberFormat commafy = NumberFormat.getInstance();\n-    private static final String INCORRECT_ARGUMENTS_MESSAGE = \"Incorrect arguments:\"; //$NON-NLS-1$\n-    private static final String ARGUMENTS_DESCRIPTION_MESSAGE = \"Arguments syntax:\\n\\t MegaMek [-log <logfile>] [(-gui <guiname>)|(-dedicated)|(-validate)|(-export)|(-eqdb)|(-eqedb) (-oul)] [<args>]\"; //$NON-NLS-1$\n-    private static final String UNKNOWN_GUI_MESSAGE = \"Unknown GUI:\"; //$NON-NLS-1$\n-    private static final String GUI_CLASS_NOT_FOUND_MESSAGE = \"Couldn't find the GUI Class:\"; //$NON-NLS-1$\n-    private static final String DEFAULT_LOG_FILE_NAME = \"megameklog.txt\"; //$NON-NLS-1$\n+    private static final String INCORRECT_ARGUMENTS_MESSAGE = \"Incorrect arguments:\";\n+    private static final String ARGUMENTS_DESCRIPTION_MESSAGE = \"Arguments syntax:\\n\\t MegaMek \"\n+            + \"[-log <logfile>] [(-gui <guiname>)|(-dedicated)|(-validate)|(-export)|(-eqdb)|\"\n+            + \"(-eqedb) (-oul)] [<args>]\";\n+    private static final String UNKNOWN_GUI_MESSAGE = \"Unknown GUI:\";\n+    private static final String GUI_CLASS_NOT_FOUND_MESSAGE = \"Couldn't find the GUI Class:\";\n+    private static final String DEFAULT_LOG_FILE_NAME = \"megameklog.txt\";\n \n     public static void main(String[] args) {\n-\n         String logFileName = DEFAULT_LOG_FILE_NAME;\n-\n         CommandLineParser cp = new CommandLineParser(args);\n \n         try {\n             cp.parse();\n             String lf = cp.getLogFilename();\n             if (lf != null) {\n-                if (lf.equals(\"none\") || lf.equals(\"off\")) { //$NON-NLS-1$ //$NON-NLS-2$", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2OTAzNg=="}, "originalCommit": {"oid": "d9ad9d4dc8cb2959c911abca16c9b219e64e4d8b"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTYwODA1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/MegaMek.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTowMToyMFrOF3qChg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTowMToyMFrOF3qChg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwNDc3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        super.flush();getFD().sync();\n          \n          \n            \n                                        super.flush();\n          \n          \n            \n                                        getFD().sync();", "url": "https://github.com/MegaMek/megamek/pull/1733#discussion_r393904774", "createdAt": "2020-03-17T19:01:20Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/MegaMek.java", "diffHunk": "@@ -255,41 +239,43 @@ public static String getMegaMekSHA256() {\n     public static String getMemoryUsed() {\n         long heap = Runtime.getRuntime().totalMemory();\n         long free = Runtime.getRuntime().freeMemory();\n-        long used = (heap - free) / 1024;\n-        return commafy.format(used) + \" kB\"; //$NON-NLS-1$\n+        return commafy.format((heap - free) / 1024) + \" kB\";\n     }\n \n     /**\n      * This function redirects the standard error and output streams to the\n      * given File name.\n      *\n-     * @param logFileName\n-     *            The file name to redirect to.\n+     * @param logFileName The file name to redirect to.\n      */\n     private static void redirectOutput(String logFileName) {\n-        try {\n-            System.out.println(\"Redirecting output to \" + logFileName); //$NON-NLS-1$\n-            String sLogDir = PreferenceManager.getClientPreferences()\n-                    .getLogDirectory();\n-            File logDir = new File(sLogDir);\n-            if (!logDir.exists()) {\n-                logDir.mkdir();\n+        getLogger().info(MegaMek.class, \"redirectOutput\",\n+                \"Redirecting output to \" + logFileName);\n+        String sLogDir = PreferenceManager.getClientPreferences().getLogDirectory();\n+        File logDir = new File(sLogDir);\n+        if (!logDir.exists()) {\n+            if (!logDir.mkdir()) {\n+                getLogger().error(MegaMek.class, \"redirectOutput\",\n+                        \"Error in creating directory ./logs. We know this is annoying, and apologise. \"\n+                                + \"Please submit a bug report at https://github.com/MegaMek/megamek/issues \"\n+                                + \" and we will try to resolve your issue.\");\n             }\n+        }\n+        try {\n             PrintStream ps = new PrintStream(\n                     new BufferedOutputStream(new FileOutputStream(sLogDir\n-                                                                  + File.separator + logFileName, true) {\n+                            + File.separator + logFileName, true) {\n                         @Override\n                         public void flush() throws IOException {\n-                            super.flush();\n-                            getFD().sync();\n-                        };\n-                    }\n-                            , 64));\n+                            super.flush();getFD().sync();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ad9d4dc8cb2959c911abca16c9b219e64e4d8b"}, "originalPosition": 279}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2510, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}