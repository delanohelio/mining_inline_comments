{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NDQyOTYx", "number": 2060, "title": "fix game freeze with ejected pilots on ground maps", "bodyText": "Fixes an observable game \"freeze\" for ejected pilots on ground maps.\nAlso adds an optimization for units that are hot dropping (such as ejected pilots and mechs/tanks), since they can't move anyway.", "createdAt": "2020-07-13T19:23:00Z", "url": "https://github.com/MegaMek/megamek/pull/2060", "merged": true, "mergeCommit": {"oid": "15a284393d0fa3171e054e7cd090c00333730d43"}, "closed": true, "closedAt": "2020-07-13T19:34:25Z", "author": {"login": "NickAragua"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0meowAH2gAyNDQ4NDQyOTYxOjU0YTAxN2RkOTIzMTIzMDI3ZTBmN2EwNDZjY2VlZWY3YjY1YmYzNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0mrTTAH2gAyNDQ4NDQyOTYxOjcyOWRkMThmZTlkZTFlZDhmNWEyOTMxMjkwOWI5M2M1ODEwZTFjYmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "54a017dd923123027e0f7a046cceeef7b65bf359", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/54a017dd923123027e0f7a046cceeef7b65bf359", "committedDate": "2020-07-13T19:20:00Z", "message": "fix game freeze with ejected pilots on ground maps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64912548b8da861b0a4e5e79ca36ff0846f1a110", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/64912548b8da861b0a4e5e79ca36ff0846f1a110", "committedDate": "2020-07-13T19:23:30Z", "message": "Update PathEnumerator.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTM3MTEx", "url": "https://github.com/MegaMek/megamek/pull/2060#pullrequestreview-447537111", "createdAt": "2020-07-13T19:27:20Z", "commit": {"oid": "64912548b8da861b0a4e5e79ca36ff0846f1a110"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNzoyMFrOGw2qZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNzo0MlrOGw2rMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MDQyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n          \n          \n            \n                        } else if (mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {", "url": "https://github.com/MegaMek/megamek/pull/2060#discussion_r453880421", "createdAt": "2020-07-13T19:27:20Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -247,14 +247,18 @@ public boolean shouldStay(MovePath movePath) {\n                 SpheroidPathFinder spf = SpheroidPathFinder.getInstance(game);\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n-            // this handles the case of the mover being an infantry unit of some kind\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY)) {\n+            // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n+            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64912548b8da861b0a4e5e79ca36ff0846f1a110"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MDUxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else if(!mover.isAero() && mover.isAirborne()) {\n          \n          \n            \n                        } else if (!mover.isAero() && mover.isAirborne()) {", "url": "https://github.com/MegaMek/megamek/pull/2060#discussion_r453880519", "createdAt": "2020-07-13T19:27:30Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -247,14 +247,18 @@ public boolean shouldStay(MovePath movePath) {\n                 SpheroidPathFinder spf = SpheroidPathFinder.getInstance(game);\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n-            // this handles the case of the mover being an infantry unit of some kind\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY)) {\n+            // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n+            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n                 InfantryPathFinder ipf = InfantryPathFinder.getInstance(getGame());\n                 ipf.run(new MovePath(game, mover));\n                 paths.addAll(ipf.getAllComputedPathsUncategorized());\n                 \n                 // generate long-range paths appropriate to the bot's current state\n                 updateLongRangePaths(mover);\n+            // this handles situations wher a unit is high up in the air, but is not an aircraft\n+            // such as an ejected pilot or a unit hot dropping from a dropship, as these cannot move\n+            } else if(!mover.isAero() && mover.isAirborne()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64912548b8da861b0a4e5e79ca36ff0846f1a110"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MDYyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // this handles situations wher a unit is high up in the air, but is not an aircraft\n          \n          \n            \n                        // this handles situations where a unit is high up in the air, but is not an aircraft", "url": "https://github.com/MegaMek/megamek/pull/2060#discussion_r453880626", "createdAt": "2020-07-13T19:27:42Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -247,14 +247,18 @@ public boolean shouldStay(MovePath movePath) {\n                 SpheroidPathFinder spf = SpheroidPathFinder.getInstance(game);\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n-            // this handles the case of the mover being an infantry unit of some kind\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY)) {\n+            // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n+            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n                 InfantryPathFinder ipf = InfantryPathFinder.getInstance(getGame());\n                 ipf.run(new MovePath(game, mover));\n                 paths.addAll(ipf.getAllComputedPathsUncategorized());\n                 \n                 // generate long-range paths appropriate to the bot's current state\n                 updateLongRangePaths(mover);\n+            // this handles situations wher a unit is high up in the air, but is not an aircraft", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64912548b8da861b0a4e5e79ca36ff0846f1a110"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "729dd18fe9de1ed8f5a29312909b93c5810e1cbc", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/729dd18fe9de1ed8f5a29312909b93c5810e1cbc", "committedDate": "2020-07-13T19:33:50Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4898, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}