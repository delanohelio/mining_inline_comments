{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMjQzNzQ0", "number": 2474, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMjo0MTowOFrOFAmIUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMjo0MTozMlrOFAmIvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTY5MDQzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/princess/Princess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMjo0MTowOFrOH--P5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMjo0MTowOFrOH--P5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc5MzYzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(getForcedWithdrawal() && getEntity(entityNum).isCrippled()) {\n          \n          \n            \n                    if (getForcedWithdrawal() && getEntity(entityNum).isCrippled()) {", "url": "https://github.com/MegaMek/megamek/pull/2474#discussion_r535793636", "createdAt": "2020-12-04T02:41:08Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/Princess.java", "diffHunk": "@@ -439,74 +439,67 @@ protected void initTargeting() {\n \n     @Override\n     protected void calculateDeployment() {\n-        getLogger().methodBegin();\n-\n-        try {\n-\n-            // get the first unit\n-            final int entityNum = game.getFirstDeployableEntityNum(game.getTurnForPlayer(localPlayerNumber));\n-            if (getLogger().getLogLevel(LOGGING_CATEGORY).toInt() > LogLevel.WARNING.toInt()) {\n-                sendChat(\"deploying unit \" + getEntity(entityNum).getChassis(), LogLevel.INFO);\n-            }\n-\n-            // if we are using forced withdrawal, and the entity being considered is crippled\n-            // we will opt to not re-deploy the entity\n-            if(getForcedWithdrawal() && getEntity(entityNum).isCrippled()) {\n-                getLogger().info(\"Declining to deploy crippled unit: \"\n-                        + getEntity(entityNum).getChassis() + \". Removing unit.\");\n-                sendDeleteEntity(entityNum);\n-                return;\n-            }\n+        // get the first unit\n+        final int entityNum = game.getFirstDeployableEntityNum(game.getTurnForPlayer(localPlayerNumber));\n+        if (getLogger().getLogLevel(LOGGING_CATEGORY).toInt() > LogLevel.WARNING.toInt()) {\n+            sendChat(\"deploying unit \" + getEntity(entityNum).getChassis(), LogLevel.INFO);\n+        }\n+\n+        // if we are using forced withdrawal, and the entity being considered is crippled\n+        // we will opt to not re-deploy the entity\n+        if(getForcedWithdrawal() && getEntity(entityNum).isCrippled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ee56795fdf8a652b1ea8cab12e137d50c6e297d"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTY5MTQ4OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/princess/Princess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMjo0MTozMlrOH--Qag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMjo0MTozMlrOH--Qag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc5Mzc3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (e.isDeployed() && (!e.isOffBoard())) {\n          \n          \n            \n                        if (e.isDeployed() && !e.isOffBoard()) {", "url": "https://github.com/MegaMek/megamek/pull/2474#discussion_r535793770", "createdAt": "2020-12-04T02:41:32Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/Princess.java", "diffHunk": "@@ -439,74 +439,67 @@ protected void initTargeting() {\n \n     @Override\n     protected void calculateDeployment() {\n-        getLogger().methodBegin();\n-\n-        try {\n-\n-            // get the first unit\n-            final int entityNum = game.getFirstDeployableEntityNum(game.getTurnForPlayer(localPlayerNumber));\n-            if (getLogger().getLogLevel(LOGGING_CATEGORY).toInt() > LogLevel.WARNING.toInt()) {\n-                sendChat(\"deploying unit \" + getEntity(entityNum).getChassis(), LogLevel.INFO);\n-            }\n-\n-            // if we are using forced withdrawal, and the entity being considered is crippled\n-            // we will opt to not re-deploy the entity\n-            if(getForcedWithdrawal() && getEntity(entityNum).isCrippled()) {\n-                getLogger().info(\"Declining to deploy crippled unit: \"\n-                        + getEntity(entityNum).getChassis() + \". Removing unit.\");\n-                sendDeleteEntity(entityNum);\n-                return;\n-            }\n+        // get the first unit\n+        final int entityNum = game.getFirstDeployableEntityNum(game.getTurnForPlayer(localPlayerNumber));\n+        if (getLogger().getLogLevel(LOGGING_CATEGORY).toInt() > LogLevel.WARNING.toInt()) {\n+            sendChat(\"deploying unit \" + getEntity(entityNum).getChassis(), LogLevel.INFO);\n+        }\n+\n+        // if we are using forced withdrawal, and the entity being considered is crippled\n+        // we will opt to not re-deploy the entity\n+        if(getForcedWithdrawal() && getEntity(entityNum).isCrippled()) {\n+            getLogger().info(\"Declining to deploy crippled unit: \"\n+                    + getEntity(entityNum).getChassis() + \". Removing unit.\");\n+            sendDeleteEntity(entityNum);\n+            return;\n+        }\n+        \n+        // get a list of all coordinates to which we can deploy\n+        final List<Coords> startingCoords = getStartingCoordsArray(game.getEntity(entityNum));\n+        if (0 == startingCoords.size()) {\n+            getLogger().error(\"No valid locations to deploy \" + getEntity(entityNum).getDisplayName());\n+        }\n+\n+        // get the coordinates I can deploy on\n+        final Coords deployCoords = getFirstValidCoords(getEntity(entityNum), startingCoords);\n+        if (null == deployCoords) {\n+            // if I cannot deploy anywhere, then I get rid of the entity instead so that we may go about our business                \n+            getLogger().error(\"getCoordsAround gave no location for \"\n+                    + getEntity(entityNum).getChassis() + \". Removing unit.\");\n             \n-            // get a list of all coordinates to which we can deploy\n-            final List<Coords> startingCoords = getStartingCoordsArray(game.getEntity(entityNum));\n-            if (0 == startingCoords.size()) {\n-                getLogger().error(\"No valid locations to deploy \" + getEntity(entityNum).getDisplayName());\n-            }\n-\n-            // get the coordinates I can deploy on\n-            final Coords deployCoords = getFirstValidCoords(getEntity(entityNum), startingCoords);\n-            if (null == deployCoords) {\n-                // if I cannot deploy anywhere, then I get rid of the entity instead so that we may go about our business                \n-                getLogger().error(\"getCoordsAround gave no location for \"\n-                        + getEntity(entityNum).getChassis() + \". Removing unit.\");\n-                \n-                sendDeleteEntity(entityNum);\n-                return;\n-            }\n+            sendDeleteEntity(entityNum);\n+            return;\n+        }\n \n-            // first coordinate that it is legal to put this unit on now find \n-            // some sort of reasonable facing. If there are deployed enemies, \n-            // face them\n-            \n-            // specifically, face the last deployed enemy.\n-            int decentFacing = -1;\n-            for (final Entity e : getEnemyEntities()) {\n-                if (e.isDeployed() && (!e.isOffBoard())) {\n-                    decentFacing = deployCoords.direction(e.getPosition());\n-                    break;\n-                }\n+        // first coordinate that it is legal to put this unit on now find \n+        // some sort of reasonable facing. If there are deployed enemies, \n+        // face them\n+        \n+        // specifically, face the last deployed enemy.\n+        int decentFacing = -1;\n+        for (final Entity e : getEnemyEntities()) {\n+            if (e.isDeployed() && (!e.isOffBoard())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ee56795fdf8a652b1ea8cab12e137d50c6e297d"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2620, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}