{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMTg1Mzkx", "number": 2170, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzoxMzo0MlrOEk9vTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozMjowMVrOElH2Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTk1NzI0OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/MegaMekGUI.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzoxMzo0MlrOHUMmHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjoyNTowNVrOHUT6IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkzOTkzNA==", "bodyText": "Is it intentional not to log the ex.getMessage()? Otherwise, the String error of line 596 could be re-used in 553 and 555", "url": "https://github.com/MegaMek/megamek/pull/2170#discussion_r490939934", "createdAt": "2020-09-18T13:13:42Z", "author": {"login": "SJuliez"}, "path": "megamek/src/megamek/client/ui/swing/MegaMekGUI.java", "diffHunk": "@@ -559,68 +533,48 @@ public String getDescription() {\n             }\n         });\n         int returnVal = fc.showOpenDialog(frame);\n-        if ((returnVal != JFileChooser.APPROVE_OPTION)\n-                || (fc.getSelectedFile() == null)) {\n+        if ((returnVal != JFileChooser.APPROVE_OPTION) || (fc.getSelectedFile() == null)) {\n             // I want a file, y'know!\n             return;\n         }\n         HostDialog hd = new HostDialog(frame);\n         hd.setVisible(true);\n-        if ((hd.playerName == null) || (hd.serverPass == null) || (hd.port == 0)) {\n-            return;\n-        }\n \n-        // Players should have to enter a non-blank, non-whitespace name.\n-        boolean foundValid = false;\n-        char[] nameChars = hd.playerName.toCharArray();\n-        for (int loop = 0; !foundValid && (loop < nameChars.length); loop++) {\n-            if (!Character.isWhitespace(nameChars[loop])) {\n-                foundValid = true;\n-            }\n-        }\n-        if (!foundValid) {\n-            JOptionPane\n-                    .showMessageDialog(\n-                            frame,\n-                            Messages.getString(\"MegaMek.PlayerNameAlert1.message\"), Messages.getString(\"MegaMek.PlayerNameAlert1.title\"), JOptionPane.ERROR_MESSAGE); //$NON-NLS-1$ //$NON-NLS-2$\n+        if (!hd.dataValidation(\"MegaMek.PlayerNameAlert1.title\", \"MegaMek.PlayerNameAlert.message\")) {\n             return;\n         }\n \n         // kick off a RNG check\n         d6();\n         // start server\n         try {\n-            server = new Server(hd.serverPass, hd.port, hd.register, hd.register ? hd.metaserver : \"\");\n+            server = new Server(hd.getServerPass(), hd.getPort(), hd.isRegister(), hd.isRegister() ? hd.getMetaserver() : \"\");\n         } catch (IOException ex) {\n-            System.err.println(\"could not create server socket on port \" + hd.port);\n-            String error = \"Error: could not start server at localhost\" + \":\" + hd.port + \" (\" +\n-                    ex.getMessage() + \").\";\n-            JOptionPane\n-                    .showMessageDialog(\n-                            frame,\n-                            error,\n-                            Messages.getString(\"MegaMek.HostGameAlert.title\"), JOptionPane.ERROR_MESSAGE); //$NON-NLS-1$\n+            MegaMek.getLogger().error(this, \"could not create server socket on port \" + hd.getPort());\n+            JOptionPane.showMessageDialog(frame,\n+                    \"Error: could not start server at localhost\" + \":\" + hd.getPort() + \" (\" + ex.getMessage() + \").\",\n+                    Messages.getString(\"MegaMek.HostGameAlert.title\"), JOptionPane.ERROR_MESSAGE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de77e7b22fbfab80828b7ed8b136e053cd9d8ae"}, "originalPosition": 343}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5OTU5MA==", "bodyText": "Annoyingly we should be localizing one and not the other, but I should fix that localization.", "url": "https://github.com/MegaMek/megamek/pull/2170#discussion_r490999590", "createdAt": "2020-09-18T14:45:08Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/MegaMekGUI.java", "diffHunk": "@@ -559,68 +533,48 @@ public String getDescription() {\n             }\n         });\n         int returnVal = fc.showOpenDialog(frame);\n-        if ((returnVal != JFileChooser.APPROVE_OPTION)\n-                || (fc.getSelectedFile() == null)) {\n+        if ((returnVal != JFileChooser.APPROVE_OPTION) || (fc.getSelectedFile() == null)) {\n             // I want a file, y'know!\n             return;\n         }\n         HostDialog hd = new HostDialog(frame);\n         hd.setVisible(true);\n-        if ((hd.playerName == null) || (hd.serverPass == null) || (hd.port == 0)) {\n-            return;\n-        }\n \n-        // Players should have to enter a non-blank, non-whitespace name.\n-        boolean foundValid = false;\n-        char[] nameChars = hd.playerName.toCharArray();\n-        for (int loop = 0; !foundValid && (loop < nameChars.length); loop++) {\n-            if (!Character.isWhitespace(nameChars[loop])) {\n-                foundValid = true;\n-            }\n-        }\n-        if (!foundValid) {\n-            JOptionPane\n-                    .showMessageDialog(\n-                            frame,\n-                            Messages.getString(\"MegaMek.PlayerNameAlert1.message\"), Messages.getString(\"MegaMek.PlayerNameAlert1.title\"), JOptionPane.ERROR_MESSAGE); //$NON-NLS-1$ //$NON-NLS-2$\n+        if (!hd.dataValidation(\"MegaMek.PlayerNameAlert1.title\", \"MegaMek.PlayerNameAlert.message\")) {\n             return;\n         }\n \n         // kick off a RNG check\n         d6();\n         // start server\n         try {\n-            server = new Server(hd.serverPass, hd.port, hd.register, hd.register ? hd.metaserver : \"\");\n+            server = new Server(hd.getServerPass(), hd.getPort(), hd.isRegister(), hd.isRegister() ? hd.getMetaserver() : \"\");\n         } catch (IOException ex) {\n-            System.err.println(\"could not create server socket on port \" + hd.port);\n-            String error = \"Error: could not start server at localhost\" + \":\" + hd.port + \" (\" +\n-                    ex.getMessage() + \").\";\n-            JOptionPane\n-                    .showMessageDialog(\n-                            frame,\n-                            error,\n-                            Messages.getString(\"MegaMek.HostGameAlert.title\"), JOptionPane.ERROR_MESSAGE); //$NON-NLS-1$\n+            MegaMek.getLogger().error(this, \"could not create server socket on port \" + hd.getPort());\n+            JOptionPane.showMessageDialog(frame,\n+                    \"Error: could not start server at localhost\" + \":\" + hd.getPort() + \" (\" + ex.getMessage() + \").\",\n+                    Messages.getString(\"MegaMek.HostGameAlert.title\"), JOptionPane.ERROR_MESSAGE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkzOTkzNA=="}, "originalCommit": {"oid": "8de77e7b22fbfab80828b7ed8b136e053cd9d8ae"}, "originalPosition": 343}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1OTc0NA==", "bodyText": "Ended up finding a bunch of localization issues in this, so I've fixed that now.", "url": "https://github.com/MegaMek/megamek/pull/2170#discussion_r491059744", "createdAt": "2020-09-18T16:25:05Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/MegaMekGUI.java", "diffHunk": "@@ -559,68 +533,48 @@ public String getDescription() {\n             }\n         });\n         int returnVal = fc.showOpenDialog(frame);\n-        if ((returnVal != JFileChooser.APPROVE_OPTION)\n-                || (fc.getSelectedFile() == null)) {\n+        if ((returnVal != JFileChooser.APPROVE_OPTION) || (fc.getSelectedFile() == null)) {\n             // I want a file, y'know!\n             return;\n         }\n         HostDialog hd = new HostDialog(frame);\n         hd.setVisible(true);\n-        if ((hd.playerName == null) || (hd.serverPass == null) || (hd.port == 0)) {\n-            return;\n-        }\n \n-        // Players should have to enter a non-blank, non-whitespace name.\n-        boolean foundValid = false;\n-        char[] nameChars = hd.playerName.toCharArray();\n-        for (int loop = 0; !foundValid && (loop < nameChars.length); loop++) {\n-            if (!Character.isWhitespace(nameChars[loop])) {\n-                foundValid = true;\n-            }\n-        }\n-        if (!foundValid) {\n-            JOptionPane\n-                    .showMessageDialog(\n-                            frame,\n-                            Messages.getString(\"MegaMek.PlayerNameAlert1.message\"), Messages.getString(\"MegaMek.PlayerNameAlert1.title\"), JOptionPane.ERROR_MESSAGE); //$NON-NLS-1$ //$NON-NLS-2$\n+        if (!hd.dataValidation(\"MegaMek.PlayerNameAlert1.title\", \"MegaMek.PlayerNameAlert.message\")) {\n             return;\n         }\n \n         // kick off a RNG check\n         d6();\n         // start server\n         try {\n-            server = new Server(hd.serverPass, hd.port, hd.register, hd.register ? hd.metaserver : \"\");\n+            server = new Server(hd.getServerPass(), hd.getPort(), hd.isRegister(), hd.isRegister() ? hd.getMetaserver() : \"\");\n         } catch (IOException ex) {\n-            System.err.println(\"could not create server socket on port \" + hd.port);\n-            String error = \"Error: could not start server at localhost\" + \":\" + hd.port + \" (\" +\n-                    ex.getMessage() + \").\";\n-            JOptionPane\n-                    .showMessageDialog(\n-                            frame,\n-                            error,\n-                            Messages.getString(\"MegaMek.HostGameAlert.title\"), JOptionPane.ERROR_MESSAGE); //$NON-NLS-1$\n+            MegaMek.getLogger().error(this, \"could not create server socket on port \" + hd.getPort());\n+            JOptionPane.showMessageDialog(frame,\n+                    \"Error: could not start server at localhost\" + \":\" + hd.getPort() + \" (\" + ex.getMessage() + \").\",\n+                    Messages.getString(\"MegaMek.HostGameAlert.title\"), JOptionPane.ERROR_MESSAGE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkzOTkzNA=="}, "originalCommit": {"oid": "8de77e7b22fbfab80828b7ed8b136e053cd9d8ae"}, "originalPosition": 343}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjAzNDAwOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/gameConnectionDialogs/ConnectDialog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzozMzoxOVrOHUNVew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjoyNDo1MlrOHUT5pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk1MjA1OQ==", "bodyText": "My feeling would be (not because it's important right here, more as a matter principle) that InitComponents might rather be\n\"protected JPanel createMainPanel() { ... }\"\nEverything from \"add(middlePanel...\" to center() (lines 71-77) would then move to the AbstractGCD and in the subclass it would just \"return middlePanel;\" instead. In this way the subclass can create whatever it wants in that panel and just return it and it does not have to \"remember\" doing anything (e.g. to createButtons()).\nOf course, this forces createbuttons() on the subclasses but I suppose that's the buttons we need for a game conection dialog...\nI mean this purely as a suggestion.", "url": "https://github.com/MegaMek/megamek/pull/2170#discussion_r490952059", "createdAt": "2020-09-18T13:33:19Z", "author": {"login": "SJuliez"}, "path": "megamek/src/megamek/client/ui/swing/gameConnectionDialogs/ConnectDialog.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MegaMek.\n+ *\n+ * MegaMek is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MegaMek is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MegaMek. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package megamek.client.ui.swing.gameConnectionDialogs;\n+\n+import java.awt.BorderLayout;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import java.awt.event.ActionEvent;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import javax.swing.SwingConstants;\n+\n+import megamek.client.ui.Messages;\n+\n+/** The Connect to game (as Bot or Player) dialog */\n+public class ConnectDialog extends AbstractGameConnectionDialog {\n+    private static final long serialVersionUID = 5895056240077042429L;\n+\n+    private String serverAddress;\n+    private JTextField serverAddressField;\n+\n+    public ConnectDialog(JFrame frame) {\n+        super(frame, Messages.getString(\"MegaMek.ConnectDialog.title\"), true);\n+    }\n+\n+    //region Initialization\n+    @Override\n+    protected void initComponents() {\n+        JLabel yourNameL = new JLabel(Messages.getString(\"MegaMek.yourNameL\"), SwingConstants.RIGHT);\n+        JLabel serverAddrL = new JLabel(Messages.getString(\"MegaMek.serverAddrL\"), SwingConstants.RIGHT);\n+        JLabel portL = new JLabel(Messages.getString(\"MegaMek.portL\"), SwingConstants.RIGHT);\n+        setPlayerNameField(new JTextField(getClientPreferences().getLastPlayerName(), 16));\n+        getPlayerNameField().addActionListener(this);\n+        serverAddressField = new JTextField(getClientPreferences().getLastConnectAddr(), 16);\n+        serverAddressField.addActionListener(this);\n+        setPortField(new JTextField(getClientPreferences().getLastConnectPort() + \"\", 4));\n+        getPortField().addActionListener(this);\n+        \n+        JPanel middlePanel = new JPanel(new GridBagLayout());\n+        GridBagConstraints c = new GridBagConstraints();\n+        c.fill = GridBagConstraints.NONE;\n+        c.weightx = 0.0;\n+        c.weighty = 0.0;\n+        c.insets = new Insets(5, 5, 5, 5);\n+        c.gridwidth = 1;\n+        \n+        addOptionRow(middlePanel, c, yourNameL, getPlayerNameField());\n+        addOptionRow(middlePanel, c, serverAddrL, serverAddressField);\n+        addOptionRow(middlePanel, c, portL, getPortField());\n+        \n+        add(middlePanel, BorderLayout.CENTER);\n+        \n+        createButtons();\n+        \n+        pack();\n+        setResizable(false);\n+        center();\n+    }\n+    //endregion Initialization", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8de77e7b22fbfab80828b7ed8b136e053cd9d8ae"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1OTYyMQ==", "bodyText": "I concur, that's better code. Implement.", "url": "https://github.com/MegaMek/megamek/pull/2170#discussion_r491059621", "createdAt": "2020-09-18T16:24:52Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/gameConnectionDialogs/ConnectDialog.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MegaMek.\n+ *\n+ * MegaMek is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MegaMek is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MegaMek. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package megamek.client.ui.swing.gameConnectionDialogs;\n+\n+import java.awt.BorderLayout;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import java.awt.event.ActionEvent;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import javax.swing.SwingConstants;\n+\n+import megamek.client.ui.Messages;\n+\n+/** The Connect to game (as Bot or Player) dialog */\n+public class ConnectDialog extends AbstractGameConnectionDialog {\n+    private static final long serialVersionUID = 5895056240077042429L;\n+\n+    private String serverAddress;\n+    private JTextField serverAddressField;\n+\n+    public ConnectDialog(JFrame frame) {\n+        super(frame, Messages.getString(\"MegaMek.ConnectDialog.title\"), true);\n+    }\n+\n+    //region Initialization\n+    @Override\n+    protected void initComponents() {\n+        JLabel yourNameL = new JLabel(Messages.getString(\"MegaMek.yourNameL\"), SwingConstants.RIGHT);\n+        JLabel serverAddrL = new JLabel(Messages.getString(\"MegaMek.serverAddrL\"), SwingConstants.RIGHT);\n+        JLabel portL = new JLabel(Messages.getString(\"MegaMek.portL\"), SwingConstants.RIGHT);\n+        setPlayerNameField(new JTextField(getClientPreferences().getLastPlayerName(), 16));\n+        getPlayerNameField().addActionListener(this);\n+        serverAddressField = new JTextField(getClientPreferences().getLastConnectAddr(), 16);\n+        serverAddressField.addActionListener(this);\n+        setPortField(new JTextField(getClientPreferences().getLastConnectPort() + \"\", 4));\n+        getPortField().addActionListener(this);\n+        \n+        JPanel middlePanel = new JPanel(new GridBagLayout());\n+        GridBagConstraints c = new GridBagConstraints();\n+        c.fill = GridBagConstraints.NONE;\n+        c.weightx = 0.0;\n+        c.weighty = 0.0;\n+        c.insets = new Insets(5, 5, 5, 5);\n+        c.gridwidth = 1;\n+        \n+        addOptionRow(middlePanel, c, yourNameL, getPlayerNameField());\n+        addOptionRow(middlePanel, c, serverAddrL, serverAddressField);\n+        addOptionRow(middlePanel, c, portL, getPortField());\n+        \n+        add(middlePanel, BorderLayout.CENTER);\n+        \n+        createButtons();\n+        \n+        pack();\n+        setResizable(false);\n+        center();\n+    }\n+    //endregion Initialization", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk1MjA1OQ=="}, "originalCommit": {"oid": "8de77e7b22fbfab80828b7ed8b136e053cd9d8ae"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzYxMzU4OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/Messages.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozMjowMVrOHUceDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDoyN1rOHUcg8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMDAxNQ==", "bodyText": "So far this was done using \"message=SomeError {0}: {1}\". The call to Messages.getString looks the same in both cases I think. Is there an advantage to the %s version?", "url": "https://github.com/MegaMek/megamek/pull/2170#discussion_r491200015", "createdAt": "2020-09-18T21:32:01Z", "author": {"login": "SJuliez"}, "path": "megamek/src/megamek/client/ui/Messages.java", "diffHunk": "@@ -53,4 +53,12 @@ public static String getString(String key) {\n     public static String getString(String key, Object... args) {\n         return MessageFormat.format(getString(key), args);\n     }\n+\n+    /**\n+     * Returns the formatted internationalized text for the given key in the resource bundle,\n+     * replacing occurrences of %s in the message with the contents of args.\n+     */\n+    public static String getFormattedString(String key, Object... args) {\n+        return String.format(getString(key), args);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c8d63aa46215469e3a0af22bc5dc4458f5b9a0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMDc1Mw==", "bodyText": "This does not format numbers, which is necessary for ports.... and I apparently forgot to put that in the comment.", "url": "https://github.com/MegaMek/megamek/pull/2170#discussion_r491200753", "createdAt": "2020-09-18T21:34:27Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/Messages.java", "diffHunk": "@@ -53,4 +53,12 @@ public static String getString(String key) {\n     public static String getString(String key, Object... args) {\n         return MessageFormat.format(getString(key), args);\n     }\n+\n+    /**\n+     * Returns the formatted internationalized text for the given key in the resource bundle,\n+     * replacing occurrences of %s in the message with the contents of args.\n+     */\n+    public static String getFormattedString(String key, Object... args) {\n+        return String.format(getString(key), args);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMDAxNQ=="}, "originalCommit": {"oid": "54c8d63aa46215469e3a0af22bc5dc4458f5b9a0"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2671, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}