{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MDA4NTY1", "number": 2444, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMTowMTo0NlrOE-UGCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMTowMTo0NlrOE-UGCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNzc2Mzk1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/loaders/MtfFile.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMTowMTo0NlrOH7dMTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMTo0MToxMlrOH7dZQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNjMxOQ==", "bodyText": "We should probably move this into a constant", "url": "https://github.com/MegaMek/megamek/pull/2444#discussion_r532106319", "createdAt": "2020-11-28T21:01:46Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/loaders/MtfFile.java", "diffHunk": "@@ -505,107 +507,103 @@ public Entity getEntity() throws EntityLoadingException {\n     }\n \n     private void setTechLevel(Mech mech) throws EntityLoadingException {\n-        switch (techBase.substring(9).trim()) {\n-            case \"Inner Sphere\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 1:\n-                        mech.setTechLevel(TechConstants.T_INTRO_BOXSET);\n-                        break;\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_IS_TW_NON_BOX);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_IS_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_IS_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_IS_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                break;\n-            case \"Clan\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_CLAN_TW);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_CLAN_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_CLAN_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_CLAN_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                break;\n-            case \"Mixed (IS Chassis)\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_IS_TW_NON_BOX);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_IS_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_IS_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_IS_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                mech.setMixedTech(true);\n-                break;\n-            case \"Mixed (Clan Chassis)\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_CLAN_TW);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_CLAN_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_CLAN_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_CLAN_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                mech.setMixedTech(true);\n-                break;\n-            case \"Mixed\":\n-                throw new EntityLoadingException(\"Unsupported tech base: \\\"Mixed\\\" is no longer allowed by itself.  You must specify \\\"Mixed (IS Chassis)\\\" or \\\"Mixed (Clan Chassis)\\\".\");\n-            default:\n-                throw new EntityLoadingException(\"Unsupported tech base: \" + techBase.substring(9).trim());\n+        String techBase = this.techBase.substring(9).trim();\n+        if (techBase.equalsIgnoreCase(\"Inner Sphere\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23d3705baba0faba54f7aea60ea94751186e7529"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwOTYzNA==", "bodyText": "Noted, just wanted this PR to be 'to-the-point' so as to make the review simple.", "url": "https://github.com/MegaMek/megamek/pull/2444#discussion_r532109634", "createdAt": "2020-11-28T21:41:12Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/common/loaders/MtfFile.java", "diffHunk": "@@ -505,107 +507,103 @@ public Entity getEntity() throws EntityLoadingException {\n     }\n \n     private void setTechLevel(Mech mech) throws EntityLoadingException {\n-        switch (techBase.substring(9).trim()) {\n-            case \"Inner Sphere\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 1:\n-                        mech.setTechLevel(TechConstants.T_INTRO_BOXSET);\n-                        break;\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_IS_TW_NON_BOX);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_IS_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_IS_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_IS_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                break;\n-            case \"Clan\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_CLAN_TW);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_CLAN_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_CLAN_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_CLAN_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                break;\n-            case \"Mixed (IS Chassis)\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_IS_TW_NON_BOX);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_IS_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_IS_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_IS_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                mech.setMixedTech(true);\n-                break;\n-            case \"Mixed (Clan Chassis)\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_CLAN_TW);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_CLAN_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_CLAN_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_CLAN_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                mech.setMixedTech(true);\n-                break;\n-            case \"Mixed\":\n-                throw new EntityLoadingException(\"Unsupported tech base: \\\"Mixed\\\" is no longer allowed by itself.  You must specify \\\"Mixed (IS Chassis)\\\" or \\\"Mixed (Clan Chassis)\\\".\");\n-            default:\n-                throw new EntityLoadingException(\"Unsupported tech base: \" + techBase.substring(9).trim());\n+        String techBase = this.techBase.substring(9).trim();\n+        if (techBase.equalsIgnoreCase(\"Inner Sphere\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNjMxOQ=="}, "originalCommit": {"oid": "23d3705baba0faba54f7aea60ea94751186e7529"}, "originalPosition": 118}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2605, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}