{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzOTgzMDU3", "number": 2002, "title": "Refactor StepSprite, BoardView", "bodyText": "Pure refactor.", "createdAt": "2020-06-13T09:25:11Z", "url": "https://github.com/MegaMek/megamek/pull/2002", "merged": true, "mergeCommit": {"oid": "0e221eea331d64cd85620f5cac52e047759dedd9"}, "closed": true, "closedAt": "2020-06-16T01:14:22Z", "author": {"login": "SJuliez"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqzd3igH2gAyNDMzOTgzMDU3Ojc2ZTIyZGY4Zjc2ZjJmOWVkY2JkMDNjMThkN2FhZTNhNzMwODI3YjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrqwr6gH2gAyNDMzOTgzMDU3OmI3NGNmYjIwMTRmZmVlODlhMGJkYzljMWUwZDQ2ZTgzMGQzODc4MGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "committedDate": "2020-06-13T08:48:41Z", "message": "Refactor StepSprite, BoardView"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTQ2OTMx", "url": "https://github.com/MegaMek/megamek/pull/2002#pullrequestreview-430146931", "createdAt": "2020-06-13T15:34:04Z", "commit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxNTozNDowNFrOGjYDmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxNTozNDowNFrOGjYDmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0NzQ4Mg==", "bodyText": "A rather roundabout way to calculate Point(0, 0)", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r439747482", "createdAt": "2020-06-13T15:34:04Z", "author": {"login": "neoancient"}, "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -63,84 +78,61 @@ public void prepare() {\n         Image tempImage = new BufferedImage(BoardView1.HEX_W, BoardView1.HEX_H,\n                 BufferedImage.TYPE_INT_ARGB);\n         Graphics graph = tempImage.getGraphics();\n+        Graphics2D g2D = (Graphics2D)graph;\n \n-        if (GUIPreferences.getInstance().getAntiAliasing()) {\n-            ((Graphics2D) graph).setRenderingHint(\n-                    RenderingHints.KEY_ANTIALIASING,\n-                    RenderingHints.VALUE_ANTIALIAS_ON);\n-        }\n+        GUIPreferences.AntiAliasifSet(graph);\n \n         // fill with key color\n         graph.setColor(new Color(0, 0, 0, 0));\n         graph.fillRect(0, 0, BoardView1.HEX_W, BoardView1.HEX_H);\n \n         // setup some variables\n-        final Point stepPos = bv.getHexLocation(step.getPosition());\n-        stepPos.translate(-bounds.x, -bounds.y);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTQ2OTQz", "url": "https://github.com/MegaMek/megamek/pull/2002#pullrequestreview-430146943", "createdAt": "2020-06-13T15:34:12Z", "commit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzI5NDI2", "url": "https://github.com/MegaMek/megamek/pull/2002#pullrequestreview-430729426", "createdAt": "2020-06-15T15:00:47Z", "commit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "state": "APPROVED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowMDo0N1rOGj2I3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowNjoyMlrOGj2X4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MDM0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Graphics2D g2D = (Graphics2D)graph;\n          \n          \n            \n                    Graphics2D g2D = (Graphics2D) graph;", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440240349", "createdAt": "2020-06-15T15:00:47Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -63,84 +78,61 @@ public void prepare() {\n         Image tempImage = new BufferedImage(BoardView1.HEX_W, BoardView1.HEX_H,\n                 BufferedImage.TYPE_INT_ARGB);\n         Graphics graph = tempImage.getGraphics();\n+        Graphics2D g2D = (Graphics2D)graph;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final static GUIPreferences GUIP = GUIPreferences.getInstance(); \n          \n          \n            \n                private static final GUIPreferences GUIP = GUIPreferences.getInstance();", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440241263", "createdAt": "2020-06-15T15:02:06Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -28,6 +33,16 @@\n  * entering, exiting or turning.\n  */\n class StepSprite extends Sprite {\n+    \n+    private final static GUIPreferences GUIP = GUIPreferences.getInstance(); ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTUyOQ==", "bodyText": "Just standard order for this project.", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440241529", "createdAt": "2020-06-15T15:02:30Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -28,6 +33,16 @@\n  * entering, exiting or turning.\n  */\n class StepSprite extends Sprite {\n+    \n+    private final static GUIPreferences GUIP = GUIPreferences.getInstance(); ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}, "originalCommit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MzQyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                drawMovementCost(step, isLastStep, new Point(0,0), graph, col, true);\n          \n          \n            \n                                drawMovementCost(step, isLastStep, new Point(0, 0), graph, col, true);", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440243428", "createdAt": "2020-06-15T15:05:16Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -259,205 +202,74 @@ public void prepare() {\n                 // if this is the last legal step then the facing arrow is drawn later\n                 if (!isLastLegalStep) {\n                     // draw arrows showing the facing\n-                    graph.setColor(Color.darkGray);\n-                    currentArrow = stepOffset.createTransformedShape(facingArrow);\n-                    ((Graphics2D) graph).fill(currentArrow);\n-\n-                    graph.setColor(col);\n-                    currentArrow = shadowOffset.createTransformedShape(currentArrow);\n-                    ((Graphics2D) graph).fill(currentArrow);\n+                    drawArrowShape(g2D, facingArrow, col);\n                 }\n \n                 if (bv.game.useVectorMove()) {\n-                    drawMovementCost(step, isLastStep, stepPos, graph, col, false);\n+                    drawMovementCost(step, isLastStep, new Point(0,0), graph, col, false);\n                 }\n                 break;\n             case BOOTLEGGER:\n                 // draw arrows showing them entering the next\n-                graph.setColor(Color.darkGray);\n-                currentArrow = stepOffset.createTransformedShape(moveArrow);\n-                ((Graphics2D) graph).fill(currentArrow);\n-\n-                graph.setColor(col);\n-                currentArrow = shadowOffset.createTransformedShape(currentArrow);\n-                ((Graphics2D) graph).fill(currentArrow);\n-\n-                drawMovementCost(step, isLastStep, stepPos, graph, col, true);\n+                drawArrowShape(g2D, moveArrow, col);\n+                drawMovementCost(step, isLastStep, new Point(0,0), graph, col, true);\n                 break;\n             case LOAD:\n-                // Announce load.\n                 String load = Messages.getString(\"BoardView1.Load\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    load = \"(\" + load + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int loadX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(load) / 2);\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(load, loadX, stepPos.y + 39);\n-                graph.setColor(col);\n-                graph.drawString(load, loadX - 1, stepPos.y + 38);\n+                drawAnnouncement(g2D, load, step, col);\n                 break;\n             case TOW:\n-                // Announce tow.\n                 String tow = Messages.getString(\"BoardView1.Tow\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    tow = \"(\" + tow + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int towX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(tow) / 2);\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(tow, towX, stepPos.y + 39);\n-                graph.setColor(col);\n-                graph.drawString(tow, towX - 1, stepPos.y + 38);\n+                drawAnnouncement(g2D, tow, step, col);\n                 break;\n             case DISCONNECT:\n-                // Announce disconnect.\n                 String disconnect = Messages.getString(\"BoardView1.Disconnect\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    disconnect = \"(\" + disconnect + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int disconnectX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(disconnect) / 2);\n-                int disconnectY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(disconnect, disconnectX, disconnectY + 1);\n-                graph.setColor(col);\n-                graph.drawString(disconnect, disconnectX - 1, disconnectY);\n+                drawAnnouncement(g2D, disconnect, step, col);\n                 break;\n             case LAUNCH:\n             case UNDOCK:\n-                // announce launch\n                 String launch = Messages.getString(\"BoardView1.Launch\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    launch = \"(\" + launch + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int launchX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(launch) / 2);\n-                int launchY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(launch, launchX, launchY + 1);\n-                graph.setColor(col);\n-                graph.drawString(launch, launchX - 1, launchY);\n+                drawAnnouncement(g2D, launch, step, col);\n                 break;\n             case DROP:\n-                // announce drop\n                 String drop = Messages.getString(\"BoardView1.Drop\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    drop = \"(\" + drop + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int dropX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(drop) / 2);\n-                int dropY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(drop, dropX, dropY + 1);\n-                graph.setColor(col);\n-                graph.drawString(drop, dropX - 1, dropY);\n+                drawAnnouncement(g2D, drop, step, col);\n                 break;\n             case RECOVER:\n-                // announce recover\n                 String recover = Messages.getString(\"BoardView1.Recover\"); //$NON-NLS-1$\n                 if (step.isDocking()) {\n                     recover = Messages.getString(\"BoardView1.Dock\"); //$NON-NLS-1$\n                 }\n-                if (step.isPastDanger()) {\n-                    recover = \"(\" + recover + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int recoverX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(recover) / 2);\n-                int recoverY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(recover, recoverX, recoverY + 1);\n-                graph.setColor(col);\n-                graph.drawString(recover, recoverX - 1, recoverY);\n+                drawAnnouncement(g2D, recover, step, col);\n                 break;\n             case JOIN:\n-                // announce join\n                 String join = Messages.getString(\"BoardView1.Join\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    join = \"(\" + join + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int joinX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(join) / 2);\n-                int joinY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(join, joinX, joinY + 1);\n-                graph.setColor(col);\n-                graph.drawString(join, joinX - 1, joinY);\n+                drawAnnouncement(g2D, join, step, col);\n                 break;\n             case UNLOAD:\n-                // Announce unload.\n                 String unload = Messages.getString(\"BoardView1.Unload\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    unload = \"(\" + unload + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int unloadX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(unload) / 2);\n-                int unloadY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(unload, unloadX, unloadY + 1);\n-                graph.setColor(col);\n-                graph.drawString(unload, unloadX - 1, unloadY);\n+                drawAnnouncement(g2D, unload, step, col);\n                 break;\n             case HOVER:\n-                // announce hover\n                 String hover = Messages.getString(\"BoardView1.Hover\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    hover = \"(\" + hover + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int hoverX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(hover) / 2);\n-                int hoverY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(hover, hoverX, hoverY + 1);\n-                graph.setColor(col);\n-                graph.drawString(hover, hoverX - 1, hoverY);\n-                drawMovementCost(step, isLastStep, stepPos, graph, col, false);\n+                drawAnnouncement(g2D, hover, step, col);\n                 break;\n             case LAND:\n-                // announce land\n                 String land = Messages.getString(\"BoardView1.Land\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    land = \"(\" + land + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int landX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(land) / 2);\n-                int landY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(land, landX, landY + 1);\n-                graph.setColor(col);\n-                graph.drawString(land, landX - 1, landY);\n+                drawAnnouncement(g2D, land, step, col);\n                 break;\n             case CONVERT_MODE:\n-                int modePos = stepPos.y + 38;\n+                int modePos = 38;\n                 if (step.getMp() > 0) {\n                     // draw movement cost\n-                    drawMovementCost(step, isLastStep, stepPos, graph, col, true);\n+                    drawMovementCost(step, isLastStep, new Point(0,0), graph, col, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "originalPosition": 464}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MzU2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                drawMovementCost(step, isLastStep, new Point(0,0), graph, col, false);\n          \n          \n            \n                                drawMovementCost(step, isLastStep, new Point(0, 0), graph, col, false);", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440243560", "createdAt": "2020-06-15T15:05:28Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -259,205 +202,74 @@ public void prepare() {\n                 // if this is the last legal step then the facing arrow is drawn later\n                 if (!isLastLegalStep) {\n                     // draw arrows showing the facing\n-                    graph.setColor(Color.darkGray);\n-                    currentArrow = stepOffset.createTransformedShape(facingArrow);\n-                    ((Graphics2D) graph).fill(currentArrow);\n-\n-                    graph.setColor(col);\n-                    currentArrow = shadowOffset.createTransformedShape(currentArrow);\n-                    ((Graphics2D) graph).fill(currentArrow);\n+                    drawArrowShape(g2D, facingArrow, col);\n                 }\n \n                 if (bv.game.useVectorMove()) {\n-                    drawMovementCost(step, isLastStep, stepPos, graph, col, false);\n+                    drawMovementCost(step, isLastStep, new Point(0,0), graph, col, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "originalPosition": 270}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MzgxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            drawMovementCost(step, isLastStep, new Point(0,0), graph, col, true);\n          \n          \n            \n                            drawMovementCost(step, isLastStep, new Point(0, 0), graph, col, true);", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440243818", "createdAt": "2020-06-15T15:05:51Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -157,18 +149,10 @@ public void prepare() {\n             case ACC:\n             case ACCN:\n             case LOOP:\n-                // draw arrows showing them entering the next\n-                graph.setColor(Color.darkGray);\n-                currentArrow = stepOffset.createTransformedShape(moveArrow);\n-                ((Graphics2D) graph).fill(currentArrow);\n-\n-                graph.setColor(col);\n-                currentArrow = shadowOffset.createTransformedShape(currentArrow);\n-                ((Graphics2D) graph).fill(currentArrow);\n-\n-                // draw movement cost\n-                drawMovementCost(step, isLastStep, stepPos, graph, col, true);\n-                drawRemainingVelocity(step, stepPos, graph, true);\n+                // forward movement arrow\n+                drawArrowShape(g2D, moveArrow, col);\n+                drawMovementCost(step, isLastStep, new Point(0,0), graph, col, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NDE5Mw==", "bodyText": "Why keep this commented out code?", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440244193", "createdAt": "2020-06-15T15:06:22Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -471,66 +283,77 @@ public void prepare() {\n         // draw arrows showing the facing for final step only\n         if (isLastLegalStep) {\n             Shape finalFacingArrow = bv.finalFacingPolys[step.getFacing()];\n-\n-            graph.setColor(Color.darkGray);\n-            currentArrow = stepOffset.createTransformedShape(finalFacingArrow);\n-            ((Graphics2D) graph).fill(currentArrow);\n-\n-            graph.setColor(col);\n-            currentArrow = shadowOffset.createTransformedShape(currentArrow);\n-            ((Graphics2D) graph).fill(currentArrow);\n+            drawArrowShape(g2D, finalFacingArrow, col);\n         }\n \n         if (step.isVTOLBombingStep() || step.isStrafingStep()) {\n             graph.setColor(col);\n-            ((Graphics2D) graph).fill(\n-                    AffineTransform.getTranslateInstance(stepPos.x, stepPos.y)\n-                            .createTransformedShape(\n-                                    HexDrawUtilities.getHexFullBorderArea(3, 0)));\n+//            g2D.fill(AffineTransform.getTranslateInstance(stepPos.x, stepPos.y)\n+//                    .createTransformedShape(HexDrawUtilities.getHexFullBorderArea(3, 0)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0"}, "originalPosition": 499}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b74cfb2014ffee89a0bdc9c1e0d46e830d38780e", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/b74cfb2014ffee89a0bdc9c1e0d46e830d38780e", "committedDate": "2020-06-16T01:14:01Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4880, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}