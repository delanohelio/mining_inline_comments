{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NDY2NzE3", "number": 2094, "title": "PPC Capacitors also add 5 heat in the first charge turn", "bodyText": "Resolves #2065", "createdAt": "2020-07-29T14:11:41Z", "url": "https://github.com/MegaMek/megamek/pull/2094", "merged": true, "mergeCommit": {"oid": "07dea6604df72f3e9ebcebd376ff917e08a3a6ed"}, "closed": true, "closedAt": "2020-07-31T14:42:08Z", "author": {"login": "SJuliez"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5rnG8AH2gAyNDU4NDY2NzE3OmIzMTc0OTkyM2I3NDRmNTMzNDM4YTUxNmYwNjQ4ZTBjNmViZTE0M2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5rrnBgFqTQ1NzU2MzI2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b31749923b744f533438a516f0648e0c6ebe143f", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/b31749923b744f533438a516f0648e0c6ebe143f", "committedDate": "2020-07-29T14:08:24Z", "message": "Fix for #2065 PPC Capacitors also add 5 heat in the first charge turn"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NTYzMjYz", "url": "https://github.com/MegaMek/megamek/pull/2094#pullrequestreview-457563263", "createdAt": "2020-07-29T14:12:59Z", "commit": {"oid": "b31749923b744f533438a516f0648e0c6ebe143f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDoxMzowMFrOG46btA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDoxMzoxNVrOG46cew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzMDgwNA==", "bodyText": "Can we take these magic numbers and make them into constants?", "url": "https://github.com/MegaMek/megamek/pull/2094#discussion_r462330804", "createdAt": "2020-07-29T14:13:00Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/Mounted.java", "diffHunk": "@@ -979,35 +978,60 @@ public void setHotLoad(boolean hotload) {\n         }\n \n     }\n+    \n+    /** Returns true when m is a PPC Capacitor and not destroyed. */\n+    private boolean isWorkingCapacitor(Mounted m) {\n+        return !m.isDestroyed()\n+        && m.getType() instanceof MiscType\n+        && ((MiscType) m.getType()).hasFlag(MiscType.F_PPC_CAPACITOR);\n+    }\n \n-    /**\n-     * does this <code>Mounted</code> have a linked and charged PPC Capacitor?\n+    /** \n+     * Returns 1 or 2 if this Mounted has a linked\n+     * and charged (= set to charge in an earlier turn) \n+     * PPC Capacitor.\n      */\n-\n     public int hasChargedCapacitor() {\n+        if (getCrossLinkedBy() != null\n+                && isWorkingCapacitor(getCrossLinkedBy())\n+                && getCrossLinkedBy().curMode().equals(\"Charge\")) {\n+            return 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b31749923b744f533438a516f0648e0c6ebe143f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzMTAwMw==", "bodyText": "Or, even better, an enum?", "url": "https://github.com/MegaMek/megamek/pull/2094#discussion_r462331003", "createdAt": "2020-07-29T14:13:15Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/Mounted.java", "diffHunk": "@@ -979,35 +978,60 @@ public void setHotLoad(boolean hotload) {\n         }\n \n     }\n+    \n+    /** Returns true when m is a PPC Capacitor and not destroyed. */\n+    private boolean isWorkingCapacitor(Mounted m) {\n+        return !m.isDestroyed()\n+        && m.getType() instanceof MiscType\n+        && ((MiscType) m.getType()).hasFlag(MiscType.F_PPC_CAPACITOR);\n+    }\n \n-    /**\n-     * does this <code>Mounted</code> have a linked and charged PPC Capacitor?\n+    /** \n+     * Returns 1 or 2 if this Mounted has a linked\n+     * and charged (= set to charge in an earlier turn) \n+     * PPC Capacitor.\n      */\n-\n     public int hasChargedCapacitor() {\n+        if (getCrossLinkedBy() != null\n+                && isWorkingCapacitor(getCrossLinkedBy())\n+                && getCrossLinkedBy().curMode().equals(\"Charge\")) {\n+            return 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzMDgwNA=="}, "originalCommit": {"oid": "b31749923b744f533438a516f0648e0c6ebe143f"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4922, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}