{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NjczNTM0", "number": 2225, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMTo1MToyMlrOEl5aow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMTo1MToyMlrOEl5aow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTczNDc1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/util/sorter/NaturalOrderComparator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMTo1MToyMlrOHVn76Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMDozMTo1MFrOHXFssQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQzNjQ1Nw==", "bodyText": "Why do we need this to be serializable?", "url": "https://github.com/MegaMek/megamek/pull/2225#discussion_r492436457", "createdAt": "2020-09-22T01:51:22Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/util/sorter/NaturalOrderComparator.java", "diffHunk": "@@ -36,7 +37,8 @@\n  * would be sorted into { \"Atlas 0\", \"Atlas 1\", \"Atlas 2\", \"Atlas 5\", \"Atlas 15\" }\n  * instead of ASCII's { \"Atlas 0\", \"Atlas 1\", \"Atlas 15\", \"Atlas 2\", \"Atlas 5\" }\n  */\n-public class NaturalOrderComparator implements Comparator<String> {\n+public class NaturalOrderComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -5116813198443091269L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc1cc9a8c4d4173353111059c1df1a84b2b0ad9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQzODE1NA==", "bodyText": "This is preventative...  From IDEA's Inspection Reasoning: \"Reports on subclasses of java.lang.Comparator which are not also Serializable. Objects of java.util.TreeMap or java.util.TreeSet will become non-Serializable if instantiated with such Comparators. This can result in unexpected and difficult-to-diagnose bugs. Since subclasses of java.lang.Comparator are often stateless, simply marking them Serializable is a small cost to avoid such issues.\"", "url": "https://github.com/MegaMek/megamek/pull/2225#discussion_r492438154", "createdAt": "2020-09-22T01:59:30Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/util/sorter/NaturalOrderComparator.java", "diffHunk": "@@ -36,7 +37,8 @@\n  * would be sorted into { \"Atlas 0\", \"Atlas 1\", \"Atlas 2\", \"Atlas 5\", \"Atlas 15\" }\n  * instead of ASCII's { \"Atlas 0\", \"Atlas 1\", \"Atlas 15\", \"Atlas 2\", \"Atlas 5\" }\n  */\n-public class NaturalOrderComparator implements Comparator<String> {\n+public class NaturalOrderComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -5116813198443091269L;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQzNjQ1Nw=="}, "originalCommit": {"oid": "6dc1cc9a8c4d4173353111059c1df1a84b2b0ad9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MjY1Nw==", "bodyText": "That certainly is a strange behavior.", "url": "https://github.com/MegaMek/megamek/pull/2225#discussion_r493972657", "createdAt": "2020-09-24T00:31:50Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/util/sorter/NaturalOrderComparator.java", "diffHunk": "@@ -36,7 +37,8 @@\n  * would be sorted into { \"Atlas 0\", \"Atlas 1\", \"Atlas 2\", \"Atlas 5\", \"Atlas 15\" }\n  * instead of ASCII's { \"Atlas 0\", \"Atlas 1\", \"Atlas 15\", \"Atlas 2\", \"Atlas 5\" }\n  */\n-public class NaturalOrderComparator implements Comparator<String> {\n+public class NaturalOrderComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -5116813198443091269L;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQzNjQ1Nw=="}, "originalCommit": {"oid": "6dc1cc9a8c4d4173353111059c1df1a84b2b0ad9"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2699, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}