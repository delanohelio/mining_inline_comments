{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NDY4MDU2", "number": 2298, "title": "VTOL pathfinding and movement corrections", "bodyText": "Some love for VTOL movement:\n\nMakes the Go Up and Go Down buttons behave when over and under bridges\nAllows going under bridges without acrobatics\nDecouples the terrain checks for woods, buildings, bridges and so on so that they can be used in the same hex without error. Having buildings or woods in water should also work better than before. Bridges under water are not allowed tho.\nThe pathfinder will now provide paths that scale hills, terrain and buildings when necessary (and able). Limited this function to VTOL movement tho. It doesn't seem to have much use for infantry in buildings. I tested it for submarines but this will make them surface when the player might not really want them to. I think the depth of a sub should be directly controlled by the player even if thats a little more effort.\n\n\n\nResolves #2280", "createdAt": "2020-10-04T17:19:28Z", "url": "https://github.com/MegaMek/megamek/pull/2298", "merged": true, "mergeCommit": {"oid": "bb759bd54a0cf29feeed55be0ff467aad1724650"}, "closed": true, "closedAt": "2020-10-04T21:09:58Z", "author": {"login": "SJuliez"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPSLyeAH2gAyNDk3NDY4MDU2OjM3MTI5MDU0YTE5MjkxNzE3YWJlMGE1ZmMwODk5Y2ViMmJlYjljYzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPVx88AFqTUwMTY1OTY3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "37129054a19291717abe0a5fc0899ceb2beb9cc2", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/37129054a19291717abe0a5fc0899ceb2beb9cc2", "committedDate": "2020-10-04T16:57:16Z", "message": "VTOL pathfinding and movement corrections"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjQ2NjQx", "url": "https://github.com/MegaMek/megamek/pull/2298#pullrequestreview-501646641", "createdAt": "2020-10-04T18:15:54Z", "commit": {"oid": "37129054a19291717abe0a5fc0899ceb2beb9cc2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODoxNTo1NFrOHcJPlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODoxNzowOVrOHcJQCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3MzYyMQ==", "bodyText": "If this takes into account height() being one less, as below, can you include that note here too?", "url": "https://github.com/MegaMek/megamek/pull/2298#discussion_r499273621", "createdAt": "2020-10-04T18:15:54Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/common/Entity.java", "diffHunk": "@@ -2233,6 +2241,11 @@ public boolean canGoUp(int assumedElevation, Coords assumedPos) {\n                 break;\n             case VTOL:\n                 maxAlt = hex.surface() + 50;\n+                // When under a bridge, restrict upward movement\n+                if (hex.containsTerrain(Terrains.BRIDGE_ELEV)\n+                        && assumedElevation < hex.terrainLevel(Terrains.BRIDGE_ELEV)) {\n+                    maxAlt = hex.terrainLevel(Terrains.BRIDGE_ELEV) - height() - 1;   ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37129054a19291717abe0a5fc0899ceb2beb9cc2"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3MzY3Mw==", "bodyText": "Is <= proper for \"under\" a bridge?", "url": "https://github.com/MegaMek/megamek/pull/2298#discussion_r499273673", "createdAt": "2020-10-04T18:16:18Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/common/Entity.java", "diffHunk": "@@ -2287,23 +2300,34 @@ public boolean isElevationValid(int assumedElevation, IHex hex) {\n         int assumedAlt = assumedElevation + hex.surface();\n         if (getMovementMode() == EntityMovementMode.VTOL) {\n             if ((this instanceof Infantry)\n-                && (hex.containsTerrain(Terrains.BUILDING)\n-                    || hex.containsTerrain(Terrains.WOODS) || hex\n-                    .containsTerrain(Terrains.JUNGLE))) {\n+                    && (hex.containsTerrain(Terrains.BUILDING)\n+                            || hex.containsTerrain(Terrains.WOODS) \n+                            || hex.containsTerrain(Terrains.JUNGLE))) {\n                 // VTOL BA (sylph) can move as ground unit as well\n                 return ((assumedElevation <= 50) && (assumedAlt >= hex.floor()));\n-            } else if (hex.containsTerrain(Terrains.BRIDGE_ELEV)) {\n-                // fly under a bridge as long as there is enough clearance below and above the unit\n-                return (assumedElevation <= 50)\n-                        && assumedElevation > hex.floor()\n-                        && (assumedElevation > hex.terrainLevel(Terrains.BRIDGE_ELEV)\n-                                || assumedElevation + height() < hex.terrainLevel(Terrains.BRIDGE_ELEV) - 1);\n-            } else if (hex.containsTerrain(Terrains.WOODS)\n-                       || hex.containsTerrain(Terrains.WATER)\n-                       || hex.containsTerrain(Terrains.JUNGLE)) {\n-                return ((assumedElevation <= 50) && (assumedAlt > hex.ceiling()));\n-            }\n-            return ((assumedElevation <= 50) && (assumedAlt >= hex.ceiling()));\n+            } else {\n+                // VTOLs can be anywhere on or above ground and fly beneath bridges,\n+                // land on buildings and ignore planted fields and industrial zone \n+                // but cannot land on water or trees\n+                // As always, height() reports one less than the rules (TW p.99) say\n+                // Units may move under a bridge if their top is \n+                // lower than or equal to the bridge height (TW p.62)\n+                boolean allowed = (assumedElevation <= 50) && (assumedElevation >= 0);\n+                if (hex.containsTerrain(Terrains.BRIDGE_ELEV)) {\n+                    allowed &= (assumedElevation >= hex.terrainLevel(Terrains.BRIDGE_ELEV))\n+                            || (assumedElevation + height() + 1 <= hex.terrainLevel(Terrains.BRIDGE_ELEV));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37129054a19291717abe0a5fc0899ceb2beb9cc2"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3MzczNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!(source.getEntity().getMovementMode() == EntityMovementMode.VTOL)) {\n          \n          \n            \n                    if (source.getEntity().getMovementMode() != EntityMovementMode.VTOL) {", "url": "https://github.com/MegaMek/megamek/pull/2298#discussion_r499273737", "createdAt": "2020-10-04T18:17:09Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/common/pathfinder/PathDecorator.java", "diffHunk": "@@ -160,37 +162,58 @@\n     }\n     \n     /**\n-     * Given a path, adds \"UP\" steps to it so that a forward movement can pass over intervening terrain\n+     * For units using VTOL movement, add \"UP\" steps to the end of the MovePath source \n+     * so that a forward movement can pass over intervening terrain\n      */\n     public static void AdjustElevationForForwardMovement(MovePath source) {\n+        // Do this only for VTOLs\n+        if (!(source.getEntity().getMovementMode() == EntityMovementMode.VTOL)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37129054a19291717abe0a5fc0899ceb2beb9cc2"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjQ3NjYz", "url": "https://github.com/MegaMek/megamek/pull/2298#pullrequestreview-501647663", "createdAt": "2020-10-04T18:28:36Z", "commit": {"oid": "37129054a19291717abe0a5fc0899ceb2beb9cc2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODoyODozNlrOHcJUJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODoyODozNlrOHcJUJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NDc4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else if (type == Terrains.BLDG_ELEV && level < 1) {\n          \n          \n            \n                        rv = false;\n          \n          \n            \n                    } else if (type == Terrains.BRIDGE_ELEV && level < 0) {\n          \n          \n            \n                    } else if ((type == Terrains.BLDG_ELEV) && (level < 1)) {\n          \n          \n            \n                        rv = false;\n          \n          \n            \n                    } else if ((type == Terrains.BRIDGE_ELEV) && (level < 0)) {", "url": "https://github.com/MegaMek/megamek/pull/2298#discussion_r499274788", "createdAt": "2020-10-04T18:28:36Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/Terrain.java", "diffHunk": "@@ -637,6 +637,10 @@ public boolean isValid(StringBuffer errBuff) {\n             rv = false;\n         } else if (type == Terrains.FOLIAGE_ELEV && (level < 1 || level > 3)) {\n             rv = false;\n+        } else if (type == Terrains.BLDG_ELEV && level < 1) {\n+            rv = false;\n+        } else if (type == Terrains.BRIDGE_ELEV && level < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37129054a19291717abe0a5fc0899ceb2beb9cc2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dbd21daf01a7687e470eea91c06379aada8eee9", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/4dbd21daf01a7687e470eea91c06379aada8eee9", "committedDate": "2020-10-04T20:12:04Z", "message": "Review Suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjU5Njc5", "url": "https://github.com/MegaMek/megamek/pull/2298#pullrequestreview-501659679", "createdAt": "2020-10-04T21:08:40Z", "commit": {"oid": "4dbd21daf01a7687e470eea91c06379aada8eee9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4815, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}