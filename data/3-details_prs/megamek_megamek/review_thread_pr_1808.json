{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NTMwODY1", "number": 1808, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToxNjoyMlrODuLIXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToyNTo0NlrODuLO-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzQzNDUzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/SharedUtility.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToxNjoyMlrOGAB4Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDozMjo0OFrOGAYH5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MzkyNw==", "bodyText": "Styling: needs separate parens around walkMP < 0 check.", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r402683927", "createdAt": "2020-04-03T01:16:22Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/client/ui/SharedUtility.java", "diffHunk": "@@ -709,8 +710,8 @@ public static MovePath moveAero(MovePath md, Client client) {\n         if (!entity.isAero() && !(entity instanceof EjectedCrew)) {\n             return md;\n         }\n-        // Ejected crew/pilots can't move, so just add the inherited move steps and be done with it\n-        if (entity instanceof EjectedCrew) {\n+        // Ejected crew/pilots and lifeboats can't move, so just add the inherited move steps and be done with it\n+        if (entity instanceof EjectedCrew || (entity instanceof EscapePods && entity.getOriginalWalkMP() <= 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0ODQyMA==", "bodyText": "Fixed", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r403048420", "createdAt": "2020-04-03T14:32:48Z", "author": {"login": "mkerensky"}, "path": "megamek/src/megamek/client/ui/SharedUtility.java", "diffHunk": "@@ -709,8 +710,8 @@ public static MovePath moveAero(MovePath md, Client client) {\n         if (!entity.isAero() && !(entity instanceof EjectedCrew)) {\n             return md;\n         }\n-        // Ejected crew/pilots can't move, so just add the inherited move steps and be done with it\n-        if (entity instanceof EjectedCrew) {\n+        // Ejected crew/pilots and lifeboats can't move, so just add the inherited move steps and be done with it\n+        if (entity instanceof EjectedCrew || (entity instanceof EscapePods && entity.getOriginalWalkMP() <= 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4MzkyNw=="}, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzQzNjUxOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/MovementDisplay.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToxNzoyOFrOGAB5Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDozNjo0OVrOGAYSmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDIzMA==", "bodyText": "Gotta ask, why are we adding the two strings together here?", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r402684230", "createdAt": "2020-04-03T01:17:28Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/client/ui/swing/MovementDisplay.java", "diffHunk": "@@ -3396,6 +3399,61 @@ private Coords getUnloadPosition(Entity unloaded) {\n         }\n         return choice;\n     }\n+    \n+    /**\n+     * Uses player input to find a legal hex where an EjectedCrew unit can be placed\n+     * @param abandoned - The vessel we're escaping from\n+     * @param crew - The EjectedCrew unit we're placing\n+     * @return\n+     */\n+    private Coords getEjectPosition(Entity abandoned) {\n+        // we need to allow the user to select a hex for offloading the unit's crew\n+        Coords pos = abandoned.getPosition();\n+        //Create a bogus crew entity to use for legal hex calculation\n+        Entity crew = new EjectedCrew();\n+        crew.setId(clientgui.getClient().getGame().getNextEntityId());\n+        crew.setGame(clientgui.getClient().getGame());\n+        int elev = clientgui.getClient().getGame().getBoard().getHex(pos).getLevel() + abandoned.getElevation();\n+        ArrayList<Coords> ring = Compute.coordsAtRange(pos, 1);\n+        if (abandoned instanceof Dropship) {\n+            ring = Compute.coordsAtRange(pos, 2);\n+        }\n+        // ok now we need to go through the ring and identify available\n+        // Positions\n+        ring = Compute.getAcceptableUnloadPositions(ring, crew, clientgui\n+                .getClient().getGame(), elev);\n+        if (ring.size() < 1) {\n+            String title = Messages\n+                    .getString(\"MovementDisplay.NoPlaceToEject.title\"); //$NON-NLS-1$\n+            String body = Messages\n+                    .getString(\"MovementDisplay.NoPlaceToEject.message\"); //$NON-NLS-1$\n+            clientgui.doAlertDialog(title, body);\n+            return null;\n+        }\n+        String[] choices = new String[ring.size()];\n+        int i = 0;\n+        for (Coords c : ring) {\n+            choices[i++] = c.toString();\n+        }\n+        String selected = (String) JOptionPane.showInputDialog(clientgui,\n+                                                               Messages.getString(\n+                                                                       \"MovementDisplay.ChooseEjectHex\" + \".message\", new Object[]{//$NON-NLS-1$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1MTE2Mg==", "bodyText": "Because that's how the UnloadUnit Dialog I borrowed this from did it.  It works as one string, so fixed.", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r403051162", "createdAt": "2020-04-03T14:36:49Z", "author": {"login": "mkerensky"}, "path": "megamek/src/megamek/client/ui/swing/MovementDisplay.java", "diffHunk": "@@ -3396,6 +3399,61 @@ private Coords getUnloadPosition(Entity unloaded) {\n         }\n         return choice;\n     }\n+    \n+    /**\n+     * Uses player input to find a legal hex where an EjectedCrew unit can be placed\n+     * @param abandoned - The vessel we're escaping from\n+     * @param crew - The EjectedCrew unit we're placing\n+     * @return\n+     */\n+    private Coords getEjectPosition(Entity abandoned) {\n+        // we need to allow the user to select a hex for offloading the unit's crew\n+        Coords pos = abandoned.getPosition();\n+        //Create a bogus crew entity to use for legal hex calculation\n+        Entity crew = new EjectedCrew();\n+        crew.setId(clientgui.getClient().getGame().getNextEntityId());\n+        crew.setGame(clientgui.getClient().getGame());\n+        int elev = clientgui.getClient().getGame().getBoard().getHex(pos).getLevel() + abandoned.getElevation();\n+        ArrayList<Coords> ring = Compute.coordsAtRange(pos, 1);\n+        if (abandoned instanceof Dropship) {\n+            ring = Compute.coordsAtRange(pos, 2);\n+        }\n+        // ok now we need to go through the ring and identify available\n+        // Positions\n+        ring = Compute.getAcceptableUnloadPositions(ring, crew, clientgui\n+                .getClient().getGame(), elev);\n+        if (ring.size() < 1) {\n+            String title = Messages\n+                    .getString(\"MovementDisplay.NoPlaceToEject.title\"); //$NON-NLS-1$\n+            String body = Messages\n+                    .getString(\"MovementDisplay.NoPlaceToEject.message\"); //$NON-NLS-1$\n+            clientgui.doAlertDialog(title, body);\n+            return null;\n+        }\n+        String[] choices = new String[ring.size()];\n+        int i = 0;\n+        for (Coords c : ring) {\n+            choices[i++] = c.toString();\n+        }\n+        String selected = (String) JOptionPane.showInputDialog(clientgui,\n+                                                               Messages.getString(\n+                                                                       \"MovementDisplay.ChooseEjectHex\" + \".message\", new Object[]{//$NON-NLS-1$", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDIzMA=="}, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzQ0MDExOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/MovementDisplay.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToxOToyNlrOGAB7Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo1MjowNVrOGAY8dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDc1OA==", "bodyText": "This looks very similar to 3703-3732, think we can consolidate them into a function?", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r402684758", "createdAt": "2020-04-03T01:19:26Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/client/ui/swing/MovementDisplay.java", "diffHunk": "@@ -3731,6 +3821,38 @@ private synchronized void updateJoinButton() {\n                         for (int element : unitsLaunched) {\n                             collarChoices.add(currentDropships.elementAt(\n                                     element).getId());\n+                            //Prompt the player to load passengers aboard the launching ship(s)\n+                            Entity en = clientgui.getClient().getGame().getEntity(currentDropships.elementAt(element).getId());\n+                            if (en instanceof SmallCraft) {\n+                                SmallCraft craft = (SmallCraft) en;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2MTg3OA==", "bodyText": "I was able to break that piece out into a (worker?) function", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r403061878", "createdAt": "2020-04-03T14:52:05Z", "author": {"login": "mkerensky"}, "path": "megamek/src/megamek/client/ui/swing/MovementDisplay.java", "diffHunk": "@@ -3731,6 +3821,38 @@ private synchronized void updateJoinButton() {\n                         for (int element : unitsLaunched) {\n                             collarChoices.add(currentDropships.elementAt(\n                                     element).getId());\n+                            //Prompt the player to load passengers aboard the launching ship(s)\n+                            Entity en = clientgui.getClient().getGame().getEntity(currentDropships.elementAt(element).getId());\n+                            if (en instanceof SmallCraft) {\n+                                SmallCraft craft = (SmallCraft) en;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDc1OA=="}, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzQ0NDM5OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/BattleArmorHandles.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToyMTo1MVrOGAB9wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo1NDowN1rOGAZCnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NTM3Ng==", "bodyText": "Seems unnecessary.", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r402685376", "createdAt": "2020-04-03T01:21:51Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/BattleArmorHandles.java", "diffHunk": "@@ -14,6 +14,7 @@\n \n package megamek.common;\n \n+import java.util.ArrayList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2MzQ1NQ==", "bodyText": "Thanks. Remnant of a piece of code I had added to the Transporter interface that I wound up not needing.", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r403063455", "createdAt": "2020-04-03T14:54:07Z", "author": {"login": "mkerensky"}, "path": "megamek/src/megamek/common/BattleArmorHandles.java", "diffHunk": "@@ -14,6 +14,7 @@\n \n package megamek.common;\n \n+import java.util.ArrayList;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NTM3Ng=="}, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzQ0NTkyOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/Bay.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToyMjo0MlrOGAB-lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToyMjo0MlrOGAB-lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NTU5MA==", "bodyText": "Yeah, I don't really like Vectors, either, they're pretty annoying now that we have better tools.", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r402685590", "createdAt": "2020-04-03T01:22:42Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/Bay.java", "diffHunk": "@@ -259,6 +259,21 @@ public void load(Entity unit) throws IllegalArgumentException {\n         }\n         return loaded;\n     }\n+    \n+    /**\n+     * Generate a raw list of the Ids stored in troops. \n+     * Used by MHQ in cases where we can't get the entities via Game\n+     *\n+     * @return\n+     */\n+    public List<Integer> getLoadedUnitIds() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzQ0Nzg0OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/EjectedCrew.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToyMzo0NVrOGAB_xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTowMDoxOFrOGAZUFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NTg5NA==", "bodyText": "Kinda pointless to have a stringbuffer here, since it's not in a loop or anything.", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r402685894", "createdAt": "2020-04-03T01:23:45Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/EjectedCrew.java", "diffHunk": "@@ -68,6 +77,29 @@ public EjectedCrew(Entity originalRide) {\n         }\n     }\n     \n+    /**\n+     * Used to set up an ejected crew for large spacecraft per rules in SO p27\n+     * Multiple entities will be set up, each with a different strength\n+     * @param originalRide - the launching spacecraft\n+     * @param escapedThisRound - The number of people that got out this round\n+     */\n+    public EjectedCrew(Aero originalRide, int escapedThisRound) {\n+        super();\n+        setCrew(new Crew(CrewType.CREW));\n+        setChassis(SPACE_EJECT_NAME);\n+        setModel(originalRide.getDisplayName());\n+\n+        // Generate the display name, then add the original ride's name.\n+        StringBuffer newName = new StringBuffer(getDisplayName());\n+        newName.append(\" of \").append(originalRide.getDisplayName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NzkyNg==", "bodyText": "Fixed", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r403067926", "createdAt": "2020-04-03T15:00:18Z", "author": {"login": "mkerensky"}, "path": "megamek/src/megamek/common/EjectedCrew.java", "diffHunk": "@@ -68,6 +77,29 @@ public EjectedCrew(Entity originalRide) {\n         }\n     }\n     \n+    /**\n+     * Used to set up an ejected crew for large spacecraft per rules in SO p27\n+     * Multiple entities will be set up, each with a different strength\n+     * @param originalRide - the launching spacecraft\n+     * @param escapedThisRound - The number of people that got out this round\n+     */\n+    public EjectedCrew(Aero originalRide, int escapedThisRound) {\n+        super();\n+        setCrew(new Crew(CrewType.CREW));\n+        setChassis(SPACE_EJECT_NAME);\n+        setModel(originalRide.getDisplayName());\n+\n+        // Generate the display name, then add the original ride's name.\n+        StringBuffer newName = new StringBuffer(getDisplayName());\n+        newName.append(\" of \").append(originalRide.getDisplayName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NTg5NA=="}, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzQ1MTA1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/EscapePods.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToyNToyN1rOGACBdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTowMDoyNFrOGAZUWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NjMyNA==", "bodyText": "Unnecessary stringbuffer.", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r402686324", "createdAt": "2020-04-03T01:25:27Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/EscapePods.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+* MegaMek -\n+* Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005 Ben Mazur (bmazur@sev.org)\n+* Copyright (C) 2013 Edward Cullen (eddy@obsessedcomputers.co.uk)\n+* Copyright (C) 2020 The MegaMek Team\n+*\n+* This program is free software; you can redistribute it and/or modify it under\n+* the terms of the GNU General Public License as published by the Free Software\n+* Foundation; either version 2 of the License, or (at your option) any later\n+* version.\n+*\n+* This program is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+* FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\n+* details.\n+*/\n+\n+package megamek.common;\n+\n+/** This class describes a group of escape pods and/or lifeboats that has launched from a larger craft\n+ *\n+ * @author MKerensky\n+ */\n+public class EscapePods extends SmallCraft {\n+    private static final long serialVersionUID = 8128620143810186608L;\n+    \n+    protected int originalRideId;\n+    protected String originalRideExternalId;\n+    \n+    public static final String POD_EJECT_NAME = \"Pods/Lifeboats from \";\n+    \n+    /**\n+     * Used to set up a group of launched pods/boats for large spacecraft per rules in SO p27\n+     * @param originalRide - the launching spacecraft\n+     * @param nPods - the number of escape craft in this flight\n+     * @param isEscapePod - flag to indicate if this is a flight of escape pods\n+     */\n+    public EscapePods(Aero originalRide, int nPods, boolean isEscapePod) {\n+        super();\n+        //We care about the passengers, not the crew of the escape craft\n+        setCrew(new Crew(CrewType.CREW));\n+        setChassis(POD_EJECT_NAME);\n+        setModel(originalRide.getDisplayName());\n+\n+        // Generate the display name, then add the original ride's name.\n+        StringBuffer newName = new StringBuffer(POD_EJECT_NAME);\n+        newName.append(originalRide.getDisplayName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2Nzk5NQ==", "bodyText": "Fixed", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r403067995", "createdAt": "2020-04-03T15:00:24Z", "author": {"login": "mkerensky"}, "path": "megamek/src/megamek/common/EscapePods.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+* MegaMek -\n+* Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005 Ben Mazur (bmazur@sev.org)\n+* Copyright (C) 2013 Edward Cullen (eddy@obsessedcomputers.co.uk)\n+* Copyright (C) 2020 The MegaMek Team\n+*\n+* This program is free software; you can redistribute it and/or modify it under\n+* the terms of the GNU General Public License as published by the Free Software\n+* Foundation; either version 2 of the License, or (at your option) any later\n+* version.\n+*\n+* This program is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+* FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\n+* details.\n+*/\n+\n+package megamek.common;\n+\n+/** This class describes a group of escape pods and/or lifeboats that has launched from a larger craft\n+ *\n+ * @author MKerensky\n+ */\n+public class EscapePods extends SmallCraft {\n+    private static final long serialVersionUID = 8128620143810186608L;\n+    \n+    protected int originalRideId;\n+    protected String originalRideExternalId;\n+    \n+    public static final String POD_EJECT_NAME = \"Pods/Lifeboats from \";\n+    \n+    /**\n+     * Used to set up a group of launched pods/boats for large spacecraft per rules in SO p27\n+     * @param originalRide - the launching spacecraft\n+     * @param nPods - the number of escape craft in this flight\n+     * @param isEscapePod - flag to indicate if this is a flight of escape pods\n+     */\n+    public EscapePods(Aero originalRide, int nPods, boolean isEscapePod) {\n+        super();\n+        //We care about the passengers, not the crew of the escape craft\n+        setCrew(new Crew(CrewType.CREW));\n+        setChassis(POD_EJECT_NAME);\n+        setModel(originalRide.getDisplayName());\n+\n+        // Generate the display name, then add the original ride's name.\n+        StringBuffer newName = new StringBuffer(POD_EJECT_NAME);\n+        newName.append(originalRide.getDisplayName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NjMyNA=="}, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzQ1MTQ3OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/EscapePods.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToyNTo0NlrOGACBuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTowMjoxN1rOGAZZSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NjM5Mg==", "bodyText": "Let's define these guys as constants.", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r402686392", "createdAt": "2020-04-03T01:25:46Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/EscapePods.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+* MegaMek -\n+* Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005 Ben Mazur (bmazur@sev.org)\n+* Copyright (C) 2013 Edward Cullen (eddy@obsessedcomputers.co.uk)\n+* Copyright (C) 2020 The MegaMek Team\n+*\n+* This program is free software; you can redistribute it and/or modify it under\n+* the terms of the GNU General Public License as published by the Free Software\n+* Foundation; either version 2 of the License, or (at your option) any later\n+* version.\n+*\n+* This program is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+* FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\n+* details.\n+*/\n+\n+package megamek.common;\n+\n+/** This class describes a group of escape pods and/or lifeboats that has launched from a larger craft\n+ *\n+ * @author MKerensky\n+ */\n+public class EscapePods extends SmallCraft {\n+    private static final long serialVersionUID = 8128620143810186608L;\n+    \n+    protected int originalRideId;\n+    protected String originalRideExternalId;\n+    \n+    public static final String POD_EJECT_NAME = \"Pods/Lifeboats from \";\n+    \n+    /**\n+     * Used to set up a group of launched pods/boats for large spacecraft per rules in SO p27\n+     * @param originalRide - the launching spacecraft\n+     * @param nPods - the number of escape craft in this flight\n+     * @param isEscapePod - flag to indicate if this is a flight of escape pods\n+     */\n+    public EscapePods(Aero originalRide, int nPods, boolean isEscapePod) {\n+        super();\n+        //We care about the passengers, not the crew of the escape craft\n+        setCrew(new Crew(CrewType.CREW));\n+        setChassis(POD_EJECT_NAME);\n+        setModel(originalRide.getDisplayName());\n+\n+        // Generate the display name, then add the original ride's name.\n+        StringBuffer newName = new StringBuffer(POD_EJECT_NAME);\n+        newName.append(originalRide.getDisplayName());\n+        displayName = newName.toString();\n+        \n+        //Pods and boats have an SI of 1 each\n+        initializeSI(nPods);\n+        \n+        //Escape pods have fuel and thrusters to maneuver with\n+        if (isEscapePod) {\n+            setFuel(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2OTI1Ng==", "bodyText": "Fixed", "url": "https://github.com/MegaMek/megamek/pull/1808#discussion_r403069256", "createdAt": "2020-04-03T15:02:17Z", "author": {"login": "mkerensky"}, "path": "megamek/src/megamek/common/EscapePods.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+* MegaMek -\n+* Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005 Ben Mazur (bmazur@sev.org)\n+* Copyright (C) 2013 Edward Cullen (eddy@obsessedcomputers.co.uk)\n+* Copyright (C) 2020 The MegaMek Team\n+*\n+* This program is free software; you can redistribute it and/or modify it under\n+* the terms of the GNU General Public License as published by the Free Software\n+* Foundation; either version 2 of the License, or (at your option) any later\n+* version.\n+*\n+* This program is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+* FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\n+* details.\n+*/\n+\n+package megamek.common;\n+\n+/** This class describes a group of escape pods and/or lifeboats that has launched from a larger craft\n+ *\n+ * @author MKerensky\n+ */\n+public class EscapePods extends SmallCraft {\n+    private static final long serialVersionUID = 8128620143810186608L;\n+    \n+    protected int originalRideId;\n+    protected String originalRideExternalId;\n+    \n+    public static final String POD_EJECT_NAME = \"Pods/Lifeboats from \";\n+    \n+    /**\n+     * Used to set up a group of launched pods/boats for large spacecraft per rules in SO p27\n+     * @param originalRide - the launching spacecraft\n+     * @param nPods - the number of escape craft in this flight\n+     * @param isEscapePod - flag to indicate if this is a flight of escape pods\n+     */\n+    public EscapePods(Aero originalRide, int nPods, boolean isEscapePod) {\n+        super();\n+        //We care about the passengers, not the crew of the escape craft\n+        setCrew(new Crew(CrewType.CREW));\n+        setChassis(POD_EJECT_NAME);\n+        setModel(originalRide.getDisplayName());\n+\n+        // Generate the display name, then add the original ride's name.\n+        StringBuffer newName = new StringBuffer(POD_EJECT_NAME);\n+        newName.append(originalRide.getDisplayName());\n+        displayName = newName.toString();\n+        \n+        //Pods and boats have an SI of 1 each\n+        initializeSI(nPods);\n+        \n+        //Escape pods have fuel and thrusters to maneuver with\n+        if (isEscapePod) {\n+            setFuel(10);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NjM5Mg=="}, "originalCommit": {"oid": "b1fbfcf1c5639f446aaed2e32529f69e27eee5c4"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2884, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}