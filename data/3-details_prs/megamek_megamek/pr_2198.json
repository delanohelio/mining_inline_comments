{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNDc2OTM5", "number": 2198, "title": "Camo and Portrait Chooser", "bodyText": "Gives the image choosers an overhaul and their own package.\nThey...\n\nShow more than one column\nShow images of subdirectories (see screenshot)\nThe camo chooser has a search bar that will search for any directory and/or filename match when at least 3 characters are entered\nRemember size, position and tree/image split\nUpon showing, will refresh the camo/portrait directory to update changed files\n\nAlso\n\nmoves all camo/portrait creation to statics CamoManager and PortraitManager which handle image size and make sure they always return some Image, not null\ncorrects portrait display to preserve the aspect ratio in the lobby, dialogs, UnitDisplay and tooltip\n\nThe AbstractImageChooser base class is not limited to showing images; it can be used for any tree selection. Maybe theres another application somewhere (RATs?)\nCamos (all Kurita with subdirs)\n\nPortraits\n\nSearching \"cava\" - tooltip visible", "createdAt": "2020-09-05T07:58:42Z", "url": "https://github.com/MegaMek/megamek/pull/2198", "merged": true, "mergeCommit": {"oid": "0e8ffa466d094d0162c50e4bb311fea13204c480"}, "closed": true, "closedAt": "2020-09-16T17:52:01Z", "author": {"login": "SJuliez"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFz4_kAH2gAyNDgwNDc2OTM5OjRlZGFlYjYxYzY0OGMzMDgzZTc1NjAzY2Q2MzI3ZTcwYWNjZjkxYTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJeANWAFqTQ4OTczNzcwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4edaeb61c648c3083e75603cd6327e70accf91a6", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/4edaeb61c648c3083e75603cd6327e70accf91a6", "committedDate": "2020-09-05T06:34:16Z", "message": "Camo and Portrait Chooser overhaul"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "525e67144c214ae594301970f9cbef9c4b31f617", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/525e67144c214ae594301970f9cbef9c4b31f617", "committedDate": "2020-09-05T06:54:14Z", "message": "Merge remote-tracking branch 'MM_Master/master' into ImageChoiceDlg\n\nConflicts:\n\tmegamek/src/megamek/client/ui/swing/boardview/EntitySprite.java\n\tmegamek/src/megamek/client/ui/swing/tileset/TilesetManager.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c27f17321414b47b03ada9164708372aa03b0c4b", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/c27f17321414b47b03ada9164708372aa03b0c4b", "committedDate": "2020-09-05T07:21:48Z", "message": "Correct loading savegame camo error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db7d84e0c2ba3eec25272c124f4d214c78ba2abd", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/db7d84e0c2ba3eec25272c124f4d214c78ba2abd", "committedDate": "2020-09-05T07:57:34Z", "message": "Color correction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ecaaedef02a239ae1a26d25265667a195d6ab1e", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/0ecaaedef02a239ae1a26d25265667a195d6ab1e", "committedDate": "2020-09-05T10:57:16Z", "message": "Addall problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/adc4e671407f02462dcb614f815bc195eac99cae", "committedDate": "2020-09-05T11:15:38Z", "message": "HashCode for DirectoryItem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4OTA4MDk3", "url": "https://github.com/MegaMek/megamek/pull/2198#pullrequestreview-488908097", "createdAt": "2020-09-15T17:28:33Z", "commit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoyODozM1rOHSMafA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzo1Mzo1OVrOHSNhiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgzOTgwNA==", "bodyText": "Missing access modifier", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488839804", "createdAt": "2020-09-15T17:28:33Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/ChatLounge.java", "diffHunk": "@@ -178,7 +177,7 @@ public void doneLoading() {\n         }\n     };\n \n-    CamoChoiceDialog camoDialog;\n+    CamoChooser camoDialog;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MDA4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (result == JOptionPane.CANCEL_OPTION || camoDialog.getSelectedItem() == null) {\n          \n          \n            \n                            if ((result == JOptionPane.CANCEL_OPTION) || (camoDialog.getSelectedItem() == null)) {", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488840083", "createdAt": "2020-09-15T17:29:06Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/ChatLounge.java", "diffHunk": "@@ -465,17 +457,31 @@ public String getToolTipText(MouseEvent e) {\n \n         butCamo = new JButton();\n         butCamo.setPreferredSize(new Dimension(84, 72));\n-        butCamo.setActionCommand(\"camo\"); //$NON-NLS-1$\n+        butCamo.setActionCommand(\"camo\");\n         butCamo.addActionListener(new ActionListener() {\n             @Override\n             public void actionPerformed(ActionEvent e) {\n-                camoDialog.setPlayer(getPlayerSelected().getLocalPlayer());\n-                camoDialog.setEntity(null);\n-                camoDialog.setVisible(true);\n+                // Show the CamoChooser for the selected player\n+                IPlayer player = getPlayerSelected().getLocalPlayer();\n+                int result = camoDialog.showDialog(player);\n+                \n+                // If the dialog was canceled or nothing selected, do nothing\n+                if (result == JOptionPane.CANCEL_OPTION || camoDialog.getSelectedItem() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MDY0OQ==", "bodyText": "Remove commented code", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488840649", "createdAt": "2020-09-15T17:30:00Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/ChatLounge.java", "diffHunk": "@@ -1935,8 +1941,9 @@ private void refreshPlayerInfo() {\n     }\n \n     private void refreshCamos() {\n-        Client c = getPlayerSelected();\n-        camoDialog.setPlayer(c.getLocalPlayer());\n+//        Client c = getPlayerSelected();\n+//        camoDialog.setPlayer(c.getLocalPlayer());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MTAzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (result == JOptionPane.CANCEL_OPTION || mcd.getSelectedItem() == null) {\n          \n          \n            \n                    if ((result == JOptionPane.CANCEL_OPTION) || (mcd.getSelectedItem() == null)) {", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488841032", "createdAt": "2020-09-15T17:30:23Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/ChatLounge.java", "diffHunk": "@@ -2339,40 +2346,70 @@ public void customizeMech(Entity entity) {\n         }\n     }\n \n+    /** \n+     * Displays a CamoChooser to choose an individual camo for \n+     * the given vector of entities. The camo will only be applied\n+     * to units configurable by the local player, i.e. his own units\n+     * or those of his bots.\n+     */\n     public void mechCamo(Vector<Entity> entities) {\n-        if (entities.size() < 0) {\n+        if (entities.size() < 1) {\n             return;\n         }\n-        Entity entity = entities.get(0);\n-        boolean editable;\n-        editable = clientgui.getBots().get(entity.getOwner().getName()) != null;\n-        Client c;\n-        if (editable) {\n-            c = clientgui.getBots().get(entity.getOwner().getName());\n-        } else {\n-            editable |= entity.getOwnerId() == clientgui.getClient().getLocalPlayer().getId();\n-            c = clientgui.getClient();\n+\n+        // Display the CamoChooser and await the result\n+        // The dialog is preset to the first selected unit's settings\n+        CamoChooser mcd = new CamoChooser(clientgui.getFrame());\n+        int result = mcd.showDialog(entities.get(0));\n+\n+        // If the dialog was canceled or nothing was selected, do nothing\n+        if (result == JOptionPane.CANCEL_OPTION || mcd.getSelectedItem() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MjIyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            || entity.getOwnerId() == clientgui.getClient().getLocalPlayer().getId();\n          \n          \n            \n                            || (entity.getOwnerId() == clientgui.getClient().getLocalPlayer().getId());", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488842228", "createdAt": "2020-09-15T17:31:33Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/ChatLounge.java", "diffHunk": "@@ -2339,40 +2346,70 @@ public void customizeMech(Entity entity) {\n         }\n     }\n \n+    /** \n+     * Displays a CamoChooser to choose an individual camo for \n+     * the given vector of entities. The camo will only be applied\n+     * to units configurable by the local player, i.e. his own units\n+     * or those of his bots.\n+     */\n     public void mechCamo(Vector<Entity> entities) {\n-        if (entities.size() < 0) {\n+        if (entities.size() < 1) {\n             return;\n         }\n-        Entity entity = entities.get(0);\n-        boolean editable;\n-        editable = clientgui.getBots().get(entity.getOwner().getName()) != null;\n-        Client c;\n-        if (editable) {\n-            c = clientgui.getBots().get(entity.getOwner().getName());\n-        } else {\n-            editable |= entity.getOwnerId() == clientgui.getClient().getLocalPlayer().getId();\n-            c = clientgui.getClient();\n+\n+        // Display the CamoChooser and await the result\n+        // The dialog is preset to the first selected unit's settings\n+        CamoChooser mcd = new CamoChooser(clientgui.getFrame());\n+        int result = mcd.showDialog(entities.get(0));\n+\n+        // If the dialog was canceled or nothing was selected, do nothing\n+        if (result == JOptionPane.CANCEL_OPTION || mcd.getSelectedItem() == null) {\n+            return;\n         }\n \n-        // display dialog\n-        CamoChoiceDialog mcd = new CamoChoiceDialog(clientgui.getFrame(), null);\n-        mcd.setPlayer(c.getLocalPlayer());\n-        mcd.setEntity(entity);\n-        mcd.setVisible(true);\n-        if (editable && mcd.isSelect()) {\n-            // send changes\n-            for (Entity ent : entities) {\n-                if (mcd.category.equals(IPlayer.NO_CAMO)) {\n+        // Choosing the player camo resets the units to have no \n+        // individual camo.\n+        DirectoryItem selectedItem = mcd.getSelectedItem();\n+        IPlayer owner = entities.get(0).getOwner();\n+        DirectoryItem ownerCamo = new DirectoryItem(owner.getCamoCategory(), owner.getCamoFileName());\n+        boolean noIndividualCamo = selectedItem.equals(ownerCamo);\n+        \n+        // Update all allowed entities with the camo\n+        for (Entity ent : entities) {\n+            if (isEditable(ent)) {\n+                if (noIndividualCamo) {\n                     ent.setCamoCategory(null);\n                     ent.setCamoFileName(null);\n                 } else {\n-                    ent.setCamoCategory(mcd.category);\n-                    ent.setCamoFileName(mcd.filename);\n+                    ent.setCamoCategory(selectedItem.getCategory());\n+                    ent.setCamoFileName(selectedItem.getItem());\n                 }\n-                c.sendUpdateEntity(ent);\n+                getLocalClient(ent).sendUpdateEntity(ent);\n             }\n         }\n     }\n+    \n+    /** \n+     * Returns true when the given entity may be configured\n+     * by the local player, i.e. if it is his own unit or one\n+     * of his bot's units.\n+     */\n+    private boolean isEditable(Entity entity) {\n+        return clientgui.getBots().containsKey(entity.getOwner().getName())\n+                || entity.getOwnerId() == clientgui.getClient().getLocalPlayer().getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MjQ1MQ==", "bodyText": "Just a suggestion that I find makes it easier to read", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488842451", "createdAt": "2020-09-15T17:31:46Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/ChatLounge.java", "diffHunk": "@@ -2339,40 +2346,70 @@ public void customizeMech(Entity entity) {\n         }\n     }\n \n+    /** \n+     * Displays a CamoChooser to choose an individual camo for \n+     * the given vector of entities. The camo will only be applied\n+     * to units configurable by the local player, i.e. his own units\n+     * or those of his bots.\n+     */\n     public void mechCamo(Vector<Entity> entities) {\n-        if (entities.size() < 0) {\n+        if (entities.size() < 1) {\n             return;\n         }\n-        Entity entity = entities.get(0);\n-        boolean editable;\n-        editable = clientgui.getBots().get(entity.getOwner().getName()) != null;\n-        Client c;\n-        if (editable) {\n-            c = clientgui.getBots().get(entity.getOwner().getName());\n-        } else {\n-            editable |= entity.getOwnerId() == clientgui.getClient().getLocalPlayer().getId();\n-            c = clientgui.getClient();\n+\n+        // Display the CamoChooser and await the result\n+        // The dialog is preset to the first selected unit's settings\n+        CamoChooser mcd = new CamoChooser(clientgui.getFrame());\n+        int result = mcd.showDialog(entities.get(0));\n+\n+        // If the dialog was canceled or nothing was selected, do nothing\n+        if (result == JOptionPane.CANCEL_OPTION || mcd.getSelectedItem() == null) {\n+            return;\n         }\n \n-        // display dialog\n-        CamoChoiceDialog mcd = new CamoChoiceDialog(clientgui.getFrame(), null);\n-        mcd.setPlayer(c.getLocalPlayer());\n-        mcd.setEntity(entity);\n-        mcd.setVisible(true);\n-        if (editable && mcd.isSelect()) {\n-            // send changes\n-            for (Entity ent : entities) {\n-                if (mcd.category.equals(IPlayer.NO_CAMO)) {\n+        // Choosing the player camo resets the units to have no \n+        // individual camo.\n+        DirectoryItem selectedItem = mcd.getSelectedItem();\n+        IPlayer owner = entities.get(0).getOwner();\n+        DirectoryItem ownerCamo = new DirectoryItem(owner.getCamoCategory(), owner.getCamoFileName());\n+        boolean noIndividualCamo = selectedItem.equals(ownerCamo);\n+        \n+        // Update all allowed entities with the camo\n+        for (Entity ent : entities) {\n+            if (isEditable(ent)) {\n+                if (noIndividualCamo) {\n                     ent.setCamoCategory(null);\n                     ent.setCamoFileName(null);\n                 } else {\n-                    ent.setCamoCategory(mcd.category);\n-                    ent.setCamoFileName(mcd.filename);\n+                    ent.setCamoCategory(selectedItem.getCategory());\n+                    ent.setCamoFileName(selectedItem.getItem());\n                 }\n-                c.sendUpdateEntity(ent);\n+                getLocalClient(ent).sendUpdateEntity(ent);\n             }\n         }\n     }\n+    \n+    /** \n+     * Returns true when the given entity may be configured\n+     * by the local player, i.e. if it is his own unit or one\n+     * of his bot's units.\n+     */\n+    private boolean isEditable(Entity entity) {\n+        return clientgui.getBots().containsKey(entity.getOwner().getName())\n+                || entity.getOwnerId() == clientgui.getClient().getLocalPlayer().getId();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MjIyOA=="}, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MjkxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (entity.getCamoCategory() != null && !entity.getCamoCategory().equals(IPlayer.NO_CAMO)) {\n          \n          \n            \n                    if ((entity.getCamoCategory() != null) && !entity.getCamoCategory().equals(IPlayer.NO_CAMO)) {", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488842914", "createdAt": "2020-09-15T17:32:15Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/ClientGUI.java", "diffHunk": "@@ -1850,12 +1851,11 @@ public void loadPreviewImage(JLabel bp, Entity entity) {\n     }\n \n     public void loadPreviewImage(JLabel bp, Entity entity, IPlayer player) {\n-        Image camo;\n-        if (entity.getCamoFileName() != null) {\n-            camo = bv.getTilesetManager().getEntityCamo(entity);\n-        } else {\n-            camo = bv.getTilesetManager().getPlayerCamo(player);\n+        Image camo = CamoManager.getPlayerCamoImage(player);\n+        if (entity.getCamoCategory() != null && !entity.getCamoCategory().equals(IPlayer.NO_CAMO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MzE2OQ==", "bodyText": "?", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488843169", "createdAt": "2020-09-15T17:32:29Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/ClientGUI.java", "diffHunk": "@@ -1850,12 +1851,11 @@ public void loadPreviewImage(JLabel bp, Entity entity) {\n     }\n \n     public void loadPreviewImage(JLabel bp, Entity entity, IPlayer player) {\n-        Image camo;\n-        if (entity.getCamoFileName() != null) {\n-            camo = bv.getTilesetManager().getEntityCamo(entity);\n-        } else {\n-            camo = bv.getTilesetManager().getPlayerCamo(player);\n+        Image camo = CamoManager.getPlayerCamoImage(player);\n+        if (entity.getCamoCategory() != null && !entity.getCamoCategory().equals(IPlayer.NO_CAMO)) {\n+            camo = CamoManager.getEntityCamoImage(entity);\n         }\n+        // This seems unnecessary as the CamoManager will return an image for a playercolor:\n         int tint = PlayerColors.getColorRGB(player.getColorIndex());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MzgzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        DirectoryItem dOther = (DirectoryItem)other;\n          \n          \n            \n                        DirectoryItem dOther = (DirectoryItem) other;", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488843834", "createdAt": "2020-09-15T17:33:04Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/util/fileUtils/DirectoryItem.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package megamek.common.util.fileUtils;\r\n+\r\n+/** \r\n+ * A helper class to hold files in directories taken from \r\n+ * a DirectoryItems object.\r\n+ * where both the filename and the directory are stored.\r\n+ * @author Juliez\r\n+ */\r\n+public class DirectoryItem {\r\n+    \r\n+    /** The category aka file directory of the item */\r\n+    private final String category;\r\n+    /** The filename of the item */\r\n+    private final String item;\r\n+    \r\n+    public DirectoryItem(String cat, String name) {\r\n+        category = cat;\r\n+        item = name;\r\n+    }\r\n+    \r\n+    /** Returns the filename of the item. */\r\n+    public String getItem() {\r\n+        return item;\r\n+    }\r\n+    \r\n+    /** Returns the category aka directory of the item. */\r\n+    public String getCategory() {\r\n+        return category;\r\n+    }\r\n+\r\n+    @Override public boolean equals(Object other) {\r\n+        if (this == other) {\r\n+            return true;\r\n+        }\r\n+        if (other instanceof DirectoryItem) {\r\n+            DirectoryItem dOther = (DirectoryItem)other;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0NDE5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    if (other instanceof DirectoryItem) {\n          \n          \n            \n                    } else if (other instanceof DirectoryItem) {", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488844191", "createdAt": "2020-09-15T17:33:26Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/util/fileUtils/DirectoryItem.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package megamek.common.util.fileUtils;\r\n+\r\n+/** \r\n+ * A helper class to hold files in directories taken from \r\n+ * a DirectoryItems object.\r\n+ * where both the filename and the directory are stored.\r\n+ * @author Juliez\r\n+ */\r\n+public class DirectoryItem {\r\n+    \r\n+    /** The category aka file directory of the item */\r\n+    private final String category;\r\n+    /** The filename of the item */\r\n+    private final String item;\r\n+    \r\n+    public DirectoryItem(String cat, String name) {\r\n+        category = cat;\r\n+        item = name;\r\n+    }\r\n+    \r\n+    /** Returns the filename of the item. */\r\n+    public String getItem() {\r\n+        return item;\r\n+    }\r\n+    \r\n+    /** Returns the category aka directory of the item. */\r\n+    public String getCategory() {\r\n+        return category;\r\n+    }\r\n+\r\n+    @Override public boolean equals(Object other) {\r\n+        if (this == other) {\r\n+            return true;\r\n+        }\r\n+        if (other instanceof DirectoryItem) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0NDYwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    return false;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488844608", "createdAt": "2020-09-15T17:33:51Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/util/fileUtils/DirectoryItem.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package megamek.common.util.fileUtils;\r\n+\r\n+/** \r\n+ * A helper class to hold files in directories taken from \r\n+ * a DirectoryItems object.\r\n+ * where both the filename and the directory are stored.\r\n+ * @author Juliez\r\n+ */\r\n+public class DirectoryItem {\r\n+    \r\n+    /** The category aka file directory of the item */\r\n+    private final String category;\r\n+    /** The filename of the item */\r\n+    private final String item;\r\n+    \r\n+    public DirectoryItem(String cat, String name) {\r\n+        category = cat;\r\n+        item = name;\r\n+    }\r\n+    \r\n+    /** Returns the filename of the item. */\r\n+    public String getItem() {\r\n+        return item;\r\n+    }\r\n+    \r\n+    /** Returns the category aka directory of the item. */\r\n+    public String getCategory() {\r\n+        return category;\r\n+    }\r\n+\r\n+    @Override public boolean equals(Object other) {\r\n+        if (this == other) {\r\n+            return true;\r\n+        }\r\n+        if (other instanceof DirectoryItem) {\r\n+            DirectoryItem dOther = (DirectoryItem)other;\r\n+            return dOther.getCategory().equals(category) && dOther.getItem().equals(item);\r\n+        }\r\n+        return false;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0NTk2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (entity.getCamoCategory() != null && !entity.getCamoCategory().equals(IPlayer.NO_CAMO)) {\n          \n          \n            \n                    if ((entity.getCamoCategory() != null) && !entity.getCamoCategory().equals(IPlayer.NO_CAMO)) {", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488845960", "createdAt": "2020-09-15T17:35:10Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/tileset/TilesetManager.java", "diffHunk": "@@ -666,11 +617,9 @@ public synchronized void loadImage(Entity entity, int secondaryPos) {\n         IPlayer player = entity.getOwner();\n         int tint = PlayerColors.getColorRGB(player.getColorIndex());\n \n-        Image camo = null;\n-        if (getEntityCamo(entity) != null) {\n-            camo = getEntityCamo(entity);\n-        } else {\n-            camo = getPlayerCamo(player);\n+        Image camo = CamoManager.getPlayerCamoImage(player);\n+        if (entity.getCamoCategory() != null && !entity.getCamoCategory().equals(IPlayer.NO_CAMO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0NjM5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (entity.getCamoCategory() != null && !entity.getCamoCategory().equals(IPlayer.NO_CAMO)) {\n          \n          \n            \n                    if ((entity.getCamoCategory() != null) && !entity.getCamoCategory().equals(IPlayer.NO_CAMO)) {", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488846392", "createdAt": "2020-09-15T17:35:38Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/skinEditor/SkinEditorMainGUI.java", "diffHunk": "@@ -870,11 +871,9 @@ public JFrame getFrame() {\n     }\n    \n     public void loadPreviewImage(JLabel bp, Entity entity, IPlayer player) {\n-        Image camo = null;\n-        if (entity.getCamoFileName() != null) {\n-            camo = bv.getTilesetManager().getEntityCamo(entity);\n-        } else {\n-            camo = bv.getTilesetManager().getPlayerCamo(player);\n+        Image camo = CamoManager.getPlayerCamoImage(player);\n+        if (entity.getCamoCategory() != null && !entity.getCamoCategory().equals(IPlayer.NO_CAMO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0NzU4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    return portraitDialog.getSelectedItem().getItem();\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return portraitDialog.getSelectedItem().getItem();\n          \n          \n            \n                    }", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488847581", "createdAt": "2020-09-15T17:36:48Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/CustomPilotView.java", "diffHunk": "@@ -414,11 +424,17 @@ public int getToughness() {\n     }\n     \n     public String getPortraitCategory() {\n-        return portraitDialog.getCategory();\n+        if (portraitDialog.getSelectedItem() == null) {\n+            return null;\n+        }\n+        return portraitDialog.getSelectedItem().getCategory();\n     }\n     \n     public String getPortraitFilename() {\n-        return portraitDialog.getFileName();\n+        if (portraitDialog.getSelectedItem() == null) {\n+            return null;\n+        }\n+        return portraitDialog.getSelectedItem().getItem();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0Nzk4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    return portraitDialog.getSelectedItem().getCategory();\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return portraitDialog.getSelectedItem().getCategory();\n          \n          \n            \n                    }", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488847986", "createdAt": "2020-09-15T17:37:11Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/CustomPilotView.java", "diffHunk": "@@ -414,11 +424,17 @@ public int getToughness() {\n     }\n     \n     public String getPortraitCategory() {\n-        return portraitDialog.getCategory();\n+        if (portraitDialog.getSelectedItem() == null) {\n+            return null;\n+        }\n+        return portraitDialog.getSelectedItem().getCategory();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0ODIyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    ((JButton)e.getSource()).setIcon(PortraitManager.getPortraitIcon(category, filename));\n          \n          \n            \n                                    ((JButton) e.getSource()).setIcon(PortraitManager.getPortraitIcon(category, filename));", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488848221", "createdAt": "2020-09-15T17:37:28Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/CustomPilotView.java", "diffHunk": "@@ -97,15 +100,22 @@ public CustomPilotView(CustomMechDialog parent, Entity entity, int slot, boolean\n         JButton button = new JButton();\n         button.setPreferredSize(new Dimension(72, 72));\n         button.setText(Messages.getString(\"CustomMechDialog.labPortrait\"));\n-        button.setActionCommand(\"portrait\"); //$NON-NLS-1$\n+        button.setActionCommand(\"portrait\"); \n         button.addActionListener(new ActionListener() {\n             public void actionPerformed(ActionEvent e) {\n-                portraitDialog.setVisible(true);\n+                int result = portraitDialog.showDialog(entity.getCrew(), slot);\n+                if (result == JOptionPane.OK_OPTION) {\n+                    if (portraitDialog.getSelectedItem() != null) {\n+                        String category = portraitDialog.getSelectedItem().getCategory();\n+                        String filename = portraitDialog.getSelectedItem().getItem();\n+                        ((JButton)e.getSource()).setIcon(PortraitManager.getPortraitIcon(category, filename));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0ODYwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (result == JOptionPane.CANCEL_OPTION || camoDialog.getSelectedItem() == null) {\n          \n          \n            \n                                if ((result == JOptionPane.CANCEL_OPTION) || (camoDialog.getSelectedItem() == null)) {", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488848607", "createdAt": "2020-09-15T17:37:52Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/ScenarioDialog.java", "diffHunk": "@@ -79,12 +82,26 @@ public ScenarioDialog(final JFrame frame, Player[] pa) {\n             final JButton curButton = m_camoButtons[x];\n             curButton.setText(Messages.getString(\"MegaMek.NoCamoBtn\")); //$NON-NLS-1$\n             curButton.setPreferredSize(new Dimension(84, 72));\n-            final CamoChoiceDialog dialog = new CamoChoiceDialog(frame,\n-                    curButton);\n-            dialog.setPlayer(curPlayer);\n+            \n+            CamoChooser camoDialog = new CamoChooser(frame);\n             curButton.addActionListener(new ActionListener() {\n                 public void actionPerformed(ActionEvent e) {\n-                    dialog.setVisible(true);\n+                    int result = camoDialog.showDialog(curPlayer);\n+\n+                    // If the dialog was canceled or nothing selected, do nothing\n+                    if (result == JOptionPane.CANCEL_OPTION || camoDialog.getSelectedItem() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0ODg3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    addToTT(\"PilotPortraitW\", BR, imagePath, (int)h);\n          \n          \n            \n                                    addToTT(\"PilotPortraitW\", BR, imagePath, (int) h);", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488848877", "createdAt": "2020-09-15T17:38:25Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/boardview/EntitySprite.java", "diffHunk": "@@ -922,7 +923,16 @@ else if (numAdv > 1)\n                 String imagePath = Configuration.portraitImagesDir() + \"/\" + category + file;\n                 File f = new File(imagePath);\n                 if(f.exists()) {\n-                    addToTT(\"PilotPortrait\",BR,imagePath);\n+                    // HACK: Get the real portrait to find the size of the image\n+                    // and scale the tooltip HTML IMG accordingly\n+                    Image portrait = PortraitManager.getUnscaledPortraitImage(category, file);\n+                    if (portrait.getWidth(null) > portrait.getHeight(null)) {\n+                        float h = 60f * portrait.getHeight(null) / portrait.getWidth(null);\n+                        addToTT(\"PilotPortraitW\", BR, imagePath, (int)h);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0ODkzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    addToTT(\"PilotPortraitH\", BR, imagePath, (int)w);\n          \n          \n            \n                                    addToTT(\"PilotPortraitH\", BR, imagePath, (int) w);", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488848939", "createdAt": "2020-09-15T17:38:31Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/boardview/EntitySprite.java", "diffHunk": "@@ -922,7 +923,16 @@ else if (numAdv > 1)\n                 String imagePath = Configuration.portraitImagesDir() + \"/\" + category + file;\n                 File f = new File(imagePath);\n                 if(f.exists()) {\n-                    addToTT(\"PilotPortrait\",BR,imagePath);\n+                    // HACK: Get the real portrait to find the size of the image\n+                    // and scale the tooltip HTML IMG accordingly\n+                    Image portrait = PortraitManager.getUnscaledPortraitImage(category, file);\n+                    if (portrait.getWidth(null) > portrait.getHeight(null)) {\n+                        float h = 60f * portrait.getHeight(null) / portrait.getWidth(null);\n+                        addToTT(\"PilotPortraitW\", BR, imagePath, (int)h);\n+                    } else {\n+                        float w = 60f * portrait.getWidth(null) / portrait.getHeight(null);\n+                        addToTT(\"PilotPortraitH\", BR, imagePath, (int)w);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1MDM3Ng==", "bodyText": "Could this be a list instead of an ArrayList?", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488850376", "createdAt": "2020-09-15T17:41:02Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/dialog/imageChooser/ImageList.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/* MegaMek - Copyright (C) 2004 Ben Mazur (bmazur@sev.org)\r\n+ * Copyright \u00a9 2013 Edward Cullen (eddy@obsessedcomputers.co.uk)\r\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+ *\r\n+ *  This program is free software; you can redistribute it and/or modify it\r\n+ *  under the terms of the GNU General Public License as published by the Free\r\n+ *  Software Foundation; either version 2 of the License, or (at your option)\r\n+ *  any later version.\r\n+ *\r\n+ *  This program is distributed in the hope that it will be useful, but\r\n+ *  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\r\n+ *  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\r\n+ *  for more details.\r\n+ */\r\n+package megamek.client.ui.swing.dialog.imageChooser;\r\n+\r\n+import java.util.ArrayList;\r\n+import javax.swing.DefaultListModel;\r\n+import javax.swing.JList;\r\n+import javax.swing.ListCellRenderer;\r\n+import javax.swing.ListSelectionModel;\r\n+\r\n+import megamek.common.util.fileUtils.DirectoryItem;\r\n+\r\n+/**\r\n+ * A specialized JList to display a list of (ImageChoiceDialog.DirectoryItem)s\r\n+ * for the ImageChoiceDialog, e.g. camos or portraits. The images\r\n+ * will be displayed with horizontal wrap. This is best embedded\r\n+ * in a JScrollpane. \r\n+ * Using any of the renderers in the package the images can be displayed\r\n+ * with or without the filename.\r\n+ */\r\n+public class ImageList extends JList<DirectoryItem> {\r\n+\r\n+    private static final long serialVersionUID = -8060324139099113292L;\r\n+\r\n+    /** The list model; a default model. */\r\n+    private DefaultListModel<DirectoryItem> itemModel;\r\n+    \r\n+    /**\r\n+     * A specialized JList to display a list of (ImageChoiceDialog.DirectoryItem)s\r\n+     * for the ImageChoiceDialog, e.g. camos or portraits. The images\r\n+     * will be displayed with horizontal wrap. This is best embedded\r\n+     * in a JScrollpane. \r\n+     * Using any of the renderers in the package the images can be displayed\r\n+     * with or without the filename.\r\n+     */\r\n+    public ImageList(ListCellRenderer<DirectoryItem> renderer) {\r\n+        super(); \r\n+        itemModel = new DefaultListModel<DirectoryItem>();\r\n+        setModel(itemModel);\r\n+        \r\n+        setOpaque(true);\r\n+        setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n+        setLayoutOrientation(JList.HORIZONTAL_WRAP);\r\n+        setFixedCellWidth(100);\r\n+        setFixedCellHeight(110);\r\n+        setVisibleRowCount(-1);\r\n+        setCellRenderer(renderer);\r\n+    }\r\n+    \r\n+    /** \r\n+     * Updates the list to show (only) the given items.\r\n+     */\r\n+    public void updateImages(ArrayList<DirectoryItem> items) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1MTU0OA==", "bodyText": "Is this listed anywhere else, and do we support and file types other than these?", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488851548", "createdAt": "2020-09-15T17:42:57Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/dialog/imageChooser/CamoRenderer.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*  \r\n+* MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+*  \r\n+* This program is free software; you can redistribute it and/or modify it under  \r\n+* the terms of the GNU General Public License as published by the Free Software  \r\n+* Foundation; either version 2 of the License, or (at your option) any later  \r\n+* version.  \r\n+*  \r\n+* This program is distributed in the hope that it will be useful, but WITHOUT  \r\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  \r\n+* FOR A PARTICULAR PURPOSE. See the GNU General Public License for more  \r\n+* details.  \r\n+*/  \r\n+package megamek.client.ui.swing.dialog.imageChooser;\r\n+\r\n+import java.awt.Component;\r\n+\r\n+import javax.swing.BoxLayout;\r\n+import javax.swing.JLabel;\r\n+import javax.swing.JList;\r\n+import javax.swing.JPanel;\r\n+import javax.swing.ListCellRenderer;\r\n+import javax.swing.UIManager;\r\n+import javax.swing.border.EmptyBorder;\r\n+\r\n+import megamek.client.ui.swing.tileset.CamoManager;\r\n+import megamek.common.util.fileUtils.DirectoryItem;\r\n+\r\n+/** \r\n+ * A renderer for the list of camos. Shows the camo and the filename\r\n+ * minus the extension below the image. The filename will be shortened\r\n+ * by the JList if it's too long.\r\n+ * Sets the tooltip to show both the directory and the filename of the camo.\r\n+ * \r\n+ * @author Juliez\r\n+ */\r\n+public class CamoRenderer extends JPanel implements ListCellRenderer<DirectoryItem> {\r\n+\r\n+    private static final long serialVersionUID = -8141491753114750665L;\r\n+    \r\n+    /** Image file extensions, .jpg .jpeg .png .gif */ \r\n+    private static final String[] EXTENSIONS = {\".png\", \".jpg\", \".jpeg\", \".gif\"};\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1MzYyMw==", "bodyText": "Can this be a list?", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488853623", "createdAt": "2020-09-15T17:46:29Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/dialog/imageChooser/PortraitChooser.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*  \r\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+ *  \r\n+ * This program is free software; you can redistribute it and/or modify it under  \r\n+ * the terms of the GNU General Public License as published by the Free Software  \r\n+ * Foundation; either version 2 of the License, or (at your option) any later  \r\n+ * version.  \r\n+ *  \r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT  \r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  \r\n+ * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more  \r\n+ * details.  \r\n+ */  \r\n+package megamek.client.ui.swing.dialog.imageChooser;\r\n+\r\n+import java.awt.Window;\r\n+import java.util.ArrayList;\r\n+import java.util.Iterator;\r\n+\r\n+import megamek.client.ui.Messages;\r\n+import megamek.client.ui.swing.tileset.PortraitManager;\r\n+import megamek.common.Configuration;\r\n+import megamek.common.Crew;\r\n+import megamek.common.util.fileUtils.DirectoryItem;\r\n+\r\n+/**\r\n+ * This dialog allows players to select a portrait\r\n+ * It automatically fills itself with the portraits\r\n+ * in the {@link Configuration#portraitImagesDir()} directory tree.\r\n+ * Should be shown by using showDialog(). This method \r\n+ * returns either JOptionPane.OK_OPTION or .CANCEL_OPTION.\r\n+ * \r\n+ * @see AbstractImageChooser\r\n+ */\r\n+public class PortraitChooser extends AbstractImageChooser  {\r\n+\r\n+    private static final long serialVersionUID = 6487684461690549139L;\r\n+\r\n+    /** When true, camos from all subdirectories of the current selection are shown. */\r\n+    private boolean includeSubDirs = true;\r\n+    \r\n+    /** Creates a dialog that allows players to choose a portrait. */\r\n+    public PortraitChooser(Window parent) {\r\n+        super(parent, Messages.getString(\"PortraitChoiceDialog.select_portrait\"), \r\n+                new PortraitRenderer(), new PortraitChooserTree());\r\n+    }\r\n+    \r\n+    @Override\r\n+    protected ArrayList<DirectoryItem> getItems(String category) {\r\n+        \r\n+        ArrayList<DirectoryItem> result = new ArrayList<>();\r\n+        \r\n+        // The portraits of the selected category are presented. \r\n+        // When the includeSubDirs flag is true, all categories\r\n+        // below the selected one are also presented.\r\n+        if (includeSubDirs) {\r\n+            for (Iterator<String> catNames = PortraitManager.getPortraits().getCategoryNames(); catNames.hasNext(); ) {\r\n+                String tcat = catNames.next(); \r\n+                if (tcat.startsWith(category)) {\r\n+                    addCategoryItems(tcat, result);\r\n+                }\r\n+            }\r\n+        } else {\r\n+            addCategoryItems(category, result);\r\n+        }\r\n+        return result;\r\n+    }\r\n+    \r\n+    /** \r\n+     * Adds the portraits of the given category to the given items ArrayList.\r\n+     * Assumes that the root of the path (Crew.ROOT_PORTRAIT) is passed as \"\"! \r\n+     * */\r\n+    private void addCategoryItems(String category, ArrayList<DirectoryItem> items) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1NjM0Nw==", "bodyText": "This looks odd", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488856347", "createdAt": "2020-09-15T17:51:13Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/tileset/CamoManager.java", "diffHunk": "@@ -0,0 +1,253 @@\n+/*  \r\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+ *  \r\n+ * This program is free software; you can redistribute it and/or modify it under  \r\n+ * the terms of the GNU General Public License as published by the Free Software  \r\n+ * Foundation; either version 2 of the License, or (at your option) any later  \r\n+ * version.  \r\n+ *  \r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT  \r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  \r\n+ * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more  \r\n+ * details.  \r\n+ */  \r\n+package megamek.client.ui.swing.tileset;\r\n+\r\n+import java.awt.Color;\r\n+import java.awt.Graphics2D;\r\n+import java.awt.Image;\r\n+import java.awt.image.BufferedImage;\r\n+import javax.swing.Icon;\r\n+import javax.swing.ImageIcon;\r\n+\r\n+import megamek.client.ui.swing.util.PlayerColors;\r\n+import megamek.client.ui.swing.util.ScaledImageFileFactory;\r\n+import megamek.common.Configuration;\r\n+import megamek.common.Entity;\r\n+import megamek.common.IPlayer;\r\n+import megamek.common.logging.DefaultMmLogger;\r\n+import megamek.common.logging.MMLogger;\r\n+import megamek.common.util.ImageUtil;\r\n+import megamek.common.util.fileUtils.DirectoryItem;\r\n+import megamek.common.util.fileUtils.DirectoryItems;\r\n+\r\n+/** \r\n+ * Manages the camos, parsing the camo directory and\r\n+ * providing the images.\r\n+ *   \r\n+ * @author Juliez\r\n+ */\r\n+public final class CamoManager {\r\n+\r\n+    private static final MMLogger LOG = DefaultMmLogger.getInstance();\r\n+    \r\n+    // This class is not to be instantiated\r\n+    private CamoManager() {}\r\n+\r\n+    /** The DirectoryItems object holding all camo file information */ \r\n+    private static DirectoryItems camoDirectory;\r\n+    \r\n+    /** \r\n+     * True at startup and when the camo directory should be re-parsed.\r\n+     * Used to avoid re-parsing the directory repeatedly when there's an error. */\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1NjY0OA==", "bodyText": "Refactor to MegaMek.getLogger()", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488856648", "createdAt": "2020-09-15T17:51:45Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/tileset/CamoManager.java", "diffHunk": "@@ -0,0 +1,253 @@\n+/*  \r\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+ *  \r\n+ * This program is free software; you can redistribute it and/or modify it under  \r\n+ * the terms of the GNU General Public License as published by the Free Software  \r\n+ * Foundation; either version 2 of the License, or (at your option) any later  \r\n+ * version.  \r\n+ *  \r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT  \r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  \r\n+ * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more  \r\n+ * details.  \r\n+ */  \r\n+package megamek.client.ui.swing.tileset;\r\n+\r\n+import java.awt.Color;\r\n+import java.awt.Graphics2D;\r\n+import java.awt.Image;\r\n+import java.awt.image.BufferedImage;\r\n+import javax.swing.Icon;\r\n+import javax.swing.ImageIcon;\r\n+\r\n+import megamek.client.ui.swing.util.PlayerColors;\r\n+import megamek.client.ui.swing.util.ScaledImageFileFactory;\r\n+import megamek.common.Configuration;\r\n+import megamek.common.Entity;\r\n+import megamek.common.IPlayer;\r\n+import megamek.common.logging.DefaultMmLogger;\r\n+import megamek.common.logging.MMLogger;\r\n+import megamek.common.util.ImageUtil;\r\n+import megamek.common.util.fileUtils.DirectoryItem;\r\n+import megamek.common.util.fileUtils.DirectoryItems;\r\n+\r\n+/** \r\n+ * Manages the camos, parsing the camo directory and\r\n+ * providing the images.\r\n+ *   \r\n+ * @author Juliez\r\n+ */\r\n+public final class CamoManager {\r\n+\r\n+    private static final MMLogger LOG = DefaultMmLogger.getInstance();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1Njk1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (category == null || name == null) {\n          \n          \n            \n                    if ((category == null) || (name == null)) {", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488856959", "createdAt": "2020-09-15T17:52:13Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/tileset/CamoManager.java", "diffHunk": "@@ -0,0 +1,253 @@\n+/*  \r\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+ *  \r\n+ * This program is free software; you can redistribute it and/or modify it under  \r\n+ * the terms of the GNU General Public License as published by the Free Software  \r\n+ * Foundation; either version 2 of the License, or (at your option) any later  \r\n+ * version.  \r\n+ *  \r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT  \r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  \r\n+ * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more  \r\n+ * details.  \r\n+ */  \r\n+package megamek.client.ui.swing.tileset;\r\n+\r\n+import java.awt.Color;\r\n+import java.awt.Graphics2D;\r\n+import java.awt.Image;\r\n+import java.awt.image.BufferedImage;\r\n+import javax.swing.Icon;\r\n+import javax.swing.ImageIcon;\r\n+\r\n+import megamek.client.ui.swing.util.PlayerColors;\r\n+import megamek.client.ui.swing.util.ScaledImageFileFactory;\r\n+import megamek.common.Configuration;\r\n+import megamek.common.Entity;\r\n+import megamek.common.IPlayer;\r\n+import megamek.common.logging.DefaultMmLogger;\r\n+import megamek.common.logging.MMLogger;\r\n+import megamek.common.util.ImageUtil;\r\n+import megamek.common.util.fileUtils.DirectoryItem;\r\n+import megamek.common.util.fileUtils.DirectoryItems;\r\n+\r\n+/** \r\n+ * Manages the camos, parsing the camo directory and\r\n+ * providing the images.\r\n+ *   \r\n+ * @author Juliez\r\n+ */\r\n+public final class CamoManager {\r\n+\r\n+    private static final MMLogger LOG = DefaultMmLogger.getInstance();\r\n+    \r\n+    // This class is not to be instantiated\r\n+    private CamoManager() {}\r\n+\r\n+    /** The DirectoryItems object holding all camo file information */ \r\n+    private static DirectoryItems camoDirectory;\r\n+    \r\n+    /** \r\n+     * True at startup and when the camo directory should be re-parsed.\r\n+     * Used to avoid re-parsing the directory repeatedly when there's an error. */\r\n+    private static boolean parseDirectory = true; \r\n+\r\n+    /** \r\n+     * Returns a DirectoryItems object containing all camo image filenames\r\n+     * found in MM's camo images folder. \r\n+     * @return a DirectoryItems object with the camo folders and filenames. \r\n+     * May be null if the directory cannot be parsed.\r\n+     */\r\n+    public static DirectoryItems getCamos() {\r\n+        initializeCamos();\r\n+        return camoDirectory;\r\n+    }\r\n+\r\n+    /** \r\n+     * Parses MM's camo folder when first called\r\n+     * or when it was refreshed. \r\n+     * \r\n+     * @see #refreshDirectory()\r\n+     */\r\n+    private static void initializeCamos() {\r\n+        // Read in and parse MM's camo folder only when first called\r\n+        // or when refreshed\r\n+        if (parseDirectory) {\r\n+            // Set parseDirectory to false to avoid parsing repeatedly when something fails\r\n+            parseDirectory = false;\r\n+            try {\r\n+                camoDirectory = new DirectoryItems(Configuration.camoDir(), \"\", \r\n+                        ScaledImageFileFactory.getInstance());\r\n+            } catch (Exception e) {\r\n+                LOG.error(CamoManager.class, \"Could not parse the camo directory!\");\r\n+                e.printStackTrace();\r\n+                // This could be improved by obtaining an empty DirectoryItems to avoid returning null\r\n+            }\r\n+        }\r\n+    }\r\n+    \r\n+    /** \r\n+     * Re-reads MM's camo images folder and returns the updated\r\n+     * DirectoryItems object. This will update the DirectoryItems object\r\n+     * with changes to the camos (like added image files and folders) \r\n+     * while MM is running.\r\n+     * \r\n+     * @see #getCamos()\r\n+     */\r\n+    public static DirectoryItems refreshDirectory() {\r\n+        parseDirectory = true;\r\n+        return getCamos();\r\n+    }\r\n+    \r\n+    /** \r\n+     * Returns an Image of the camo pattern given\r\n+     * by its category (aka directory) and name (aka filename).\r\n+     * Will try to return an image if the category indicates\r\n+     * that a color was selected. \r\n+     * When the camo image cannot be created, a placeholder \r\n+     * \"fail\" image is returned.\r\n+     * \r\n+     * @see ImageUtil#failStandardImage()\r\n+     */\r\n+    public static Image getCamoImage(String category, String name) {\r\n+        // Return a fail image when parameters are null\r\n+        if (category == null || name == null) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1NzQ4Mw==", "bodyText": "Actually, this whole file needs logger standardization to MegaMek.getLogger()", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488857483", "createdAt": "2020-09-15T17:53:05Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/tileset/CamoManager.java", "diffHunk": "@@ -0,0 +1,253 @@\n+/*  \r\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+ *  \r\n+ * This program is free software; you can redistribute it and/or modify it under  \r\n+ * the terms of the GNU General Public License as published by the Free Software  \r\n+ * Foundation; either version 2 of the License, or (at your option) any later  \r\n+ * version.  \r\n+ *  \r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT  \r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  \r\n+ * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more  \r\n+ * details.  \r\n+ */  \r\n+package megamek.client.ui.swing.tileset;\r\n+\r\n+import java.awt.Color;\r\n+import java.awt.Graphics2D;\r\n+import java.awt.Image;\r\n+import java.awt.image.BufferedImage;\r\n+import javax.swing.Icon;\r\n+import javax.swing.ImageIcon;\r\n+\r\n+import megamek.client.ui.swing.util.PlayerColors;\r\n+import megamek.client.ui.swing.util.ScaledImageFileFactory;\r\n+import megamek.common.Configuration;\r\n+import megamek.common.Entity;\r\n+import megamek.common.IPlayer;\r\n+import megamek.common.logging.DefaultMmLogger;\r\n+import megamek.common.logging.MMLogger;\r\n+import megamek.common.util.ImageUtil;\r\n+import megamek.common.util.fileUtils.DirectoryItem;\r\n+import megamek.common.util.fileUtils.DirectoryItems;\r\n+\r\n+/** \r\n+ * Manages the camos, parsing the camo directory and\r\n+ * providing the images.\r\n+ *   \r\n+ * @author Juliez\r\n+ */\r\n+public final class CamoManager {\r\n+\r\n+    private static final MMLogger LOG = DefaultMmLogger.getInstance();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1NjY0OA=="}, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1Nzc4NQ==", "bodyText": "This whole file can be standardized to a MegaMek.getLogger()", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488857785", "createdAt": "2020-09-15T17:53:35Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/tileset/PortraitManager.java", "diffHunk": "@@ -0,0 +1,290 @@\n+/*  \r\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+ *  \r\n+ * This program is free software; you can redistribute it and/or modify it under  \r\n+ * the terms of the GNU General Public License as published by the Free Software  \r\n+ * Foundation; either version 2 of the License, or (at your option) any later  \r\n+ * version.  \r\n+ *  \r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT  \r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  \r\n+ * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more  \r\n+ * details.  \r\n+ */  \r\n+package megamek.client.ui.swing.tileset;\r\n+\r\n+import java.awt.BasicStroke;\r\n+import java.awt.Color;\r\n+import java.awt.Graphics;\r\n+import java.awt.Graphics2D;\r\n+import java.awt.Image;\r\n+import java.awt.image.BufferedImage;\r\n+\r\n+import javax.swing.Icon;\r\n+import javax.swing.ImageIcon;\r\n+\r\n+import megamek.client.ui.swing.util.ImageFileFactory;\r\n+import megamek.common.Configuration;\r\n+import megamek.common.Crew;\r\n+import megamek.common.logging.DefaultMmLogger;\r\n+import megamek.common.logging.MMLogger;\r\n+import megamek.common.util.ImageUtil;\r\n+import megamek.common.util.fileUtils.DirectoryItems;\r\n+\r\n+/** \r\n+ * Manages the portraits, parsing the portraits directory and\r\n+ * providing the images.\r\n+ *   \r\n+ * @author Juliez\r\n+ */\r\n+public class PortraitManager {\r\n+\r\n+    private static final MMLogger LOG = DefaultMmLogger.getInstance();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1Nzk5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (category == null \n          \n          \n            \n                            || name == null\n          \n          \n            \n                    if ((category == null)\n          \n          \n            \n                            || (name == null)", "url": "https://github.com/MegaMek/megamek/pull/2198#discussion_r488857995", "createdAt": "2020-09-15T17:53:59Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/tileset/PortraitManager.java", "diffHunk": "@@ -0,0 +1,290 @@\n+/*  \r\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+ *  \r\n+ * This program is free software; you can redistribute it and/or modify it under  \r\n+ * the terms of the GNU General Public License as published by the Free Software  \r\n+ * Foundation; either version 2 of the License, or (at your option) any later  \r\n+ * version.  \r\n+ *  \r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT  \r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  \r\n+ * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more  \r\n+ * details.  \r\n+ */  \r\n+package megamek.client.ui.swing.tileset;\r\n+\r\n+import java.awt.BasicStroke;\r\n+import java.awt.Color;\r\n+import java.awt.Graphics;\r\n+import java.awt.Graphics2D;\r\n+import java.awt.Image;\r\n+import java.awt.image.BufferedImage;\r\n+\r\n+import javax.swing.Icon;\r\n+import javax.swing.ImageIcon;\r\n+\r\n+import megamek.client.ui.swing.util.ImageFileFactory;\r\n+import megamek.common.Configuration;\r\n+import megamek.common.Crew;\r\n+import megamek.common.logging.DefaultMmLogger;\r\n+import megamek.common.logging.MMLogger;\r\n+import megamek.common.util.ImageUtil;\r\n+import megamek.common.util.fileUtils.DirectoryItems;\r\n+\r\n+/** \r\n+ * Manages the portraits, parsing the portraits directory and\r\n+ * providing the images.\r\n+ *   \r\n+ * @author Juliez\r\n+ */\r\n+public class PortraitManager {\r\n+\r\n+    private static final MMLogger LOG = DefaultMmLogger.getInstance();\r\n+    \r\n+    // This class is not to be instantiated\r\n+    private PortraitManager() {}\r\n+\r\n+    /** The DirectoryItems object holding all portrait file information */ \r\n+    private static DirectoryItems portraitDirectory;\r\n+    \r\n+    /** \r\n+     * True at startup and when the portrait directory should be re-parsed.\r\n+     * Used to avoid re-parsing the directory repeatedly when there's an error. */\r\n+    private static boolean parseDirectory = true; \r\n+\r\n+    /** \r\n+     * Returns a DirectoryItems object containing all portrait image filenames\r\n+     * found in MM's portrait images folder. \r\n+     * @return a DirectoryItems object with the portrait folders and filenames. \r\n+     * May be null if the directory cannot be parsed.\r\n+     */\r\n+    public static DirectoryItems getPortraits() {\r\n+        initializePortraits();\r\n+        return portraitDirectory;\r\n+    }\r\n+    \r\n+    /** Holds a drawn \"fail\" image that can be used when image loading fails. */ \r\n+    public static BufferedImage failPortrait;\r\n+\r\n+    /** \r\n+     * Parses MM's portraits folder when first called\r\n+     * or when it was refreshed. \r\n+     * \r\n+     * @see #refreshDirectory()\r\n+     */\r\n+    private static void initializePortraits() {\r\n+        // Read in and parse MM's portrait folder only when first called\r\n+        // or when refreshed\r\n+        if (parseDirectory) {\r\n+            // Set parseDirectory to false to avoid parsing repeatedly when something fails\r\n+            parseDirectory = false;\r\n+            try {\r\n+                portraitDirectory = new DirectoryItems(Configuration.portraitImagesDir(), \"\", \r\n+                        ImageFileFactory.getInstance());\r\n+            } catch (Exception e) {\r\n+                LOG.error(PortraitManager.class, \"Could not parse the portraits directory!\");\r\n+                e.printStackTrace();\r\n+                // This could be improved by obtaining an empty DirectoryItems to avoid returning null\r\n+            }\r\n+        }\r\n+    }\r\n+    \r\n+    /** \r\n+     * Re-reads MM's portrait images folder and returns the updated\r\n+     * DirectoryItems object. This will update the DirectoryItems object\r\n+     * with changes to the portraits (like added image files and folders) \r\n+     * while MM is running.\r\n+     * \r\n+     * @see #getPortraits()\r\n+     */\r\n+    public static DirectoryItems refreshDirectory() {\r\n+        parseDirectory = true;\r\n+        return getPortraits();\r\n+    }\r\n+    \r\n+    /** \r\n+     * Returns an Image of the portrait given\r\n+     * by its category (aka directory) and name (aka filename).\r\n+     * The image is not scaled in any way.\r\n+     * When the portrait cannot be created, the default portrait \r\n+     * or - if that cannot be found - a placeholder \"fail\" image \r\n+     * is returned.\r\n+     * \r\n+     * @see #getDefaultPortrait()\r\n+     * @see #failPortrait()\r\n+     */\r\n+    public static Image getUnscaledPortraitImage(String category, String name) {\r\n+        // Return the default portrait when parameters are null\r\n+        // or no portrait is selected \r\n+        if (category == null \r\n+                || name == null\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4e671407f02462dcb614f815bc195eac99cae"}, "originalPosition": 120}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784731672bf13dc26f2bb2c53a21f2fc0fb1b3e3", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/784731672bf13dc26f2bb2c53a21f2fc0fb1b3e3", "committedDate": "2020-09-16T14:37:34Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee5da436c0c1ea994fe360ab47ce71ff8ef231a3", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/ee5da436c0c1ea994fe360ab47ce71ff8ef231a3", "committedDate": "2020-09-16T15:07:04Z", "message": "Corrections Logger etc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca795ae4b75f14b74ea74e7f7c839098b03651da", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/ca795ae4b75f14b74ea74e7f7c839098b03651da", "committedDate": "2020-09-16T15:08:30Z", "message": "Merge remote-tracking branch 'JuliezFork/ImageChoiceDlg' into ImageChoiceDlg"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b33bdea2f6187ff1b7e78e75f1258ef5a49ca174", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/b33bdea2f6187ff1b7e78e75f1258ef5a49ca174", "committedDate": "2020-09-16T15:11:37Z", "message": "More corrections"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NzM3NzA2", "url": "https://github.com/MegaMek/megamek/pull/2198#pullrequestreview-489737706", "createdAt": "2020-09-16T15:19:56Z", "commit": {"oid": "b33bdea2f6187ff1b7e78e75f1258ef5a49ca174"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4751, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}