{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNDA1MTg4", "number": 1845, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwMzoyMzo0MFrODzTxdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwMzoyMzo0MFrODzTxdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MTI3OTI2OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/dialog/AbstractUnitSelectorDialog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwMzoyMzo0MFrOGHxbLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNjoxODozOFrOGH5uzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgwMjk5MA==", "bodyText": "Why is this replaced here and not below where the right bracket is replaced?", "url": "https://github.com/MegaMek/megamek/pull/1845#discussion_r410802990", "createdAt": "2020-04-19T03:23:40Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/client/ui/swing/dialog/AbstractUnitSelectorDialog.java", "diffHunk": "@@ -0,0 +1,934 @@\n+/*\n+ *  MechSelectorDialog.java - Copyright (C) 2002,2004 Josh Yockey\n+ *  Renamed UnitSelectorDialog - Jay Lawson <jaylawson39 at yahoo.com>\n+ *  Renamed AbstractUnitSelectorDialog - Copyright (c) 2020 - The MegaMek Team\n+ *  This program is free software; you can redistribute it and/or modify it\n+ *  under the terms of the GNU General Public License as published by the Free\n+ *  Software Foundation; either version 2 of the License, or (at your option)\n+ *  any later version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but\n+ *  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ *  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+ *  for more details.\n+ */\n+package megamek.client.ui.swing.dialog;\n+\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+import java.awt.event.WindowEvent;\n+import java.util.*;\n+import java.util.regex.PatternSyntaxException;\n+\n+import javax.swing.AbstractAction;\n+import javax.swing.Action;\n+import javax.swing.DefaultComboBoxModel;\n+import javax.swing.DefaultRowSorter;\n+import javax.swing.JButton;\n+import javax.swing.JComboBox;\n+import javax.swing.JComponent;\n+import javax.swing.JDialog;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JOptionPane;\n+import javax.swing.JPanel;\n+import javax.swing.JRootPane;\n+import javax.swing.JScrollPane;\n+import javax.swing.JSplitPane;\n+import javax.swing.JTabbedPane;\n+import javax.swing.JTable;\n+import javax.swing.JTextField;\n+import javax.swing.KeyStroke;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.RowFilter;\n+import javax.swing.RowSorter.SortKey;\n+import javax.swing.ScrollPaneConstants;\n+import javax.swing.SortOrder;\n+import javax.swing.SwingConstants;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+import javax.swing.event.ListSelectionEvent;\n+import javax.swing.event.ListSelectionListener;\n+import javax.swing.table.AbstractTableModel;\n+import javax.swing.table.TableColumn;\n+import javax.swing.table.TableRowSorter;\n+\n+import megamek.client.ui.Messages;\n+import megamek.client.ui.swing.*;\n+import megamek.common.Entity;\n+import megamek.common.EntityWeightClass;\n+import megamek.common.MechFileParser;\n+import megamek.common.MechSearchFilter;\n+import megamek.common.MechSummary;\n+import megamek.common.MechSummaryCache;\n+import megamek.common.MechView;\n+import megamek.common.TechConstants;\n+import megamek.common.UnitType;\n+import megamek.common.loaders.EntityLoadingException;\n+import megamek.common.logging.DefaultMmLogger;\n+import megamek.common.logging.MMLogger;\n+import megamek.common.options.GameOptions;\n+import megamek.common.options.OptionsConstants;\n+import megamek.common.templates.TROView;\n+import megamek.common.util.sorter.NaturalOrderComparator;\n+\n+/**\n+ * This is a heavily reworked version of the original MechSelectorDialog which\n+ * brings up a list of units for the player to select to add to their forces.\n+ * The original list has been changed to a sortable table and a text filter\n+ * is used for advanced searching.\n+ */\n+public abstract class AbstractUnitSelectorDialog extends JDialog implements Runnable, KeyListener,\n+        ActionListener, ListSelectionListener {\n+    //region Variable Declarations\n+    private static final long serialVersionUID = 8144354264100884817L;\n+\n+    public static final String CLOSE_ACTION = \"closeAction\";\n+    public static final String SELECT_ACTION = \"selectAction\";\n+\n+    public static final int ALLOWED_YEAR_ANY = 999999;\n+\n+    protected static final int TECH_LEVEL_DISPLAY_IS = 0;\n+    protected static final int TECH_LEVEL_DISPLAY_CLAN = 1;\n+    protected static final int TECH_LEVEL_DISPLAY_IS_CLAN = 2;\n+\n+    protected JButton buttonSelectClose;\n+    protected JButton buttonSelect;\n+    protected JButton buttonClose;\n+    protected JButton buttonShowBV;\n+\n+    private JButton buttonAdvancedSearch;\n+    private JButton buttonResetSearch;\n+    protected JList<String> listTechLevel = new JList<>();\n+    /**\n+     * We need to map the selected index of listTechLevel to the actual TL it\n+     * belongs to\n+     */\n+    protected Map<Integer, Integer> techLevelListToIndex = new HashMap<>();\n+    protected JComboBox<String> comboUnitType = new JComboBox<>();\n+    protected JComboBox<String> comboWeight = new JComboBox<>();\n+    protected JLabel labelImage = new JLabel(\"\"); //inline to avoid potential null pointer issues\n+    protected JTable tableUnits;\n+    protected JTextField textFilter;\n+    private MechViewPanel panelMechView;\n+    private MechViewPanel panelTROView;\n+\n+    private StringBuffer searchBuffer = new StringBuffer();\n+    private long lastSearch = 0;\n+    // how long after a key is typed does a new search begin\n+    private static final int KEY_TIMEOUT = 1000;\n+\n+    protected static MechSummaryCache mscInstance = MechSummaryCache.getInstance();\n+    protected MechSummary[] mechs;\n+\n+    private MechTableModel unitModel = new MechTableModel();\n+    protected MechSearchFilter searchFilter;\n+\n+    private UnitLoadingDialog unitLoadingDialog;\n+    private AdvancedSearchDialog asd;\n+    protected JFrame frame;\n+\n+    protected TableRowSorter<MechTableModel> sorter;\n+\n+    protected GameOptions gameOptions = null;\n+    protected boolean enableYearLimits = false;\n+    protected int allowedYear = ALLOWED_YEAR_ANY;\n+    protected boolean canonOnly = false;\n+    protected int gameTechLevel = TechConstants.T_SIMPLE_INTRO;\n+    protected int techLevelDisplayType = TECH_LEVEL_DISPLAY_IS_CLAN;\n+\n+    protected static MMLogger logger = DefaultMmLogger.getInstance();\n+    //endregion Variable Declarations\n+\n+    protected AbstractUnitSelectorDialog(JFrame frame, UnitLoadingDialog unitLoadingDialog) {\n+        super(frame, Messages.getString(\"MechSelectorDialog.title\"), true); //$NON-NLS-1$\n+        setName(\"UnitSelectorDialog\");\n+        this.frame = frame;\n+        this.unitLoadingDialog = unitLoadingDialog;\n+        super.setVisible(false);\n+    }\n+\n+    /**\n+     * This is used to update any values that are set based on individual options\n+     */\n+    public abstract void updateOptionValues();\n+\n+    /**\n+     * This has been set up to permit preference implementation in anything that extends this\n+     */\n+    private void setUserPreferences() {\n+        GUIPreferences guiPreferences = GUIPreferences.getInstance();\n+        setSize(guiPreferences.getMechSelectorSizeWidth(), guiPreferences.getMechSelectorSizeHeight());\n+\n+        comboUnitType.setSelectedIndex(guiPreferences.getMechSelectorUnitType());\n+\n+        comboWeight.setSelectedIndex(guiPreferences.getMechSelectorWeightClass());\n+\n+        updateTypeCombo(guiPreferences.getMechSelectorRulesLevels().replaceAll(\"\\\\[\", \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50d4e800f52463aeb9c8eb204f420685a0a93ec5"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkzOTA4Ng==", "bodyText": "Yep, inherited code... but I'm not sure.\nI've reworked it so that it just sends the guiPreferences to updateTypeCombo and if needed it gets the rules and does the replacements, as that's just a better way to handle it.", "url": "https://github.com/MegaMek/megamek/pull/1845#discussion_r410939086", "createdAt": "2020-04-19T16:18:38Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/dialog/AbstractUnitSelectorDialog.java", "diffHunk": "@@ -0,0 +1,934 @@\n+/*\n+ *  MechSelectorDialog.java - Copyright (C) 2002,2004 Josh Yockey\n+ *  Renamed UnitSelectorDialog - Jay Lawson <jaylawson39 at yahoo.com>\n+ *  Renamed AbstractUnitSelectorDialog - Copyright (c) 2020 - The MegaMek Team\n+ *  This program is free software; you can redistribute it and/or modify it\n+ *  under the terms of the GNU General Public License as published by the Free\n+ *  Software Foundation; either version 2 of the License, or (at your option)\n+ *  any later version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but\n+ *  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ *  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+ *  for more details.\n+ */\n+package megamek.client.ui.swing.dialog;\n+\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+import java.awt.event.WindowEvent;\n+import java.util.*;\n+import java.util.regex.PatternSyntaxException;\n+\n+import javax.swing.AbstractAction;\n+import javax.swing.Action;\n+import javax.swing.DefaultComboBoxModel;\n+import javax.swing.DefaultRowSorter;\n+import javax.swing.JButton;\n+import javax.swing.JComboBox;\n+import javax.swing.JComponent;\n+import javax.swing.JDialog;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JOptionPane;\n+import javax.swing.JPanel;\n+import javax.swing.JRootPane;\n+import javax.swing.JScrollPane;\n+import javax.swing.JSplitPane;\n+import javax.swing.JTabbedPane;\n+import javax.swing.JTable;\n+import javax.swing.JTextField;\n+import javax.swing.KeyStroke;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.RowFilter;\n+import javax.swing.RowSorter.SortKey;\n+import javax.swing.ScrollPaneConstants;\n+import javax.swing.SortOrder;\n+import javax.swing.SwingConstants;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+import javax.swing.event.ListSelectionEvent;\n+import javax.swing.event.ListSelectionListener;\n+import javax.swing.table.AbstractTableModel;\n+import javax.swing.table.TableColumn;\n+import javax.swing.table.TableRowSorter;\n+\n+import megamek.client.ui.Messages;\n+import megamek.client.ui.swing.*;\n+import megamek.common.Entity;\n+import megamek.common.EntityWeightClass;\n+import megamek.common.MechFileParser;\n+import megamek.common.MechSearchFilter;\n+import megamek.common.MechSummary;\n+import megamek.common.MechSummaryCache;\n+import megamek.common.MechView;\n+import megamek.common.TechConstants;\n+import megamek.common.UnitType;\n+import megamek.common.loaders.EntityLoadingException;\n+import megamek.common.logging.DefaultMmLogger;\n+import megamek.common.logging.MMLogger;\n+import megamek.common.options.GameOptions;\n+import megamek.common.options.OptionsConstants;\n+import megamek.common.templates.TROView;\n+import megamek.common.util.sorter.NaturalOrderComparator;\n+\n+/**\n+ * This is a heavily reworked version of the original MechSelectorDialog which\n+ * brings up a list of units for the player to select to add to their forces.\n+ * The original list has been changed to a sortable table and a text filter\n+ * is used for advanced searching.\n+ */\n+public abstract class AbstractUnitSelectorDialog extends JDialog implements Runnable, KeyListener,\n+        ActionListener, ListSelectionListener {\n+    //region Variable Declarations\n+    private static final long serialVersionUID = 8144354264100884817L;\n+\n+    public static final String CLOSE_ACTION = \"closeAction\";\n+    public static final String SELECT_ACTION = \"selectAction\";\n+\n+    public static final int ALLOWED_YEAR_ANY = 999999;\n+\n+    protected static final int TECH_LEVEL_DISPLAY_IS = 0;\n+    protected static final int TECH_LEVEL_DISPLAY_CLAN = 1;\n+    protected static final int TECH_LEVEL_DISPLAY_IS_CLAN = 2;\n+\n+    protected JButton buttonSelectClose;\n+    protected JButton buttonSelect;\n+    protected JButton buttonClose;\n+    protected JButton buttonShowBV;\n+\n+    private JButton buttonAdvancedSearch;\n+    private JButton buttonResetSearch;\n+    protected JList<String> listTechLevel = new JList<>();\n+    /**\n+     * We need to map the selected index of listTechLevel to the actual TL it\n+     * belongs to\n+     */\n+    protected Map<Integer, Integer> techLevelListToIndex = new HashMap<>();\n+    protected JComboBox<String> comboUnitType = new JComboBox<>();\n+    protected JComboBox<String> comboWeight = new JComboBox<>();\n+    protected JLabel labelImage = new JLabel(\"\"); //inline to avoid potential null pointer issues\n+    protected JTable tableUnits;\n+    protected JTextField textFilter;\n+    private MechViewPanel panelMechView;\n+    private MechViewPanel panelTROView;\n+\n+    private StringBuffer searchBuffer = new StringBuffer();\n+    private long lastSearch = 0;\n+    // how long after a key is typed does a new search begin\n+    private static final int KEY_TIMEOUT = 1000;\n+\n+    protected static MechSummaryCache mscInstance = MechSummaryCache.getInstance();\n+    protected MechSummary[] mechs;\n+\n+    private MechTableModel unitModel = new MechTableModel();\n+    protected MechSearchFilter searchFilter;\n+\n+    private UnitLoadingDialog unitLoadingDialog;\n+    private AdvancedSearchDialog asd;\n+    protected JFrame frame;\n+\n+    protected TableRowSorter<MechTableModel> sorter;\n+\n+    protected GameOptions gameOptions = null;\n+    protected boolean enableYearLimits = false;\n+    protected int allowedYear = ALLOWED_YEAR_ANY;\n+    protected boolean canonOnly = false;\n+    protected int gameTechLevel = TechConstants.T_SIMPLE_INTRO;\n+    protected int techLevelDisplayType = TECH_LEVEL_DISPLAY_IS_CLAN;\n+\n+    protected static MMLogger logger = DefaultMmLogger.getInstance();\n+    //endregion Variable Declarations\n+\n+    protected AbstractUnitSelectorDialog(JFrame frame, UnitLoadingDialog unitLoadingDialog) {\n+        super(frame, Messages.getString(\"MechSelectorDialog.title\"), true); //$NON-NLS-1$\n+        setName(\"UnitSelectorDialog\");\n+        this.frame = frame;\n+        this.unitLoadingDialog = unitLoadingDialog;\n+        super.setVisible(false);\n+    }\n+\n+    /**\n+     * This is used to update any values that are set based on individual options\n+     */\n+    public abstract void updateOptionValues();\n+\n+    /**\n+     * This has been set up to permit preference implementation in anything that extends this\n+     */\n+    private void setUserPreferences() {\n+        GUIPreferences guiPreferences = GUIPreferences.getInstance();\n+        setSize(guiPreferences.getMechSelectorSizeWidth(), guiPreferences.getMechSelectorSizeHeight());\n+\n+        comboUnitType.setSelectedIndex(guiPreferences.getMechSelectorUnitType());\n+\n+        comboWeight.setSelectedIndex(guiPreferences.getMechSelectorWeightClass());\n+\n+        updateTypeCombo(guiPreferences.getMechSelectorRulesLevels().replaceAll(\"\\\\[\", \"\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgwMjk5MA=="}, "originalCommit": {"oid": "50d4e800f52463aeb9c8eb204f420685a0a93ec5"}, "originalPosition": 176}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2916, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}