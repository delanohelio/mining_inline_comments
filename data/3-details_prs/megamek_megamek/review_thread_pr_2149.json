{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MjQzMjUz", "number": 2149, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0NToyMlrOEY1UMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0ODowMVrOEY1U5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NDc0ODAyOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/Dropship.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0NToyMlrOHBUv8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0NToyMlrOHBUv8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1MDU3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \tif(getGame().useVectorMove()) {\n          \n          \n            \n                \tif (getGame().useVectorMove()) {", "url": "https://github.com/MegaMek/megamek/pull/2149#discussion_r471150579", "createdAt": "2020-08-16T19:45:22Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/Dropship.java", "diffHunk": "@@ -1894,5 +1894,64 @@ public void addBattleForceSpecialAbilities(Map<BattleForceSPA,Integer> specialAb\n             specialAbilities.put(BattleForceSPA.CRW, (int)Math.round(getNCrew() / 60.0));\n         }\n     }\n+    \n+    @Override\n+    public boolean canChangeSecondaryFacing() {\n+    \t// flying dropships can execute the \"ECHO\" maneuver (stratops 113), aka a torso twist, \n+    \t// if they have the MP for it\n+    \treturn isAirborne() && !isEvading() && (mpUsed <= getRunMP() - 2);\n+    }\n+\n+    /**\n+     * Can this dropship \"torso twist\" in the given direction?\n+     */\n+    @Override\n+    public boolean isValidSecondaryFacing(int dir) {\n+        int rotate = dir - getFacing();\n+        if (canChangeSecondaryFacing()) {\n+            return (rotate == 0) || (rotate == 1) || (rotate == -1)\n+                    || (rotate == -5) || (rotate == 5);\n+        }\n+        return rotate == 0;\n+    }\n+\n+    /**\n+     * Return the nearest valid direction to \"torso twist\" in\n+     */\n+    @Override\n+    public int clipSecondaryFacing(int dir) {\n+        if (isValidSecondaryFacing(dir)) {\n+            return dir;\n+        }\n+        \n+        // can't twist without enough MP\n+        if (!canChangeSecondaryFacing()) {\n+            return getFacing();\n+        }\n+        // otherwise, twist once in the appropriate direction\n+        final int rotate = (dir + (6 - getFacing())) % 6;\n+\n+        return rotate >= 3 ? (getFacing() + 5) % 6 : (getFacing() + 1) % 6;\n+    }\n+    \n+    @Override\n+    public void newRound(int roundNumber) {\n+    \tsuper.newRound(roundNumber);\n+    \t\n+    \tif(getGame().useVectorMove()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7ec795976f4d8057a91b8e3797340d14ae6549f"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NDc0ODE3OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/Dropship.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0NTozN1rOHBUwCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0NTozN1rOHBUwCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1MDYwMA==", "bodyText": "This formatting looks weird. Ah, this is tab spaced which should be fixed.", "url": "https://github.com/MegaMek/megamek/pull/2149#discussion_r471150600", "createdAt": "2020-08-16T19:45:37Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/Dropship.java", "diffHunk": "@@ -1894,5 +1894,64 @@ public void addBattleForceSpecialAbilities(Map<BattleForceSPA,Integer> specialAb\n             specialAbilities.put(BattleForceSPA.CRW, (int)Math.round(getNCrew() / 60.0));\n         }\n     }\n+    \n+    @Override\n+    public boolean canChangeSecondaryFacing() {\n+    \t// flying dropships can execute the \"ECHO\" maneuver (stratops 113), aka a torso twist, \n+    \t// if they have the MP for it\n+    \treturn isAirborne() && !isEvading() && (mpUsed <= getRunMP() - 2);\n+    }\n+\n+    /**\n+     * Can this dropship \"torso twist\" in the given direction?\n+     */\n+    @Override\n+    public boolean isValidSecondaryFacing(int dir) {\n+        int rotate = dir - getFacing();\n+        if (canChangeSecondaryFacing()) {\n+            return (rotate == 0) || (rotate == 1) || (rotate == -1)\n+                    || (rotate == -5) || (rotate == 5);\n+        }\n+        return rotate == 0;\n+    }\n+\n+    /**\n+     * Return the nearest valid direction to \"torso twist\" in\n+     */\n+    @Override\n+    public int clipSecondaryFacing(int dir) {\n+        if (isValidSecondaryFacing(dir)) {\n+            return dir;\n+        }\n+        \n+        // can't twist without enough MP\n+        if (!canChangeSecondaryFacing()) {\n+            return getFacing();\n+        }\n+        // otherwise, twist once in the appropriate direction\n+        final int rotate = (dir + (6 - getFacing())) % 6;\n+\n+        return rotate >= 3 ? (getFacing() + 5) % 6 : (getFacing() + 1) % 6;\n+    }\n+    \n+    @Override\n+    public void newRound(int roundNumber) {\n+    \tsuper.newRound(roundNumber);\n+    \t\n+    \tif(getGame().useVectorMove()) {\n+    \t\tsetFacing(getSecondaryFacing());\n+    \t}\n+    \t\n+    \tsetSecondaryFacing(getFacing());\n+    }\n+    \n+    /**\n+     * Utility function that handles situations where a facing change\n+     * has some kind of permanent effect on the entity.\n+     */\n+    @Override\n+    public void postProcessFacingChange() {\n+    \tmpUsed += 2;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7ec795976f4d8057a91b8e3797340d14ae6549f"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NDc0OTI0OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/actions/WeaponAttackAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0NzowNVrOHBUwjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0NzowNVrOHBUwjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1MDczMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if ((aero instanceof Warship || aero instanceof Dropship) &&\n          \n          \n            \n                        \t\taero.getFacing() != aero.getSecondaryFacing()) {\n          \n          \n            \n                        if (((aero instanceof Warship) || (aero instanceof Dropship)) &&\n          \n          \n            \n                        \t\t(aero.getFacing() != aero.getSecondaryFacing())) {", "url": "https://github.com/MegaMek/megamek/pull/2149#discussion_r471150733", "createdAt": "2020-08-16T19:47:05Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/actions/WeaponAttackAction.java", "diffHunk": "@@ -3748,6 +3749,19 @@ private static ToHitData compileAeroAttackerToHitMods(IGame game, Entity ae, Tar\n                             || wtype.getAtClass() == WeaponType.CLASS_TELE_MISSILE))) {\n                 toHit.addModifier(+2, Messages.getString(\"WeaponAttackAction.AeEvading\"));\n             }\n+            \n+            // stratops page 113: ECHO maneuvers for large craft\n+            if ((aero instanceof Warship || aero instanceof Dropship) &&\n+            \t\taero.getFacing() != aero.getSecondaryFacing()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7ec795976f4d8057a91b8e3797340d14ae6549f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NDc0OTQ0OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/actions/WeaponAttackAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0NzoyN1rOHBUwpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0NzoyN1rOHBUwpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1MDc1OQ==", "bodyText": "Tab spacing needs to be fixed.", "url": "https://github.com/MegaMek/megamek/pull/2149#discussion_r471150759", "createdAt": "2020-08-16T19:47:27Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/actions/WeaponAttackAction.java", "diffHunk": "@@ -3748,6 +3749,19 @@ private static ToHitData compileAeroAttackerToHitMods(IGame game, Entity ae, Tar\n                             || wtype.getAtClass() == WeaponType.CLASS_TELE_MISSILE))) {\n                 toHit.addModifier(+2, Messages.getString(\"WeaponAttackAction.AeEvading\"));\n             }\n+            \n+            // stratops page 113: ECHO maneuvers for large craft\n+            if ((aero instanceof Warship || aero instanceof Dropship) &&\n+            \t\taero.getFacing() != aero.getSecondaryFacing()) {\n+            \t// if we're computing this for an \"attack preview\", then we add 2 MP to \n+            \t// the mp used, as we haven't used the MP yet. If we're actually processing\n+            \t// the attack, then the entity will be marked as 'done' and we have already added\n+            \t// the 2 MP, so we don't need to double-count it\n+            \tint extraMP = aero.isDone() ? 0 : 2;\n+            \tboolean willUseRunMP = aero.mpUsed + extraMP > aero.getWalkMP();\n+            \tint mod = willUseRunMP ? 2 : 1;\n+            \ttoHit.addModifier(mod, Messages.getString(\"WeaponAttackAction.LargeCraftEcho\"));\n+            }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7ec795976f4d8057a91b8e3797340d14ae6549f"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NDc0OTc3OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/Warship.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0Nzo1M1rOHBUw0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0Nzo1M1rOHBUw0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1MDgwMg==", "bodyText": "tab spacing", "url": "https://github.com/MegaMek/megamek/pull/2149#discussion_r471150802", "createdAt": "2020-08-16T19:47:53Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/Warship.java", "diffHunk": "@@ -565,4 +565,66 @@ public String getAlphaStrikeLocationName(int index) {\n     public long getEntityType(){\n         return Entity.ETYPE_AERO | Entity.ETYPE_JUMPSHIP | Entity.ETYPE_WARSHIP;\n     }\n+    \n+    @Override\n+    public boolean canChangeSecondaryFacing() {\n+    \t// flying dropships can execute the \"ECHO\" maneuver (stratops 113), aka a torso twist, \n+    \t// if they have the MP for it\n+    \treturn isAirborne() && !isEvading() && (mpUsed <= getRunMP() - 2);\n+    }\n+\n+    /**\n+     * Can this dropship \"torso twist\" in the given direction?\n+     */\n+    @Override\n+    public boolean isValidSecondaryFacing(int dir) {\n+        int rotate = dir - getFacing();\n+        if (canChangeSecondaryFacing()) {\n+            return (rotate == 0) || (rotate == 1) || (rotate == -1)\n+                    || (rotate == -5) || (rotate == 5);\n+        }\n+        return rotate == 0;\n+    }\n+\n+    /**\n+     * Return the nearest valid direction to \"torso twist\" in\n+     */\n+    @Override\n+    public int clipSecondaryFacing(int dir) {\n+        if (isValidSecondaryFacing(dir)) {\n+            return dir;\n+        }\n+        \n+        // can't twist without enough MP\n+        if (!canChangeSecondaryFacing()) {\n+            return getFacing();\n+        }\n+        // otherwise, twist once in the appropriate direction\n+        final int rotate = (dir + (6 - getFacing())) % 6;\n+\n+        return rotate >= 3 ? (getFacing() + 5) % 6 : (getFacing() + 1) % 6;\n+    }\n+    \n+    /**\n+     * Handler for when the entity enters a new round\n+     */\n+    @Override\n+    public void newRound(int roundNumber) {\n+    \tsuper.newRound(roundNumber);\n+    \t\n+    \tif(getGame().useVectorMove()) {\n+    \t\tsetFacing(getSecondaryFacing());\n+    \t}\n+    \t\n+    \tsetSecondaryFacing(getFacing());\n+    }\n+    \n+    /**\n+     * Utility function that handles situations where a facing change\n+     * has some kind of permanent effect on the entity.\n+     */\n+    @Override\n+    public void postProcessFacingChange() {\n+    \tmpUsed += 2;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7ec795976f4d8057a91b8e3797340d14ae6549f"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NDc0OTgwOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/Warship.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0ODowMVrOHBUw1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxOTo0ODowMVrOHBUw1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1MDgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \tif(getGame().useVectorMove()) {\n          \n          \n            \n                \tif (getGame().useVectorMove()) {", "url": "https://github.com/MegaMek/megamek/pull/2149#discussion_r471150806", "createdAt": "2020-08-16T19:48:01Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/Warship.java", "diffHunk": "@@ -565,4 +565,66 @@ public String getAlphaStrikeLocationName(int index) {\n     public long getEntityType(){\n         return Entity.ETYPE_AERO | Entity.ETYPE_JUMPSHIP | Entity.ETYPE_WARSHIP;\n     }\n+    \n+    @Override\n+    public boolean canChangeSecondaryFacing() {\n+    \t// flying dropships can execute the \"ECHO\" maneuver (stratops 113), aka a torso twist, \n+    \t// if they have the MP for it\n+    \treturn isAirborne() && !isEvading() && (mpUsed <= getRunMP() - 2);\n+    }\n+\n+    /**\n+     * Can this dropship \"torso twist\" in the given direction?\n+     */\n+    @Override\n+    public boolean isValidSecondaryFacing(int dir) {\n+        int rotate = dir - getFacing();\n+        if (canChangeSecondaryFacing()) {\n+            return (rotate == 0) || (rotate == 1) || (rotate == -1)\n+                    || (rotate == -5) || (rotate == 5);\n+        }\n+        return rotate == 0;\n+    }\n+\n+    /**\n+     * Return the nearest valid direction to \"torso twist\" in\n+     */\n+    @Override\n+    public int clipSecondaryFacing(int dir) {\n+        if (isValidSecondaryFacing(dir)) {\n+            return dir;\n+        }\n+        \n+        // can't twist without enough MP\n+        if (!canChangeSecondaryFacing()) {\n+            return getFacing();\n+        }\n+        // otherwise, twist once in the appropriate direction\n+        final int rotate = (dir + (6 - getFacing())) % 6;\n+\n+        return rotate >= 3 ? (getFacing() + 5) % 6 : (getFacing() + 1) % 6;\n+    }\n+    \n+    /**\n+     * Handler for when the entity enters a new round\n+     */\n+    @Override\n+    public void newRound(int roundNumber) {\n+    \tsuper.newRound(roundNumber);\n+    \t\n+    \tif(getGame().useVectorMove()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7ec795976f4d8057a91b8e3797340d14ae6549f"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2653, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}