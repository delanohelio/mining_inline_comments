{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MjQ3Njg2", "number": 1921, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODoxMDozMlrOD575Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDoxNDowNVrOD6RMPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDc2NzIyOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/AmmoType.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODoxMDozMlrOGRfUsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxOTowOTo0OFrOGRhghA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5MjE3OQ==", "bodyText": "I'm almost certain this will cause issues relating to being able to reuse AC2 ammo for AC20, etc.", "url": "https://github.com/MegaMek/megamek/pull/1921#discussion_r420992179", "createdAt": "2020-05-06T18:10:32Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/AmmoType.java", "diffHunk": "@@ -402,30 +402,43 @@ public boolean equals(Object other) {\n         }\n         // there a couple of flags that need to be checked\n         if (getAmmoType() == T_MML) {\n-            if (hasFlag(F_MML_LRM) != ((AmmoType) other).hasFlag(F_MML_LRM)) {\n+            if (!matchingMMLFlags((AmmoType) other)) {\n                 return false;\n             }\n         }\n         if (getAmmoType() == T_AR10) {\n-            if (hasFlag(F_AR10_BARRACUDA) != ((AmmoType) other)\n-                    .hasFlag(F_AR10_BARRACUDA)) {\n+            if (!matchingAR10Flags((AmmoType) other)) {\n                 return false;\n             }\n-            if (hasFlag(F_AR10_WHITE_SHARK) != ((AmmoType) other)\n-                    .hasFlag(F_AR10_WHITE_SHARK)) {\n-                return false;\n-            }\n-            if (hasFlag(F_AR10_KILLER_WHALE) != ((AmmoType) other)\n-                    .hasFlag(F_AR10_KILLER_WHALE)) {\n+        }\n+        return ((getAmmoType() == ((AmmoType) other).getAmmoType()) && (getRackSize() == ((AmmoType) other)\n+                .getRackSize()));\n+    }\n+\n+    /**\n+     * When comparing <code>AmmoType</code>s, look at the ammoType only.\n+     *\n+     * @param other the <code>Object</code> to compare to this one.\n+     * @return <code>true</code> if the other is an <code>AmmoType</code> object\n+     *         of the same <code>ammoType</code> as this object. N.B. different\n+     *         munition types are still equal.\n+     */\n+    public boolean equalsAmmoTypeOnly(Object other) {\n+        if (!(other instanceof AmmoType)) {\n+            return false;\n+        }\n+        // there a couple of flags that need to be checked\n+        if (getAmmoType() == T_MML) {\n+            if (!matchingMMLFlags((AmmoType) other)) {\n                 return false;\n             }\n-            if (hasFlag(F_NUCLEAR) != ((AmmoType) other)\n-                    .hasFlag(F_NUCLEAR)) {\n+        }\n+        if (getAmmoType() == T_AR10) {\n+            if (!matchingAR10Flags((AmmoType) other)) {\n                 return false;\n             }\n         }\n-        return ((getAmmoType() == ((AmmoType) other).getAmmoType()) && (getRackSize() == ((AmmoType) other)\n-                .getRackSize()));\n+        return getAmmoType() == ((AmmoType) other).getAmmoType();\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bc3ba4e3e0b1f2f46dd105dfd887947e0ecd95d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5Njg3NA==", "bodyText": "Actually you might be right I forgot to test that use case. Let me setup a new test campaign. My debug sessions were following the code path of missile racks and not ACs. The Acs might eventually reach the same predicate and use the new equals method which would cause a different bug.", "url": "https://github.com/MegaMek/megamek/pull/1921#discussion_r420996874", "createdAt": "2020-05-06T18:18:15Z", "author": {"login": "ChaoticInsanity"}, "path": "megamek/src/megamek/common/AmmoType.java", "diffHunk": "@@ -402,30 +402,43 @@ public boolean equals(Object other) {\n         }\n         // there a couple of flags that need to be checked\n         if (getAmmoType() == T_MML) {\n-            if (hasFlag(F_MML_LRM) != ((AmmoType) other).hasFlag(F_MML_LRM)) {\n+            if (!matchingMMLFlags((AmmoType) other)) {\n                 return false;\n             }\n         }\n         if (getAmmoType() == T_AR10) {\n-            if (hasFlag(F_AR10_BARRACUDA) != ((AmmoType) other)\n-                    .hasFlag(F_AR10_BARRACUDA)) {\n+            if (!matchingAR10Flags((AmmoType) other)) {\n                 return false;\n             }\n-            if (hasFlag(F_AR10_WHITE_SHARK) != ((AmmoType) other)\n-                    .hasFlag(F_AR10_WHITE_SHARK)) {\n-                return false;\n-            }\n-            if (hasFlag(F_AR10_KILLER_WHALE) != ((AmmoType) other)\n-                    .hasFlag(F_AR10_KILLER_WHALE)) {\n+        }\n+        return ((getAmmoType() == ((AmmoType) other).getAmmoType()) && (getRackSize() == ((AmmoType) other)\n+                .getRackSize()));\n+    }\n+\n+    /**\n+     * When comparing <code>AmmoType</code>s, look at the ammoType only.\n+     *\n+     * @param other the <code>Object</code> to compare to this one.\n+     * @return <code>true</code> if the other is an <code>AmmoType</code> object\n+     *         of the same <code>ammoType</code> as this object. N.B. different\n+     *         munition types are still equal.\n+     */\n+    public boolean equalsAmmoTypeOnly(Object other) {\n+        if (!(other instanceof AmmoType)) {\n+            return false;\n+        }\n+        // there a couple of flags that need to be checked\n+        if (getAmmoType() == T_MML) {\n+            if (!matchingMMLFlags((AmmoType) other)) {\n                 return false;\n             }\n-            if (hasFlag(F_NUCLEAR) != ((AmmoType) other)\n-                    .hasFlag(F_NUCLEAR)) {\n+        }\n+        if (getAmmoType() == T_AR10) {\n+            if (!matchingAR10Flags((AmmoType) other)) {\n                 return false;\n             }\n         }\n-        return ((getAmmoType() == ((AmmoType) other).getAmmoType()) && (getRackSize() == ((AmmoType) other)\n-                .getRackSize()));\n+        return getAmmoType() == ((AmmoType) other).getAmmoType();\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5MjE3OQ=="}, "originalCommit": {"oid": "9bc3ba4e3e0b1f2f46dd105dfd887947e0ecd95d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyNzk3Mg==", "bodyText": "You were absolutely correct about the AC ammo. I have made a change in MekHQ so the predicate is based on the AMMO_BY_TYPE set. With this adjustment AC ammo is being compared correctly.", "url": "https://github.com/MegaMek/megamek/pull/1921#discussion_r421027972", "createdAt": "2020-05-06T19:09:48Z", "author": {"login": "ChaoticInsanity"}, "path": "megamek/src/megamek/common/AmmoType.java", "diffHunk": "@@ -402,30 +402,43 @@ public boolean equals(Object other) {\n         }\n         // there a couple of flags that need to be checked\n         if (getAmmoType() == T_MML) {\n-            if (hasFlag(F_MML_LRM) != ((AmmoType) other).hasFlag(F_MML_LRM)) {\n+            if (!matchingMMLFlags((AmmoType) other)) {\n                 return false;\n             }\n         }\n         if (getAmmoType() == T_AR10) {\n-            if (hasFlag(F_AR10_BARRACUDA) != ((AmmoType) other)\n-                    .hasFlag(F_AR10_BARRACUDA)) {\n+            if (!matchingAR10Flags((AmmoType) other)) {\n                 return false;\n             }\n-            if (hasFlag(F_AR10_WHITE_SHARK) != ((AmmoType) other)\n-                    .hasFlag(F_AR10_WHITE_SHARK)) {\n-                return false;\n-            }\n-            if (hasFlag(F_AR10_KILLER_WHALE) != ((AmmoType) other)\n-                    .hasFlag(F_AR10_KILLER_WHALE)) {\n+        }\n+        return ((getAmmoType() == ((AmmoType) other).getAmmoType()) && (getRackSize() == ((AmmoType) other)\n+                .getRackSize()));\n+    }\n+\n+    /**\n+     * When comparing <code>AmmoType</code>s, look at the ammoType only.\n+     *\n+     * @param other the <code>Object</code> to compare to this one.\n+     * @return <code>true</code> if the other is an <code>AmmoType</code> object\n+     *         of the same <code>ammoType</code> as this object. N.B. different\n+     *         munition types are still equal.\n+     */\n+    public boolean equalsAmmoTypeOnly(Object other) {\n+        if (!(other instanceof AmmoType)) {\n+            return false;\n+        }\n+        // there a couple of flags that need to be checked\n+        if (getAmmoType() == T_MML) {\n+            if (!matchingMMLFlags((AmmoType) other)) {\n                 return false;\n             }\n-            if (hasFlag(F_NUCLEAR) != ((AmmoType) other)\n-                    .hasFlag(F_NUCLEAR)) {\n+        }\n+        if (getAmmoType() == T_AR10) {\n+            if (!matchingAR10Flags((AmmoType) other)) {\n                 return false;\n             }\n         }\n-        return ((getAmmoType() == ((AmmoType) other).getAmmoType()) && (getRackSize() == ((AmmoType) other)\n-                .getRackSize()));\n+        return getAmmoType() == ((AmmoType) other).getAmmoType();\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5MjE3OQ=="}, "originalCommit": {"oid": "9bc3ba4e3e0b1f2f46dd105dfd887947e0ecd95d"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDI1NjYyOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/AmmoType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDoxNDowNVrOGSAl3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDoxNDowNVrOGSAl3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzNzI0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/MegaMek/megamek/pull/1921#discussion_r421537245", "createdAt": "2020-05-07T14:14:05Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/AmmoType.java", "diffHunk": "@@ -397,6 +397,20 @@ public AmmoType() {\n      */\n     @Override\n     public boolean equals(Object other) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254788ab20c326a2e8e2968cbfb57107a90edd4c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2772, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}