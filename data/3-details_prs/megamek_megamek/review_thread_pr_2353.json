{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NTI2MTE3", "number": 2353, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMToyNTozNlrOExKj2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMTozMTozOVrOExKrXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTg4Njk2OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/ChatLounge.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMToyNTozNlrOHnJyoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNjowNDo1M1rOHnUOEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxNjkyOQ==", "bodyText": "Those are oddly specific values. Should they be named?", "url": "https://github.com/MegaMek/megamek/pull/2353#discussion_r510816929", "createdAt": "2020-10-23T11:25:36Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/client/ui/swing/ChatLounge.java", "diffHunk": "@@ -3483,7 +3483,7 @@ public Component getTableCellRendererComponent(JTable table, Object value, boole\n                         if (compact) {\n                             clearImage();\n                         } else {\n-                            setPortrait(entity.getCrew());\n+                            setImage(entity.getCrew().getPortrait(0).getImage(50));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1971c3f58e02d62c899442df14d9c4ae82bc46fc"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk3MTI2NQ==", "bodyText": "We don't name sizes currently, so I would say not", "url": "https://github.com/MegaMek/megamek/pull/2353#discussion_r510971265", "createdAt": "2020-10-23T15:37:51Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/ChatLounge.java", "diffHunk": "@@ -3483,7 +3483,7 @@ public Component getTableCellRendererComponent(JTable table, Object value, boole\n                         if (compact) {\n                             clearImage();\n                         } else {\n-                            setPortrait(entity.getCrew());\n+                            setImage(entity.getCrew().getPortrait(0).getImage(50));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxNjkyOQ=="}, "originalCommit": {"oid": "1971c3f58e02d62c899442df14d9c4ae82bc46fc"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk4Nzc5NQ==", "bodyText": "Wasn't obvious that was the square size, makes sense now.", "url": "https://github.com/MegaMek/megamek/pull/2353#discussion_r510987795", "createdAt": "2020-10-23T16:04:53Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/client/ui/swing/ChatLounge.java", "diffHunk": "@@ -3483,7 +3483,7 @@ public Component getTableCellRendererComponent(JTable table, Object value, boole\n                         if (compact) {\n                             clearImage();\n                         } else {\n-                            setPortrait(entity.getCrew());\n+                            setImage(entity.getCrew().getPortrait(0).getImage(50));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxNjkyOQ=="}, "originalCommit": {"oid": "1971c3f58e02d62c899442df14d9c4ae82bc46fc"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTkwNjIxOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/dialog/imageChooser/AbstractIconRenderer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMTozMTozOVrOHnJ-EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNjo0NDoyNlrOHnVkxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxOTg1Nw==", "bodyText": "I'm sure this was inherited, but this doesn't remove a file extension.", "url": "https://github.com/MegaMek/megamek/pull/2353#discussion_r510819857", "createdAt": "2020-10-23T11:31:39Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/client/ui/swing/dialog/imageChooser/AbstractIconRenderer.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MegaMek.\n+ *\n+ * MegaMek is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MegaMek is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MegaMek. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package megamek.client.ui.swing.dialog.imageChooser;\n+\n+import megamek.common.icons.AbstractIcon;\n+\n+import javax.swing.*;\n+import javax.swing.border.EmptyBorder;\n+import java.awt.*;\n+\n+public class AbstractIconRenderer extends JPanel implements ListCellRenderer<AbstractIcon> {\n+    /** Image file extensions, .jpg .jpeg .png .gif */\n+    protected static final String[] EXTENSIONS = {\".png\", \".jpg\", \".jpeg\", \".gif\"};\n+\n+    /** This JLabel displays the selectable image */\n+    protected JLabel lblImage = new JLabel();\n+\n+    /** This JLabel displays the name of the selectable image */\n+    protected JLabel lblText = new JLabel();\n+\n+    /** The tooltip to be displayed */\n+    protected String tip = \"\";\n+\n+    public AbstractIconRenderer() {\n+        setBorder(new EmptyBorder(10, 10, 10, 10));\n+        setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));\n+        add(lblImage);\n+        add(lblText);\n+    }\n+\n+    /**\n+     * Sets the image based on the passed category and name from\n+     * the DirectoryItems that the list currently displays.\n+     */\n+    private void setImage(AbstractIcon icon) {\n+        lblImage.setIcon(icon.getImageIcon());\n+        tip = \"<HTML><BODY>\" + icon.getCategory() + \"<BR>\" + icon.getFilename();\n+    }\n+\n+    @Override\n+    public String getToolTipText() {\n+        return tip;\n+    }\n+\n+    /** Sets the label text of the image, removing the file extension. */\n+    private void setText(String text) {\n+        // Remove the file extension\n+        for (String ext: EXTENSIONS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1971c3f58e02d62c899442df14d9c4ae82bc46fc"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAwNTY1MA==", "bodyText": "From testing it does, however I'd say the extension is required because it is entirely valid to have Male_1.gif and Male_1.jpg as two distinct files in our setup. I've pushed a commit to handle this.", "url": "https://github.com/MegaMek/megamek/pull/2353#discussion_r511005650", "createdAt": "2020-10-23T16:36:31Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/dialog/imageChooser/AbstractIconRenderer.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MegaMek.\n+ *\n+ * MegaMek is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MegaMek is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MegaMek. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package megamek.client.ui.swing.dialog.imageChooser;\n+\n+import megamek.common.icons.AbstractIcon;\n+\n+import javax.swing.*;\n+import javax.swing.border.EmptyBorder;\n+import java.awt.*;\n+\n+public class AbstractIconRenderer extends JPanel implements ListCellRenderer<AbstractIcon> {\n+    /** Image file extensions, .jpg .jpeg .png .gif */\n+    protected static final String[] EXTENSIONS = {\".png\", \".jpg\", \".jpeg\", \".gif\"};\n+\n+    /** This JLabel displays the selectable image */\n+    protected JLabel lblImage = new JLabel();\n+\n+    /** This JLabel displays the name of the selectable image */\n+    protected JLabel lblText = new JLabel();\n+\n+    /** The tooltip to be displayed */\n+    protected String tip = \"\";\n+\n+    public AbstractIconRenderer() {\n+        setBorder(new EmptyBorder(10, 10, 10, 10));\n+        setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));\n+        add(lblImage);\n+        add(lblText);\n+    }\n+\n+    /**\n+     * Sets the image based on the passed category and name from\n+     * the DirectoryItems that the list currently displays.\n+     */\n+    private void setImage(AbstractIcon icon) {\n+        lblImage.setIcon(icon.getImageIcon());\n+        tip = \"<HTML><BODY>\" + icon.getCategory() + \"<BR>\" + icon.getFilename();\n+    }\n+\n+    @Override\n+    public String getToolTipText() {\n+        return tip;\n+    }\n+\n+    /** Sets the label text of the image, removing the file extension. */\n+    private void setText(String text) {\n+        // Remove the file extension\n+        for (String ext: EXTENSIONS) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxOTg1Nw=="}, "originalCommit": {"oid": "1971c3f58e02d62c899442df14d9c4ae82bc46fc"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAwOTk5MQ==", "bodyText": "More I meant it just rips out any text match rather than the actual file extension.", "url": "https://github.com/MegaMek/megamek/pull/2353#discussion_r511009991", "createdAt": "2020-10-23T16:44:26Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/client/ui/swing/dialog/imageChooser/AbstractIconRenderer.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MegaMek.\n+ *\n+ * MegaMek is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MegaMek is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MegaMek. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package megamek.client.ui.swing.dialog.imageChooser;\n+\n+import megamek.common.icons.AbstractIcon;\n+\n+import javax.swing.*;\n+import javax.swing.border.EmptyBorder;\n+import java.awt.*;\n+\n+public class AbstractIconRenderer extends JPanel implements ListCellRenderer<AbstractIcon> {\n+    /** Image file extensions, .jpg .jpeg .png .gif */\n+    protected static final String[] EXTENSIONS = {\".png\", \".jpg\", \".jpeg\", \".gif\"};\n+\n+    /** This JLabel displays the selectable image */\n+    protected JLabel lblImage = new JLabel();\n+\n+    /** This JLabel displays the name of the selectable image */\n+    protected JLabel lblText = new JLabel();\n+\n+    /** The tooltip to be displayed */\n+    protected String tip = \"\";\n+\n+    public AbstractIconRenderer() {\n+        setBorder(new EmptyBorder(10, 10, 10, 10));\n+        setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));\n+        add(lblImage);\n+        add(lblText);\n+    }\n+\n+    /**\n+     * Sets the image based on the passed category and name from\n+     * the DirectoryItems that the list currently displays.\n+     */\n+    private void setImage(AbstractIcon icon) {\n+        lblImage.setIcon(icon.getImageIcon());\n+        tip = \"<HTML><BODY>\" + icon.getCategory() + \"<BR>\" + icon.getFilename();\n+    }\n+\n+    @Override\n+    public String getToolTipText() {\n+        return tip;\n+    }\n+\n+    /** Sets the label text of the image, removing the file extension. */\n+    private void setText(String text) {\n+        // Remove the file extension\n+        for (String ext: EXTENSIONS) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxOTg1Nw=="}, "originalCommit": {"oid": "1971c3f58e02d62c899442df14d9c4ae82bc46fc"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2583, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}