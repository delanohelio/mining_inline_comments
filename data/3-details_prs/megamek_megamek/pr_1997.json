{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNTE3NDE3", "number": 1997, "title": "long range bridge + deep water handling", "bodyText": "Three changes:\n\n\nlong range path clipping would get \"stuck\" on hostile units if the moving entity could enter the hex - since you can't both enter and exit a hostile unit's hex on the same turn, we need to apply \"decorations\" to the hex prior to the hostile entity, so that we can go around it.\n\n\nbridges (and theoretically building tops, but we're skipping that for now) higher than 2 hexes off the ground wouldn't correctly join movable area clusters. Required some data structure changes but now bot units properly consider \"tall\" bridges.\n\n\njumping units are discouraged from completely submerging themselves at the end of a jump", "createdAt": "2020-06-09T03:43:42Z", "url": "https://github.com/MegaMek/megamek/pull/1997", "merged": true, "mergeCommit": {"oid": "ce657c0aad0e7e5e5260b48a03887c56b8fb21de"}, "closed": true, "closedAt": "2020-06-15T21:08:47Z", "author": {"login": "NickAragua"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpcnoAAH2gAyNDMxNTE3NDE3OjkzYTE0NzkxMWE1NjhkZGU3NTI0NDQ5NDA5NzdhMTZjMzdlZTA5YmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrnP0UAH2gAyNDMxNTE3NDE3OmRlYmNhMGM3ZjE4YTZkMGJhY2FmNzViMjc0YTVlODJlZWM2N2U2MmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "93a147911a568dde752444940977a16c37ee09bf", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/93a147911a568dde752444940977a16c37ee09bf", "committedDate": "2020-06-09T03:37:36Z", "message": "long range bridge + deep water handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NzY4NTA2", "url": "https://github.com/MegaMek/megamek/pull/1997#pullrequestreview-426768506", "createdAt": "2020-06-09T03:44:09Z", "commit": {"oid": "93a147911a568dde752444940977a16c37ee09bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzo0NDowOVrOGg3v-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzo0NDowOVrOGg3v-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEyMTAxOA==", "bodyText": "it occurs to me that we should forego this discount if jumping onto a bridge.", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r437121018", "createdAt": "2020-06-09T03:44:09Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/BulldozerMovePath.java", "diffHunk": "@@ -93,15 +96,24 @@ public MovePath addStep(final MoveStepType type) {\n             // we want to make note of when we're going into water (if we are capable of it)\n             // it may look cheaper, but it slows you down to max walking speed or worse, \n             // and we should flag it as costing extra, that extra being the difference between walking and running speed\n-            IHex hex = mp.getGame().getBoard().getHex(mp.getFinalCoords());\n-            if((hex != null) && hex.containsTerrain(Terrains.WATER) && (hex.depth() > 0)) {\n+            if(hexWaterDepth > 0) {\n                 MovementType mType = MovementType.getMovementType(mp.getEntity());\n                 if(mType == MovementType.Walker || mType == MovementType.WheeledAmphi || mType == MovementType.TrackedAmphi) {\n                     additionalCosts.put(mp.getFinalCoords(), 1);\n                 }\n             }\n         }\n \n+        if (mp.isJumping()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a147911a568dde752444940977a16c37ee09bf"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e3d9bab2b1f8f437ad56d684f2104103a1a97cd", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/3e3d9bab2b1f8f437ad56d684f2104103a1a97cd", "committedDate": "2020-06-10T00:55:22Z", "message": "fix a few more issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc", "committedDate": "2020-06-14T02:23:32Z", "message": "fix many bridge issues; refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjQzMzcz", "url": "https://github.com/MegaMek/megamek/pull/1997#pullrequestreview-430243373", "createdAt": "2020-06-14T19:03:10Z", "commit": {"oid": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxOTowMzoxMVrOGje1XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxOToxNDo1N1rOGje4pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1ODUyNQ==", "bodyText": "Should one of these be F_LIMITED_AMPHIBIOUS?", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r439858525", "createdAt": "2020-06-14T19:03:11Z", "author": {"login": "neoancient"}, "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "diffHunk": "@@ -90,4 +93,25 @@ public boolean hasWorkingMisc(BigInteger flag) {\n         \n         return hasWorkingMisc.get(flag);\n     }\n+    \n+    public int getTorsoJumpJets() {\n+        if(torsoJumpJets == null) {\n+            if(backingEntity instanceof Mech) {\n+                torsoJumpJets = ((Mech) backingEntity).torsoJumpJets();\n+            } else {\n+                torsoJumpJets = 0;\n+            }\n+        }\n+        \n+        return torsoJumpJets;\n+    }\n+    \n+    /**\n+     * Convenience property to determine if the backing entity is amphibious.\n+     */\n+    public boolean isAmphibious() {\n+        return hasWorkingMisc(MiscType.F_FULLY_AMPHIBIOUS) || \n+                hasWorkingMisc(MiscType.F_AMPHIBIOUS) ||\n+                hasWorkingMisc(MiscType.F_FULLY_AMPHIBIOUS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1ODgyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public int compare(BulldozerMovePath first, BulldozerMovePath second) {\n          \n          \n            \n                    @Override\n          \n          \n            \n                    public int compare(BulldozerMovePath first, BulldozerMovePath second) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r439858823", "createdAt": "2020-06-14T19:07:05Z", "author": {"login": "neoancient"}, "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -235,14 +261,14 @@ public AStarComparator(Coords destination) {\n          * Favors paths that move closer to the destination edge first.\n          * in case of tie, favors paths that cost less MP\n          */\n-        public int compare(BulldozerMovePath first, BulldozerMovePath second) {            \n+        public int compare(BulldozerMovePath first, BulldozerMovePath second) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1OTA0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return\n          \n          \n            \n                 * @param ignore\n          \n          \n            \n                 * @return\n          \n      \n    \n    \n  \n\nAlso needs descriptive text for the parameters", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r439859046", "createdAt": "2020-06-14T19:10:21Z", "author": {"login": "neoancient"}, "path": "megamek/src/megamek/common/pathfinder/ShortestPathFinder.java", "diffHunk": "@@ -370,13 +370,9 @@ public static int getFacingDiff(final MovePath mp, Coords dest,\n      * @param board\n      * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1OTM2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public MovePath calculateDestructionAwarePath(Coords dest) {\n          \n          \n            \n                @SuppressWarnings(\"unused\")\n          \n          \n            \n                public MovePath calculateDestructionAwarePath(Coords dest) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r439859366", "createdAt": "2020-06-14T19:14:57Z", "author": {"login": "neoancient"}, "path": "megamek/src/megamek/common/MovePath.java", "diffHunk": "@@ -1841,16 +1841,16 @@ public boolean nextForwardStepOffBoard() {\n     public MovePath calculateDestructionAwarePath(Coords dest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2ab8a76a62b3394d8820440558518698935aa98", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/e2ab8a76a62b3394d8820440558518698935aa98", "committedDate": "2020-06-14T21:20:38Z", "message": "Apply suggestions from code review\n\nCo-authored-by: neoancient <neoancient@megamek.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e075805c0bd3c012cb0f4a8e0bc13024fa9009a0", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/e075805c0bd3c012cb0f4a8e0bc13024fa9009a0", "committedDate": "2020-06-14T21:21:21Z", "message": "Update CachedEntityState.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "committedDate": "2020-06-14T21:23:18Z", "message": "Update ShortestPathFinder.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzI1MTQy", "url": "https://github.com/MegaMek/megamek/pull/1997#pullrequestreview-430725142", "createdAt": "2020-06-15T14:56:20Z", "commit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzM3MTk4", "url": "https://github.com/MegaMek/megamek/pull/1997#pullrequestreview-430737198", "createdAt": "2020-06-15T15:08:55Z", "commit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "state": "APPROVED", "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowODo1NVrOGj2fDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNToxNjowOFrOGj2zxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NjAyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for(Coords coords : cluster.contents.keySet()) {\n          \n          \n            \n                        for (Coords coords : cluster.contents.keySet()) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440246028", "createdAt": "2020-06-15T15:08:55Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/boardview/BoardView1.java", "diffHunk": "@@ -1480,13 +1480,13 @@ private void renderDonut(Graphics2D g, Coords coords, int radius) {\n     @SuppressWarnings(\"unused\")\n     private void renderClusters(Graphics2D g) {\n         BoardClusterTracker bct = new BoardClusterTracker();\n-        Map<Coords, BoardCluster> clusterMap = bct.generateClusters(selectedEntity, false);\n+        Map<Coords, BoardCluster> clusterMap = bct.generateClusters(selectedEntity, false, true);\n         \n         for(BoardCluster cluster : clusterMap.values().stream().distinct().collect(Collectors.toList())) {\n-            for(Coords coords : cluster.contents) {\n+            for(Coords coords : cluster.contents.keySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NjI2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    int hexWaterDepth = (hex != null) && hex.containsTerrain(Terrains.WATER) ?\n          \n          \n            \n                    int hexWaterDepth = ((hex != null) && hex.containsTerrain(Terrains.WATER)) ?", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440246261", "createdAt": "2020-06-15T15:09:19Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/BulldozerMovePath.java", "diffHunk": "@@ -78,7 +78,10 @@ public int getLevelingCost() {\n     @Override\n     public MovePath addStep(final MoveStepType type) {\n         BulldozerMovePath mp = (BulldozerMovePath) super.addStep(type);\n-\n+        IHex hex = mp.getGame().getBoard().getHex(mp.getFinalCoords());\n+        int hexWaterDepth = (hex != null) && hex.containsTerrain(Terrains.WATER) ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NjU5NA==", "bodyText": "This is a suggestion that I find makes it easier to read the line, but your mileage may vary.", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440246594", "createdAt": "2020-06-15T15:09:48Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/BulldozerMovePath.java", "diffHunk": "@@ -78,7 +78,10 @@ public int getLevelingCost() {\n     @Override\n     public MovePath addStep(final MoveStepType type) {\n         BulldozerMovePath mp = (BulldozerMovePath) super.addStep(type);\n-\n+        IHex hex = mp.getGame().getBoard().getHex(mp.getFinalCoords());\n+        int hexWaterDepth = (hex != null) && hex.containsTerrain(Terrains.WATER) ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NjI2MQ=="}, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NjcwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(hexWaterDepth > 0) {\n          \n          \n            \n                        if (hexWaterDepth > 0) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440246709", "createdAt": "2020-06-15T15:09:59Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/BulldozerMovePath.java", "diffHunk": "@@ -93,15 +96,29 @@ public MovePath addStep(final MoveStepType type) {\n             // we want to make note of when we're going into water (if we are capable of it)\n             // it may look cheaper, but it slows you down to max walking speed or worse, \n             // and we should flag it as costing extra, that extra being the difference between walking and running speed\n-            IHex hex = mp.getGame().getBoard().getHex(mp.getFinalCoords());\n-            if((hex != null) && hex.containsTerrain(Terrains.WATER) && (hex.depth() > 0)) {\n+            if(hexWaterDepth > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NzA2MA==", "bodyText": "Suggested change", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440247060", "createdAt": "2020-06-15T15:10:30Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/Mech.java", "diffHunk": "@@ -211,7 +211,7 @@\n     public static final int HAS_UNKNOWN = 0;\n \n     public static final int HAS_TRUE = 1;\n-\n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NzQ1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if(contents.containsKey(coords)) {\n          \n          \n            \n                                if (contents.containsKey(coords)) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440247457", "createdAt": "2020-06-15T15:11:04Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -363,7 +444,7 @@ public BoardCluster(int id) {\n             for(int x = xStart; x < xEnd; x++) {\n                 for(int y = yStart; y < yEnd; y++) {\n                     Coords coords = new Coords(x, y);\n-                    if(contents.contains(coords)) {\n+                    if(contents.containsKey(coords)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 260}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0ODYyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(terrainReduction) {\n          \n          \n            \n                    if (terrainReduction) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440248623", "createdAt": "2020-06-15T15:12:35Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -94,28 +103,58 @@ public static MovementType getMovementType(Entity entity) {\n     \n     private Map<MovementType, Map<Coords, BoardCluster>> movableAreas = new HashMap<>();\n     private Map<MovementType, Map<Coords, BoardCluster>> movableAreasWithTerrainReduction = new HashMap<>();\n-\n+    private Map<MovementType, Map<Coords, BoardCluster>> movableAreasBridges = new HashMap<>();\n+    private Map<MovementType, Map<Coords, BoardCluster>> movableAreasBridgesWithTerrainReduction = new HashMap<>();\n+    \n     /**\n-     * Returns the terrain-reduced or non-terrain-reduced \n-     * board cluster in which the given entity currently resides\n+     * Returns the size of the biggest terrain-reduced or non-terrain-reduced\n+     * board cluster in which the given coordinates currently reside.\n      */\n-    public BoardCluster getCurrentBoardCluster(Entity entity, boolean terrainReduction) {\n-        return getCurrentBoardCluster(entity, terrainReduction);\n+    public int getBoardClusterSize(Entity entity, Coords actualCoords, boolean terrainReduction) {\n+        MovementType movementType = MovementType.getMovementType(entity);\n+        \n+        updateMovableAreas(entity);\n+        \n+        if(terrainReduction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0OTA3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(retVal.size() == 0) {\n          \n          \n            \n                        if(terrainReduction) {\n          \n          \n            \n                    if (retVal.size() == 0) {\n          \n          \n            \n                        if (terrainReduction) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440249078", "createdAt": "2020-06-15T15:13:14Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -139,11 +178,26 @@ public BoardCluster getCurrentBoardCluster(Entity entity, Coords actualCoords, b\n             entityCluster = movableAreas.get(movementType).get(entity.getPosition());\n         }\n         \n+        Set<Coords> retVal = Collections.emptySet();\n+        \n         if(entityCluster != null) {\n-            return entityCluster.getIntersectingHexes(actualEdge, entity.getGame().getBoard());\n+            retVal = entityCluster.getIntersectingHexes(actualEdge, entity.getGame().getBoard());\n+        }\n+        \n+        // try with bridges\n+        if(retVal.size() == 0) {\n+            if(terrainReduction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0OTIyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(entityCluster != null) {\n          \n          \n            \n                        if (entityCluster != null) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440249223", "createdAt": "2020-06-15T15:13:23Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -139,11 +178,26 @@ public BoardCluster getCurrentBoardCluster(Entity entity, Coords actualCoords, b\n             entityCluster = movableAreas.get(movementType).get(entity.getPosition());\n         }\n         \n+        Set<Coords> retVal = Collections.emptySet();\n+        \n         if(entityCluster != null) {\n-            return entityCluster.getIntersectingHexes(actualEdge, entity.getGame().getBoard());\n+            retVal = entityCluster.getIntersectingHexes(actualEdge, entity.getGame().getBoard());\n+        }\n+        \n+        // try with bridges\n+        if(retVal.size() == 0) {\n+            if(terrainReduction) {\n+                entityCluster = movableAreasBridgesWithTerrainReduction.get(movementType).get(entity.getPosition());\n+            } else {\n+                entityCluster = movableAreasBridges.get(movementType).get(entity.getPosition());\n+            }\n+            \n+            if(entityCluster != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0OTQ1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    canUseBridge && entity.getWeight() <= board.getBuildingAt(c).getCurrentCF(c)) {\n          \n          \n            \n                                    canUseBridge && (entity.getWeight() <= board.getBuildingAt(c).getCurrentCF(c))) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440249452", "createdAt": "2020-06-15T15:13:43Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -208,6 +274,15 @@ public void updateMovableAreas(Entity entity) {\n                     continue;\n                 }\n                 \n+                int myElevation = 0; \n+                        \n+                if (useBridgeTop && board.getHex(c).containsTerrain(Terrains.BRIDGE) &&\n+                        canUseBridge && entity.getWeight() <= board.getBuildingAt(c).getCurrentCF(c)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0OTcwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            canUseBridge && entity.getWeight() <= board.getBuildingAt(neighbor).getCurrentCF(neighbor)) {\n          \n          \n            \n                                            canUseBridge && (entity.getWeight() <= board.getBuildingAt(neighbor).getCurrentCF(neighbor))) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440249702", "createdAt": "2020-06-15T15:14:06Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -216,8 +291,14 @@ public void updateMovableAreas(Entity entity) {\n                     Coords neighbor = c.translated(direction);\n                     \n                     if(clusters.containsKey(neighbor)) {\n-                        int neighborElevation = BoardEdgePathFinder.calculateUnitElevationInHex(board.getHex(neighbor), entity, isHovercraft, isAmphibious);\n-                        int myElevation = BoardEdgePathFinder.calculateUnitElevationInHex(board.getHex(c), entity, isHovercraft, isAmphibious);\n+                        int neighborElevation = 0;\n+                        \n+                        if (useBridgeTop && board.getHex(neighbor).containsTerrain(Terrains.BRIDGE) &&\n+                                canUseBridge && entity.getWeight() <= board.getBuildingAt(neighbor).getCurrentCF(neighbor)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MDA1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(useBridgeTop && !entity.isSurfaceNaval() && hex.containsTerrain(Terrains.BRIDGE_CF)) {\n          \n          \n            \n                    if (useBridgeTop && !entity.isSurfaceNaval() && hex.containsTerrain(Terrains.BRIDGE_CF)) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440250058", "createdAt": "2020-06-15T15:14:36Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardEdgePathFinder.java", "diffHunk": "@@ -616,14 +627,30 @@ private MoveLegalityIndicator isLegalMove(MovePath movePath, IHex destHex, Build\n      * @return The effective elevation\n      */\n     public static int calculateUnitElevationInHex(IHex hex, Entity entity, boolean isHovercraft, boolean isAmphibious) {\n+        return calculateUnitElevationInHex(hex, entity, isHovercraft, isAmphibious, false);\n+    }\n+    \n+    /**\n+     * Helper function that calculates the effective elevation for a unit standing there.\n+     * @param hex The hex to check\n+     * @param entity The entity to check\n+     * @param bridgeTop Whether we're going on top of a bridge or under it\n+     * @return The effective elevation\n+     */\n+    public static int calculateUnitElevationInHex(IHex hex, Entity entity, boolean isHovercraft, boolean isAmphibious, boolean useBridgeTop) {\n         // we calculate the height of a hex as \"on the ground\" by default\n         // Special exceptions:\n-        // We are a mech, which can hopping on top of some buildings\n+        // We are a mech, which can hop on top of some buildings\n         // We are naval unit going under a bridge, in which case the height is the water level (naval units go on the surface, mostly)\n         // We are non-naval going into water but not onto a bridge, in which case the height is the floor (mechs sink to the bottom)\n-\n+        // if we are explicitly going to the top of a bridge, use that.\n+        \n+        if(useBridgeTop && !entity.isSurfaceNaval() && hex.containsTerrain(Terrains.BRIDGE_CF)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MDE0OA==", "bodyText": "Suggested change", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440250148", "createdAt": "2020-06-15T15:14:44Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/BoardEdgePathFinder.java", "diffHunk": "@@ -616,14 +627,30 @@ private MoveLegalityIndicator isLegalMove(MovePath movePath, IHex destHex, Build\n      * @return The effective elevation\n      */\n     public static int calculateUnitElevationInHex(IHex hex, Entity entity, boolean isHovercraft, boolean isAmphibious) {\n+        return calculateUnitElevationInHex(hex, entity, isHovercraft, isAmphibious, false);\n+    }\n+    \n+    /**\n+     * Helper function that calculates the effective elevation for a unit standing there.\n+     * @param hex The hex to check\n+     * @param entity The entity to check\n+     * @param bridgeTop Whether we're going on top of a bridge or under it\n+     * @return The effective elevation\n+     */\n+    public static int calculateUnitElevationInHex(IHex hex, Entity entity, boolean isHovercraft, boolean isAmphibious, boolean useBridgeTop) {\n         // we calculate the height of a hex as \"on the ground\" by default\n         // Special exceptions:\n-        // We are a mech, which can hopping on top of some buildings\n+        // We are a mech, which can hop on top of some buildings\n         // We are naval unit going under a bridge, in which case the height is the water level (naval units go on the surface, mostly)\n         // We are non-naval going into water but not onto a bridge, in which case the height is the floor (mechs sink to the bottom)\n-\n+        // if we are explicitly going to the top of a bridge, use that.\n+        \n+        if(useBridgeTop && !entity.isSurfaceNaval() && hex.containsTerrain(Terrains.BRIDGE_CF)) {\n+            return hex.ceiling();\n+        }\n+        \n         int hexElevation = hex.getLevel();\n-\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MDUwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(torsoJumpJets == null) {\n          \n          \n            \n                        if(backingEntity instanceof Mech) {\n          \n          \n            \n                    if (torsoJumpJets == null) {\n          \n          \n            \n                        if (backingEntity instanceof Mech) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440250500", "createdAt": "2020-06-15T15:15:11Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "diffHunk": "@@ -90,4 +93,25 @@ public boolean hasWorkingMisc(BigInteger flag) {\n         \n         return hasWorkingMisc.get(flag);\n     }\n+    \n+    public int getTorsoJumpJets() {\n+        if(torsoJumpJets == null) {\n+            if(backingEntity instanceof Mech) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MDkzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(irreversibleJumpDown && \n          \n          \n            \n                    if (irreversibleJumpDown &&", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440250933", "createdAt": "2020-06-15T15:15:37Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -202,6 +209,25 @@ protected void processChild(BulldozerMovePath child, List<BulldozerMovePath> chi\n                 !mli.outOfBounds &&\n                 (!mli.goingUpTooHigh || child.needsLeveling());\n         \n+        // this is true if we're jumping down further down than our max jump MP\n+        // or jumping down lower than our max elevation change\n+        boolean irreversibleJumpDown = \n+                (child.isJumping() && (Math.abs(mli.elevationChange) > child.getCachedEntityState().getJumpMP())) ||\n+                (child.getEntity().getMaxElevationDown() == Entity.UNLIMITED_JUMP_DOWN) && (Math.abs(mli.elevationChange) > child.getEntity().getMaxElevationChange());\n+        \n+        boolean destinationUseBridge = child.getGame().getBoard().getHex(destinationCoords).getTerrain(Terrains.BRIDGE) != null;\n+        int destHexElevation = calculateUnitElevationInHex(child.getGame().getBoard().getHex(destinationCoords), \n+                child.getEntity(), child.getEntity().getMovementMode() == EntityMovementMode.HOVER, child.getCachedEntityState().isAmphibious(),\n+                destinationUseBridge);\n+        \n+        // if we jumped into a hole and this results into us moving into a different cluster than the destination,\n+        // that's not great and we should not consider the possibility for long range path finding.\n+        if(irreversibleJumpDown && ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MTIzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {\n          \n          \n            \n                    if (clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440251233", "createdAt": "2020-06-15T15:16:01Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/PathDecorator.java", "diffHunk": "@@ -62,6 +62,16 @@\n             retVal.addAll(clippedPaths);\n         }\n         \n+        // if there is a bad guy in the last step, clip to one step short and see if we can't get around.\n+        if(clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MTMzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for(int desiredMP : desiredMPs) {\n          \n          \n            \n                        for (int desiredMP : desiredMPs) {", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440251335", "createdAt": "2020-06-15T15:16:08Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/PathDecorator.java", "diffHunk": "@@ -62,6 +62,16 @@\n             retVal.addAll(clippedPaths);\n         }\n         \n+        // if there is a bad guy in the last step, clip to one step short and see if we can't get around.\n+        if(clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {\n+            clippedSource.removeLastStep();\n+            \n+            for(int desiredMP : desiredMPs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "author": {"user": {"login": "NickAragua", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "committedDate": "2020-06-15T21:08:24Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4873, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}