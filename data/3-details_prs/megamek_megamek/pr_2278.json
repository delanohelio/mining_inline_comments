{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NTI5NTU3", "number": 2278, "title": "Further Logger changes", "bodyText": "Since the logger already takes the method name from the stacktrace, it can just as well take the class name and line number, simplifying calls to\nMegaMek.getLogger().error(msg);\nor\n``MegaMek.getLogger().methodBegin();`\nThis PR also replaces all calls to the now-deprecated methods with the simplified ones.", "createdAt": "2020-09-30T13:56:10Z", "url": "https://github.com/MegaMek/megamek/pull/2278", "merged": true, "mergeCommit": {"oid": "7f2b8d5dd1a18d1a71f06b3e31f9bbc6b176bf1d"}, "closed": true, "closedAt": "2020-10-03T17:16:07Z", "author": {"login": "SJuliez"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNUQ_xgH2gAyNDk1NTI5NTU3OmRiODM0NzRjZDY4ZmFmYTc4ZjNmYmRkNGVjMGJjMTFhY2M1ODIwNDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdO8V_fAH2gAyNDk1NTI5NTU3OjQ2YzNkNDYxMzFkMTlkZThjMzY5OWNjNzhjOGI5MDE1MmI5OTRlNmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "db83474cd68fafa78f3fbdd4ec0bc11acc582042", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/db83474cd68fafa78f3fbdd4ec0bc11acc582042", "committedDate": "2020-09-28T14:14:55Z", "message": "Further Logger simplification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29T21:01:52Z", "message": "Removing deprecated logger method calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/7e8634d6932e697d22ad80629c66592af6b962de", "committedDate": "2020-09-30T13:34:44Z", "message": "SetLogLevel Simplification"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDc5MTU4", "url": "https://github.com/MegaMek/megamek/pull/2278#pullrequestreview-499479158", "createdAt": "2020-09-30T14:16:18Z", "commit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTE5NjY3", "url": "https://github.com/MegaMek/megamek/pull/2278#pullrequestreview-499519667", "createdAt": "2020-09-30T14:53:46Z", "commit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo1Mzo0NlrOHahmOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo1Mzo0NlrOHahmOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3NTQ4MQ==", "bodyText": "Does dynamically retrieving this information e.g. class name, method name have any negative performance impact? Probably not, compared to disk I/O, but worth asking.", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497575481", "createdAt": "2020-09-30T14:53:46Z", "author": {"login": "NickAragua"}, "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -368,36 +455,76 @@ public void warning(final Object callingObject, final String message) {\n                                            final T throwable) {\n         return log(callingObject.getClass(), getCallingMethod(), LogLevel.WARNING, message, throwable);\n     }\n+    \n+    @Override\n+    public <T extends Throwable> T warning(final String message, final T throwable) {\n+        return log(getCallingClass(), getCallingMethod(), LogLevel.WARNING, message, throwable);\n+    }\n     //endregion Warning\n     \n     @Override\n     public void methodBegin(final Class<?> callingClass, final String methodName) {\n         log(callingClass, methodName, LogLevel.DEBUG, METHOD_BEGIN + methodName);\n     }\n     \n+    @Override\n+    public void methodBegin() {\n+        log(getCallingClass(), getCallingMethod(), LogLevel.DEBUG, METHOD_BEGIN, null);\n+    }\n+\n+    \n     @Override\n     public void methodEnd(final Class<?> callingClass, final String methodName) {\n         log(callingClass, methodName, LogLevel.DEBUG, METHOD_END + methodName);\n     }\n+    \n+    @Override\n+    public void methodEnd() {\n+        log(getCallingClass(), getCallingMethod(), LogLevel.DEBUG, METHOD_END, null);\n+    }\n \n     @Override\n     public void methodCalled(final Class<?> callingClass, final String methodName) {\n         log(callingClass, methodName, LogLevel.DEBUG, METHOD_CALLED + methodName);\n     }\n+    \n+    @Override\n+    public void methodCalled() {\n+        log(getCallingClass(), getCallingMethod(), LogLevel.DEBUG, METHOD_CALLED, null);\n+    }\n+\n \n     /**\n-     * Retrieves the name of the method calling log/info/error etc.\n-     * from the stack trace.\n+     * Retrieves the name of the method and the line number \n+     * calling log/info/error etc. from the stack trace.\n      *\n      * This method MUST be called from a top-level method (such as info or fatal)\n      * as it depends on the call stack depth of exactly three methods between\n      * internally calling getStackTrace and the user's code.\n      */\n     private String getCallingMethod() {\n         try {\n-            return Thread.currentThread().getStackTrace()[3].getMethodName() + \"()\";\n+            String result = Thread.currentThread().getStackTrace()[3].getMethodName() + \"()\";\n+            result += \", line \" + Thread.currentThread().getStackTrace()[3].getLineNumber();\n+            return result;\n+        } catch (Exception e) {\n+            return \"DefaultMMLogger Error: Could not obtain method name.\";\n+        }\n+    }\n+    \n+    /**\n+     * Retrieves the name of the class calling log/info/error etc.\n+     * from the stack trace.\n+     *\n+     * This method MUST be called from a top-level method (such as info or fatal)\n+     * as it depends on the call stack depth of exactly three methods between\n+     * internally calling getStackTrace and the user's code.\n+     */\n+    private String getCallingClass() {\n+        try {\n+            return Thread.currentThread().getStackTrace()[3].getClassName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 344}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTAxNzAy", "url": "https://github.com/MegaMek/megamek/pull/2278#pullrequestreview-499501702", "createdAt": "2020-09-30T14:36:49Z", "commit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDozNjo0OVrOHagxcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNTowNjowNlrOHaiM_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2MTk2OQ==", "bodyText": "I don't understand why we are creating an IOException just for logging, unless it is to display a stacktrace?", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497561969", "createdAt": "2020-09-30T14:36:49Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/MegaMek.java", "diffHunk": "@@ -597,12 +595,12 @@ private void processUnitValidator() throws ParseException {\n                 }\n \n                 if (ms == null) {\n-                    getLogger().error(this, new IOException(filename + \" not found.  Try using \\\"chassis model\\\" for input.\"));\n+                    getLogger().error(new IOException(filename + \" not found.  Try using \\\"chassis model\\\" for input.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2NjUwMA==", "bodyText": "Something odd here in the formatting (I'd bet tab/space)", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497566500", "createdAt": "2020-09-30T14:42:26Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -346,10 +341,10 @@ public boolean shouldStay(MovePath movePath) {\n             \n             return true;\n         } catch(Exception e) {\n-        \tMegaMek.getLogger().error(this, e.toString());\n+        \tMegaMek.getLogger().error(e.toString());\n         \treturn false;\n         } finally {\n-            getOwner().methodEnd(getClass(), METHOD_NAME);\n+            getOwner().getLogger().methodEnd();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2NzcwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            getOwner().getLogger().warning(\"Invalid home edge.  Defaulting to NORTH.\");\n          \n          \n            \n                            getOwner().getLogger().warning(\"Invalid home edge. Defaulting to NORTH.\");", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497567706", "createdAt": "2020-09-30T14:43:58Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/PathRanker.java", "diffHunk": "@@ -403,18 +398,18 @@ public int distanceToHomeEdge(Coords position, CardinalEdge homeEdge, IGame game\n                 edgeCoords = new Coords(boardWidth, position.getY());\n             } else {\n                 msg.append(\"Default\");\n-                getOwner().log(getClass(), METHOD_NAME, LogLevel.WARNING, \"Invalid home edge.  Defaulting to NORTH.\");\n+                getOwner().getLogger().warning(\"Invalid home edge.  Defaulting to NORTH.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3Mjg3OQ==", "bodyText": "Formatting looks screwy", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497572879", "createdAt": "2020-09-30T14:50:30Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ratgenerator/ChassisRecord.java", "diffHunk": "@@ -49,8 +48,7 @@ public void addModel(ModelRecord model) {\n \tpublic int totalModelWeight(int era, String fKey) {\n \t\tFactionRecord fRec = RATGenerator.getInstance().getFaction(fKey);\n \t\tif (fRec == null) {\n-            DefaultMmLogger.getInstance().log(getClass(), \"totalModelWeight(int, String)\", LogLevel.WARNING,\n-                    \"Attempt to find totalModelWeight for non-existent faction \" + fKey);\n+\t\t    MegaMek.getLogger().warning(\"Attempt to find totalModelWeight for non-existent faction \" + fKey);\n \t\t\treturn 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3NDI2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    + ((unitType == UnitType.AERO || unitType == UnitType.CONV_FIGHTER)?airEschelonNames[eschelon]:eschelonNames[eschelon]), null);\n          \n          \n            \n                                    + (((unitType == UnitType.AERO) || (unitType == UnitType.CONV_FIGHTER)) ? airEschelonNames[eschelon] : eschelonNames[eschelon]), null);", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497574261", "createdAt": "2020-09-30T14:52:16Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ratgenerator/ForceDescriptor.java", "diffHunk": "@@ -1725,9 +1715,8 @@ public void show(String indent, LogLevel logLevel) {\n                 \"Element\", \"(1)\", \"(2)\", \"Flight\", \"Squadron\", \"Group\", \"Wing\", \"Regiment\"\n         };\n \n-        DefaultMmLogger.getInstance().log(getClass(), \"show(String, LogLevel)\",\n-                logLevel, indent + weightClass + \" \" + unitType + \" \"\n-                        + ((unitType == UnitType.AERO || unitType == UnitType.CONV_FIGHTER)?airEschelonNames[eschelon]:eschelonNames[eschelon]));\n+        MegaMek.getLogger().log(logLevel, indent + weightClass + \" \" + unitType + \" \"\n+                        + ((unitType == UnitType.AERO || unitType == UnitType.CONV_FIGHTER)?airEschelonNames[eschelon]:eschelonNames[eschelon]), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3NjM3Mw==", "bodyText": "Probably should remove  the method being passed in here.", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497576373", "createdAt": "2020-09-30T14:54:46Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/BotConfigDialog.java", "diffHunk": "@@ -576,7 +576,7 @@ public void actionPerformed(ActionEvent e) {\n \n     private void handleError(String method, Throwable t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3NzMzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * MegaMek - Copyright (C) 2020 - The MegaMek Team  \n          \n          \n            \n            * MegaMek - Copyright (C) 2013-2020 - The MegaMek Team", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497577335", "createdAt": "2020-09-30T14:55:56Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/HelpDialog.java", "diffHunk": "@@ -1,8 +1,19 @@\n+/*  \r\n+* MegaMek - Copyright (C) 2020 - The MegaMek Team  \r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3ODU3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        DefaultMmLogger.getInstance().error(\"A null color was passed.\");\n          \n          \n            \n                        MegaMek.getLogger().error(\"A null color was passed.\");", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497578577", "createdAt": "2020-09-30T14:57:28Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/tileset/CamoManager.java", "diffHunk": "@@ -229,7 +228,7 @@ public static Image getEntityCamoImage(Entity entity) {\n      */\r\n     public static BufferedImage colorCamoImage(Color color) {\r\n         if (color == null) {\r\n-            DefaultMmLogger.getInstance().error(CamoManager.class, \"A null color was passed.\");\r\n+            DefaultMmLogger.getInstance().error(\"A null color was passed.\");\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3OTQ1NA==", "bodyText": "Does this set it for this class or MM in general... and why is this hardcoded here?", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497579454", "createdAt": "2020-09-30T14:58:34Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/tileset/HexTileset.java", "diffHunk": "@@ -83,7 +83,7 @@ public HexTileset(IGame g) {\n         game = g;\n         game.addGameListener(gameListener);\n         game.getBoard().addBoardListener(this);\n-        LOG.setLogLevel(this, LOGLVL);\n+        MegaMek.getLogger().setLogLevel(LOGLVL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3OTkxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MegaMek.getLogger().error(\"Could not parse the portraits directory!\");\n          \n          \n            \n                            e.printStackTrace();\n          \n          \n            \n                            MegaMek.getLogger().error(\"Could not parse the portraits directory!\", e);", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497579916", "createdAt": "2020-09-30T14:59:06Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/tileset/PortraitManager.java", "diffHunk": "@@ -79,7 +79,7 @@ private static void initializePortraits() {\n                 portraitDirectory = new DirectoryItems(Configuration.portraitImagesDir(), \"\", \r\n                         ImageFileFactory.getInstance());\r\n             } catch (Exception e) {\r\n-                MegaMek.getLogger().error(PortraitManager.class, \"Could not parse the portraits directory!\");\r\n+                MegaMek.getLogger().error(\"Could not parse the portraits directory!\");\r\n                 e.printStackTrace();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4MjEyMw==", "bodyText": "Same as before, is this setting just for this class or in general, and why is is hardcoded.", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497582123", "createdAt": "2020-09-30T15:01:50Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/MechSummaryCache.java", "diffHunk": "@@ -142,7 +142,7 @@ public void removeListener(Listener listener) {\n     private MechSummaryCache() {\n         m_nameMap = new HashMap<>();\n         m_fileNameMap = new HashMap<>();\n-        LOG.setLogLevel(this, LOGLVL);\n+        MegaMek.getLogger().setLogLevel(LOGLVL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4MzI4NQ==", "bodyText": "Keeping this using the DefaultMMLogger?", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497583285", "createdAt": "2020-09-30T15:03:21Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/QuirksHandler.java", "diffHunk": "@@ -228,14 +227,11 @@ public static String replaceUnitType(String unitId, String newUnitType) {\n     }\n \n     private static Map<String, List<QuirkEntry>> loadQuirksFile(String path) throws IOException {\n-        final String METHOD_NAME = \"loadQuirksFile(String)\";\n-        \n         Map<String, List<QuirkEntry>> quirkMap = new HashMap<>();\n \n         File file = new File(path);\n         if (!file.exists() || !file.isFile()) {\n-            getLogger().log(QuirksHandler.class, METHOD_NAME, LogLevel.WARNING,\n-                            \"Could not load quirks from \" + path);\n+            getLogger().warning(\"Could not load quirks from \" + path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4NTQwNg==", "bodyText": "Same as before, file or system, and why hardcoded.", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497585406", "createdAt": "2020-09-30T15:06:06Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/AeroGroundPathFinder.java", "diffHunk": "@@ -59,29 +57,22 @@ protected int getMaximumVelocity(IAero mover) {\n     protected IGame game;\n     private List<MovePath> aeroGroundPaths;\n     protected int maxThrust;\n-    private MMLogger logger;\n \n     protected AeroGroundPathFinder(IGame game) {\n         this.game = game;\n-        getLogger().setLogLevel(LOGGER_CATEGORY, LogLevel.DEBUG);\n+        MegaMek.getLogger().setLogLevel(LogLevel.DEBUG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTQ1NzAx", "url": "https://github.com/MegaMek/megamek/pull/2278#pullrequestreview-499545701", "createdAt": "2020-09-30T15:18:40Z", "commit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNToxODo0MVrOHaiy6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNTozNTo1N1rOHajkQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5NTExMg==", "bodyText": "Tab spacing", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497595112", "createdAt": "2020-09-30T15:18:41Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ratgenerator/RATGenerator.java", "diffHunk": "@@ -884,7 +872,7 @@ private void loadFactions(File dir) {\n \t\t\tDocumentBuilder db = MegaMekXmlUtil.newSafeDocumentBuilder();\n \t\t\txmlDoc = db.parse(fis);\n \t\t} catch (Exception ex) {\n-\t\t\tDefaultMmLogger.getInstance().error(getClass(), METHOD_NAME, ex);\n+\t\t    MegaMek.getLogger().error(ex);\n \t\t\treturn;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5NzUzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        MegaMek.getLogger().error(\"Client does not have a jar file\");\n          \n          \n            \n                        MegaMek.getLogger().info(\"Client does not have a jar file\");", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497597532", "createdAt": "2020-09-30T15:21:58Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -817,15 +804,15 @@ private void receivePlayerVersion(Packet packet, int connId) {\n                 buf.append(System.lineSeparator()).append(System.lineSeparator());\n             }\n             buf.append(\"Client Checksum is null. Client may not have a jar file\");\n-            getLogger().error(getClass(), METHOD_NAME, \"Client does not have a jar file\");\n+            MegaMek.getLogger().error(\"Client does not have a jar file\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5NzY4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        MegaMek.getLogger().error(\"Server does not have a jar file\");\n          \n          \n            \n                        MegaMek.getLogger().info(\"Server does not have a jar file\");", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497597682", "createdAt": "2020-09-30T15:22:11Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -817,15 +804,15 @@ private void receivePlayerVersion(Packet packet, int connId) {\n                 buf.append(System.lineSeparator()).append(System.lineSeparator());\n             }\n             buf.append(\"Client Checksum is null. Client may not have a jar file\");\n-            getLogger().error(getClass(), METHOD_NAME, \"Client does not have a jar file\");\n+            MegaMek.getLogger().error(\"Client does not have a jar file\");\n             needs = true;\n         // print message indicating server doesn't have jar file\n         } else if (serverChecksum == null) {\n             if (!version.equals(MegaMek.VERSION)) {\n                 buf.append(System.lineSeparator()).append(System.lineSeparator());\n             }\n             buf.append(\"Server Checksum is null. Server may not have a jar file\");\n-            getLogger().error(getClass(), METHOD_NAME, \"Server does not have a jar file\");\n+            MegaMek.getLogger().error(\"Server does not have a jar file\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5ODMxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n          \n          \n            \n                    MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\");", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497598312", "createdAt": "2020-09-30T15:23:02Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -1335,15 +1320,14 @@ public boolean loadGame(File f) {\n      * @return A <code>boolean</code> value whether or not the loading was successful\n      */\n     public boolean loadGame(File f, boolean sendInfo) {\n-        final String METHOD_NAME = \"loadGame(File,boolean)\";\n-        getLogger().info(getClass(), METHOD_NAME, \"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n+        MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5ODQ1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        MegaMek.getLogger().error(\"Unable to load file: \" + f, e); //$NON-NLS-1$\n          \n          \n            \n                        MegaMek.getLogger().error(\"Unable to load file: \" + f, e);", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497598451", "createdAt": "2020-09-30T15:23:14Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -1335,15 +1320,14 @@ public boolean loadGame(File f) {\n      * @return A <code>boolean</code> value whether or not the loading was successful\n      */\n     public boolean loadGame(File f, boolean sendInfo) {\n-        final String METHOD_NAME = \"loadGame(File,boolean)\";\n-        getLogger().info(getClass(), METHOD_NAME, \"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n+        MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n \n         IGame newGame;\n         try (InputStream is = new FileInputStream(f); InputStream gzi = new GZIPInputStream(is)) {\n             XStream xstream = SerializationHelper.getXStream();\n             newGame = (IGame) xstream.fromXML(gzi);\n         } catch (Exception e) {\n-            getLogger().error(getClass(), METHOD_NAME, \"Unable to load file: \" + f, e); //$NON-NLS-1$\n+            MegaMek.getLogger().error(\"Unable to load file: \" + f, e); //$NON-NLS-1$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 208}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5OTc4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MegaMek.getLogger().error(\"attack packet has wrong attacker\");\n          \n          \n            \n                            MegaMek.getLogger().error(\"Attack packet has wrong attacker\");", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497599780", "createdAt": "2020-09-30T15:24:57Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -13446,7 +13402,7 @@ private void processAttack(Entity entity, Vector<EntityAction> vector) {\n         for (EntityAction ea : vector) {\n             // is this the right entity?\n             if (ea.getEntityId() != entity.getId()) {\n-                getLogger().error(getClass(), METHOD_NAME, \"attack packet has wrong attacker\");\n+                MegaMek.getLogger().error(\"attack packet has wrong attacker\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 644}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwMDMxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MegaMek.getLogger().error(\"removing duplicate phys attack for id#\" + entityId\n          \n          \n            \n                            MegaMek.getLogger().error(\"Removing duplicate phys attack for id#\" + entityId", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497600316", "createdAt": "2020-09-30T15:25:41Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -15269,7 +15210,7 @@ private void removeDuplicateAttacks(int entityId) {\n                     allowed--;\n                 }\n             } else {\n-                getLogger().error(getClass(), METHOD_NAME, \"removing duplicate phys attack for id#\" + entityId\n+                MegaMek.getLogger().error(\"removing duplicate phys attack for id#\" + entityId", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 850}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwMTQwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MegaMek.getLogger().error(\"server got unload stranded packet for invalid entity\");\n          \n          \n            \n                            MegaMek.getLogger().error(\"Server got unload stranded packet for invalid entity\");", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497601400", "createdAt": "2020-09-30T15:27:07Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -32944,7 +32867,7 @@ private void receiveUnloadStranded(Packet packet, int connId) {\n         for (int index = 0; (null != entityIds) && (index < entityIds.length); index++) {\n             entity = game.getEntity(entityIds[index]);\n             if (!game.getTurn().isValid(connId, entity, game)) {\n-                getLogger().error(getClass(), METHOD_NAME, \"server got unload stranded packet for invalid entity\");\n+                MegaMek.getLogger().error(\"server got unload stranded packet for invalid entity\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 1258}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwMTYyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                MegaMek.getLogger().debug(\"gravity move check jump: \" \n          \n          \n            \n                                MegaMek.getLogger().debug(\"Gravity move check jump: \"", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497601621", "createdAt": "2020-09-30T15:27:25Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -33358,7 +33280,7 @@ private void checkExtremeGravityMovement(Entity entity, MoveStep step,\n                                 step, moveType));\n                     }\n                 } else if (moveType == EntityMovementType.MOVE_JUMP) {\n-                    getLogger().debug(getClass(), METHOD_NAME, \"gravity move check jump: \"\n+                    MegaMek.getLogger().debug(\"gravity move check jump: \" ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 1293}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNjk4OQ==", "bodyText": "Why remove the override?", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497606989", "createdAt": "2020-09-30T15:34:56Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -95,32 +93,37 @@ public Logger getLogger(final String loggerName) {\n         return throwable;\n     }\n \n-    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n+        return log(callingClass.getName(), methodName, logLevel, throwable);\n+    }\n+\n+    public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n+        return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n+    }\n+    \n+    public <T extends Throwable> T log(final String className, final String methodName,\n+            final LogLevel logLevel, final T throwable) {\n         // Construct the message from the Throwable's message.\n         String message = \"\";\n         if (null != throwable) {\n             message = throwable.getMessage();\n         }\n-        return log(callingClass.getName(), methodName, logLevel, message, throwable);\n+        return log(className, methodName, logLevel, message, throwable);\n     }\n \n-    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNzE4MQ==", "bodyText": "Why remove the override?", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497607181", "createdAt": "2020-09-30T15:35:09Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -95,32 +93,37 @@ public Logger getLogger(final String loggerName) {\n         return throwable;\n     }\n \n-    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n+        return log(callingClass.getName(), methodName, logLevel, throwable);\n+    }\n+\n+    public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n+        return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n+    }\n+    \n+    public <T extends Throwable> T log(final String className, final String methodName,\n+            final LogLevel logLevel, final T throwable) {\n         // Construct the message from the Throwable's message.\n         String message = \"\";\n         if (null != throwable) {\n             message = throwable.getMessage();\n         }\n-        return log(callingClass.getName(), methodName, logLevel, message, throwable);\n+        return log(className, methodName, logLevel, message, throwable);\n     }\n \n-    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel level, final String message, final T throwable) {\n         return log(callingClass.getName(), methodName, level, message, throwable);\n     }\n-\n-    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNzU0Mg==", "bodyText": "Override missing", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497607542", "createdAt": "2020-09-30T15:35:42Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -95,32 +93,37 @@ public Logger getLogger(final String loggerName) {\n         return throwable;\n     }\n \n-    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n+        return log(callingClass.getName(), methodName, logLevel, throwable);\n+    }\n+\n+    public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n+        return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n+    }\n+    \n+    public <T extends Throwable> T log(final String className, final String methodName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNzU5MA==", "bodyText": "Override missing", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497607590", "createdAt": "2020-09-30T15:35:45Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -95,32 +93,37 @@ public Logger getLogger(final String loggerName) {\n         return throwable;\n     }\n \n-    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n+        return log(callingClass.getName(), methodName, logLevel, throwable);\n+    }\n+\n+    public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNzc0Ng==", "bodyText": "Why remove the override?", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497607746", "createdAt": "2020-09-30T15:35:57Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -95,32 +93,37 @@ public Logger getLogger(final String loggerName) {\n         return throwable;\n     }\n \n-    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8634d6932e697d22ad80629c66592af6b962de"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c02a59d293dc3a4c06b3cb40c3fe65b6f7cfc1d8", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/c02a59d293dc3a4c06b3cb40c3fe65b6f7cfc1d8", "committedDate": "2020-10-01T14:49:57Z", "message": "Merge remote-tracking branch 'MM_Master/master' into LoggerChanges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7849f1fae8d4d786f106ffd27352bd09fb0e0a2d", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/7849f1fae8d4d786f106ffd27352bd09fb0e0a2d", "committedDate": "2020-10-01T14:53:32Z", "message": "Merge remote-tracking branch 'MM_Master/master' into LoggerChanges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "840b32b4d2029b8e07a3d715e9812b6fbfc73f8f", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/840b32b4d2029b8e07a3d715e9812b6fbfc73f8f", "committedDate": "2020-10-01T15:09:43Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "committedDate": "2020-10-01T15:19:30Z", "message": "Tabs and small changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a543f72514755b57d199f28f70aaa270743731d", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/7a543f72514755b57d199f28f70aaa270743731d", "committedDate": "2020-10-01T15:21:11Z", "message": "Merge remote-tracking branch 'JuliezFork/LoggerChanges' into LoggerChanges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b2cc21c9d693710f0dd0883f0fee39f5395159b", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/5b2cc21c9d693710f0dd0883f0fee39f5395159b", "committedDate": "2020-10-02T13:57:49Z", "message": "Adapt Princess Tests to logger changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3", "author": {"user": {"login": "SJuliez", "name": null}}, "url": "https://github.com/MegaMek/megamek/commit/b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3", "committedDate": "2020-10-03T10:46:40Z", "message": "Override correction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTUzNjU1", "url": "https://github.com/MegaMek/megamek/pull/2278#pullrequestreview-501553655", "createdAt": "2020-10-03T15:26:10Z", "commit": {"oid": "b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNToyNjoxMVrOHcCIYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNToyNjoxMVrOHcCIYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NzA5MQ==", "bodyText": "Suggested change", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r499157091", "createdAt": "2020-10-03T15:26:11Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/HelpDialog.java", "diffHunk": "@@ -1,5 +1,6 @@\n /*  \r\n-* MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+* MegaMek - Copyright (C) 2013-2020 - The MegaMek Team  \r\n+\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46c3d46131d19de8c3699cc78c8b90152b994e6c", "author": {"user": {"login": "Windchild292", "name": "Justin Bowen"}}, "url": "https://github.com/MegaMek/megamek/commit/46c3d46131d19de8c3699cc78c8b90152b994e6c", "committedDate": "2020-10-03T15:30:30Z", "message": "Update megamek/src/megamek/client/ui/swing/HelpDialog.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4798, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}