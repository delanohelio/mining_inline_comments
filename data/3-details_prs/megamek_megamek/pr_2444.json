{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MDA4NTY1", "number": 2444, "title": "Improve MtfFile parsing performance", "bodyText": "Hoist repeated string calls into locals to improve performance of MTF file parsing. I've been running a lot of tests on MHQ and during refit testing I noticed parsing MTF files to be a significant chunk of the time during the tests.\nOn JDK11.0.7, i5 16G RAM:\n\nDelete units.cache then load 4MB CPNX\nMechFileParser::parse Total Time before: 7442 ms\nMechFileParser::parse Total Time after: 2929 ms", "createdAt": "2020-11-28T21:00:19Z", "url": "https://github.com/MegaMek/megamek/pull/2444", "merged": true, "mergeCommit": {"oid": "a597c775ce4f8bee5e53fb2a796be6ece7ace567"}, "closed": true, "closedAt": "2020-11-28T21:41:25Z", "author": {"login": "sixlettervariables"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhCl96gH2gAyNTI5MDA4NTY1OjIzZDM3MDViYWJhMGZhYmE1NGY3YWVhNjBlYTk0NzUxMTg2ZTc1Mjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhDMhsAFqTU0MDQxOTE2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "23d3705baba0faba54f7aea60ea94751186e7529", "author": {"user": {"login": "sixlettervariables", "name": "Christopher Watford"}}, "url": "https://github.com/MegaMek/megamek/commit/23d3705baba0faba54f7aea60ea94751186e7529", "committedDate": "2020-11-28T20:58:01Z", "message": "Hoist repeated string calls into locals\n\nOn JDK11.0.7, i5 16G RAM:\n- Delete units.cache\n- Load 4MB CPNX\n- Units Before: 7870 ms\n- Units After: 3296 ms"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDE3NTAx", "url": "https://github.com/MegaMek/megamek/pull/2444#pullrequestreview-540417501", "createdAt": "2020-11-28T21:01:46Z", "commit": {"oid": "23d3705baba0faba54f7aea60ea94751186e7529"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMTowMTo0NlrOH7dMTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMTowMTo0NlrOH7dMTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNjMxOQ==", "bodyText": "We should probably move this into a constant", "url": "https://github.com/MegaMek/megamek/pull/2444#discussion_r532106319", "createdAt": "2020-11-28T21:01:46Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/loaders/MtfFile.java", "diffHunk": "@@ -505,107 +507,103 @@ public Entity getEntity() throws EntityLoadingException {\n     }\n \n     private void setTechLevel(Mech mech) throws EntityLoadingException {\n-        switch (techBase.substring(9).trim()) {\n-            case \"Inner Sphere\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 1:\n-                        mech.setTechLevel(TechConstants.T_INTRO_BOXSET);\n-                        break;\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_IS_TW_NON_BOX);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_IS_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_IS_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_IS_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                break;\n-            case \"Clan\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_CLAN_TW);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_CLAN_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_CLAN_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_CLAN_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                break;\n-            case \"Mixed (IS Chassis)\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_IS_TW_NON_BOX);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_IS_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_IS_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_IS_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                mech.setMixedTech(true);\n-                break;\n-            case \"Mixed (Clan Chassis)\":\n-                switch (Integer.parseInt(rulesLevel.substring(12).trim())) {\n-                    case 2:\n-                        mech.setTechLevel(TechConstants.T_CLAN_TW);\n-                        break;\n-                    case 3:\n-                        mech.setTechLevel(TechConstants.T_CLAN_ADVANCED);\n-                        break;\n-                    case 4:\n-                        mech.setTechLevel(TechConstants.T_CLAN_EXPERIMENTAL);\n-                        break;\n-                    case 5:\n-                        mech.setTechLevel(TechConstants.T_CLAN_UNOFFICIAL);\n-                        break;\n-                    default:\n-                        throw new EntityLoadingException(\"Unsupported tech level: \" + rulesLevel.substring(12).trim());\n-                }\n-                mech.setMixedTech(true);\n-                break;\n-            case \"Mixed\":\n-                throw new EntityLoadingException(\"Unsupported tech base: \\\"Mixed\\\" is no longer allowed by itself.  You must specify \\\"Mixed (IS Chassis)\\\" or \\\"Mixed (Clan Chassis)\\\".\");\n-            default:\n-                throw new EntityLoadingException(\"Unsupported tech base: \" + techBase.substring(9).trim());\n+        String techBase = this.techBase.substring(9).trim();\n+        if (techBase.equalsIgnoreCase(\"Inner Sphere\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23d3705baba0faba54f7aea60ea94751186e7529"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDE5MTY1", "url": "https://github.com/MegaMek/megamek/pull/2444#pullrequestreview-540419165", "createdAt": "2020-11-28T21:40:08Z", "commit": {"oid": "23d3705baba0faba54f7aea60ea94751186e7529"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4676, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}