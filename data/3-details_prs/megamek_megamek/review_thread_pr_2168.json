{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMDYzNjM3", "number": 2168, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMDozN1rOEbRVMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMjozNFrOEbRVnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDMwOTYyOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/princess/PathRanker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMDozN1rOHFJd-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMDozN1rOHFJd-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDA1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(!isAirborneAeroOnGroundMap && !getOwner().wantsToFallBack(mover)) {\n          \n          \n            \n                            if (!isAirborneAeroOnGroundMap && !getOwner().wantsToFallBack(mover)) {", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160057", "createdAt": "2020-08-23T02:20:37Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/PathRanker.java", "diffHunk": "@@ -195,7 +196,8 @@ abstract RankedPath rankPath(MovePath path, IGame game, int maxRange, double fal\n \n                 // Make sure I'm trying to get/stay in range of a target.\n                 // Skip this part if I'm an aero on the ground map, as it's kind of irrelevant\n-                if(!isAirborneAeroOnGroundMap) {\n+                // also skip this part if I'm attempting to retreat, as engagement is not the point here\n+                if(!isAirborneAeroOnGroundMap && !getOwner().wantsToFallBack(mover)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d9b569f044a2f052fc2ea9fc052d9ed88e0f89"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDMwOTgzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/bot/princess/Princess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMDo1M1rOHFJeDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMDo1M1rOHFJeDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDA3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(!mover.isAirborne()) {                \n          \n          \n            \n                            if (!mover.isAirborne()) {", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160078", "createdAt": "2020-08-23T02:20:53Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/bot/princess/Princess.java", "diffHunk": "@@ -1521,7 +1521,10 @@ protected void initFiring() {\n             // so just have it mill around in place as usual. Also set the behavior to \"no path to destination\"\n             // so it doesn't hump the walls due to \"self preservation mods\"\n             if ((bulldozerPaths == null) || (bulldozerPaths.size() == 0)) {\n-                getUnitBehaviorTracker().overrideBehaviorType(mover, BehaviorType.NoPathToDestination);\n+                \n+                if(!mover.isAirborne()) {                ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d9b569f044a2f052fc2ea9fc052d9ed88e0f89"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDMxMDEzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMTo0MVrOHFJeLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMTo0MVrOHFJeLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDExMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(jumpMPNoGravity == null) {\n          \n          \n            \n                    if (jumpMPNoGravity == null) {", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160110", "createdAt": "2020-08-23T02:21:41Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "diffHunk": "@@ -106,6 +108,22 @@ public int getTorsoJumpJets() {\n         return torsoJumpJets;\n     }\n     \n+    public int getJumpMPNoGravity() {\n+        if(jumpMPNoGravity == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b194db097dd8e427513240f1f4e574fdbaabad35"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDMxMDM0OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMTo0OFrOHFJeRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMTo0OFrOHFJeRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDEzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(runMPNoGravity == null) {\n          \n          \n            \n                    if (runMPNoGravity == null) {", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160133", "createdAt": "2020-08-23T02:21:48Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "diffHunk": "@@ -106,6 +108,22 @@ public int getTorsoJumpJets() {\n         return torsoJumpJets;\n     }\n     \n+    public int getJumpMPNoGravity() {\n+        if(jumpMPNoGravity == null) {\n+            jumpMPNoGravity = backingEntity.getJumpMP(false);\n+        }\n+        \n+        return jumpMPNoGravity;\n+    }\n+    \n+    public int getRunMPNoGravity() {\n+        if(runMPNoGravity == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b194db097dd8e427513240f1f4e574fdbaabad35"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDMxMDY4OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/pathfinder/PathDecorator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMjozNFrOHFJebA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjoyMjozNFrOHFJebA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDE3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(int desiredMP : desiredMPs) {\n          \n          \n            \n                    for (int desiredMP : desiredMPs) {", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160172", "createdAt": "2020-08-23T02:22:34Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/pathfinder/PathDecorator.java", "diffHunk": "@@ -33,10 +33,62 @@\n  */\n public class PathDecorator {\n     \n+    public static Set<MovePath> decoratePath(BulldozerMovePath source) {\n+        Set<MovePath> result = new HashSet<>();\n+        \n+        // paths that aren't on the ground require separate and special logic\n+        if (source.isJumping()) {\n+            result.addAll(decorateJumpPath(source));\n+        } else if (source.getEntity().isAirborne()) {\n+            result.add(source);\n+        } else if (source.getGame().useVectorMove()) {\n+            result.add(source);\n+        } else {\n+            result.addAll(decorateGroundPath(source));\n+        }\n+        \n+        return result;\n+    }\n+    \n+    /**\n+     * Takes a given (jumping) path and returns a list of child paths that lead up to max jump MP or\n+     * max jump MP without gravity.\n+     */\n+    public static Set<MovePath> decorateJumpPath(BulldozerMovePath source) {\n+        Set<MovePath> retVal = new HashSet<>();\n+        \n+        MovePath clippedSource = source.clone();\n+        clippedSource.clipToPossible();\n+        \n+        // jumping move paths are pretty easy to clip\n+        // there are two interesting MP amounts - current jump MP and jump MP without \"bonus\" for low gravity.\n+        Set<Integer> desiredMPs = new HashSet<>();\n+        desiredMPs.add(source.getCachedEntityState().getJumpMP());\n+        desiredMPs.add(source.getCachedEntityState().getJumpMPNoGravity());\n+        \n+        for(int desiredMP : desiredMPs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b194db097dd8e427513240f1f4e574fdbaabad35"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2665, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}