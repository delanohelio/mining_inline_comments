{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMjM0NDYx", "number": 1839, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxOToyMjo0OFrODw-f9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxOToyMjo0OFrODw-f9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjgyMjMwOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/EntityWeightClass.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxOToyMjo0OFrOGEPehQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxOToyMjo0OFrOGEPehQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwMTA2MQ==", "bodyText": "Maybe add a space here?", "url": "https://github.com/MegaMek/megamek/pull/1839#discussion_r407101061", "createdAt": "2020-04-11T19:22:48Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/EntityWeightClass.java", "diffHunk": "@@ -177,83 +177,51 @@ public static int getWeightClass(double tonnage, String type) {\n      * @return        The weight class\n      */\n     public static int getSupportWeightClass(double tonnage, String type) {\n-        int i = 0;\n-\n-        if (type.equals(\"Wheeled\")) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (wheeledSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= wheeledSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(\"Tracked\")) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (trackedSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= trackedSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(\"Hover\")) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (hoverSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= hoverSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(UnitType.getTypeName(UnitType.VTOL))) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (vtolSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= vtolSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(\"WiGE\")) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (wigeSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= wigeSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(UnitType.getTypeName(UnitType.NAVAL))) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (navalSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= navalSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(\"Submarine\")) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (navalSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= navalSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(\"Rail\")) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (railSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= railSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(\"MagLev\")) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (railSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= railSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(\"Aerodyne\")) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (fixedwingSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= fixedwingSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(\"Airship\")) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (airshipSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= airshipSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n-            }\n-        } else if (type.equals(\"Satellite\")) {\n-            for (i = WEIGHT_SMALL_SUPPORT; i < (satelliteSupportVehicleWeightLimits.length - 1); i++) {\n-                if (tonnage <= satelliteSupportVehicleWeightLimits[i]) {\n-                    break;\n-                }\n+        double[] weightLimits;\n+        switch (EntityMovementMode.getMode(type)) {\n+            case WHEELED:\n+                weightLimits = wheeledSupportVehicleWeightLimits;\n+                break;\n+            case TRACKED:\n+                weightLimits = trackedSupportVehicleWeightLimits;\n+                break;\n+            case HOVER:\n+                weightLimits = hoverSupportVehicleWeightLimits;\n+                break;\n+            case VTOL:\n+                weightLimits = vtolSupportVehicleWeightLimits;\n+                break;\n+            case WIGE:\n+                weightLimits = wigeSupportVehicleWeightLimits;\n+                break;\n+            case NAVAL:\n+            case HYDROFOIL:\n+            case SUBMARINE:\n+                weightLimits = navalSupportVehicleWeightLimits;\n+                break;\n+            case RAIL:\n+            case MAGLEV:\n+                weightLimits = railSupportVehicleWeightLimits;\n+                break;\n+            case AERODYNE:\n+                weightLimits = fixedwingSupportVehicleWeightLimits;\n+                break;\n+            case AIRSHIP:\n+                weightLimits = airshipSupportVehicleWeightLimits;\n+                break;\n+            case STATION_KEEPING:\n+                weightLimits = satelliteSupportVehicleWeightLimits;\n+                break;\n+            default:\n+                return WEIGHT_MEDIUM_SUPPORT;\n+        }\n+        for (int i = WEIGHT_SMALL_SUPPORT; i < weightLimits.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77998b193ec3c656402d0fe8c86ed0016adc70ab"}, "originalPosition": 115}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2911, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}