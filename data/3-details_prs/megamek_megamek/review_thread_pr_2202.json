{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNDIzMDQ4", "number": 2202, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMjo0OFrOEg-4ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoxOTo0MVrOEjsQFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDIwMTU1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/Report.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMjo0OFrOHOD7kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo0NDo0M1rOHOXR9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNjUxMw==", "bodyText": "Is text.startsWith(\"\\n\") not an option? Simpler than a length check and first char check.", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r484506513", "createdAt": "2020-09-07T16:02:48Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/common/Report.java", "diffHunk": "@@ -489,7 +487,7 @@ public String getText() {\n             }\n             //draw the sprite at the beginning of the line\n             if(imageCode != null && imageCode.length() > 0){\n-                if(text.substring(0,1).equals(\"\\n\")){\n+                if(text.length() >= 2 && text.substring(0,1).equals(\"\\n\")){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dd662c2f7b48dc9e3b2cc07e7610ffb5cd56b1f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMzU0Mg==", "bodyText": "Ah, good call. That flew right past me.", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r484823542", "createdAt": "2020-09-08T10:44:43Z", "author": {"login": "Krashner"}, "path": "megamek/src/megamek/common/Report.java", "diffHunk": "@@ -489,7 +487,7 @@ public String getText() {\n             }\n             //draw the sprite at the beginning of the line\n             if(imageCode != null && imageCode.length() > 0){\n-                if(text.substring(0,1).equals(\"\\n\")){\n+                if(text.length() >= 2 && text.substring(0,1).equals(\"\\n\")){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNjUxMw=="}, "originalCommit": {"oid": "3dd662c2f7b48dc9e3b2cc07e7610ffb5cd56b1f"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDIwNzMzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowNToxMlrOHOD-3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo0MjoxNVrOHOXMaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNzM1OA==", "bodyText": "Are we leaking these BAIS? Or do we need them held open for the BufferedImage's.", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r484507358", "createdAt": "2020-09-07T16:05:12Z", "author": {"login": "sixlettervariables"}, "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,31 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dd662c2f7b48dc9e3b2cc07e7610ffb5cd56b1f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMjEyMQ==", "bodyText": "They should be closed, I'll fix that.", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r484822121", "createdAt": "2020-09-08T10:42:15Z", "author": {"login": "Krashner"}, "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,31 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNzM1OA=="}, "originalCommit": {"oid": "3dd662c2f7b48dc9e3b2cc07e7610ffb5cd56b1f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzc1Mjc0OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/Client.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowMDoyMVrOHQqT8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowMDoyMVrOHQqT8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzMjQ5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n          \n          \n            \n                    if (!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487232499", "createdAt": "2020-09-11T19:00:21Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1139,7 +1140,8 @@ public String receiveReport(Vector<Report> v) {\n      * returns the stored <img> tag for given unit id\n      */\n     private String getCachedImgTag(int id){\n-        if(imgCache == null || !imgCache.containsKey(id)) {\n+        if(!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzc1MzQxOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/Client.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowMDozNVrOHQqUXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowMDozNVrOHQqUXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzMjYwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            || imgCache == null || !imgCache.containsKey(id)) {\n          \n          \n            \n                            || (imgCache == null) || !imgCache.containsKey(id)) {", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487232605", "createdAt": "2020-09-11T19:00:35Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1139,7 +1140,8 @@ public String receiveReport(Vector<Report> v) {\n      * returns the stored <img> tag for given unit id\n      */\n     private String getCachedImgTag(int id){\n-        if(imgCache == null || !imgCache.containsKey(id)) {\n+        if(!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n+                || imgCache == null || !imgCache.containsKey(id)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzc1Mzg4OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowMDo0NVrOHQqUqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowMDo0NVrOHQqUqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzMjY4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(image != null) {\n          \n          \n            \n                    if (image != null) {", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487232681", "createdAt": "2020-09-11T19:00:45Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzc1NDM4OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowMDo1NFrOHQqU9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowMDo1NFrOHQqU9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzMjc1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(b64 != null) {\n          \n          \n            \n                    if (b64 != null) {", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487232756", "createdAt": "2020-09-11T19:00:54Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzc2NTE0OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNDozOFrOHQqbwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNDozOFrOHQqbwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNDQ5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } catch (Throwable ex) {\n          \n          \n            \n                            ex.printStackTrace();\n          \n          \n            \n                        } catch (Exception ex) {\n          \n          \n            \n                            MegaMek.getLogger(getClass(), \"loadImage\", ex);", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487234497", "createdAt": "2020-09-11T19:04:38Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;\n+            try {\n+                bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()));\n+                newImage = ImageIO.read(bais);\n+                bais.close();\n+            } catch (Throwable ex) {\n+                ex.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzc2NTU4OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNDo0OFrOHQqcBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNDo0OFrOHQqcBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNDU2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    else{\n          \n          \n            \n                    } else {", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487234567", "createdAt": "2020-09-11T19:04:48Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;\n+            try {\n+                bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()));\n+                newImage = ImageIO.read(bais);\n+                bais.close();\n+            } catch (Throwable ex) {\n+                ex.printStackTrace();\n+            }\n+            return newImage;\n+        }\n+        else{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzc2NjA1OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNDo1NFrOHQqcTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNDo1NFrOHQqcTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNDYzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return  null;\n          \n          \n            \n                        return null;", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487234636", "createdAt": "2020-09-11T19:04:54Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;\n+            try {\n+                bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()));\n+                newImage = ImageIO.read(bais);\n+                bais.close();\n+            } catch (Throwable ex) {\n+                ex.printStackTrace();\n+            }\n+            return newImage;\n+        }\n+        else{\n+            return  null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzc2OTIyOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNjowMFrOHQqeSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzowNzo1MlrOHSLjeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNTE0NQ==", "bodyText": "Can this be done through try with properties?", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487235145", "createdAt": "2020-09-11T19:06:00Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;\n+            try {\n+                bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()));\n+                newImage = ImageIO.read(bais);\n+                bais.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyNTcyMA==", "bodyText": "That's a good call, I'll write it in.", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r488825720", "createdAt": "2020-09-15T17:07:52Z", "author": {"login": "Krashner"}, "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;\n+            try {\n+                bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()));\n+                newImage = ImageIO.read(bais);\n+                bais.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNTE0NQ=="}, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzc3MTIyOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/Report.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNjozNFrOHQqfbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNjozNFrOHQqfbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNTQzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(indentation <= Report.DEFAULT_INDENTATION || showImage) {\n          \n          \n            \n                        if ((indentation <= Report.DEFAULT_INDENTATION) || showImage) {", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487235436", "createdAt": "2020-09-11T19:06:34Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/Report.java", "diffHunk": "@@ -314,9 +313,8 @@ public void choose(boolean choice) {\n      */\n     public void addDesc(Entity entity) {\n         if (entity != null) {\n-            if(GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n-                    && (indentation <= Report.DEFAULT_INDENTATION || showImage)) {\n-                imageCode = \"<span id='\" +entity.getId() + \"'></span>\";\n+            if(indentation <= Report.DEFAULT_INDENTATION || showImage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzc3Mjg2OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/common/Report.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNzowM1rOHQqgYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTowNzowM1rOHQqgYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNTY4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(!imageCode.isEmpty()){\n          \n          \n            \n                            if(text.toString().startsWith(\"\\n\")){\n          \n          \n            \n                        if (!imageCode.isEmpty()) {\n          \n          \n            \n                            if (text.toString().startsWith(\"\\n\")) {", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487235680", "createdAt": "2020-09-11T19:07:03Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/common/Report.java", "diffHunk": "@@ -487,9 +485,9 @@ public String getText() {\n                 }\n                 i++;\n             }\n-            //draw the sprite at the beginning of the line\n-            if(imageCode != null && imageCode.length() > 0){\n-                if(text.substring(0,1).equals(\"\\n\")){\n+            //add the sprite code at the beginning of the line\n+            if(!imageCode.isEmpty()){\n+                if(text.toString().startsWith(\"\\n\")){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODYwNjI5OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoxOTo0MVrOHSL9gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoxOTo0MVrOHSL9gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgzMjM4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n          \n          \n            \n                            MegaMek.getLogger().error(this, ex);", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r488832385", "createdAt": "2020-09-15T17:19:41Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -53,29 +54,25 @@ private void populateImage() {\n         }\n         URL src = getImageURL();\n         Image image = loadImage();\n-        if(image != null) {\n+        if (image != null) {\n             cache.put(src, image);\n         }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e50b4ae6a4f3d1be4d0375a63bbf116017f6d8b7"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2689, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}