{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4ODg0NDEx", "number": 2156, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDo1OTozNFrOEZFSZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowMjo1OFrOEZFYJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzM2NDg3OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/Client.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDo1OTozNFrOHBscKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDo1OTozNFrOHBscKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUzODcyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        System.out.println(\"Null entity reference in cacheImgTag()\");\n          \n          \n            \n                        MegaMek.getLogger().error(this, \"Null entity reference\");", "url": "https://github.com/MegaMek/megamek/pull/2156#discussion_r471538728", "createdAt": "2020-08-17T14:59:34Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1151,33 +1151,29 @@ private String getCachedImgTag(int id){\n     private void cacheImgTag(Entity entity){\n \n         if(entity == null) {\n-            System.out.println(\"Null entity reference\");\n+            System.out.println(\"Null entity reference in cacheImgTag()\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6323445ec74cadd22242efdbb922d8c4b76b852b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzM2NjIzOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/Client.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDo1OTo1MVrOHBsc8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDo1OTo1MVrOHBsc8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUzODkyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }else if (imgCache.containsKey(entity.getId())) {//remove images that should be refreshed\n          \n          \n            \n                    } else if (imgCache.containsKey(entity.getId())) {\n          \n          \n            \n                        //remove images that should be refreshed", "url": "https://github.com/MegaMek/megamek/pull/2156#discussion_r471538929", "createdAt": "2020-08-17T14:59:51Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1151,33 +1151,29 @@ private String getCachedImgTag(int id){\n     private void cacheImgTag(Entity entity){\n \n         if(entity == null) {\n-            System.out.println(\"Null entity reference\");\n+            System.out.println(\"Null entity reference in cacheImgTag()\");\n             return;\n         }\n \n         if (imgCache == null) {\n             imgCache = new Hashtable<>();\n-        }else if (imgCache.containsKey(entity.getId())) {\n-            //remove images that should be regenerated\n+        }else if (imgCache.containsKey(entity.getId())) {//remove images that should be refreshed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6323445ec74cadd22242efdbb922d8c4b76b852b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzM3MDMwOnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/Client.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowMDo0M1rOHBsfZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowMDo0M1rOHBsfZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUzOTU1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(getTargetImage(entity) != null){//convert image to base64, add to to <img> tag and store in cache\n          \n          \n            \n                    if (getTargetImage(entity) != null) {\n          \n          \n            \n                        //convert image to base64, add to to <img> tag and store in cache", "url": "https://github.com/MegaMek/megamek/pull/2156#discussion_r471539559", "createdAt": "2020-08-17T15:00:43Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1151,33 +1151,29 @@ private String getCachedImgTag(int id){\n     private void cacheImgTag(Entity entity){\n \n         if(entity == null) {\n-            System.out.println(\"Null entity reference\");\n+            System.out.println(\"Null entity reference in cacheImgTag()\");\n             return;\n         }\n \n         if (imgCache == null) {\n             imgCache = new Hashtable<>();\n-        }else if (imgCache.containsKey(entity.getId())) {\n-            //remove images that should be regenerated\n+        }else if (imgCache.containsKey(entity.getId())) {//remove images that should be refreshed\n             imgCache.remove(entity.getId());\n         }\n \n-        //convert to base64, add to to <img> tag and store in cache\n-        if (!imgCache.containsKey(entity.getId())) {\n-            Image image = ImageUtil.getScaledImage(getTargetImage(entity),  56, 48);\n-            if(image!=null) {\n-                try {\n-                    String base64Text;\n-                    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-                    ImageIO.write((RenderedImage) image, \"png\", baos);\n-                    baos.flush();\n-                    base64Text = Base64.getEncoder().encodeToString(baos.toByteArray());\n-                    baos.close();\n-                    String img = \"<img src='data:image/png;base64,\" + base64Text + \"'>\";\n-                    imgCache.put(entity.getId(), img);\n-                } catch (final IOException ioe) {\n-                    throw new UncheckedIOException(ioe);\n-                }\n+        if(getTargetImage(entity) != null){//convert image to base64, add to to <img> tag and store in cache", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6323445ec74cadd22242efdbb922d8c4b76b852b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzM3OTU5OnYy", "diffSide": "RIGHT", "path": "megamek/src/megamek/client/Client.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowMjo1OFrOHBslCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTozMToxNlrOHBtvdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MTAwMw==", "bodyText": "if (bv == null) {\n    return null;\n} else if (e.isDestroyed()) {\n    return bv.getTilesetManager().wreckMarkerFor(e, -1);\n} else {\n    return bv.getTilesetManager().imageFor(e);\n}", "url": "https://github.com/MegaMek/megamek/pull/2156#discussion_r471541003", "createdAt": "2020-08-17T15:02:58Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1186,10 +1182,14 @@ private void cacheImgTag(Entity entity){\n      * Gets the current mech image\n      */\n     private Image getTargetImage(Entity e){\n-        if(e.isDestroyed()) {\n-            return bv.getTilesetManager().wreckMarkerFor(e, -1);\n+        if(bv == null){\n+            return  null;\n         }else {\n-            return bv.getTilesetManager().imageFor(e);\n+            if (e.isDestroyed()) {\n+                return bv.getTilesetManager().wreckMarkerFor(e, -1);\n+            } else {\n+                return bv.getTilesetManager().imageFor(e);\n+            }\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6323445ec74cadd22242efdbb922d8c4b76b852b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MTI2Mw==", "bodyText": "Suggested rewrite to improve readability.", "url": "https://github.com/MegaMek/megamek/pull/2156#discussion_r471541263", "createdAt": "2020-08-17T15:03:23Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1186,10 +1182,14 @@ private void cacheImgTag(Entity entity){\n      * Gets the current mech image\n      */\n     private Image getTargetImage(Entity e){\n-        if(e.isDestroyed()) {\n-            return bv.getTilesetManager().wreckMarkerFor(e, -1);\n+        if(bv == null){\n+            return  null;\n         }else {\n-            return bv.getTilesetManager().imageFor(e);\n+            if (e.isDestroyed()) {\n+                return bv.getTilesetManager().wreckMarkerFor(e, -1);\n+            } else {\n+                return bv.getTilesetManager().imageFor(e);\n+            }\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MTAwMw=="}, "originalCommit": {"oid": "6323445ec74cadd22242efdbb922d8c4b76b852b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1MDI5NA==", "bodyText": "Apparently I'm sloppy when it's early. I appreciate the suggestions.", "url": "https://github.com/MegaMek/megamek/pull/2156#discussion_r471550294", "createdAt": "2020-08-17T15:16:57Z", "author": {"login": "Krashner"}, "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1186,10 +1182,14 @@ private void cacheImgTag(Entity entity){\n      * Gets the current mech image\n      */\n     private Image getTargetImage(Entity e){\n-        if(e.isDestroyed()) {\n-            return bv.getTilesetManager().wreckMarkerFor(e, -1);\n+        if(bv == null){\n+            return  null;\n         }else {\n-            return bv.getTilesetManager().imageFor(e);\n+            if (e.isDestroyed()) {\n+                return bv.getTilesetManager().wreckMarkerFor(e, -1);\n+            } else {\n+                return bv.getTilesetManager().imageFor(e);\n+            }\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MTAwMw=="}, "originalCommit": {"oid": "6323445ec74cadd22242efdbb922d8c4b76b852b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2MDA1Mw==", "bodyText": "It happens to us all, and welcome :)", "url": "https://github.com/MegaMek/megamek/pull/2156#discussion_r471560053", "createdAt": "2020-08-17T15:31:16Z", "author": {"login": "Windchild292"}, "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1186,10 +1182,14 @@ private void cacheImgTag(Entity entity){\n      * Gets the current mech image\n      */\n     private Image getTargetImage(Entity e){\n-        if(e.isDestroyed()) {\n-            return bv.getTilesetManager().wreckMarkerFor(e, -1);\n+        if(bv == null){\n+            return  null;\n         }else {\n-            return bv.getTilesetManager().imageFor(e);\n+            if (e.isDestroyed()) {\n+                return bv.getTilesetManager().wreckMarkerFor(e, -1);\n+            } else {\n+                return bv.getTilesetManager().imageFor(e);\n+            }\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MTAwMw=="}, "originalCommit": {"oid": "6323445ec74cadd22242efdbb922d8c4b76b852b"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2656, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}