{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODU1OTk4", "number": 158, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDo1Mjo0OVrODqvO_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODowNzo0N1rOD7ibLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTQwNjY4OnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.data.common.validation/src/org/polarsys/capella/core/data/common/validation/project/ProjectReferencedLibrariesRule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDo1Mjo0OVrOF6qvrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDo1Mjo0OVrOF6qvrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA2MjA2MQ==", "bodyText": "There is no need for this method.\nProjectExt.getProject(target); already does the target instanceof Project check \ud83d\ude09", "url": "https://github.com/eclipse/capella/pull/158#discussion_r397062061", "createdAt": "2020-03-24T10:52:49Z", "author": {"login": "sandupostaru"}, "path": "core/plugins/org.polarsys.capella.core.data.common.validation/src/org/polarsys/capella/core/data/common/validation/project/ProjectReferencedLibrariesRule.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2020 THALES GLOBAL SERVICES.\r\n+ * All rights reserved. This program and the accompanying materials\r\n+ * are made available under the terms of the Eclipse Public License v1.0\r\n+ * which accompanies this distribution, and is available at\r\n+ * http://www.eclipse.org/legal/epl-v10.html\r\n+ *  \r\n+ * Contributors:\r\n+ *    Thales - initial API and implementation\r\n+ *******************************************************************************/\r\n+\r\n+package org.polarsys.capella.core.data.common.validation.project;\r\n+\r\n+import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.emf.ecore.InternalEObject;\r\n+import org.eclipse.emf.validation.IValidationContext;\r\n+import org.polarsys.capella.common.libraries.LibraryReference;\r\n+import org.polarsys.capella.common.libraries.ModelInformation;\r\n+import org.polarsys.capella.core.data.capellamodeller.Project;\r\n+import org.polarsys.capella.core.data.capellamodeller.SystemEngineering;\r\n+import org.polarsys.capella.core.model.helpers.ProjectExt;\r\n+import org.polarsys.capella.core.validation.rule.AbstractValidationRule;\r\n+import org.polarsys.kitalpha.emde.model.ElementExtension;\r\n+\r\n+public class ProjectReferencedLibrariesRule extends AbstractValidationRule {\r\n+\r\n+  /**\r\n+   * The constraint ID\r\n+   */\r\n+  public static final String ID = \"org.polarsys.capella.core.data.common.validation.I_03\";\r\n+  \r\n+  @Override\r\n+  public IStatus validate(IValidationContext validationContext) {\r\n+\r\n+    EObject target = validationContext.getTarget();\r\n+\r\n+    Project project = getProject(target);\r\n+    if (project != null) {\r\n+      for (ElementExtension extension : project.getOwnedExtensions()) {\r\n+        if (extension instanceof ModelInformation) {\r\n+          ModelInformation modelInformation = (ModelInformation) extension;\r\n+          for (LibraryReference reference : modelInformation.getOwnedReferences()) {\r\n+            if ((reference.getLibrary() != null) && reference.getLibrary().eIsProxy()) {\r\n+              return validationContext.createFailureStatus(((InternalEObject) reference.getLibrary()).eProxyURI());\r\n+            }\r\n+          }\r\n+        }\r\n+      }\r\n+    }\r\n+    return Status.OK_STATUS;\r\n+  }\r\n+\r\n+  private Project getProject(EObject target) {\r\n+    if (target instanceof Project) {\r\n+      return (Project) target;\r\n+    } else if (target instanceof SystemEngineering) {\r\n+      return ProjectExt.getProject(target);\r\n+    }\r\n+    return null;\r\n+  }\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49b45f2948daaeeeb0162e00c53f10ce61bc2335"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTk1ODUxOnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.libraries.ui/src/org/polarsys/capella/core/libraries/ui/handlers/ManageReferencedLibrariesHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzoyODoxNlrOF6wJ8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzoyODoxNlrOF6wJ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE1MDcwNQ==", "bodyText": "I think there might be a better way to do this.\nI updated the original ticket with the details and some images \ud83d\ude09", "url": "https://github.com/eclipse/capella/pull/158#discussion_r397150705", "createdAt": "2020-03-24T13:28:16Z", "author": {"login": "sandupostaru"}, "path": "core/plugins/org.polarsys.capella.core.libraries.ui/src/org/polarsys/capella/core/libraries/ui/handlers/ManageReferencedLibrariesHandler.java", "diffHunk": "@@ -79,20 +92,27 @@ protected Session getExistingSession(IFile file) {\n   }\n \n   @Override\n-  public void removeHandlerListener(IHandlerListener handlerListener_p) {\n-    super.removeHandlerListener(handlerListener_p);\n+  public void removeHandlerListener(IHandlerListener handlerListener) {\n+    super.removeHandlerListener(handlerListener);\n   }\n \n   @Override\n-  public Object execute(ExecutionEvent event_p) throws ExecutionException {\n-    TreeSelection selection = (TreeSelection) HandlerUtil.getCurrentSelection(event_p);\n+  public Object execute(ExecutionEvent event) throws ExecutionException {\n+    TreeSelection selection = (TreeSelection) HandlerUtil.getCurrentSelection(event);\n     IFile file = (IFile) selection.getFirstElement();\n     Session session = getExistingSession(file);\n \n     IModel rootModel = ILibraryManager.INSTANCE.getModel(session.getTransactionalEditingDomain());\n     if ((rootModel == null) || !(rootModel instanceof IModel.Edit)) {\n       return null;\n     }\n+    \n+    IStatus status = checkReferencedLibraries(rootModel, session);\n+    if (!status.isOK()) {\n+      MessageDialog.openError(Display.getCurrent().getActiveShell(), \"Error\", status.getMessage());\n+      return null;\n+    }\n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49b45f2948daaeeeb0162e00c53f10ce61bc2335"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzQ3OTE1OnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.libraries.ui/src/org/polarsys/capella/core/libraries/ui/views/libraryManager/referencesManager/ReferencesManagerWidget.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0NDoxNFrOGT6Fpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0NDoxNFrOGT6Fpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyNzg0Ng==", "bodyText": "You iterate directly by using a index on the model.getAllLibraries() in order to avoid a O(n^2) complexity.", "url": "https://github.com/eclipse/capella/pull/158#discussion_r423527846", "createdAt": "2020-05-12T07:44:14Z", "author": {"login": "sandupostaru"}, "path": "core/plugins/org.polarsys.capella.core.libraries.ui/src/org/polarsys/capella/core/libraries/ui/views/libraryManager/referencesManager/ReferencesManagerWidget.java", "diffHunk": "@@ -102,6 +105,15 @@ protected void refreshView() {\n         }\n       }\n     }\n+    \n+    for (IModel library : model.getAllLibraries()) {\n+      int index = model.getAllLibraries().indexOf(library);\n+      if (index >= 0) {\n+        if (CapellaLibraryExt.isUnresolvableIdentifier(library.getIdentifier())) {\n+          itemsToBeItalicAndRed.add(table.getItem(index));\n+        }\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a99de2df790fa98f20cf57e65c885dedc2d09a"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzQ4NDA5OnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.libraries.ui/src/org/polarsys/capella/core/libraries/ui/views/libraryManager/referencesManager/ReferencesManagerWidget.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0NTozMlrOGT6IyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0NTozMlrOGT6IyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyODY0OA==", "bodyText": "Instead of iterating on items and checking if it is contained in itemsToBeItalicAndRed, can we iterate directly on itemsToBeItalicAndRed? Is there a case where items in itemsToBeItalicAndRed would not appear in the items collection ?", "url": "https://github.com/eclipse/capella/pull/158#discussion_r423528648", "createdAt": "2020-05-12T07:45:32Z", "author": {"login": "sandupostaru"}, "path": "core/plugins/org.polarsys.capella.core.libraries.ui/src/org/polarsys/capella/core/libraries/ui/views/libraryManager/referencesManager/ReferencesManagerWidget.java", "diffHunk": "@@ -124,6 +136,12 @@ protected void refreshView() {\n         item.setForeground(Display.getDefault().getSystemColor(SWT.COLOR_BLACK));\n       }\n     }\n+    for (TableItem item : items) {\n+      if (itemsToBeItalicAndRed.contains(item)) {\n+        item.setForeground(Display.getDefault().getSystemColor(SWT.COLOR_RED));\n+        item.setFont(JFaceResources.getFontRegistry().getItalic(JFaceResources.DEFAULT_FONT));\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a99de2df790fa98f20cf57e65c885dedc2d09a"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzQ4NzI0OnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.libraries/src/org/polarsys/capella/core/libraries/model/CapellaLibraryExt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0NjoyMlrOGT6KlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0NjoyMlrOGT6KlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyOTEwOQ==", "bodyText": "We can return identifier instanceof ModelIdentifier && ((ModelIdentifier) identifier).isProxy() (Sonar Rule)", "url": "https://github.com/eclipse/capella/pull/158#discussion_r423529109", "createdAt": "2020-05-12T07:46:22Z", "author": {"login": "sandupostaru"}, "path": "core/plugins/org.polarsys.capella.core.libraries/src/org/polarsys/capella/core/libraries/model/CapellaLibraryExt.java", "diffHunk": "@@ -61,5 +62,12 @@ public static ModelInformation getModelInformation(Resource resource, boolean cr\n     }\r\n     return null;\r\n   }\r\n+  \r\n+  public static boolean isUnresolvableIdentifier(IModelIdentifier identifier) {\r\n+    if (identifier instanceof ModelIdentifier && ((ModelIdentifier) identifier).isProxy()) {\r\n+      return true;\r\n+    }\r\n+    return false;\r\n+  }\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a99de2df790fa98f20cf57e65c885dedc2d09a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzU2NTkwOnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.libraries/src/org/polarsys/capella/core/libraries/properties/ReferencesProperty.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODowNzo0N1rOGT68qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODowNzo0N1rOGT68qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0MTkzMQ==", "bodyText": "model.getUnresolvableReferencedLibraries().stream().map(m -> modelX.getIdentifier().getName()).collect(Collectors.joining(\", \"));\none liner :D", "url": "https://github.com/eclipse/capella/pull/158#discussion_r423541931", "createdAt": "2020-05-12T08:07:47Z", "author": {"login": "sandupostaru"}, "path": "core/plugins/org.polarsys.capella.core.libraries/src/org/polarsys/capella/core/libraries/properties/ReferencesProperty.java", "diffHunk": "@@ -59,7 +59,20 @@ public IStatus validate(Object newValue_p, IPropertyContext context_p) {\n \n     boolean unsavedModel = model.isUnsavedRootModel();\n     if (unsavedModel) {\n-      return new Status(IStatus.WARNING, Activator.PLUGIN_ID, \"The session is unsaved. Manage references will save the session.\");\n+      return new Status(IStatus.WARNING, Activator.PLUGIN_ID,\n+          \"The session is unsaved. Manage references will save the session.\");\n+    }\n+\n+    Collection<IModel> unResolvableLibs = model.getUnresolvableReferencedLibraries();\n+    if (!unResolvableLibs.isEmpty()) {\n+      StringBuffer b = new StringBuffer();\n+      for (IModel modelX : unResolvableLibs) {\n+        b.append(modelX.getIdentifier().getName() + \",\");\n+      }\n+      b.deleteCharAt(b.length() - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a99de2df790fa98f20cf57e65c885dedc2d09a"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4330, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}