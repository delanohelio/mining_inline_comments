{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyOTU2Njgx", "number": 110, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNToyMDoxMFrODksfTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNToyMDoxMFrODksfTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODA0MjM5OnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.compare/src/org/polarsys/capella/core/compare/CapellaScope.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNToyMDoxMFrOFxKMag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjoxNDo0OVrOFxMikA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA5MTU2Mg==", "bodyText": "Are you sure about the false?\nDoes external resources are loaded as long as scope is used in diffmerge?", "url": "https://github.com/eclipse/capella/pull/110#discussion_r387091562", "createdAt": "2020-03-03T15:20:10Z", "author": {"login": "pdulth"}, "path": "core/plugins/org.polarsys.capella.core.compare/src/org/polarsys/capella/core/compare/CapellaScope.java", "diffHunk": "@@ -282,6 +292,36 @@ protected IFile getFileFor(Resource resource) {\n     return result;\n   }\n   \n+  /**\n+   * Return a scope-local element that corresponds to the given one, if any, otherwise return\n+   * the given element\n+   * @param element a potentially null element\n+   * @return an element that is null if and only if the given element is null\n+   */\n+  protected EObject getLocalElement(EObject element) {\n+    EObject result = element;\n+    ResourceSet localResourceSet = _resourceSet;\n+    if (element != null && localResourceSet != null ) {\n+      Resource valueResource = element.eResource();\n+      if (valueResource != null && localResourceSet != valueResource.getResourceSet()) {\n+        // Element belongs to another resource set\n+        URI valueResourceURI = valueResource.getURI();\n+        if (valueResourceURI != null && valueResourceURI.isPlatformPlugin()) {\n+          // And element belongs to a platform plug-in\n+          URI valueURI = EcoreUtil.getURI(element);\n+          if (valueURI != null) {\n+            // Try and get the same element (URI-based) in the local resource set\n+            EObject localElement = localResourceSet.getEObject(valueURI, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d0e39b4c3483826ca6c9d3f1793cbb1f8d34379"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA5ODMxMA==", "bodyText": "The rationale is to have as little impact as possible: if the desired element is not readily available, then the usual behavior is executed. It does not otherwise seem harmful to me because we are in a context (scope modification through add(...)) where the scope is supposed to have been loaded already. Also, the FragmentedModelScope base class was not intended to allow additional loading (using true) from a modification method such as add(...).", "url": "https://github.com/eclipse/capella/pull/110#discussion_r387098310", "createdAt": "2020-03-03T15:29:13Z", "author": {"login": "oconstant"}, "path": "core/plugins/org.polarsys.capella.core.compare/src/org/polarsys/capella/core/compare/CapellaScope.java", "diffHunk": "@@ -282,6 +292,36 @@ protected IFile getFileFor(Resource resource) {\n     return result;\n   }\n   \n+  /**\n+   * Return a scope-local element that corresponds to the given one, if any, otherwise return\n+   * the given element\n+   * @param element a potentially null element\n+   * @return an element that is null if and only if the given element is null\n+   */\n+  protected EObject getLocalElement(EObject element) {\n+    EObject result = element;\n+    ResourceSet localResourceSet = _resourceSet;\n+    if (element != null && localResourceSet != null ) {\n+      Resource valueResource = element.eResource();\n+      if (valueResource != null && localResourceSet != valueResource.getResourceSet()) {\n+        // Element belongs to another resource set\n+        URI valueResourceURI = valueResource.getURI();\n+        if (valueResourceURI != null && valueResourceURI.isPlatformPlugin()) {\n+          // And element belongs to a platform plug-in\n+          URI valueURI = EcoreUtil.getURI(element);\n+          if (valueURI != null) {\n+            // Try and get the same element (URI-based) in the local resource set\n+            EObject localElement = localResourceSet.getEObject(valueURI, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA5MTU2Mg=="}, "originalCommit": {"oid": "2d0e39b4c3483826ca6c9d3f1793cbb1f8d34379"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMDAwMA==", "bodyText": "Ok, i have updated junit accordingly", "url": "https://github.com/eclipse/capella/pull/110#discussion_r387130000", "createdAt": "2020-03-03T16:14:49Z", "author": {"login": "pdulth"}, "path": "core/plugins/org.polarsys.capella.core.compare/src/org/polarsys/capella/core/compare/CapellaScope.java", "diffHunk": "@@ -282,6 +292,36 @@ protected IFile getFileFor(Resource resource) {\n     return result;\n   }\n   \n+  /**\n+   * Return a scope-local element that corresponds to the given one, if any, otherwise return\n+   * the given element\n+   * @param element a potentially null element\n+   * @return an element that is null if and only if the given element is null\n+   */\n+  protected EObject getLocalElement(EObject element) {\n+    EObject result = element;\n+    ResourceSet localResourceSet = _resourceSet;\n+    if (element != null && localResourceSet != null ) {\n+      Resource valueResource = element.eResource();\n+      if (valueResource != null && localResourceSet != valueResource.getResourceSet()) {\n+        // Element belongs to another resource set\n+        URI valueResourceURI = valueResource.getURI();\n+        if (valueResourceURI != null && valueResourceURI.isPlatformPlugin()) {\n+          // And element belongs to a platform plug-in\n+          URI valueURI = EcoreUtil.getURI(element);\n+          if (valueURI != null) {\n+            // Try and get the same element (URI-based) in the local resource set\n+            EObject localElement = localResourceSet.getEObject(valueURI, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA5MTU2Mg=="}, "originalCommit": {"oid": "2d0e39b4c3483826ca6c9d3f1793cbb1f8d34379"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4299, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}