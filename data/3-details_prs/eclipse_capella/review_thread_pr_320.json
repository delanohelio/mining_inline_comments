{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NTQyMjkw", "number": 320, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTozODozOVrOEWwbxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTozODozOVrOEWwbxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjk3NjcwOnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.projection.common/src/org/polarsys/capella/core/projection/common/TransitionHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTozODozOVrOG-LC1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTo0NzowNFrOG-LQ2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg0NTg0Ng==", "bodyText": "Is the check\n(object instanceof CapellaElement)\n&& (CapellaLayerCheckingExt.isInContextLayer((CapellaElement) object)\n|| CapellaLayerCheckingExt.isInLogicalLayer((CapellaElement) object)\n|| CapellaLayerCheckingExt.isInPhysicalLayer((CapellaElement) object))\nredundant (every object passed to the method is already sure to be a CapellaElement & belongs to SA/LA/PA)?", "url": "https://github.com/eclipse/capella/pull/320#discussion_r467845846", "createdAt": "2020-08-10T11:38:39Z", "author": {"login": "minhtutonthat"}, "path": "core/plugins/org.polarsys.capella.core.projection.common/src/org/polarsys/capella/core/projection/common/TransitionHelper.java", "diffHunk": "@@ -489,54 +489,61 @@ public boolean isPropertyValueTransitionAvailable(EObject object) {\n   }\n \n   public boolean isIS2ISSALATransitionAvailable(EObject element) {\n-    return element instanceof Scenario && ((Scenario) element).getKind() == ScenarioKind.INTERFACE\n-        && CapellaLayerCheckingExt.isAOrInContextLayer((Scenario) element)\n-        && isIS2ISTransitionAvailable((Scenario) element, \"SALA\");\n+    return element instanceof CapellaElement && CapellaLayerCheckingExt.isAOrInContextLayer((CapellaElement) element)\n+        && isIS2ISTransitionAvailable(element, \"SALA\");\n   }\n \n   public boolean isIS2ISLAPATransitionAvailable(EObject element) {\n-    return element instanceof Scenario && ((Scenario) element).getKind() == ScenarioKind.INTERFACE\n-        && CapellaLayerCheckingExt.isAOrInLogicalLayer((Scenario) element)\n-        && isIS2ISTransitionAvailable((Scenario) element, \"LAPA\");\n+    return element instanceof CapellaElement && CapellaLayerCheckingExt.isAOrInLogicalLayer((CapellaElement) element)\n+        && isIS2ISTransitionAvailable(element, \"LAPA\");\n   }\n \n   public boolean isIS2ISPAEPBSTransitionAvailable(EObject element) {\n-    return element instanceof Scenario && ((Scenario) element).getKind() == ScenarioKind.INTERFACE\n-        && CapellaLayerCheckingExt.isAOrInPhysicalLayer((Scenario) element)\n-        && isIS2ISTransitionAvailable((Scenario) element, \"PAEPBS\");\n+    return element instanceof CapellaElement && CapellaLayerCheckingExt.isAOrInPhysicalLayer((CapellaElement) element)\n+        && isIS2ISTransitionAvailable(element, \"PAEPBS\");\n   }\n-  \n-  private boolean isIS2ISTransitionAvailable(Scenario scenario, String transition) {\n-\n-    BlockArchitecture architectureSource = BlockArchitectureExt.getRootBlockArchitecture(scenario);\n-\n-    // Disable command if there is a transitioned IS\n-    for (AbstractTrace trace : scenario.getIncomingTraces()) {\n-      TraceableElement src = trace.getSourceElement();\n-      if (src instanceof Scenario) {\n-        Scenario existingScenario = (Scenario) src;\n-        // Should be an Interface Scenario\n-        if (existingScenario.getKind() == ScenarioKind.INTERFACE) {\n-          BlockArchitecture architectureTarget = BlockArchitectureExt.getRootBlockArchitecture(existingScenario);\n-          if (\"SALA\".equals(transition)) {\n-            if (architectureSource instanceof SystemAnalysis && architectureTarget instanceof LogicalArchitecture) {\n-              return false;\n-            }\n-          } else if (\"LAPA\".equals(transition)) {\n-            if (architectureSource instanceof LogicalArchitecture\n-                && architectureTarget instanceof PhysicalArchitecture) {\n-              return false;\n-            }\n-          } else if (\"PAEPBS\".equals(transition)) {\n-            if (architectureSource instanceof PhysicalArchitecture && architectureTarget instanceof EPBSArchitecture) {\n-              return false;\n+\n+  private boolean isIS2ISTransitionAvailable(EObject object, String transition) {\n+    if (object instanceof Scenario && ((Scenario) object).getKind() == ScenarioKind.INTERFACE) {\n+      Scenario scenario = (Scenario) object;\n+      BlockArchitecture architectureSource = BlockArchitectureExt.getRootBlockArchitecture(scenario);\n+\n+      // Disable command if there is a transitioned IS\n+      for (AbstractTrace trace : scenario.getIncomingTraces()) {\n+        TraceableElement src = trace.getSourceElement();\n+        if (src instanceof Scenario) {\n+          Scenario existingScenario = (Scenario) src;\n+          // Should be an Interface Scenario\n+          if (existingScenario.getKind() == ScenarioKind.INTERFACE) {\n+            BlockArchitecture architectureTarget = BlockArchitectureExt.getRootBlockArchitecture(existingScenario);\n+            if (\"SALA\".equals(transition)) {\n+              if (architectureSource instanceof SystemAnalysis && architectureTarget instanceof LogicalArchitecture) {\n+                return false;\n+              }\n+            } else if (\"LAPA\".equals(transition)) {\n+              if (architectureSource instanceof LogicalArchitecture\n+                  && architectureTarget instanceof PhysicalArchitecture) {\n+                return false;\n+              }\n+            } else if (\"PAEPBS\".equals(transition)) {\n+              if (architectureSource instanceof PhysicalArchitecture\n+                  && architectureTarget instanceof EPBSArchitecture) {\n+                return false;\n+              }\n             }\n-          }\n \n-          continue;\n+            continue;\n+          }\n         }\n       }\n+      return true;\n     }\n-    return true;\n+    return ((object instanceof SystemAnalysis) || (object instanceof LogicalArchitecture)\n+        || (object instanceof PhysicalArchitecture))\n+        || ((object instanceof CapellaElement)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8299cf2054e33dafdd2f114dbc0266a295705f9"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg0OTQzNA==", "bodyText": "Yes, it seems redundant, I will update.", "url": "https://github.com/eclipse/capella/pull/320#discussion_r467849434", "createdAt": "2020-08-10T11:47:04Z", "author": {"login": "georgiana-ecobici"}, "path": "core/plugins/org.polarsys.capella.core.projection.common/src/org/polarsys/capella/core/projection/common/TransitionHelper.java", "diffHunk": "@@ -489,54 +489,61 @@ public boolean isPropertyValueTransitionAvailable(EObject object) {\n   }\n \n   public boolean isIS2ISSALATransitionAvailable(EObject element) {\n-    return element instanceof Scenario && ((Scenario) element).getKind() == ScenarioKind.INTERFACE\n-        && CapellaLayerCheckingExt.isAOrInContextLayer((Scenario) element)\n-        && isIS2ISTransitionAvailable((Scenario) element, \"SALA\");\n+    return element instanceof CapellaElement && CapellaLayerCheckingExt.isAOrInContextLayer((CapellaElement) element)\n+        && isIS2ISTransitionAvailable(element, \"SALA\");\n   }\n \n   public boolean isIS2ISLAPATransitionAvailable(EObject element) {\n-    return element instanceof Scenario && ((Scenario) element).getKind() == ScenarioKind.INTERFACE\n-        && CapellaLayerCheckingExt.isAOrInLogicalLayer((Scenario) element)\n-        && isIS2ISTransitionAvailable((Scenario) element, \"LAPA\");\n+    return element instanceof CapellaElement && CapellaLayerCheckingExt.isAOrInLogicalLayer((CapellaElement) element)\n+        && isIS2ISTransitionAvailable(element, \"LAPA\");\n   }\n \n   public boolean isIS2ISPAEPBSTransitionAvailable(EObject element) {\n-    return element instanceof Scenario && ((Scenario) element).getKind() == ScenarioKind.INTERFACE\n-        && CapellaLayerCheckingExt.isAOrInPhysicalLayer((Scenario) element)\n-        && isIS2ISTransitionAvailable((Scenario) element, \"PAEPBS\");\n+    return element instanceof CapellaElement && CapellaLayerCheckingExt.isAOrInPhysicalLayer((CapellaElement) element)\n+        && isIS2ISTransitionAvailable(element, \"PAEPBS\");\n   }\n-  \n-  private boolean isIS2ISTransitionAvailable(Scenario scenario, String transition) {\n-\n-    BlockArchitecture architectureSource = BlockArchitectureExt.getRootBlockArchitecture(scenario);\n-\n-    // Disable command if there is a transitioned IS\n-    for (AbstractTrace trace : scenario.getIncomingTraces()) {\n-      TraceableElement src = trace.getSourceElement();\n-      if (src instanceof Scenario) {\n-        Scenario existingScenario = (Scenario) src;\n-        // Should be an Interface Scenario\n-        if (existingScenario.getKind() == ScenarioKind.INTERFACE) {\n-          BlockArchitecture architectureTarget = BlockArchitectureExt.getRootBlockArchitecture(existingScenario);\n-          if (\"SALA\".equals(transition)) {\n-            if (architectureSource instanceof SystemAnalysis && architectureTarget instanceof LogicalArchitecture) {\n-              return false;\n-            }\n-          } else if (\"LAPA\".equals(transition)) {\n-            if (architectureSource instanceof LogicalArchitecture\n-                && architectureTarget instanceof PhysicalArchitecture) {\n-              return false;\n-            }\n-          } else if (\"PAEPBS\".equals(transition)) {\n-            if (architectureSource instanceof PhysicalArchitecture && architectureTarget instanceof EPBSArchitecture) {\n-              return false;\n+\n+  private boolean isIS2ISTransitionAvailable(EObject object, String transition) {\n+    if (object instanceof Scenario && ((Scenario) object).getKind() == ScenarioKind.INTERFACE) {\n+      Scenario scenario = (Scenario) object;\n+      BlockArchitecture architectureSource = BlockArchitectureExt.getRootBlockArchitecture(scenario);\n+\n+      // Disable command if there is a transitioned IS\n+      for (AbstractTrace trace : scenario.getIncomingTraces()) {\n+        TraceableElement src = trace.getSourceElement();\n+        if (src instanceof Scenario) {\n+          Scenario existingScenario = (Scenario) src;\n+          // Should be an Interface Scenario\n+          if (existingScenario.getKind() == ScenarioKind.INTERFACE) {\n+            BlockArchitecture architectureTarget = BlockArchitectureExt.getRootBlockArchitecture(existingScenario);\n+            if (\"SALA\".equals(transition)) {\n+              if (architectureSource instanceof SystemAnalysis && architectureTarget instanceof LogicalArchitecture) {\n+                return false;\n+              }\n+            } else if (\"LAPA\".equals(transition)) {\n+              if (architectureSource instanceof LogicalArchitecture\n+                  && architectureTarget instanceof PhysicalArchitecture) {\n+                return false;\n+              }\n+            } else if (\"PAEPBS\".equals(transition)) {\n+              if (architectureSource instanceof PhysicalArchitecture\n+                  && architectureTarget instanceof EPBSArchitecture) {\n+                return false;\n+              }\n             }\n-          }\n \n-          continue;\n+            continue;\n+          }\n         }\n       }\n+      return true;\n     }\n-    return true;\n+    return ((object instanceof SystemAnalysis) || (object instanceof LogicalArchitecture)\n+        || (object instanceof PhysicalArchitecture))\n+        || ((object instanceof CapellaElement)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg0NTg0Ng=="}, "originalCommit": {"oid": "a8299cf2054e33dafdd2f114dbc0266a295705f9"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4230, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}