{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NjMwNzY2", "number": 389, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo0NDo1N1rOErKToQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo1Nzo0OVrOEsDzVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjkzMDg5OnYy", "diffSide": "RIGHT", "path": "releng/plugins/org.polarsys.capella.core.egf/templates/pattern._7k9hkJG2EeCjOr0zxh3IfQ/method._7k9hlZG2EeCjOr0zxh3IfQ.pt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo0NDo1N1rOHdxfMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo0NDo1N1rOHdxfMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MTU1NQ==", "bodyText": "\ud83e\udd47", "url": "https://github.com/eclipse/capella/pull/389#discussion_r500981555", "createdAt": "2020-10-07T12:44:57Z", "author": {"login": "pdulth"}, "path": "releng/plugins/org.polarsys.capella.core.egf/templates/pattern._7k9hkJG2EeCjOr0zxh3IfQ/method._7k9hlZG2EeCjOr0zxh3IfQ.pt", "diffHunk": "@@ -36,7 +36,7 @@\n         String targetName = \"\";<%=genModel.getNonNLS()%>\r\n         <%=genModel.getImportedName(\"org.eclipse.emf.ecore.EObject\")%> target = null;\r\n \r\n-<%List<GenClass> superclasses = genClass.getAllBaseGenClasses(); superclasses.add(genClass);%>\r\n+<%List<GenClass> superclasses = new ArrayList(genClass.getAllBaseGenClasses()); superclasses.add(genClass);%>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "823a7afd1ec113d349fd8d94fb0194670260a9a6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjE0NjQxOnYy", "diffSide": "LEFT", "path": "common/plugins/org.polarsys.capella.common.data.core.gen/generated/org/polarsys/capella/common/data/modellingcore/ModelElement.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzowNjo0MlrOHfI5Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzowNjo0MlrOHfI5Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxMzYwMw==", "bodyText": "What is the source of this change?", "url": "https://github.com/eclipse/capella/pull/389#discussion_r502413603", "createdAt": "2020-10-09T13:06:42Z", "author": {"login": "sandupostaru"}, "path": "common/plugins/org.polarsys.capella.common.data.core.gen/generated/org/polarsys/capella/common/data/modellingcore/ModelElement.java", "diffHunk": "@@ -201,7 +204,7 @@\n \r\n \t * <!-- begin-user-doc -->\r\n \t * <!-- end-user-doc -->\r\n-\t * @model annotation=\"http://www.eclipse.org/emf/2002/GenModel body='org.eclipse.emf.ecore.util.EcoreUtil.delete(this);'\"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3599070586b1abe0bed70d53115713232372e1"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjE0NzMzOnYy", "diffSide": "LEFT", "path": "common/plugins/org.polarsys.capella.common.data.core.gen/generated/org/polarsys/capella/common/data/modellingcore/ModelElement.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzowNjo1NVrOHfI5pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzowNjo1NVrOHfI5pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxMzczNA==", "bodyText": "What is the source of this change?", "url": "https://github.com/eclipse/capella/pull/389#discussion_r502413734", "createdAt": "2020-10-09T13:06:55Z", "author": {"login": "sandupostaru"}, "path": "common/plugins/org.polarsys.capella.common.data.core.gen/generated/org/polarsys/capella/common/data/modellingcore/ModelElement.java", "diffHunk": "@@ -245,7 +246,7 @@\n \r\n \t * <!-- begin-user-doc -->\r\n \t * <!-- end-user-doc -->\r\n-\t * @model annotation=\"http://www.eclipse.org/emf/2002/GenModel body='return org.polarsys.capella.common.model.label.LabelRetriever.UNNAMED_ELEMENT.equals(this.getLabel());'\"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3599070586b1abe0bed70d53115713232372e1"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjE2MTIxOnYy", "diffSide": "LEFT", "path": "common/plugins/org.polarsys.capella.common.data.core.gen/model/ModellingCore.genmodel", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoxMDoyMVrOHfJB2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoxMDoyMVrOHfJB2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxNTgzMw==", "bodyText": "What is the source of this change?", "url": "https://github.com/eclipse/capella/pull/389#discussion_r502415833", "createdAt": "2020-10-09T13:10:21Z", "author": {"login": "sandupostaru"}, "path": "common/plugins/org.polarsys.capella.common.data.core.gen/model/ModellingCore.genmodel", "diffHunk": "@@ -1,99 +1,102 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<genmodel:GenModel xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:ecore=\"http://www.eclipse.org/emf/2002/Ecore\"\n-    xmlns:genmodel=\"http://www.eclipse.org/emf/2002/GenModel\" copyrightText=\" Copyright (c) 2006, 2020 THALES GLOBAL SERVICES.&#xA;&#xA; This program and the accompanying materials are made available under the&#xA; terms of the Eclipse Public License 2.0 which is available at&#xA; http://www.eclipse.org/legal/epl-2.0&#xA;&#xA; SPDX-License-Identifier: EPL-2.0&#xA;&#xA; Contributors:&#xA;    Thales - initial API and implementation\"\n-    modelDirectory=\"/org.polarsys.capella.common.data.core.gen/generated/\" modelPluginID=\"org.polarsys.capella.common.data.core.gen\"\n-    modelName=\"ModellingCore\" nonNLSMarkers=\"true\" importerID=\"org.eclipse.emf.importer.ecore\"\n-    containmentProxies=\"true\" complianceLevel=\"6.0\" copyrightFields=\"false\" usedGenPackages=\"../../org.polarsys.kitalpha.emde.model/model/eMDE.genmodel#//emde\"\n-    importOrganizing=\"true\">\n-  <foreignModel>../../org.polarsys.capella.common.data.def/model/ModellingCore.ecore</foreignModel>\n-  <genPackages prefix=\"Modellingcore\" basePackage=\"org.polarsys.capella.common.data\"\n-      resource=\"XMI\" disposableProviderFactory=\"true\" extensibleProviderFactory=\"true\"\n-      childCreationExtenders=\"true\" ecorePackage=\"ModellingCore.ecore#/\">\n-    <genEnums typeSafeEnumCompatible=\"false\" ecoreEnum=\"ModellingCore.ecore#//ParameterEffectKind\">\n-      <genEnumLiterals ecoreEnumLiteral=\"ModellingCore.ecore#//ParameterEffectKind/create\"/>\n-      <genEnumLiterals ecoreEnumLiteral=\"ModellingCore.ecore#//ParameterEffectKind/read\"/>\n-      <genEnumLiterals ecoreEnumLiteral=\"ModellingCore.ecore#//ParameterEffectKind/update\"/>\n-      <genEnumLiterals ecoreEnumLiteral=\"ModellingCore.ecore#//ParameterEffectKind/delete\"/>\n-    </genEnums>\n-    <genEnums typeSafeEnumCompatible=\"false\" ecoreEnum=\"ModellingCore.ecore#//RateKind\">\n-      <genEnumLiterals ecoreEnumLiteral=\"ModellingCore.ecore#//RateKind/Unspecified\"/>\n-      <genEnumLiterals ecoreEnumLiteral=\"ModellingCore.ecore#//RateKind/Continuous\"/>\n-      <genEnumLiterals ecoreEnumLiteral=\"ModellingCore.ecore#//RateKind/Discrete\"/>\n-    </genEnums>\n-    <genClasses image=\"false\" ecoreClass=\"ModellingCore.ecore#//ModelElement\">\n-      <genFeatures createChild=\"false\" ecoreFeature=\"ecore:EAttribute ModellingCore.ecore#//ModelElement/id\"/>\n-      <genFeatures createChild=\"false\" ecoreFeature=\"ecore:EAttribute ModellingCore.ecore#//ModelElement/sid\"/>\n-      <genFeatures property=\"Readonly\" notify=\"false\" createChild=\"false\" ecoreFeature=\"ecore:EReference ModellingCore.ecore#//ModelElement/constraints\"/>\n-      <genFeatures property=\"None\" children=\"true\" createChild=\"true\" ecoreFeature=\"ecore:EReference ModellingCore.ecore#//ModelElement/ownedConstraints\"/>\n-      <genFeatures property=\"None\" children=\"true\" createChild=\"false\" ecoreFeature=\"ecore:EReference ModellingCore.ecore#//ModelElement/ownedMigratedElements\"/>\n-      <genOperations ecoreOperation=\"ModellingCore.ecore#//ModelElement/destroy\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3599070586b1abe0bed70d53115713232372e1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjE3MTA2OnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.data.gen.editor/src/org/polarsys/capella/core/data/capellacommon/presentation/CapellacommonActionBarContributor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoxMjo1NlrOHfJH0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoxMjo1NlrOHfJH0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxNzM2Mg==", "bodyText": "It makes sense to call the super here, but are there any unwanted side-effects coming from this change?", "url": "https://github.com/eclipse/capella/pull/389#discussion_r502417362", "createdAt": "2020-10-09T13:12:56Z", "author": {"login": "sandupostaru"}, "path": "core/plugins/org.polarsys.capella.core.data.gen.editor/src/org/polarsys/capella/core/data/capellacommon/presentation/CapellacommonActionBarContributor.java", "diffHunk": "@@ -150,545 +150,548 @@ public void run() {\n \t\t}\n \t}\n \n-\t/**\n-\t * ExtendedLoadResourceAction.\n+\t/**\r\n+\t * ExtendedLoadResourceAction.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tpublic static class ExtendedLoadResourceAction extends LoadResourceAction {\n-\t\t/**\n+\t\t/**\r\n \t \t * <!-- begin-user-doc -->\n \t \t * <!-- end-user-doc -->\n-\t \t * @generated\n+\t \t * @generated\r\n \t \t */\t\n \t\t@Override\n-\t\tpublic void run() {\n-\t\t\tExtendedLoadResourceDialog loadResourceDialog = new ExtendedLoadResourceDialog(\n-\t\t\t\tPlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell(), domain\n-\t\t\t);    \n-\t\t\tloadResourceDialog.open();\n+\t\tpublic void run() {\r\n+\t\t\tExtendedLoadResourceDialog loadResourceDialog = new ExtendedLoadResourceDialog(\r\n+\t\t\t\tPlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell(), domain\r\n+\t\t\t);    \r\n+\t\t\tloadResourceDialog.open();\r\n \t\t} \n \t\t   \n-\t\t/**\n+\t\t/**\r\n \t\t * <!-- begin-user-doc -->\n \t \t * <!-- end-user-doc -->\n-\t \t * @generated\n+\t \t * @generated\r\n \t \t */    \n \t\tpublic static class ExtendedLoadResourceDialog extends LoadResourceAction.LoadResourceDialog {\n-\t\t\t/**\n+\t\t\t/**\r\n \t \t\t * <!-- begin-user-doc -->\n \t \t\t * <!-- end-user-doc -->\n-\t \t\t * @generated\n+\t \t\t * @generated\r\n \t \t\t */\t\t\t\t\n-\t\t\tpublic ExtendedLoadResourceDialog(Shell parent, EditingDomain domain) {\n-\t\t\t\tsuper(parent, domain);\n+\t\t\tpublic ExtendedLoadResourceDialog(Shell parent, EditingDomain domain) {\r\n+\t\t\t\tsuper(parent, domain);\r\n \t\t\t}\n \t\t\t\n-\t\t\t/**\n+\t\t\t/**\r\n \t \t\t * <!-- begin-user-doc -->\n \t \t\t * <!-- end-user-doc -->\n-\t \t\t * @generated\n+\t \t\t * @generated\r\n \t \t\t */\n \t\t\t@Override      \t\t      \t\t\n-\t\t\tprotected boolean processResource(Resource resource) {\n-\t\t    \tResourceSet resourceSet = domain.getResourceSet();\n-\t\t\t\tLibraryHelper.add(resourceSet, resourceSet.getResources().get(0).getURI(), resource.getURI());\n-\t\t      return true;\n+\t\t\tprotected boolean processResource(Resource resource) {\r\n+\t\t    \tResourceSet resourceSet = domain.getResourceSet();\r\n+\t\t\t\tLibraryHelper.add(resourceSet, resourceSet.getResources().get(0).getURI(), resource.getURI());\r\n+\t\t      return true;\r\n \t\t    }\n \t\t}\n     \n-\t\t/**\n+\t\t/**\r\n \t\t * <!-- begin-user-doc -->\n \t\t * <!-- end-user-doc -->\n-\t\t * @generated\n+\t\t * @generated\r\n \t\t */    \n \t\tpublic static class RegisteredPackageDialog extends ElementListSelectionDialog {\n-\t\t\t/**\n+\t\t\t/**\r\n \t \t\t * <!-- begin-user-doc -->\n \t \t\t * <!-- end-user-doc -->\n-\t \t\t * @generated\n+\t \t\t * @generated\r\n \t \t\t */\t\t\t\t\t\t\t\t\n-\t\t\tpublic RegisteredPackageDialog(Shell parent) {\n-\t\t\t\tsuper(\n-\t\t\t\t\tparent, \n-\t\t\t\t\tnew LabelProvider() {\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic Image getImage(Object element) {\n-\t\t\t\t\t\t\treturn ExtendedImageRegistry.getInstance().getImage(EcoreEditPlugin.INSTANCE.getImage(\"full/obj16/EPackage\")); //$NON-NLS-1$\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t);        \n-\t\t\t\tsetMultipleSelection(true);\n-\t\t\t\tsetMessage(EcoreEditorPlugin.INSTANCE.getString(\"_UI_SelectRegisteredPackageURI\")); //$NON-NLS-1$\n-\t\t\t\tsetFilter(\"*\");\n-\t\t\t\tMap<String, URI> ePackageNsURItoGenModelLocationMap = EcorePlugin.getEPackageNsURIToGenModelLocationMap();\n-\t\t\t\tObject [] result = ePackageNsURItoGenModelLocationMap.keySet().toArray(new Object[ePackageNsURItoGenModelLocationMap.size()]);\n-\t\t\t\tArrays.sort(result);\n-\t\t\t\tsetElements(result);\n-\t\t\t\tsetTitle(EcoreEditorPlugin.INSTANCE.getString(\"_UI_PackageSelection_label\")); //$NON-NLS-1$\n+\t\t\tpublic RegisteredPackageDialog(Shell parent) {\r\n+\t\t\t\tsuper(\r\n+\t\t\t\t\tparent, \r\n+\t\t\t\t\tnew LabelProvider() {\r\n+\t\t\t\t\t\t@Override\r\n+\t\t\t\t\t\tpublic Image getImage(Object element) {\r\n+\t\t\t\t\t\t\treturn ExtendedImageRegistry.getInstance().getImage(EcoreEditPlugin.INSTANCE.getImage(\"full/obj16/EPackage\")); //$NON-NLS-1$\r\n+\t\t\t\t\t\t}\r\n+\t\t\t\t\t}\r\n+\t\t\t\t);        \r\n+\t\t\t\tsetMultipleSelection(true);\r\n+\t\t\t\tsetMessage(EcoreEditorPlugin.INSTANCE.getString(\"_UI_SelectRegisteredPackageURI\")); //$NON-NLS-1$\r\n+\t\t\t\tsetFilter(\"*\");\r\n+\t\t\t\tMap<String, URI> ePackageNsURItoGenModelLocationMap = EcorePlugin.getEPackageNsURIToGenModelLocationMap();\r\n+\t\t\t\tObject [] result = ePackageNsURItoGenModelLocationMap.keySet().toArray(new Object[ePackageNsURItoGenModelLocationMap.size()]);\r\n+\t\t\t\tArrays.sort(result);\r\n+\t\t\t\tsetElements(result);\r\n+\t\t\t\tsetTitle(EcoreEditorPlugin.INSTANCE.getString(\"_UI_PackageSelection_label\")); //$NON-NLS-1$\r\n \t\t\t}\n \t\t}\n     \n \t}\n \n-\t/**\n-\t * This keeps track of the active editor.\n+\t/**\r\n+\t * This keeps track of the active editor.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tprotected IEditorPart activeEditorPart;\n \n-\t/**\n-\t * This keeps track of the current selection provider.\n+\t/**\r\n+\t * This keeps track of the current selection provider.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tprotected ISelectionProvider selectionProvider;\n \n-\t/**\n-\t * This action opens the Properties view.\n+\t/**\r\n+\t * This action opens the Properties view.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tprotected IAction showPropertiesViewAction =\n \t\tnew ShowPropertiesViewAction();\n \n-\t/**\n-\t * This action refreshes the viewer of the current editor if the editor\n-\t * implements {@link org.eclipse.emf.common.ui.viewer.IViewerProvider}.\n+\t/**\r\n+\t * This action refreshes the viewer of the current editor if the editor\r\n+\t * implements {@link org.eclipse.emf.common.ui.viewer.IViewerProvider}.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tprotected IAction refreshViewerAction =\n \t\tnew RefreshViewerAction();\n \n-\t/**\n-\t * This action load resource from resourcereuse/emfscheme\n+\t/**\r\n+\t * This action load resource from resourcereuse/emfscheme\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tprotected IAction schemeLoadResourceAction = new SchemeLoadResourceAction();\n \n-\t/**\n-\t * This will contain one {@link org.eclipse.emf.edit.ui.action.CreateChildAction} corresponding to each descriptor\n-\t * generated for the current selection by the item provider.\n+\t/**\r\n+\t * This will contain one {@link org.eclipse.emf.edit.ui.action.CreateChildAction} corresponding to each descriptor\r\n+\t * generated for the current selection by the item provider.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tprotected Collection<IAction> createChildActions;\n \n-\t/**\n-\t * This is the menu manager into which menu contribution items should be added for CreateChild actions.\n+\t/**\r\n+\t * This is the menu manager into which menu contribution items should be added for CreateChild actions.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tprotected IMenuManager createChildMenuManager;\n \n-\t/**\n-\t * This will contain one {@link org.eclipse.emf.edit.ui.action.CreateSiblingAction} corresponding to each descriptor\n-\t * generated for the current selection by the item provider.\n+\t/**\r\n+\t * This will contain one {@link org.eclipse.emf.edit.ui.action.CreateSiblingAction} corresponding to each descriptor\r\n+\t * generated for the current selection by the item provider.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tprotected Collection<IAction> createSiblingActions;\n \n-\t/**\n-\t * This is the menu manager into which menu contribution items should be added for CreateSibling actions.\n+\t/**\r\n+\t * This is the menu manager into which menu contribution items should be added for CreateSibling actions.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tprotected IMenuManager createSiblingMenuManager;\n \t\n-\t/**\n-\t * This will contain a collection {@link org.polarsys.kitalpha.emde.ui.actions.EmdeViewerFilterAction} applicable\n-\t * to the current loaded Resource.\n+\t/**\r\n+\t * This will contain a collection {@link org.polarsys.kitalpha.emde.ui.actions.EmdeViewerFilterAction} applicable\r\n+\t * to the current loaded Resource.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \tprotected Collection<EmdeViewerFilterAction> currentResourceEmdeViewerFilterActions;\t\n \t\n-\t/**\n+\t/**\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */    \n \tprotected IMenuManager extensionViewerFilterMenuManager;\t\n   \n-\t/**\n+\t/**\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */    \n \tprotected Resource currentResource;\n \t\n-\t/**\n-\t * This creates an instance of the contributor.\n+\t/**\r\n+\t * This creates an instance of the contributor.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n-\tpublic CapellacommonActionBarContributor() {\n-\t\tsuper(ADDITIONS_LAST_STYLE);\n-\t\tloadResourceAction = new ExtendedLoadResourceAction();\n-\t\tvalidateAction = new ValidateAction();\n-\t\tcontrolAction = new ControlAction();\n+\tpublic CapellacommonActionBarContributor() {\r\n+\t\tsuper(ADDITIONS_LAST_STYLE);\r\n+\t\tloadResourceAction = new ExtendedLoadResourceAction();\r\n+\t\tvalidateAction = new ValidateAction();\r\n+\t\tcontrolAction = new ControlAction();\r\n \t}\n \t\n-\t/**\n-\t * @see org.eclipse.jface.util.IPropertyChangeListener#propertyChange(org.eclipse.jface.util.PropertyChangeEvent) \n+\t/**\r\n+\t * @see org.eclipse.jface.util.IPropertyChangeListener#propertyChange(org.eclipse.jface.util.PropertyChangeEvent) \r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\t\n-\tpublic void propertyChange(PropertyChangeEvent event) {\n-\t\tif (event.getSource() instanceof ViewerFilterAction) {\n-\t\t\t// Fake a selection changed event to update the menus.\n-\t\t\tif (selectionProvider.getSelection() != null) {\n-\t\t\t\tselectionChanged(new SelectionChangedEvent(selectionProvider, selectionProvider.getSelection()));\n-\t\t\t}\t    \n-\t\t}\t  \n+\tpublic void propertyChange(PropertyChangeEvent event) {\r\n+\t\tif (event.getSource() instanceof ViewerFilterAction) {\r\n+\t\t\t// Fake a selection changed event to update the menus.\r\n+\t\t\tif (selectionProvider.getSelection() != null) {\r\n+\t\t\t\tselectionChanged(new SelectionChangedEvent(selectionProvider, selectionProvider.getSelection()));\r\n+\t\t\t}\t    \r\n+\t\t}\t  \r\n \t}\t\n  \n-\t/**\n-\t * This adds Separators for editor additions to the tool bar.\n+\t/**\r\n+\t * This adds Separators for editor additions to the tool bar.\r\n \t * <!-- begin-user-doc -->\n \t * <!-- end-user-doc -->\n-\t * @generated\n+\t * @generated\r\n \t */\n \t@Override\n-\tpublic void contributeToToolBar(IToolBarManager toolBarManager) {\n-\t\ttoolBarManager.add(new Separator(\"capellacommon-settings\")); //$NON-NLS-1$\n-\t\ttoolBarManager.add(new Separator(\"capellacommon-additions\")); //$NON-NLS-1$\n+\tpublic void contributeToToolBar(IToolBarManager toolBarManager) {\r\n+\t\tsuper.contributeToToolBar(toolBarManager);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3599070586b1abe0bed70d53115713232372e1"}, "originalPosition": 344}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjM1MDk1OnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.data.gen/generated/org/polarsys/capella/core/data/capellacommon/ChoicePseudoState.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo1Nzo0OVrOHfK2uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo1Nzo0OVrOHfK2uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ0NTc1Mw==", "bodyText": "Semantic", "url": "https://github.com/eclipse/capella/pull/389#discussion_r502445753", "createdAt": "2020-10-09T13:57:49Z", "author": {"login": "sandupostaru"}, "path": "core/plugins/org.polarsys.capella.core.data.gen/generated/org/polarsys/capella/core/data/capellacommon/ChoicePseudoState.java", "diffHunk": "@@ -22,6 +22,7 @@\n  * @see org.polarsys.capella.core.data.capellacommon.CapellacommonPackage#getChoicePseudoState()\r\n  * @model annotation=\"http://www.polarsys.org/kitalpha/ecore/documentation description='choice vertices which, when reached, result in the dynamic evaluation of the guards of the triggers of its outgoing\\r\\ntransitions. This realizes a dynamic conditional branch. It allows splitting of transitions into multiple outgoing paths\\r\\nsuch that the decision on which path to take may be a function of the results of prior actions performed in the same runto-\\r\\ncompletion step\\r\\n[source: UML superstructure v2.2]' usage\\040guideline='n/a' used\\040in\\040levels='operational, system, logical, physical' usage\\040examples='../img/usage_examples/example_choicepseudostate.png' constraints='none' comment/notes='none' reference\\040documentation='none'\"\r\n  *        annotation=\"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping UML/SysML\\040semantic\\040equivalences='' base\\040metaclass\\040in\\040UML/SysML\\040profile\\040='uml::Pseudostate' explanation='none' constraints='uml::Pseudostate elements for which kind is choice'\"\r\n+ *        annotation=\"http://www.polarsys.org/capella/semantic\"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3599070586b1abe0bed70d53115713232372e1"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4184, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}