{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MTE5OTg2", "number": 429, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTowNTozM1rOE2AGGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTowNTozM1rOE2AGGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDYwMTIxOnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.data.interaction.validation/src/org/polarsys/capella/core/data/interaction/validation/scenario/InstanceRoleHasDifferentNameThanRepresentedInstance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTowNTozM1rOHulm3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOToxOTo0M1rOHumFYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYxMjcwMw==", "bodyText": "if the user set to null/empty the represented instance, then the validation rule will not raise an error.\nCan you remove this if", "url": "https://github.com/eclipse/capella/pull/429#discussion_r518612703", "createdAt": "2020-11-06T09:05:33Z", "author": {"login": "pdulth"}, "path": "core/plugins/org.polarsys.capella.core.data.interaction.validation/src/org/polarsys/capella/core/data/interaction/validation/scenario/InstanceRoleHasDifferentNameThanRepresentedInstance.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 THALES GLOBAL SERVICES.\n+ * \n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ * \n+ * Contributors:\n+ *    Thales - initial API and implementation\n+ *******************************************************************************/\n+package org.polarsys.capella.core.data.interaction.validation.scenario;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.eclipse.core.runtime.IStatus;\n+import org.eclipse.emf.common.util.EList;\n+import org.eclipse.emf.ecore.EObject;\n+import org.eclipse.emf.ecore.impl.BasicEObjectImpl;\n+import org.eclipse.emf.validation.EMFEventType;\n+import org.eclipse.emf.validation.IValidationContext;\n+import org.eclipse.emf.validation.model.ConstraintStatus;\n+import org.eclipse.emf.validation.service.ConstraintRegistry;\n+import org.eclipse.emf.validation.service.IConstraintDescriptor;\n+import org.polarsys.capella.common.helpers.EObjectLabelProviderHelper;\n+import org.polarsys.capella.core.data.information.AbstractInstance;\n+import org.polarsys.capella.core.data.interaction.InstanceRole;\n+import org.polarsys.capella.core.data.interaction.Scenario;\n+import org.polarsys.capella.core.sirius.analysis.tool.StringUtil;\n+import org.polarsys.capella.core.validation.rule.AbstractValidationRule;\n+\n+public class InstanceRoleHasDifferentNameThanRepresentedInstance extends AbstractValidationRule {\n+  /**\n+   * A container class that encloses all the elements required to efficiently perform the quick fix for the rename.</br>\n+   * This container will be added to the validation context and used in the quick fix. </br>\n+   * We are required to inherit from EObject since the validation context can contain only EObjects.\n+   */\n+  public static final class InstanceRoleRenamingData extends BasicEObjectImpl {\n+    public final String newName;\n+    public final InstanceRole instanceRole;\n+\n+    public InstanceRoleRenamingData(InstanceRole instanceRole, String newName) {\n+      this.instanceRole = instanceRole;\n+      this.newName = newName;\n+    }\n+  }\n+\n+  public static final String ID = \"org.polarsys.capella.core.data.interaction.validation.DWF_DS_24\"; // $NON-NLS-N$\n+\n+  @Override\n+  public IStatus validate(IValidationContext validationContext) {\n+    EObject target = validationContext.getTarget();\n+    EMFEventType eventType = validationContext.getEventType();\n+    List<IStatus> failureStatuses = new ArrayList<>();\n+\n+    if (eventType == EMFEventType.NULL && target instanceof Scenario) {\n+      Scenario scenario = (Scenario) target;\n+      Map<AbstractInstance, Collection<InstanceRole>> representedInstanceToInstanceRoleMap = //\n+          extractRepresentedInstanceToInstanceRoleMap(scenario);\n+\n+      for (Map.Entry<AbstractInstance, Collection<InstanceRole>> entry : representedInstanceToInstanceRoleMap\n+          .entrySet()) {\n+        AbstractInstance representedInstance = entry.getKey();\n+        String representedInstanceName = representedInstance.getName();\n+\n+        if (!StringUtil.isNullOrEmpty(representedInstanceName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b7584701c7db8de6aca271ef49da4c41943fa21"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYyMDUxMw==", "bodyText": "Another validation rule will then be raised", "url": "https://github.com/eclipse/capella/pull/429#discussion_r518620513", "createdAt": "2020-11-06T09:19:43Z", "author": {"login": "pdulth"}, "path": "core/plugins/org.polarsys.capella.core.data.interaction.validation/src/org/polarsys/capella/core/data/interaction/validation/scenario/InstanceRoleHasDifferentNameThanRepresentedInstance.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 THALES GLOBAL SERVICES.\n+ * \n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ * \n+ * Contributors:\n+ *    Thales - initial API and implementation\n+ *******************************************************************************/\n+package org.polarsys.capella.core.data.interaction.validation.scenario;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.eclipse.core.runtime.IStatus;\n+import org.eclipse.emf.common.util.EList;\n+import org.eclipse.emf.ecore.EObject;\n+import org.eclipse.emf.ecore.impl.BasicEObjectImpl;\n+import org.eclipse.emf.validation.EMFEventType;\n+import org.eclipse.emf.validation.IValidationContext;\n+import org.eclipse.emf.validation.model.ConstraintStatus;\n+import org.eclipse.emf.validation.service.ConstraintRegistry;\n+import org.eclipse.emf.validation.service.IConstraintDescriptor;\n+import org.polarsys.capella.common.helpers.EObjectLabelProviderHelper;\n+import org.polarsys.capella.core.data.information.AbstractInstance;\n+import org.polarsys.capella.core.data.interaction.InstanceRole;\n+import org.polarsys.capella.core.data.interaction.Scenario;\n+import org.polarsys.capella.core.sirius.analysis.tool.StringUtil;\n+import org.polarsys.capella.core.validation.rule.AbstractValidationRule;\n+\n+public class InstanceRoleHasDifferentNameThanRepresentedInstance extends AbstractValidationRule {\n+  /**\n+   * A container class that encloses all the elements required to efficiently perform the quick fix for the rename.</br>\n+   * This container will be added to the validation context and used in the quick fix. </br>\n+   * We are required to inherit from EObject since the validation context can contain only EObjects.\n+   */\n+  public static final class InstanceRoleRenamingData extends BasicEObjectImpl {\n+    public final String newName;\n+    public final InstanceRole instanceRole;\n+\n+    public InstanceRoleRenamingData(InstanceRole instanceRole, String newName) {\n+      this.instanceRole = instanceRole;\n+      this.newName = newName;\n+    }\n+  }\n+\n+  public static final String ID = \"org.polarsys.capella.core.data.interaction.validation.DWF_DS_24\"; // $NON-NLS-N$\n+\n+  @Override\n+  public IStatus validate(IValidationContext validationContext) {\n+    EObject target = validationContext.getTarget();\n+    EMFEventType eventType = validationContext.getEventType();\n+    List<IStatus> failureStatuses = new ArrayList<>();\n+\n+    if (eventType == EMFEventType.NULL && target instanceof Scenario) {\n+      Scenario scenario = (Scenario) target;\n+      Map<AbstractInstance, Collection<InstanceRole>> representedInstanceToInstanceRoleMap = //\n+          extractRepresentedInstanceToInstanceRoleMap(scenario);\n+\n+      for (Map.Entry<AbstractInstance, Collection<InstanceRole>> entry : representedInstanceToInstanceRoleMap\n+          .entrySet()) {\n+        AbstractInstance representedInstance = entry.getKey();\n+        String representedInstanceName = representedInstance.getName();\n+\n+        if (!StringUtil.isNullOrEmpty(representedInstanceName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYxMjcwMw=="}, "originalCommit": {"oid": "4b7584701c7db8de6aca271ef49da4c41943fa21"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4206, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}