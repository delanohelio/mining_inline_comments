{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTk1Nzc4", "number": 443, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoxMzo1OFrOE7eicw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoyMTozOFrOE7et4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODAxNzc5OnYy", "diffSide": "RIGHT", "path": "core/plugins/org.polarsys.capella.core.platform.sirius.ui.navigator/src/org/polarsys/capella/core/platform/sirius/ui/navigator/actions/RenameResourceAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoxMzo1OFrOH3JdNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoxMzo1OFrOH3JdNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU4ODY2MQ==", "bodyText": "This is the core change", "url": "https://github.com/eclipse/capella/pull/443#discussion_r527588661", "createdAt": "2020-11-20T10:13:58Z", "author": {"login": "sandupostaru"}, "path": "core/plugins/org.polarsys.capella.core.platform.sirius.ui.navigator/src/org/polarsys/capella/core/platform/sirius/ui/navigator/actions/RenameResourceAction.java", "diffHunk": "@@ -792,31 +804,98 @@ private void updateReferencesFor(IResource[] members_p, String newName_p, String\n   }\r\n \r\n   /**\r\n-   * @param initialContent_p\r\n-   * @param oldName_p\r\n-   * @param newName_p\r\n-   * @return\r\n+   * Updates existing references of oldName to newName. </br>\r\n+   * Depending on the reference type, the oldName and newName might need to be encoded. Please reffer to each of the\r\n+   * methods for more info.\r\n+   * \r\n+   * @param initialFileContent\r\n+   * @param oldName\r\n+   * @param newName\r\n+   * @return the updated file content.\r\n+   */\r\n+  private String updateFileContent(String initialFileContent, String oldName, String newName) {\r\n+    String updatedFileContent = replaceRaw(initialFileContent, oldName, newName);\r\n+\r\n+    updatedFileContent = replaceEncoded(updatedFileContent, oldName, newName);\r\n+\r\n+    updatedFileContent = replaceLegacy(updatedFileContent, oldName, newName);\r\n+\r\n+    return updatedFileContent;\r\n+  }\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35ba6c4ccabff838f60b52aa00599c5b4d2f9cf8"}, "originalPosition": 210}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODAzNTI4OnYy", "diffSide": "RIGHT", "path": "tests/plugins/org.polarsys.capella.test.model.ju/src/org/polarsys/capella/test/model/ju/rename/RenameSpecialCharTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoxODoyOFrOH3JnbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDo1NjowNFrOH3K7sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTI3Ng==", "bodyText": "GuiActions.closeSession otherwise the UISession will not be closed and Session may not be closed before next test", "url": "https://github.com/eclipse/capella/pull/443#discussion_r527591276", "createdAt": "2020-11-20T10:18:28Z", "author": {"login": "pdulth"}, "path": "tests/plugins/org.polarsys.capella.test.model.ju/src/org/polarsys/capella/test/model/ju/rename/RenameSpecialCharTestCase.java", "diffHunk": "@@ -0,0 +1,155 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 THALES GLOBAL SERVICES.\n+ * \n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Thales - initial API and implementation\n+ *******************************************************************************/\n+package org.polarsys.capella.test.model.ju.rename;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.eclipse.core.resources.IFile;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.NullProgressMonitor;\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.sirius.business.api.session.Session;\n+import org.eclipse.sirius.business.api.session.SessionManager;\n+import org.polarsys.capella.common.helpers.EcoreUtil2;\n+import org.polarsys.capella.common.mdsofa.common.helper.FileHelper;\n+import org.polarsys.capella.core.model.handler.command.CapellaResourceHelper;\n+import org.polarsys.capella.core.sirius.ui.helper.ResourceHelper;\n+import org.polarsys.capella.test.framework.api.BasicTestCase;\n+import org.polarsys.capella.test.framework.helpers.GuiActions;\n+import org.polarsys.capella.test.framework.helpers.IResourceHelpers;\n+\n+public class RenameSpecialCharTestCase extends BasicTestCase {\n+\n+  private static class RenameData {\n+    protected final String initialName;\n+    protected final String renamedName;\n+    protected final String folder;\n+\n+    public RenameData(String initialName, String renamedName, String folder) {\n+      this.folder = folder;\n+      this.initialName = initialName;\n+      this.renamedName = renamedName;\n+    }\n+\n+    public RenameData(String initialName, String renamedName) {\n+      this(initialName, renamedName, null);\n+    }\n+  }\n+\n+  public static final String TEST_MODEL_NAME = \"[rename model]\";\n+\n+  @Override\n+  public List<String> getRequiredTestModels() {\n+    return Arrays.asList(TEST_MODEL_NAME);\n+  }\n+\n+  @Override\n+  public void test() throws Exception {\n+\n+    List<RenameData> firstRenameData = Arrays.asList( //\n+        new RenameData(\"[rename model].capella\", \"superman.capella\"), //\n+        new RenameData(\"[rename model].aird\", \"hulk.aird\"), //\n+        new RenameData(\"[OA].airdfragment\", \"batman.airdfragment\", \"fragments\"), //\n+        new RenameData(\"[OA].capellafragment\", \"hawkeye.capellafragment\", \"fragments\"), //\n+\n+        new RenameData(\"[rename model].capella\", \"-!@^()[].capella\"), //\n+        new RenameData(\"[rename model].aird\", \"-!@^()[].aird\"), //\n+        new RenameData(\"[OA].airdfragment\", \"-!@^()[].airdfragment\", \"fragments\"), //\n+        new RenameData(\"[OA].capellafragment\", \"-!@^()[].capellafragment\", \"fragments\") //\n+    );\n+\n+    for (RenameData renameData : firstRenameData) {\n+      IProject project = IResourceHelpers.getEclipseProjectInWorkspace(TEST_MODEL_NAME);\n+\n+      IFile initialFile = getInitialFile(project, renameData);\n+      GuiActions.renameModelFile(initialFile, renameData.renamedName);\n+      IFile renamedFile = getRenamedFile(project, renameData);\n+\n+      assertRenamedFileExistence(renameData, renamedFile);\n+\n+      assertValidSession(renamedFile);\n+\n+      Collection<IFile> allProjectFiles = ResourceHelper.collectFiles(project);\n+\n+      for (IFile childFile : allProjectFiles) {\n+        assertAllExpectedFilesRenamed(renameData, childFile);\n+\n+        String childFileContent = FileHelper.readFile(childFile.getFullPath().toString());\n+\n+        assertOldRawNameReferenceAbsence(renameData, initialFile, childFileContent);\n+\n+        assertOldEncodedNameReferenceAbsence(renameData, initialFile, childFileContent);\n+      }\n+\n+      GuiActions.renameModelFile(renamedFile, renameData.initialName);\n+    }\n+  }\n+\n+  private void assertOldEncodedNameReferenceAbsence(RenameData renameData, IFile initialFile, String fileContent) {\n+    String encodedName = URI.encodeSegment(renameData.initialName, true);\n+    String fileContainsOldEncodedNameReferences = MessageFormat.format(\n+        \"File {0} should should not contain old encoded references towards {1}\", initialFile.getName(), encodedName);\n+\n+    assertFalse(fileContainsOldEncodedNameReferences, fileContent.contains(encodedName));\n+  }\n+\n+  private void assertOldRawNameReferenceAbsence(RenameData renameData, IFile initialFile, String fileContent) {\n+    String fileContainsOldRawNameReferences = MessageFormat.format(\n+        \"File {0} should should not contain old raw references towards {1}\", initialFile.getName(),\n+        renameData.initialName);\n+\n+    assertFalse(fileContainsOldRawNameReferences, fileContent.contains(renameData.initialName));\n+  }\n+\n+  private void assertAllExpectedFilesRenamed(RenameData renameData, IFile projectFile) {\n+    String fileNotRenamedMsg = MessageFormat.format(\"File {0} should have been renamed to {1}\", projectFile.getName(),\n+        renameData.renamedName);\n+\n+    assertFalse(fileNotRenamedMsg, projectFile.getName().equals(renameData.initialName));\n+  }\n+\n+  private void assertValidSession(IFile renamedFile) {\n+    IFile airdFile = getAirdFile(renamedFile);\n+    URI airdFileUri = EcoreUtil2.getURI(airdFile);\n+    Session session = SessionManager.INSTANCE.getSession(airdFileUri, new NullProgressMonitor());\n+\n+    assertNotNull(MessageFormat.format(\"Invalid Session for renamed file {0}\", renamedFile.getName()), session);\n+    session.close(new NullProgressMonitor());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35ba6c4ccabff838f60b52aa00599c5b4d2f9cf8"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYxMjg1MA==", "bodyText": "Done", "url": "https://github.com/eclipse/capella/pull/443#discussion_r527612850", "createdAt": "2020-11-20T10:56:04Z", "author": {"login": "sandupostaru"}, "path": "tests/plugins/org.polarsys.capella.test.model.ju/src/org/polarsys/capella/test/model/ju/rename/RenameSpecialCharTestCase.java", "diffHunk": "@@ -0,0 +1,155 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 THALES GLOBAL SERVICES.\n+ * \n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Thales - initial API and implementation\n+ *******************************************************************************/\n+package org.polarsys.capella.test.model.ju.rename;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.eclipse.core.resources.IFile;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.NullProgressMonitor;\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.sirius.business.api.session.Session;\n+import org.eclipse.sirius.business.api.session.SessionManager;\n+import org.polarsys.capella.common.helpers.EcoreUtil2;\n+import org.polarsys.capella.common.mdsofa.common.helper.FileHelper;\n+import org.polarsys.capella.core.model.handler.command.CapellaResourceHelper;\n+import org.polarsys.capella.core.sirius.ui.helper.ResourceHelper;\n+import org.polarsys.capella.test.framework.api.BasicTestCase;\n+import org.polarsys.capella.test.framework.helpers.GuiActions;\n+import org.polarsys.capella.test.framework.helpers.IResourceHelpers;\n+\n+public class RenameSpecialCharTestCase extends BasicTestCase {\n+\n+  private static class RenameData {\n+    protected final String initialName;\n+    protected final String renamedName;\n+    protected final String folder;\n+\n+    public RenameData(String initialName, String renamedName, String folder) {\n+      this.folder = folder;\n+      this.initialName = initialName;\n+      this.renamedName = renamedName;\n+    }\n+\n+    public RenameData(String initialName, String renamedName) {\n+      this(initialName, renamedName, null);\n+    }\n+  }\n+\n+  public static final String TEST_MODEL_NAME = \"[rename model]\";\n+\n+  @Override\n+  public List<String> getRequiredTestModels() {\n+    return Arrays.asList(TEST_MODEL_NAME);\n+  }\n+\n+  @Override\n+  public void test() throws Exception {\n+\n+    List<RenameData> firstRenameData = Arrays.asList( //\n+        new RenameData(\"[rename model].capella\", \"superman.capella\"), //\n+        new RenameData(\"[rename model].aird\", \"hulk.aird\"), //\n+        new RenameData(\"[OA].airdfragment\", \"batman.airdfragment\", \"fragments\"), //\n+        new RenameData(\"[OA].capellafragment\", \"hawkeye.capellafragment\", \"fragments\"), //\n+\n+        new RenameData(\"[rename model].capella\", \"-!@^()[].capella\"), //\n+        new RenameData(\"[rename model].aird\", \"-!@^()[].aird\"), //\n+        new RenameData(\"[OA].airdfragment\", \"-!@^()[].airdfragment\", \"fragments\"), //\n+        new RenameData(\"[OA].capellafragment\", \"-!@^()[].capellafragment\", \"fragments\") //\n+    );\n+\n+    for (RenameData renameData : firstRenameData) {\n+      IProject project = IResourceHelpers.getEclipseProjectInWorkspace(TEST_MODEL_NAME);\n+\n+      IFile initialFile = getInitialFile(project, renameData);\n+      GuiActions.renameModelFile(initialFile, renameData.renamedName);\n+      IFile renamedFile = getRenamedFile(project, renameData);\n+\n+      assertRenamedFileExistence(renameData, renamedFile);\n+\n+      assertValidSession(renamedFile);\n+\n+      Collection<IFile> allProjectFiles = ResourceHelper.collectFiles(project);\n+\n+      for (IFile childFile : allProjectFiles) {\n+        assertAllExpectedFilesRenamed(renameData, childFile);\n+\n+        String childFileContent = FileHelper.readFile(childFile.getFullPath().toString());\n+\n+        assertOldRawNameReferenceAbsence(renameData, initialFile, childFileContent);\n+\n+        assertOldEncodedNameReferenceAbsence(renameData, initialFile, childFileContent);\n+      }\n+\n+      GuiActions.renameModelFile(renamedFile, renameData.initialName);\n+    }\n+  }\n+\n+  private void assertOldEncodedNameReferenceAbsence(RenameData renameData, IFile initialFile, String fileContent) {\n+    String encodedName = URI.encodeSegment(renameData.initialName, true);\n+    String fileContainsOldEncodedNameReferences = MessageFormat.format(\n+        \"File {0} should should not contain old encoded references towards {1}\", initialFile.getName(), encodedName);\n+\n+    assertFalse(fileContainsOldEncodedNameReferences, fileContent.contains(encodedName));\n+  }\n+\n+  private void assertOldRawNameReferenceAbsence(RenameData renameData, IFile initialFile, String fileContent) {\n+    String fileContainsOldRawNameReferences = MessageFormat.format(\n+        \"File {0} should should not contain old raw references towards {1}\", initialFile.getName(),\n+        renameData.initialName);\n+\n+    assertFalse(fileContainsOldRawNameReferences, fileContent.contains(renameData.initialName));\n+  }\n+\n+  private void assertAllExpectedFilesRenamed(RenameData renameData, IFile projectFile) {\n+    String fileNotRenamedMsg = MessageFormat.format(\"File {0} should have been renamed to {1}\", projectFile.getName(),\n+        renameData.renamedName);\n+\n+    assertFalse(fileNotRenamedMsg, projectFile.getName().equals(renameData.initialName));\n+  }\n+\n+  private void assertValidSession(IFile renamedFile) {\n+    IFile airdFile = getAirdFile(renamedFile);\n+    URI airdFileUri = EcoreUtil2.getURI(airdFile);\n+    Session session = SessionManager.INSTANCE.getSession(airdFileUri, new NullProgressMonitor());\n+\n+    assertNotNull(MessageFormat.format(\"Invalid Session for renamed file {0}\", renamedFile.getName()), session);\n+    session.close(new NullProgressMonitor());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTI3Ng=="}, "originalCommit": {"oid": "35ba6c4ccabff838f60b52aa00599c5b4d2f9cf8"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODA0NzA1OnYy", "diffSide": "RIGHT", "path": "tests/plugins/org.polarsys.capella.test.model.ju/src/org/polarsys/capella/test/model/ju/rename/RenameSpecialCharTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoyMTozOFrOH3JugA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDo1NjoxMVrOH3K78g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MzA4OA==", "bodyText": "copyrighted names i guess", "url": "https://github.com/eclipse/capella/pull/443#discussion_r527593088", "createdAt": "2020-11-20T10:21:38Z", "author": {"login": "pdulth"}, "path": "tests/plugins/org.polarsys.capella.test.model.ju/src/org/polarsys/capella/test/model/ju/rename/RenameSpecialCharTestCase.java", "diffHunk": "@@ -0,0 +1,155 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 THALES GLOBAL SERVICES.\n+ * \n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Thales - initial API and implementation\n+ *******************************************************************************/\n+package org.polarsys.capella.test.model.ju.rename;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.eclipse.core.resources.IFile;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.NullProgressMonitor;\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.sirius.business.api.session.Session;\n+import org.eclipse.sirius.business.api.session.SessionManager;\n+import org.polarsys.capella.common.helpers.EcoreUtil2;\n+import org.polarsys.capella.common.mdsofa.common.helper.FileHelper;\n+import org.polarsys.capella.core.model.handler.command.CapellaResourceHelper;\n+import org.polarsys.capella.core.sirius.ui.helper.ResourceHelper;\n+import org.polarsys.capella.test.framework.api.BasicTestCase;\n+import org.polarsys.capella.test.framework.helpers.GuiActions;\n+import org.polarsys.capella.test.framework.helpers.IResourceHelpers;\n+\n+public class RenameSpecialCharTestCase extends BasicTestCase {\n+\n+  private static class RenameData {\n+    protected final String initialName;\n+    protected final String renamedName;\n+    protected final String folder;\n+\n+    public RenameData(String initialName, String renamedName, String folder) {\n+      this.folder = folder;\n+      this.initialName = initialName;\n+      this.renamedName = renamedName;\n+    }\n+\n+    public RenameData(String initialName, String renamedName) {\n+      this(initialName, renamedName, null);\n+    }\n+  }\n+\n+  public static final String TEST_MODEL_NAME = \"[rename model]\";\n+\n+  @Override\n+  public List<String> getRequiredTestModels() {\n+    return Arrays.asList(TEST_MODEL_NAME);\n+  }\n+\n+  @Override\n+  public void test() throws Exception {\n+\n+    List<RenameData> firstRenameData = Arrays.asList( //\n+        new RenameData(\"[rename model].capella\", \"superman.capella\"), //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35ba6c4ccabff838f60b52aa00599c5b4d2f9cf8"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYxMjkxNA==", "bodyText": "Done", "url": "https://github.com/eclipse/capella/pull/443#discussion_r527612914", "createdAt": "2020-11-20T10:56:11Z", "author": {"login": "sandupostaru"}, "path": "tests/plugins/org.polarsys.capella.test.model.ju/src/org/polarsys/capella/test/model/ju/rename/RenameSpecialCharTestCase.java", "diffHunk": "@@ -0,0 +1,155 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 THALES GLOBAL SERVICES.\n+ * \n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Thales - initial API and implementation\n+ *******************************************************************************/\n+package org.polarsys.capella.test.model.ju.rename;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.eclipse.core.resources.IFile;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.NullProgressMonitor;\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.sirius.business.api.session.Session;\n+import org.eclipse.sirius.business.api.session.SessionManager;\n+import org.polarsys.capella.common.helpers.EcoreUtil2;\n+import org.polarsys.capella.common.mdsofa.common.helper.FileHelper;\n+import org.polarsys.capella.core.model.handler.command.CapellaResourceHelper;\n+import org.polarsys.capella.core.sirius.ui.helper.ResourceHelper;\n+import org.polarsys.capella.test.framework.api.BasicTestCase;\n+import org.polarsys.capella.test.framework.helpers.GuiActions;\n+import org.polarsys.capella.test.framework.helpers.IResourceHelpers;\n+\n+public class RenameSpecialCharTestCase extends BasicTestCase {\n+\n+  private static class RenameData {\n+    protected final String initialName;\n+    protected final String renamedName;\n+    protected final String folder;\n+\n+    public RenameData(String initialName, String renamedName, String folder) {\n+      this.folder = folder;\n+      this.initialName = initialName;\n+      this.renamedName = renamedName;\n+    }\n+\n+    public RenameData(String initialName, String renamedName) {\n+      this(initialName, renamedName, null);\n+    }\n+  }\n+\n+  public static final String TEST_MODEL_NAME = \"[rename model]\";\n+\n+  @Override\n+  public List<String> getRequiredTestModels() {\n+    return Arrays.asList(TEST_MODEL_NAME);\n+  }\n+\n+  @Override\n+  public void test() throws Exception {\n+\n+    List<RenameData> firstRenameData = Arrays.asList( //\n+        new RenameData(\"[rename model].capella\", \"superman.capella\"), //", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MzA4OA=="}, "originalCommit": {"oid": "35ba6c4ccabff838f60b52aa00599c5b4d2f9cf8"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4214, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}