{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NTU0MzI1", "number": 2059, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNTozODoxNlrOEBQBZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOToyMjo0OVrOECekLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NzQ2NTM1OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultLitePullConsumerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNTozODoxNlrOGc_Qyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo0NzoyMFrOGdNO3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA0OTgwMw==", "bodyText": "assignedMessageQueue.getProcessQueue(messageQueue) may return null. So it is necessary to check if processQueue is null to prevent NPE", "url": "https://github.com/apache/rocketmq/pull/2059#discussion_r433049803", "createdAt": "2020-06-01T05:38:16Z", "author": {"login": "RongtongJin"}, "path": "client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultLitePullConsumerImpl.java", "diffHunk": "@@ -691,7 +691,7 @@ public void run() {\n \n                 ProcessQueue processQueue = assignedMessageQueue.getProcessQueue(messageQueue);\n \n-                if (processQueue == null && processQueue.isDropped()) {\n+                if (processQueue != null && processQueue.isDropped()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c33961ce7688df4acd0aa24c097e04481226ebb8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3ODY4NQ==", "bodyText": "ok,i check both with (processQueue is null) or (processQueue not null and isDropped)", "url": "https://github.com/apache/rocketmq/pull/2059#discussion_r433278685", "createdAt": "2020-06-01T14:47:20Z", "author": {"login": "lebron374"}, "path": "client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultLitePullConsumerImpl.java", "diffHunk": "@@ -691,7 +691,7 @@ public void run() {\n \n                 ProcessQueue processQueue = assignedMessageQueue.getProcessQueue(messageQueue);\n \n-                if (processQueue == null && processQueue.isDropped()) {\n+                if (processQueue != null && processQueue.isDropped()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA0OTgwMw=="}, "originalCommit": {"oid": "c33961ce7688df4acd0aa24c097e04481226ebb8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTI4NjM4OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultLitePullConsumerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjo0Njo0NFrOGdkLfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDoyNjowOFrOGd0UiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1NDY1NQ==", "bodyText": "why not just write as if (processQueue == null || processQueue.isDropped()) ? This is more concise", "url": "https://github.com/apache/rocketmq/pull/2059#discussion_r433654655", "createdAt": "2020-06-02T06:46:44Z", "author": {"login": "RongtongJin"}, "path": "client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultLitePullConsumerImpl.java", "diffHunk": "@@ -691,7 +691,7 @@ public void run() {\n \n                 ProcessQueue processQueue = assignedMessageQueue.getProcessQueue(messageQueue);\n \n-                if (processQueue == null && processQueue.isDropped()) {\n+                if ((null == processQueue) || (processQueue != null && processQueue.isDropped())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e965d18658256fe26ca963147a93bda6c853df8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxOTExMw==", "bodyText": "ok,i change as you say", "url": "https://github.com/apache/rocketmq/pull/2059#discussion_r433919113", "createdAt": "2020-06-02T14:26:08Z", "author": {"login": "lebron374"}, "path": "client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultLitePullConsumerImpl.java", "diffHunk": "@@ -691,7 +691,7 @@ public void run() {\n \n                 ProcessQueue processQueue = assignedMessageQueue.getProcessQueue(messageQueue);\n \n-                if (processQueue == null && processQueue.isDropped()) {\n+                if ((null == processQueue) || (processQueue != null && processQueue.isDropped())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1NDY1NQ=="}, "originalCommit": {"oid": "0e965d18658256fe26ca963147a93bda6c853df8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDMzMzg4OnYy", "diffSide": "RIGHT", "path": "client/src/test/java/org/apache/rocketmq/client/consumer/DefaultLitePullConsumerTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOToyMjo0OVrOGe9RCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwOTo0NDozMFrOGfnyhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExNDI1MA==", "bodyText": "powermock provide mock private method. you could use it to test null case and dropped case separately", "url": "https://github.com/apache/rocketmq/pull/2059#discussion_r435114250", "createdAt": "2020-06-04T09:22:49Z", "author": {"login": "vongosling"}, "path": "client/src/test/java/org/apache/rocketmq/client/consumer/DefaultLitePullConsumerTest.java", "diffHunk": "@@ -304,6 +304,29 @@ public void testPauseAndResume_Success() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testPullTaskImpl_ProcessQueueDropped() throws Exception {\n+        DefaultLitePullConsumer litePullConsumer = createNotStartLitePullConsumer();\n+        try {\n+            MessageQueue messageQueue = createMessageQueue();\n+            litePullConsumer.assign(Collections.singletonList(messageQueue));\n+            Field field = DefaultLitePullConsumer.class.getDeclaredField(\"defaultLitePullConsumerImpl\");\n+            field.setAccessible(true);\n+            // set ProcessQueue dropped = true\n+            DefaultLitePullConsumerImpl localLitePullConsumerImpl = (DefaultLitePullConsumerImpl) field.get(litePullConsumer);\n+            field = DefaultLitePullConsumerImpl.class.getDeclaredField(\"assignedMessageQueue\");\n+            field.setAccessible(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d227ac942366149c8f4114ace3777fe3034c2f08"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMwNzQ4MA==", "bodyText": "powermock provide mock private method. you could use it to test null case and dropped case separately\n\ni just add testPullTaskImpl_ProcessQueueNull", "url": "https://github.com/apache/rocketmq/pull/2059#discussion_r435307480", "createdAt": "2020-06-04T14:34:53Z", "author": {"login": "lebron374"}, "path": "client/src/test/java/org/apache/rocketmq/client/consumer/DefaultLitePullConsumerTest.java", "diffHunk": "@@ -304,6 +304,29 @@ public void testPauseAndResume_Success() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testPullTaskImpl_ProcessQueueDropped() throws Exception {\n+        DefaultLitePullConsumer litePullConsumer = createNotStartLitePullConsumer();\n+        try {\n+            MessageQueue messageQueue = createMessageQueue();\n+            litePullConsumer.assign(Collections.singletonList(messageQueue));\n+            Field field = DefaultLitePullConsumer.class.getDeclaredField(\"defaultLitePullConsumerImpl\");\n+            field.setAccessible(true);\n+            // set ProcessQueue dropped = true\n+            DefaultLitePullConsumerImpl localLitePullConsumerImpl = (DefaultLitePullConsumerImpl) field.get(litePullConsumer);\n+            field = DefaultLitePullConsumerImpl.class.getDeclaredField(\"assignedMessageQueue\");\n+            field.setAccessible(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExNDI1MA=="}, "originalCommit": {"oid": "d227ac942366149c8f4114ace3777fe3034c2f08"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgxMDk1MQ==", "bodyText": "Thanks, it's all right here.", "url": "https://github.com/apache/rocketmq/pull/2059#discussion_r435810951", "createdAt": "2020-06-05T09:44:30Z", "author": {"login": "vongosling"}, "path": "client/src/test/java/org/apache/rocketmq/client/consumer/DefaultLitePullConsumerTest.java", "diffHunk": "@@ -304,6 +304,29 @@ public void testPauseAndResume_Success() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testPullTaskImpl_ProcessQueueDropped() throws Exception {\n+        DefaultLitePullConsumer litePullConsumer = createNotStartLitePullConsumer();\n+        try {\n+            MessageQueue messageQueue = createMessageQueue();\n+            litePullConsumer.assign(Collections.singletonList(messageQueue));\n+            Field field = DefaultLitePullConsumer.class.getDeclaredField(\"defaultLitePullConsumerImpl\");\n+            field.setAccessible(true);\n+            // set ProcessQueue dropped = true\n+            DefaultLitePullConsumerImpl localLitePullConsumerImpl = (DefaultLitePullConsumerImpl) field.get(litePullConsumer);\n+            field = DefaultLitePullConsumerImpl.class.getDeclaredField(\"assignedMessageQueue\");\n+            field.setAccessible(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExNDI1MA=="}, "originalCommit": {"oid": "d227ac942366149c8f4114ace3777fe3034c2f08"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1667, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}