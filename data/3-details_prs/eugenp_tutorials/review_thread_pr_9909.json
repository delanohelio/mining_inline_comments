{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMTE1NzUy", "number": 9909, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowMToyOFrOEehrbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowMTozOFrOEehrkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDQ0NTI1OnYy", "diffSide": "RIGHT", "path": "spring-boot-modules/spring-boot-swagger/src/main/java/com/baeldung/swagger2boot/configuration/SwaggerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowMToyOFrOHKOQXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowMToyOFrOHKOQXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MTM3Mg==", "bodyText": "two space indent for the line continuation", "url": "https://github.com/eugenp/tutorials/pull/9909#discussion_r480481372", "createdAt": "2020-09-01T00:01:28Z", "author": {"login": "eric-martin"}, "path": "spring-boot-modules/spring-boot-swagger/src/main/java/com/baeldung/swagger2boot/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.baeldung.swagger2boot.configuration;\n+\n+import java.util.Collections;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.ApiInfo;\n+import springfox.documentation.service.Contact;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spring.web.plugins.Docket;\n+import springfox.documentation.swagger.web.DocExpansion;\n+import springfox.documentation.swagger.web.ModelRendering;\n+import springfox.documentation.swagger.web.OperationsSorter;\n+import springfox.documentation.swagger.web.TagsSorter;\n+import springfox.documentation.swagger.web.UiConfiguration;\n+import springfox.documentation.swagger.web.UiConfigurationBuilder;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\", \"Some custom description of API.\", \"API TOS\", \"Terms of service\",\n+          new Contact(\"Umang Budhwar\", \"www.baeldung.com\", \"umangbudhwar@gmail.com\"),\n+          \"License of API\", \"API license URL\", Collections.emptyList());\n+    }\n+\n+    @Bean\n+    public Docket api() {\n+        return new Docket(DocumentationType.SWAGGER_2).apiInfo(apiInfo())\n+            .select()\n+            .apis(RequestHandlerSelectors.any())\n+            .paths(PathSelectors.any())\n+            .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eca6ecd30555e9c1afaa83348acbf611ac42258"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDQ0NTYzOnYy", "diffSide": "RIGHT", "path": "spring-boot-modules/spring-boot-swagger/src/main/java/com/baeldung/swagger2boot/configuration/SwaggerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowMTozOFrOHKOQkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowMTozOFrOHKOQkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MTQyNA==", "bodyText": "two space indent for the line continuation", "url": "https://github.com/eugenp/tutorials/pull/9909#discussion_r480481424", "createdAt": "2020-09-01T00:01:38Z", "author": {"login": "eric-martin"}, "path": "spring-boot-modules/spring-boot-swagger/src/main/java/com/baeldung/swagger2boot/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.baeldung.swagger2boot.configuration;\n+\n+import java.util.Collections;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.ApiInfo;\n+import springfox.documentation.service.Contact;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spring.web.plugins.Docket;\n+import springfox.documentation.swagger.web.DocExpansion;\n+import springfox.documentation.swagger.web.ModelRendering;\n+import springfox.documentation.swagger.web.OperationsSorter;\n+import springfox.documentation.swagger.web.TagsSorter;\n+import springfox.documentation.swagger.web.UiConfiguration;\n+import springfox.documentation.swagger.web.UiConfigurationBuilder;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\", \"Some custom description of API.\", \"API TOS\", \"Terms of service\",\n+          new Contact(\"Umang Budhwar\", \"www.baeldung.com\", \"umangbudhwar@gmail.com\"),\n+          \"License of API\", \"API license URL\", Collections.emptyList());\n+    }\n+\n+    @Bean\n+    public Docket api() {\n+        return new Docket(DocumentationType.SWAGGER_2).apiInfo(apiInfo())\n+            .select()\n+            .apis(RequestHandlerSelectors.any())\n+            .paths(PathSelectors.any())\n+            .build();\n+    }\n+\n+    /**\n+     * SwaggerUI information\n+     */\n+\n+    @Bean\n+    UiConfiguration uiConfig() {\n+        return UiConfigurationBuilder.builder()\n+            .deepLinking(true)\n+            .displayOperationId(false)\n+            .defaultModelsExpandDepth(1)\n+            .defaultModelExpandDepth(1)\n+            .defaultModelRendering(ModelRendering.EXAMPLE)\n+            .displayRequestDuration(false)\n+            .docExpansion(DocExpansion.NONE)\n+            .filter(false)\n+            .maxDisplayedTags(null)\n+            .operationsSorter(OperationsSorter.ALPHA)\n+            .showExtensions(false)\n+            .tagsSorter(TagsSorter.ALPHA)\n+            .supportedSubmitMethods(UiConfiguration.Constants.DEFAULT_SUBMIT_METHODS)\n+            .validatorUrl(null)\n+            .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eca6ecd30555e9c1afaa83348acbf611ac42258"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4209, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}