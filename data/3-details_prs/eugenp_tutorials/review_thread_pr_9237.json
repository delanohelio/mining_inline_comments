{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTQyMDc2", "number": 9237, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo1ODoxOFrOD8RuIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDowMDoxOVrOD8RvgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTMxNDkxOnYy", "diffSide": "RIGHT", "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo1ODoxOFrOGVHigg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo1ODoxOFrOGVHigg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NjgwMg==", "bodyText": "this is redundant here.", "url": "https://github.com/eugenp/tutorials/pull/9237#discussion_r424796802", "createdAt": "2020-05-13T23:58:18Z", "author": {"login": "ashleyfrieze"}, "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.baeldung.spring.cloud.ribbon.retry.controller;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+import org.springframework.web.client.RestTemplate;\n+\n+@RestController\n+public class RibbonClientController {\n+\n+    @Autowired\n+    private RestTemplate restTemplate;\n+\n+    private static final String WEATHER_SERVICE = \"weather-service\";\n+\n+    @RequestMapping(\"/client/weather\")\n+    public String weather() {\n+        String result = this.restTemplate.getForObject(\"http://\" + WEATHER_SERVICE + \"/weather\", String.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ec5d95c257f390471d0b540d4663b896c414b9c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTMxNTU4OnYy", "diffSide": "RIGHT", "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo1ODo0MFrOGVHi8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo1ODo0MFrOGVHi8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NjkxMg==", "bodyText": "Can this be GetMapping?", "url": "https://github.com/eugenp/tutorials/pull/9237#discussion_r424796912", "createdAt": "2020-05-13T23:58:40Z", "author": {"login": "ashleyfrieze"}, "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.baeldung.spring.cloud.ribbon.retry.controller;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+import org.springframework.web.client.RestTemplate;\n+\n+@RestController\n+public class RibbonClientController {\n+\n+    @Autowired\n+    private RestTemplate restTemplate;\n+\n+    private static final String WEATHER_SERVICE = \"weather-service\";\n+\n+    @RequestMapping(\"/client/weather\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ec5d95c257f390471d0b540d4663b896c414b9c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTMxNjMxOnYy", "diffSide": "RIGHT", "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo1OTowN1rOGVHjdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo1OTowN1rOGVHjdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NzA0NA==", "bodyText": "Do we need this test?", "url": "https://github.com/eugenp/tutorials/pull/9237#discussion_r424797044", "createdAt": "2020-05-13T23:59:07Z", "author": {"login": "ashleyfrieze"}, "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.baeldung.spring.cloud.ribbon.retry;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+@SpringBootTest\n+public class SpringContextTest {\n+\n+    @Test\n+    public void whenSpringContextIsBootstrapped_thenNoExceptions() {\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ec5d95c257f390471d0b540d4663b896c414b9c"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTMxODQwOnYy", "diffSide": "RIGHT", "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-weather-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDowMDoxOVrOGVHkvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDowMDoxOVrOGVHkvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NzM3Mg==", "bodyText": "Do we need this test?", "url": "https://github.com/eugenp/tutorials/pull/9237#discussion_r424797372", "createdAt": "2020-05-14T00:00:19Z", "author": {"login": "ashleyfrieze"}, "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-weather-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.baeldung.spring.cloud.ribbon.retry;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+@SpringBootTest\n+public class SpringContextTest {\n+\n+    @Test\n+    public void whenSpringContextIsBootstrapped_thenNoExceptions() {\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ec5d95c257f390471d0b540d4663b896c414b9c"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4005, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}