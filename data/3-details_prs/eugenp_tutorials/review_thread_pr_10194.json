{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NTM1MDUy", "number": 10194, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoxNzo1N1rOEw7bfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDoyMTowN1rOEzd7rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzQwNzk3OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-9-jigsaw/src/test/java/com/baeldung/java9/modules/ModuleAPIUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoxNzo1N1rOHmyRqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoxNzo1N1rOHmyRqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzMTY1OA==", "bodyText": "I have removed the assertions on the number of modules. It's dependent on the JVM version, so we shouldn't test for it.", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r510431658", "createdAt": "2020-10-22T20:17:57Z", "author": {"login": "Maiklins"}, "path": "core-java-modules/core-java-9-jigsaw/src/test/java/com/baeldung/java9/modules/ModuleAPIUnitTest.java", "diffHunk": "@@ -2,8 +2,7 @@\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU1ODc0OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-11/src/test/java/com/baeldung/java11/httpclient/test/HttpRequestUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MDo0M1rOHpuA1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDowODoyMVrOHqswwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwNzU0Mw==", "bodyText": "can we use the @Disabled annotation instead?", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r513507543", "createdAt": "2020-10-28T14:50:43Z", "author": {"login": "dkapil"}, "path": "core-java-modules/core-java-11/src/test/java/com/baeldung/java11/httpclient/test/HttpRequestUnitTest.java", "diffHunk": "@@ -48,7 +48,12 @@ public void shouldUseHttp2WhenWebsiteUsesHttp2() throws IOException, Interrupted\n         assertThat(response.version(), equalTo(HttpClient.Version.HTTP_2));\n     }\n \n-    @Test\n+    /*\n+    * This test will fail as soon as the given URL returns a HTTP 2 response.\n+    * Therefore, let's leave it commented out.\n+    * */\n+\n+   /* @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUzNTYxOA==", "bodyText": "ok", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r514535618", "createdAt": "2020-10-29T20:08:21Z", "author": {"login": "Maiklins"}, "path": "core-java-modules/core-java-11/src/test/java/com/baeldung/java11/httpclient/test/HttpRequestUnitTest.java", "diffHunk": "@@ -48,7 +48,12 @@ public void shouldUseHttp2WhenWebsiteUsesHttp2() throws IOException, Interrupted\n         assertThat(response.version(), equalTo(HttpClient.Version.HTTP_2));\n     }\n \n-    @Test\n+    /*\n+    * This test will fail as soon as the given URL returns a HTTP 2 response.\n+    * Therefore, let's leave it commented out.\n+    * */\n+\n+   /* @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwNzU0Mw=="}, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU2MzUxOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-datetime-string/src/test/java/com/baeldung/datetime/DateTimeFormatterUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MTozNFrOHpuDww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDoxNjozN1rOHqtBrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwODI5MQ==", "bodyText": "Let's use @Disabled annotation.", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r513508291", "createdAt": "2020-10-28T14:51:34Z", "author": {"login": "dkapil"}, "path": "core-java-modules/core-java-datetime-string/src/test/java/com/baeldung/datetime/DateTimeFormatterUnitTest.java", "diffHunk": "@@ -105,14 +107,15 @@ public void shouldPrintStyledDate() {\n         Assert.assertEquals(\"8/23/16\", DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT).format(anotherSummerDay));\n     }\n \n-    @Test\n-    public void shouldPrintStyledDateTime() {\n-        LocalDateTime anotherSummerDay = LocalDateTime.of(2016, 8, 23, 13, 12, 45);\n-        Assert.assertEquals(\"Tuesday, August 23, 2016 1:12:45 PM EET\", DateTimeFormatter.ofLocalizedDateTime(FormatStyle.FULL).withZone(ZoneId.of(\"Europe/Helsinki\")).format(anotherSummerDay));\n-        Assert.assertEquals(\"August 23, 2016 1:12:45 PM EET\", DateTimeFormatter.ofLocalizedDateTime(FormatStyle.LONG).withZone(ZoneId.of(\"Europe/Helsinki\")).format(anotherSummerDay));\n-        Assert.assertEquals(\"Aug 23, 2016 1:12:45 PM\", DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM).withZone(ZoneId.of(\"Europe/Helsinki\")).format(anotherSummerDay));\n-        Assert.assertEquals(\"8/23/16 1:12 PM\", DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT).withZone(ZoneId.of(\"Europe/Helsinki\")).format(anotherSummerDay));\n-    }\n+    // Note: The exact output format using the different FormatStyle constants differs by JVM/Java version", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUzOTk0OA==", "bodyText": "I think that test doesn't make much sense. We are testing the Java API here.", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r514539948", "createdAt": "2020-10-29T20:16:37Z", "author": {"login": "Maiklins"}, "path": "core-java-modules/core-java-datetime-string/src/test/java/com/baeldung/datetime/DateTimeFormatterUnitTest.java", "diffHunk": "@@ -105,14 +107,15 @@ public void shouldPrintStyledDate() {\n         Assert.assertEquals(\"8/23/16\", DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT).format(anotherSummerDay));\n     }\n \n-    @Test\n-    public void shouldPrintStyledDateTime() {\n-        LocalDateTime anotherSummerDay = LocalDateTime.of(2016, 8, 23, 13, 12, 45);\n-        Assert.assertEquals(\"Tuesday, August 23, 2016 1:12:45 PM EET\", DateTimeFormatter.ofLocalizedDateTime(FormatStyle.FULL).withZone(ZoneId.of(\"Europe/Helsinki\")).format(anotherSummerDay));\n-        Assert.assertEquals(\"August 23, 2016 1:12:45 PM EET\", DateTimeFormatter.ofLocalizedDateTime(FormatStyle.LONG).withZone(ZoneId.of(\"Europe/Helsinki\")).format(anotherSummerDay));\n-        Assert.assertEquals(\"Aug 23, 2016 1:12:45 PM\", DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM).withZone(ZoneId.of(\"Europe/Helsinki\")).format(anotherSummerDay));\n-        Assert.assertEquals(\"8/23/16 1:12 PM\", DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT).withZone(ZoneId.of(\"Europe/Helsinki\")).format(anotherSummerDay));\n-    }\n+    // Note: The exact output format using the different FormatStyle constants differs by JVM/Java version", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwODI5MQ=="}, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU2NzQzOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-os/src/test/java/com/baeldung/java9/process/ProcessAPIEnhancementsUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MjoxNVrOHpuGOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDoxNzowOVrOHqtC7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwODkyMA==", "bodyText": "have the assertions changed because the Java version has been upgraded? I just want to understand if we are asserting the correct data.", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r513508920", "createdAt": "2020-10-28T14:52:15Z", "author": {"login": "dkapil"}, "path": "core-java-modules/core-java-os/src/test/java/com/baeldung/java9/process/ProcessAPIEnhancementsUnitTest.java", "diffHunk": "@@ -61,7 +61,7 @@ public void givenSpawnProcess_whenInvokeGetInfo_thenSuccess() throws IOException\n           .contains(\"java\"));\n         assertEquals(true, processInfo.startInstant()\n           .isPresent());\n-        assertEquals(true, processInfo.totalCpuDuration()\n+        assertEquals(false, processInfo.totalCpuDuration()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0MDI2OA==", "bodyText": "yes", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r514540268", "createdAt": "2020-10-29T20:17:09Z", "author": {"login": "Maiklins"}, "path": "core-java-modules/core-java-os/src/test/java/com/baeldung/java9/process/ProcessAPIEnhancementsUnitTest.java", "diffHunk": "@@ -61,7 +61,7 @@ public void givenSpawnProcess_whenInvokeGetInfo_thenSuccess() throws IOException\n           .contains(\"java\"));\n         assertEquals(true, processInfo.startInstant()\n           .isPresent());\n-        assertEquals(true, processInfo.totalCpuDuration()\n+        assertEquals(false, processInfo.totalCpuDuration()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwODkyMA=="}, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU3MTE2OnYy", "diffSide": "LEFT", "path": "core-java-modules/core-java-os/src/test/java/com/baeldung/java9/process/ProcessUnderstandingUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MzowMVrOHpuIrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MzowMVrOHpuIrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwOTU0OQ==", "bodyText": "can we add a reason why these tests will not work and disabled them instead of removing?", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r513509549", "createdAt": "2020-10-28T14:53:01Z", "author": {"login": "dkapil"}, "path": "core-java-modules/core-java-os/src/test/java/com/baeldung/java9/process/ProcessUnderstandingUnitTest.java", "diffHunk": "@@ -16,28 +16,6 @@\n \n class ProcessUnderstandingUnitTest {\n \n-    @Test\n-    public void givenSourceProgram_whenExecutedFromAnotherProgram_thenSourceProgramOutput3() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU3MjQ2OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-os/src/test/java/com/baeldung/screenshot/ScreenshotUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MzoxOFrOHpuJfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1MzoxOFrOHpuJfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUwOTc1Nw==", "bodyText": "@disabled annotation", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r513509757", "createdAt": "2020-10-28T14:53:18Z", "author": {"login": "dkapil"}, "path": "core-java-modules/core-java-os/src/test/java/com/baeldung/screenshot/ScreenshotUnitTest.java", "diffHunk": "@@ -38,14 +40,15 @@ public void givenMultipleScreens_whenTakeScreenshot_thenSaveToFile() throws Exce\n         assertTrue(imageFile.exists());\n     }\n \n-    @Test\n-    public void givenComponent_whenTakeScreenshot_thenSaveToFile(Component component) throws Exception {\n-        Rectangle componentRect = component.getBounds();\n-        BufferedImage bufferedImage = new BufferedImage(componentRect.width, componentRect.height, BufferedImage.TYPE_INT_ARGB);\n-        component.paint(bufferedImage.getGraphics());\n-        File imageFile = File.createTempFile(\"component-screenshot\", \"bmp\");\n-        ImageIO.write(bufferedImage, \"bmp\", imageFile);\n-        assertTrue(imageFile.exists());\n-    }\n+    //    This methods needs a component as a parameter and can only be run from an application with a GUI", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU3ODk5OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-time-measurements/src/test/java/com/baeldung/time/ElapsedTimeUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1NDoyNVrOHpuNjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDoyNDoxM1rOHqtRIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxMDc5Ng==", "bodyText": "I think in this case we can rename the entire test to *ManualTest?", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r513510796", "createdAt": "2020-10-28T14:54:25Z", "author": {"login": "dkapil"}, "path": "core-java-modules/core-java-time-measurements/src/test/java/com/baeldung/time/ElapsedTimeUnitTest.java", "diffHunk": "@@ -50,19 +50,27 @@ public void givenRunningTask_whenMeasuringTimeWithStopWatch_thenGetElapsedTime()\n         \n         assertEquals(true, (2000L <= timeElapsed) && (timeElapsed <= 3000L));\n     }\n-    \n-    @Test\n+\n+    /*\n+     The below test depends on the elapsed time, which isn't ideal in a test.\n+     Also, it slows down test execution artificially.\n+     */\n+    /*@Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0MzkwNg==", "bodyText": "ok", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r514543906", "createdAt": "2020-10-29T20:24:13Z", "author": {"login": "Maiklins"}, "path": "core-java-modules/core-java-time-measurements/src/test/java/com/baeldung/time/ElapsedTimeUnitTest.java", "diffHunk": "@@ -50,19 +50,27 @@ public void givenRunningTask_whenMeasuringTimeWithStopWatch_thenGetElapsedTime()\n         \n         assertEquals(true, (2000L <= timeElapsed) && (timeElapsed <= 3000L));\n     }\n-    \n-    @Test\n+\n+    /*\n+     The below test depends on the elapsed time, which isn't ideal in a test.\n+     Also, it slows down test execution artificially.\n+     */\n+    /*@Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxMDc5Ng=="}, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzU4MTQ2OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java/src/test/resources/dictionary.in", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1NDo1MlrOHpuPGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDoyNjoyN1rOHqtV5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxMTE5Mw==", "bodyText": "is this change intended for this PR?", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r513511193", "createdAt": "2020-10-28T14:54:52Z", "author": {"login": "dkapil"}, "path": "core-java-modules/core-java/src/test/resources/dictionary.in", "diffHunk": "@@ -1,4 +1,4 @@\n-AA\n+vAA", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0NTEyNQ==", "bodyText": "no ...", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r514545125", "createdAt": "2020-10-29T20:26:27Z", "author": {"login": "Maiklins"}, "path": "core-java-modules/core-java/src/test/resources/dictionary.in", "diffHunk": "@@ -1,4 +1,4 @@\n-AA\n+vAA", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxMTE5Mw=="}, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNDAzMjQ0OnYy", "diffSide": "LEFT", "path": "core-java-modules/core-java-os/src/test/java/com/baeldung/java9/process/ProcessUnderstandingUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDoyMTowN1rOHqtLAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDoyMTowN1rOHqtLAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0MjMzNw==", "bodyText": "We are killing a \"random\" process. This can work or no, depending on if that process exists or not. Most likely it doesn't exist, so the test fails.", "url": "https://github.com/eugenp/tutorials/pull/10194#discussion_r514542337", "createdAt": "2020-10-29T20:21:07Z", "author": {"login": "Maiklins"}, "path": "core-java-modules/core-java-os/src/test/java/com/baeldung/java9/process/ProcessUnderstandingUnitTest.java", "diffHunk": "@@ -83,14 +61,6 @@ public void givenSubProcess_whenDestroyed_thenCheckIfAlive() throws IOException,\n         assertFalse(process.isAlive());\n     }\n \n-    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39af870a1a9dd9015d20fe84dca051886ead3cec"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4173, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}