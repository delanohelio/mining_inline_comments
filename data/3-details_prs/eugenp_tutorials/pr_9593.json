{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwOTM5NjAy", "number": 9593, "title": "[BAEL-4123] What is the purpose of 'Class.forName(\u201cMY_JDBC_DRIVER\u201d)'?", "bodyText": "", "createdAt": "2020-06-27T17:30:05Z", "url": "https://github.com/eugenp/tutorials/pull/9593", "merged": true, "mergeCommit": {"oid": "51d8365312da3f4a12a47ad3ac2732436390822d"}, "closed": true, "closedAt": "2020-07-12T15:33:33Z", "author": {"login": "shapirov103"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcvbR57gH2gAyNDQwOTM5NjAyOjZkZWNiMDRhNmY5ZDkwMzZiODViZjExNDcyMTM5MjU1YjQ4NjNhNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxLC3-AH2gAyNDQwOTM5NjAyOjlmM2I1YjAwYzlkNzE5NzJlMWNhYThjNzAwMjdmMTMwNDM5MjMzMWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6decb04a6f9d9036b85bf11472139255b4863a4f", "author": {"user": {"login": "shapirov103", "name": "Mikhail Shapirov"}}, "url": "https://github.com/eugenp/tutorials/commit/6decb04a6f9d9036b85bf11472139255b4863a4f", "committedDate": "2020-06-27T17:27:31Z", "message": "Loading JDBC driver unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTM1Mjcz", "url": "https://github.com/eugenp/tutorials/pull/9593#pullrequestreview-440535273", "createdAt": "2020-07-01T04:19:41Z", "commit": {"oid": "6decb04a6f9d9036b85bf11472139255b4863a4f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDoxOTo0MVrOGrWOuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDoxOTo0MVrOGrWOuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwNjE2OA==", "bodyText": "Remove extra space before the =", "url": "https://github.com/eugenp/tutorials/pull/9593#discussion_r448106168", "createdAt": "2020-07-01T04:19:41Z", "author": {"login": "eric-martin"}, "path": "persistence-modules/core-java-persistence/src/test/java/com/baeldung/jdbc/JdbcDriverLoadingUnitTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package com.baeldung.jdbc;\n+\n+import static org.junit.Assert.*;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.sql.Driver;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+\n+public class JdbcDriverLoadingUnitTest {\n+\n+    @Before\n+    public void setup() throws SQLException {\n+        if(!org.postgresql.Driver.isRegistered()) {\n+            org.postgresql.Driver.register();\n+        }\n+    }\n+    /**\n+     * Driver is registered automatically with the service provider mechanism.\n+     */\n+    @Test\n+    public void givenJdbcDriverWithSP_whenGettingDriver_thenDriverIsReturned() throws SQLException {\n+        Driver driver = getDriver();\n+        assertNotNull(\"Expected initialized postgres driver\", driver);\n+    }\n+\n+    /**\n+     * Driver is registered automatically, then deregistered.\n+     * @throws SQLException\n+     */\n+    @Test(expected = SQLException.class)\n+    public void givenRegisteredJdbcDriver_whenDeregister_thenNoDriverIsReturned() throws SQLException {\n+        Driver driver = getDriver();\n+        DriverManager.deregisterDriver(driver);\n+        driver = getDriver();\n+        assertNull(driver);\n+    }\n+\n+    /**\n+     * Driver is automatically by the JVM, then deregistered, then registered again.\n+     * @throws SQLException\n+     * @throws ClassNotFoundException\n+     */\n+    @Test\n+    public void givenNoRegisteredDriver_whenClassForName_thenDriverIsReturned() throws SQLException, ClassNotFoundException {\n+        deregisterDriver();\n+\n+        Driver driver = null;\n+        try {\n+            driver = getDriver();\n+        }\n+        catch (SQLException e) {\n+            // expected\n+        }\n+        assertNull(\"Must fail on attempt to get a deregistered driver\", driver);\n+\n+        org.postgresql.Driver.register(); // This is invoked as part of Class.forName() logic\n+\n+        driver  = getDriver();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6decb04a6f9d9036b85bf11472139255b4863a4f"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTM1Mzc1", "url": "https://github.com/eugenp/tutorials/pull/9593#pullrequestreview-440535375", "createdAt": "2020-07-01T04:20:02Z", "commit": {"oid": "6decb04a6f9d9036b85bf11472139255b4863a4f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDoyMDowMlrOGrWPGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDoyMDowMlrOGrWPGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwNjI2Ng==", "bodyText": "Add a space between the if and the (", "url": "https://github.com/eugenp/tutorials/pull/9593#discussion_r448106266", "createdAt": "2020-07-01T04:20:02Z", "author": {"login": "eric-martin"}, "path": "persistence-modules/core-java-persistence/src/test/java/com/baeldung/jdbc/JdbcDriverLoadingUnitTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package com.baeldung.jdbc;\n+\n+import static org.junit.Assert.*;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.sql.Driver;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+\n+public class JdbcDriverLoadingUnitTest {\n+\n+    @Before\n+    public void setup() throws SQLException {\n+        if(!org.postgresql.Driver.isRegistered()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6decb04a6f9d9036b85bf11472139255b4863a4f"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f3b5b00c9d71972e1caa8c70027f1304392331d", "author": {"user": {"login": "shapirov103", "name": "Mikhail Shapirov"}}, "url": "https://github.com/eugenp/tutorials/commit/9f3b5b00c9d71972e1caa8c70027f1304392331d", "committedDate": "2020-07-03T03:40:28Z", "message": "addressing code review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4355, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}