{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMDk2MzI1", "number": 9604, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNjoxMzoyOFrOESKY6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNjoxNzozOVrOESKaTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDgwMDQxOnYy", "diffSide": "RIGHT", "path": "apache-poi/src/test/java/com/baeldung/poi/excel/setformula/ExcelFormulaUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNjoxMzoyOFrOG3NdRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNjoxMzoyOFrOG3NdRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NTM1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenExcelData_whenSetAndEvaluateFormula() throws IOException {\n          \n          \n            \n                void givenExcelData_whenSetFormula_thenSuccess() throws IOException {", "url": "https://github.com/eugenp/tutorials/pull/9604#discussion_r460545351", "createdAt": "2020-07-26T16:13:28Z", "author": {"login": "KevinGilmore"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/setformula/ExcelFormulaUnitTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.baeldung.poi.excel.setformula;\n+\n+import org.apache.poi.ss.util.CellReference;\n+import org.apache.poi.xssf.usermodel.XSSFSheet;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Assert;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+class ExcelFormulaUnitTest {\n+    private static String FILE_NAME = \"com/bealdung/poi/excel/setformula/SetFormulaTest.xlsx\";\n+    private String fileLocation;\n+    private ExcelFormula excelFormula;\n+\n+    @BeforeEach\n+    public void setup() throws URISyntaxException {\n+        fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+        excelFormula = new ExcelFormula();\n+    }\n+\n+    @Test\n+    void givenExcelData_whenSetAndEvaluateFormula() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13f2c8e8b11c948fd6b5d8df0591aa65683272b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDgwMDk5OnYy", "diffSide": "RIGHT", "path": "apache-poi/src/test/java/com/baeldung/poi/excel/setformula/ExcelFormulaUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNjoxNDowMFrOG3Ndiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNjoxNDowMFrOG3Ndiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NTQxOQ==", "bodyText": "Add a blank line before and after the call to setFormula", "url": "https://github.com/eugenp/tutorials/pull/9604#discussion_r460545419", "createdAt": "2020-07-26T16:14:00Z", "author": {"login": "KevinGilmore"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/setformula/ExcelFormulaUnitTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.baeldung.poi.excel.setformula;\n+\n+import org.apache.poi.ss.util.CellReference;\n+import org.apache.poi.xssf.usermodel.XSSFSheet;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Assert;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+class ExcelFormulaUnitTest {\n+    private static String FILE_NAME = \"com/bealdung/poi/excel/setformula/SetFormulaTest.xlsx\";\n+    private String fileLocation;\n+    private ExcelFormula excelFormula;\n+\n+    @BeforeEach\n+    public void setup() throws URISyntaxException {\n+        fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+        excelFormula = new ExcelFormula();\n+    }\n+\n+    @Test\n+    void givenExcelData_whenSetAndEvaluateFormula() throws IOException {\n+        FileInputStream inputStream = new FileInputStream(new File(fileLocation));\n+        XSSFWorkbook wb = new XSSFWorkbook(inputStream);\n+        XSSFSheet sheet = wb.getSheetAt(0);\n+        double resultColumnA = 0;\n+        double resultColumnB = 0;\n+        for (int row = 0; row <= sheet.getLastRowNum(); row++) {\n+            resultColumnA += sheet.getRow(row).getCell(0).getNumericCellValue();\n+            resultColumnB += sheet.getRow(row).getCell(1).getNumericCellValue();\n+        }\n+        String colNameA = CellReference.convertNumToColString(0);\n+        String colNameB = CellReference.convertNumToColString(1);\n+        String startCellA = colNameA + 1;\n+        String stopCellA = colNameA + (sheet.getLastRowNum() + 1);\n+        String sumFormulaForColumnA = String.format(\"SUM(%s:%s)\", startCellA, stopCellA);\n+        String startCellB = colNameB + 1;\n+        String stopCellB = colNameB + (sheet.getLastRowNum() + 1);\n+        String sumFormulaForColumnB = String.format(\"SUM(%s:%s)\", startCellB, stopCellB);\n+        double resultValue = excelFormula.setFormula(fileLocation, wb, sumFormulaForColumnA + \"-\" + sumFormulaForColumnB);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13f2c8e8b11c948fd6b5d8df0591aa65683272b"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDgwMzk2OnYy", "diffSide": "RIGHT", "path": "apache-poi/src/test/java/com/baeldung/poi/excel/setformula/ExcelFormulaUnitTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNjoxNzozOVrOG3Ne_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMjo0NzoyOFrOG5M6Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NTc5MQ==", "bodyText": "Swap order of arguments to match the method signature: assertEquals(expected, actual)", "url": "https://github.com/eugenp/tutorials/pull/9604#discussion_r460545791", "createdAt": "2020-07-26T16:17:39Z", "author": {"login": "KevinGilmore"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/setformula/ExcelFormulaUnitTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.baeldung.poi.excel.setformula;\n+\n+import org.apache.poi.ss.util.CellReference;\n+import org.apache.poi.xssf.usermodel.XSSFSheet;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Assert;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+class ExcelFormulaUnitTest {\n+    private static String FILE_NAME = \"com/bealdung/poi/excel/setformula/SetFormulaTest.xlsx\";\n+    private String fileLocation;\n+    private ExcelFormula excelFormula;\n+\n+    @BeforeEach\n+    public void setup() throws URISyntaxException {\n+        fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+        excelFormula = new ExcelFormula();\n+    }\n+\n+    @Test\n+    void givenExcelData_whenSetAndEvaluateFormula() throws IOException {\n+        FileInputStream inputStream = new FileInputStream(new File(fileLocation));\n+        XSSFWorkbook wb = new XSSFWorkbook(inputStream);\n+        XSSFSheet sheet = wb.getSheetAt(0);\n+        double resultColumnA = 0;\n+        double resultColumnB = 0;\n+        for (int row = 0; row <= sheet.getLastRowNum(); row++) {\n+            resultColumnA += sheet.getRow(row).getCell(0).getNumericCellValue();\n+            resultColumnB += sheet.getRow(row).getCell(1).getNumericCellValue();\n+        }\n+        String colNameA = CellReference.convertNumToColString(0);\n+        String colNameB = CellReference.convertNumToColString(1);\n+        String startCellA = colNameA + 1;\n+        String stopCellA = colNameA + (sheet.getLastRowNum() + 1);\n+        String sumFormulaForColumnA = String.format(\"SUM(%s:%s)\", startCellA, stopCellA);\n+        String startCellB = colNameB + 1;\n+        String stopCellB = colNameB + (sheet.getLastRowNum() + 1);\n+        String sumFormulaForColumnB = String.format(\"SUM(%s:%s)\", startCellB, stopCellB);\n+        double resultValue = excelFormula.setFormula(fileLocation, wb, sumFormulaForColumnA + \"-\" + sumFormulaForColumnB);\n+        Assert.assertEquals(resultValue, resultColumnA - resultColumnB, 0d);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13f2c8e8b11c948fd6b5d8df0591aa65683272b"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyNjU3Ng==", "bodyText": "This line still needs to be adjusted so that 0d is the \"expected\" and resultColumnA - resultColumnB is the \"actual\"", "url": "https://github.com/eugenp/tutorials/pull/9604#discussion_r460626576", "createdAt": "2020-07-27T03:20:59Z", "author": {"login": "KevinGilmore"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/setformula/ExcelFormulaUnitTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.baeldung.poi.excel.setformula;\n+\n+import org.apache.poi.ss.util.CellReference;\n+import org.apache.poi.xssf.usermodel.XSSFSheet;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Assert;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+class ExcelFormulaUnitTest {\n+    private static String FILE_NAME = \"com/bealdung/poi/excel/setformula/SetFormulaTest.xlsx\";\n+    private String fileLocation;\n+    private ExcelFormula excelFormula;\n+\n+    @BeforeEach\n+    public void setup() throws URISyntaxException {\n+        fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+        excelFormula = new ExcelFormula();\n+    }\n+\n+    @Test\n+    void givenExcelData_whenSetAndEvaluateFormula() throws IOException {\n+        FileInputStream inputStream = new FileInputStream(new File(fileLocation));\n+        XSSFWorkbook wb = new XSSFWorkbook(inputStream);\n+        XSSFSheet sheet = wb.getSheetAt(0);\n+        double resultColumnA = 0;\n+        double resultColumnB = 0;\n+        for (int row = 0; row <= sheet.getLastRowNum(); row++) {\n+            resultColumnA += sheet.getRow(row).getCell(0).getNumericCellValue();\n+            resultColumnB += sheet.getRow(row).getCell(1).getNumericCellValue();\n+        }\n+        String colNameA = CellReference.convertNumToColString(0);\n+        String colNameB = CellReference.convertNumToColString(1);\n+        String startCellA = colNameA + 1;\n+        String stopCellA = colNameA + (sheet.getLastRowNum() + 1);\n+        String sumFormulaForColumnA = String.format(\"SUM(%s:%s)\", startCellA, stopCellA);\n+        String startCellB = colNameB + 1;\n+        String stopCellB = colNameB + (sheet.getLastRowNum() + 1);\n+        String sumFormulaForColumnB = String.format(\"SUM(%s:%s)\", startCellB, stopCellB);\n+        double resultValue = excelFormula.setFormula(fileLocation, wb, sumFormulaForColumnA + \"-\" + sumFormulaForColumnB);\n+        Assert.assertEquals(resultValue, resultColumnA - resultColumnB, 0d);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NTc5MQ=="}, "originalCommit": {"oid": "e13f2c8e8b11c948fd6b5d8df0591aa65683272b"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNDQ4OQ==", "bodyText": "the method signature is like this:\n\nthe \"resultValue\" is what I get from setFormula method and \"resultColumnA - resultColumnB\" is what is expected.\nAm I missing something?", "url": "https://github.com/eugenp/tutorials/pull/9604#discussion_r460714489", "createdAt": "2020-07-27T08:03:57Z", "author": {"login": "SaTaSo"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/setformula/ExcelFormulaUnitTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.baeldung.poi.excel.setformula;\n+\n+import org.apache.poi.ss.util.CellReference;\n+import org.apache.poi.xssf.usermodel.XSSFSheet;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Assert;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+class ExcelFormulaUnitTest {\n+    private static String FILE_NAME = \"com/bealdung/poi/excel/setformula/SetFormulaTest.xlsx\";\n+    private String fileLocation;\n+    private ExcelFormula excelFormula;\n+\n+    @BeforeEach\n+    public void setup() throws URISyntaxException {\n+        fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+        excelFormula = new ExcelFormula();\n+    }\n+\n+    @Test\n+    void givenExcelData_whenSetAndEvaluateFormula() throws IOException {\n+        FileInputStream inputStream = new FileInputStream(new File(fileLocation));\n+        XSSFWorkbook wb = new XSSFWorkbook(inputStream);\n+        XSSFSheet sheet = wb.getSheetAt(0);\n+        double resultColumnA = 0;\n+        double resultColumnB = 0;\n+        for (int row = 0; row <= sheet.getLastRowNum(); row++) {\n+            resultColumnA += sheet.getRow(row).getCell(0).getNumericCellValue();\n+            resultColumnB += sheet.getRow(row).getCell(1).getNumericCellValue();\n+        }\n+        String colNameA = CellReference.convertNumToColString(0);\n+        String colNameB = CellReference.convertNumToColString(1);\n+        String startCellA = colNameA + 1;\n+        String stopCellA = colNameA + (sheet.getLastRowNum() + 1);\n+        String sumFormulaForColumnA = String.format(\"SUM(%s:%s)\", startCellA, stopCellA);\n+        String startCellB = colNameB + 1;\n+        String stopCellB = colNameB + (sheet.getLastRowNum() + 1);\n+        String sumFormulaForColumnB = String.format(\"SUM(%s:%s)\", startCellB, stopCellB);\n+        double resultValue = excelFormula.setFormula(fileLocation, wb, sumFormulaForColumnA + \"-\" + sumFormulaForColumnB);\n+        Assert.assertEquals(resultValue, resultColumnA - resultColumnB, 0d);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NTc5MQ=="}, "originalCommit": {"oid": "e13f2c8e8b11c948fd6b5d8df0591aa65683272b"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYzMzUwNg==", "bodyText": "No, you got it -- the latest change has what I was looking for. Thanks!", "url": "https://github.com/eugenp/tutorials/pull/9604#discussion_r462633506", "createdAt": "2020-07-29T22:47:28Z", "author": {"login": "KevinGilmore"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/setformula/ExcelFormulaUnitTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.baeldung.poi.excel.setformula;\n+\n+import org.apache.poi.ss.util.CellReference;\n+import org.apache.poi.xssf.usermodel.XSSFSheet;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Assert;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+class ExcelFormulaUnitTest {\n+    private static String FILE_NAME = \"com/bealdung/poi/excel/setformula/SetFormulaTest.xlsx\";\n+    private String fileLocation;\n+    private ExcelFormula excelFormula;\n+\n+    @BeforeEach\n+    public void setup() throws URISyntaxException {\n+        fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+        excelFormula = new ExcelFormula();\n+    }\n+\n+    @Test\n+    void givenExcelData_whenSetAndEvaluateFormula() throws IOException {\n+        FileInputStream inputStream = new FileInputStream(new File(fileLocation));\n+        XSSFWorkbook wb = new XSSFWorkbook(inputStream);\n+        XSSFSheet sheet = wb.getSheetAt(0);\n+        double resultColumnA = 0;\n+        double resultColumnB = 0;\n+        for (int row = 0; row <= sheet.getLastRowNum(); row++) {\n+            resultColumnA += sheet.getRow(row).getCell(0).getNumericCellValue();\n+            resultColumnB += sheet.getRow(row).getCell(1).getNumericCellValue();\n+        }\n+        String colNameA = CellReference.convertNumToColString(0);\n+        String colNameB = CellReference.convertNumToColString(1);\n+        String startCellA = colNameA + 1;\n+        String stopCellA = colNameA + (sheet.getLastRowNum() + 1);\n+        String sumFormulaForColumnA = String.format(\"SUM(%s:%s)\", startCellA, stopCellA);\n+        String startCellB = colNameB + 1;\n+        String stopCellB = colNameB + (sheet.getLastRowNum() + 1);\n+        String sumFormulaForColumnB = String.format(\"SUM(%s:%s)\", startCellB, stopCellB);\n+        double resultValue = excelFormula.setFormula(fileLocation, wb, sumFormulaForColumnA + \"-\" + sumFormulaForColumnB);\n+        Assert.assertEquals(resultValue, resultColumnA - resultColumnB, 0d);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NTc5MQ=="}, "originalCommit": {"oid": "e13f2c8e8b11c948fd6b5d8df0591aa65683272b"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4303, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}