{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MDU0NjAx", "number": 9272, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTozMjowNFrOD-XPfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTozNDoyNVrOD-XSkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzE5MTAzOnYy", "diffSide": "RIGHT", "path": "jackson-modules/jackson-conversions/src/main/java/com/baeldung/jackson/date/EventWithLocalDate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTozMjowNFrOGYa3fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTozMjowNFrOGYa3fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI1OTE5Ng==", "bodyText": "Minor: extra blankspace here isn't needed - just one line's separation between import and class", "url": "https://github.com/eugenp/tutorials/pull/9272#discussion_r428259196", "createdAt": "2020-05-20T19:32:04Z", "author": {"login": "ashleyfrieze"}, "path": "jackson-modules/jackson-conversions/src/main/java/com/baeldung/jackson/date/EventWithLocalDate.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.baeldung.jackson.date;\n+\n+import com.fasterxml.jackson.annotation.JsonFormat;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;\n+import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;\n+\n+import java.time.LocalDate;\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e1b768e6c50529cb0af250ca437b94a9f01cd9"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzE5MjYzOnYy", "diffSide": "RIGHT", "path": "jackson-modules/jackson-conversions/src/main/java/com/baeldung/jackson/date/EventWithLocalDate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTozMjozMVrOGYa4cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTozMjozMVrOGYa4cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI1OTQ0MA==", "bodyText": "this shouldn't be present - super() the base class is Object which doesn't have a special constructor to call.", "url": "https://github.com/eugenp/tutorials/pull/9272#discussion_r428259440", "createdAt": "2020-05-20T19:32:31Z", "author": {"login": "ashleyfrieze"}, "path": "jackson-modules/jackson-conversions/src/main/java/com/baeldung/jackson/date/EventWithLocalDate.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.baeldung.jackson.date;\n+\n+import com.fasterxml.jackson.annotation.JsonFormat;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;\n+import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;\n+\n+import java.time.LocalDate;\n+\n+\n+public class EventWithLocalDate {\n+    public String name;\n+\n+    @JsonDeserialize(using = LocalDateDeserializer.class)\n+    @JsonSerialize(using = LocalDateSerializer.class)\n+    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"dd-MM-yyyy\")\n+    public LocalDate eventDate;\n+\n+    public EventWithLocalDate() {\n+        super();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e1b768e6c50529cb0af250ca437b94a9f01cd9"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzE5ODkxOnYy", "diffSide": "RIGHT", "path": "jackson-modules/jackson-conversions/src/test/java/com/baeldung/jackson/date/JacksonDateUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTozNDoyNVrOGYa8fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTozNDoyNVrOGYa8fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI2MDQ3Ng==", "bodyText": "This is an odd way to test serialization: load it into an object and then do toString on that object. Can we not assert the fields of the LocalDate object? At a glance, this just looks like string processing, even though there's a date object in the middle.", "url": "https://github.com/eugenp/tutorials/pull/9272#discussion_r428260476", "createdAt": "2020-05-20T19:34:25Z", "author": {"login": "ashleyfrieze"}, "path": "jackson-modules/jackson-conversions/src/test/java/com/baeldung/jackson/date/JacksonDateUnitTest.java", "diffHunk": "@@ -161,6 +157,29 @@ public void whenSerializingJava8Date_thenCorrect() throws JsonProcessingExceptio\n         assertThat(result, containsString(\"2014-12-20T02:30\"));\n     }\n \n+    @Test\n+    public void whenSerializingJava8DateAndReadingValue_thenCorrect() throws IOException {\n+        final String stringDate = \"\\\"2014-12-20\\\"\";\n+\n+        final ObjectMapper mapper = new ObjectMapper();\n+        mapper.registerModule(new JavaTimeModule());\n+        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n+\n+        final String result2 = mapper.readValue(stringDate, LocalDate.class)\n+            .toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e1b768e6c50529cb0af250ca437b94a9f01cd9"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3957, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}