{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxOTE3MDQ1", "number": 8793, "title": "How to compare json objects using gson article", "bodyText": "Compare Two JSON Objects with Gson article", "createdAt": "2020-02-29T18:27:08Z", "url": "https://github.com/eugenp/tutorials/pull/8793", "merged": true, "mergeCommit": {"oid": "3371e954b841cd2fc089421b5fe9740862ddc207"}, "closed": true, "closedAt": "2020-03-11T17:59:02Z", "author": {"login": "omerfinger"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJIO8lAH2gAyMzgxOTE3MDQ1OjBlMzc4Zjk4NTRkZjJhNGUyMjhhOTViNDQyYmM4ZDhlMWQ2ZGQ1ODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLmWzegH2gAyMzgxOTE3MDQ1OjYwZGQyN2I1YjZlMDZkMjE5MTViZjg4ZTk1ODAyZjE2ZmY0MDA0ZDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0e378f9854df2a4e228a95b442bc8d8e1d6dd585", "author": {"user": {"login": "omerfinger", "name": null}}, "url": "https://github.com/eugenp/tutorials/commit/0e378f9854df2a4e228a95b442bc8d8e1d6dd585", "committedDate": "2020-02-29T17:46:58Z", "message": "How to compare json objects using gson article"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MjcyODU2", "url": "https://github.com/eugenp/tutorials/pull/8793#pullrequestreview-368272856", "createdAt": "2020-03-03T19:46:14Z", "commit": {"oid": "0e378f9854df2a4e228a95b442bc8d8e1d6dd585"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo0NjoxNVrOFxUCiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo0Nzo0MlrOFxUFlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1Mjg3Mg==", "bodyText": "Let's static import the assertions inside org.junit.Assert so we don't need to prefix them with Assert.", "url": "https://github.com/eugenp/tutorials/pull/8793#discussion_r387252872", "createdAt": "2020-03-03T19:46:15Z", "author": {"login": "ashleyfrieze"}, "path": "gson/src/test/java/com/baeldung/gson/jsoncompare/JsonCompareUnitTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package com.baeldung.gson.jsoncompare;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonParser;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class JsonCompareUnitTest {\n+    @Test\n+    public void givenIdenticalSimpleObjects_whenCompared_thenEqual() {\n+        JsonParser parser = new JsonParser();\n+        String string1 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\",\\\"fullName\\\": \\\"Emily Jenkins\\\", \\\"age\\\": 27 }}\";\n+        String string2 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\", \\\"fullName\\\": \\\"Emily Jenkins\\\",\\\"age\\\": 27}}\";\n+\n+        Assert.assertTrue(parser.parse(string1)\n+            .isJsonObject());\n+        Assert.assertEquals(parser.parse(string1), parser.parse(string2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e378f9854df2a4e228a95b442bc8d8e1d6dd585"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1MzY1Mg==", "bodyText": "I don't think we need to repeatedly assert isJsonObject in all the tests. After the first one, we've proved the point. Let's only have it for the first time it's demonstrated.", "url": "https://github.com/eugenp/tutorials/pull/8793#discussion_r387253652", "createdAt": "2020-03-03T19:47:42Z", "author": {"login": "ashleyfrieze"}, "path": "gson/src/test/java/com/baeldung/gson/jsoncompare/JsonCompareUnitTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package com.baeldung.gson.jsoncompare;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonParser;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class JsonCompareUnitTest {\n+    @Test\n+    public void givenIdenticalSimpleObjects_whenCompared_thenEqual() {\n+        JsonParser parser = new JsonParser();\n+        String string1 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\",\\\"fullName\\\": \\\"Emily Jenkins\\\", \\\"age\\\": 27 }}\";\n+        String string2 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\", \\\"fullName\\\": \\\"Emily Jenkins\\\",\\\"age\\\": 27}}\";\n+\n+        Assert.assertTrue(parser.parse(string1)\n+            .isJsonObject());\n+        Assert.assertEquals(parser.parse(string1), parser.parse(string2));\n+    }\n+\n+    @Test\n+    public void givenSameObjectsInDifferentOrder_whenCompared_thenEqual() {\n+        JsonParser parser = new JsonParser();\n+        String string1 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\",\\\"fullName\\\": \\\"Emily Jenkins\\\", \\\"age\\\": 27 }}\";\n+        String string2 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\",\\\"age\\\": 27, \\\"fullName\\\": \\\"Emily Jenkins\\\" }}\";\n+\n+        JsonElement json1 = parser.parse(string1);\n+        JsonElement json2 = parser.parse(string2);\n+\n+        Assert.assertTrue(json1.isJsonObject());\n+        Assert.assertEquals(json1, json2);\n+    }\n+\n+    @Test\n+    public void givenIdenticalArrays_whenCompared_thenEqual() {\n+        JsonParser parser = new JsonParser();\n+        String string1 = \"[10, 20, 30]\";\n+        String string2 = \"[10, 20, 30]\";\n+\n+        Assert.assertTrue(parser.parse(string1)\n+            .isJsonArray());\n+        Assert.assertEquals(parser.parse(string1), parser.parse(string2));\n+    }\n+\n+    @Test\n+    public void givenArraysInDifferentOrder_whenCompared_thenNotEqual() {\n+        JsonParser parser = new JsonParser();\n+        String string1 = \"[20, 10, 30]\";\n+        String string2 = \"[10, 20, 30]\";\n+\n+        Assert.assertTrue(parser.parse(string1)\n+            .isJsonArray());\n+        Assert.assertNotEquals(parser.parse(string1), parser.parse(string2));\n+    }\n+\n+    @Test\n+    public void givenIdenticalNestedObjects_whenCompared_thenEqual() {\n+        JsonParser parser = new JsonParser();\n+        String string1 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\",\\\"fullName\\\": \\\"Emily Jenkins\\\", \\\"age\\\": 27, \\\"consumption_info\\\" : {\\\"fav_product\\\": \\\"Coke\\\", \\\"last_buy\\\": \\\"2012-04-23\\\"}}}\";\n+        String string2 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\",\\\"fullName\\\": \\\"Emily Jenkins\\\", \\\"age\\\": 27, \\\"consumption_info\\\" : {\\\"last_buy\\\": \\\"2012-04-23\\\", \\\"fav_product\\\": \\\"Coke\\\"}}}\";\n+\n+        JsonElement json1 = parser.parse(string1);\n+        JsonElement json2 = parser.parse(string2);\n+\n+        Assert.assertTrue(json1.isJsonObject());\n+        Assert.assertEquals(json1, json2);\n+    }\n+\n+    @Test\n+    public void givenIdenticalNestedObjectsWithArray_whenCompared_thenEqual() {\n+        JsonParser parser = new JsonParser();\n+        String string1 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\",\\\"fullName\\\": \\\"Emily Jenkins\\\", \\\"age\\\": 27, \\\"consumption_info\\\" : {\\\"last_buy\\\": \\\"2012-04-23\\\", \\\"prouducts\\\": [\\\"banana\\\", \\\"eggs\\\"]}}}\";\n+        String string2 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\",\\\"fullName\\\": \\\"Emily Jenkins\\\", \\\"age\\\": 27, \\\"consumption_info\\\" : {\\\"last_buy\\\": \\\"2012-04-23\\\", \\\"prouducts\\\": [\\\"banana\\\", \\\"eggs\\\"]}}}\";\n+\n+        JsonElement json1 = parser.parse(string1);\n+        JsonElement json2 = parser.parse(string2);\n+\n+        Assert.assertTrue(json1.isJsonObject());\n+        Assert.assertEquals(json1, json2);\n+    }\n+\n+    @Test\n+    public void givenNestedObjectsDifferentArrayOrder_whenCompared_thenNotEqual() {\n+        JsonParser parser = new JsonParser();\n+        String string1 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\",\\\"fullName\\\": \\\"Emily Jenkins\\\", \\\"age\\\": 27, \\\"consumption_info\\\" : {\\\"last_buy\\\": \\\"2012-04-23\\\", \\\"prouducts\\\": [\\\"banana\\\", \\\"eggs\\\"]}}}\";\n+        String string2 = \"{\\\"customer\\\": {\\\"id\\\": \\\"44521\\\",\\\"fullName\\\": \\\"Emily Jenkins\\\", \\\"age\\\": 27, \\\"consumption_info\\\" : {\\\"last_buy\\\": \\\"2012-04-23\\\", \\\"prouducts\\\": [\\\"eggs\\\", \\\"banana\\\"]}}}\";\n+\n+        JsonElement json1 = parser.parse(string1);\n+        JsonElement json2 = parser.parse(string2);\n+\n+        Assert.assertTrue(json1.isJsonObject());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e378f9854df2a4e228a95b442bc8d8e1d6dd585"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "922f1411800177a9394372e9019c32d7b7165181", "author": {"user": {"login": "omerfinger", "name": null}}, "url": "https://github.com/eugenp/tutorials/commit/922f1411800177a9394372e9019c32d7b7165181", "committedDate": "2020-03-03T20:04:57Z", "message": "static Assert import\nIsObject assert has been deleted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60dd27b5b6e06d21915bf88e95802f16ff4004d8", "author": {"user": {"login": "omerfinger", "name": null}}, "url": "https://github.com/eugenp/tutorials/commit/60dd27b5b6e06d21915bf88e95802f16ff4004d8", "committedDate": "2020-03-08T10:00:33Z", "message": "compare strings test failure example"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4172, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}