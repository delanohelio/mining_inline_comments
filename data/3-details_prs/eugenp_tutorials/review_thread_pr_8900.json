{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5Nzc1NTEw", "number": 8900, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDo1OToyNVrODo4tOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNDo1MDo1MVrODusnZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTk4NzE1OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-streams-3/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDo1OToyNVrOF3t1aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDo1OToyNVrOF3t1aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2Njk1NQ==", "bodyText": "We generally don't add this at this stage - it's for adding after publishing. Please remove.", "url": "https://github.com/eugenp/tutorials/pull/8900#discussion_r393966955", "createdAt": "2020-03-17T20:59:25Z", "author": {"login": "ashleyfrieze"}, "path": "core-java-modules/core-java-streams-3/README.md", "diffHunk": "@@ -9,4 +9,5 @@ This module contains articles about the Stream API in Java.\n - [Guide to Java 8\u2019s Collectors](https://www.baeldung.com/java-8-collectors)\n - [Primitive Type Streams in Java 8](https://www.baeldung.com/java-8-primitive-streams)\n - [Debugging Java 8 Streams with IntelliJ](https://www.baeldung.com/intellij-debugging-java-streams)\n+- [Add BigDecimals using the Stream API](https://www.baeldung.com/add-bigdecimals-using-the-stream-api/)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82ac45e654e62794e4acec8097ba81d469c1d902"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTk5MDg1OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-streams-3/src/main/java/com/baeldung/streams/bigdecimals/StreamAddNumbers.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTowMDozMFrOF3t3uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDozODo0NVrOF4owYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2NzU0NQ==", "bodyText": "Illustrating these functions with unit tests would be preferable. This means you probably don't want to use Random. But you can add up the numbers 0, 1 & 2 from IntStream.range", "url": "https://github.com/eugenp/tutorials/pull/8900#discussion_r393967545", "createdAt": "2020-03-17T21:00:30Z", "author": {"login": "ashleyfrieze"}, "path": "core-java-modules/core-java-streams-3/src/main/java/com/baeldung/streams/bigdecimals/StreamAddNumbers.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package com.baeldung.streams.bigdecimals;\n+\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Random;\n+import java.util.stream.IntStream;\n+\n+public class StreamAddNumbers {\n+\n+    public int addInts() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82ac45e654e62794e4acec8097ba81d469c1d902"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkzMjMyMQ==", "bodyText": "I moved the code to a unit test class", "url": "https://github.com/eugenp/tutorials/pull/8900#discussion_r394932321", "createdAt": "2020-03-19T10:38:45Z", "author": {"login": "fabripautasso"}, "path": "core-java-modules/core-java-streams-3/src/main/java/com/baeldung/streams/bigdecimals/StreamAddNumbers.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package com.baeldung.streams.bigdecimals;\n+\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Random;\n+import java.util.stream.IntStream;\n+\n+public class StreamAddNumbers {\n+\n+    public int addInts() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2NzU0NQ=="}, "originalCommit": {"oid": "82ac45e654e62794e4acec8097ba81d469c1d902"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTk5Mzk5OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-streams-3/src/main/java/com/baeldung/streams/bigdecimals/StreamAddNumbers.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTowMToxOVrOF3t5tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDozOTowMlrOF4ow-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2ODA1NA==", "bodyText": "Use Stream.of rather than asList().stream()", "url": "https://github.com/eugenp/tutorials/pull/8900#discussion_r393968054", "createdAt": "2020-03-17T21:01:19Z", "author": {"login": "ashleyfrieze"}, "path": "core-java-modules/core-java-streams-3/src/main/java/com/baeldung/streams/bigdecimals/StreamAddNumbers.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package com.baeldung.streams.bigdecimals;\n+\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Random;\n+import java.util.stream.IntStream;\n+\n+public class StreamAddNumbers {\n+\n+    public int addInts() {\n+        IntStream intNumbers = new Random().ints(5, 1, 100);\n+        return intNumbers.sum();\n+    }\n+\n+    public double addDoubleOnList() {\n+        List<Double> doubleNumbers = Arrays.asList(23.48, 52.26, 13.5);\n+        return doubleNumbers.stream()\n+            .mapToDouble(Double::doubleValue)\n+            .sum();\n+    }\n+\n+    public int addNumbersWithReduce() {\n+        List<Integer> intNumbers = Arrays.asList(5, 1, 100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82ac45e654e62794e4acec8097ba81d469c1d902"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkzMjQ3Mg==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/8900#discussion_r394932472", "createdAt": "2020-03-19T10:39:02Z", "author": {"login": "fabripautasso"}, "path": "core-java-modules/core-java-streams-3/src/main/java/com/baeldung/streams/bigdecimals/StreamAddNumbers.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package com.baeldung.streams.bigdecimals;\n+\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Random;\n+import java.util.stream.IntStream;\n+\n+public class StreamAddNumbers {\n+\n+    public int addInts() {\n+        IntStream intNumbers = new Random().ints(5, 1, 100);\n+        return intNumbers.sum();\n+    }\n+\n+    public double addDoubleOnList() {\n+        List<Double> doubleNumbers = Arrays.asList(23.48, 52.26, 13.5);\n+        return doubleNumbers.stream()\n+            .mapToDouble(Double::doubleValue)\n+            .sum();\n+    }\n+\n+    public int addNumbersWithReduce() {\n+        List<Integer> intNumbers = Arrays.asList(5, 1, 100);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2ODA1NA=="}, "originalCommit": {"oid": "82ac45e654e62794e4acec8097ba81d469c1d902"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjkyMDcxOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-streams-3/src/test/java/com/baeldung/streams/bigdecimals/AddNumbersUnitTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNDo1MDo1MVrOGAyYXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNTo0NTo1MlrOGAyulw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3ODYyMQ==", "bodyText": "Note: I've renamed this method - the then doesn't describe what the test does, it describes the required outcome.", "url": "https://github.com/eugenp/tutorials/pull/8900#discussion_r403478621", "createdAt": "2020-04-04T14:50:51Z", "author": {"login": "ashleyfrieze"}, "path": "core-java-modules/core-java-streams-3/src/test/java/com/baeldung/streams/bigdecimals/AddNumbersUnitTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.baeldung.streams.bigdecimals;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+\n+import org.junit.Test;\n+\n+public class AddNumbersUnitTest {\n+\n+    @Test\n+    public void givenIntStream_whenSum_thenResultIsCorrect() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52b4a164f88d7fd26c9f8d78b50d7eb645010869"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4NDMxMQ==", "bodyText": "Sounds good, thanks", "url": "https://github.com/eugenp/tutorials/pull/8900#discussion_r403484311", "createdAt": "2020-04-04T15:45:52Z", "author": {"login": "fabripautasso"}, "path": "core-java-modules/core-java-streams-3/src/test/java/com/baeldung/streams/bigdecimals/AddNumbersUnitTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.baeldung.streams.bigdecimals;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+\n+import org.junit.Test;\n+\n+public class AddNumbersUnitTest {\n+\n+    @Test\n+    public void givenIntStream_whenSum_thenResultIsCorrect() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3ODYyMQ=="}, "originalCommit": {"oid": "52b4a164f88d7fd26c9f8d78b50d7eb645010869"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4042, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}