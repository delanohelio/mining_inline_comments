{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MTY4NzAy", "number": 8588, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDozOToyNVrODbGaqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDo0NTo1MFrODbGc1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzQzMjc1OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsPair.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDozOToyNVrOFiZH5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDo0ODozNlrOFiz9uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYwNzUyNQ==", "bodyText": "When continuing a line, we use a two space indent", "url": "https://github.com/eugenp/tutorials/pull/8588#discussion_r371607525", "createdAt": "2020-01-28T04:39:25Z", "author": {"login": "eric-martin"}, "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsPair.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.baeldung.methodmultiplereturnvalues;\n+\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+class MultipleReturnValuesUsingApacheCommonsPair {\n+\n+    static ImmutablePair<Coordinates, Double> getMostDistantPoint(\n+        List<Coordinates> coordinatesList,\n+        Coordinates target) {\n+        return coordinatesList.stream()\n+                              .map(coordinates -> ImmutablePair.of(coordinates, coordinates.calculateDistance(target)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f610104f4212ac7cad1b90ad452af55c229781"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg5MTA5NQ==", "bodyText": "fixed all continuation indents, such as long method signatures.\nIt seems that my IDE (intellij) dosn't think the fluent function calls starting with dot as continuations. Should I make them have indent 2 anyway? (Personally I think the current format is easier to read)", "url": "https://github.com/eugenp/tutorials/pull/8588#discussion_r371891095", "createdAt": "2020-01-28T15:55:17Z", "author": {"login": "sk1418"}, "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsPair.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.baeldung.methodmultiplereturnvalues;\n+\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+class MultipleReturnValuesUsingApacheCommonsPair {\n+\n+    static ImmutablePair<Coordinates, Double> getMostDistantPoint(\n+        List<Coordinates> coordinatesList,\n+        Coordinates target) {\n+        return coordinatesList.stream()\n+                              .map(coordinates -> ImmutablePair.of(coordinates, coordinates.calculateDistance(target)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYwNzUyNQ=="}, "originalCommit": {"oid": "37f610104f4212ac7cad1b90ad452af55c229781"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAzOTg4OA==", "bodyText": "Yes ... two space indentation for line continuations. If we don't fix it now, we will have to fix it later :)", "url": "https://github.com/eugenp/tutorials/pull/8588#discussion_r372039888", "createdAt": "2020-01-28T20:31:33Z", "author": {"login": "eric-martin"}, "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsPair.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.baeldung.methodmultiplereturnvalues;\n+\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+class MultipleReturnValuesUsingApacheCommonsPair {\n+\n+    static ImmutablePair<Coordinates, Double> getMostDistantPoint(\n+        List<Coordinates> coordinatesList,\n+        Coordinates target) {\n+        return coordinatesList.stream()\n+                              .map(coordinates -> ImmutablePair.of(coordinates, coordinates.calculateDistance(target)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYwNzUyNQ=="}, "originalCommit": {"oid": "37f610104f4212ac7cad1b90ad452af55c229781"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA0NzI4OA==", "bodyText": "Ok. thanks.\nI fixed the indentation.", "url": "https://github.com/eugenp/tutorials/pull/8588#discussion_r372047288", "createdAt": "2020-01-28T20:48:36Z", "author": {"login": "sk1418"}, "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsPair.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.baeldung.methodmultiplereturnvalues;\n+\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+class MultipleReturnValuesUsingApacheCommonsPair {\n+\n+    static ImmutablePair<Coordinates, Double> getMostDistantPoint(\n+        List<Coordinates> coordinatesList,\n+        Coordinates target) {\n+        return coordinatesList.stream()\n+                              .map(coordinates -> ImmutablePair.of(coordinates, coordinates.calculateDistance(target)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYwNzUyNQ=="}, "originalCommit": {"oid": "37f610104f4212ac7cad1b90ad452af55c229781"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzQzMjkyOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsTriple.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDozOTozOFrOFiZIBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDozOTozOFrOFiZIBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYwNzU1Nw==", "bodyText": "Same here", "url": "https://github.com/eugenp/tutorials/pull/8588#discussion_r371607557", "createdAt": "2020-01-28T04:39:38Z", "author": {"login": "eric-martin"}, "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsTriple.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.baeldung.methodmultiplereturnvalues;\n+\n+import org.apache.commons.lang3.tuple.ImmutableTriple;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+class MultipleReturnValuesUsingApacheCommonsTriple {\n+\n+    static ImmutableTriple<Double, Double, Double> getMinAvgMaxTriple(\n+        List<Coordinates> coordinatesList,\n+        Coordinates target) {\n+\n+        List<Double> distanceList = coordinatesList.stream()\n+                                                   .map(coordinates -> coordinates.calculateDistance(target))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f610104f4212ac7cad1b90ad452af55c229781"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzQzODA1OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsTriple.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDo0NToyOFrOFiZLRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDo0NToyOFrOFiZLRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYwODM5MQ==", "bodyText": "two space indent here also", "url": "https://github.com/eugenp/tutorials/pull/8588#discussion_r371608391", "createdAt": "2020-01-28T04:45:28Z", "author": {"login": "eric-martin"}, "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsTriple.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.baeldung.methodmultiplereturnvalues;\n+\n+import org.apache.commons.lang3.tuple.ImmutableTriple;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+class MultipleReturnValuesUsingApacheCommonsTriple {\n+\n+    static ImmutableTriple<Double, Double, Double> getMinAvgMaxTriple(\n+        List<Coordinates> coordinatesList,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f610104f4212ac7cad1b90ad452af55c229781"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzQzODMxOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsPair.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDo0NTo1MFrOFiZLew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNDo0NTo1MFrOFiZLew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYwODQ0Mw==", "bodyText": "two space indent", "url": "https://github.com/eugenp/tutorials/pull/8588#discussion_r371608443", "createdAt": "2020-01-28T04:45:50Z", "author": {"login": "eric-martin"}, "path": "core-java-modules/core-java-lang-2/src/main/java/com/baeldung/methodmultiplereturnvalues/MultipleReturnValuesUsingApacheCommonsPair.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.baeldung.methodmultiplereturnvalues;\n+\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+class MultipleReturnValuesUsingApacheCommonsPair {\n+\n+    static ImmutablePair<Coordinates, Double> getMostDistantPoint(\n+        List<Coordinates> coordinatesList,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f610104f4212ac7cad1b90ad452af55c229781"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4424, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}