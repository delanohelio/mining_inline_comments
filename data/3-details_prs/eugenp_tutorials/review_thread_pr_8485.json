{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMTE5ODUz", "number": 8485, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDoyODowMlrODXa0MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwMDowOTowMFrODZBOTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODgzMTg0OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-reflection/src/main/java/com/baeldung/reflection/exception/invocationtarget/InvocationTargetDemo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDoyODowMlrOFctKUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDoyODowMlrOFctKUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0NDM3MA==", "bodyText": "remove blank line", "url": "https://github.com/eugenp/tutorials/pull/8485#discussion_r365644370", "createdAt": "2020-01-13T04:28:02Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-reflection/src/main/java/com/baeldung/reflection/exception/invocationtarget/InvocationTargetDemo.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.baeldung.reflection.exception.invocationtarget;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+public class InvocationTargetDemo {\n+    public static void main(String[] args) throws Throwable {\n+\n+        try {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5259814b16d4e0fa33069e5a77af34dd6b9ac17f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODgzMjAwOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-reflection/src/main/java/com/baeldung/reflection/exception/invocationtarget/InvocationTargetDemo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDoyODoxMVrOFctKaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDoyODoxMVrOFctKaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0NDM5Mg==", "bodyText": "remove blank line", "url": "https://github.com/eugenp/tutorials/pull/8485#discussion_r365644392", "createdAt": "2020-01-13T04:28:11Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-reflection/src/main/java/com/baeldung/reflection/exception/invocationtarget/InvocationTargetDemo.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.baeldung.reflection.exception.invocationtarget;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+public class InvocationTargetDemo {\n+    public static void main(String[] args) throws Throwable {\n+\n+        try {\n+\n+            InvocationTargetExample targetExample = new InvocationTargetExample();\n+            Method method = InvocationTargetExample.class.getMethod(\"divideByZeroExample\");\n+            method.invoke(targetExample);\n+        } catch (InvocationTargetException e) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5259814b16d4e0fa33069e5a77af34dd6b9ac17f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTYxMDA5OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-reflection/src/test/java/com/baeldung/reflection/exception/invocationtarget/InvocationTargetUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwMDowODoxNVrOFfMjcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwMDowODoxNVrOFfMjcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NTg1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void whenCallingMethodThrowsException_thenAssertTrue() throws Exception {\n          \n          \n            \n                public void whenCallingMethodThrowsException_thenAssertCauseOfInvocationTargetException() throws Exception {", "url": "https://github.com/eugenp/tutorials/pull/8485#discussion_r368255857", "createdAt": "2020-01-19T00:08:15Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-reflection/src/test/java/com/baeldung/reflection/exception/invocationtarget/InvocationTargetUnitTest.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.baeldung.reflection.exception.invocationtarget;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+import org.junit.jupiter.api.Test;\n+\n+public class InvocationTargetUnitTest {\n+\n+    @Test\n+    public void whenCallingMethodThrowsException_thenAssertTrue() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e19c356bf97fefea8be76e414fe01f68b56ea9e0"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTYxMDM4OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-reflection/src/test/java/com/baeldung/reflection/exception/invocationtarget/InvocationTargetUnitTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwMDowOTowMFrOFfMjkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwODo1OTowOFrOFfN2KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NTg5MA==", "bodyText": "add a blank line before and after this line (given, when, then)", "url": "https://github.com/eugenp/tutorials/pull/8485#discussion_r368255890", "createdAt": "2020-01-19T00:09:00Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-reflection/src/test/java/com/baeldung/reflection/exception/invocationtarget/InvocationTargetUnitTest.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.baeldung.reflection.exception.invocationtarget;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+import org.junit.jupiter.api.Test;\n+\n+public class InvocationTargetUnitTest {\n+\n+    @Test\n+    public void whenCallingMethodThrowsException_thenAssertTrue() throws Exception {\n+        InvocationTargetExample targetExample = new InvocationTargetExample();\n+        Method method = InvocationTargetExample.class.getMethod(\"divideByZeroExample\");\n+        Exception exception = assertThrows(InvocationTargetException.class, () -> method.invoke(targetExample));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e19c356bf97fefea8be76e414fe01f68b56ea9e0"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI3Njk1NA==", "bodyText": "I've added the blank lines before when and then", "url": "https://github.com/eugenp/tutorials/pull/8485#discussion_r368276954", "createdAt": "2020-01-19T08:58:06Z", "author": {"login": "vikasrajput6035"}, "path": "core-java-modules/core-java-reflection/src/test/java/com/baeldung/reflection/exception/invocationtarget/InvocationTargetUnitTest.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.baeldung.reflection.exception.invocationtarget;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+import org.junit.jupiter.api.Test;\n+\n+public class InvocationTargetUnitTest {\n+\n+    @Test\n+    public void whenCallingMethodThrowsException_thenAssertTrue() throws Exception {\n+        InvocationTargetExample targetExample = new InvocationTargetExample();\n+        Method method = InvocationTargetExample.class.getMethod(\"divideByZeroExample\");\n+        Exception exception = assertThrows(InvocationTargetException.class, () -> method.invoke(targetExample));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NTg5MA=="}, "originalCommit": {"oid": "e19c356bf97fefea8be76e414fe01f68b56ea9e0"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI3NzAzMw==", "bodyText": "I've added two blank lines because here i am asserting InvocationTargetException and its cause", "url": "https://github.com/eugenp/tutorials/pull/8485#discussion_r368277033", "createdAt": "2020-01-19T08:59:08Z", "author": {"login": "vikasrajput6035"}, "path": "core-java-modules/core-java-reflection/src/test/java/com/baeldung/reflection/exception/invocationtarget/InvocationTargetUnitTest.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.baeldung.reflection.exception.invocationtarget;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+import org.junit.jupiter.api.Test;\n+\n+public class InvocationTargetUnitTest {\n+\n+    @Test\n+    public void whenCallingMethodThrowsException_thenAssertTrue() throws Exception {\n+        InvocationTargetExample targetExample = new InvocationTargetExample();\n+        Method method = InvocationTargetExample.class.getMethod(\"divideByZeroExample\");\n+        Exception exception = assertThrows(InvocationTargetException.class, () -> method.invoke(targetExample));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NTg5MA=="}, "originalCommit": {"oid": "e19c356bf97fefea8be76e414fe01f68b56ea9e0"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4441, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}