{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NTAzNzg2", "number": 9754, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTowNjoxMFrOERZwhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyNTo1M1rOEReWRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjgzMjY5OnYy", "diffSide": "RIGHT", "path": "deeplearning4j/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTowNjoxMFrOG2F2YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTowNjoxMFrOG2F2YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3MjEyOQ==", "bodyText": "create vars for the versions", "url": "https://github.com/eugenp/tutorials/pull/9754#discussion_r459372129", "createdAt": "2020-07-23T11:06:10Z", "author": {"login": "rpvilao"}, "path": "deeplearning4j/pom.xml", "diffHunk": "@@ -37,6 +37,16 @@\n             <artifactId>deeplearning4j-nn</artifactId>\n             <version>${dl4j.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-api</artifactId>\n+            <version>1.7.5</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1cab0051109d09cf1869c2869675a42c3cbac0"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjgzNTc0OnYy", "diffSide": "RIGHT", "path": "deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnExample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTowNzoxNVrOG2F4SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTowNzoxNVrOG2F4SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3MjYxNw==", "bodyText": "Could we move all the classes to a single package and make them all package protected?", "url": "https://github.com/eugenp/tutorials/pull/9754#discussion_r459372617", "createdAt": "2020-07-23T11:07:15Z", "author": {"login": "rpvilao"}, "path": "deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnExample.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.baeldung.deeplearning4j.cnn;\n+\n+\n+import com.baeldung.deeplearning4j.cnn.domain.network.CnnModel;\n+import com.baeldung.deeplearning4j.cnn.domain.network.CnnModelProperties;\n+import com.baeldung.deeplearning4j.cnn.service.dataset.CifarDataSetService;\n+import lombok.extern.slf4j.Slf4j;\n+import org.deeplearning4j.eval.Evaluation;\n+\n+@Slf4j\n+public class CnnExample {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1cab0051109d09cf1869c2869675a42c3cbac0"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjgzOTQ0OnYy", "diffSide": "RIGHT", "path": "deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTowODozNVrOG2F6rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTowODozNVrOG2F6rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3MzIzMQ==", "bodyText": "you could use the logging placeholders here (\"{}?{}\", a, b)", "url": "https://github.com/eugenp/tutorials/pull/9754#discussion_r459373231", "createdAt": "2020-07-23T11:08:35Z", "author": {"login": "rpvilao"}, "path": "deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package com.baeldung.deeplearning4j.cnn.domain.network;\n+\n+import com.baeldung.deeplearning4j.cnn.service.dataset.IDataSetService;\n+import lombok.extern.slf4j.Slf4j;\n+import org.deeplearning4j.eval.Evaluation;\n+import org.deeplearning4j.nn.api.OptimizationAlgorithm;\n+import org.deeplearning4j.nn.conf.MultiLayerConfiguration;\n+import org.deeplearning4j.nn.conf.NeuralNetConfiguration;\n+import org.deeplearning4j.nn.conf.layers.ConvolutionLayer;\n+import org.deeplearning4j.nn.conf.layers.OutputLayer;\n+import org.deeplearning4j.nn.conf.layers.SubsamplingLayer;\n+import org.deeplearning4j.nn.multilayer.MultiLayerNetwork;\n+import org.deeplearning4j.nn.weights.WeightInit;\n+import org.nd4j.linalg.activations.Activation;\n+import org.nd4j.linalg.lossfunctions.LossFunctions;\n+\n+import java.util.stream.IntStream;\n+\n+@Slf4j\n+public class CnnModel {\n+\n+    private final IDataSetService dataSetService;\n+\n+    private MultiLayerNetwork network;\n+\n+    private final CnnModelProperties properties;\n+\n+    public CnnModel(IDataSetService dataSetService, CnnModelProperties properties) {\n+\n+        this.dataSetService = dataSetService;\n+        this.properties = properties;\n+\n+        MultiLayerConfiguration configuration = new NeuralNetConfiguration.Builder()\n+                .seed(1611)\n+                .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)\n+                .learningRate(properties.getLearningRate())\n+                .regularization(true)\n+                .updater(properties.getOptimizer())\n+                .list()\n+                .layer(0, conv5x5())\n+                .layer(1, pooling2x2Stride2())\n+                .layer(2, conv3x3Stride1Padding2())\n+                .layer(3, pooling2x2Stride1())\n+                .layer(4, conv3x3Stride1Padding1())\n+                .layer(5, pooling2x2Stride1())\n+                .layer(6, dense())\n+                .pretrain(false)\n+                .backprop(true)\n+                .setInputType(dataSetService.inputType())\n+                .build();\n+\n+        network = new MultiLayerNetwork(configuration);\n+    }\n+\n+    public void train() {\n+        network.init();\n+        int epochsNum = properties.getEpochsNum();\n+        IntStream.range(1, epochsNum + 1).forEach(epoch -> {\n+            log.info(String.format(\"Epoch %d?%d\", epoch, epochsNum));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1cab0051109d09cf1869c2869675a42c3cbac0"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Njg0MDM4OnYy", "diffSide": "RIGHT", "path": "deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTowOTowMFrOG2F7Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTowOTowMFrOG2F7Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3MzM5OQ==", "bodyText": "this could be final as well right?", "url": "https://github.com/eugenp/tutorials/pull/9754#discussion_r459373399", "createdAt": "2020-07-23T11:09:00Z", "author": {"login": "rpvilao"}, "path": "deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package com.baeldung.deeplearning4j.cnn.domain.network;\n+\n+import com.baeldung.deeplearning4j.cnn.service.dataset.IDataSetService;\n+import lombok.extern.slf4j.Slf4j;\n+import org.deeplearning4j.eval.Evaluation;\n+import org.deeplearning4j.nn.api.OptimizationAlgorithm;\n+import org.deeplearning4j.nn.conf.MultiLayerConfiguration;\n+import org.deeplearning4j.nn.conf.NeuralNetConfiguration;\n+import org.deeplearning4j.nn.conf.layers.ConvolutionLayer;\n+import org.deeplearning4j.nn.conf.layers.OutputLayer;\n+import org.deeplearning4j.nn.conf.layers.SubsamplingLayer;\n+import org.deeplearning4j.nn.multilayer.MultiLayerNetwork;\n+import org.deeplearning4j.nn.weights.WeightInit;\n+import org.nd4j.linalg.activations.Activation;\n+import org.nd4j.linalg.lossfunctions.LossFunctions;\n+\n+import java.util.stream.IntStream;\n+\n+@Slf4j\n+public class CnnModel {\n+\n+    private final IDataSetService dataSetService;\n+\n+    private MultiLayerNetwork network;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1cab0051109d09cf1869c2869675a42c3cbac0"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzU4NDY4OnYy", "diffSide": "RIGHT", "path": "deeplearning4j/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyNTo1M1rOG2ND1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyNTo1M1rOG2ND1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ5MDI2Mw==", "bodyText": "slf (missing f)", "url": "https://github.com/eugenp/tutorials/pull/9754#discussion_r459490263", "createdAt": "2020-07-23T14:25:53Z", "author": {"login": "rpvilao"}, "path": "deeplearning4j/pom.xml", "diffHunk": "@@ -37,6 +37,16 @@\n             <artifactId>deeplearning4j-nn</artifactId>\n             <version>${dl4j.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-api</artifactId>\n+            <version>${sl4j.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeff326731a412df67b15ed6a65055c29d0d45eb"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4279, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}