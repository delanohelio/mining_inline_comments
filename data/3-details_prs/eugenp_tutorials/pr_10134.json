{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NDUwNzg3", "number": 10134, "title": "[BAEL-4173] Set JWT token with Spring Boot & Swagger UI", "bodyText": "", "createdAt": "2020-10-06T10:58:39Z", "url": "https://github.com/eugenp/tutorials/pull/10134", "merged": true, "mergeCommit": {"oid": "eefcf18757bd975905ee479f75d2d123e5bc8ab0"}, "closed": true, "closedAt": "2020-10-27T02:12:51Z", "author": {"login": "saleco"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLxZUGAH2gAyNDk4NDUwNzg3OjQxMmI4NjkwMDNlMmJkMDRhNGIzNzk0OWFlOTIzYzc1ODI5NGQzZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWfUOXgFqTUxNzI5OTM5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "412b869003e2bd04a4b37949ae923c758294d3e7", "author": {"user": {"login": "saleco", "name": "Sallo Szrajbman"}}, "url": "https://github.com/eugenp/tutorials/commit/412b869003e2bd04a4b37949ae923c758294d3e7", "committedDate": "2020-09-23T19:03:24Z", "message": "Hexagonal Architecture with Spring Boot example"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc9b4fe949d2b3e9fbbdbf0c890ff2d45a262020", "author": {"user": {"login": "saleco", "name": "Sallo Szrajbman"}}, "url": "https://github.com/eugenp/tutorials/commit/fc9b4fe949d2b3e9fbbdbf0c890ff2d45a262020", "committedDate": "2020-10-03T13:03:32Z", "message": "Set JWT token with Spring Boot & Swagger UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7", "author": {"user": {"login": "saleco", "name": "Sallo Szrajbman"}}, "url": "https://github.com/eugenp/tutorials/commit/7293432571e9863b269c9cc8babb0efa6257a3c7", "committedDate": "2020-10-06T10:57:44Z", "message": "Revert \"Hexagonal Architecture with Spring Boot example\"\n\nThis reverts commit 412b8690"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTAzNzMz", "url": "https://github.com/eugenp/tutorials/pull/10134#pullrequestreview-506103733", "createdAt": "2020-10-10T15:00:47Z", "commit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNTowMDo0N1rOHfgcLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxODozMzozMFrOHfhnzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5OTQwNQ==", "bodyText": "You can actually just leave this line out -- I'll add it back once the title and URL are finalized -- that is, when we publish.", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502799405", "createdAt": "2020-10-10T15:00:47Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/README.md", "diffHunk": "@@ -0,0 +1,3 @@\n+## Relevant Articles:\n+\n+- [Set JWT token with Spring Boot & Swagger UI](https://www.baeldung.com/set-jwt-token-with-spring-boot-swagger-ui/)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5OTU3Mg==", "bodyText": "indent only two spaces from the previous line", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502799572", "createdAt": "2020-10-10T15:02:45Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.baeldung.swaggerjwt.configuration;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.*;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spi.service.contexts.SecurityContext;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    public static final String AUTHORIZATION_HEADER = \"Authorization\";\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\", \"Some custom description of API.\", \"1.0\", \"Terms of service\",\n+          new Contact(\"Sallo Szrajbman\", \"www.baeldung.com\", \"salloszraj@gmail.com\"),\n+          \"License of API\", \"API license URL\", Collections.emptyList());\n+    }\n+\n+    @Bean\n+    public Docket api() {\n+        return new Docket(DocumentationType.SWAGGER_2)\n+          .apiInfo(apiInfo())\n+          .securityContexts(Arrays.asList(securityContext()))\n+          .securitySchemes(Arrays.asList(apiKey()))\n+          .select()\n+          .apis(RequestHandlerSelectors.any())\n+          .paths(PathSelectors.any())\n+\n+          .build();\n+    }\n+\n+    private ApiKey apiKey() {\n+        return new ApiKey(\"JWT\", AUTHORIZATION_HEADER, \"header\");\n+    }\n+\n+    private SecurityContext securityContext() {\n+        return SecurityContext.builder()\n+                .securityReferences(defaultAuth())\n+                .build();\n+    }\n+\n+    List<SecurityReference> defaultAuth() {\n+        AuthorizationScope authorizationScope\n+                = new AuthorizationScope(\"global\", \"accessEverything\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5OTYxNg==", "bodyText": "remove empty line", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502799616", "createdAt": "2020-10-10T15:03:25Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.baeldung.swaggerjwt.configuration;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.*;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spi.service.contexts.SecurityContext;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    public static final String AUTHORIZATION_HEADER = \"Authorization\";\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\", \"Some custom description of API.\", \"1.0\", \"Terms of service\",\n+          new Contact(\"Sallo Szrajbman\", \"www.baeldung.com\", \"salloszraj@gmail.com\"),\n+          \"License of API\", \"API license URL\", Collections.emptyList());\n+    }\n+\n+    @Bean\n+    public Docket api() {\n+        return new Docket(DocumentationType.SWAGGER_2)\n+          .apiInfo(apiInfo())\n+          .securityContexts(Arrays.asList(securityContext()))\n+          .securitySchemes(Arrays.asList(apiKey()))\n+          .select()\n+          .apis(RequestHandlerSelectors.any())\n+          .paths(PathSelectors.any())\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgwMTE3NQ==", "bodyText": "For better readability, and as per guidelines, when all the parameters don't fit on one line (of reasonable length), put each parameter on a separate line, using two spaces to indent.", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502801175", "createdAt": "2020-10-10T15:20:15Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.baeldung.swaggerjwt.configuration;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.*;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spi.service.contexts.SecurityContext;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    public static final String AUTHORIZATION_HEADER = \"Authorization\";\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\", \"Some custom description of API.\", \"1.0\", \"Terms of service\",\n+          new Contact(\"Sallo Szrajbman\", \"www.baeldung.com\", \"salloszraj@gmail.com\"),\n+          \"License of API\", \"API license URL\", Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODc2NQ==", "bodyText": "Let's avoid the println.", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502818765", "createdAt": "2020-10-10T18:33:30Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/controller/ClientsRestController.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.baeldung.swaggerjwt.controller;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import com.baeldung.swaggerjwt.configuration.SwaggerConfiguration;\n+import io.swagger.annotations.Api;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import io.swagger.annotations.ApiOperation;\n+\n+@RestController(value = \"/clients\")\n+@Api( tags = \"Clients\")\n+public class ClientsRestController {\n+\n+    @ApiOperation(value = \"This method is used to get the clients.\")\n+    @GetMapping\n+    public List<String> getClients(@RequestHeader HttpHeaders httpHeaders) {\n+        System.out.println(\"JWT TOKEN: \" + httpHeaders.getFirst(SwaggerConfiguration.AUTHORIZATION_HEADER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9316043896407ecbc749beca6420b49351e7b0f4", "author": {"user": {"login": "saleco", "name": "Sallo Szrajbman"}}, "url": "https://github.com/eugenp/tutorials/commit/9316043896407ecbc749beca6420b49351e7b0f4", "committedDate": "2020-10-10T19:13:04Z", "message": "[BEAL-4173]\nCode identation fixes\nREADME.md fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8975def8cd604dda0e3a92d03f74428236e6ac1", "author": {"user": {"login": "saleco", "name": "Sallo Szrajbman"}}, "url": "https://github.com/eugenp/tutorials/commit/d8975def8cd604dda0e3a92d03f74428236e6ac1", "committedDate": "2020-10-10T19:17:08Z", "message": "[BEAL-4173]\nRemoving sout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTYzODY0", "url": "https://github.com/eugenp/tutorials/pull/10134#pullrequestreview-507963864", "createdAt": "2020-10-14T03:11:49Z", "commit": {"oid": "d8975def8cd604dda0e3a92d03f74428236e6ac1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxMTo0OVrOHhAkUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxMTo0OVrOHhAkUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NDM1Mg==", "bodyText": "The new Contact(...) can still be on one line; it's just the lengthy list of parameters passed to the ApiInfo constructor that won't fit on one line and need to be broken up.", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r504374352", "createdAt": "2020-10-14T03:11:49Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.baeldung.swaggerjwt.configuration;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.*;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spi.service.contexts.SecurityContext;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    public static final String AUTHORIZATION_HEADER = \"Authorization\";\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\",\n+\t\t  \"Some custom description of API.\",\n+\t\t  \"1.0\",\n+\t\t  \"Terms of service\",\n+\t\t  new Contact(\"Sallo Szrajbman\",\n+\t\t    \"www.baeldung.com\",\n+\t\t    \"salloszraj@gmail.com\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8975def8cd604dda0e3a92d03f74428236e6ac1"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "329444386732b488b9f7f13c7c47da989f659299", "author": {"user": {"login": "saleco", "name": "Sallo Szrajbman"}}, "url": "https://github.com/eugenp/tutorials/commit/329444386732b488b9f7f13c7c47da989f659299", "committedDate": "2020-10-14T10:00:13Z", "message": "[BEAL-4173]\nFixing identation issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMzgyMjI1", "url": "https://github.com/eugenp/tutorials/pull/10134#pullrequestreview-511382225", "createdAt": "2020-10-19T02:57:05Z", "commit": {"oid": "329444386732b488b9f7f13c7c47da989f659299"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7588a1409766f6038aba706490ecc3193b369daf", "author": {"user": {"login": "saleco", "name": "Sallo Szrajbman"}}, "url": "https://github.com/eugenp/tutorials/commit/7588a1409766f6038aba706490ecc3193b369daf", "committedDate": "2020-10-21T10:15:16Z", "message": "[BEAL-4173]\nFixing identation issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dad0f85bc862afd7bef77f8e5000f1a1ff4744c2", "author": {"user": {"login": "saleco", "name": "Sallo Szrajbman"}}, "url": "https://github.com/eugenp/tutorials/commit/dad0f85bc862afd7bef77f8e5000f1a1ff4744c2", "committedDate": "2020-10-21T10:22:42Z", "message": "[BEAL-4173]\nRemoving HttpHeaders parameter (not needed)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1ODU4MzUz", "url": "https://github.com/eugenp/tutorials/pull/10134#pullrequestreview-515858353", "createdAt": "2020-10-23T17:14:22Z", "commit": {"oid": "dad0f85bc862afd7bef77f8e5000f1a1ff4744c2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoxNDoyM1rOHnWhrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoxNDoyM1rOHnWhrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyNTU4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Arrays.asList(\"Fisrt Client\", \"Second Client\");\n          \n          \n            \n                    return Arrays.asList(\"First Client\", \"Second Client\");", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r511025580", "createdAt": "2020-10-23T17:14:23Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/controller/ClientsRestController.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.baeldung.swaggerjwt.controller;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import com.baeldung.swaggerjwt.configuration.SwaggerConfiguration;\n+import io.swagger.annotations.Api;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import io.swagger.annotations.ApiOperation;\n+\n+@RestController(value = \"/clients\")\n+@Api( tags = \"Clients\")\n+public class ClientsRestController {\n+\n+    @ApiOperation(value = \"This method is used to get the clients.\")\n+    @GetMapping\n+    public List<String> getClients() {\n+        return Arrays.asList(\"Fisrt Client\", \"Second Client\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dad0f85bc862afd7bef77f8e5000f1a1ff4744c2"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73234a48f0cf98c5e1b46595a6e983c0d1f06ce3", "author": {"user": {"login": "saleco", "name": "Sallo Szrajbman"}}, "url": "https://github.com/eugenp/tutorials/commit/73234a48f0cf98c5e1b46595a6e983c0d1f06ce3", "committedDate": "2020-10-23T17:38:12Z", "message": "Update spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/controller/ClientsRestController.java\r\n\r\nCommitting suggestion\n\nCo-authored-by: KevinGilmore <kpg102@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3Mjk5Mzk2", "url": "https://github.com/eugenp/tutorials/pull/10134#pullrequestreview-517299396", "createdAt": "2020-10-27T02:12:43Z", "commit": {"oid": "73234a48f0cf98c5e1b46595a6e983c0d1f06ce3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3894, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}