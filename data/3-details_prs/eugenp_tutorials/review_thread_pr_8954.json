{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNzg4NDc5", "number": 8954, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNToxNzoyNlrODsUxDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNDozMjoxM1rODyVVtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODA0MTcyOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNToxNzoyNlrOF9KISA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNToxNzoyNlrOF9KISA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3MzQxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenWhenUsAsciiString_whenCompating_thenCompareNotEquals() {\n          \n          \n            \n                public void givenUsAsciiString_whenComparing_thenCompareNotEquals() {", "url": "https://github.com/eugenp/tutorials/pull/8954#discussion_r399673416", "createdAt": "2020-03-28T15:17:26Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.baeldung.encode;\n+\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.nio.charset.StandardCharsets;\n+\n+import org.junit.Test;\n+\n+public class StringEncodeUnitTest {\n+\n+    private String unencodedString = new String(\"Entwickeln Sie mit Vergn\u00fcgen\".getBytes(), StandardCharsets.US_ASCII);\n+\n+    @Test\n+    public void givenWhenUsAsciiString_whenCompating_thenCompareNotEquals() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83a393d8dfdc5196a3355420c1f4e167ed1f8ba1"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODA0MjQwOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNToxODoxOVrOF9KIoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNToxODoxOVrOF9KIoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3MzUwNQ==", "bodyText": "swap order of arguments in this and the next two tests, so that they are assertEquals(expected, actual)", "url": "https://github.com/eugenp/tutorials/pull/8954#discussion_r399673505", "createdAt": "2020-03-28T15:18:19Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.baeldung.encode;\n+\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.nio.charset.StandardCharsets;\n+\n+import org.junit.Test;\n+\n+public class StringEncodeUnitTest {\n+\n+    private String unencodedString = new String(\"Entwickeln Sie mit Vergn\u00fcgen\".getBytes(), StandardCharsets.US_ASCII);\n+\n+    @Test\n+    public void givenWhenUsAsciiString_whenCompating_thenCompareNotEquals() {\n+        assertNotEquals(unencodedString, \"Entwickeln Sie mit Vergn\u00fcgen\");\n+    }\n+\n+    /*\n+     * ApacheCommonsCodecEncode\n+     */\n+    @Test\n+    public void givenSomeUnencodedString_whenApacheCommonsCodecEncode_thenCompareEquals() {\n+        assertEquals(new ApacheCommonsCodecEncode().encodeString(unencodedString), unencodedString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83a393d8dfdc5196a3355420c1f4e167ed1f8ba1"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODA3MjYxOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNTo1NTowOFrOF9KXsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNTozOTowN1rOF9SvkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NzM2Mw==", "bodyText": "Wouldn't it be more accurate to call this variable asciiEncodedString?", "url": "https://github.com/eugenp/tutorials/pull/8954#discussion_r399677363", "createdAt": "2020-03-28T15:55:08Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.baeldung.encode;\n+\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.nio.charset.StandardCharsets;\n+\n+import org.junit.Test;\n+\n+public class StringEncodeUnitTest {\n+\n+    private String unencodedString = new String(\"Entwickeln Sie mit Vergn\u00fcgen\".getBytes(), StandardCharsets.US_ASCII);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83a393d8dfdc5196a3355420c1f4e167ed1f8ba1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxNDU0NQ==", "bodyText": "Sure.", "url": "https://github.com/eugenp/tutorials/pull/8954#discussion_r399814545", "createdAt": "2020-03-29T15:39:07Z", "author": {"login": "roqmarcelo"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.baeldung.encode;\n+\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.nio.charset.StandardCharsets;\n+\n+import org.junit.Test;\n+\n+public class StringEncodeUnitTest {\n+\n+    private String unencodedString = new String(\"Entwickeln Sie mit Vergn\u00fcgen\".getBytes(), StandardCharsets.US_ASCII);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NzM2Mw=="}, "originalCommit": {"oid": "83a393d8dfdc5196a3355420c1f4e167ed1f8ba1"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTA0NzU1OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNDozMDo0MVrOGGUKhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMjowNTo0MlrOGG41oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI3NTAxMw==", "bodyText": "swap order of arguments so that it matches the signature, assertEquals(expected, actual)", "url": "https://github.com/eugenp/tutorials/pull/8954#discussion_r409275013", "createdAt": "2020-04-16T04:30:41Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.baeldung.encode;\n+\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.commons.codec.binary.StringUtils;\n+import org.junit.Test;\n+\n+public class StringEncodeUnitTest {\n+\n+    @Test\n+    public void givenGermanAsciiString_whenComparing_thenCompareNotEquals() {\n+        String germanString = \"Entwickeln Sie mit Vergn\u00fcgen\";\n+        byte[] germanBytes = germanString.getBytes();\n+        String asciiEncodedString = new String(germanBytes, StandardCharsets.US_ASCII);\n+\n+        assertNotEquals(asciiEncodedString, germanString);\n+    }\n+\n+    @Test\n+    public void givenUsAsciiString_whenComparing_thenCompareNotEquals() {\n+        String englishString = \"Develop with pleasure\";\n+        byte[] englishBytes = englishString.getBytes();\n+        String asciiEncondedEnglishString = new String(englishBytes, StandardCharsets.US_ASCII);\n+\n+        assertEquals(asciiEncondedEnglishString, englishString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd9695b48bab07b9296a993da89d8387fb0ccaac"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg3NTg3Mg==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/8954#discussion_r409875872", "createdAt": "2020-04-16T22:05:42Z", "author": {"login": "roqmarcelo"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.baeldung.encode;\n+\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.commons.codec.binary.StringUtils;\n+import org.junit.Test;\n+\n+public class StringEncodeUnitTest {\n+\n+    @Test\n+    public void givenGermanAsciiString_whenComparing_thenCompareNotEquals() {\n+        String germanString = \"Entwickeln Sie mit Vergn\u00fcgen\";\n+        byte[] germanBytes = germanString.getBytes();\n+        String asciiEncodedString = new String(germanBytes, StandardCharsets.US_ASCII);\n+\n+        assertNotEquals(asciiEncodedString, germanString);\n+    }\n+\n+    @Test\n+    public void givenUsAsciiString_whenComparing_thenCompareNotEquals() {\n+        String englishString = \"Develop with pleasure\";\n+        byte[] englishBytes = englishString.getBytes();\n+        String asciiEncondedEnglishString = new String(englishBytes, StandardCharsets.US_ASCII);\n+\n+        assertEquals(asciiEncondedEnglishString, englishString);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI3NTAxMw=="}, "originalCommit": {"oid": "cd9695b48bab07b9296a993da89d8387fb0ccaac"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTA0ODk3OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNDozMTozNlrOGGULWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMjowNTozMlrOGG41VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI3NTIyNw==", "bodyText": "swap order of arguments", "url": "https://github.com/eugenp/tutorials/pull/8954#discussion_r409275227", "createdAt": "2020-04-16T04:31:36Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.baeldung.encode;\n+\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.commons.codec.binary.StringUtils;\n+import org.junit.Test;\n+\n+public class StringEncodeUnitTest {\n+\n+    @Test\n+    public void givenGermanAsciiString_whenComparing_thenCompareNotEquals() {\n+        String germanString = \"Entwickeln Sie mit Vergn\u00fcgen\";\n+        byte[] germanBytes = germanString.getBytes();\n+        String asciiEncodedString = new String(germanBytes, StandardCharsets.US_ASCII);\n+\n+        assertNotEquals(asciiEncodedString, germanString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd9695b48bab07b9296a993da89d8387fb0ccaac"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg3NTc5Ng==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/8954#discussion_r409875796", "createdAt": "2020-04-16T22:05:32Z", "author": {"login": "roqmarcelo"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.baeldung.encode;\n+\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.commons.codec.binary.StringUtils;\n+import org.junit.Test;\n+\n+public class StringEncodeUnitTest {\n+\n+    @Test\n+    public void givenGermanAsciiString_whenComparing_thenCompareNotEquals() {\n+        String germanString = \"Entwickeln Sie mit Vergn\u00fcgen\";\n+        byte[] germanBytes = germanString.getBytes();\n+        String asciiEncodedString = new String(germanBytes, StandardCharsets.US_ASCII);\n+\n+        assertNotEquals(asciiEncodedString, germanString);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI3NTIyNw=="}, "originalCommit": {"oid": "cd9695b48bab07b9296a993da89d8387fb0ccaac"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTA1MDE0OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNDozMjoxM1rOGGUL9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMjowNToxOVrOGG40-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI3NTM4MA==", "bodyText": "add blank line between given/when (on each test method)", "url": "https://github.com/eugenp/tutorials/pull/8954#discussion_r409275380", "createdAt": "2020-04-16T04:32:13Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.baeldung.encode;\n+\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.commons.codec.binary.StringUtils;\n+import org.junit.Test;\n+\n+public class StringEncodeUnitTest {\n+\n+    @Test\n+    public void givenGermanAsciiString_whenComparing_thenCompareNotEquals() {\n+        String germanString = \"Entwickeln Sie mit Vergn\u00fcgen\";\n+        byte[] germanBytes = germanString.getBytes();\n+        String asciiEncodedString = new String(germanBytes, StandardCharsets.US_ASCII);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd9695b48bab07b9296a993da89d8387fb0ccaac"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg3NTcwNg==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/8954#discussion_r409875706", "createdAt": "2020-04-16T22:05:19Z", "author": {"login": "roqmarcelo"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/encode/StringEncodeUnitTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.baeldung.encode;\n+\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.commons.codec.binary.StringUtils;\n+import org.junit.Test;\n+\n+public class StringEncodeUnitTest {\n+\n+    @Test\n+    public void givenGermanAsciiString_whenComparing_thenCompareNotEquals() {\n+        String germanString = \"Entwickeln Sie mit Vergn\u00fcgen\";\n+        byte[] germanBytes = germanString.getBytes();\n+        String asciiEncodedString = new String(germanBytes, StandardCharsets.US_ASCII);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI3NTM4MA=="}, "originalCommit": {"oid": "cd9695b48bab07b9296a993da89d8387fb0ccaac"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4059, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}