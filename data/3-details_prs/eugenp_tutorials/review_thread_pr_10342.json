{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTM1NTQ5", "number": 10342, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMjo1NDozNlrOFLht8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMjo1NDozNlrOFLht8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjMxMDg5OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-jpa-2/src/main/java/com/baeldung/spring/transaction/CourseService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMjo1NDozNlrOIOv7iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMjo1NDozNlrOIOv7iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMzNjI2NQ==", "bodyText": "Let's change the message to \"Throwing exception without rollback\"", "url": "https://github.com/eugenp/tutorials/pull/10342#discussion_r552336265", "createdAt": "2021-01-06T02:54:36Z", "author": {"login": "eric-martin"}, "path": "persistence-modules/spring-jpa-2/src/main/java/com/baeldung/spring/transaction/CourseService.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.baeldung.spring.transaction;\n+\n+import java.sql.SQLException;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.dao.DataIntegrityViolationException;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.transaction.interceptor.TransactionAspectSupport;\n+\n+@Service\n+public class CourseService {\n+    \n+    @Autowired\n+    private CourseDao courseDao;\n+    \n+    @Transactional\n+    public void createCourseDeclarativeWithRuntimeException(Course course) {\n+        courseDao.create(course);\n+        throw new DataIntegrityViolationException(\"Throwing exception for demoing Rollback!!!\");\n+    }\n+    \n+    @Transactional(rollbackFor = { SQLException.class })\n+    public void createCourseDeclarativeWithCheckedException(Course course) throws SQLException {\n+        courseDao.create(course);\n+        throw new SQLException(\"Throwing exception for demoing Rollback!!!\");\n+    }\n+    \n+    public void createCourseDefaultRatingProgramatic(Course course) {\n+        try {\n+            courseDao.create(course);\n+            throw new DataIntegrityViolationException(\"Throwing exception for demoing Rollback!!!\");\n+        } catch (Exception e) {\n+            TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();\n+        }\n+    }\n+    \n+    @Transactional(noRollbackFor = { SQLException.class })\n+    public void createCourseDeclarativeWithNoRollBack(Course course) throws SQLException {\n+        courseDao.create(course);\n+        throw new SQLException(\"Throwing exception for demoing Rollback!!!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91c847610ea920c319fa8f30538a9e0a2e615465"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4101, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}