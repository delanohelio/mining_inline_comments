{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1ODQ2Mjk0", "number": 8736, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjozODozN1rODghKhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxNTo1Mjo0MlrODoH9fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDI0Mzg5OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-boot-persistence-h2/src/main/java/com/baeldung/h2db/lazy_load_no_trans/service/ServiceLayer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjozODozN1rOFqxAeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTozNTo0MlrOFrHJ0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzQ1MA==", "bodyText": "You don't need to collect to a list and then return the size of the list. You can go\nreturn userRepository.findAll()\n    .stream()\n    .map(User::getDocs)\n    .flatMap(Document::stream)\n    .count();\nOr similar.", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380387450", "createdAt": "2020-02-17T22:38:37Z", "author": {"login": "ashleyfrieze"}, "path": "persistence-modules/spring-boot-persistence-h2/src/main/java/com/baeldung/h2db/lazy_load_no_trans/service/ServiceLayer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.baeldung.h2db.lazy_load_no_trans.service;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.entity.Document;\n+import com.baeldung.h2db.lazy_load_no_trans.entity.User;\n+import com.baeldung.h2db.lazy_load_no_trans.repository.UserRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Service\n+public class ServiceLayer {\n+\n+    @Autowired\n+    private UserRepository userRepository;\n+\n+    @Transactional(readOnly = true)\n+    public int countAllDocsTransactional() {\n+        return countAllDocs();\n+    }\n+\n+    public int countAllDocsNonTransactional() {\n+        return countAllDocs();\n+    }\n+\n+    private int countAllDocs() {\n+        List<Document> docs = userRepository\n+            .findAll().stream()\n+            .flatMap(user -> user.getDocs().stream())\n+            .collect(Collectors.toList());\n+        return docs.size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2834b3396e527ae2749bf5d3badf6f57938f71a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1MDI4OQ==", "bodyText": "That's right, fixed", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380750289", "createdAt": "2020-02-18T15:35:42Z", "author": {"login": "petershatunov"}, "path": "persistence-modules/spring-boot-persistence-h2/src/main/java/com/baeldung/h2db/lazy_load_no_trans/service/ServiceLayer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.baeldung.h2db.lazy_load_no_trans.service;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.entity.Document;\n+import com.baeldung.h2db.lazy_load_no_trans.entity.User;\n+import com.baeldung.h2db.lazy_load_no_trans.repository.UserRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Service\n+public class ServiceLayer {\n+\n+    @Autowired\n+    private UserRepository userRepository;\n+\n+    @Transactional(readOnly = true)\n+    public int countAllDocsTransactional() {\n+        return countAllDocs();\n+    }\n+\n+    public int countAllDocsNonTransactional() {\n+        return countAllDocs();\n+    }\n+\n+    private int countAllDocs() {\n+        List<Document> docs = userRepository\n+            .findAll().stream()\n+            .flatMap(user -> user.getDocs().stream())\n+            .collect(Collectors.toList());\n+        return docs.size();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzQ1MA=="}, "originalCommit": {"oid": "f2834b3396e527ae2749bf5d3badf6f57938f71a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDI0NTE0OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOffIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjozOToyN1rOFqxBMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTozNDo1MlrOFrHHog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzYzMw==", "bodyText": "Static import assertEquals", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380387633", "createdAt": "2020-02-17T22:39:27Z", "author": {"login": "ashleyfrieze"}, "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOffIntegrationTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import net.ttddyy.dsproxy.listener.logging.DefaultQueryLogEntryCreator;\n+import net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener;\n+import net.ttddyy.dsproxy.support.ProxyDataSourceBuilder;\n+import org.hibernate.LazyInitializationException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.sql.DataSource;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-off\")\n+public class LazyLoadNoTransPropertyOffIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+\n+    @Bean\n+    public DataSource dataSource() {\n+        SLF4JQueryLoggingListener loggingListener = new SLF4JQueryLoggingListener();\n+        loggingListener.setQueryLogEntryCreator(new DefaultQueryLogEntryCreator());\n+        return ProxyDataSourceBuilder.create()\n+            .countQuery()\n+            .listener(loggingListener)\n+            .build();\n+    }\n+\n+    @Test(expected = LazyInitializationException.class)\n+    public void should_call_non_transactional_method() {\n+        serviceLayer.countAllDocsNonTransactional();\n+    }\n+\n+    @Test\n+    public void should_call_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2834b3396e527ae2749bf5d3badf6f57938f71a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0OTczMA==", "bodyText": "fixed", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380749730", "createdAt": "2020-02-18T15:34:52Z", "author": {"login": "petershatunov"}, "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOffIntegrationTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import net.ttddyy.dsproxy.listener.logging.DefaultQueryLogEntryCreator;\n+import net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener;\n+import net.ttddyy.dsproxy.support.ProxyDataSourceBuilder;\n+import org.hibernate.LazyInitializationException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.sql.DataSource;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-off\")\n+public class LazyLoadNoTransPropertyOffIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+\n+    @Bean\n+    public DataSource dataSource() {\n+        SLF4JQueryLoggingListener loggingListener = new SLF4JQueryLoggingListener();\n+        loggingListener.setQueryLogEntryCreator(new DefaultQueryLogEntryCreator());\n+        return ProxyDataSourceBuilder.create()\n+            .countQuery()\n+            .listener(loggingListener)\n+            .build();\n+    }\n+\n+    @Test(expected = LazyInitializationException.class)\n+    public void should_call_non_transactional_method() {\n+        serviceLayer.countAllDocsNonTransactional();\n+    }\n+\n+    @Test\n+    public void should_call_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzYzMw=="}, "originalCommit": {"oid": "f2834b3396e527ae2749bf5d3badf6f57938f71a"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDI0NjIzOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjo0MDoxMFrOFqxBxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTozNDo0OFrOFrHHcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4Nzc4Mg==", "bodyText": "static import assertEquals", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380387782", "createdAt": "2020-02-17T22:40:10Z", "author": {"login": "ashleyfrieze"}, "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import net.ttddyy.dsproxy.listener.logging.DefaultQueryLogEntryCreator;\n+import net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener;\n+import net.ttddyy.dsproxy.support.ProxyDataSourceBuilder;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.sql.DataSource;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-on\")\n+public class LazyLoadNoTransPropertyOnIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+    private static final long EXPECTED_USERS_COUNT = 5;\n+\n+    @Bean\n+    public DataSource dataSource() {\n+        SLF4JQueryLoggingListener loggingListener = new SLF4JQueryLoggingListener();\n+        loggingListener.setQueryLogEntryCreator(new DefaultQueryLogEntryCreator());\n+        return ProxyDataSourceBuilder.create()\n+            .countQuery()\n+            .listener(loggingListener)\n+            .build();\n+    }\n+\n+    @Test\n+    public void should_call_non_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsNonTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2834b3396e527ae2749bf5d3badf6f57938f71a"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0OTY4MA==", "bodyText": "fixed", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380749680", "createdAt": "2020-02-18T15:34:48Z", "author": {"login": "petershatunov"}, "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import net.ttddyy.dsproxy.listener.logging.DefaultQueryLogEntryCreator;\n+import net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener;\n+import net.ttddyy.dsproxy.support.ProxyDataSourceBuilder;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.sql.DataSource;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-on\")\n+public class LazyLoadNoTransPropertyOnIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+    private static final long EXPECTED_USERS_COUNT = 5;\n+\n+    @Bean\n+    public DataSource dataSource() {\n+        SLF4JQueryLoggingListener loggingListener = new SLF4JQueryLoggingListener();\n+        loggingListener.setQueryLogEntryCreator(new DefaultQueryLogEntryCreator());\n+        return ProxyDataSourceBuilder.create()\n+            .countQuery()\n+            .listener(loggingListener)\n+            .build();\n+    }\n+\n+    @Test\n+    public void should_call_non_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsNonTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4Nzc4Mg=="}, "originalCommit": {"oid": "f2834b3396e527ae2749bf5d3badf6f57938f71a"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDI0NjQxOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjo0MDoxNlrOFqxB4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTozNDo0MFrOFrHHHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzgwOA==", "bodyText": "and here", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380387808", "createdAt": "2020-02-17T22:40:16Z", "author": {"login": "ashleyfrieze"}, "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import net.ttddyy.dsproxy.listener.logging.DefaultQueryLogEntryCreator;\n+import net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener;\n+import net.ttddyy.dsproxy.support.ProxyDataSourceBuilder;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.sql.DataSource;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-on\")\n+public class LazyLoadNoTransPropertyOnIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+    private static final long EXPECTED_USERS_COUNT = 5;\n+\n+    @Bean\n+    public DataSource dataSource() {\n+        SLF4JQueryLoggingListener loggingListener = new SLF4JQueryLoggingListener();\n+        loggingListener.setQueryLogEntryCreator(new DefaultQueryLogEntryCreator());\n+        return ProxyDataSourceBuilder.create()\n+            .countQuery()\n+            .listener(loggingListener)\n+            .build();\n+    }\n+\n+    @Test\n+    public void should_call_non_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsNonTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);\n+        SQLStatementCountValidator.assertSelectCount(EXPECTED_USERS_COUNT + 1);\n+    }\n+\n+    @Test\n+    public void should_call_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2834b3396e527ae2749bf5d3badf6f57938f71a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0OTU5Ng==", "bodyText": "fixed", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r380749596", "createdAt": "2020-02-18T15:34:40Z", "author": {"login": "petershatunov"}, "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import net.ttddyy.dsproxy.listener.logging.DefaultQueryLogEntryCreator;\n+import net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener;\n+import net.ttddyy.dsproxy.support.ProxyDataSourceBuilder;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.sql.DataSource;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-on\")\n+public class LazyLoadNoTransPropertyOnIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+    private static final long EXPECTED_USERS_COUNT = 5;\n+\n+    @Bean\n+    public DataSource dataSource() {\n+        SLF4JQueryLoggingListener loggingListener = new SLF4JQueryLoggingListener();\n+        loggingListener.setQueryLogEntryCreator(new DefaultQueryLogEntryCreator());\n+        return ProxyDataSourceBuilder.create()\n+            .countQuery()\n+            .listener(loggingListener)\n+            .build();\n+    }\n+\n+    @Test\n+    public void should_call_non_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsNonTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);\n+        SQLStatementCountValidator.assertSelectCount(EXPECTED_USERS_COUNT + 1);\n+    }\n+\n+    @Test\n+    public void should_call_transactional_method() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsTransactional();\n+        Assert.assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NzgwOA=="}, "originalCommit": {"oid": "f2834b3396e527ae2749bf5d3badf6f57938f71a"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzk5OTkxOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOffIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxNTo1MTo1OFrOF2fsUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxNTo1MTo1OFrOF2fsUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4NjY3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void whenCallTransactionalMethodWithPropertyOffThenTestPass() {\n          \n          \n            \n                public void whenCallTransactionalMethodWithPropertyOff_thenTestPass() {", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r392686675", "createdAt": "2020-03-15T15:51:58Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOffIntegrationTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import org.hibernate.LazyInitializationException;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-off\")\n+public class LazyLoadNoTransPropertyOffIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+\n+    @Test(expected = LazyInitializationException.class)\n+    public void whenCallNonTransactionalMethodWithPropertyOffThenThrowException() {\n+        serviceLayer.countAllDocsNonTransactional();\n+    }\n+\n+    @Test\n+    public void whenCallTransactionalMethodWithPropertyOffThenTestPass() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f894410aee1b2d169da418d3115766c263d3cb9"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDAwMDM0OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxNTo1MjoyM1rOF2fsgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxNTo1MjoyM1rOF2fsgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4NjcyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void whenCallNonTransactionalMethodWithPropertyOnThenGetNplusOne() {\n          \n          \n            \n                public void whenCallNonTransactionalMethodWithPropertyOn_thenGetNplusOne() {", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r392686723", "createdAt": "2020-03-15T15:52:23Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-on\")\n+public class LazyLoadNoTransPropertyOnIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+    private static final long EXPECTED_USERS_COUNT = 5;\n+\n+    @Test\n+    public void whenCallNonTransactionalMethodWithPropertyOnThenGetNplusOne() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f894410aee1b2d169da418d3115766c263d3cb9"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDAwMDYwOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxNTo1Mjo0MlrOF2fsog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxNTo1Mjo0MlrOF2fsog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4Njc1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void whenCallTransactionalMethodWithPropertyOnThenTestPass() {\n          \n          \n            \n                public void whenCallTransactionalMethodWithPropertyOn_thenTestPass() {", "url": "https://github.com/eugenp/tutorials/pull/8736#discussion_r392686754", "createdAt": "2020-03-15T15:52:42Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/spring-boot-persistence-h2/src/test/java/com/baeldung/lazy_load_no_trans/LazyLoadNoTransPropertyOnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.baeldung.lazy_load_no_trans;\n+\n+import com.baeldung.h2db.lazy_load_no_trans.LazyLoadNoTransSpringBootApplication;\n+import com.baeldung.h2db.lazy_load_no_trans.service.ServiceLayer;\n+import com.vladmihalcea.sql.SQLStatementCountValidator;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = LazyLoadNoTransSpringBootApplication.class)\n+@ActiveProfiles(\"lazy-load-no-trans-on\")\n+public class LazyLoadNoTransPropertyOnIntegrationTest {\n+\n+    @Autowired\n+    private ServiceLayer serviceLayer;\n+\n+    private static final long EXPECTED_DOCS_COLLECTION_SIZE = 6;\n+    private static final long EXPECTED_USERS_COUNT = 5;\n+\n+    @Test\n+    public void whenCallNonTransactionalMethodWithPropertyOnThenGetNplusOne() {\n+        SQLStatementCountValidator.reset();\n+        long docsCount = serviceLayer.countAllDocsNonTransactional();\n+        assertEquals(EXPECTED_DOCS_COLLECTION_SIZE, docsCount);\n+        SQLStatementCountValidator.assertSelectCount(EXPECTED_USERS_COUNT + 1);\n+    }\n+\n+    @Test\n+    public void whenCallTransactionalMethodWithPropertyOnThenTestPass() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f894410aee1b2d169da418d3115766c263d3cb9"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4348, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}