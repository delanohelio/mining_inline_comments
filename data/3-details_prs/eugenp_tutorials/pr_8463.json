{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NTUwNzU4", "number": 8463, "title": "BAEL-3656 Read Numeric Strings in Excel Cells as a String with Apache\u2026", "bodyText": "\u2026 POI", "createdAt": "2020-01-02T04:35:44Z", "url": "https://github.com/eugenp/tutorials/pull/8463", "merged": true, "mergeCommit": {"oid": "1281abb5b724f09c8bde7cb2308a1a3647f14983"}, "closed": true, "closedAt": "2020-01-09T03:24:06Z", "author": {"login": "wugangca"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2SI2kAH2gAyMzU4NTUwNzU4OjRlOTdmYjBmOWRjNWMzNTczYWUzMGE1ZmNlN2YzYzljN2JjNDJmMmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4hFeSAH2gAyMzU4NTUwNzU4OmZkMzVkNzQxYjc2MjllYjczZjYwMjU0ZTUwZmViMmM4MTk5Y2Y2MTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4e97fb0f9dc5c3573ae30a5fce7f3c9c7bc42f2a", "author": {"user": null}, "url": "https://github.com/eugenp/tutorials/commit/4e97fb0f9dc5c3573ae30a5fce7f3c9c7bc42f2a", "committedDate": "2020-01-02T04:34:48Z", "message": "BAEL-3656 Read Numeric Strings in Excel Cells as a String with Apache POI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af6804ae25fc35ec53e1c20b245e21094836b94f", "author": {"user": null}, "url": "https://github.com/eugenp/tutorials/commit/af6804ae25fc35ec53e1c20b245e21094836b94f", "committedDate": "2020-01-05T07:19:49Z", "message": "BAEL-3656 Change the integration test into unit test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjA1MjYy", "url": "https://github.com/eugenp/tutorials/pull/8463#pullrequestreview-340205262", "createdAt": "2020-01-08T23:12:24Z", "commit": {"oid": "af6804ae25fc35ec53e1c20b245e21094836b94f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzoxMjoyNFrOFbms0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzoxNDoyM1rOFbmvKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ4OTkzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void gvieStringCell_whenGetCellStringValue_thenReturnStringValue() throws IOException {\n          \n          \n            \n                public void givenStringCell_whenGetCellStringValue_thenReturnStringValue() throws IOException {", "url": "https://github.com/eugenp/tutorials/pull/8463#discussion_r364489936", "createdAt": "2020-01-08T23:12:24Z", "author": {"login": "KevinGilmore"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/ExcelCellFormatterUnitTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.baeldung.poi.excel;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+import org.apache.poi.ss.usermodel.Row;\n+import org.apache.poi.ss.usermodel.Sheet;\n+import org.apache.poi.ss.usermodel.Workbook;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class ExcelCellFormatterUnitTest {\n+    private static final String FILE_NAME = \"ExcelCellFormatterTest.xlsx\";\n+    private static final int STRING_CELL_INDEX = 0;\n+    private static final int BOOLEAN_CELL_INDEX = 1;\n+    private static final int RAW_NUMERIC_CELL_INDEX = 2;\n+    private static final int FORMATTED_NUMERIC_CELL_INDEX = 3;\n+    private static final int FORMULA_CELL_INDEX = 4;\n+\n+    private String fileLocation;\n+\n+    @Before\n+    public void setup() throws IOException, URISyntaxException {\n+            fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+    }\n+\n+    @Test\n+    public void gvieStringCell_whenGetCellStringValue_thenReturnStringValue() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6804ae25fc35ec53e1c20b245e21094836b94f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5MDAzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void gvieBooleanCell_whenGetCellStringValue_thenReturnBooleanStringValue() throws IOException {\n          \n          \n            \n                public void givenBooleanCell_whenGetCellStringValue_thenReturnBooleanStringValue() throws IOException {", "url": "https://github.com/eugenp/tutorials/pull/8463#discussion_r364490032", "createdAt": "2020-01-08T23:12:44Z", "author": {"login": "KevinGilmore"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/ExcelCellFormatterUnitTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.baeldung.poi.excel;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+import org.apache.poi.ss.usermodel.Row;\n+import org.apache.poi.ss.usermodel.Sheet;\n+import org.apache.poi.ss.usermodel.Workbook;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class ExcelCellFormatterUnitTest {\n+    private static final String FILE_NAME = \"ExcelCellFormatterTest.xlsx\";\n+    private static final int STRING_CELL_INDEX = 0;\n+    private static final int BOOLEAN_CELL_INDEX = 1;\n+    private static final int RAW_NUMERIC_CELL_INDEX = 2;\n+    private static final int FORMATTED_NUMERIC_CELL_INDEX = 3;\n+    private static final int FORMULA_CELL_INDEX = 4;\n+\n+    private String fileLocation;\n+\n+    @Before\n+    public void setup() throws IOException, URISyntaxException {\n+            fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+    }\n+\n+    @Test\n+    public void gvieStringCell_whenGetCellStringValue_thenReturnStringValue() throws IOException {\n+        Workbook workbook = new XSSFWorkbook(fileLocation);\n+        Sheet sheet = workbook.getSheetAt(0);\n+        Row row = sheet.getRow(0);\n+\n+        ExcelCellFormatter formatter = new ExcelCellFormatter();\n+        assertEquals(\"String Test\", formatter.getCellStringValue(row.getCell(STRING_CELL_INDEX)));\n+        workbook.close();\n+    }\n+\n+    @Test\n+    public void gvieBooleanCell_whenGetCellStringValue_thenReturnBooleanStringValue() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6804ae25fc35ec53e1c20b245e21094836b94f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5MDA5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void gvieNumericCell_whenGetCellStringValue_thenReturnNumericStringValue() throws IOException {\n          \n          \n            \n                public void givenNumericCell_whenGetCellStringValue_thenReturnNumericStringValue() throws IOException {", "url": "https://github.com/eugenp/tutorials/pull/8463#discussion_r364490096", "createdAt": "2020-01-08T23:12:55Z", "author": {"login": "KevinGilmore"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/ExcelCellFormatterUnitTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.baeldung.poi.excel;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+import org.apache.poi.ss.usermodel.Row;\n+import org.apache.poi.ss.usermodel.Sheet;\n+import org.apache.poi.ss.usermodel.Workbook;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class ExcelCellFormatterUnitTest {\n+    private static final String FILE_NAME = \"ExcelCellFormatterTest.xlsx\";\n+    private static final int STRING_CELL_INDEX = 0;\n+    private static final int BOOLEAN_CELL_INDEX = 1;\n+    private static final int RAW_NUMERIC_CELL_INDEX = 2;\n+    private static final int FORMATTED_NUMERIC_CELL_INDEX = 3;\n+    private static final int FORMULA_CELL_INDEX = 4;\n+\n+    private String fileLocation;\n+\n+    @Before\n+    public void setup() throws IOException, URISyntaxException {\n+            fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+    }\n+\n+    @Test\n+    public void gvieStringCell_whenGetCellStringValue_thenReturnStringValue() throws IOException {\n+        Workbook workbook = new XSSFWorkbook(fileLocation);\n+        Sheet sheet = workbook.getSheetAt(0);\n+        Row row = sheet.getRow(0);\n+\n+        ExcelCellFormatter formatter = new ExcelCellFormatter();\n+        assertEquals(\"String Test\", formatter.getCellStringValue(row.getCell(STRING_CELL_INDEX)));\n+        workbook.close();\n+    }\n+\n+    @Test\n+    public void gvieBooleanCell_whenGetCellStringValue_thenReturnBooleanStringValue() throws IOException {\n+        Workbook workbook = new XSSFWorkbook(fileLocation);\n+        Sheet sheet = workbook.getSheetAt(0);\n+        Row row = sheet.getRow(0);\n+\n+        ExcelCellFormatter formatter = new ExcelCellFormatter();\n+        assertEquals(\"TRUE\", formatter.getCellStringValue(row.getCell(BOOLEAN_CELL_INDEX)));\n+        workbook.close();\n+    }\n+\n+    @Test\n+    public void gvieNumericCell_whenGetCellStringValue_thenReturnNumericStringValue() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6804ae25fc35ec53e1c20b245e21094836b94f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5MDEzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void gvieFormualCell_whenGetCellStringValue_thenReturnOriginalFormulaString() throws IOException {\n          \n          \n            \n                public void givenFormulaCell_whenGetCellStringValue_thenReturnOriginalFormulaString() throws IOException {", "url": "https://github.com/eugenp/tutorials/pull/8463#discussion_r364490138", "createdAt": "2020-01-08T23:13:06Z", "author": {"login": "KevinGilmore"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/ExcelCellFormatterUnitTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.baeldung.poi.excel;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+import org.apache.poi.ss.usermodel.Row;\n+import org.apache.poi.ss.usermodel.Sheet;\n+import org.apache.poi.ss.usermodel.Workbook;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class ExcelCellFormatterUnitTest {\n+    private static final String FILE_NAME = \"ExcelCellFormatterTest.xlsx\";\n+    private static final int STRING_CELL_INDEX = 0;\n+    private static final int BOOLEAN_CELL_INDEX = 1;\n+    private static final int RAW_NUMERIC_CELL_INDEX = 2;\n+    private static final int FORMATTED_NUMERIC_CELL_INDEX = 3;\n+    private static final int FORMULA_CELL_INDEX = 4;\n+\n+    private String fileLocation;\n+\n+    @Before\n+    public void setup() throws IOException, URISyntaxException {\n+            fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+    }\n+\n+    @Test\n+    public void gvieStringCell_whenGetCellStringValue_thenReturnStringValue() throws IOException {\n+        Workbook workbook = new XSSFWorkbook(fileLocation);\n+        Sheet sheet = workbook.getSheetAt(0);\n+        Row row = sheet.getRow(0);\n+\n+        ExcelCellFormatter formatter = new ExcelCellFormatter();\n+        assertEquals(\"String Test\", formatter.getCellStringValue(row.getCell(STRING_CELL_INDEX)));\n+        workbook.close();\n+    }\n+\n+    @Test\n+    public void gvieBooleanCell_whenGetCellStringValue_thenReturnBooleanStringValue() throws IOException {\n+        Workbook workbook = new XSSFWorkbook(fileLocation);\n+        Sheet sheet = workbook.getSheetAt(0);\n+        Row row = sheet.getRow(0);\n+\n+        ExcelCellFormatter formatter = new ExcelCellFormatter();\n+        assertEquals(\"TRUE\", formatter.getCellStringValue(row.getCell(BOOLEAN_CELL_INDEX)));\n+        workbook.close();\n+    }\n+\n+    @Test\n+    public void gvieNumericCell_whenGetCellStringValue_thenReturnNumericStringValue() throws IOException {\n+        Workbook workbook = new XSSFWorkbook(fileLocation);\n+        Sheet sheet = workbook.getSheetAt(0);\n+        Row row = sheet.getRow(0);\n+\n+        ExcelCellFormatter formatter = new ExcelCellFormatter();\n+        assertEquals(\"1.234\", formatter.getCellStringValue(row.getCell(RAW_NUMERIC_CELL_INDEX)));\n+        assertEquals(\"1.23\", formatter.getCellStringValue(row.getCell(FORMATTED_NUMERIC_CELL_INDEX)));\n+        workbook.close();\n+    }\n+\n+    @Test\n+    public void gvieFormualCell_whenGetCellStringValue_thenReturnOriginalFormulaString() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6804ae25fc35ec53e1c20b245e21094836b94f"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5MDUzNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void gvieFormualCell_whenGetCellStringValueForFormula_thenReturnOriginalFormulatring() throws IOException {\n          \n          \n            \n                public void givenFormulaCell_whenGetCellStringValueForFormula_thenReturnOriginalFormulaString() throws IOException {", "url": "https://github.com/eugenp/tutorials/pull/8463#discussion_r364490537", "createdAt": "2020-01-08T23:14:23Z", "author": {"login": "KevinGilmore"}, "path": "apache-poi/src/test/java/com/baeldung/poi/excel/ExcelCellFormatterUnitTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.baeldung.poi.excel;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Paths;\n+\n+import org.apache.poi.ss.usermodel.Row;\n+import org.apache.poi.ss.usermodel.Sheet;\n+import org.apache.poi.ss.usermodel.Workbook;\n+import org.apache.poi.xssf.usermodel.XSSFWorkbook;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class ExcelCellFormatterUnitTest {\n+    private static final String FILE_NAME = \"ExcelCellFormatterTest.xlsx\";\n+    private static final int STRING_CELL_INDEX = 0;\n+    private static final int BOOLEAN_CELL_INDEX = 1;\n+    private static final int RAW_NUMERIC_CELL_INDEX = 2;\n+    private static final int FORMATTED_NUMERIC_CELL_INDEX = 3;\n+    private static final int FORMULA_CELL_INDEX = 4;\n+\n+    private String fileLocation;\n+\n+    @Before\n+    public void setup() throws IOException, URISyntaxException {\n+            fileLocation = Paths.get(ClassLoader.getSystemResource(FILE_NAME).toURI()).toString();\n+    }\n+\n+    @Test\n+    public void gvieStringCell_whenGetCellStringValue_thenReturnStringValue() throws IOException {\n+        Workbook workbook = new XSSFWorkbook(fileLocation);\n+        Sheet sheet = workbook.getSheetAt(0);\n+        Row row = sheet.getRow(0);\n+\n+        ExcelCellFormatter formatter = new ExcelCellFormatter();\n+        assertEquals(\"String Test\", formatter.getCellStringValue(row.getCell(STRING_CELL_INDEX)));\n+        workbook.close();\n+    }\n+\n+    @Test\n+    public void gvieBooleanCell_whenGetCellStringValue_thenReturnBooleanStringValue() throws IOException {\n+        Workbook workbook = new XSSFWorkbook(fileLocation);\n+        Sheet sheet = workbook.getSheetAt(0);\n+        Row row = sheet.getRow(0);\n+\n+        ExcelCellFormatter formatter = new ExcelCellFormatter();\n+        assertEquals(\"TRUE\", formatter.getCellStringValue(row.getCell(BOOLEAN_CELL_INDEX)));\n+        workbook.close();\n+    }\n+\n+    @Test\n+    public void gvieNumericCell_whenGetCellStringValue_thenReturnNumericStringValue() throws IOException {\n+        Workbook workbook = new XSSFWorkbook(fileLocation);\n+        Sheet sheet = workbook.getSheetAt(0);\n+        Row row = sheet.getRow(0);\n+\n+        ExcelCellFormatter formatter = new ExcelCellFormatter();\n+        assertEquals(\"1.234\", formatter.getCellStringValue(row.getCell(RAW_NUMERIC_CELL_INDEX)));\n+        assertEquals(\"1.23\", formatter.getCellStringValue(row.getCell(FORMATTED_NUMERIC_CELL_INDEX)));\n+        workbook.close();\n+    }\n+\n+    @Test\n+    public void gvieFormualCell_whenGetCellStringValue_thenReturnOriginalFormulaString() throws IOException {\n+        Workbook workbook = new XSSFWorkbook(fileLocation);\n+        Sheet sheet = workbook.getSheetAt(0);\n+        Row row = sheet.getRow(0);\n+\n+        ExcelCellFormatter formatter = new ExcelCellFormatter();\n+        assertEquals(\"SUM(1+2)\", formatter.getCellStringValue(row.getCell(FORMULA_CELL_INDEX)));\n+        workbook.close();\n+    }\n+\n+    @Test\n+    public void gvieFormualCell_whenGetCellStringValueForFormula_thenReturnOriginalFormulatring() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6804ae25fc35ec53e1c20b245e21094836b94f"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd35d741b7629eb73f60254e50feb2c8199cf618", "author": {"user": null}, "url": "https://github.com/eugenp/tutorials/commit/fd35d741b7629eb73f60254e50feb2c8199cf618", "committedDate": "2020-01-09T03:07:32Z", "message": "BAEL-3656 Fix typos in the unit test names."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4240, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}