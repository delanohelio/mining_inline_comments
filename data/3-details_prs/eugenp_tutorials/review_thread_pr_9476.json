{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjM1MjUw", "number": 9476, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyNToxN1rOEEm-Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyOToyNFrOEEnDtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjY4MjMxOnYy", "diffSide": "RIGHT", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyNToxN1rOGiVgpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyNToxN1rOGiVgpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1NzE4OQ==", "bodyText": "let's promote these to variables so we don't have to always cast them", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438657189", "createdAt": "2020-06-11T09:25:17Z", "author": {"login": "rpvilao"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.filter.GenericFilterBean;\n+\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+class LoginPageFilter extends GenericFilterBean {\n+\n+    @Override\n+    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n+        if (isAuthenticated() && ((HttpServletRequest) request).getRequestURI().equals(\"/loginUser\")) {\n+\n+            String encodedRedirectURL = ((HttpServletResponse) response).encodeRedirectURL(\n+              ((HttpServletRequest) request).getContextPath() + \"/userMainPage\");\n+\n+            ((HttpServletResponse) response).setStatus(HttpStatus.SC_TEMPORARY_REDIRECT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjY4NDY2OnYy", "diffSide": "RIGHT", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyNTo1NlrOGiViFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyNTo1NlrOGiViFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1NzU1OA==", "bodyText": "as to show best practices, let's use \"\".equals(...)", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438657558", "createdAt": "2020-06-11T09:25:56Z", "author": {"login": "rpvilao"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.filter.GenericFilterBean;\n+\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+class LoginPageFilter extends GenericFilterBean {\n+\n+    @Override\n+    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n+        if (isAuthenticated() && ((HttpServletRequest) request).getRequestURI().equals(\"/loginUser\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjY4NTM2OnYy", "diffSide": "RIGHT", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyNjowN1rOGiVihA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyNjowN1rOGiVihA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1NzY2OA==", "bodyText": "same", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438657668", "createdAt": "2020-06-11T09:26:07Z", "author": {"login": "rpvilao"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import org.springframework.web.util.UrlPathHelper;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+class LoginPageInterceptor extends HandlerInterceptorAdapter {\n+\n+    @Override\n+    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n+\n+        UrlPathHelper urlPathHelper = new UrlPathHelper();\n+        if (urlPathHelper.getLookupPathForRequest(request).equals(\"/loginUser\") && isAuthenticated()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjY4NzMyOnYy", "diffSide": "RIGHT", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyNjozOVrOGiVjwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMTo0Mzo1NVrOGjBBlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1Nzk4NQ==", "bodyText": "wouldn't it be safer to use isAssignableFrom?", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438657985", "createdAt": "2020-06-11T09:26:39Z", "author": {"login": "rpvilao"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import org.springframework.web.util.UrlPathHelper;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+class LoginPageInterceptor extends HandlerInterceptorAdapter {\n+\n+    @Override\n+    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n+\n+        UrlPathHelper urlPathHelper = new UrlPathHelper();\n+        if (urlPathHelper.getLookupPathForRequest(request).equals(\"/loginUser\") && isAuthenticated()) {\n+\n+            String encodedRedirectURL = response.encodeRedirectURL(\n+              request.getContextPath() + \"/userMainPage\");\n+            response.setStatus(HttpStatus.SC_TEMPORARY_REDIRECT);\n+            response.setHeader(\"Location\", encodedRedirectURL);\n+\n+            return false;\n+        } else {\n+            return true;\n+        }\n+    }\n+\n+    private boolean isAuthenticated() {\n+        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n+        if (authentication == null || authentication instanceof AnonymousAuthenticationToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM3MDEzMg==", "bodyText": "Yes, I'll change it.", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r439370132", "createdAt": "2020-06-12T11:43:55Z", "author": {"login": "cicioflaviu"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import org.springframework.web.util.UrlPathHelper;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+class LoginPageInterceptor extends HandlerInterceptorAdapter {\n+\n+    @Override\n+    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n+\n+        UrlPathHelper urlPathHelper = new UrlPathHelper();\n+        if (urlPathHelper.getLookupPathForRequest(request).equals(\"/loginUser\") && isAuthenticated()) {\n+\n+            String encodedRedirectURL = response.encodeRedirectURL(\n+              request.getContextPath() + \"/userMainPage\");\n+            response.setStatus(HttpStatus.SC_TEMPORARY_REDIRECT);\n+            response.setHeader(\"Location\", encodedRedirectURL);\n+\n+            return false;\n+        } else {\n+            return true;\n+        }\n+    }\n+\n+    private boolean isAuthenticated() {\n+        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n+        if (authentication == null || authentication instanceof AnonymousAuthenticationToken) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1Nzk4NQ=="}, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjY4Nzg4OnYy", "diffSide": "RIGHT", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginRedirectApplication.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyNjo0OFrOGiVkGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyNjo0OFrOGiVkGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1ODA3NA==", "bodyText": "remove if not needed", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438658074", "createdAt": "2020-06-11T09:26:48Z", "author": {"login": "rpvilao"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginRedirectApplication.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package com.baeldung.loginredirect;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+//@ImportResource({\"classpath*:spring-security-login-redirect.xml\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjY5NDEyOnYy", "diffSide": "RIGHT", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyODozNlrOGiVoBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMTo0MzoyMFrOGjBAfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1OTA3Nw==", "bodyText": "do we want to make this package protected for some reason? if not let's make it public (check the others classes as well)", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438659077", "createdAt": "2020-06-11T09:28:36Z", "author": {"login": "rpvilao"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import org.springframework.web.util.UrlPathHelper;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+class LoginPageInterceptor extends HandlerInterceptorAdapter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM2OTg1NA==", "bodyText": "It is recommended in the baeldung - for authors - 2 - code in the articles document, to use the package-scope access modifier if possible.", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r439369854", "createdAt": "2020-06-12T11:43:20Z", "author": {"login": "cicioflaviu"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import org.springframework.web.util.UrlPathHelper;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+class LoginPageInterceptor extends HandlerInterceptorAdapter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1OTA3Nw=="}, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjY5Njg2OnYy", "diffSide": "RIGHT", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/resources/spring-security-login-redirect.xml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToyOToyNFrOGiVp0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMzo1MjozMVrOGjExGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1OTUzOA==", "bodyText": "not needed anymore right?", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438659538", "createdAt": "2020-06-11T09:29:24Z", "author": {"login": "rpvilao"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/resources/spring-security-login-redirect.xml", "diffHunk": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM2NzgwNw==", "bodyText": "Not sure, I didn't find any information related to this fact.", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r439367807", "createdAt": "2020-06-12T11:38:05Z", "author": {"login": "cicioflaviu"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/resources/spring-security-login-redirect.xml", "diffHunk": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1OTUzOA=="}, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM3MDE2NA==", "bodyText": "I meant the file, not the line. the file is not being used as far as I know, right?", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r439370164", "createdAt": "2020-06-12T11:43:59Z", "author": {"login": "rpvilao"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/resources/spring-security-login-redirect.xml", "diffHunk": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1OTUzOA=="}, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQzMTQ0OQ==", "bodyText": "It is not used but contains the XML configuration that I presented in the article.\nAlso, it is related to the line\n//@ImportResource({\"classpath*:spring-security-login-redirect.xml\"}),\nfrom the LoginRedirectApplication.\nI intentionally kept that line and file in case someone would like to run the application with the XML configuration.", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r439431449", "createdAt": "2020-06-12T13:52:31Z", "author": {"login": "cicioflaviu"}, "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/resources/spring-security-login-redirect.xml", "diffHunk": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1OTUzOA=="}, "originalCommit": {"oid": "63574ae50b97b3d3755144880030172200849d17"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4329, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}