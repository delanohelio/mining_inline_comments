{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNDI2Mzk4", "number": 9802, "title": "BAEL-4057: Hibernate Hi/Lo algorithm example", "bodyText": "", "createdAt": "2020-07-31T19:23:51Z", "url": "https://github.com/eugenp/tutorials/pull/9802", "merged": true, "mergeCommit": {"oid": "21d485494c6d801d8d9e381b9c8072a288b31118"}, "closed": true, "closedAt": "2020-08-17T17:11:58Z", "author": {"login": "maciejglowka"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6ZTsxAH2gAyNDYwNDI2Mzk4OjNkNzc0ODRkNDQ0Zjk0ZDcxMmJkODVkNTA2OTkzNTk1M2Y4OTdjZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc97Zq5AH2gAyNDYwNDI2Mzk4OjU0ZjhmOGMwMDMwYWFkOWM4NTA1ZDNlOGRiOGVmNzg3ODg4ZWJiYTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3d77484d444f94d712bd85d5069935953f897cfa", "author": {"user": {"login": "maciejglowka", "name": "Maciej G\u0142\u00f3wka"}}, "url": "https://github.com/eugenp/tutorials/commit/3d77484d444f94d712bd85d5069935953f897cfa", "committedDate": "2020-07-31T19:22:50Z", "message": "BAEL-4057: Hibernate Hi/Lo algorithm example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NzI2NDIx", "url": "https://github.com/eugenp/tutorials/pull/9802#pullrequestreview-464726421", "createdAt": "2020-08-11T03:37:57Z", "commit": {"oid": "3d77484d444f94d712bd85d5069935953f897cfa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMzozNzo1N1rOG-nN6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMzozOToyM1rOG-nPMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMwNzQzNQ==", "bodyText": "indentation for this should follow the 2-space rule for continuation lines", "url": "https://github.com/eugenp/tutorials/pull/9802#discussion_r468307435", "createdAt": "2020-08-11T03:37:57Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/hibernate5/src/main/java/com/baeldung/hibernate/hilo/RestaurantOrder.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung.hibernate.hilo;\n+\n+import org.hibernate.annotations.GenericGenerator;\n+import org.hibernate.annotations.Parameter;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+\n+@Entity\n+public class RestaurantOrder {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"hilo_sequence_generator\")\n+    @GenericGenerator(\n+            name = \"hilo_sequence_generator\",\n+            strategy = \"sequence\",\n+            parameters = {\n+                    @Parameter(name = \"sequence_name\", value = \"hilo_seqeunce\"),\n+                    @Parameter(name = \"initial_value\", value = \"1\"),\n+                    @Parameter(name = \"increment_size\", value = \"3\"),\n+                    @Parameter(name = \"optimizer\", value = \"hilo\")\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d77484d444f94d712bd85d5069935953f897cfa"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMwNzc2MA==", "bodyText": "indentation should be 2 spaces from where the statement begins", "url": "https://github.com/eugenp/tutorials/pull/9802#discussion_r468307760", "createdAt": "2020-08-11T03:39:23Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/hibernate5/src/test/java/com/baeldung/hibernate/hilo/HibernateHiloUnitTest.java", "diffHunk": "@@ -0,0 +1,99 @@\n+package com.baeldung.hibernate.hilo;\n+\n+import org.apache.log4j.BasicConfigurator;\n+import org.apache.log4j.Level;\n+import org.apache.log4j.LogManager;\n+import org.hibernate.HibernateException;\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.Transaction;\n+import org.hibernate.boot.Metadata;\n+import org.hibernate.boot.MetadataSources;\n+import org.hibernate.boot.SessionFactoryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n+import org.hibernate.service.ServiceRegistry;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.fail;\n+\n+public class HibernateHiloUnitTest {\n+    private Session session;\n+\n+    @Before\n+    public void init() {\n+        try {\n+            configureLogger();\n+\n+            ServiceRegistry serviceRegistry = configureServiceRegistry();\n+            SessionFactory factory = getSessionFactoryBuilder(serviceRegistry).build();\n+            session = factory.openSession();\n+        } catch (HibernateException | IOException e) {\n+            fail(\"Failed to initiate Hibernate Session [Exception:\" + e.toString() + \"]\");\n+        }\n+    }\n+\n+    private void configureLogger() {\n+        BasicConfigurator.configure();\n+        LogManager.getLogger(\"org.hibernate\").setLevel(Level.ERROR);\n+        LogManager.getLogger(\"org.hibernate.id.enhanced.SequenceStructure\").setLevel(Level.DEBUG);\n+        LogManager.getLogger(\"org.hibernate.event.internal.AbstractSaveEventListener\").setLevel(Level.DEBUG);\n+        LogManager.getLogger(\"org.hibernate.SQL\").setLevel(Level.DEBUG);\n+    }\n+\n+\n+    private static SessionFactoryBuilder getSessionFactoryBuilder(ServiceRegistry serviceRegistry) {\n+        MetadataSources metadataSources = new MetadataSources(serviceRegistry);\n+        metadataSources.addAnnotatedClass(RestaurantOrder.class);\n+        Metadata metadata = metadataSources.buildMetadata();\n+\n+        return metadata.getSessionFactoryBuilder();\n+    }\n+\n+    private static ServiceRegistry configureServiceRegistry() throws IOException {\n+        Properties properties = getProperties();\n+\n+        return new StandardServiceRegistryBuilder().applySettings(properties)\n+                .build();\n+    }\n+\n+    private static Properties getProperties() throws IOException {\n+        Properties properties = new Properties();\n+        URL propertiesURL = getPropertiesURL();\n+\n+        try (FileInputStream inputStream = new FileInputStream(propertiesURL.getFile())) {\n+            properties.load(inputStream);\n+        }\n+\n+        return properties;\n+    }\n+\n+    private static URL getPropertiesURL() {\n+        return Thread.currentThread()\n+                .getContextClassLoader()\n+                .getResource(\"hibernate-hilo.properties\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d77484d444f94d712bd85d5069935953f897cfa"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54f8f8c0030aad9c8505d3e8db8ef787888ebba5", "author": {"user": {"login": "maciejglowka", "name": "Maciej G\u0142\u00f3wka"}}, "url": "https://github.com/eugenp/tutorials/commit/54f8f8c0030aad9c8505d3e8db8ef787888ebba5", "committedDate": "2020-08-11T18:47:54Z", "message": "BAEL-4057: fixed code indentation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4305, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}