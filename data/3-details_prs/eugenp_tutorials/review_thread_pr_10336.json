{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0Njg5MTk2", "number": 10336, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjozMzoxOVrOFJookg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjozNTowN1rOFJoptg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjQ3MjUwOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-jpa-query-2/src/test/java/com/baeldung/spring/data/jpa/query/UserRepositoryIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjozMzoxOVrOIMDPbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQyMjoxNDo0NVrOIMZdgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNjkyNw==", "bodyText": "Is there a reason not to use JUnit 5?", "url": "https://github.com/eugenp/tutorials/pull/10336#discussion_r549506927", "createdAt": "2020-12-28T22:33:19Z", "author": {"login": "rozagerardo"}, "path": "persistence-modules/spring-data-jpa-query-2/src/test/java/com/baeldung/spring/data/jpa/query/UserRepositoryIntegrationTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package com.baeldung.spring.data.jpa.query;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b79b1db61bdee270640b39be2d892f9f07bd8a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUxNjQzOQ==", "bodyText": "Well none of the tests in this module use JUnit 5 (yet). So I think it's better to stick to the pattern for now and create a new task to upgrade all the tests to JUnit 5.", "url": "https://github.com/eugenp/tutorials/pull/10336#discussion_r549516439", "createdAt": "2020-12-28T23:23:54Z", "author": {"login": "kwoyke"}, "path": "persistence-modules/spring-data-jpa-query-2/src/test/java/com/baeldung/spring/data/jpa/query/UserRepositoryIntegrationTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package com.baeldung.spring.data.jpa.query;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNjkyNw=="}, "originalCommit": {"oid": "59b79b1db61bdee270640b39be2d892f9f07bd8a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3MDk3OA==", "bodyText": "sounds good @kwoyke \ud83d\udc4d", "url": "https://github.com/eugenp/tutorials/pull/10336#discussion_r549870978", "createdAt": "2020-12-29T22:14:45Z", "author": {"login": "rozagerardo"}, "path": "persistence-modules/spring-data-jpa-query-2/src/test/java/com/baeldung/spring/data/jpa/query/UserRepositoryIntegrationTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package com.baeldung.spring.data.jpa.query;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNjkyNw=="}, "originalCommit": {"oid": "59b79b1db61bdee270640b39be2d892f9f07bd8a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjQ3NTQyOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-jpa-query-2/src/main/java/com/baeldung/spring/data/jpa/query/UserApplication.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjozNTowOFrOIMDQ7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQyMjoxNTowMlrOIMZdxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNzMwOA==", "bodyText": "Have you checked this is working? I am getting an error when trying to run this application>\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nThe bean 'articleRepository', defined in com.baeldung.spring.data.jpa.query.datetime.ArticleRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration, could not be registered. A bean with that name has already been defined in com.baeldung.spring.data.jpa.query.datetime.ArticleRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration and overriding is disabled.\n\nAction:\n\nConsider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true\n\nBesides, do we actually need it? I think we're showing all the functionality in the test, I don't see much use in declaring this application. I might be missing something, of course :)", "url": "https://github.com/eugenp/tutorials/pull/10336#discussion_r549507308", "createdAt": "2020-12-28T22:35:08Z", "author": {"login": "rozagerardo"}, "path": "persistence-modules/spring-data-jpa-query-2/src/main/java/com/baeldung/spring/data/jpa/query/UserApplication.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.baeldung.spring.data.jpa.query;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class UserApplication {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b79b1db61bdee270640b39be2d892f9f07bd8a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUxNzI1Ng==", "bodyText": "Yeah that's a good catch - the application interfered with a com.baeldung.spring.data.jpa.query.datetime sub package.\nI created a single common app for both.\nThe only reason for the SpringBootApplication I created is that I want to benefit from @DataJpaTest in the tests. Without the app in place we get the \"Unable to Find @SpringBootConfiguration ...\" error and we'd have to provide some config file anyway. I think the app is a bit cleaner approach. Especially it's now used by both tests - UserRepositoryIntegrationTest and ArticleRepositoryIntegrationTest.", "url": "https://github.com/eugenp/tutorials/pull/10336#discussion_r549517256", "createdAt": "2020-12-28T23:28:14Z", "author": {"login": "kwoyke"}, "path": "persistence-modules/spring-data-jpa-query-2/src/main/java/com/baeldung/spring/data/jpa/query/UserApplication.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.baeldung.spring.data.jpa.query;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class UserApplication {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNzMwOA=="}, "originalCommit": {"oid": "59b79b1db61bdee270640b39be2d892f9f07bd8a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUxNzQ1NQ==", "bodyText": "Just noticed we do have an article describing this issue :) See https://www.baeldung.com/spring-boot-unable-to-find-springbootconfiguration-with-datajpatest", "url": "https://github.com/eugenp/tutorials/pull/10336#discussion_r549517455", "createdAt": "2020-12-28T23:29:17Z", "author": {"login": "kwoyke"}, "path": "persistence-modules/spring-data-jpa-query-2/src/main/java/com/baeldung/spring/data/jpa/query/UserApplication.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.baeldung.spring.data.jpa.query;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class UserApplication {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNzMwOA=="}, "originalCommit": {"oid": "59b79b1db61bdee270640b39be2d892f9f07bd8a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3MTA0Nw==", "bodyText": "Cool, thanks for the info @kwoyke", "url": "https://github.com/eugenp/tutorials/pull/10336#discussion_r549871047", "createdAt": "2020-12-29T22:15:02Z", "author": {"login": "rozagerardo"}, "path": "persistence-modules/spring-data-jpa-query-2/src/main/java/com/baeldung/spring/data/jpa/query/UserApplication.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.baeldung.spring.data.jpa.query;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class UserApplication {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNzMwOA=="}, "originalCommit": {"oid": "59b79b1db61bdee270640b39be2d892f9f07bd8a"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4140, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}