{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMjg2MDg0", "number": 9815, "title": "BAEL-4431-jdbcmetadata: Article about extracting metadata using JDBC", "bodyText": "http://jira.baeldung.com/browse/BAEL-4431\nhttp://inprogress.baeldung.com/?p=222927&preview=true\nhttp://inprogress.baeldung.com/wp-admin/post.php?post=222927&action=edit&classic-editor&classic-editor__forget", "createdAt": "2020-08-03T16:49:21Z", "url": "https://github.com/eugenp/tutorials/pull/9815", "merged": true, "mergeCommit": {"oid": "076d6aa99a109708fca7859ad3abf3ca74a62374"}, "closed": true, "closedAt": "2020-08-13T13:37:47Z", "author": {"login": "sahilsingla112"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7U3xbAH2gAyNDYyMjg2MDg0OmJhNjgzMDU3ZmFmM2UwOWM1ZWMxY2JjNDE0NWFmMzI4M2M3Mzc0Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc87HE6AFqTQ2MzgxMTEwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ba683057faf3e09c5ec1cbc4145af3283c737467", "author": {"user": null}, "url": "https://github.com/eugenp/tutorials/commit/ba683057faf3e09c5ec1cbc4145af3283c737467", "committedDate": "2020-08-03T16:46:38Z", "message": "BAEL-4431-jdbcmetadata: Article about extracting metadata using JDBC"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzE1MjEz", "url": "https://github.com/eugenp/tutorials/pull/9815#pullrequestreview-461315213", "createdAt": "2020-08-05T03:31:48Z", "commit": {"oid": "ba683057faf3e09c5ec1cbc4145af3283c737467"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMzozMTo0OFrOG7439w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMzozNjozOVrOG748eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1MDk5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }catch (SQLException e){\n          \n          \n            \n                    } catch (SQLException e){", "url": "https://github.com/eugenp/tutorials/pull/9815#discussion_r465450999", "createdAt": "2020-08-05T03:31:48Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/core-java-persistence/src/main/java/com/baeldung/jdbcmetadata/JdbcMetadataApplication.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.baeldung.jdbcmetadata;\n+\n+import org.apache.log4j.Logger;\n+\n+import java.sql.SQLException;\n+\n+public class JdbcMetadataApplication {\n+\n+    private static final Logger LOG = Logger.getLogger(JdbcMetadataApplication.class);\n+\n+    public static void main(String[] args) {\n+        DatabaseConfig databaseConfig = new DatabaseConfig();\n+        databaseConfig.init();\n+        try {\n+            MetadataExtractor metadataExtractor = new MetadataExtractor(databaseConfig.getConnection());\n+            metadataExtractor.extractTableInfo();\n+            metadataExtractor.extractSystemTables();\n+            metadataExtractor.extractViews();\n+            String tableName = \"CUSTOMER\";\n+            metadataExtractor.extractColumnInfo(tableName);\n+            metadataExtractor.extractPrimaryKeys(tableName);\n+            metadataExtractor.extractForeignKeys(\"CUST_ADDRESS\");\n+            metadataExtractor.extractDatabaseInfo();\n+            metadataExtractor.extractUserName();\n+            metadataExtractor.extractSupportedFeatures();\n+        }catch (SQLException e){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba683057faf3e09c5ec1cbc4145af3283c737467"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1MTQyMw==", "bodyText": "This line is using tabs. Be sure to use the standard code formatter (available in the tutorials repo, under eclipse or intelliJ foder, depending on which IDE you're using)", "url": "https://github.com/eugenp/tutorials/pull/9815#discussion_r465451423", "createdAt": "2020-08-05T03:33:38Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/core-java-persistence/src/main/java/com/baeldung/jdbcmetadata/MetadataExtractor.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.baeldung.jdbcmetadata;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+public class MetadataExtractor {\n+\tprivate final DatabaseMetaData databaseMetaData;\n+\n+\tpublic MetadataExtractor(Connection connection) throws SQLException {\n+\t\tthis.databaseMetaData = connection.getMetaData();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba683057faf3e09c5ec1cbc4145af3283c737467"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1MTcyNg==", "bodyText": "Opening braces should be at the end of a line of code, not at the beginning of a line by itself. Several of the while statements are done like this.", "url": "https://github.com/eugenp/tutorials/pull/9815#discussion_r465451726", "createdAt": "2020-08-05T03:34:57Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/core-java-persistence/src/main/java/com/baeldung/jdbcmetadata/MetadataExtractor.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.baeldung.jdbcmetadata;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+public class MetadataExtractor {\n+\tprivate final DatabaseMetaData databaseMetaData;\n+\n+\tpublic MetadataExtractor(Connection connection) throws SQLException {\n+\t\tthis.databaseMetaData = connection.getMetaData();\n+        DatabaseMetaData databaseMetaData = connection.getMetaData();\n+\t}\n+\t\n+\tpublic void extractTableInfo() throws SQLException {\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, \"CUST%\", new String[]{\"TABLE\"});\n+        while(resultSet.next())\n+        {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba683057faf3e09c5ec1cbc4145af3283c737467"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1MTg1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    while(primaryKeys.next()){\n          \n          \n            \n                    while(primaryKeys.next()) {", "url": "https://github.com/eugenp/tutorials/pull/9815#discussion_r465451854", "createdAt": "2020-08-05T03:35:26Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/core-java-persistence/src/main/java/com/baeldung/jdbcmetadata/MetadataExtractor.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.baeldung.jdbcmetadata;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+public class MetadataExtractor {\n+\tprivate final DatabaseMetaData databaseMetaData;\n+\n+\tpublic MetadataExtractor(Connection connection) throws SQLException {\n+\t\tthis.databaseMetaData = connection.getMetaData();\n+        DatabaseMetaData databaseMetaData = connection.getMetaData();\n+\t}\n+\t\n+\tpublic void extractTableInfo() throws SQLException {\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, \"CUST%\", new String[]{\"TABLE\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of existing tables\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+            System.out.println(resultSet.getString(\"REMARKS\"));\n+        }\n+    }\n+\t\n+    public void extractSystemTables() throws SQLException{\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{\"SYSTEM TABLE\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of system tables\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+        }\n+    }\n+\n+    public void extractViews() throws SQLException{\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{\"VIEW\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of existing views\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+        }\n+    }\n+\n+    public void extractColumnInfo(String tableName) throws SQLException{\n+        ResultSet columns = databaseMetaData.getColumns(null,null, tableName, null);\n+\n+        while(columns.next())\n+        {\n+            String columnName = columns.getString(\"COLUMN_NAME\");\n+            String columnSize = columns.getString(\"COLUMN_SIZE\");\n+            String datatype = columns.getString(\"DATA_TYPE\");\n+            String isNullable = columns.getString(\"IS_NULLABLE\");\n+            String isAutoIncrement = columns.getString(\"IS_AUTOINCREMENT\");\n+            System.out.println(String.format(\"ColumnName: %s, columnSize: %s, datatype: %s, isColumnNullable: %s, isAutoIncrementEnabled: %s\", columnName, columnSize, datatype, isNullable, isAutoIncrement));\n+        }\n+    }\n+\n+    public void extractPrimaryKeys(String tableName) throws SQLException{\n+\t    ResultSet primaryKeys = databaseMetaData.getPrimaryKeys(null, null, tableName);\n+        while(primaryKeys.next()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba683057faf3e09c5ec1cbc4145af3283c737467"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1MTkyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    while(foreignKeys.next()){\n          \n          \n            \n                    while(foreignKeys.next()) {", "url": "https://github.com/eugenp/tutorials/pull/9815#discussion_r465451927", "createdAt": "2020-08-05T03:35:40Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/core-java-persistence/src/main/java/com/baeldung/jdbcmetadata/MetadataExtractor.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.baeldung.jdbcmetadata;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+public class MetadataExtractor {\n+\tprivate final DatabaseMetaData databaseMetaData;\n+\n+\tpublic MetadataExtractor(Connection connection) throws SQLException {\n+\t\tthis.databaseMetaData = connection.getMetaData();\n+        DatabaseMetaData databaseMetaData = connection.getMetaData();\n+\t}\n+\t\n+\tpublic void extractTableInfo() throws SQLException {\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, \"CUST%\", new String[]{\"TABLE\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of existing tables\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+            System.out.println(resultSet.getString(\"REMARKS\"));\n+        }\n+    }\n+\t\n+    public void extractSystemTables() throws SQLException{\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{\"SYSTEM TABLE\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of system tables\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+        }\n+    }\n+\n+    public void extractViews() throws SQLException{\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{\"VIEW\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of existing views\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+        }\n+    }\n+\n+    public void extractColumnInfo(String tableName) throws SQLException{\n+        ResultSet columns = databaseMetaData.getColumns(null,null, tableName, null);\n+\n+        while(columns.next())\n+        {\n+            String columnName = columns.getString(\"COLUMN_NAME\");\n+            String columnSize = columns.getString(\"COLUMN_SIZE\");\n+            String datatype = columns.getString(\"DATA_TYPE\");\n+            String isNullable = columns.getString(\"IS_NULLABLE\");\n+            String isAutoIncrement = columns.getString(\"IS_AUTOINCREMENT\");\n+            System.out.println(String.format(\"ColumnName: %s, columnSize: %s, datatype: %s, isColumnNullable: %s, isAutoIncrementEnabled: %s\", columnName, columnSize, datatype, isNullable, isAutoIncrement));\n+        }\n+    }\n+\n+    public void extractPrimaryKeys(String tableName) throws SQLException{\n+\t    ResultSet primaryKeys = databaseMetaData.getPrimaryKeys(null, null, tableName);\n+        while(primaryKeys.next()){\n+            String primaryKeyColumnName = primaryKeys.getString(\"COLUMN_NAME\");\n+            String primaryKeyName = primaryKeys.getString(\"PK_NAME\");\n+            System.out.println(String.format(\"columnName:%s, pkName:%s\", primaryKeyColumnName, primaryKeyName));\n+        }\n+    }\n+\n+    public void fun() throws SQLException{\n+\n+    }\n+\n+\n+    public void extractForeignKeys(String tableName) throws SQLException{\n+        ResultSet foreignKeys = databaseMetaData.getImportedKeys(null, null, tableName);\n+        while(foreignKeys.next()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba683057faf3e09c5ec1cbc4145af3283c737467"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1MjA1Mw==", "bodyText": "avoid the extra spaces", "url": "https://github.com/eugenp/tutorials/pull/9815#discussion_r465452053", "createdAt": "2020-08-05T03:36:14Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/core-java-persistence/src/main/java/com/baeldung/jdbcmetadata/MetadataExtractor.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.baeldung.jdbcmetadata;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+public class MetadataExtractor {\n+\tprivate final DatabaseMetaData databaseMetaData;\n+\n+\tpublic MetadataExtractor(Connection connection) throws SQLException {\n+\t\tthis.databaseMetaData = connection.getMetaData();\n+        DatabaseMetaData databaseMetaData = connection.getMetaData();\n+\t}\n+\t\n+\tpublic void extractTableInfo() throws SQLException {\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, \"CUST%\", new String[]{\"TABLE\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of existing tables\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+            System.out.println(resultSet.getString(\"REMARKS\"));\n+        }\n+    }\n+\t\n+    public void extractSystemTables() throws SQLException{\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{\"SYSTEM TABLE\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of system tables\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+        }\n+    }\n+\n+    public void extractViews() throws SQLException{\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{\"VIEW\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of existing views\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+        }\n+    }\n+\n+    public void extractColumnInfo(String tableName) throws SQLException{\n+        ResultSet columns = databaseMetaData.getColumns(null,null, tableName, null);\n+\n+        while(columns.next())\n+        {\n+            String columnName = columns.getString(\"COLUMN_NAME\");\n+            String columnSize = columns.getString(\"COLUMN_SIZE\");\n+            String datatype = columns.getString(\"DATA_TYPE\");\n+            String isNullable = columns.getString(\"IS_NULLABLE\");\n+            String isAutoIncrement = columns.getString(\"IS_AUTOINCREMENT\");\n+            System.out.println(String.format(\"ColumnName: %s, columnSize: %s, datatype: %s, isColumnNullable: %s, isAutoIncrementEnabled: %s\", columnName, columnSize, datatype, isNullable, isAutoIncrement));\n+        }\n+    }\n+\n+    public void extractPrimaryKeys(String tableName) throws SQLException{\n+\t    ResultSet primaryKeys = databaseMetaData.getPrimaryKeys(null, null, tableName);\n+        while(primaryKeys.next()){\n+            String primaryKeyColumnName = primaryKeys.getString(\"COLUMN_NAME\");\n+            String primaryKeyName = primaryKeys.getString(\"PK_NAME\");\n+            System.out.println(String.format(\"columnName:%s, pkName:%s\", primaryKeyColumnName, primaryKeyName));\n+        }\n+    }\n+\n+    public void fun() throws SQLException{\n+\n+    }\n+\n+\n+    public void extractForeignKeys(String tableName) throws SQLException{\n+        ResultSet foreignKeys = databaseMetaData.getImportedKeys(null, null, tableName);\n+        while(foreignKeys.next()){\n+            String pkTableName = foreignKeys.getString(\"PKTABLE_NAME\");\n+            String fkTableName = foreignKeys.getString(\"FKTABLE_NAME\");\n+            String pkColumnName = foreignKeys.getString(\"PKCOLUMN_NAME\");\n+            String fkColumnName = foreignKeys.getString(\"FKCOLUMN_NAME\");\n+            System.out.println(String.format(\"pkTableName:%s, fkTableName:%s, pkColumnName:%s, fkColumnName:%s\", pkTableName, fkTableName, pkColumnName, fkColumnName));\n+        }\n+    }\n+\n+    public void extractDatabaseInfo() throws SQLException{\n+        String productName    = databaseMetaData.getDatabaseProductName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba683057faf3e09c5ec1cbc4145af3283c737467"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1MjA5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    while (schemas.next()){\n          \n          \n            \n                    while (schemas.next()) {", "url": "https://github.com/eugenp/tutorials/pull/9815#discussion_r465452099", "createdAt": "2020-08-05T03:36:26Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/core-java-persistence/src/main/java/com/baeldung/jdbcmetadata/MetadataExtractor.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.baeldung.jdbcmetadata;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+public class MetadataExtractor {\n+\tprivate final DatabaseMetaData databaseMetaData;\n+\n+\tpublic MetadataExtractor(Connection connection) throws SQLException {\n+\t\tthis.databaseMetaData = connection.getMetaData();\n+        DatabaseMetaData databaseMetaData = connection.getMetaData();\n+\t}\n+\t\n+\tpublic void extractTableInfo() throws SQLException {\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, \"CUST%\", new String[]{\"TABLE\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of existing tables\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+            System.out.println(resultSet.getString(\"REMARKS\"));\n+        }\n+    }\n+\t\n+    public void extractSystemTables() throws SQLException{\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{\"SYSTEM TABLE\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of system tables\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+        }\n+    }\n+\n+    public void extractViews() throws SQLException{\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{\"VIEW\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of existing views\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+        }\n+    }\n+\n+    public void extractColumnInfo(String tableName) throws SQLException{\n+        ResultSet columns = databaseMetaData.getColumns(null,null, tableName, null);\n+\n+        while(columns.next())\n+        {\n+            String columnName = columns.getString(\"COLUMN_NAME\");\n+            String columnSize = columns.getString(\"COLUMN_SIZE\");\n+            String datatype = columns.getString(\"DATA_TYPE\");\n+            String isNullable = columns.getString(\"IS_NULLABLE\");\n+            String isAutoIncrement = columns.getString(\"IS_AUTOINCREMENT\");\n+            System.out.println(String.format(\"ColumnName: %s, columnSize: %s, datatype: %s, isColumnNullable: %s, isAutoIncrementEnabled: %s\", columnName, columnSize, datatype, isNullable, isAutoIncrement));\n+        }\n+    }\n+\n+    public void extractPrimaryKeys(String tableName) throws SQLException{\n+\t    ResultSet primaryKeys = databaseMetaData.getPrimaryKeys(null, null, tableName);\n+        while(primaryKeys.next()){\n+            String primaryKeyColumnName = primaryKeys.getString(\"COLUMN_NAME\");\n+            String primaryKeyName = primaryKeys.getString(\"PK_NAME\");\n+            System.out.println(String.format(\"columnName:%s, pkName:%s\", primaryKeyColumnName, primaryKeyName));\n+        }\n+    }\n+\n+    public void fun() throws SQLException{\n+\n+    }\n+\n+\n+    public void extractForeignKeys(String tableName) throws SQLException{\n+        ResultSet foreignKeys = databaseMetaData.getImportedKeys(null, null, tableName);\n+        while(foreignKeys.next()){\n+            String pkTableName = foreignKeys.getString(\"PKTABLE_NAME\");\n+            String fkTableName = foreignKeys.getString(\"FKTABLE_NAME\");\n+            String pkColumnName = foreignKeys.getString(\"PKCOLUMN_NAME\");\n+            String fkColumnName = foreignKeys.getString(\"FKCOLUMN_NAME\");\n+            System.out.println(String.format(\"pkTableName:%s, fkTableName:%s, pkColumnName:%s, fkColumnName:%s\", pkTableName, fkTableName, pkColumnName, fkColumnName));\n+        }\n+    }\n+\n+    public void extractDatabaseInfo() throws SQLException{\n+        String productName    = databaseMetaData.getDatabaseProductName();\n+        String productVersion = databaseMetaData.getDatabaseProductVersion();\n+\n+        String driverName = databaseMetaData.getDriverName();\n+        String driverVersion = databaseMetaData.getDriverVersion();\n+\n+        System.out.println(String.format(\"Product name:%s, Product version:%s\", productName, productVersion));\n+        System.out.println(String.format(\"Driver name:%s, Driver Version:%s\", driverName, driverVersion));\n+    }\n+\n+    public void extractUserName() throws SQLException{\n+        String userName = databaseMetaData.getUserName();\n+        System.out.println(userName);\n+        ResultSet schemas = databaseMetaData.getSchemas();\n+        while (schemas.next()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba683057faf3e09c5ec1cbc4145af3283c737467"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1MjE1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void extractSupportedFeatures() throws SQLException{\n          \n          \n            \n                public void extractSupportedFeatures() throws SQLException {", "url": "https://github.com/eugenp/tutorials/pull/9815#discussion_r465452154", "createdAt": "2020-08-05T03:36:39Z", "author": {"login": "KevinGilmore"}, "path": "persistence-modules/core-java-persistence/src/main/java/com/baeldung/jdbcmetadata/MetadataExtractor.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.baeldung.jdbcmetadata;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+public class MetadataExtractor {\n+\tprivate final DatabaseMetaData databaseMetaData;\n+\n+\tpublic MetadataExtractor(Connection connection) throws SQLException {\n+\t\tthis.databaseMetaData = connection.getMetaData();\n+        DatabaseMetaData databaseMetaData = connection.getMetaData();\n+\t}\n+\t\n+\tpublic void extractTableInfo() throws SQLException {\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, \"CUST%\", new String[]{\"TABLE\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of existing tables\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+            System.out.println(resultSet.getString(\"REMARKS\"));\n+        }\n+    }\n+\t\n+    public void extractSystemTables() throws SQLException{\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{\"SYSTEM TABLE\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of system tables\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+        }\n+    }\n+\n+    public void extractViews() throws SQLException{\n+        ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{\"VIEW\"});\n+        while(resultSet.next())\n+        {\n+            // Print the names of existing views\n+            System.out.println(resultSet.getString(\"TABLE_NAME\"));\n+        }\n+    }\n+\n+    public void extractColumnInfo(String tableName) throws SQLException{\n+        ResultSet columns = databaseMetaData.getColumns(null,null, tableName, null);\n+\n+        while(columns.next())\n+        {\n+            String columnName = columns.getString(\"COLUMN_NAME\");\n+            String columnSize = columns.getString(\"COLUMN_SIZE\");\n+            String datatype = columns.getString(\"DATA_TYPE\");\n+            String isNullable = columns.getString(\"IS_NULLABLE\");\n+            String isAutoIncrement = columns.getString(\"IS_AUTOINCREMENT\");\n+            System.out.println(String.format(\"ColumnName: %s, columnSize: %s, datatype: %s, isColumnNullable: %s, isAutoIncrementEnabled: %s\", columnName, columnSize, datatype, isNullable, isAutoIncrement));\n+        }\n+    }\n+\n+    public void extractPrimaryKeys(String tableName) throws SQLException{\n+\t    ResultSet primaryKeys = databaseMetaData.getPrimaryKeys(null, null, tableName);\n+        while(primaryKeys.next()){\n+            String primaryKeyColumnName = primaryKeys.getString(\"COLUMN_NAME\");\n+            String primaryKeyName = primaryKeys.getString(\"PK_NAME\");\n+            System.out.println(String.format(\"columnName:%s, pkName:%s\", primaryKeyColumnName, primaryKeyName));\n+        }\n+    }\n+\n+    public void fun() throws SQLException{\n+\n+    }\n+\n+\n+    public void extractForeignKeys(String tableName) throws SQLException{\n+        ResultSet foreignKeys = databaseMetaData.getImportedKeys(null, null, tableName);\n+        while(foreignKeys.next()){\n+            String pkTableName = foreignKeys.getString(\"PKTABLE_NAME\");\n+            String fkTableName = foreignKeys.getString(\"FKTABLE_NAME\");\n+            String pkColumnName = foreignKeys.getString(\"PKCOLUMN_NAME\");\n+            String fkColumnName = foreignKeys.getString(\"FKCOLUMN_NAME\");\n+            System.out.println(String.format(\"pkTableName:%s, fkTableName:%s, pkColumnName:%s, fkColumnName:%s\", pkTableName, fkTableName, pkColumnName, fkColumnName));\n+        }\n+    }\n+\n+    public void extractDatabaseInfo() throws SQLException{\n+        String productName    = databaseMetaData.getDatabaseProductName();\n+        String productVersion = databaseMetaData.getDatabaseProductVersion();\n+\n+        String driverName = databaseMetaData.getDriverName();\n+        String driverVersion = databaseMetaData.getDriverVersion();\n+\n+        System.out.println(String.format(\"Product name:%s, Product version:%s\", productName, productVersion));\n+        System.out.println(String.format(\"Driver name:%s, Driver Version:%s\", driverName, driverVersion));\n+    }\n+\n+    public void extractUserName() throws SQLException{\n+        String userName = databaseMetaData.getUserName();\n+        System.out.println(userName);\n+        ResultSet schemas = databaseMetaData.getSchemas();\n+        while (schemas.next()){\n+            String table_schem = schemas.getString(\"TABLE_SCHEM\");\n+            String table_catalog = schemas.getString(\"TABLE_CATALOG\");\n+            System.out.println(String.format(\"Table_schema:%s, Table_catalog:%s\", table_schem, table_catalog));\n+        }\n+    }\n+\n+    public void extractSupportedFeatures() throws SQLException{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba683057faf3e09c5ec1cbc4145af3283c737467"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "409305d8179d14c0876a0918d8cfa233ad3833da", "author": {"user": null}, "url": "https://github.com/eugenp/tutorials/commit/409305d8179d14c0876a0918d8cfa233ad3833da", "committedDate": "2020-08-08T08:04:52Z", "message": "BAEL-4431-jdbcmetadata: Review comments, fixed formatting issues by using the recommended intelij formatter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODExMTAy", "url": "https://github.com/eugenp/tutorials/pull/9815#pullrequestreview-463811102", "createdAt": "2020-08-08T15:53:40Z", "commit": {"oid": "409305d8179d14c0876a0918d8cfa233ad3833da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4311, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}