{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMDQ2NzM3", "number": 9621, "title": "[BAEL-4281] Examples of array comparisons", "bodyText": "", "createdAt": "2020-06-30T13:53:42Z", "url": "https://github.com/eugenp/tutorials/pull/9621", "merged": true, "mergeCommit": {"oid": "e727b34e207beae085153d6f679c581a859e57d3"}, "closed": true, "closedAt": "2020-07-31T14:16:15Z", "author": {"login": "jesperancinha"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwWEAWAH2gAyNDQyMDQ2NzM3OmZlZmQ3MTcyYTJkZGZmMzM1NmE2YzM3YzFiYjM4YjRlYmMzMTM3NGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6UL5RgFqTQ1OTE3MDM3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a", "author": {"user": {"login": "jesperancinha", "name": "Jo\u00e3o Filipe Sabino Esperancinha"}}, "url": "https://github.com/eugenp/tutorials/commit/fefd7172a2ddff3356a6c37c1bb38b4ebc31374a", "committedDate": "2020-06-30T13:56:44Z", "message": "[BAEL-4281] Examples of array comparisons"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMjY5NTE3", "url": "https://github.com/eugenp/tutorials/pull/9621#pullrequestreview-450269517", "createdAt": "2020-07-16T22:55:02Z", "commit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMjo1NTowMlrOGy_hjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMTo1MzoyMlrOGzCq6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyMjc2NA==", "bodyText": "We have an existing module that would be a better fit: core-java-modules/core-java-arrays-operations-advanced", "url": "https://github.com/eugenp/tutorials/pull/9621#discussion_r456122764", "createdAt": "2020-07-16T22:55:02Z", "author": {"login": "KevinGilmore"}, "path": "java-collections/README.md", "diffHunk": "@@ -0,0 +1,8 @@\n+## Java Collections Examples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyMzMxMg==", "bodyText": "Obviously we won't need a pom.xml since we're going to move the code to an existing module. We should also use assertj if possible instead of hamcrest. The assertj assertions are fluent and thus easier to read.", "url": "https://github.com/eugenp/tutorials/pull/9621#discussion_r456123312", "createdAt": "2020-07-16T22:56:45Z", "author": {"login": "KevinGilmore"}, "path": "java-collections/pom.xml", "diffHunk": "@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>java-collections</artifactId>\n+    <version>0.1.0-SNAPSHOT</version>\n+    <name>java-collections</name>\n+    <packaging>jar</packaging>\n+\n+    <parent>\n+        <groupId>com.baeldung</groupId>\n+        <artifactId>parent-java</artifactId>\n+        <version>0.0.1-SNAPSHOT</version>\n+        <relativePath>../parent-java</relativePath>\n+    </parent>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.commons</groupId>\n+            <artifactId>commons-collections4</artifactId>\n+            <version>${commons-collections4.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.commons</groupId>\n+            <artifactId>commons-lang3</artifactId>\n+            <version>${commons-lang3.version}</version>\n+        </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyMzQ0Mw==", "bodyText": "remove blank line", "url": "https://github.com/eugenp/tutorials/pull/9621#discussion_r456123443", "createdAt": "2020-07-16T22:57:07Z", "author": {"login": "KevinGilmore"}, "path": "java-collections/src/main/java/com/baeldung/comparingarrays/Plane.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.comparingarrays;\n+\n+import java.util.Objects;\n+\n+public class Plane {\n+\n+    private final String name;\n+\n+    private final String model;\n+\n+    public Plane(String name, String model) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyMzk5Ng==", "bodyText": "When we move the code to the other module, we should also put all the tests in the same package as the Plane class.", "url": "https://github.com/eugenp/tutorials/pull/9621#discussion_r456123996", "createdAt": "2020-07-16T22:58:44Z", "author": {"login": "KevinGilmore"}, "path": "java-collections/src/test/java/com/baeldung/DeepEqualsCompareUnitTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyNTAxMg==", "bodyText": "When naming the tests, keep in mind what the different parts of the name mean. The \"given\" is for preconditions or saying what the input is. The \"when\" is for describing the behavior being tested. The \"then\" is to describe the expected result. Thus, an appropriate name for this method would be givenSameContents_whenDeepEquals_thenTrue. Rename the other tests according to this pattern as well.", "url": "https://github.com/eugenp/tutorials/pull/9621#discussion_r456125012", "createdAt": "2020-07-16T23:01:50Z", "author": {"login": "KevinGilmore"}, "path": "java-collections/src/test/java/com/baeldung/DeepEqualsCompareUnitTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung;\n+\n+import com.baeldung.comparingarrays.Plane;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class DeepEqualsCompareUnitTest {\n+\n+    @Test\n+    public void givenArray1andArray2_whenSameContent_thenDeepEquals() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyNTY3OQ==", "bodyText": "Just use a single call: assertTrue(Arrays.deepEquals(planes1, planes2)", "url": "https://github.com/eugenp/tutorials/pull/9621#discussion_r456125679", "createdAt": "2020-07-16T23:04:00Z", "author": {"login": "KevinGilmore"}, "path": "java-collections/src/test/java/com/baeldung/DeepEqualsCompareUnitTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung;\n+\n+import com.baeldung.comparingarrays.Plane;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class DeepEqualsCompareUnitTest {\n+\n+    @Test\n+    public void givenArray1andArray2_whenSameContent_thenDeepEquals() {\n+        final Plane[][] planes1 = new Plane[][] { new Plane[] { new Plane(\"Plane 1\", \"A320\") },\n+            new Plane[] { new Plane(\"Plane 2\", \"B738\") } };\n+        final Plane[][] planes2 = new Plane[][] { new Plane[] { new Plane(\"Plane 1\", \"A320\") },\n+            new Plane[] { new Plane(\"Plane 2\", \"B738\") } };\n+\n+        boolean result = Arrays.deepEquals(planes1, planes2);\n+        assertTrue(\"Result is not true\", result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3NDA2Mg==", "bodyText": "Again, no need to create a variable -- put the expression in the assertion", "url": "https://github.com/eugenp/tutorials/pull/9621#discussion_r456174062", "createdAt": "2020-07-17T01:52:23Z", "author": {"login": "KevinGilmore"}, "path": "java-collections/src/test/java/com/baeldung/DeepEqualsCompareUnitTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung;\n+\n+import com.baeldung.comparingarrays.Plane;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class DeepEqualsCompareUnitTest {\n+\n+    @Test\n+    public void givenArray1andArray2_whenSameContent_thenDeepEquals() {\n+        final Plane[][] planes1 = new Plane[][] { new Plane[] { new Plane(\"Plane 1\", \"A320\") },\n+            new Plane[] { new Plane(\"Plane 2\", \"B738\") } };\n+        final Plane[][] planes2 = new Plane[][] { new Plane[] { new Plane(\"Plane 1\", \"A320\") },\n+            new Plane[] { new Plane(\"Plane 2\", \"B738\") } };\n+\n+        boolean result = Arrays.deepEquals(planes1, planes2);\n+        assertTrue(\"Result is not true\", result);\n+    }\n+\n+    @Test\n+    public void givenArray1andArray2_whenNotSameContent_thenNotDeepEquals() {\n+        final Plane[][] planes1 = new Plane[][] { new Plane[] { new Plane(\"Plane 1\", \"A320\") },\n+            new Plane[] { new Plane(\"Plane 2\", \"B738\") } };\n+        final Plane[][] planes2 = new Plane[][] { new Plane[] { new Plane(\"Plane 2\", \"B738\") },\n+            new Plane[] { new Plane(\"Plane 1\", \"A320\") } };\n+\n+        boolean result = Arrays.deepEquals(planes1, planes2);\n+        assertFalse(\"Result is true\", result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3NDE5OQ==", "bodyText": "make this a one-liner also", "url": "https://github.com/eugenp/tutorials/pull/9621#discussion_r456174199", "createdAt": "2020-07-17T01:52:53Z", "author": {"login": "KevinGilmore"}, "path": "java-collections/src/test/java/com/baeldung/EqualsCompareUnitTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package com.baeldung;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class EqualsCompareUnitTest {\n+\n+    @Test\n+    public void givenArray1andArray2_whenSameContent_thenEquals() {\n+        final String[] planes1 = new String[] { \"A320\", \"B738\", \"A321\", \"A319\", \"B77W\", \"B737\", \"A333\", \"A332\" };\n+        final String[] planes2 = new String[] { \"A320\", \"B738\", \"A321\", \"A319\", \"B77W\", \"B737\", \"A333\", \"A332\" };\n+\n+        boolean result = Arrays.equals(planes1, planes2);\n+        assertTrue(\"Result is not true\", result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3NDIzNw==", "bodyText": "one-liner", "url": "https://github.com/eugenp/tutorials/pull/9621#discussion_r456174237", "createdAt": "2020-07-17T01:53:02Z", "author": {"login": "KevinGilmore"}, "path": "java-collections/src/test/java/com/baeldung/EqualsCompareUnitTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package com.baeldung;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class EqualsCompareUnitTest {\n+\n+    @Test\n+    public void givenArray1andArray2_whenSameContent_thenEquals() {\n+        final String[] planes1 = new String[] { \"A320\", \"B738\", \"A321\", \"A319\", \"B77W\", \"B737\", \"A333\", \"A332\" };\n+        final String[] planes2 = new String[] { \"A320\", \"B738\", \"A321\", \"A319\", \"B77W\", \"B737\", \"A333\", \"A332\" };\n+\n+        boolean result = Arrays.equals(planes1, planes2);\n+        assertTrue(\"Result is not true\", result);\n+    }\n+\n+    @Test\n+    public void givenArray1andArray2_whenSameContentOtherSort_thenNotEquals() {\n+        final String[] planes1 = new String[] { \"A320\", \"B738\", \"A321\", \"A319\", \"B77W\", \"B737\", \"A333\", \"A332\" };\n+        final String[] planes2 = new String[] { \"B738\", \"A320\", \"A321\", \"A319\", \"B77W\", \"B737\", \"A333\", \"A332\" };\n+\n+        boolean result = Arrays.equals(planes1, planes2);\n+        assertFalse(\"Result is true\", result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3NDMxMw==", "bodyText": "one-liner", "url": "https://github.com/eugenp/tutorials/pull/9621#discussion_r456174313", "createdAt": "2020-07-17T01:53:22Z", "author": {"login": "KevinGilmore"}, "path": "java-collections/src/test/java/com/baeldung/OrderCompareUnitTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung;\n+\n+import com.baeldung.comparingarrays.Plane;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Arrays;\n+import java.util.Comparator;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class OrderCompareUnitTest {\n+    @Test\n+    public void givenArray1andArray2_whenNotSameContent_thenNotDeepEquals() {\n+        final Plane[][] planes1 = new Plane[][] {\n+            new Plane[] { new Plane(\"Plane 1\", \"A320\"), new Plane(\"Plane 2\", \"B738\") } };\n+        final Plane[][] planes2 = new Plane[][] {\n+            new Plane[] { new Plane(\"Plane 2\", \"B738\"), new Plane(\"Plane 1\", \"A320\") } };\n+\n+        Comparator<Plane> planeComparator = (o1, o2) -> {\n+            if (o1.getName()\n+                .equals(o2.getName())) {\n+                return o2.getModel()\n+                    .compareTo(o1.getModel());\n+            }\n+            return o2.getName()\n+                .compareTo(o1.getName());\n+        };\n+        Arrays.sort(planes1[0], planeComparator);\n+        Arrays.sort(planes2[0], planeComparator);\n+\n+        boolean result = Arrays.deepEquals(planes1, planes2);\n+        assertTrue(\"Result is false\", result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fefd7172a2ddff3356a6c37c1bb38b4ebc31374a"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fc2f4358ebce4c791da63c0aca466733144c696", "author": {"user": {"login": "jesperancinha", "name": "Jo\u00e3o Filipe Sabino Esperancinha"}}, "url": "https://github.com/eugenp/tutorials/commit/1fc2f4358ebce4c791da63c0aca466733144c696", "committedDate": "2020-07-21T05:53:33Z", "message": "Revert \"[BAEL-4281] Examples of array comparisons\"\n\nThis reverts commit fefd7172a2ddff3356a6c37c1bb38b4ebc31374a."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9787fc6f0f6f1bba64652770aedb66dbf0efd7b0", "author": {"user": {"login": "jesperancinha", "name": "Jo\u00e3o Filipe Sabino Esperancinha"}}, "url": "https://github.com/eugenp/tutorials/commit/9787fc6f0f6f1bba64652770aedb66dbf0efd7b0", "committedDate": "2020-07-21T05:53:45Z", "message": "[BAEL-4281] moves example module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c22df76e94140c718a86ed97d0884a96ffedb1f7", "author": {"user": {"login": "jesperancinha", "name": "Jo\u00e3o Filipe Sabino Esperancinha"}}, "url": "https://github.com/eugenp/tutorials/commit/c22df76e94140c718a86ed97d0884a96ffedb1f7", "committedDate": "2020-07-21T05:53:52Z", "message": "[BAEL-4281] Naming convention and conversion to assertJ"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MTcwMzc1", "url": "https://github.com/eugenp/tutorials/pull/9621#pullrequestreview-459170375", "createdAt": "2020-07-31T13:24:47Z", "commit": {"oid": "c22df76e94140c718a86ed97d0884a96ffedb1f7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4362, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}