{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4ODE5NTMx", "number": 10285, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo0OToyNFrOFBROMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MTowOVrOFBRPAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODc1MDU3OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo0OToyNFrOH_8-LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo0OToyNFrOH_8-LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMTI5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenDotFileWithoutExt_whenCallGuavaMethod_thenCannotGetExpectResult() {\n          \n          \n            \n                public void givenDotFileWithoutExt_whenCallGuavaMethod_thenDoesNotGetDesiredResult() {", "url": "https://github.com/eugenp/tutorials/pull/10285#discussion_r536821292", "createdAt": "2020-12-05T16:49:24Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.filenamewithoutextension;\n+\n+import com.google.common.io.Files;\n+import org.apache.commons.io.FilenameUtils;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+public class FileNameDelExtensionUnitTest {\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallGuavaMethod_thenCannotGetExpectResult() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cbf00e344b986cd469e7d2bd1771300cfce929"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODc1MTE4OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo0OTo1NVrOH_8-bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo0OTo1NVrOH_8-bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMTM1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenDotFileWithoutExt_whenCallApacheCommonsMethod_thenCannotGetExpectResult() {\n          \n          \n            \n                public void givenDotFileWithoutExt_whenCallApacheCommonsMethod_thenDoesNotGetDesiredResult() {", "url": "https://github.com/eugenp/tutorials/pull/10285#discussion_r536821357", "createdAt": "2020-12-05T16:49:55Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.filenamewithoutextension;\n+\n+import com.google.common.io.Files;\n+import org.apache.commons.io.FilenameUtils;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+public class FileNameDelExtensionUnitTest {\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallGuavaMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", Files.getNameWithoutExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallApacheCommonsMethod_thenCannotGetExpectResult() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cbf00e344b986cd469e7d2bd1771300cfce929"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODc1MTY3OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MDoyMFrOH_8-pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MDoyMFrOH_8-pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMTQxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenFilenameNoExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n          \n          \n            \n                public void givenFilenameNoExt_whenCallFilenameUtilMethod_thenGetExpectedFilename() {", "url": "https://github.com/eugenp/tutorials/pull/10285#discussion_r536821413", "createdAt": "2020-12-05T16:50:20Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.filenamewithoutextension;\n+\n+import com.google.common.io.Files;\n+import org.apache.commons.io.FilenameUtils;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+public class FileNameDelExtensionUnitTest {\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallGuavaMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", Files.getNameWithoutExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallApacheCommonsMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", FilenameUtils.removeExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenFilenameNoExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cbf00e344b986cd469e7d2bd1771300cfce929"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODc1MTgzOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MDozMVrOH_8-uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MDozMVrOH_8-uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMTQzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenSingleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n          \n          \n            \n                public void givenSingleExt_whenCallFilenameUtilMethod_thenGetExpectedFilename() {", "url": "https://github.com/eugenp/tutorials/pull/10285#discussion_r536821432", "createdAt": "2020-12-05T16:50:31Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.filenamewithoutextension;\n+\n+import com.google.common.io.Files;\n+import org.apache.commons.io.FilenameUtils;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+public class FileNameDelExtensionUnitTest {\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallGuavaMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", Files.getNameWithoutExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallApacheCommonsMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", FilenameUtils.removeExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenFilenameNoExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung\", true));\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung\", false));\n+    }\n+\n+    @Test\n+    public void givenSingleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cbf00e344b986cd469e7d2bd1771300cfce929"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODc1MjA1OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MDo0MVrOH_8-0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MDo0MVrOH_8-0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMTQ1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenDotFile_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n          \n          \n            \n                public void givenDotFile_whenCallFilenameUtilMethod_thenGetExpectedFilename() {", "url": "https://github.com/eugenp/tutorials/pull/10285#discussion_r536821458", "createdAt": "2020-12-05T16:50:41Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.filenamewithoutextension;\n+\n+import com.google.common.io.Files;\n+import org.apache.commons.io.FilenameUtils;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+public class FileNameDelExtensionUnitTest {\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallGuavaMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", Files.getNameWithoutExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallApacheCommonsMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", FilenameUtils.removeExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenFilenameNoExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung\", true));\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung\", false));\n+    }\n+\n+    @Test\n+    public void givenSingleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung.txt\", true));\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung.txt\", false));\n+    }\n+\n+\n+    @Test\n+    public void givenDotFile_whenCallFilenameUtilMethod_thenGetExpectFilename() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cbf00e344b986cd469e7d2bd1771300cfce929"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODc1MjI5OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MDo1MFrOH_8-7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MDo1MFrOH_8-7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMTQ4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenDotFileWithExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n          \n          \n            \n                public void givenDotFileWithExt_whenCallFilenameUtilMethod_thenGetExpectedFilename() {", "url": "https://github.com/eugenp/tutorials/pull/10285#discussion_r536821484", "createdAt": "2020-12-05T16:50:50Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.filenamewithoutextension;\n+\n+import com.google.common.io.Files;\n+import org.apache.commons.io.FilenameUtils;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+public class FileNameDelExtensionUnitTest {\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallGuavaMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", Files.getNameWithoutExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallApacheCommonsMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", FilenameUtils.removeExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenFilenameNoExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung\", true));\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung\", false));\n+    }\n+\n+    @Test\n+    public void givenSingleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung.txt\", true));\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung.txt\", false));\n+    }\n+\n+\n+    @Test\n+    public void givenDotFile_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\".baeldung\", MyFilenameUtil.removeFileExtension(\".baeldung\", true));\n+        assertEquals(\".baeldung\", MyFilenameUtil.removeFileExtension(\".baeldung\", false));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cbf00e344b986cd469e7d2bd1771300cfce929"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODc1MjU5OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MDo1OVrOH_8_DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MDo1OVrOH_8_DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMTUxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenDoubleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n          \n          \n            \n                public void givenDoubleExt_whenCallFilenameUtilMethod_thenGetExpectedFilename() {", "url": "https://github.com/eugenp/tutorials/pull/10285#discussion_r536821517", "createdAt": "2020-12-05T16:50:59Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.filenamewithoutextension;\n+\n+import com.google.common.io.Files;\n+import org.apache.commons.io.FilenameUtils;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+public class FileNameDelExtensionUnitTest {\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallGuavaMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", Files.getNameWithoutExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallApacheCommonsMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", FilenameUtils.removeExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenFilenameNoExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung\", true));\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung\", false));\n+    }\n+\n+    @Test\n+    public void givenSingleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung.txt\", true));\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung.txt\", false));\n+    }\n+\n+\n+    @Test\n+    public void givenDotFile_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\".baeldung\", MyFilenameUtil.removeFileExtension(\".baeldung\", true));\n+        assertEquals(\".baeldung\", MyFilenameUtil.removeFileExtension(\".baeldung\", false));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\".baeldung\", MyFilenameUtil.removeFileExtension(\".baeldung.conf\", true));\n+        assertEquals(\".baeldung\", MyFilenameUtil.removeFileExtension(\".baeldung.conf\", false));\n+    }\n+\n+    @Test\n+    public void givenDoubleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cbf00e344b986cd469e7d2bd1771300cfce929"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODc1MjY3OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MTowOVrOH_8_GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjo1MTowOVrOH_8_GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMTUyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenDotFileWithDoubleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n          \n          \n            \n                public void givenDotFileWithDoubleExt_whenCallFilenameUtilMethod_thenGetExpectedFilename() {", "url": "https://github.com/eugenp/tutorials/pull/10285#discussion_r536821529", "createdAt": "2020-12-05T16:51:09Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-io-3/src/test/java/com/baeldung/filenamewithoutextension/FileNameDelExtensionUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.filenamewithoutextension;\n+\n+import com.google.common.io.Files;\n+import org.apache.commons.io.FilenameUtils;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+public class FileNameDelExtensionUnitTest {\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallGuavaMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", Files.getNameWithoutExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithoutExt_whenCallApacheCommonsMethod_thenCannotGetExpectResult() {\n+        //negative assertion\n+        assertNotEquals(\".baeldung\", FilenameUtils.removeExtension(\".baeldung\"));\n+    }\n+\n+    @Test\n+    public void givenFilenameNoExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung\", true));\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung\", false));\n+    }\n+\n+    @Test\n+    public void givenSingleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung.txt\", true));\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung.txt\", false));\n+    }\n+\n+\n+    @Test\n+    public void givenDotFile_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\".baeldung\", MyFilenameUtil.removeFileExtension(\".baeldung\", true));\n+        assertEquals(\".baeldung\", MyFilenameUtil.removeFileExtension(\".baeldung\", false));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\".baeldung\", MyFilenameUtil.removeFileExtension(\".baeldung.conf\", true));\n+        assertEquals(\".baeldung\", MyFilenameUtil.removeFileExtension(\".baeldung.conf\", false));\n+    }\n+\n+    @Test\n+    public void givenDoubleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {\n+        assertEquals(\"baeldung\", MyFilenameUtil.removeFileExtension(\"baeldung.tar.gz\", true));\n+        assertEquals(\"baeldung.tar\", MyFilenameUtil.removeFileExtension(\"baeldung.tar.gz\", false));\n+    }\n+\n+    @Test\n+    public void givenDotFileWithDoubleExt_whenCallFilenameUtilMethod_thenGetExpectFilename() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69cbf00e344b986cd469e7d2bd1771300cfce929"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4136, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}