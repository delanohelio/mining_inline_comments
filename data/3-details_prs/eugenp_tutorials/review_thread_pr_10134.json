{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NDUwNzg3", "number": 10134, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNTowMDo0N1rOEsSmAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoxNDoyM1rOExSp7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODc3NDQyOnYy", "diffSide": "RIGHT", "path": "spring-boot-modules/spring-boot-swagger-jwt/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNTowMDo0N1rOHfgcLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNTowMDo0N1rOHfgcLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5OTQwNQ==", "bodyText": "You can actually just leave this line out -- I'll add it back once the title and URL are finalized -- that is, when we publish.", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502799405", "createdAt": "2020-10-10T15:00:47Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/README.md", "diffHunk": "@@ -0,0 +1,3 @@\n+## Relevant Articles:\n+\n+- [Set JWT token with Spring Boot & Swagger UI](https://www.baeldung.com/set-jwt-token-with-spring-boot-swagger-ui/)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODc3NTgxOnYy", "diffSide": "RIGHT", "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNTowMjo0NVrOHfgc1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNTowMjo0NVrOHfgc1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5OTU3Mg==", "bodyText": "indent only two spaces from the previous line", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502799572", "createdAt": "2020-10-10T15:02:45Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.baeldung.swaggerjwt.configuration;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.*;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spi.service.contexts.SecurityContext;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    public static final String AUTHORIZATION_HEADER = \"Authorization\";\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\", \"Some custom description of API.\", \"1.0\", \"Terms of service\",\n+          new Contact(\"Sallo Szrajbman\", \"www.baeldung.com\", \"salloszraj@gmail.com\"),\n+          \"License of API\", \"API license URL\", Collections.emptyList());\n+    }\n+\n+    @Bean\n+    public Docket api() {\n+        return new Docket(DocumentationType.SWAGGER_2)\n+          .apiInfo(apiInfo())\n+          .securityContexts(Arrays.asList(securityContext()))\n+          .securitySchemes(Arrays.asList(apiKey()))\n+          .select()\n+          .apis(RequestHandlerSelectors.any())\n+          .paths(PathSelectors.any())\n+\n+          .build();\n+    }\n+\n+    private ApiKey apiKey() {\n+        return new ApiKey(\"JWT\", AUTHORIZATION_HEADER, \"header\");\n+    }\n+\n+    private SecurityContext securityContext() {\n+        return SecurityContext.builder()\n+                .securityReferences(defaultAuth())\n+                .build();\n+    }\n+\n+    List<SecurityReference> defaultAuth() {\n+        AuthorizationScope authorizationScope\n+                = new AuthorizationScope(\"global\", \"accessEverything\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODc3NjE5OnYy", "diffSide": "RIGHT", "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNTowMzoyNVrOHfgdAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNTowMzoyNVrOHfgdAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5OTYxNg==", "bodyText": "remove empty line", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502799616", "createdAt": "2020-10-10T15:03:25Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.baeldung.swaggerjwt.configuration;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.*;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spi.service.contexts.SecurityContext;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    public static final String AUTHORIZATION_HEADER = \"Authorization\";\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\", \"Some custom description of API.\", \"1.0\", \"Terms of service\",\n+          new Contact(\"Sallo Szrajbman\", \"www.baeldung.com\", \"salloszraj@gmail.com\"),\n+          \"License of API\", \"API license URL\", Collections.emptyList());\n+    }\n+\n+    @Bean\n+    public Docket api() {\n+        return new Docket(DocumentationType.SWAGGER_2)\n+          .apiInfo(apiInfo())\n+          .securityContexts(Arrays.asList(securityContext()))\n+          .securitySchemes(Arrays.asList(apiKey()))\n+          .select()\n+          .apis(RequestHandlerSelectors.any())\n+          .paths(PathSelectors.any())\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODc4OTExOnYy", "diffSide": "RIGHT", "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNToyMDoxNVrOHfgjFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxOToxNTo0MVrOHfh3fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgwMTE3NQ==", "bodyText": "For better readability, and as per guidelines, when all the parameters don't fit on one line (of reasonable length), put each parameter on a separate line, using two spaces to indent.", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502801175", "createdAt": "2020-10-10T15:20:15Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.baeldung.swaggerjwt.configuration;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.*;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spi.service.contexts.SecurityContext;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    public static final String AUTHORIZATION_HEADER = \"Authorization\";\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\", \"Some custom description of API.\", \"1.0\", \"Terms of service\",\n+          new Contact(\"Sallo Szrajbman\", \"www.baeldung.com\", \"salloszraj@gmail.com\"),\n+          \"License of API\", \"API license URL\", Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgyMjc4Mw==", "bodyText": "Hello kevin, I updated the identadion... Not sure I did it correctly... Could you please check in the last commit?", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502822783", "createdAt": "2020-10-10T19:15:41Z", "author": {"login": "saleco"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.baeldung.swaggerjwt.configuration;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.*;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spi.service.contexts.SecurityContext;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    public static final String AUTHORIZATION_HEADER = \"Authorization\";\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\", \"Some custom description of API.\", \"1.0\", \"Terms of service\",\n+          new Contact(\"Sallo Szrajbman\", \"www.baeldung.com\", \"salloszraj@gmail.com\"),\n+          \"License of API\", \"API license URL\", Collections.emptyList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgwMTE3NQ=="}, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODkzNDg2OnYy", "diffSide": "RIGHT", "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/controller/ClientsRestController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxODozMzozMFrOHfhnzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxODozMzozMFrOHfhnzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODc2NQ==", "bodyText": "Let's avoid the println.", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r502818765", "createdAt": "2020-10-10T18:33:30Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/controller/ClientsRestController.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.baeldung.swaggerjwt.controller;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import com.baeldung.swaggerjwt.configuration.SwaggerConfiguration;\n+import io.swagger.annotations.Api;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import io.swagger.annotations.ApiOperation;\n+\n+@RestController(value = \"/clients\")\n+@Api( tags = \"Clients\")\n+public class ClientsRestController {\n+\n+    @ApiOperation(value = \"This method is used to get the clients.\")\n+    @GetMapping\n+    public List<String> getClients(@RequestHeader HttpHeaders httpHeaders) {\n+        System.out.println(\"JWT TOKEN: \" + httpHeaders.getFirst(SwaggerConfiguration.AUTHORIZATION_HEADER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293432571e9863b269c9cc8babb0efa6257a3c7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTMzNTcyOnYy", "diffSide": "RIGHT", "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxMTo0OVrOHhAkUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTo1OToxMlrOHhLg9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NDM1Mg==", "bodyText": "The new Contact(...) can still be on one line; it's just the lengthy list of parameters passed to the ApiInfo constructor that won't fit on one line and need to be broken up.", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r504374352", "createdAt": "2020-10-14T03:11:49Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.baeldung.swaggerjwt.configuration;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.*;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spi.service.contexts.SecurityContext;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    public static final String AUTHORIZATION_HEADER = \"Authorization\";\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\",\n+\t\t  \"Some custom description of API.\",\n+\t\t  \"1.0\",\n+\t\t  \"Terms of service\",\n+\t\t  new Contact(\"Sallo Szrajbman\",\n+\t\t    \"www.baeldung.com\",\n+\t\t    \"salloszraj@gmail.com\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8975def8cd604dda0e3a92d03f74428236e6ac1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1MzcxOQ==", "bodyText": "Thanks for the heads up! It's now fixed.", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r504553719", "createdAt": "2020-10-14T09:59:12Z", "author": {"login": "saleco"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/configuration/SwaggerConfiguration.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.baeldung.swaggerjwt.configuration;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.service.*;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spi.service.contexts.SecurityContext;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Configuration\n+public class SwaggerConfiguration {\n+\n+    public static final String AUTHORIZATION_HEADER = \"Authorization\";\n+\n+    private ApiInfo apiInfo() {\n+        return new ApiInfo(\"My REST API\",\n+\t\t  \"Some custom description of API.\",\n+\t\t  \"1.0\",\n+\t\t  \"Terms of service\",\n+\t\t  new Contact(\"Sallo Szrajbman\",\n+\t\t    \"www.baeldung.com\",\n+\t\t    \"salloszraj@gmail.com\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NDM1Mg=="}, "originalCommit": {"oid": "d8975def8cd604dda0e3a92d03f74428236e6ac1"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTIxMzI1OnYy", "diffSide": "RIGHT", "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/controller/ClientsRestController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoxNDoyM1rOHnWhrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoxNDoyM1rOHnWhrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyNTU4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Arrays.asList(\"Fisrt Client\", \"Second Client\");\n          \n          \n            \n                    return Arrays.asList(\"First Client\", \"Second Client\");", "url": "https://github.com/eugenp/tutorials/pull/10134#discussion_r511025580", "createdAt": "2020-10-23T17:14:23Z", "author": {"login": "KevinGilmore"}, "path": "spring-boot-modules/spring-boot-swagger-jwt/src/main/java/com/baeldung/swaggerjwt/controller/ClientsRestController.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.baeldung.swaggerjwt.controller;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import com.baeldung.swaggerjwt.configuration.SwaggerConfiguration;\n+import io.swagger.annotations.Api;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import io.swagger.annotations.ApiOperation;\n+\n+@RestController(value = \"/clients\")\n+@Api( tags = \"Clients\")\n+public class ClientsRestController {\n+\n+    @ApiOperation(value = \"This method is used to get the clients.\")\n+    @GetMapping\n+    public List<String> getClients() {\n+        return Arrays.asList(\"Fisrt Client\", \"Second Client\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dad0f85bc862afd7bef77f8e5000f1a1ff4744c2"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4150, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}