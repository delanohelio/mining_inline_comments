{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MjI0Mjc5", "number": 10232, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDoxMjoxMFrOE273BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDoxMjoxMFrOE273BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM5MzAwOnYy", "diffSide": "RIGHT", "path": "spring-boot-modules/spring-boot-jackson/src/main/java/com/baeldung/boot/jackson/config/CoffeeConfiguration.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDoxMjoxMFrOHv_10A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo0MzowMVrOH65lMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA5MTA4OA==", "bodyText": "The indentation here should be 4 spaces not 8. This applies throughout the whole PR.", "url": "https://github.com/eugenp/tutorials/pull/10232#discussion_r520091088", "createdAt": "2020-11-09T20:12:10Z", "author": {"login": "JonCook"}, "path": "spring-boot-modules/spring-boot-jackson/src/main/java/com/baeldung/boot/jackson/config/CoffeeConfiguration.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.boot.jackson.config;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.Module;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n+import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;\n+import org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;\n+import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;\n+\n+import java.time.format.DateTimeFormatter;\n+\n+@Configuration\n+public class CoffeeConfiguration {\n+    public static final String dateTimeFormat = \"dd-MM-yyyy HH:mm\";\n+    private LocalDateTimeSerializer localDateTimeSerializer = new LocalDateTimeSerializer(DateTimeFormatter.ofPattern(dateTimeFormat));\n+\n+    @Bean\n+    public MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter() {\n+        Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder()\n+                .serializers(localDateTimeSerializer)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35d2db190cb9d338d176b1da1bda4a2f851b7c2b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIyMTQxOQ==", "bodyText": "I am not sure what do you want to say, I am using IntelIJ with Eclipse keymap.\nBefore public method we have 4 spaces.", "url": "https://github.com/eugenp/tutorials/pull/10232#discussion_r524221419", "createdAt": "2020-11-16T12:31:01Z", "author": {"login": "adinarolea"}, "path": "spring-boot-modules/spring-boot-jackson/src/main/java/com/baeldung/boot/jackson/config/CoffeeConfiguration.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.boot.jackson.config;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.Module;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n+import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;\n+import org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;\n+import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;\n+\n+import java.time.format.DateTimeFormatter;\n+\n+@Configuration\n+public class CoffeeConfiguration {\n+    public static final String dateTimeFormat = \"dd-MM-yyyy HH:mm\";\n+    private LocalDateTimeSerializer localDateTimeSerializer = new LocalDateTimeSerializer(DateTimeFormatter.ofPattern(dateTimeFormat));\n+\n+    @Bean\n+    public MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter() {\n+        Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder()\n+                .serializers(localDateTimeSerializer)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA5MTA4OA=="}, "originalCommit": {"oid": "35d2db190cb9d338d176b1da1bda4a2f851b7c2b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMjg2Ng==", "bodyText": "It is the second line of the indentation which is wrong. In this case it should be:\n@Configuration\npublic class CoffeeHttpConverterConfiguration {\n\n    @Bean\n    public MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter() {\n        Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder()\n            .serializers(localDateTimeSerializer)\n            .serializationInclusion(JsonInclude.Include.NON_NULL);\n        return new MappingJackson2HttpMessageConverter(builder.build());\n    }\n}\n\nLikewise for your controller and I think most of the classes:\n@RestController\npublic class CoffeeController {\n\n    @GetMapping(\"/coffee\")\n    public Coffee getCoffee(@RequestParam(required = false) String brand, @RequestParam(required = false) String name) {\n        return new Coffee().setBrand(brand)\n            .setDate(LocalDateTime.now())\n            .setName(name);\n    }\n}\n\nIf you want to break the method signature across two lines, it is OK.\nI don't understand what you mean by \" I am using IntelIJ with Eclipse keymap.\"\nYou can use our eclipse of IntelliJ formatter directly I think:\n\nhttps://github.com/eugenp/tutorials/blob/master/eclipse/formatter.xml\nhttps://github.com/eugenp/tutorials/blob/master/intelliJ/intelliJ-formatter.xml", "url": "https://github.com/eugenp/tutorials/pull/10232#discussion_r531522866", "createdAt": "2020-11-27T10:43:01Z", "author": {"login": "JonCook"}, "path": "spring-boot-modules/spring-boot-jackson/src/main/java/com/baeldung/boot/jackson/config/CoffeeConfiguration.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.boot.jackson.config;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.Module;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n+import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;\n+import org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;\n+import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;\n+\n+import java.time.format.DateTimeFormatter;\n+\n+@Configuration\n+public class CoffeeConfiguration {\n+    public static final String dateTimeFormat = \"dd-MM-yyyy HH:mm\";\n+    private LocalDateTimeSerializer localDateTimeSerializer = new LocalDateTimeSerializer(DateTimeFormatter.ofPattern(dateTimeFormat));\n+\n+    @Bean\n+    public MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter() {\n+        Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder()\n+                .serializers(localDateTimeSerializer)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA5MTA4OA=="}, "originalCommit": {"oid": "35d2db190cb9d338d176b1da1bda4a2f851b7c2b"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4109, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}