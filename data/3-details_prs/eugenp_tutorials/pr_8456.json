{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NDkyMjcx", "number": 8456, "title": "Bael 3596 asynchronous method calls in java", "bodyText": "", "createdAt": "2020-01-01T14:18:44Z", "url": "https://github.com/eugenp/tutorials/pull/8456", "merged": true, "mergeCommit": {"oid": "6ff4e499849d042591254f7e10c278d1d3d7bfb5"}, "closed": true, "closedAt": "2020-01-11T02:13:04Z", "author": {"login": "SmartyAnsh"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABbx19dZgH2gAyMzU4NDkyMjcxOmFjMjhiMWZmMTBkOTc1NWVmZDVmNTQzMjIwNjEzOTk4YWU0YmVmNjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4mrtCgH2gAyMzU4NDkyMjcxOjY0N2NlZjJlYzc4YTQ5ZGMwZmQwYzUyOWU2MWIyNzE1ZTU1ZTE0ZjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ac28b1ff10d9755efd5f543220613998ae4bef66", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/ac28b1ff10d9755efd5f543220613998ae4bef66", "committedDate": "2019-12-19T09:29:19Z", "message": "Initial Commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "363924a9db9ea63e11876d62752372d7d831ca44", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/363924a9db9ea63e11876d62752372d7d831ca44", "committedDate": "2020-01-01T14:00:57Z", "message": "BAEL-3596 -\tAsynchronous Method Calls in Java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af6ed25661b51af5ddfd2c09a2b0736254d88fd1", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/af6ed25661b51af5ddfd2c09a2b0736254d88fd1", "committedDate": "2020-01-01T14:04:42Z", "message": "space instead of tab"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd9d8e7d7a1d12cf0bbfdaeef2625c90fda0e88f", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/fd9d8e7d7a1d12cf0bbfdaeef2625c90fda0e88f", "committedDate": "2020-01-01T14:14:06Z", "message": "added java-async to the pom.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4ae00f89d95347187556cf6f8e09789b7c256a2", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/a4ae00f89d95347187556cf6f8e09789b7c256a2", "committedDate": "2020-01-01T14:16:58Z", "message": "Merge branch 'BAEL-3596_Asynchronous_Method_Calls_in_Java' of https://github.com/SmartyAnsh/tutorials into BAEL-3596_Asynchronous_Method_Calls_in_Java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "376da8c5fe741cbebe42bc4ee4ad9c1779de9a79", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/376da8c5fe741cbebe42bc4ee4ad9c1779de9a79", "committedDate": "2020-01-01T14:17:46Z", "message": "code indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eb71d635261664e6b5a866db8239a32a85bb709", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/6eb71d635261664e6b5a866db8239a32a85bb709", "committedDate": "2020-01-01T14:19:37Z", "message": "Update pom.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98d6761182609841809a7fd6b14ed923ebd8498e", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/98d6761182609841809a7fd6b14ed923ebd8498e", "committedDate": "2020-01-03T11:56:41Z", "message": "Merge branch 'master' into BAEL-3596_Asynchronous_Method_Calls_in_Java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68f1d6a31f7af7bac3242d0087248f0a5b56561e", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/68f1d6a31f7af7bac3242d0087248f0a5b56561e", "committedDate": "2020-01-03T12:05:06Z", "message": "resolved conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31daaa0d3c8e310b3cba5ba2c6c7d9afb065af79", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/31daaa0d3c8e310b3cba5ba2c6c7d9afb065af79", "committedDate": "2020-01-03T12:06:34Z", "message": "resolved conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "654bb1f934fef5a3427a4cd9b626acbaf970b64f", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/654bb1f934fef5a3427a4cd9b626acbaf970b64f", "committedDate": "2020-01-03T12:07:40Z", "message": "pom.xml merged"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54877db65f4cc1393d1ed91250f112535fe40b30", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/54877db65f4cc1393d1ed91250f112535fe40b30", "committedDate": "2020-01-04T12:37:34Z", "message": "BAEL-3596 - code moved to core-java-concurrency-advanced-3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9234115078c9b55369808e9233aebb9b96a17732", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/9234115078c9b55369808e9233aebb9b96a17732", "committedDate": "2020-01-04T12:38:39Z", "message": "code indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5613452301aa22b33b0146d10874a0b643e5272", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/b5613452301aa22b33b0146d10874a0b643e5272", "committedDate": "2020-01-04T12:41:27Z", "message": "Code indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "064afc99b86261f95f4818c0eb7ed8814df1039d", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/064afc99b86261f95f4818c0eb7ed8814df1039d", "committedDate": "2020-01-04T12:42:04Z", "message": "pom.xml code indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8622fd2ba753ad40b353ae643f51a1400b23641f", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/8622fd2ba753ad40b353ae643f51a1400b23641f", "committedDate": "2020-01-04T12:49:57Z", "message": "pom.xml code indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8e6c49a12db5991940fe9fcea5850d335bf8f27", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/a8e6c49a12db5991940fe9fcea5850d335bf8f27", "committedDate": "2020-01-04T12:57:29Z", "message": "4 spaces code indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6347faa3f89482dfe4c604702f1c65c3232fa4", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/1d6347faa3f89482dfe4c604702f1c65c3232fa4", "committedDate": "2020-01-04T12:59:27Z", "message": "organized imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NDY4MTAy", "url": "https://github.com/eugenp/tutorials/pull/8456#pullrequestreview-338468102", "createdAt": "2020-01-06T04:58:07Z", "commit": {"oid": "1d6347faa3f89482dfe4c604702f1c65c3232fa4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNDo1ODowN1rOFaVb_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNDo1ODowN1rOFaVb_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE1ODUyNg==", "bodyText": "remove this extra line", "url": "https://github.com/eugenp/tutorials/pull/8456#discussion_r363158526", "createdAt": "2020-01-06T04:58:07Z", "author": {"login": "eric-martin"}, "path": "core-java-modules/core-java-concurrency-advanced-3/src/main/java/com/baeldung/async/JavaAsync.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package com.baeldung.async;\n+\n+import static com.ea.async.Async.await;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+\n+import com.google.common.util.concurrent.AsyncCallable;\n+import com.google.common.util.concurrent.Callables;\n+import com.google.common.util.concurrent.Futures;\n+import com.google.common.util.concurrent.ListenableFuture;\n+import com.google.common.util.concurrent.ListeningExecutorService;\n+import com.google.common.util.concurrent.MoreExecutors;\n+import com.jcabi.aspects.Async;\n+import com.jcabi.aspects.Loggable;\n+\n+public class JavaAsync {\n+\n+    static {\n+        com.ea.async.Async.init();\n+    }\n+\n+    private static final ExecutorService threadpool = Executors.newCachedThreadPool();\n+\n+    public static void main (String[] args) throws InterruptedException, ExecutionException {\n+        int number = 20;\n+\n+        //Thread Example\n+        factorialUsingThread(number).start();\n+\n+        //FutureTask Example\n+        Future<Long> futureTask = factorialUsingFutureTask(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + futureTask.get());\n+\n+        // CompletableFuture Example\n+        Future<Long> completableFuture = factorialUsingCompletableFuture(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + completableFuture.get());\n+\n+        // EA Async example\n+        System.out.println(\"Factorial of \" + number + \" is: \" + factorialUsingEAAsync(number));\n+\n+        // cactoos async example\n+        Future<Long> asyncFuture = factorialUsingCactoos(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + asyncFuture.get());\n+\n+        // Guava example\n+        ListenableFuture<Long> guavaFuture = factorialUsingGuavaServiceSubmit(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + guavaFuture.get());\n+\n+        ListenableFuture<Long> guavaFutures = factorialUsingGuavaFutures(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + guavaFutures.get());\n+\n+        // @async jcabi-aspect example\n+        Future<Long> aspectFuture = factorialUsingJcabiAspect(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + aspectFuture.get());\n+\n+    }\n+\n+    /**\n+     * Finds factorial of a number\n+     * @param number\n+     * @return\n+     */\n+    public static long factorial(int number) {\n+        long result = 1; \n+        for(int i=number;i>0;i--) {\n+            result *= i; \n+        } \n+        return result; \n+    }\n+\n+    /**\n+     * Finds factorial of a number using Thread\n+     * @param number\n+     * @return\n+     */\n+    @Loggable\n+    public static Thread factorialUsingThread(int number) {\n+        Thread newThread = new Thread(() -> {\n+            System.out.println(\"Factorial of \" + number + \" is: \" + factorial(number));\n+        });\n+\n+        return newThread;\n+    }\n+\n+    /**\n+     * Finds factorial of a number using FutureTask\n+     * @param number\n+     * @return\n+     */\n+    @Loggable\n+    public static Future<Long> factorialUsingFutureTask(int number) {\n+        Future<Long> futureTask = threadpool.submit(() -> factorial(number)); \n+\n+        while (!futureTask.isDone()) { \n+            System.out.println(\"FutureTask is not finished yet...\"); \n+        } \n+\n+        return futureTask;\n+    }\n+\n+    /**\n+     * Finds factorial of a number using CompletableFuture\n+     * @param number\n+     * @return\n+     */\n+    @Loggable\n+    public static Future<Long> factorialUsingCompletableFuture(int number) {\n+        CompletableFuture<Long> completableFuture = CompletableFuture.supplyAsync(() -> factorial(number));\n+        return completableFuture;\n+    }\n+\n+    /**\n+     * Finds factorial of a number using EA Async\n+     * @param number\n+     * @return\n+     */\n+    @Loggable\n+    public static long factorialUsingEAAsync(int number) {\n+        CompletableFuture<Long> completableFuture = CompletableFuture.supplyAsync(() -> factorial(number));\n+        long result = await(completableFuture);\n+        return result;\n+    }\n+\n+    /**\n+     * \n+     * Finds factorial of a number using Async of Cactoos\n+     * @param number\n+     * @return\n+     * @throws InterruptedException\n+     * @throws ExecutionException\n+     */\n+    @Loggable\n+    public static Future<Long> factorialUsingCactoos(int number) throws InterruptedException, ExecutionException {\n+        org.cactoos.func.Async<Integer, Long> asyncFunction = new org.cactoos.func.Async<Integer, Long>(input -> factorial(input));\n+        Future<Long> asyncFuture = asyncFunction.apply(number);\n+        return asyncFuture;\n+    }\n+\n+    /**\n+     * Finds factorial of a number using Guava's ListeningExecutorService.submit()\n+     * @param number\n+     * @return\n+     */\n+    @Loggable\n+    public static ListenableFuture<Long> factorialUsingGuavaServiceSubmit(int number) {\n+        ListeningExecutorService service = MoreExecutors.listeningDecorator(threadpool);\n+        ListenableFuture<Long> factorialFuture = (ListenableFuture<Long>) service.submit(()-> factorial(number));\n+        return factorialFuture;\n+    }\n+\n+    /**\n+     * Finds factorial of a number using Guava's Futures.submitAsync()\n+     * @param number\n+     * @return\n+     */\n+    @Loggable\n+    public static ListenableFuture<Long> factorialUsingGuavaFutures(int number) {\n+        ListeningExecutorService service = MoreExecutors.listeningDecorator(threadpool);\n+        AsyncCallable<Long> asyncCallable = Callables.asAsyncCallable(new Callable<Long>() {\n+            public Long call() {\n+                return factorial(number);\n+            }\n+        }, service);\n+        return Futures.submitAsync(asyncCallable, service);\n+    }\n+\n+    /**\n+     * ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6347faa3f89482dfe4c604702f1c65c3232fa4"}, "originalPosition": 173}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NDY4MTM2", "url": "https://github.com/eugenp/tutorials/pull/8456#pullrequestreview-338468136", "createdAt": "2020-01-06T04:58:18Z", "commit": {"oid": "1d6347faa3f89482dfe4c604702f1c65c3232fa4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNDo1ODoxOFrOFaVcFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNDo1ODoxOFrOFaVcFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE1ODU1MA==", "bodyText": "remove this extra line", "url": "https://github.com/eugenp/tutorials/pull/8456#discussion_r363158550", "createdAt": "2020-01-06T04:58:18Z", "author": {"login": "eric-martin"}, "path": "core-java-modules/core-java-concurrency-advanced-3/src/main/java/com/baeldung/async/JavaAsync.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package com.baeldung.async;\n+\n+import static com.ea.async.Async.await;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+\n+import com.google.common.util.concurrent.AsyncCallable;\n+import com.google.common.util.concurrent.Callables;\n+import com.google.common.util.concurrent.Futures;\n+import com.google.common.util.concurrent.ListenableFuture;\n+import com.google.common.util.concurrent.ListeningExecutorService;\n+import com.google.common.util.concurrent.MoreExecutors;\n+import com.jcabi.aspects.Async;\n+import com.jcabi.aspects.Loggable;\n+\n+public class JavaAsync {\n+\n+    static {\n+        com.ea.async.Async.init();\n+    }\n+\n+    private static final ExecutorService threadpool = Executors.newCachedThreadPool();\n+\n+    public static void main (String[] args) throws InterruptedException, ExecutionException {\n+        int number = 20;\n+\n+        //Thread Example\n+        factorialUsingThread(number).start();\n+\n+        //FutureTask Example\n+        Future<Long> futureTask = factorialUsingFutureTask(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + futureTask.get());\n+\n+        // CompletableFuture Example\n+        Future<Long> completableFuture = factorialUsingCompletableFuture(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + completableFuture.get());\n+\n+        // EA Async example\n+        System.out.println(\"Factorial of \" + number + \" is: \" + factorialUsingEAAsync(number));\n+\n+        // cactoos async example\n+        Future<Long> asyncFuture = factorialUsingCactoos(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + asyncFuture.get());\n+\n+        // Guava example\n+        ListenableFuture<Long> guavaFuture = factorialUsingGuavaServiceSubmit(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + guavaFuture.get());\n+\n+        ListenableFuture<Long> guavaFutures = factorialUsingGuavaFutures(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + guavaFutures.get());\n+\n+        // @async jcabi-aspect example\n+        Future<Long> aspectFuture = factorialUsingJcabiAspect(number);\n+        System.out.println(\"Factorial of \" + number + \" is: \" + aspectFuture.get());\n+\n+    }\n+\n+    /**\n+     * Finds factorial of a number\n+     * @param number\n+     * @return\n+     */\n+    public static long factorial(int number) {\n+        long result = 1; \n+        for(int i=number;i>0;i--) {\n+            result *= i; \n+        } \n+        return result; \n+    }\n+\n+    /**\n+     * Finds factorial of a number using Thread\n+     * @param number\n+     * @return\n+     */\n+    @Loggable\n+    public static Thread factorialUsingThread(int number) {\n+        Thread newThread = new Thread(() -> {\n+            System.out.println(\"Factorial of \" + number + \" is: \" + factorial(number));\n+        });\n+\n+        return newThread;\n+    }\n+\n+    /**\n+     * Finds factorial of a number using FutureTask\n+     * @param number\n+     * @return\n+     */\n+    @Loggable\n+    public static Future<Long> factorialUsingFutureTask(int number) {\n+        Future<Long> futureTask = threadpool.submit(() -> factorial(number)); \n+\n+        while (!futureTask.isDone()) { \n+            System.out.println(\"FutureTask is not finished yet...\"); \n+        } \n+\n+        return futureTask;\n+    }\n+\n+    /**\n+     * Finds factorial of a number using CompletableFuture\n+     * @param number\n+     * @return\n+     */\n+    @Loggable\n+    public static Future<Long> factorialUsingCompletableFuture(int number) {\n+        CompletableFuture<Long> completableFuture = CompletableFuture.supplyAsync(() -> factorial(number));\n+        return completableFuture;\n+    }\n+\n+    /**\n+     * Finds factorial of a number using EA Async\n+     * @param number\n+     * @return\n+     */\n+    @Loggable\n+    public static long factorialUsingEAAsync(int number) {\n+        CompletableFuture<Long> completableFuture = CompletableFuture.supplyAsync(() -> factorial(number));\n+        long result = await(completableFuture);\n+        return result;\n+    }\n+\n+    /**\n+     * ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6347faa3f89482dfe4c604702f1c65c3232fa4"}, "originalPosition": 130}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "801c32e0f698de2ea5ca235d845e5f131783fd2a", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/801c32e0f698de2ea5ca235d845e5f131783fd2a", "committedDate": "2020-01-06T08:49:41Z", "message": "review changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjc3Njcx", "url": "https://github.com/eugenp/tutorials/pull/8456#pullrequestreview-340277671", "createdAt": "2020-01-09T03:55:19Z", "commit": {"oid": "801c32e0f698de2ea5ca235d845e5f131783fd2a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NToyMFrOFbqW2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NTo1M1rOFbqXUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0OTg1MQ==", "bodyText": "Please extract the version numbers into properties", "url": "https://github.com/eugenp/tutorials/pull/8456#discussion_r364549851", "createdAt": "2020-01-09T03:55:20Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-concurrency-advanced-3/pom.xml", "diffHunk": "@@ -23,6 +23,37 @@\n             <version>${assertj.version}</version>\n             <scope>test</scope>\n         </dependency>\n+        \n+        <dependency>\n+            <groupId>com.jcabi</groupId>\n+            <artifactId>jcabi-aspects</artifactId>\n+            <version>0.22.6</version>\n+        </dependency>\n+        \n+        <dependency>\n+            <groupId>org.aspectj</groupId>\n+            <artifactId>aspectjrt</artifactId>\n+            <version>1.9.5</version>\n+            <scope>runtime</scope>\n+        </dependency>\n+        \n+        <dependency>\n+            <groupId>com.google.guava</groupId>\n+            <artifactId>guava</artifactId>\n+            <version>28.1-jre</version>\n+        </dependency>\n+        \n+        <dependency>\n+            <groupId>org.cactoos</groupId>\n+            <artifactId>cactoos</artifactId>\n+            <version>0.43</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.ea.async</groupId>\n+            <artifactId>ea-async</artifactId>\n+            <version>1.2.3</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801c32e0f698de2ea5ca235d845e5f131783fd2a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0OTk3MA==", "bodyText": "use properties for versions", "url": "https://github.com/eugenp/tutorials/pull/8456#discussion_r364549970", "createdAt": "2020-01-09T03:55:53Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-concurrency-advanced-3/pom.xml", "diffHunk": "@@ -36,6 +67,30 @@\n                     <target>${maven.compiler.target}</target>\n                 </configuration>\n             </plugin>\n+            <plugin>\n+                <groupId>com.jcabi</groupId>\n+                <artifactId>jcabi-maven-plugin</artifactId>\n+                <version>0.14.1</version>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>ajc</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+                <dependencies>\n+                    <dependency>\n+                        <groupId>org.aspectj</groupId>\n+                        <artifactId>aspectjtools</artifactId>\n+                        <version>1.9.1</version>\n+                    </dependency>\n+                    <dependency>\n+                        <groupId>org.aspectj</groupId>\n+                        <artifactId>aspectjweaver</artifactId>\n+                        <version>1.9.1</version>\n+                    </dependency>\n+                </dependencies>\n+            </plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801c32e0f698de2ea5ca235d845e5f131783fd2a"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjgyNDQ1", "url": "https://github.com/eugenp/tutorials/pull/8456#pullrequestreview-340282445", "createdAt": "2020-01-09T04:20:04Z", "commit": {"oid": "801c32e0f698de2ea5ca235d845e5f131783fd2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNDoyMDowNFrOFbql6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNDoyMDowNFrOFbql6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MzcwNw==", "bodyText": "28.2-jre is now available", "url": "https://github.com/eugenp/tutorials/pull/8456#discussion_r364553707", "createdAt": "2020-01-09T04:20:04Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-concurrency-advanced-3/pom.xml", "diffHunk": "@@ -23,6 +23,37 @@\n             <version>${assertj.version}</version>\n             <scope>test</scope>\n         </dependency>\n+        \n+        <dependency>\n+            <groupId>com.jcabi</groupId>\n+            <artifactId>jcabi-aspects</artifactId>\n+            <version>0.22.6</version>\n+        </dependency>\n+        \n+        <dependency>\n+            <groupId>org.aspectj</groupId>\n+            <artifactId>aspectjrt</artifactId>\n+            <version>1.9.5</version>\n+            <scope>runtime</scope>\n+        </dependency>\n+        \n+        <dependency>\n+            <groupId>com.google.guava</groupId>\n+            <artifactId>guava</artifactId>\n+            <version>28.1-jre</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801c32e0f698de2ea5ca235d845e5f131783fd2a"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89f3dd5f8a9344a15866bc72f1a6def9ce04cd75", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/89f3dd5f8a9344a15866bc72f1a6def9ce04cd75", "committedDate": "2020-01-09T09:34:28Z", "message": "BAEL-3596 - extracted the version numbers into properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "647cef2ec78a49dc0fd0c529e61b2715e55e14f4", "author": {"user": {"login": "SmartyAnsh", "name": "Anshul Bansal"}}, "url": "https://github.com/eugenp/tutorials/commit/647cef2ec78a49dc0fd0c529e61b2715e55e14f4", "committedDate": "2020-01-09T09:38:49Z", "message": "Merge branch 'BAEL-3596_Asynchronous_Method_Calls_in_Java' of https://github.com/SmartyAnsh/tutorials into BAEL-3596_Asynchronous_Method_Calls_in_Java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4238, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}