{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDg3ODMw", "number": 9557, "title": "BAEL-1488: JSON-LD", "bodyText": "Serializing and deserializing with Jackson", "createdAt": "2020-06-22T17:40:58Z", "url": "https://github.com/eugenp/tutorials/pull/9557", "merged": true, "mergeCommit": {"oid": "a0017401bc996d8a509a5ef2e2b910d1da5c0562"}, "closed": true, "closedAt": "2020-08-02T08:49:41Z", "author": {"login": "mdhtr"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctxskNAH2gAyNDM4MDg3ODMwOjU1ZWY0MTk4YTdjMDhhMWRlYmUyMWJkY2YzMWI3YWUxMjk1YTgwMGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4oUXGgH2gAyNDM4MDg3ODMwOjA4ZDFkYjhkZjFlOTVmZTFjYmYyNDAyOTA3OTM5N2NlMDJhYmQzMGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b", "author": {"user": {"login": "mdhtr", "name": null}}, "url": "https://github.com/eugenp/tutorials/commit/55ef4198a7c08a1debe21bdcf31b7ae1295a800b", "committedDate": "2020-06-22T14:26:42Z", "message": "Examples for the first version of the article"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwODUxNDc0", "url": "https://github.com/eugenp/tutorials/pull/9557#pullrequestreview-440851474", "createdAt": "2020-07-01T13:07:26Z", "commit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzowNzoyNlrOGrlGhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzoxNjoxMlrOGrlbaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0OTgyOQ==", "bodyText": "Let's remove this unused import", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448349829", "createdAt": "2020-07-01T13:07:26Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/deserialization/jsonldjava/jackson/JacksonDeserializationExample.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.baeldung.jsonld.deserialization.jsonldjava.jackson;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1MDE1Mg==", "bodyText": "Let's fix the warning about raw types if possible.", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448350152", "createdAt": "2020-07-01T13:07:58Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/deserialization/jsonldjava/jackson/JacksonDeserializationExample.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.baeldung.jsonld.deserialization.jsonldjava.jackson;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.github.jsonldjava.core.JsonLdOptions;\n+import com.github.jsonldjava.core.JsonLdProcessor;\n+import com.github.jsonldjava.utils.JsonUtils;\n+\n+public class JacksonDeserializationExample {\n+    public static void main(String[] args) throws IOException {\n+        String exampleJsonld =\"{\" + \n+           \"  \\\"@context\\\": {\" + \n+           \"    \\\"@vocab\\\": \\\"http://schema.org/\\\",\" + \n+           \"    \\\"knows\\\": {\" + \n+           \"      \\\"@type\\\": \\\"@id\\\"\" + \n+           \"    }\" + \n+           \"  },\" + \n+           \"  \\\"@type\\\": \\\"Person\\\",\" + \n+           \"  \\\"@id\\\": \\\"http://example.com/person/1234\\\",\" + \n+           \"  \\\"name\\\": \\\"Example Name\\\",\" + \n+           \"  \\\"knows\\\": \\\"http://example.com/person/2345\\\"\" + \n+           \"}\";\n+\n+        Object jsonObject = JsonUtils.fromString(exampleJsonld);\n+        Object compact = JsonLdProcessor.compact(jsonObject, new HashMap(), new JsonLdOptions());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1MTQ3Nw==", "bodyText": "I'm not a big fan of these *Example type classes with the main method. Let's move this into a unit test using the test method names (givenX_whenY_thenZ) as mentioned in the author guidelines.\nIn general, we want as much coverage as possible on our new code. Putting it in a unit test is also easier for readers to run the code and also we validate that it is working as expected.", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448351477", "createdAt": "2020-07-01T13:10:18Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/deserialization/jsonldjava/jackson/JacksonDeserializationExample.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.baeldung.jsonld.deserialization.jsonldjava.jackson;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.github.jsonldjava.core.JsonLdOptions;\n+import com.github.jsonldjava.core.JsonLdProcessor;\n+import com.github.jsonldjava.utils.JsonUtils;\n+\n+public class JacksonDeserializationExample {\n+    public static void main(String[] args) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1MTc4Nw==", "bodyText": "These system.out will likely become assert statements. But if you want to print, let's use a proper logger.", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448351787", "createdAt": "2020-07-01T13:10:49Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/deserialization/jsonldjava/jackson/JacksonDeserializationExample.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.baeldung.jsonld.deserialization.jsonldjava.jackson;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.github.jsonldjava.core.JsonLdOptions;\n+import com.github.jsonldjava.core.JsonLdProcessor;\n+import com.github.jsonldjava.utils.JsonUtils;\n+\n+public class JacksonDeserializationExample {\n+    public static void main(String[] args) throws IOException {\n+        String exampleJsonld =\"{\" + \n+           \"  \\\"@context\\\": {\" + \n+           \"    \\\"@vocab\\\": \\\"http://schema.org/\\\",\" + \n+           \"    \\\"knows\\\": {\" + \n+           \"      \\\"@type\\\": \\\"@id\\\"\" + \n+           \"    }\" + \n+           \"  },\" + \n+           \"  \\\"@type\\\": \\\"Person\\\",\" + \n+           \"  \\\"@id\\\": \\\"http://example.com/person/1234\\\",\" + \n+           \"  \\\"name\\\": \\\"Example Name\\\",\" + \n+           \"  \\\"knows\\\": \\\"http://example.com/person/2345\\\"\" + \n+           \"}\";\n+\n+        Object jsonObject = JsonUtils.fromString(exampleJsonld);\n+        Object compact = JsonLdProcessor.compact(jsonObject, new HashMap(), new JsonLdOptions());\n+        String compactContent = JsonUtils.toString(compact);\n+\n+        System.out.println(JsonUtils.toPrettyString(compact));\n+\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        JacksonExamplePerson person = objectMapper.readValue(compactContent, JacksonExamplePerson.class);\n+\n+        System.out.println(person.id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1MjE5Nw==", "bodyText": "As these POJO classes are already in a separate package, can we not simply call the class Person?", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448352197", "createdAt": "2020-07-01T13:11:30Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/deserialization/jsonldjava/jackson/JacksonExamplePerson.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.baeldung.jsonld.deserialization.jsonldjava.jackson;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class JacksonExamplePerson {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1MjM0MA==", "bodyText": "As these POJO classes are already in a separate package, can we not simply call the class Person?", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448352340", "createdAt": "2020-07-01T13:11:45Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/serialization/hydrajsonld/HydraJsonldExamplePerson.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.baeldung.jsonld.serialization.hydrajsonld;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import de.escalon.hypermedia.hydra.mapping.Expose;\n+import de.escalon.hypermedia.hydra.mapping.Vocab;\n+\n+@Vocab(\"http://example.com/vocab/\")\n+@Expose(\"person\")\n+public class HydraJsonldExamplePerson {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1MjY3MQ==", "bodyText": "The same comment applies about moving to a unit test.", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448352671", "createdAt": "2020-07-01T13:12:14Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/serialization/hydrajsonld/HydraJsonldSerializationExample.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.baeldung.jsonld.serialization.hydrajsonld;\n+\n+import java.io.IOException;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.BeanDescription;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.SerializationConfig;\n+import com.fasterxml.jackson.databind.module.SimpleModule;\n+import com.fasterxml.jackson.databind.ser.BeanSerializerModifier;\n+import com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;\n+\n+import de.escalon.hypermedia.hydra.serialize.JacksonHydraSerializer;\n+\n+public class HydraJsonldSerializationExample {\n+    public static void main(String[] args) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1NDE3NQ==", "bodyText": "There is a warning here about serial version Ids", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448354175", "createdAt": "2020-07-01T13:14:42Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/serialization/hydrajsonld/HydraJsonldSerializationExample.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.baeldung.jsonld.serialization.hydrajsonld;\n+\n+import java.io.IOException;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.BeanDescription;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.SerializationConfig;\n+import com.fasterxml.jackson.databind.module.SimpleModule;\n+import com.fasterxml.jackson.databind.ser.BeanSerializerModifier;\n+import com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;\n+\n+import de.escalon.hypermedia.hydra.serialize.JacksonHydraSerializer;\n+\n+public class HydraJsonldSerializationExample {\n+    public static void main(String[] args) throws IOException {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n+        mapper.registerModule(getJacksonHydraSerializerModule());\n+\n+        HydraJsonldExamplePerson person = new HydraJsonldExamplePerson();\n+        person.id = \"http://example.com/person/1234\";\n+        person.name = \"Example Name\";\n+\n+        System.out.println(mapper.writerWithDefaultPrettyPrinter()\n+            .writeValueAsString(person));\n+    }\n+\n+    public static SimpleModule getJacksonHydraSerializerModule() {\n+        return new SimpleModule() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1NDcxNQ==", "bodyText": "As these POJO classes are already in a separate package, can we not simply call the class Person?", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448354715", "createdAt": "2020-07-01T13:15:29Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/serialization/jacksonjsonld/JacksonJsonldExamplePerson.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.baeldung.jsonld.serialization.jacksonjsonld;\n+\n+import ioinformarics.oss.jackson.module.jsonld.annotation.JsonldId;\n+import ioinformarics.oss.jackson.module.jsonld.annotation.JsonldLink;\n+import ioinformarics.oss.jackson.module.jsonld.annotation.JsonldNamespace;\n+import ioinformarics.oss.jackson.module.jsonld.annotation.JsonldProperty;\n+import ioinformarics.oss.jackson.module.jsonld.annotation.JsonldType;\n+\n+@JsonldNamespace(name = \"s\", uri = \"http://schema.org/\")\n+@JsonldLink(rel = \"s:knows\", name = \"knows\", href = \"http://example.com/person/2345\")\n+@JsonldType(\"s:Person\")\n+class JacksonJsonldExamplePerson {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1NTAwNA==", "bodyText": "Let's clean up these unused imports.", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448355004", "createdAt": "2020-07-01T13:15:56Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/serialization/jacksonjsonld/JacksonJsonLdSerializationExample.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.baeldung.jsonld.serialization.jacksonjsonld;\n+\n+import java.io.IOException;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import ioinformarics.oss.jackson.module.jsonld.HydraCollection;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1NTE3Nw==", "bodyText": "Same comment regarding the unit tests.", "url": "https://github.com/eugenp/tutorials/pull/9557#discussion_r448355177", "createdAt": "2020-07-01T13:16:12Z", "author": {"login": "JonCook"}, "path": "json-2/src/main/java/com/baeldung/jsonld/serialization/jacksonjsonld/JacksonJsonLdSerializationExample.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.baeldung.jsonld.serialization.jacksonjsonld;\n+\n+import java.io.IOException;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import ioinformarics.oss.jackson.module.jsonld.HydraCollection;\n+import ioinformarics.oss.jackson.module.jsonld.JsonldGraph;\n+import ioinformarics.oss.jackson.module.jsonld.JsonldModule;\n+import ioinformarics.oss.jackson.module.jsonld.JsonldResource;\n+\n+public class JacksonJsonLdSerializationExample {\n+    public static void main(String[] args) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef4198a7c08a1debe21bdcf31b7ae1295a800b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3611e36e8b533ae8785a2a5c8aa08399676e5228", "author": {"user": {"login": "mdhtr", "name": null}}, "url": "https://github.com/eugenp/tutorials/commit/3611e36e8b533ae8785a2a5c8aa08399676e5228", "committedDate": "2020-07-12T22:24:14Z", "message": "Examples for the second version of the article"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3ec17ca3f51190cd309150aebed617df5eb0f5e", "author": {"user": {"login": "mdhtr", "name": null}}, "url": "https://github.com/eugenp/tutorials/commit/f3ec17ca3f51190cd309150aebed617df5eb0f5e", "committedDate": "2020-07-26T07:38:00Z", "message": "Changes based on editor review\n\n- extract Person classes from test classes\n- shorten test name of one test\n- fix one warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08d1db8df1e95fe1cbf24029079397ce02abd30f", "author": {"user": {"login": "mdhtr", "name": null}}, "url": "https://github.com/eugenp/tutorials/commit/08d1db8df1e95fe1cbf24029079397ce02abd30f", "committedDate": "2020-07-26T07:44:17Z", "message": "Format inline JSON objects by hand"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4351, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}