{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzk0NDUx", "number": 8688, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwOTowNTo0NFrODeQxAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyNDozNFrODfZ--w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDU4NTYxOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwOTowNTo0NFrOFnUByg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwOTowNTo0NFrOFnUByg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NjkyMg==", "bodyText": "Let's remove this unused import", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r376766922", "createdAt": "2020-02-09T09:05:44Z", "author": {"login": "JonCook"}, "path": "core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package com.baeldung.lock;\n+\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.FileChannel;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.StandardOpenOption;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.base.Charsets;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8134888258b145dbb034281d13f3ae9d13ea5ceb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDU4NjEwOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwOTowNjo1MVrOFnUCCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxNTowNzozMlrOFnVf9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2Njk4NQ==", "bodyText": "The formatting still looks to be off?", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r376766985", "createdAt": "2020-02-09T09:06:51Z", "author": {"login": "JonCook"}, "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8134888258b145dbb034281d13f3ae9d13ea5ceb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc5MTAyOA==", "bodyText": "Can you please tell me what is off? I used the intelliJ settings I found in https://github.com/eugenp/tutorials/blob/master/intelliJ/intelliJ-formatter.xml", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r376791028", "createdAt": "2020-02-09T15:07:32Z", "author": {"login": "psoares"}, "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2Njk4NQ=="}, "originalCommit": {"oid": "8134888258b145dbb034281d13f3ae9d13ea5ceb"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDU4NjI2OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwOTowNzoxNVrOFnUCHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwOTowNzoxNVrOFnUCHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NzAwNw==", "bodyText": "Formatting also still looks to be off here in this class?", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r376767007", "createdAt": "2020-02-09T09:07:15Z", "author": {"login": "JonCook"}, "path": "core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package com.baeldung.lock;\n+\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.FileChannel;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.StandardOpenOption;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.base.Charsets;\n+\n+public class FileLocks {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8134888258b145dbb034281d13f3ae9d13ea5ceb"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjU3NzU3OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-io-2/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyMToxOVrOFpF6Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyMToxOVrOFpF6Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMjc5NA==", "bodyText": "no need to modify this file, please revert", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378632794", "createdAt": "2020-02-13T03:21:19Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-io-2/README.md", "diffHunk": "@@ -11,5 +11,5 @@ This module contains articles about core Java input and output (IO)\n - [List Files in a Directory in Java](https://www.baeldung.com/java-list-directory-files)\n - [Java \u2013 Append Data to a File](https://www.baeldung.com/java-append-to-file)\n - [How to Copy a File with Java](https://www.baeldung.com/java-copy-file)\n-- [Create a Directory in Java](https://www.baeldung.com/java-create-directory)\n+- [Create a Directory in Java](https://www.baeldung.com/java-create-directory) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjU3OTkxOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyMzowNVrOFpF7yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyMzowNVrOFpF7yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzE2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n          \n          \n            \n                void givenAnInputStream_whenGetWriteLock_thenThrowNonWritableChannelException() {", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633160", "createdAt": "2020-02-13T03:23:05Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjU4MDIzOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyMzoyOFrOFpF8CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyMzoyOFrOFpF8CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzIyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n          \n          \n            \n                void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_thenLock() throws IOException {", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633225", "createdAt": "2020-02-13T03:23:28Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+        assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjU4MDc2OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyMzo0OVrOFpF8Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyMzo0OVrOFpF8Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzI5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenAPath_whenGetExclusiveLock_lock() throws IOException {\n          \n          \n            \n                void givenAPath_whenGetExclusiveLock_thenLock() throws IOException {", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633298", "createdAt": "2020-02-13T03:23:49Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+        assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromRandomAccessFile(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAPath_whenGetExclusiveLock_lock() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjU4MTEwOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyNDowMlrOFpF8gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyNDowMlrOFpF8gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzM0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenAFileOutputStream_whenGetSharedLock_throwNonReadableChannelException() {\n          \n          \n            \n                void givenAFileOutputStream_whenGetSharedLock_thenThrowNonReadableChannelException() {", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633347", "createdAt": "2020-02-13T03:24:02Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+        assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromRandomAccessFile(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAPath_whenGetExclusiveLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromFileChannelOpen(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAFileOutputStream_whenGetSharedLock_throwNonReadableChannelException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjU4MTQ2OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyNDoyMVrOFpF8tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyNDoyMVrOFpF8tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzM5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenAnInputStream_whenGetSharedLock_lock() throws IOException {\n          \n          \n            \n                void givenAnInputStream_whenGetSharedLock_thenLock() throws IOException {", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633398", "createdAt": "2020-02-13T03:24:21Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+        assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromRandomAccessFile(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAPath_whenGetExclusiveLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromFileChannelOpen(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAFileOutputStream_whenGetSharedLock_throwNonReadableChannelException() {\n+        assertThrows(NonReadableChannelException.class, FileLocks::getReadLockFromOutputStream);\n+    }\n+\n+    @Test\n+    void givenAnInputStream_whenGetSharedLock_lock() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjU4MTcxOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyNDozNFrOFpF84Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyNDozNFrOFpF84Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzQ0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenARandomAccessFile_whenGetSharedLock_lock() throws IOException {\n          \n          \n            \n                void givenARandomAccessFile_whenGetSharedLock_thenLock() throws IOException {", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633441", "createdAt": "2020-02-13T03:24:34Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+        assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromRandomAccessFile(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAPath_whenGetExclusiveLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromFileChannelOpen(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAFileOutputStream_whenGetSharedLock_throwNonReadableChannelException() {\n+        assertThrows(NonReadableChannelException.class, FileLocks::getReadLockFromOutputStream);\n+    }\n+\n+    @Test\n+    void givenAnInputStream_whenGetSharedLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getReadLockFromInputStream(0, 10);\n+        assertNotNull(lock);\n+        assertTrue(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFile_whenGetSharedLock_lock() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4389, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}