{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzQxOTA2", "number": 9771, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzo0MTowMFrOESRXQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxODo0MDozMFrOEUT3Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTk0MzA0OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzo0MTowMFrOG3XDNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo0NzoyOFrOG5Jj_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMjUxOA==", "bodyText": "4 space indentation on xml and java files", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r460702518", "createdAt": "2020-07-27T07:41:00Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/pom.xml", "diffHunk": "@@ -0,0 +1,48 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<artifactId>spring-data-cosmosdb</artifactId>\n+\t<name>spring-data-cosmos-db</name>\n+\t<description>tutorial for spring-data-cosmosdb</description>\n+\n+\t<parent>\n+\t\t<groupId>com.baeldung</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3ODY4Nw==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462578687", "createdAt": "2020-07-29T20:47:28Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/pom.xml", "diffHunk": "@@ -0,0 +1,48 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<artifactId>spring-data-cosmosdb</artifactId>\n+\t<name>spring-data-cosmos-db</name>\n+\t<description>tutorial for spring-data-cosmosdb</description>\n+\n+\t<parent>\n+\t\t<groupId>com.baeldung</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMjUxOA=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTk0MzYwOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzo0MTowOFrOG3XDhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo0NzoyMFrOG5JjwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMjU5OA==", "bodyText": "promote these to properties", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r460702598", "createdAt": "2020-07-27T07:41:08Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/pom.xml", "diffHunk": "@@ -0,0 +1,48 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<artifactId>spring-data-cosmosdb</artifactId>\n+\t<name>spring-data-cosmos-db</name>\n+\t<description>tutorial for spring-data-cosmosdb</description>\n+\n+\t<parent>\n+\t\t<groupId>com.baeldung</groupId>\n+\t\t<artifactId>parent-boot-2</artifactId>\n+\t\t<version>0.0.1-SNAPSHOT</version>\n+\t\t<relativePath>../../parent-boot-2</relativePath>\n+\t</parent>\n+\n+\t<properties>\n+\t\t<java.version>1.8</java.version>\n+\t</properties>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.microsoft.azure</groupId>\n+\t\t\t<artifactId>spring-data-cosmosdb</artifactId>\n+\t\t\t<version>2.3.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3ODYyNA==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462578624", "createdAt": "2020-07-29T20:47:20Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/pom.xml", "diffHunk": "@@ -0,0 +1,48 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<artifactId>spring-data-cosmosdb</artifactId>\n+\t<name>spring-data-cosmos-db</name>\n+\t<description>tutorial for spring-data-cosmosdb</description>\n+\n+\t<parent>\n+\t\t<groupId>com.baeldung</groupId>\n+\t\t<artifactId>parent-boot-2</artifactId>\n+\t\t<version>0.0.1-SNAPSHOT</version>\n+\t\t<relativePath>../../parent-boot-2</relativePath>\n+\t</parent>\n+\n+\t<properties>\n+\t\t<java.version>1.8</java.version>\n+\t</properties>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.microsoft.azure</groupId>\n+\t\t\t<artifactId>spring-data-cosmosdb</artifactId>\n+\t\t\t<version>2.3.0</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMjU5OA=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTk0OTcxOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/controller/ProductController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzo0Mjo1OFrOG3XHIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMToxMjozNVrOG5KZMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMzUyMA==", "bodyText": "/?category=...", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r460703520", "createdAt": "2020-07-27T07:42:58Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/controller/ProductController.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.spring.data.cosmosdb.controller;\n+\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.service.ProductService;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@RestController\n+@RequestMapping(\"/products\")\n+public class ProductController {\n+\n+    @Autowired\n+    private ProductService productService;\n+\n+    @PostMapping\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public void create(@RequestBody Product product) {\n+        productService.saveProduct(product);\n+    }\n+\n+    @GetMapping(value = \"/{id}/category/{category}\")\n+    public Optional<Product> get(@PathVariable String id, @PathVariable String category) {\n+        return productService.findById(id, category);\n+    }\n+\n+    @DeleteMapping(value = \"/{id}/category/{category}\")\n+    public void delete(@PathVariable String id, @PathVariable String category) {\n+        productService.delete(id, category);\n+    }\n+\n+    @GetMapping\n+    public List<Product> getByName(@RequestParam String name) {\n+        return productService.findProductByName(name);\n+    }\n+\n+    @GetMapping(value = \"/category/{category}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3ODQ3Mw==", "bodyText": "Done.Could not remove category from the url value because of ambiguity with other getByName mthod. but converted path variable to request variable", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462578473", "createdAt": "2020-07-29T20:47:01Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/controller/ProductController.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.spring.data.cosmosdb.controller;\n+\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.service.ProductService;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@RestController\n+@RequestMapping(\"/products\")\n+public class ProductController {\n+\n+    @Autowired\n+    private ProductService productService;\n+\n+    @PostMapping\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public void create(@RequestBody Product product) {\n+        productService.saveProduct(product);\n+    }\n+\n+    @GetMapping(value = \"/{id}/category/{category}\")\n+    public Optional<Product> get(@PathVariable String id, @PathVariable String category) {\n+        return productService.findById(id, category);\n+    }\n+\n+    @DeleteMapping(value = \"/{id}/category/{category}\")\n+    public void delete(@PathVariable String id, @PathVariable String category) {\n+        productService.delete(id, category);\n+    }\n+\n+    @GetMapping\n+    public List<Product> getByName(@RequestParam String name) {\n+        return productService.findProductByName(name);\n+    }\n+\n+    @GetMapping(value = \"/category/{category}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMzUyMA=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5MjMwNg==", "bodyText": "@rpvilao Does this sound ohkk to you?", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462592306", "createdAt": "2020-07-29T21:12:35Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/controller/ProductController.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.spring.data.cosmosdb.controller;\n+\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.service.ProductService;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@RestController\n+@RequestMapping(\"/products\")\n+public class ProductController {\n+\n+    @Autowired\n+    private ProductService productService;\n+\n+    @PostMapping\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public void create(@RequestBody Product product) {\n+        productService.saveProduct(product);\n+    }\n+\n+    @GetMapping(value = \"/{id}/category/{category}\")\n+    public Optional<Product> get(@PathVariable String id, @PathVariable String category) {\n+        return productService.findById(id, category);\n+    }\n+\n+    @DeleteMapping(value = \"/{id}/category/{category}\")\n+    public void delete(@PathVariable String id, @PathVariable String category) {\n+        productService.delete(id, category);\n+    }\n+\n+    @GetMapping\n+    public List<Product> getByName(@RequestParam String name) {\n+        return productService.findProductByName(name);\n+    }\n+\n+    @GetMapping(value = \"/category/{category}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMzUyMA=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTk1MTQ1OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/entity/Product.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzo0MzozMlrOG3XINQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo0NjowNVrOG5JhJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMzc5Nw==", "bodyText": "maybe we could use lombok here. the two string can also go way", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r460703797", "createdAt": "2020-07-27T07:43:32Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/entity/Product.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.baeldung.spring.data.cosmosdb.entity;\n+\n+import com.microsoft.azure.spring.data.cosmosdb.core.mapping.Document;\n+import com.microsoft.azure.spring.data.cosmosdb.core.mapping.PartitionKey;\n+\n+import org.springframework.data.annotation.Id;\n+\n+@Document(collection = \"products\")\n+public class Product {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3NzU2Nw==", "bodyText": "Used Lombok", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462577567", "createdAt": "2020-07-29T20:45:19Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/entity/Product.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.baeldung.spring.data.cosmosdb.entity;\n+\n+import com.microsoft.azure.spring.data.cosmosdb.core.mapping.Document;\n+import com.microsoft.azure.spring.data.cosmosdb.core.mapping.PartitionKey;\n+\n+import org.springframework.data.annotation.Id;\n+\n+@Document(collection = \"products\")\n+public class Product {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMzc5Nw=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3Nzk1OA==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462577958", "createdAt": "2020-07-29T20:46:05Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/entity/Product.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.baeldung.spring.data.cosmosdb.entity;\n+\n+import com.microsoft.azure.spring.data.cosmosdb.core.mapping.Document;\n+import com.microsoft.azure.spring.data.cosmosdb.core.mapping.PartitionKey;\n+\n+import org.springframework.data.annotation.Id;\n+\n+@Document(collection = \"products\")\n+public class Product {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMzc5Nw=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTk1MjY4OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/service/ProductService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzo0Mzo1OFrOG3XI9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzo0Mzo1OFrOG3XI9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwMzk5MA==", "bodyText": "promote to a constructor init", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r460703990", "createdAt": "2020-07-27T07:43:58Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/service/ProductService.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.spring.data.cosmosdb.service;\n+\n+import com.azure.data.cosmos.PartitionKey;\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Component\n+public class ProductService {\n+\n+    @Autowired", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTk1NDAzOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/service/ProductService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNzo0NDoyMFrOG3XJvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo0NTo0NlrOG5JgoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwNDE4OA==", "bodyText": "no need to store it in the var, just return it", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r460704188", "createdAt": "2020-07-27T07:44:20Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/service/ProductService.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.spring.data.cosmosdb.service;\n+\n+import com.azure.data.cosmos.PartitionKey;\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Component\n+public class ProductService {\n+\n+    @Autowired\n+    private ProductRepository repository;\n+\n+    public List<Product> findProductByName(String productName) {\n+        return repository.findByProductName(productName);\n+    }\n+\n+    public Optional<Product> findById(String productId, String category) {\n+        return repository.findById(productId, new PartitionKey(category));\n+    }\n+\n+    public List<Product> getProductsOfCategory(String category) {\n+        List<Product> products = repository.findByProductCategory(category);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3NzgyNQ==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462577825", "createdAt": "2020-07-29T20:45:46Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/service/ProductService.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.spring.data.cosmosdb.service;\n+\n+import com.azure.data.cosmos.PartitionKey;\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Component\n+public class ProductService {\n+\n+    @Autowired\n+    private ProductRepository repository;\n+\n+    public List<Product> findProductByName(String productName) {\n+        return repository.findByProductName(productName);\n+    }\n+\n+    public Optional<Product> findById(String productId, String category) {\n+        return repository.findById(productId, new PartitionKey(category));\n+    }\n+\n+    public List<Product> getProductsOfCategory(String category) {\n+        List<Product> products = repository.findByProductCategory(category);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwNDE4OA=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjAzMzc4OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODowODoyMFrOG3X6Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMToxNzo0MFrOG5KjBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNjY0Mw==", "bodyText": "name this *ManualTest and put everything ready to run without uncommenting anything (assertions included)", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r460716643", "createdAt": "2020-07-27T08:08:20Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationIntegrationTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.baeldung.spring.data.cosmosdb;\n+\n+import com.azure.data.cosmos.PartitionKey;\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.util.Assert;\n+\n+import java.util.Optional;\n+\n+//Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n+//to run the integration test\n+//@SpringBootTest\n+public class AzurecosmodbApplicationIntegrationTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3OTk2Nw==", "bodyText": "I have changed the name of class to *ManualTest. I have uncommented the code in test case. I have not removed the commented part before @SpringBootTest and @test annotation because when I was running it locally it was failing.\nSo if you are sure uncommenting these will not break the integration build in future.Let me know I will uncomment these.", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462579967", "createdAt": "2020-07-29T20:50:00Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationIntegrationTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.baeldung.spring.data.cosmosdb;\n+\n+import com.azure.data.cosmos.PartitionKey;\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.util.Assert;\n+\n+import java.util.Optional;\n+\n+//Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n+//to run the integration test\n+//@SpringBootTest\n+public class AzurecosmodbApplicationIntegrationTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNjY0Mw=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU4MzE4Nw==", "bodyText": "Hi, that's what I meant. Our pom only looks for stuff ending in IntegrationTest and others alike, so it's safe to just do it. If for some reason it fails we'll immediately know and do something about that. But in general, our readers shouldn't need to uncomment or configure stuff to get things running.", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462583187", "createdAt": "2020-07-29T20:55:55Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationIntegrationTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.baeldung.spring.data.cosmosdb;\n+\n+import com.azure.data.cosmos.PartitionKey;\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.util.Assert;\n+\n+import java.util.Optional;\n+\n+//Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n+//to run the integration test\n+//@SpringBootTest\n+public class AzurecosmodbApplicationIntegrationTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNjY0Mw=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5MjQ5NA==", "bodyText": "Cool , I will uncomment these then :)", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462592494", "createdAt": "2020-07-29T21:12:59Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationIntegrationTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.baeldung.spring.data.cosmosdb;\n+\n+import com.azure.data.cosmos.PartitionKey;\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.util.Assert;\n+\n+import java.util.Optional;\n+\n+//Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n+//to run the integration test\n+//@SpringBootTest\n+public class AzurecosmodbApplicationIntegrationTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNjY0Mw=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5NDgyMQ==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462594821", "createdAt": "2020-07-29T21:17:40Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationIntegrationTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.baeldung.spring.data.cosmosdb;\n+\n+import com.azure.data.cosmos.PartitionKey;\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.util.Assert;\n+\n+import java.util.Optional;\n+\n+//Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n+//to run the integration test\n+//@SpringBootTest\n+public class AzurecosmodbApplicationIntegrationTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNjY0Mw=="}, "originalCommit": {"oid": "3a0346c0627f6d9ac3be00f0aa1cd68b7b5456ad"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODEyNzkwOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationManualTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMToyNjowNFrOG5KzTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTozNjowNFrOG5LGVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5ODk4OQ==", "bodyText": "the optional here will never be null, just the thing inside. so you need to retrieve the value and assert it", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462598989", "createdAt": "2020-07-29T21:26:04Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationManualTest.java", "diffHunk": "@@ -14,26 +14,24 @@\n //Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n //to run the integration test\n //@SpringBootTest\n-public class AzurecosmodbApplicationIntegrationTest {\n+public class AzurecosmodbApplicationManualTest {\n \n     @Autowired\n     ProductRepository productRepository;\n \n     // Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n     // to run the integration test\n-    // @Test\n+    //@Test\n     public void givenProductIsCreated_whenCallFindById_thenProductIsFound() {\n         Product product = new Product();\n         product.setProductid(\"1001\");\n         product.setProductCategory(\"Shirt\");\n         product.setPrice(110.0);\n         product.setProductName(\"Blue Shirt\");\n \n-        // Uncomment these lines when configured URI and keys for Azure Cosmos DB in application.properties\n-        // to run the integration test\n-        // productRepository.save(product);\n-        // Optional<Product> retrievedProduct = productRepository.findById(\"1001\", new PartitionKey(\"Shirt\"));\n-        // Assert.notNull(retrievedProduct, \"Retrieved Product is Null\");\n+        productRepository.save(product);\n+        Optional<Product> retrievedProduct = productRepository.findById(\"1001\", new PartitionKey(\"Shirt\"));\n+        Assert.notNull(retrievedProduct, \"Retrieved Product is Null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32fcda4924b04710c5132bc60cfddbdc64e9d370"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMzg2MA==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462603860", "createdAt": "2020-07-29T21:36:04Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationManualTest.java", "diffHunk": "@@ -14,26 +14,24 @@\n //Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n //to run the integration test\n //@SpringBootTest\n-public class AzurecosmodbApplicationIntegrationTest {\n+public class AzurecosmodbApplicationManualTest {\n \n     @Autowired\n     ProductRepository productRepository;\n \n     // Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n     // to run the integration test\n-    // @Test\n+    //@Test\n     public void givenProductIsCreated_whenCallFindById_thenProductIsFound() {\n         Product product = new Product();\n         product.setProductid(\"1001\");\n         product.setProductCategory(\"Shirt\");\n         product.setPrice(110.0);\n         product.setProductName(\"Blue Shirt\");\n \n-        // Uncomment these lines when configured URI and keys for Azure Cosmos DB in application.properties\n-        // to run the integration test\n-        // productRepository.save(product);\n-        // Optional<Product> retrievedProduct = productRepository.findById(\"1001\", new PartitionKey(\"Shirt\"));\n-        // Assert.notNull(retrievedProduct, \"Retrieved Product is Null\");\n+        productRepository.save(product);\n+        Optional<Product> retrievedProduct = productRepository.findById(\"1001\", new PartitionKey(\"Shirt\"));\n+        Assert.notNull(retrievedProduct, \"Retrieved Product is Null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5ODk4OQ=="}, "originalCommit": {"oid": "32fcda4924b04710c5132bc60cfddbdc64e9d370"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODEyODg1OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationManualTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMToyNjoyOVrOG5Kz7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTozNDoyMFrOG5LDFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5OTE1MA==", "bodyText": "remove all commented code", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462599150", "createdAt": "2020-07-29T21:26:29Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationManualTest.java", "diffHunk": "@@ -14,26 +14,24 @@\n //Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n //to run the integration test\n //@SpringBootTest\n-public class AzurecosmodbApplicationIntegrationTest {\n+public class AzurecosmodbApplicationManualTest {\n \n     @Autowired\n     ProductRepository productRepository;\n \n     // Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n     // to run the integration test\n-    // @Test\n+    //@Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32fcda4924b04710c5132bc60cfddbdc64e9d370"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMzAyOA==", "bodyText": "Already done", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462603028", "createdAt": "2020-07-29T21:34:20Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationManualTest.java", "diffHunk": "@@ -14,26 +14,24 @@\n //Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n //to run the integration test\n //@SpringBootTest\n-public class AzurecosmodbApplicationIntegrationTest {\n+public class AzurecosmodbApplicationManualTest {\n \n     @Autowired\n     ProductRepository productRepository;\n \n     // Uncomment this when configured URI and keys for Azure Cosmos DB in application.properties\n     // to run the integration test\n-    // @Test\n+    //@Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5OTE1MA=="}, "originalCommit": {"oid": "32fcda4924b04710c5132bc60cfddbdc64e9d370"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODEzMzAzOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/controller/ProductController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMToyNzo0MVrOG5K2SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTozNjozM1rOG5LHSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5OTc1Mg==", "bodyText": "you can remove this. in the end the user should just do:\n.../products?category=bla and not products/category?category=bla", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462599752", "createdAt": "2020-07-29T21:27:41Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/controller/ProductController.java", "diffHunk": "@@ -46,8 +50,8 @@ public void delete(@PathVariable String id, @PathVariable String category) {\n         return productService.findProductByName(name);\n     }\n \n-    @GetMapping(value = \"/category/{category}\")\n-    public List<Product> getByCategory(@PathVariable String category) {\n+    @GetMapping(value = \"/category\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32fcda4924b04710c5132bc60cfddbdc64e9d370"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMjczOQ==", "bodyText": "I can't actually because there is another method in the controller getByName which will have same URi as this if we remove category.\nWhich causes ambiguity at startup time", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462602739", "createdAt": "2020-07-29T21:33:43Z", "author": {"login": "ankurguptajec"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/controller/ProductController.java", "diffHunk": "@@ -46,8 +50,8 @@ public void delete(@PathVariable String id, @PathVariable String category) {\n         return productService.findProductByName(name);\n     }\n \n-    @GetMapping(value = \"/category/{category}\")\n-    public List<Product> getByCategory(@PathVariable String category) {\n+    @GetMapping(value = \"/category\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5OTc1Mg=="}, "originalCommit": {"oid": "32fcda4924b04710c5132bc60cfddbdc64e9d370"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwNDEwNg==", "bodyText": "ok then we remove this method make the params not required either one or the other and you find out which one is set and use it", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462604106", "createdAt": "2020-07-29T21:36:33Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/controller/ProductController.java", "diffHunk": "@@ -46,8 +50,8 @@ public void delete(@PathVariable String id, @PathVariable String category) {\n         return productService.findProductByName(name);\n     }\n \n-    @GetMapping(value = \"/category/{category}\")\n-    public List<Product> getByCategory(@PathVariable String category) {\n+    @GetMapping(value = \"/category\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5OTc1Mg=="}, "originalCommit": {"oid": "32fcda4924b04710c5132bc60cfddbdc64e9d370"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODE2NzQ2OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationManualTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTozODo1MVrOG5LLSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTozODo1MVrOG5LLSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwNTEzMQ==", "bodyText": "no.. this will produce a null pointer if it's null and the test is not doing the same thing. just do:\nOptional retrievedProduct = productRepository.findById(\"1001\", new PartitionKey(\"Shirt\")).orElse(null); and then assert the variable", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r462605131", "createdAt": "2020-07-29T21:38:51Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationManualTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.baeldung.spring.data.cosmosdb;\n+\n+import com.azure.data.cosmos.PartitionKey;\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.util.Assert;\n+\n+import java.util.Optional;\n+\n+@SpringBootTest\n+public class AzurecosmodbApplicationManualTest {\n+\n+    @Autowired\n+    ProductRepository productRepository;\n+\n+    @Test\n+    public void givenProductIsCreated_whenCallFindById_thenProductIsFound() {\n+        Product product = new Product();\n+        product.setProductid(\"1001\");\n+        product.setProductCategory(\"Shirt\");\n+        product.setPrice(110.0);\n+        product.setProductName(\"Blue Shirt\");\n+\n+        productRepository.save(product);\n+        Optional<Product> retrievedProduct = productRepository.findById(\"1001\", new PartitionKey(\"Shirt\"));\n+        Assert.notNull(retrievedProduct.get(), \"Retrieved Product is Null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fbf6177578a9c67fa29bd939e89f40de1dec33"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NzMyNDE2OnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationManualTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxODo0MDoxNFrOG6fm5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxODo0MDoxNFrOG6fm5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk4ODQ1Mg==", "bodyText": "AzureCosmosDb...", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r463988452", "createdAt": "2020-08-01T18:40:14Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/test/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplicationManualTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package com.baeldung.spring.data.cosmosdb;\n+\n+import com.azure.data.cosmos.PartitionKey;\n+import com.baeldung.spring.data.cosmosdb.entity.Product;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.util.Assert;\n+\n+@SpringBootTest\n+public class AzurecosmodbApplicationManualTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e624854b5ac9688c903dcca3872a1f9ea235e5cf"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NzMyNDQyOnYy", "diffSide": "RIGHT", "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplication.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxODo0MDozMFrOG6fnAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxODo0MDozMFrOG6fnAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk4ODQ4MQ==", "bodyText": "AzureCosmosDb", "url": "https://github.com/eugenp/tutorials/pull/9771#discussion_r463988481", "createdAt": "2020-08-01T18:40:30Z", "author": {"login": "rpvilao"}, "path": "persistence-modules/spring-data-cosmosdb/src/main/java/com/baeldung/spring/data/cosmosdb/AzurecosmodbApplication.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.baeldung.spring.data.cosmosdb;\n+\n+import com.azure.data.cosmos.CosmosKeyCredential;\n+import com.baeldung.spring.data.cosmosdb.repository.ProductRepository;\n+import com.microsoft.azure.spring.data.cosmosdb.config.AbstractCosmosConfiguration;\n+import com.microsoft.azure.spring.data.cosmosdb.config.CosmosDBConfig;\n+import com.microsoft.azure.spring.data.cosmosdb.repository.config.EnableCosmosRepositories;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.context.annotation.Bean;\n+\n+@SpringBootApplication\n+@EnableCosmosRepositories(basePackageClasses = ProductRepository.class)\n+public class AzurecosmodbApplication extends AbstractCosmosConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e624854b5ac9688c903dcca3872a1f9ea235e5cf"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4288, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}