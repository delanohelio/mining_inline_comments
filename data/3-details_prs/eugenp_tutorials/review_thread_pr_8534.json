{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyODg3NzIx", "number": 8534, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mjo0NVrODc21kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mzo1OVrODc22JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg1MTY4OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mjo0NVrOFlIDgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOToyMTowOFrOFlM-Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzYwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenString_whenCallingContainsWithToLowerOrUpperCase_shouldReturnTrue() {\n          \n          \n            \n                public void givenString_whenCallingContainsWithToLowerOrUpperCase_thenReturnsTrue() {", "url": "https://github.com/eugenp/tutorials/pull/8534#discussion_r374473601", "createdAt": "2020-02-04T04:52:45Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.baeldung.contains;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.regex.Pattern;\n+\n+/**\n+ * BAEL-3739: Different ways to solve the contains() case insensitive behavior.\n+ */\n+public class CaseInsensitiveWorkaroundsUnitTest {\n+\n+    private String src = \"Lorem ipsum dolor sit amet\";\n+    private String dest = \"lorem\";\n+\n+    @Test\n+    public void givenString_whenCallingContainsWithToLowerOrUpperCase_shouldReturnTrue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0decea17cf6787da3ee00e480c85ff1bbb12d418"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NDEyNw==", "bodyText": "@KevinGilmore Totally agree with you, I accepted the proposed changes", "url": "https://github.com/eugenp/tutorials/pull/8534#discussion_r374554127", "createdAt": "2020-02-04T09:21:08Z", "author": {"login": "carloscaverobarca"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.baeldung.contains;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.regex.Pattern;\n+\n+/**\n+ * BAEL-3739: Different ways to solve the contains() case insensitive behavior.\n+ */\n+public class CaseInsensitiveWorkaroundsUnitTest {\n+\n+    private String src = \"Lorem ipsum dolor sit amet\";\n+    private String dest = \"lorem\";\n+\n+    @Test\n+    public void givenString_whenCallingContainsWithToLowerOrUpperCase_shouldReturnTrue() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzYwMQ=="}, "originalCommit": {"oid": "0decea17cf6787da3ee00e480c85ff1bbb12d418"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg1MTk5OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1MzowMVrOFlIDsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1MzowMVrOFlIDsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzY0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenString_whenCallingStringMatches_shouldReturnTrue() {\n          \n          \n            \n                public void givenString_whenCallingStringMatches_thenReturnsTrue() {", "url": "https://github.com/eugenp/tutorials/pull/8534#discussion_r374473648", "createdAt": "2020-02-04T04:53:01Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.baeldung.contains;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.regex.Pattern;\n+\n+/**\n+ * BAEL-3739: Different ways to solve the contains() case insensitive behavior.\n+ */\n+public class CaseInsensitiveWorkaroundsUnitTest {\n+\n+    private String src = \"Lorem ipsum dolor sit amet\";\n+    private String dest = \"lorem\";\n+\n+    @Test\n+    public void givenString_whenCallingContainsWithToLowerOrUpperCase_shouldReturnTrue() {\n+        // Use toLowerCase to avoid case insensitive issues\n+        Assert.assertTrue(src.toLowerCase().contains(dest.toLowerCase()));\n+\n+        // Use toUpperCase to avoid case insensitive issues\n+        Assert.assertTrue(src.toUpperCase().contains(dest.toUpperCase()));\n+    }\n+    \n+    @Test\n+    public void givenString_whenCallingStringMatches_shouldReturnTrue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0decea17cf6787da3ee00e480c85ff1bbb12d418"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg1MjUyOnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1MzoyOVrOFlID9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1MzoyOVrOFlID9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzcxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenString_whenCallingStringRegionMatches_shouldReturnTrue() {\n          \n          \n            \n                public void givenString_whenCallingStringRegionMatches_thenReturnsTrue() {", "url": "https://github.com/eugenp/tutorials/pull/8534#discussion_r374473716", "createdAt": "2020-02-04T04:53:29Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.baeldung.contains;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.regex.Pattern;\n+\n+/**\n+ * BAEL-3739: Different ways to solve the contains() case insensitive behavior.\n+ */\n+public class CaseInsensitiveWorkaroundsUnitTest {\n+\n+    private String src = \"Lorem ipsum dolor sit amet\";\n+    private String dest = \"lorem\";\n+\n+    @Test\n+    public void givenString_whenCallingContainsWithToLowerOrUpperCase_shouldReturnTrue() {\n+        // Use toLowerCase to avoid case insensitive issues\n+        Assert.assertTrue(src.toLowerCase().contains(dest.toLowerCase()));\n+\n+        // Use toUpperCase to avoid case insensitive issues\n+        Assert.assertTrue(src.toUpperCase().contains(dest.toUpperCase()));\n+    }\n+    \n+    @Test\n+    public void givenString_whenCallingStringMatches_shouldReturnTrue() {\n+        // Use String Matches to avoid case insensitive issues\n+        Assert.assertTrue(src.matches(\"(?i).*\" + dest + \".*\"));\n+    }\n+    \n+    @Test\n+    public void givenString_whenCallingStringRegionMatches_shouldReturnTrue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0decea17cf6787da3ee00e480c85ff1bbb12d418"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg1Mjg4OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mzo0NFrOFlIELQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mzo0NFrOFlIELQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mzc3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenString_whenCallingPaternCompileMatcherFind_shouldReturnTrue() {\n          \n          \n            \n                public void givenString_whenCallingPaternCompileMatcherFind_thenReturnsTrue() {", "url": "https://github.com/eugenp/tutorials/pull/8534#discussion_r374473773", "createdAt": "2020-02-04T04:53:44Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.baeldung.contains;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.regex.Pattern;\n+\n+/**\n+ * BAEL-3739: Different ways to solve the contains() case insensitive behavior.\n+ */\n+public class CaseInsensitiveWorkaroundsUnitTest {\n+\n+    private String src = \"Lorem ipsum dolor sit amet\";\n+    private String dest = \"lorem\";\n+\n+    @Test\n+    public void givenString_whenCallingContainsWithToLowerOrUpperCase_shouldReturnTrue() {\n+        // Use toLowerCase to avoid case insensitive issues\n+        Assert.assertTrue(src.toLowerCase().contains(dest.toLowerCase()));\n+\n+        // Use toUpperCase to avoid case insensitive issues\n+        Assert.assertTrue(src.toUpperCase().contains(dest.toUpperCase()));\n+    }\n+    \n+    @Test\n+    public void givenString_whenCallingStringMatches_shouldReturnTrue() {\n+        // Use String Matches to avoid case insensitive issues\n+        Assert.assertTrue(src.matches(\"(?i).*\" + dest + \".*\"));\n+    }\n+    \n+    @Test\n+    public void givenString_whenCallingStringRegionMatches_shouldReturnTrue() {\n+        // Use String Region Matches to avoid case insensitive issues\n+        CaseInsensitiveWorkarounds comparator = new CaseInsensitiveWorkarounds();\n+        Assert.assertTrue(comparator.processRegionMatches(src, dest));\n+    }\n+    \n+    \n+    @Test\n+    public void givenString_whenCallingPaternCompileMatcherFind_shouldReturnTrue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0decea17cf6787da3ee00e480c85ff1bbb12d418"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg1MzE2OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mzo1OVrOFlIEVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mzo1OVrOFlIEVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzgxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenString_whenCallingStringUtilsContainsIgnoreCase_shouldReturnTrue() {\n          \n          \n            \n                public void givenString_whenCallingStringUtilsContainsIgnoreCase_thenReturnsTrue() {", "url": "https://github.com/eugenp/tutorials/pull/8534#discussion_r374473812", "createdAt": "2020-02-04T04:53:59Z", "author": {"login": "KevinGilmore"}, "path": "core-java-modules/core-java-string-operations-2/src/test/java/com/baeldung/contains/CaseInsensitiveWorkaroundsUnitTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.baeldung.contains;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.regex.Pattern;\n+\n+/**\n+ * BAEL-3739: Different ways to solve the contains() case insensitive behavior.\n+ */\n+public class CaseInsensitiveWorkaroundsUnitTest {\n+\n+    private String src = \"Lorem ipsum dolor sit amet\";\n+    private String dest = \"lorem\";\n+\n+    @Test\n+    public void givenString_whenCallingContainsWithToLowerOrUpperCase_shouldReturnTrue() {\n+        // Use toLowerCase to avoid case insensitive issues\n+        Assert.assertTrue(src.toLowerCase().contains(dest.toLowerCase()));\n+\n+        // Use toUpperCase to avoid case insensitive issues\n+        Assert.assertTrue(src.toUpperCase().contains(dest.toUpperCase()));\n+    }\n+    \n+    @Test\n+    public void givenString_whenCallingStringMatches_shouldReturnTrue() {\n+        // Use String Matches to avoid case insensitive issues\n+        Assert.assertTrue(src.matches(\"(?i).*\" + dest + \".*\"));\n+    }\n+    \n+    @Test\n+    public void givenString_whenCallingStringRegionMatches_shouldReturnTrue() {\n+        // Use String Region Matches to avoid case insensitive issues\n+        CaseInsensitiveWorkarounds comparator = new CaseInsensitiveWorkarounds();\n+        Assert.assertTrue(comparator.processRegionMatches(src, dest));\n+    }\n+    \n+    \n+    @Test\n+    public void givenString_whenCallingPaternCompileMatcherFind_shouldReturnTrue() {\n+        // Use Pattern Compile Matcher and Find to avoid case insensitive issues\n+        Assert.assertTrue(Pattern.compile(Pattern.quote(dest), \n+            Pattern.CASE_INSENSITIVE) .matcher(src) .find());\n+    }\n+    \n+    @Test\n+    public void givenString_whenCallingStringUtilsContainsIgnoreCase_shouldReturnTrue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0decea17cf6787da3ee00e480c85ff1bbb12d418"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4405, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}