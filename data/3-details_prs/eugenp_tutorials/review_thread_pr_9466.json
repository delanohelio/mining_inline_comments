{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNDk0ODc2", "number": 9466, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxOTo0NFrOEEcmgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo1MjowN1rOEIpq2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk4MzY5OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-regex/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxOTo0NFrOGiE4zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxOTo0NFrOGiE4zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDg0Ng==", "bodyText": "Do we need the compiler plugin at all? Isn't it Java 8 by default anyway?", "url": "https://github.com/eugenp/tutorials/pull/9466#discussion_r438384846", "createdAt": "2020-06-10T20:19:44Z", "author": {"login": "ashleyfrieze"}, "path": "core-java-modules/core-java-regex/pom.xml", "diffHunk": "@@ -43,6 +43,24 @@\n                 <filtering>true</filtering>\n             </resource>\n         </resources>\n+        <plugins>\n+        <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <version>${maven-compiler-plugin.version}</version>\n+                <configuration>\n+                    <source>${maven.compiler.source.version}</source>\n+                    <target>${maven.compiler.target.version}</target>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n     </build>\n+    \n+    <properties>\n+        <!-- testing -->\n+        <assertj.version>3.15.0</assertj.version>\n+        <maven.compiler.source.version>1.8</maven.compiler.source.version>\n+        <maven.compiler.target.version>1.8</maven.compiler.target.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a950361f841a2fc3c15ad735603f0da04632daf9"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk4NjU1OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyMDozNlrOGiE6iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDoyNToxOFrOGiKiYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NTI4OQ==", "bodyText": "This doesn't have to be in a @Before - it can be in the initializer list of the class, and probably should be.", "url": "https://github.com/eugenp/tutorials/pull/9466#discussion_r438385289", "createdAt": "2020-06-10T20:20:36Z", "author": {"login": "ashleyfrieze"}, "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.regex.countmatches;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+/**\n+ * Unit Test intended to count number of matches of a RegEx using Java 8 and 9.\n+ * \n+ * Java 9 is needed to run the test.\n+ */\n+public class CountMatchesUnitTest {\n+\n+    private static final Pattern EMAIL_ADDRESS_PATTERN = Pattern.compile(\"([a-z0-9_.-]+)@([a-z0-9_.-]+[a-z])\");\n+    private static final String TEXT_CONTAINING_EMAIL_ADDRESSES = \"You can contact me through: writer@baeldung.com, editor@baeldung.com and team@bealdung.com\";\n+\n+    private Matcher countEmailMatcher;\n+\n+    @Before\n+    public void setup() {\n+        countEmailMatcher = EMAIL_ADDRESS_PATTERN.matcher(TEXT_CONTAINING_EMAIL_ADDRESSES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a950361f841a2fc3c15ad735603f0da04632daf9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3NzQwOA==", "bodyText": "I moved to the method because now we have more strings to test.", "url": "https://github.com/eugenp/tutorials/pull/9466#discussion_r438477408", "createdAt": "2020-06-11T00:25:18Z", "author": {"login": "roqmarcelo"}, "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.regex.countmatches;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+/**\n+ * Unit Test intended to count number of matches of a RegEx using Java 8 and 9.\n+ * \n+ * Java 9 is needed to run the test.\n+ */\n+public class CountMatchesUnitTest {\n+\n+    private static final Pattern EMAIL_ADDRESS_PATTERN = Pattern.compile(\"([a-z0-9_.-]+)@([a-z0-9_.-]+[a-z])\");\n+    private static final String TEXT_CONTAINING_EMAIL_ADDRESSES = \"You can contact me through: writer@baeldung.com, editor@baeldung.com and team@bealdung.com\";\n+\n+    private Matcher countEmailMatcher;\n+\n+    @Before\n+    public void setup() {\n+        countEmailMatcher = EMAIL_ADDRESS_PATTERN.matcher(TEXT_CONTAINING_EMAIL_ADDRESSES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NTI4OQ=="}, "originalCommit": {"oid": "a950361f841a2fc3c15ad735603f0da04632daf9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk4OTg0OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyMToyN1rOGiE8eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDoyNToyOVrOGiKimw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NTc4NQ==", "bodyText": "let's move the .count() to the previous line to make it easier to understand it even when commented", "url": "https://github.com/eugenp/tutorials/pull/9466#discussion_r438385785", "createdAt": "2020-06-10T20:21:27Z", "author": {"login": "ashleyfrieze"}, "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.regex.countmatches;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+/**\n+ * Unit Test intended to count number of matches of a RegEx using Java 8 and 9.\n+ * \n+ * Java 9 is needed to run the test.\n+ */\n+public class CountMatchesUnitTest {\n+\n+    private static final Pattern EMAIL_ADDRESS_PATTERN = Pattern.compile(\"([a-z0-9_.-]+)@([a-z0-9_.-]+[a-z])\");\n+    private static final String TEXT_CONTAINING_EMAIL_ADDRESSES = \"You can contact me through: writer@baeldung.com, editor@baeldung.com and team@bealdung.com\";\n+\n+    private Matcher countEmailMatcher;\n+\n+    @Before\n+    public void setup() {\n+        countEmailMatcher = EMAIL_ADDRESS_PATTERN.matcher(TEXT_CONTAINING_EMAIL_ADDRESSES);\n+    }\n+\n+    @Test\n+    public void givenContainingEmailString_whenJava8Match_thenCountMacthesFound() {\n+        int count = 0;\n+        while (countEmailMatcher.find()) {\n+            count++;\n+        }\n+\n+        assertEquals(3, count);\n+    }\n+\n+    @Test\n+    public void givenContainingEmailString_whenUsingSplit_thenCountMacthesFound() {\n+        long count = EMAIL_ADDRESS_PATTERN.split(TEXT_CONTAINING_EMAIL_ADDRESSES).length;\n+\n+        assertEquals(3, count);\n+    }\n+\n+    @Test\n+    public void givenContainingEmailString_whenUsingSplitAsStream_thenCountMacthesFound() {\n+        long count = EMAIL_ADDRESS_PATTERN.splitAsStream(TEXT_CONTAINING_EMAIL_ADDRESSES)\n+            .count();\n+\n+        assertEquals(3, count);\n+    }\n+\n+    @Test\n+    public void givenContainingEmailString_whenStartingInJava9Match_thenCountMacthesFound() {\n+        // long count = countEmailMatcher.results()\n+        // .count();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a950361f841a2fc3c15ad735603f0da04632daf9"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3NzQ2Nw==", "bodyText": "Done.", "url": "https://github.com/eugenp/tutorials/pull/9466#discussion_r438477467", "createdAt": "2020-06-11T00:25:29Z", "author": {"login": "roqmarcelo"}, "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.baeldung.regex.countmatches;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+/**\n+ * Unit Test intended to count number of matches of a RegEx using Java 8 and 9.\n+ * \n+ * Java 9 is needed to run the test.\n+ */\n+public class CountMatchesUnitTest {\n+\n+    private static final Pattern EMAIL_ADDRESS_PATTERN = Pattern.compile(\"([a-z0-9_.-]+)@([a-z0-9_.-]+[a-z])\");\n+    private static final String TEXT_CONTAINING_EMAIL_ADDRESSES = \"You can contact me through: writer@baeldung.com, editor@baeldung.com and team@bealdung.com\";\n+\n+    private Matcher countEmailMatcher;\n+\n+    @Before\n+    public void setup() {\n+        countEmailMatcher = EMAIL_ADDRESS_PATTERN.matcher(TEXT_CONTAINING_EMAIL_ADDRESSES);\n+    }\n+\n+    @Test\n+    public void givenContainingEmailString_whenJava8Match_thenCountMacthesFound() {\n+        int count = 0;\n+        while (countEmailMatcher.find()) {\n+            count++;\n+        }\n+\n+        assertEquals(3, count);\n+    }\n+\n+    @Test\n+    public void givenContainingEmailString_whenUsingSplit_thenCountMacthesFound() {\n+        long count = EMAIL_ADDRESS_PATTERN.split(TEXT_CONTAINING_EMAIL_ADDRESSES).length;\n+\n+        assertEquals(3, count);\n+    }\n+\n+    @Test\n+    public void givenContainingEmailString_whenUsingSplitAsStream_thenCountMacthesFound() {\n+        long count = EMAIL_ADDRESS_PATTERN.splitAsStream(TEXT_CONTAINING_EMAIL_ADDRESSES)\n+            .count();\n+\n+        assertEquals(3, count);\n+    }\n+\n+    @Test\n+    public void givenContainingEmailString_whenStartingInJava9Match_thenCountMacthesFound() {\n+        // long count = countEmailMatcher.results()\n+        // .count();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NTc4NQ=="}, "originalCommit": {"oid": "a950361f841a2fc3c15ad735603f0da04632daf9"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTA2NjM2OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo1MTo0NFrOGovW7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNDowNjowNlrOGpTA7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3MjE0MQ==", "bodyText": "Let's say \"commented out tests\"", "url": "https://github.com/eugenp/tutorials/pull/9466#discussion_r445372141", "createdAt": "2020-06-25T07:51:44Z", "author": {"login": "ashleyfrieze"}, "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.baeldung.regex.countmatches;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.junit.Test;\n+\n+/**\n+ * Unit Test intended to count number of matches of a RegEx using Java 8 and 9.\n+ * \n+ * Java 9 is needed to run the test.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e43949b425268cd0c242461e79061dc3fcbc4efb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1NjMzNA==", "bodyText": "Got it.", "url": "https://github.com/eugenp/tutorials/pull/9466#discussion_r445956334", "createdAt": "2020-06-26T04:06:06Z", "author": {"login": "roqmarcelo"}, "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.baeldung.regex.countmatches;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.junit.Test;\n+\n+/**\n+ * Unit Test intended to count number of matches of a RegEx using Java 8 and 9.\n+ * \n+ * Java 9 is needed to run the test.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3MjE0MQ=="}, "originalCommit": {"oid": "e43949b425268cd0c242461e79061dc3fcbc4efb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTA2Nzc4OnYy", "diffSide": "RIGHT", "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo1MjowN1rOGovXyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNDowNTo1NlrOGpTAww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3MjM2MQ==", "bodyText": "Please put a line in line // uncomment to try with Java 9 on all these commented out tests", "url": "https://github.com/eugenp/tutorials/pull/9466#discussion_r445372361", "createdAt": "2020-06-25T07:52:07Z", "author": {"login": "ashleyfrieze"}, "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.baeldung.regex.countmatches;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.junit.Test;\n+\n+/**\n+ * Unit Test intended to count number of matches of a RegEx using Java 8 and 9.\n+ * \n+ * Java 9 is needed to run the test.\n+ */\n+public class CountMatchesUnitTest {\n+\n+    private static final Pattern EMAIL_ADDRESS_PATTERN = Pattern.compile(\"([a-z0-9_.-]+)@([a-z0-9_.-]+[a-z])\");\n+    private static final String TEXT_CONTAINING_EMAIL_ADDRESSES = \"You can contact me through: writer@baeldung.com, editor@baeldung.com and team@bealdung.com\";\n+    private static final String TEXT_CONTAINING_FIVE_EMAIL_ADDRESSES = \"Valid emails are: me@gmail.com, you@baeldung.com, contact@hotmail.com, press@anysite.com and support@bealdung.com\";\n+\n+    @Test\n+    public void givenContainingEmailString_whenJava8Match_thenCountMacthesFound() {\n+        Matcher countEmailMatcher = EMAIL_ADDRESS_PATTERN.matcher(TEXT_CONTAINING_EMAIL_ADDRESSES);\n+\n+        int count = 0;\n+        while (countEmailMatcher.find()) {\n+            count++;\n+        }\n+\n+        assertEquals(3, count);\n+    }\n+\n+    @Test\n+    public void givenContainingFiveEmailsString_whenJava8Match_thenCountMacthesFound() {\n+        Matcher countFiveEmailsMatcher = EMAIL_ADDRESS_PATTERN.matcher(TEXT_CONTAINING_FIVE_EMAIL_ADDRESSES);\n+\n+        int count = 0;\n+        while (countFiveEmailsMatcher.find()) {\n+            count++;\n+        }\n+\n+        assertEquals(5, count);\n+    }\n+\n+    @Test\n+    public void givenStringWithoutEmails_whenJava8Match_thenCountMacthesNotFound() {\n+        Matcher noEmailMatcher = EMAIL_ADDRESS_PATTERN.matcher(\"Simple text without emails.\");\n+\n+        int count = 0;\n+        while (noEmailMatcher.find()) {\n+            count++;\n+        }\n+\n+        assertEquals(0, count);\n+    }\n+\n+    @Test\n+    public void givenContainingEmailString_whenStartingInJava9Match_thenCountMacthesFound() {\n+        // Matcher countEmailMatcher = EMAIL_ADDRESS_PATTERN.matcher(TEXT_CONTAINING_EMAIL_ADDRESSES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e43949b425268cd0c242461e79061dc3fcbc4efb"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1NjI5MQ==", "bodyText": "Done", "url": "https://github.com/eugenp/tutorials/pull/9466#discussion_r445956291", "createdAt": "2020-06-26T04:05:56Z", "author": {"login": "roqmarcelo"}, "path": "core-java-modules/core-java-regex/src/test/java/com/baeldung/regex/countmatches/CountMatchesUnitTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.baeldung.regex.countmatches;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.junit.Test;\n+\n+/**\n+ * Unit Test intended to count number of matches of a RegEx using Java 8 and 9.\n+ * \n+ * Java 9 is needed to run the test.\n+ */\n+public class CountMatchesUnitTest {\n+\n+    private static final Pattern EMAIL_ADDRESS_PATTERN = Pattern.compile(\"([a-z0-9_.-]+)@([a-z0-9_.-]+[a-z])\");\n+    private static final String TEXT_CONTAINING_EMAIL_ADDRESSES = \"You can contact me through: writer@baeldung.com, editor@baeldung.com and team@bealdung.com\";\n+    private static final String TEXT_CONTAINING_FIVE_EMAIL_ADDRESSES = \"Valid emails are: me@gmail.com, you@baeldung.com, contact@hotmail.com, press@anysite.com and support@bealdung.com\";\n+\n+    @Test\n+    public void givenContainingEmailString_whenJava8Match_thenCountMacthesFound() {\n+        Matcher countEmailMatcher = EMAIL_ADDRESS_PATTERN.matcher(TEXT_CONTAINING_EMAIL_ADDRESSES);\n+\n+        int count = 0;\n+        while (countEmailMatcher.find()) {\n+            count++;\n+        }\n+\n+        assertEquals(3, count);\n+    }\n+\n+    @Test\n+    public void givenContainingFiveEmailsString_whenJava8Match_thenCountMacthesFound() {\n+        Matcher countFiveEmailsMatcher = EMAIL_ADDRESS_PATTERN.matcher(TEXT_CONTAINING_FIVE_EMAIL_ADDRESSES);\n+\n+        int count = 0;\n+        while (countFiveEmailsMatcher.find()) {\n+            count++;\n+        }\n+\n+        assertEquals(5, count);\n+    }\n+\n+    @Test\n+    public void givenStringWithoutEmails_whenJava8Match_thenCountMacthesNotFound() {\n+        Matcher noEmailMatcher = EMAIL_ADDRESS_PATTERN.matcher(\"Simple text without emails.\");\n+\n+        int count = 0;\n+        while (noEmailMatcher.find()) {\n+            count++;\n+        }\n+\n+        assertEquals(0, count);\n+    }\n+\n+    @Test\n+    public void givenContainingEmailString_whenStartingInJava9Match_thenCountMacthesFound() {\n+        // Matcher countEmailMatcher = EMAIL_ADDRESS_PATTERN.matcher(TEXT_CONTAINING_EMAIL_ADDRESSES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3MjM2MQ=="}, "originalCommit": {"oid": "e43949b425268cd0c242461e79061dc3fcbc4efb"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4323, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}