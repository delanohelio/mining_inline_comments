{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMzI4MTgy", "number": 3178, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDoyNjo1NVrOEaPEmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOToyMjo0N1rOEabibQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTQ1MzY5OnYy", "diffSide": "RIGHT", "path": "zipkin-collector/kafka/src/test/java/zipkin2/collector/kafka/KafkaCollectorRule.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDoyNjo1NVrOHDiZJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODozNjoxN1rOHD0ZKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ3MTI3MQ==", "bodyText": "in others, we were specifying version tag. latest might be fine even if not necessarily repeatable... it would be less maintenance (and less thrashy than \"master\" tag) wdyt cc @anuraaga", "url": "https://github.com/openzipkin/zipkin/pull/3178#discussion_r473471271", "createdAt": "2020-08-20T00:26:55Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-collector/kafka/src/test/java/zipkin2/collector/kafka/KafkaCollectorRule.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2015-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package zipkin2.collector.kafka;\n+\n+import org.apache.kafka.clients.admin.AdminClient;\n+import org.apache.kafka.clients.admin.AdminClientConfig;\n+import org.apache.kafka.clients.admin.NewTopic;\n+import org.junit.AssumptionViolatedException;\n+import org.junit.ClassRule;\n+import org.junit.rules.ExternalResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+\n+import java.util.Collections;\n+import java.util.Properties;\n+import java.util.concurrent.ExecutionException;\n+\n+/** This should be used as a {@link ClassRule} as it takes a very long time to start-up. */\n+class KafkaCollectorRule extends ExternalResource {\n+  static final Logger LOGGER = LoggerFactory.getLogger(KafkaCollectorRule.class);\n+  static final String IMAGE = \"openzipkin/zipkin-kafka\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1223ef7f4d4293be6965997c3a179fb3ae0e09a1"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4NzE3MQ==", "bodyText": "Would recommend a tag for reproducible build, yeah", "url": "https://github.com/openzipkin/zipkin/pull/3178#discussion_r473587171", "createdAt": "2020-08-20T04:51:53Z", "author": {"login": "anuraaga"}, "path": "zipkin-collector/kafka/src/test/java/zipkin2/collector/kafka/KafkaCollectorRule.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2015-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package zipkin2.collector.kafka;\n+\n+import org.apache.kafka.clients.admin.AdminClient;\n+import org.apache.kafka.clients.admin.AdminClientConfig;\n+import org.apache.kafka.clients.admin.NewTopic;\n+import org.junit.AssumptionViolatedException;\n+import org.junit.ClassRule;\n+import org.junit.rules.ExternalResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+\n+import java.util.Collections;\n+import java.util.Properties;\n+import java.util.concurrent.ExecutionException;\n+\n+/** This should be used as a {@link ClassRule} as it takes a very long time to start-up. */\n+class KafkaCollectorRule extends ExternalResource {\n+  static final Logger LOGGER = LoggerFactory.getLogger(KafkaCollectorRule.class);\n+  static final String IMAGE = \"openzipkin/zipkin-kafka\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ3MTI3MQ=="}, "originalCommit": {"oid": "1223ef7f4d4293be6965997c3a179fb3ae0e09a1"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2NjE4Nw==", "bodyText": "Adding latest", "url": "https://github.com/openzipkin/zipkin/pull/3178#discussion_r473766187", "createdAt": "2020-08-20T08:36:17Z", "author": {"login": "jeqo"}, "path": "zipkin-collector/kafka/src/test/java/zipkin2/collector/kafka/KafkaCollectorRule.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2015-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package zipkin2.collector.kafka;\n+\n+import org.apache.kafka.clients.admin.AdminClient;\n+import org.apache.kafka.clients.admin.AdminClientConfig;\n+import org.apache.kafka.clients.admin.NewTopic;\n+import org.junit.AssumptionViolatedException;\n+import org.junit.ClassRule;\n+import org.junit.rules.ExternalResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+\n+import java.util.Collections;\n+import java.util.Properties;\n+import java.util.concurrent.ExecutionException;\n+\n+/** This should be used as a {@link ClassRule} as it takes a very long time to start-up. */\n+class KafkaCollectorRule extends ExternalResource {\n+  static final Logger LOGGER = LoggerFactory.getLogger(KafkaCollectorRule.class);\n+  static final String IMAGE = \"openzipkin/zipkin-kafka\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ3MTI3MQ=="}, "originalCommit": {"oid": "1223ef7f4d4293be6965997c3a179fb3ae0e09a1"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTQ5NjEzOnYy", "diffSide": "RIGHT", "path": "zipkin-collector/kafka/src/test/java/zipkin2/collector/kafka/KafkaCollectorRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOToyMjo0N1rOHD22KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOToyMjo0N1rOHD22KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgwNjM3Ng==", "bodyText": "I think @anuraaga probably meant reproducible as in using a specific version like the other ones. I've copied the version used by those which is easy enough to wildcard replace.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static final String IMAGE = \"openzipkin/zipkin-kafka:latest\";\n          \n          \n            \n              static final String IMAGE = \"openzipkin/zipkin-kafka:2.21.5\";", "url": "https://github.com/openzipkin/zipkin/pull/3178#discussion_r473806376", "createdAt": "2020-08-20T09:22:47Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-collector/kafka/src/test/java/zipkin2/collector/kafka/KafkaCollectorRule.java", "diffHunk": "@@ -31,7 +31,7 @@\n /** This should be used as a {@link ClassRule} as it takes a very long time to start-up. */\n class KafkaCollectorRule extends ExternalResource {\n   static final Logger LOGGER = LoggerFactory.getLogger(KafkaCollectorRule.class);\n-  static final String IMAGE = \"openzipkin/zipkin-kafka\";\n+  static final String IMAGE = \"openzipkin/zipkin-kafka:latest\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd287176d33693366ab0412bfb3c5746943170cc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1207, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}