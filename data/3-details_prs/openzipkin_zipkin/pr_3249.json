{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2OTA3Njkx", "number": 3249, "title": "Refactors integration tests to be more isolated", "bodyText": "This makes all integration tests use unique data. Notably, they no\nlonger use constant trace ID or service names, as this can lead to\ndifficulty when a keyspace is re-used. For example, service names and\ntrace IDs are often partitions. When debugging it is easier when test\ndata is isolated by a service name as it can be easily queried.\nThis also pulls the heaviest tests into their own classes so that they\ndon't overload the storage containers used by the bulk of our tests.\nFinally, this fixes a few glitches in the v1 cassandra storage.", "createdAt": "2020-10-20T15:34:13Z", "url": "https://github.com/openzipkin/zipkin/pull/3249", "merged": true, "mergeCommit": {"oid": "eeb17681af780e563b44503d5af1eadb3ca6abfc"}, "closed": true, "closedAt": "2020-10-21T02:53:02Z", "author": {"login": "codefromthecrypt"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUj86kAH2gAyNTA2OTA3NjkxOjQ5NDk4MzFjNzI1OTliZjNlYjEzNWU0OGVjNjgxNDBjMzljNmQ4YmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtpQlbgFqTU2MzE0MTIzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4949831c72599bf3eb135e48ec68140c39c6d8bc", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/4949831c72599bf3eb135e48ec68140c39c6d8bc", "committedDate": "2020-10-21T02:28:56Z", "message": "Refactors integration tests to be more isolated\n\nThis makes all integration tests use unique data. Notably, they no\nlonger use constant trace ID or service names, as this can lead to\ndifficulty when a keyspace is re-used. For example, service names and\ntrace IDs are often partitions. When debugging it is easier when test\ndata is isolated by a service name as it can be easily queried.\n\nThis also pulls the heaviest tests into their own classes so that they\ndon't overload the storage containers used by the bulk of our tests.\n\nFinally, this fixes a few glitches in the v1 cassandra storage."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a36ca5bf2ad50d3fccee2c57356cbd45ec5ba08d", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/a36ca5bf2ad50d3fccee2c57356cbd45ec5ba08d", "committedDate": "2020-10-21T02:25:08Z", "message": "don't use zero ID"}, "afterCommit": {"oid": "4949831c72599bf3eb135e48ec68140c39c6d8bc", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/4949831c72599bf3eb135e48ec68140c39c6d8bc", "committedDate": "2020-10-21T02:28:56Z", "message": "Refactors integration tests to be more isolated\n\nThis makes all integration tests use unique data. Notably, they no\nlonger use constant trace ID or service names, as this can lead to\ndifficulty when a keyspace is re-used. For example, service names and\ntrace IDs are often partitions. When debugging it is easier when test\ndata is isolated by a service name as it can be easily queried.\n\nThis also pulls the heaviest tests into their own classes so that they\ndon't overload the storage containers used by the bulk of our tests.\n\nFinally, this fixes a few glitches in the v1 cassandra storage."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMTQxMjMz", "url": "https://github.com/openzipkin/zipkin/pull/3249#pullrequestreview-563141233", "createdAt": "2021-01-07T00:48:02Z", "commit": {"oid": "4949831c72599bf3eb135e48ec68140c39c6d8bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDo0ODowM1rOIPbUJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDo0ODowM1rOIPbUJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA0NzA3Ng==", "bodyText": "@adriancole can you provide us more context about this change? We were implicitly relying on the previous logic that left-padded 0s for trace ids generated by a legacy application. We have a workaround in place to fix the broken pipeline, but we wanted to hear why this explicitly checks for length of 15 (vs 14, 13 etc...)", "url": "https://github.com/openzipkin/zipkin/pull/3249#discussion_r553047076", "createdAt": "2021-01-07T00:48:03Z", "author": {"login": "karkum"}, "path": "zipkin/src/main/java/zipkin2/Span.java", "diffHunk": "@@ -635,6 +635,7 @@ public static String normalizeTraceId(String traceId) {\n     if (length > 32) throw new IllegalArgumentException(\"traceId.length > 32\");\n     int zeros = validateHexAndReturnZeroPrefix(traceId);\n     if (zeros == length) throw new IllegalArgumentException(\"traceId is all zeros\");\n+    if (length == 15) throw new RuntimeException(\"WTF\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4949831c72599bf3eb135e48ec68140c39c6d8bc"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1346, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}