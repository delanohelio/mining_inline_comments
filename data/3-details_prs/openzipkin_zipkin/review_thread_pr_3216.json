{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNzk0MDIz", "number": 3216, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjoyNjoyOFrOEoDgZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjoyNjoyOFrOEoDgZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDM1OTQzOnYy", "diffSide": "RIGHT", "path": "zipkin/src/main/java/zipkin2/storage/InMemoryStorage.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjoyNjoyOFrOHY7RkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMToyMDo0OVrOHZVA6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTAyNA==", "bodyText": "This strategy seems good. Just wondering do you think this is a good time to move stuff out of core? For example, I guess storage, since it's for use by server and not client, doesn't need to be Java 6?", "url": "https://github.com/openzipkin/zipkin/pull/3216#discussion_r495899024", "createdAt": "2020-09-28T12:26:28Z", "author": {"login": "anuraaga"}, "path": "zipkin/src/main/java/zipkin2/storage/InMemoryStorage.java", "diffHunk": "@@ -77,15 +77,12 @@ public static Builder newBuilder() {\n     int maxSpanCount = 500000;\n     List<String> autocompleteKeys = Collections.emptyList();\n \n-    /** {@inheritDoc} */\n-    @Override\n-    public Builder strictTraceId(boolean strictTraceId) {\n+    @Override public Builder strictTraceId(boolean strictTraceId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c87bd56a0992ee2faa1719f64b134d5baf96d48"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTY1MA==", "bodyText": "IIRC we might have some senders that delegate to storage classes (thinking zipkin-aws). I think it could be a net win to duplicate for this rare case and mark storage as server-only. It's the only way to get to CompletableFuture for example.", "url": "https://github.com/openzipkin/zipkin/pull/3216#discussion_r495899650", "createdAt": "2020-09-28T12:27:37Z", "author": {"login": "anuraaga"}, "path": "zipkin/src/main/java/zipkin2/storage/InMemoryStorage.java", "diffHunk": "@@ -77,15 +77,12 @@ public static Builder newBuilder() {\n     int maxSpanCount = 500000;\n     List<String> autocompleteKeys = Collections.emptyList();\n \n-    /** {@inheritDoc} */\n-    @Override\n-    public Builder strictTraceId(boolean strictTraceId) {\n+    @Override public Builder strictTraceId(boolean strictTraceId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTAyNA=="}, "originalCommit": {"oid": "3c87bd56a0992ee2faa1719f64b134d5baf96d48"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkwNjE3NQ==", "bodyText": "yeah we currently only support java 1.6 on the core library. the storage classes are already 1.8 iirc. that zipkin-aws xray sender internally uses storage is something that we aren't optimizing for in a bytecode level..\ntypically, senders raise to the level of the library used, sometimes 1.7 (okhttp) or 1.8 (kafka)", "url": "https://github.com/openzipkin/zipkin/pull/3216#discussion_r495906175", "createdAt": "2020-09-28T12:39:26Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin/src/main/java/zipkin2/storage/InMemoryStorage.java", "diffHunk": "@@ -77,15 +77,12 @@ public static Builder newBuilder() {\n     int maxSpanCount = 500000;\n     List<String> autocompleteKeys = Collections.emptyList();\n \n-    /** {@inheritDoc} */\n-    @Override\n-    public Builder strictTraceId(boolean strictTraceId) {\n+    @Override public Builder strictTraceId(boolean strictTraceId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTAyNA=="}, "originalCommit": {"oid": "3c87bd56a0992ee2faa1719f64b134d5baf96d48"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxNTE3Nw==", "bodyText": "oh I see what you are saying.. to move these classes out? I think it is a non-transparent change to do that where as the rest of this is transparent to end users. I think we could consider doing that separately, but there would be some transition work involved and so not entirely keen to take that on right now.", "url": "https://github.com/openzipkin/zipkin/pull/3216#discussion_r496315177", "createdAt": "2020-09-29T00:59:48Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin/src/main/java/zipkin2/storage/InMemoryStorage.java", "diffHunk": "@@ -77,15 +77,12 @@ public static Builder newBuilder() {\n     int maxSpanCount = 500000;\n     List<String> autocompleteKeys = Collections.emptyList();\n \n-    /** {@inheritDoc} */\n-    @Override\n-    public Builder strictTraceId(boolean strictTraceId) {\n+    @Override public Builder strictTraceId(boolean strictTraceId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTAyNA=="}, "originalCommit": {"oid": "3c87bd56a0992ee2faa1719f64b134d5baf96d48"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMyMDc0Ng==", "bodyText": "#3217", "url": "https://github.com/openzipkin/zipkin/pull/3216#discussion_r496320746", "createdAt": "2020-09-29T01:20:49Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin/src/main/java/zipkin2/storage/InMemoryStorage.java", "diffHunk": "@@ -77,15 +77,12 @@ public static Builder newBuilder() {\n     int maxSpanCount = 500000;\n     List<String> autocompleteKeys = Collections.emptyList();\n \n-    /** {@inheritDoc} */\n-    @Override\n-    public Builder strictTraceId(boolean strictTraceId) {\n+    @Override public Builder strictTraceId(boolean strictTraceId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTAyNA=="}, "originalCommit": {"oid": "3c87bd56a0992ee2faa1719f64b134d5baf96d48"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1256, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}