{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4OTcyNzcy", "number": 3298, "title": "Makes zipkin-cassandra work with normal Java", "bodyText": "This should avoid problems with Arm64, but needs to be tested post\nmerge. This does the following:\n\nsignificantly trim the image size by downloading from maven\nuse less JVM-specific flags\nreduce memory usage for reasons including shutting off JMX\ndodge conflict during install by using a different port per arch\n\nREPOSITORY                                      TAG                 IMAGE ID            CREATED             SIZE\nopenzipkin/zipkin-cassandra                     test                7b591f5d12cc        13 minutes ago      138MB\nghcr.io/openzipkin/zipkin-cassandra             2.22.2              ab5d087d0800        43 hours ago        262MB", "createdAt": "2020-11-11T06:10:52Z", "url": "https://github.com/openzipkin/zipkin/pull/3298", "merged": true, "mergeCommit": {"oid": "1d5e8cd7d1be1aeea7f48978593400065f8a1b29"}, "closed": true, "closedAt": "2020-11-11T11:33:45Z", "author": {"login": "codefromthecrypt"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbXpf2AH2gAyNTE4OTcyNzcyOjJlZTdiYjdlZDE5NTdhNzM3YTA0ZTUyYTAzZWVkZTE5NWIyZGQzZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbb7RVAH2gAyNTE4OTcyNzcyOmUzN2UwYWNiODAxZDBkNWI5OTlkODg2YWE0ZGI2MGE5OTQxMjk2Njc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2ee7bb7ed1957a737a04e52a03eede195b2dd3ff", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/2ee7bb7ed1957a737a04e52a03eede195b2dd3ff", "committedDate": "2020-11-11T06:06:20Z", "message": "Makes zipkin-cassandra work with normal Java\n\nThis *should* avoid problems with Arm64, but needs to be tested post\nmerge. This does the following:\n\n* significantly trim the image size by downloading from maven\n* reduce memory usage for reasons including shutting off JMX\n* dodge conflict during install by using a different port per arch\n\n```\nREPOSITORY                                      TAG                 IMAGE ID            CREATED             SIZE\nopenzipkin/zipkin-cassandra                     test                7b591f5d12cc        13 minutes ago      138MB\nghcr.io/openzipkin/zipkin-cassandra             2.22.2              ab5d087d0800        43 hours ago        262MB\n```"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODg3NjUy", "url": "https://github.com/openzipkin/zipkin/pull/3298#pullrequestreview-527887652", "createdAt": "2020-11-11T06:13:52Z", "commit": {"oid": "2ee7bb7ed1957a737a04e52a03eede195b2dd3ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjoxMzo1M1rOHw_hPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjoxMzo1M1rOHw_hPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEzNDM5OA==", "bodyText": "removed UDFs as we didn't document them and they aren't used either", "url": "https://github.com/openzipkin/zipkin/pull/3298#discussion_r521134398", "createdAt": "2020-11-11T06:13:53Z", "author": {"login": "codefromthecrypt"}, "path": "docker/storage/cassandra/install.sh", "diffHunk": "@@ -18,63 +18,141 @@\n # This also trims dependencies to only those used at runtime.\n set -eux\n \n-echo \"*** Installing Cassandra and dependencies\"\n-# BusyBux built-in tar doesn't support --strip=1\n-apk add --update --no-cache python2 tar\n-APACHE_MIRROR=$(wget -qO- https://www.apache.org/dyn/closer.cgi\\?as_json\\=1 | sed -n '/preferred/s/.*\"\\(.*\\)\"/\\1/gp')\n-wget -qO- $APACHE_MIRROR/cassandra/$CASSANDRA_VERSION/apache-cassandra-$CASSANDRA_VERSION-bin.tar.gz | tar xz \\\n-  --strip=1\n-\n-# Merge in our custom configuration\n-sed -i '/enable_user_defined_functions: false/cenable_user_defined_functions: true' conf/cassandra.yaml\n-\n-# Default conf for Cassandra 3.x does not work on modern JVMs due to many deprecated flags\n-sed -i '/-XX:ThreadPriorityPolicy=42/c\\#-XX:ThreadPriorityPolicy=42' conf/jvm.options\n-sed -i '/-XX:+UseParNewGC/c\\#-XX:+UseParNewGC' conf/jvm.options\n-sed -i '/-XX:+UseConcMarkSweepGC/c\\#-XX:+UseConcMarkSweepGC' conf/jvm.options\n-sed -i '/-XX:+PrintGCDateStamps/c\\#-XX:+PrintGCDateStamps' conf/jvm.options\n-sed -i '/-XX:+PrintHeapAtGC/c\\#-XX:+PrintHeapAtGC' conf/jvm.options\n-sed -i '/-XX:+PrintTenuringDistribution/c\\#-XX:+PrintTenuringDistribution' conf/jvm.options\n-sed -i '/-XX:+PrintGCApplicationStoppedTime/c\\#-XX:+PrintGCApplicationStoppedTime' conf/jvm.options\n-sed -i '/-XX:+PrintPromotionFailure/c\\#-XX:+PrintPromotionFailure' conf/jvm.options\n-sed -i '/-XX:+UseGCLogFileRotation/c\\#-XX:+UseGCLogFileRotation' conf/jvm.options\n-sed -i '/-XX:NumberOfGCLogFiles=10/c\\#-XX:NumberOfGCLogFiles=10' conf/jvm.options\n-sed -i '/-XX:GCLogFileSize=10M/c\\#-XX:GCLogFileSize=10M' conf/jvm.options\n-\n-# TODO: Add native snappy lib. Native loader stacktraces in the cassandra log as a results, which is distracting.\n-\n-# Remove bash as Cassandra scripts we use don't have it, and it isn't required\n-sed -i 's~#!/bin/bash~#!/bin/sh~g' bin/*sh\n+echo \"*** Installing Cassandra\"\n+\n+cat > pom.xml <<-'EOF'\n+<project>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>io.zipkin.cassandra</groupId>\n+  <artifactId>get-cassandra</artifactId>\n+  <version>0.1.0-SNAPSHOT</version>\n+  <packaging>pom</packaging>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.cassandra</groupId>\n+      <artifactId>cassandra-all</artifactId>\n+      <version>${cassandra.version}</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.slf4j</groupId>\n+          <artifactId>*</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>ch.qos.logback</groupId>\n+          <artifactId>*</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-log4j12</artifactId>\n+      <version>1.7.30</version>\n+    </dependency>\n+  </dependencies>\n+</project>\n+EOF\n+mvn -q --batch-mode -DoutputDirectory=libs \\\n+    -Dcassandra.version=${CASSANDRA_VERSION} \\\n+    dependency:copy-dependencies\n+rm pom.xml\n+\n+# Make sure you use relative paths in references like this, so that installation\n+# is decoupled from runtime\n+mkdir -p conf data commitlog saved_caches hints\n+\n+# Make a basic log4j conf which only logs warnings (to stderr)\n+cat > conf/log4j.properties <<-'EOF'\n+log4j.rootLogger=WARN, stderr\n+\n+log4j.appender.stderr=org.apache.log4j.ConsoleAppender\n+log4j.appender.stderr.layout=org.apache.log4j.PatternLayout\n+log4j.appender.stderr.layout.ConversionPattern=[%d] %p %m (%c)%n\n+log4j.appender.stderr.Target=System.err\n+\n+# Ignore that we are using log4j as we aren't starting JMX anyway\n+log4j.logger.org.apache.cassandra.utils.logging=ERROR\n+# Ignore that we cannot increase RLIMIT_MEMLOCK or run Cassandra as root\n+log4j.logger.org.apache.cassandra.utils.NativeLibrary=ERROR\n+# Ignore that we disabled JMX and haven't installed jemalloc (not available on Alpine)\n+log4j.logger.org.apache.cassandra.service.StartupChecks=OFF\n+# Ignore warnings about less than 64GB disk\n+log4j.logger.org.apache.cassandra.config.DatabaseDescriptor=ERROR\n+EOF\n+\n+# Generate basic required configuration from default values\n+cat > conf/cassandra.yaml <<-'EOF'\n+partitioner: org.apache.cassandra.dht.Murmur3Partitioner\n+commitlog_sync: periodic\n+commitlog_sync_period_in_ms: 10000\n+endpoint_snitch: SimpleSnitch\n+\n+# override via -Dcassandra.storage_port=7000\n+storage_port: 7000\n+# override via -Dcassandra.native_transport_port=9042\n+native_transport_port: 9042\n+listen_address: 127.0.0.1\n+rpc_address: 127.0.0.1\n+start_native_transport: true\n+seed_provider:\n+    - class_name: org.apache.cassandra.locator.SimpleSeedProvider\n+      parameters:\n+          - seeds: \"127.0.0.1\"\n+EOF\n+\n+# Avoid conflicts during multi-arch build (buildx starting two archs in the same container)\n+ARCH=$(uname -m)\n+case ${ARCH} in\n+  aarch64* )\n+    TEMP_STORAGE_PORT=7020\n+    TEMP_NATIVE_TRANSPORT_PORT=9062\n+    ;;\n+  * )\n+    TEMP_STORAGE_PORT=7010\n+    TEMP_NATIVE_TRANSPORT_PORT=9052\n+    ;;\n+esac\n \n echo \"*** Starting Cassandra\"\n-bin/cassandra -R\n+TEMP_JAVA_OPTS=\"-Xms64m -Xmx64m -XX:+ExitOnOutOfMemoryError\"\n+java -cp 'libs/*' ${TEMP_JAVA_OPTS} \\\n+  -Dcassandra.storage_port=${TEMP_STORAGE_PORT} \\\n+  -Dcassandra.native_transport_port=${TEMP_NATIVE_TRANSPORT_PORT} \\\n+  -Dcassandra.storagedir=${PWD} \\\n+  -Dcassandra.config=file:${PWD}/conf/cassandra.yaml \\\n+  -Dlog4j.configuration=file:${PWD}/conf/log4j.properties \\\n+  org.apache.cassandra.service.CassandraDaemon &\n+CASSANDRA_PID=$!\n+\n+echo \"*** Installing cqlsh\"\n+apk add --update --no-cache python2 py2-setuptools\n+python2 -m easy_install pip\n+pip install -Iq cqlsh\n+function cql() {\n+  cqlsh --cqlversion=3.4.4 \"$@\" 127.0.0.1 ${TEMP_NATIVE_TRANSPORT_PORT}\n+}\n \n # Excessively long timeout to avoid having to create an ENV variable, decide its name, etc.\n timeout=180\n echo \"Will wait up to ${timeout} seconds for Cassandra to come up before installing Schema\"\n-while [ \"$timeout\" -gt 0 ] && ! bin/cqlsh -e 'SHOW VERSION' localhost > /dev/null 2>&1; do\n+while [ \"$timeout\" -gt 0 ] && ! cql -e 'SHOW VERSION' > /dev/null 2>&1; do\n     sleep 1\n     timeout=$(($timeout - 1))\n done\n \n echo \"*** Importing Scheme\"\n-cat zipkin-schemas/cassandra-schema.cql | bin/cqlsh --debug localhost\n-cat zipkin-schemas/zipkin2-schema.cql | bin/cqlsh --debug localhost\n-cat zipkin-schemas/zipkin2-schema-indexes.cql | bin/cqlsh --debug localhost\n-\n-echo \"*** Adding custom UDFs to zipkin2 keyspace\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee7bb7ed1957a737a04e52a03eede195b2dd3ff"}, "originalPosition": 161}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd3031f82107937747cfc00377a5c75c3248ae7c", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/bd3031f82107937747cfc00377a5c75c3248ae7c", "committedDate": "2020-11-11T06:16:01Z", "message": "fixes bad find/replace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0787fa7bf6e10c94bc439e7e0e9de5a49c68b98c", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/0787fa7bf6e10c94bc439e7e0e9de5a49c68b98c", "committedDate": "2020-11-11T08:50:28Z", "message": "fixes the things"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a85d832b1494f5a1902c90d6a1318eba930af863", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/a85d832b1494f5a1902c90d6a1318eba930af863", "committedDate": "2020-11-11T09:04:55Z", "message": "add sleep as GH actions crashed after ok"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cfac3b22aac5dfcdc00b8e880271686d73d8809", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/0cfac3b22aac5dfcdc00b8e880271686d73d8809", "committedDate": "2020-11-11T09:22:45Z", "message": "try more mem?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e37e0acb801d0d5b999d886aa4db60a994129667", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/e37e0acb801d0d5b999d886aa4db60a994129667", "committedDate": "2020-11-11T11:05:22Z", "message": "try harder to understand why GH actions is crying"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1386, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}