{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMDQ2MzI4", "number": 3234, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoxNzowOVrOEtXohg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMToxMzoyOFrOEtbwjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDA4NTgyOnYy", "diffSide": "LEFT", "path": "zipkin-lens/src/zipkin/trace.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoxNzowOVrOHhHg_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTowNzoxOVrOHhJivg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4ODE4OA==", "bodyText": "I fixed here instead!", "url": "https://github.com/openzipkin/zipkin/pull/3234#discussion_r504488188", "createdAt": "2020-10-14T08:17:09Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-lens/src/zipkin/trace.js", "diffHunk": "@@ -171,7 +171,7 @@ export function traceSummaries(serviceName, summaries, utc = false) {\n           (parseFloat(duration) / parseFloat(maxDuration)) * 100,\n           10,\n         );\n-        res.duration = duration / 1000; // used only for client-side sort", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5014521cfb1884b91b27634048964170aac72ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyMTQwNg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/openzipkin/zipkin/pull/3234#discussion_r504521406", "createdAt": "2020-10-14T09:07:19Z", "author": {"login": "tacigar"}, "path": "zipkin-lens/src/zipkin/trace.js", "diffHunk": "@@ -171,7 +171,7 @@ export function traceSummaries(serviceName, summaries, utc = false) {\n           (parseFloat(duration) / parseFloat(maxDuration)) * 100,\n           10,\n         );\n-        res.duration = duration / 1000; // used only for client-side sort", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4ODE4OA=="}, "originalCommit": {"oid": "b5014521cfb1884b91b27634048964170aac72ec"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDA4NjcyOnYy", "diffSide": "RIGHT", "path": "zipkin-lens/src/models/TraceSummary.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoxNzoyMlrOHhHhjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoxNzoyMlrOHhHhjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4ODMzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // Unlike most places, this is milliseconds, not microseconds", "url": "https://github.com/openzipkin/zipkin/pull/3234#discussion_r504488333", "createdAt": "2020-10-14T08:17:22Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-lens/src/models/TraceSummary.ts", "diffHunk": "@@ -20,6 +20,7 @@ export type ServiceNameAndSpanCount = {\n type TraceSummary = {\n   traceId: string;\n   timestamp: number;\n+  // Unlike most places, this is milliseconds, not microseconds", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5014521cfb1884b91b27634048964170aac72ec"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDc2MTcyOnYy", "diffSide": "RIGHT", "path": "zipkin-lens/src/components/DiscoverPage/TraceSummaryRow.test.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMToxMzoyOFrOHhOA4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMToxMzoyOFrOHhOA4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU5NDY1OA==", "bodyText": "PS main reason I'm doing this at all is to make sure we are using the right unit in the raw date input. If we weren't, we'd not end up in the same month :D", "url": "https://github.com/openzipkin/zipkin/pull/3234#discussion_r504594658", "createdAt": "2020-10-14T11:13:28Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-lens/src/components/DiscoverPage/TraceSummaryRow.test.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2015-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+import React from 'react';\n+\n+import TraceSummaryRow from './TraceSummaryRow';\n+import render from '../../test/util/render-with-default-settings';\n+\n+describe('<TraceSummaryRow />', () => {\n+  it('should render timestamp and duration in correct unit', () => {\n+    const { queryByTestId } = render(\n+      <table>\n+        <tbody>\n+          <TraceSummaryRow\n+            traceSummary={{\n+              traceId: 'a03ee8fff1dcd9b9',\n+              timestamp: 1571896375237354,\n+              duration: 131848,\n+              serviceSummaries: [],\n+              spanCount: 10,\n+              width: 10,\n+              root: {\n+                serviceName: 'routing',\n+                spanName: 'post /location/update/v4',\n+              },\n+            }}\n+          />\n+        </tbody>\n+      </table>,\n+    );\n+\n+    const startTimeFormat = queryByTestId('TraceSummaryRow-startTimeFormat');\n+    expect(startTimeFormat).toBeInTheDocument();\n+    // Don't assert on hour as the timezone will be different in CI\n+    expect(startTimeFormat).toHaveTextContent(/10\\/2[34] [0-9][0-9]:52:55:237/);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f7f346426bf425f3f01874e078d3e9c1ab492b"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1036, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}