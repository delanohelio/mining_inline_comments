{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzODY4NTk5", "number": 3238, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0Mzo1MlrOEtzivw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNDowOTo0MlrOEuSj5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDY1ODU1OnYy", "diffSide": "RIGHT", "path": "docker/docker-bin/start-zipkin", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0Mzo1MlrOHhzuVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0Mzo1MlrOHhzuVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIxMjUwMA==", "bodyText": "I ran curl in a for loop with the example app. it never died on OOM", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505212500", "createdAt": "2020-10-15T06:43:52Z", "author": {"login": "codefromthecrypt"}, "path": "docker/docker-bin/start-zipkin", "diffHunk": "@@ -0,0 +1,37 @@\n+#!/bin/sh\n+#\n+# Copyright 2015-2020 The OpenZipkin Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License. You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License\n+# is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+# or implied. See the License for the specific language governing permissions and limitations under\n+# the License.\n+#\n+\n+# ENTRYPOINT script that starts Zipkin\n+set -eu\n+\n+STORAGE_TYPE=${STORAGE_TYPE:-mem}\n+\n+if [ \"${STORAGE_TYPE}\" = \"mem\" ]; then\n+  # When using in-memory provider, allocate 128m, most of which for trace storage\n+  JAVA_OPTS=${JAVA_OPTS:-\"-Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce2ebca7b09ee33e4c16012c772e42c177dcb76"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDY2MDU5OnYy", "diffSide": "RIGHT", "path": "docker/examples/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0NDoxMFrOHhzv2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0NDoxMFrOHhzv2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIxMjg4OA==", "bodyText": "new example", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505212888", "createdAt": "2020-10-15T06:44:10Z", "author": {"login": "codefromthecrypt"}, "path": "docker/examples/README.md", "diffHunk": "@@ -74,6 +72,22 @@ In other words, if you are running a sample application on your laptop, you woul\n If you are using Docker machine, adjust `KAFKA_ADVERTISED_HOST_NAME` in `docker-compose-kafka.yml`\n and the `bootstrapServers` configuration of the kafka sender to match your Docker host IP (ex. 192.168.99.100:19092).\n \n+# Example\n+\n+The docker-compose configuration can be extended to host an [example application](https://github.com/openzipkin/brave-example)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce2ebca7b09ee33e4c16012c772e42c177dcb76"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDY2NDkzOnYy", "diffSide": "RIGHT", "path": "docker/examples/docker-compose-prometheus.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0NDo0N1rOHhzypA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0NDo0N1rOHhzypA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIxMzYwNA==", "bodyText": "moved prometheus to a separate file", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505213604", "createdAt": "2020-10-15T06:44:47Z", "author": {"login": "codefromthecrypt"}, "path": "docker/examples/docker-compose-prometheus.yml", "diffHunk": "@@ -15,28 +15,39 @@\n # This file uses the version 2 docker-compose file format, described here:\n # https://docs.docker.com/compose/compose-file/#version-2\n #\n-# This runs the zipkin and zipkin-mysql containers, using docker-compose's\n-# default networking to wire the containers together.\n+# This runs containers that collect data for our Grafana dashboard", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce2ebca7b09ee33e4c16012c772e42c177dcb76"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDY2NzUzOnYy", "diffSide": "RIGHT", "path": "docker/examples/docker-compose.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0NToxMFrOHhz0UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0NToxMFrOHhz0UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIxNDAzMw==", "bodyText": "default docker-compose is slim+mem now (not mysql)", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505214033", "createdAt": "2020-10-15T06:45:10Z", "author": {"login": "codefromthecrypt"}, "path": "docker/examples/docker-compose.yml", "diffHunk": "@@ -15,92 +15,31 @@\n # This file uses the version 2 docker-compose file format, described here:\n # https://docs.docker.com/compose/compose-file/#version-2\n #\n-# This runs the zipkin and zipkin-mysql containers, using docker-compose's\n-# default networking to wire the containers together.\n+# This runs the zipkin slim container, using docker-compose's default networking\n+# to wire other containers together.\n #\n # Note that this file is meant for learning Zipkin, not production deployments.\n \n version: '2.4'\n \n services:\n-  storage:\n-    image: openzipkin/zipkin-mysql\n-    container_name: mysql\n-    # Uncomment to expose the storage port for testing\n-    # ports:\n-    #   - 3306:3306\n-\n   # The zipkin process services the UI, and also exposes a POST endpoint that\n-  # instrumentation can send trace data to. Scribe is disabled by default.\n+  # instrumentation can send trace data to.\n   zipkin:\n-    image: openzipkin/zipkin\n+    image: openzipkin/zipkin-slim:${TAG:-latest}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce2ebca7b09ee33e4c16012c772e42c177dcb76"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDY3MDE2OnYy", "diffSide": "RIGHT", "path": "docker/hooks/build", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0NTozNVrOHhz2SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo0NTozNVrOHhz2SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIxNDUzNg==", "bodyText": "need to update docker hub automated builds as Dockerfile.release is gone now.", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505214536", "createdAt": "2020-10-15T06:45:35Z", "author": {"login": "codefromthecrypt"}, "path": "docker/hooks/build", "diffHunk": "@@ -25,7 +25,18 @@ cd ..\n \n echo \"Building images for $SOURCE_BRANCH\"\n \n-docker build --build-arg source_branch=${SOURCE_BRANCH} -f \"$DOCKERFILE_PATH\" -t \"$IMAGE_NAME\" .\n+echo \"Building images for $SOURCE_BRANCH\"\n+\n+# $SOURCE_BRANCH is something like\n+#\n+#   master       - Building the master branch. This cut command will return 'master', and Dockerfiles will ignore it\n+#   1.0.1        - Building a release image along with a new Zipkin server version. This cut command will return\n+#                  '1.0.1' and Dockerfiles will use it to fetch the correct version of Zipkin.\n+#   docker-1.0.1 - Building a release image, but not a new Zipkin server. This cut command will return\n+#                  '1.0.1' and Dockerfiles will use it to fetch the correct version of Zipkin.\n+RELEASE_VERSION=\"$(echo \"${SOURCE_BRANCH}\" | cut -d '-' -f 2)\"\n+\n+docker build --build-arg RELEASE_VERSION=\"$RELEASE_VERSION\" -f \"$DOCKERFILE_PATH\" -t \"$IMAGE_NAME\" .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce2ebca7b09ee33e4c16012c772e42c177dcb76"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDc0MzE1OnYy", "diffSide": "RIGHT", "path": "docker/install.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo1Njo0NFrOHh0qHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODowMzozM1rOHh5egQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyNzgwNg==", "bodyText": "consider  mvn -T1C -q --batch-mode -DskipTests -Dlicense.skip=true --also-make -pl zipkin-server package for parallel builds.", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505227806", "createdAt": "2020-10-15T06:56:44Z", "author": {"login": "jorgheymans"}, "path": "docker/install.sh", "diffHunk": "@@ -0,0 +1,46 @@\n+#!/bin/sh\n+#\n+# Copyright 2016-2020 The OpenZipkin Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License. You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License\n+# is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+# or implied. See the License for the specific language governing permissions and limitations under\n+# the License.\n+#\n+\n+set -eux\n+\n+# This script decides based on $RELEASE_VERSION whether to build or download the binaries we need.\n+if [ \"$RELEASE_VERSION\" = \"master\" ]\n+then\n+  echo \"*** Building from source...\"\n+  # Use the same command as we suggest in zipkin-server/README.md\n+  #  * Uses mvn not ./mvnw to reduce layer size: we control the Maven version in Docker\n+  (cd /code; mvn -q --batch-mode -DskipTests -Dlicense.skip=true --also-make -pl zipkin-server package)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6341e95c9dccda981ae007ad5cb446ff5c5228"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI4NTk1Mw==", "bodyText": "sure. trying now. thanks for the tip", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505285953", "createdAt": "2020-10-15T07:46:50Z", "author": {"login": "codefromthecrypt"}, "path": "docker/install.sh", "diffHunk": "@@ -0,0 +1,46 @@\n+#!/bin/sh\n+#\n+# Copyright 2016-2020 The OpenZipkin Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License. You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License\n+# is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+# or implied. See the License for the specific language governing permissions and limitations under\n+# the License.\n+#\n+\n+set -eux\n+\n+# This script decides based on $RELEASE_VERSION whether to build or download the binaries we need.\n+if [ \"$RELEASE_VERSION\" = \"master\" ]\n+then\n+  echo \"*** Building from source...\"\n+  # Use the same command as we suggest in zipkin-server/README.md\n+  #  * Uses mvn not ./mvnw to reduce layer size: we control the Maven version in Docker\n+  (cd /code; mvn -q --batch-mode -DskipTests -Dlicense.skip=true --also-make -pl zipkin-server package)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyNzgwNg=="}, "originalCommit": {"oid": "af6341e95c9dccda981ae007ad5cb446ff5c5228"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMwNjc1Mw==", "bodyText": "significantly faster thanks!", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505306753", "createdAt": "2020-10-15T08:03:33Z", "author": {"login": "codefromthecrypt"}, "path": "docker/install.sh", "diffHunk": "@@ -0,0 +1,46 @@\n+#!/bin/sh\n+#\n+# Copyright 2016-2020 The OpenZipkin Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License. You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License\n+# is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+# or implied. See the License for the specific language governing permissions and limitations under\n+# the License.\n+#\n+\n+set -eux\n+\n+# This script decides based on $RELEASE_VERSION whether to build or download the binaries we need.\n+if [ \"$RELEASE_VERSION\" = \"master\" ]\n+then\n+  echo \"*** Building from source...\"\n+  # Use the same command as we suggest in zipkin-server/README.md\n+  #  * Uses mvn not ./mvnw to reduce layer size: we control the Maven version in Docker\n+  (cd /code; mvn -q --batch-mode -DskipTests -Dlicense.skip=true --also-make -pl zipkin-server package)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyNzgwNg=="}, "originalCommit": {"oid": "af6341e95c9dccda981ae007ad5cb446ff5c5228"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTM4NDkzOnYy", "diffSide": "RIGHT", "path": "docker/Dockerfile", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODozMjozMVrOHh7dzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTowMjowM1rOHh9o1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMzOTM0Mw==", "bodyText": "just curious about the reason for this change.", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505339343", "createdAt": "2020-10-15T08:32:31Z", "author": {"login": "jcchavezs"}, "path": "docker/Dockerfile", "diffHunk": "@@ -49,79 +44,64 @@ RUN mvn -q --batch-mode -DskipTests -Dlicense.skip=true --also-make -pl zipkin-s\n # cache between builds.\n FROM openzipkin/java:${java_version} as zipkin-builder\n \n-COPY --from=built /root/.m2 /root/.m2\n-COPY --from=built /root/.npm /root/.npm\n+COPY --from=install /root/.m2 /root/.m2\n+COPY --from=install /root/.npm /root/.npm\n \n #####\n # zipkin-ui - An image containing the Zipkin web frontend only, served by NGINX\n #####\n \n FROM nginx:1.18-alpine as zipkin-ui\n-LABEL MAINTAINER Zipkin \"https://zipkin.io/\"\n+LABEL MAINTAINER OpenZipkin \"http://zipkin.io/\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc91ccb3b95f7939fd9c324d266c03cec6770b08"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM3NDkzNQ==", "bodyText": "consistent with other images and project files. I noticed it was different", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505374935", "createdAt": "2020-10-15T09:02:03Z", "author": {"login": "codefromthecrypt"}, "path": "docker/Dockerfile", "diffHunk": "@@ -49,79 +44,64 @@ RUN mvn -q --batch-mode -DskipTests -Dlicense.skip=true --also-make -pl zipkin-s\n # cache between builds.\n FROM openzipkin/java:${java_version} as zipkin-builder\n \n-COPY --from=built /root/.m2 /root/.m2\n-COPY --from=built /root/.npm /root/.npm\n+COPY --from=install /root/.m2 /root/.m2\n+COPY --from=install /root/.npm /root/.npm\n \n #####\n # zipkin-ui - An image containing the Zipkin web frontend only, served by NGINX\n #####\n \n FROM nginx:1.18-alpine as zipkin-ui\n-LABEL MAINTAINER Zipkin \"https://zipkin.io/\"\n+LABEL MAINTAINER OpenZipkin \"http://zipkin.io/\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMzOTM0Mw=="}, "originalCommit": {"oid": "cc91ccb3b95f7939fd9c324d266c03cec6770b08"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTM5NDI5OnYy", "diffSide": "RIGHT", "path": "docker/RATIONALE.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODozNDoxMlrOHh7j-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODozNDoxMlrOHh7j-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM0MDkyMA==", "bodyText": "I think this depends on your resources but still valuable info so I am not sure on how to improve it.", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r505340920", "createdAt": "2020-10-15T08:34:12Z", "author": {"login": "jcchavezs"}, "path": "docker/RATIONALE.md", "diffHunk": "@@ -1,21 +1,43 @@\n # zipkin-docker rationale\n \n-## Why do we add HEALTHCHECK for test images?\n-\n+## Why do we add HEALTHCHECK?\n While most of our images are not production, we still add HEALTHCHECK for a better ad-hoc\n and automation experience. Many of our setups will not operate without a service\n dependency: having HEALTHCHECK present makes triage and scripting a bit easier.\n \n-HEALTHCHECK on our test image serves primarily two purposes:\n+HEALTHCHECK on our test image serves primarily three purposes:\n  * ad-hoc or scripted status of health using docker ps instead of knowing Kafka commands\n  * to allow manual usage of the docker-compose v2 service_healthy condition\n+ * support Docker Hub automated test service\n \n Ex. The following command can be used ad-hoc or in scripts without the user knowing Kafka:\n ```bash\n $ docker inspect --format='{{json .State.Health.Status}}' kafka-zookeeper\n \"unhealthy\"\n ```\n \n+### Why do we change default timeouts?\n+We changed timeouts in order to mark success faster.\n+\n+By default, the Docker health check runs after 30s, and if a failure occurs,\n+it waits 30s to try again. This implies a minimum of 30s before the server is\n+marked healthy.\n+\n+https://docs.docker.com/engine/reference/builder/#healthcheck\n+\n+We expect the server startup to take less than 10 seconds, even in a fresh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc91ccb3b95f7939fd9c324d266c03cec6770b08"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTc0MDUyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/docker-tests.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNDowOTo0MlrOHimQSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNDowOTo0MlrOHimQSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA0MDM5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      if [ \"${{ matrix.target }}\" = \"openzipkin/zipkin-ui\" ]; then\n          \n          \n            \n                      if [ \"${{ matrix.target }}\" = \"zipkin-ui\" ]; then", "url": "https://github.com/openzipkin/zipkin/pull/3238#discussion_r506040395", "createdAt": "2020-10-16T04:09:42Z", "author": {"login": "codefromthecrypt"}, "path": ".github/workflows/docker-tests.yml", "diffHunk": "@@ -0,0 +1,63 @@\n+name: Continuous Build Docker\n+on:\n+  push:\n+    branches:\n+      - master\n+  pull_request:\n+    branches:\n+      - master\n+\n+jobs:\n+  discover-targets:\n+    name: Build target matrix\n+    runs-on: ubuntu-latest\n+    outputs:\n+      matrix: ${{ steps.set-matrix.outputs.matrix }}\n+    steps:\n+      - name: Checkout Sources\n+        uses: actions/checkout@v2\n+        with:\n+          fetch-depth: 1\n+      - id: set-matrix\n+        name: Generate outputs.matrix from pom.xml listing\n+        run: echo \"::set-output name=matrix::{\\\"include\\\":$(.github/workflows/targets-as-json)}\"\n+  build-and-verify-docker:\n+    name: Build and verify Docker images\n+    needs: discover-targets\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix: ${{ fromJson(needs.discover-targets.outputs.matrix) }}\n+    steps:\n+      # Remove apt repos that are known to break from time to time.\n+      # See https://github.com/actions/virtual-environments/issues/323\n+      - name: Remove broken apt repos\n+        run: |\n+          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done\n+      - name: Install Docker\n+        uses: docker-practice/actions-setup-docker@master\n+        with:\n+          docker_version: 19.03\n+      - name: Cache docker\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.docker\n+          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}\n+          restore-keys: ${{ runner.os }}-docker\n+      - name: Checkout Repository\n+        uses: actions/checkout@v2\n+        with:\n+          fetch-depth: 1\n+      - name: Build Docker image openzipkin/${{ matrix.target }}:test\n+        run:  docker/build_image ${{ matrix.target }}\n+      - name: Verify Docker image openzipkin/${{ matrix.target }}:test\n+        run: |\n+          # This just makes sure containers run and the HEALTHCHECK works (for now..)\n+          touch docker-sut.env\n+          if [ \"${{ matrix.target }}\" = \"openzipkin/zipkin-ui\" ]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f13e1cd8737e78abfc6580e5296633ae819ba95"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1042, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}