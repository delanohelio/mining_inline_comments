{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDU5MTY0", "number": 3018, "title": "Add Archive Trace button", "bodyText": "This button lets you easily reupload the current trace to a different\nserver.\nThe main motivation for having this is that you can have the\narchival server have a very long retention period and use it as very\nlong term storage for traces that you care about. For example when\nsharing a trace in a jira ticket since otherwise the link would expire\nafter 1 week.\nDesign doc explaining the reason behind this in more details and why we\nwent with this implementation: https://github.com/openzipkin/openzipkin.github.io/wiki/Favorite-trace", "createdAt": "2020-03-11T03:08:13Z", "url": "https://github.com/openzipkin/zipkin/pull/3018", "merged": true, "mergeCommit": {"oid": "1a8e40ad0ca58e083a268152f2d4ccc14e66036a"}, "closed": true, "closedAt": "2020-03-23T05:25:52Z", "author": {"login": "drolando"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMelvggFqTM3MjQ1MzczNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQW5a5ABqjMxNTM2MTA2NTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDUzNzM2", "url": "https://github.com/openzipkin/zipkin/pull/3018#pullrequestreview-372453736", "createdAt": "2020-03-11T03:22:05Z", "commit": {"oid": "db5c89ca73101b8bd09a5cb2557b5f4e2a9d4de3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzoyMjowNVrOF0oCzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzozMDoyOFrOF0oJxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyNjM0OQ==", "bodyText": "I think some clones incorrectly use 200", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r390726349", "createdAt": "2020-03-11T03:22:05Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-lens/src/components/TracePage/TraceSummaryHeader.jsx", "diffHunk": "@@ -104,6 +104,51 @@ const TraceSummaryHeader = React.memo(({ traceSummary, rootSpanIndex }) => {\n     ? config.logsUrl.replace('{traceId}', traceSummary.traceId)\n     : undefined;\n \n+  const archiveWriteUrl = (config.archiveWriteUrl && traceSummary)\n+    ? config.archiveWriteUrl\n+    : undefined;\n+\n+  const archiveReadUrl = (config.archiveReadUrl && traceSummary)\n+    ? config.archiveReadUrl.replace('{traceId}', traceSummary.traceId)\n+    : undefined;\n+\n+  const archiveClick = useCallback(() => {\n+    // We don't store the raw json in the browser yet, so we need to make an\n+    // HTTP call to retrieve it again.\n+    fetch(`${api.TRACE}/${traceSummary.traceId}`)\n+      .then((response) => {\n+        if (!response.ok) {\n+          throw new Error('Failed to fetch trace from backend');\n+        }\n+        return response.json();\n+      })\n+      .then((json) => {\n+        fetch(archiveWriteUrl, {\n+          method: 'POST',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+          body: JSON.stringify(json),\n+        })\n+        .then((response) => {\n+          if (!response.ok || response.status != 202) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db5c89ca73101b8bd09a5cb2557b5f4e2a9d4de3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyNjk5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            archiveWriteUrl | zipkin.ui.archive-write-url | Url to archive the current trace. If specified, a button will appear on the trace page and will let you upload the current trace to the specified url. Not required.\n          \n          \n            \n            archivePostUrl | zipkin.ui.archive-post-url | Url to POST the current trace in Zipkin v2 json format. e.g. 'https://longterm/api/v2/spans'. If specified, a button will appear on the trace page accordingly. Not required.", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r390726993", "createdAt": "2020-03-11T03:25:17Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -172,6 +172,8 @@ searchEnabled | zipkin.ui.search-enabled | If the Find Traces screen is enabled.\n queryLimit | zipkin.ui.query-limit | Default limit for Find Traces. Defaults to 10.\n instrumented | zipkin.ui.instrumented | Which sites this Zipkin UI covers. Regex syntax. e.g. `http:\\/\\/example.com\\/.*` Defaults to match all websites (`.*`).\n logsUrl | zipkin.ui.logs-url | Logs query service url pattern. If specified, a button will appear on the trace page and will replace {traceId} in the url by the traceId. Not required.\n+archiveWriteUrl | zipkin.ui.archive-write-url | Url to archive the current trace. If specified, a button will appear on the trace page and will let you upload the current trace to the specified url. Not required.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db5c89ca73101b8bd09a5cb2557b5f4e2a9d4de3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyODEzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            archiveReadUrl | zipkin.ui.archive-read-url | Url to the archived trace. If specified, we will show it in the confirmation message after archiving a trace and replace {traceId} with the current traceId. Not required.\n          \n          \n            \n            archiveUrl | zipkin.ui.archive-url | Url to a web application serving an archived trace, templated by '{traceId}'. e.g. https://longterm/zipkin/trace/{traceId}'. This is shown in a confirmation message after a trace is successfully POSTed to the `archivePostUrl`. Not required.", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r390728132", "createdAt": "2020-03-11T03:30:28Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -172,6 +172,8 @@ searchEnabled | zipkin.ui.search-enabled | If the Find Traces screen is enabled.\n queryLimit | zipkin.ui.query-limit | Default limit for Find Traces. Defaults to 10.\n instrumented | zipkin.ui.instrumented | Which sites this Zipkin UI covers. Regex syntax. e.g. `http:\\/\\/example.com\\/.*` Defaults to match all websites (`.*`).\n logsUrl | zipkin.ui.logs-url | Logs query service url pattern. If specified, a button will appear on the trace page and will replace {traceId} in the url by the traceId. Not required.\n+archiveWriteUrl | zipkin.ui.archive-write-url | Url to archive the current trace. If specified, a button will appear on the trace page and will let you upload the current trace to the specified url. Not required.\n+archiveReadUrl | zipkin.ui.archive-read-url | Url to the archived trace. If specified, we will show it in the confirmation message after archiving a trace and replace {traceId} with the current traceId. Not required.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db5c89ca73101b8bd09a5cb2557b5f4e2a9d4de3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNTAxMzU2", "url": "https://github.com/openzipkin/zipkin/pull/3018#pullrequestreview-372501356", "createdAt": "2020-03-11T06:29:49Z", "commit": {"oid": "db5c89ca73101b8bd09a5cb2557b5f4e2a9d4de3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNjoyOTo0OVrOF0qjBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNjoyOTo0OVrOF0qjBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc2NzM2Ng==", "bodyText": "We once thought about adding a tag, so it is easier to search for traces manually chosen. Do we want to do this?\nex. add a tag to the root span \"archived\" -> \"\" would be simplest\ncc @openzipkin/core", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r390767366", "createdAt": "2020-03-11T06:29:49Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-lens/src/components/TracePage/TraceSummaryHeader.jsx", "diffHunk": "@@ -104,6 +104,51 @@ const TraceSummaryHeader = React.memo(({ traceSummary, rootSpanIndex }) => {\n     ? config.logsUrl.replace('{traceId}', traceSummary.traceId)\n     : undefined;\n \n+  const archiveWriteUrl = (config.archiveWriteUrl && traceSummary)\n+    ? config.archiveWriteUrl\n+    : undefined;\n+\n+  const archiveReadUrl = (config.archiveReadUrl && traceSummary)\n+    ? config.archiveReadUrl.replace('{traceId}', traceSummary.traceId)\n+    : undefined;\n+\n+  const archiveClick = useCallback(() => {\n+    // We don't store the raw json in the browser yet, so we need to make an\n+    // HTTP call to retrieve it again.\n+    fetch(`${api.TRACE}/${traceSummary.traceId}`)\n+      .then((response) => {\n+        if (!response.ok) {\n+          throw new Error('Failed to fetch trace from backend');\n+        }\n+        return response.json();\n+      })\n+      .then((json) => {\n+        fetch(archiveWriteUrl, {\n+          method: 'POST',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+          body: JSON.stringify(json),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db5c89ca73101b8bd09a5cb2557b5f4e2a9d4de3"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96946e14e20bafe8a57cd362f9b76c9607f81979", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/96946e14e20bafe8a57cd362f9b76c9607f81979", "committedDate": "2020-03-14T19:36:50Z", "message": "Update zipkin-server/README.md\n\nCo-Authored-By: Adrian Cole <adriancole@users.noreply.github.com>"}, "afterCommit": {"oid": "8d44c2b18ec5b7266253616b55f51b4ef5b6e693", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/8d44c2b18ec5b7266253616b55f51b4ef5b6e693", "committedDate": "2020-03-15T05:36:03Z", "message": "Add Archive Trace button\n\nThis button lets you easily reupload the current trace to a different\nserver.\n\nThe main motivation for having this is that you can have the\narchival server have a very long retention period and use it as very\nlong term storage for traces that you care about. For example when\nsharing a trace in a jira ticket since otherwise the link would expire\nafter 1 week.\n\nDesign doc explaining the reason behind this in more details and why we\nwent with this implementation: https://github.com/openzipkin/openzipkin.github.io/wiki/Favorite-trace"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d44c2b18ec5b7266253616b55f51b4ef5b6e693", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/8d44c2b18ec5b7266253616b55f51b4ef5b6e693", "committedDate": "2020-03-15T05:36:03Z", "message": "Add Archive Trace button\n\nThis button lets you easily reupload the current trace to a different\nserver.\n\nThe main motivation for having this is that you can have the\narchival server have a very long retention period and use it as very\nlong term storage for traces that you care about. For example when\nsharing a trace in a jira ticket since otherwise the link would expire\nafter 1 week.\n\nDesign doc explaining the reason behind this in more details and why we\nwent with this implementation: https://github.com/openzipkin/openzipkin.github.io/wiki/Favorite-trace"}, "afterCommit": {"oid": "cef37bf4f2065897729eada91978666e6ae59df6", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/cef37bf4f2065897729eada91978666e6ae59df6", "committedDate": "2020-03-15T05:38:02Z", "message": "Add Archive Trace button\n\nThis button lets you easily reupload the current trace to a different\nserver.\n\nThe main motivation for having this is that you can have the\narchival server have a very long retention period and use it as very\nlong term storage for traces that you care about. For example when\nsharing a trace in a jira ticket since otherwise the link would expire\nafter 1 week.\n\nDesign doc explaining the reason behind this in more details and why we\nwent with this implementation: https://github.com/openzipkin/openzipkin.github.io/wiki/Favorite-trace"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cef37bf4f2065897729eada91978666e6ae59df6", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/cef37bf4f2065897729eada91978666e6ae59df6", "committedDate": "2020-03-15T05:38:02Z", "message": "Add Archive Trace button\n\nThis button lets you easily reupload the current trace to a different\nserver.\n\nThe main motivation for having this is that you can have the\narchival server have a very long retention period and use it as very\nlong term storage for traces that you care about. For example when\nsharing a trace in a jira ticket since otherwise the link would expire\nafter 1 week.\n\nDesign doc explaining the reason behind this in more details and why we\nwent with this implementation: https://github.com/openzipkin/openzipkin.github.io/wiki/Favorite-trace"}, "afterCommit": {"oid": "62996619e8514e3cd08fc97e8dceecd582771a78", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/62996619e8514e3cd08fc97e8dceecd582771a78", "committedDate": "2020-03-15T17:52:40Z", "message": "Add Archive Trace button\n\nThis button lets you easily reupload the current trace to a different\nserver.\n\nThe main motivation for having this is that you can have the\narchival server have a very long retention period and use it as very\nlong term storage for traces that you care about. For example when\nsharing a trace in a jira ticket since otherwise the link would expire\nafter 1 week.\n\nDesign doc explaining the reason behind this in more details and why we\nwent with this implementation: https://github.com/openzipkin/openzipkin.github.io/wiki/Favorite-trace"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "62996619e8514e3cd08fc97e8dceecd582771a78", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/62996619e8514e3cd08fc97e8dceecd582771a78", "committedDate": "2020-03-15T17:52:40Z", "message": "Add Archive Trace button\n\nThis button lets you easily reupload the current trace to a different\nserver.\n\nThe main motivation for having this is that you can have the\narchival server have a very long retention period and use it as very\nlong term storage for traces that you care about. For example when\nsharing a trace in a jira ticket since otherwise the link would expire\nafter 1 week.\n\nDesign doc explaining the reason behind this in more details and why we\nwent with this implementation: https://github.com/openzipkin/openzipkin.github.io/wiki/Favorite-trace"}, "afterCommit": {"oid": "f0b5155ab84a5e46e094794847cc5faba4f76a92", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/f0b5155ab84a5e46e094794847cc5faba4f76a92", "committedDate": "2020-03-15T18:16:31Z", "message": "Add Archive Trace button\n\nThis button lets you easily reupload the current trace to a different\nserver.\n\nThe main motivation for having this is that you can have the\narchival server have a very long retention period and use it as very\nlong term storage for traces that you care about. For example when\nsharing a trace in a jira ticket since otherwise the link would expire\nafter 1 week.\n\nDesign doc explaining the reason behind this in more details and why we\nwent with this implementation: https://github.com/openzipkin/openzipkin.github.io/wiki/Favorite-trace"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe60f14fdab61838f07584507ca3b6d0e5f03a16", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/fe60f14fdab61838f07584507ca3b6d0e5f03a16", "committedDate": "2020-03-15T23:13:17Z", "message": "Use react-alert for nicer alert popups"}, "afterCommit": {"oid": "19a2697afd04168f7aa32fe705d584f6fe0f6018", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/19a2697afd04168f7aa32fe705d584f6fe0f6018", "committedDate": "2020-03-15T23:15:53Z", "message": "Use react-alert for nicer alert popups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "248c5fe842ff7acc9156dd4d55648958f901ca64", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/248c5fe842ff7acc9156dd4d55648958f901ca64", "committedDate": "2020-03-19T03:28:28Z", "message": "Add Archive Trace button\n\nThis button lets you easily reupload the current trace to a different\nserver.\n\nThe main motivation for having this is that you can have the\narchival server have a very long retention period and use it as very\nlong term storage for traces that you care about. For example when\nsharing a trace in a jira ticket since otherwise the link would expire\nafter 1 week.\n\nDesign doc explaining the reason behind this in more details and why we\nwent with this implementation: https://github.com/openzipkin/openzipkin.github.io/wiki/Favorite-trace"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "420d2fb06a9b965f4e658076d15e313b198e02b1", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/420d2fb06a9b965f4e658076d15e313b198e02b1", "committedDate": "2020-03-18T04:29:48Z", "message": "Use notistack to show alerts"}, "afterCommit": {"oid": "5ccbcb4df715a842ad70cf9048dba9b449b8801d", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/5ccbcb4df715a842ad70cf9048dba9b449b8801d", "committedDate": "2020-03-19T04:29:52Z", "message": "Use notistack to show alerts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDE4MTAy", "url": "https://github.com/openzipkin/zipkin/pull/3018#pullrequestreview-377418102", "createdAt": "2020-03-19T04:35:17Z", "commit": {"oid": "5ccbcb4df715a842ad70cf9048dba9b449b8801d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDozNToxOFrOF4f0EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDozNjowNVrOF4f0vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4NTgwOA==", "bodyText": "Instead of this nested fetching which makes it hard to read how about return the value of fetch and call .then above?", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394785808", "createdAt": "2020-03-19T04:35:18Z", "author": {"login": "anuraaga"}, "path": "zipkin-lens/src/components/TracePage/TraceSummaryHeader.jsx", "diffHunk": "@@ -105,6 +106,81 @@ const TraceSummaryHeader = React.memo(({ traceSummary, rootSpanIndex }) => {\n       ? config.logsUrl.replace(/{traceId}/g, traceSummary.traceId)\n       : undefined;\n \n+  const archivePostUrl =\n+    config.archivePostUrl && traceSummary ? config.archivePostUrl : undefined;\n+\n+  const archiveUrl =\n+    config.archiveUrl && traceSummary\n+      ? config.archiveUrl.replace('{traceId}', traceSummary.traceId)\n+      : undefined;\n+\n+  const { enqueueSnackbar } = useSnackbar();\n+\n+  const archiveClick = useCallback(() => {\n+    const notify = function notify(message, variant) {\n+      enqueueSnackbar(message, {\n+        variant,\n+        anchorOrigin: {\n+          vertical: 'top',\n+          horizontal: 'center',\n+        },\n+        autoHideDuration: 10000, // 10 seconds\n+      });\n+    };\n+\n+    // We don't store the raw json in the browser yet, so we need to make an\n+    // HTTP call to retrieve it again.\n+    fetch(`${api.TRACE}/${traceSummary.traceId}`)\n+      .then((response) => {\n+        if (!response.ok) {\n+          throw new Error('Failed to fetch trace from backend');\n+        }\n+        return response.json();\n+      })\n+      .then((json) => {\n+        // Add zipkin.archived tag to root span\n+        /* eslint-disable-next-line no-restricted-syntax */\n+        for (const span of json) {\n+          if ('parentId' in span === false) {\n+            const tags = span.tags || {};\n+            tags['zipkin.archived'] = 'true';\n+            span.tags = tags;\n+            break;\n+          }\n+        }\n+\n+        fetch(archivePostUrl, {\n+          method: 'POST',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+          body: JSON.stringify(json),\n+        })\n+          .then((response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccbcb4df715a842ad70cf9048dba9b449b8801d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4NTk4MA==", "bodyText": "If you use the same pattern as above of catching the error and notifying in the notication, you should be able to have a single catch instead of the nested", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394785980", "createdAt": "2020-03-19T04:36:05Z", "author": {"login": "anuraaga"}, "path": "zipkin-lens/src/components/TracePage/TraceSummaryHeader.jsx", "diffHunk": "@@ -105,6 +106,81 @@ const TraceSummaryHeader = React.memo(({ traceSummary, rootSpanIndex }) => {\n       ? config.logsUrl.replace(/{traceId}/g, traceSummary.traceId)\n       : undefined;\n \n+  const archivePostUrl =\n+    config.archivePostUrl && traceSummary ? config.archivePostUrl : undefined;\n+\n+  const archiveUrl =\n+    config.archiveUrl && traceSummary\n+      ? config.archiveUrl.replace('{traceId}', traceSummary.traceId)\n+      : undefined;\n+\n+  const { enqueueSnackbar } = useSnackbar();\n+\n+  const archiveClick = useCallback(() => {\n+    const notify = function notify(message, variant) {\n+      enqueueSnackbar(message, {\n+        variant,\n+        anchorOrigin: {\n+          vertical: 'top',\n+          horizontal: 'center',\n+        },\n+        autoHideDuration: 10000, // 10 seconds\n+      });\n+    };\n+\n+    // We don't store the raw json in the browser yet, so we need to make an\n+    // HTTP call to retrieve it again.\n+    fetch(`${api.TRACE}/${traceSummary.traceId}`)\n+      .then((response) => {\n+        if (!response.ok) {\n+          throw new Error('Failed to fetch trace from backend');\n+        }\n+        return response.json();\n+      })\n+      .then((json) => {\n+        // Add zipkin.archived tag to root span\n+        /* eslint-disable-next-line no-restricted-syntax */\n+        for (const span of json) {\n+          if ('parentId' in span === false) {\n+            const tags = span.tags || {};\n+            tags['zipkin.archived'] = 'true';\n+            span.tags = tags;\n+            break;\n+          }\n+        }\n+\n+        fetch(archivePostUrl, {\n+          method: 'POST',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+          body: JSON.stringify(json),\n+        })\n+          .then((response) => {\n+            if (\n+              !response.ok ||\n+              (response.status !== 202 && response.status === 200)\n+            ) {\n+              throw new Error('Failed to archive the trace');\n+            }\n+            if (archiveUrl) {\n+              notify(\n+                `Archive successful! This trace is now accessible at ${archiveUrl}`,\n+                'success',\n+              );\n+            } else {\n+              notify(`Archive successful!`, 'success');\n+            }\n+          })\n+          .catch((error) => {\n+            notify(`Failed to archive the trace: ${error}`, 'error');\n+          });\n+      })\n+      .catch(() => {\n+        notify('Failed to fetch trace from backend', 'error');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccbcb4df715a842ad70cf9048dba9b449b8801d"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDIwMTcw", "url": "https://github.com/openzipkin/zipkin/pull/3018#pullrequestreview-377420170", "createdAt": "2020-03-19T04:42:30Z", "commit": {"oid": "5ccbcb4df715a842ad70cf9048dba9b449b8801d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo0MjozMFrOF4f6zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo0MjozMFrOF4f6zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4NzUzMg==", "bodyText": "const notify = (message, variant) => {...} is more natural?", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394787532", "createdAt": "2020-03-19T04:42:30Z", "author": {"login": "tacigar"}, "path": "zipkin-lens/src/components/TracePage/TraceSummaryHeader.jsx", "diffHunk": "@@ -114,7 +114,20 @@ const TraceSummaryHeader = React.memo(({ traceSummary, rootSpanIndex }) => {\n       ? config.archiveUrl.replace('{traceId}', traceSummary.traceId)\n       : undefined;\n \n+  const { enqueueSnackbar } = useSnackbar();\n+\n   const archiveClick = useCallback(() => {\n+    const notify = function notify(message, variant) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccbcb4df715a842ad70cf9048dba9b449b8801d"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ccbcb4df715a842ad70cf9048dba9b449b8801d", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/5ccbcb4df715a842ad70cf9048dba9b449b8801d", "committedDate": "2020-03-19T04:29:52Z", "message": "Use notistack to show alerts"}, "afterCommit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/59b8eb6802039c1b738ee0fe803ff948f13d74af", "committedDate": "2020-03-19T04:51:39Z", "message": "Use notistack to show alerts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDIzOTEw", "url": "https://github.com/openzipkin/zipkin/pull/3018#pullrequestreview-377423910", "createdAt": "2020-03-19T04:55:00Z", "commit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo1NTowMVrOF4gG9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo1NTowMVrOF4gG9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5MDY0Nw==", "bodyText": "Go ahead and catch the error here and include it in the message (your previous nested catch did that)", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394790647", "createdAt": "2020-03-19T04:55:01Z", "author": {"login": "anuraaga"}, "path": "zipkin-lens/src/components/TracePage/TraceSummaryHeader.jsx", "diffHunk": "@@ -105,6 +106,80 @@ const TraceSummaryHeader = React.memo(({ traceSummary, rootSpanIndex }) => {\n       ? config.logsUrl.replace(/{traceId}/g, traceSummary.traceId)\n       : undefined;\n \n+  const archivePostUrl =\n+    config.archivePostUrl && traceSummary ? config.archivePostUrl : undefined;\n+\n+  const archiveUrl =\n+    config.archiveUrl && traceSummary\n+      ? config.archiveUrl.replace('{traceId}', traceSummary.traceId)\n+      : undefined;\n+\n+  const { enqueueSnackbar } = useSnackbar();\n+\n+  const archiveClick = useCallback(() => {\n+    const notify = (message, variant) => {\n+      enqueueSnackbar(message, {\n+        variant,\n+        anchorOrigin: {\n+          vertical: 'top',\n+          horizontal: 'center',\n+        },\n+        autoHideDuration: 10000, // 10 seconds\n+      });\n+    };\n+\n+    // We don't store the raw json in the browser yet, so we need to make an\n+    // HTTP call to retrieve it again.\n+    fetch(`${api.TRACE}/${traceSummary.traceId}`)\n+      .then((response) => {\n+        if (!response.ok) {\n+          throw new Error('Failed to fetch trace from backend');\n+        }\n+        return response.json();\n+      })\n+      .then((json) => {\n+        // Add zipkin.archived tag to root span\n+        /* eslint-disable-next-line no-restricted-syntax */\n+        for (const span of json) {\n+          if ('parentId' in span === false) {\n+            const tags = span.tags || {};\n+            tags['zipkin.archived'] = 'true';\n+            span.tags = tags;\n+            break;\n+          }\n+        }\n+        return json;\n+      })\n+      .then((json) => {\n+        return fetch(archivePostUrl, {\n+          method: 'POST',\n+          headers: {\n+            'Content-Type': 'application/json',\n+          },\n+          body: JSON.stringify(json),\n+        });\n+      })\n+      .then((response) => {\n+        if (\n+          !response.ok ||\n+          (response.status !== 202 && response.status === 200)\n+        ) {\n+          throw new Error('Failed to archive the trace');\n+        }\n+        if (archiveUrl) {\n+          notify(\n+            `Archive successful! This trace is now accessible at ${archiveUrl}`,\n+            'success',\n+          );\n+        } else {\n+          notify(`Archive successful!`, 'success');\n+        }\n+      })\n+      .catch(() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDI2MDc5", "url": "https://github.com/openzipkin/zipkin/pull/3018#pullrequestreview-377426079", "createdAt": "2020-03-19T05:02:51Z", "commit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNTowMjo1MlrOF4gOAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNTowNToxMFrOF4gP3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5MjQ0OQ==", "bodyText": "do we want to comment here why SnackbarProvider? it might not be obvious that this helps with things like archive", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394792449", "createdAt": "2020-03-19T05:02:52Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-lens/src/components/App/App.jsx", "diffHunk": "@@ -39,29 +40,31 @@ const App = () => {\n       <UiConfig>\n         <MuiPickersUtilsProvider utils={MomentUtils}>\n           <ThemeProvider theme={theme}>\n-            <UiConfigConsumer>\n-              {(config) => (\n-                <Provider store={configureStore(config)}>\n-                  <I18nProvider i18n={i18n}>\n-                    <BrowserRouter basename={BASE_PATH}>\n-                      <Layout>\n-                        <Route exact path=\"/\" component={DiscoverPage} />\n-                        <Route\n-                          exact\n-                          path=\"/dependency\"\n-                          component={DependenciesPage}\n-                        />\n-                        <Route\n-                          exact\n-                          path={['/traces/:traceId', '/traceViewer']}\n-                          component={TracePage}\n-                        />\n-                      </Layout>\n-                    </BrowserRouter>\n-                  </I18nProvider>\n-                </Provider>\n-              )}\n-            </UiConfigConsumer>\n+            <SnackbarProvider>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5MjU5Mg==", "bodyText": "@jeqo @jcchavezs traducelo por favor!", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394792592", "createdAt": "2020-03-19T05:03:35Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-lens/src/translations/es/messages.json", "diffHunk": "@@ -36,6 +36,7 @@\n   \"Trace ID\": \"ID de Traza\",\n   \"Upload JSON\": \"Subir JSON\",\n   \"View Logs\": \"Ver Logs\",\n+  \"Archive Trace\": \"\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5MjgxMA==", "bodyText": "@uckyk do you mind offering some chinese translation text here?", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394792810", "createdAt": "2020-03-19T05:04:35Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-lens/src/translations/zh-cn/messages.json", "diffHunk": "@@ -36,6 +36,7 @@\n   \"Trace ID\": \"\",\n   \"Upload JSON\": \"\",\n   \"View Logs\": \"\",\n+  \"Archive Trace\": \"\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5MjkyNQ==", "bodyText": "looks great", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394792925", "createdAt": "2020-03-19T05:05:10Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -177,13 +177,23 @@ queryLimit | zipkin.ui.query-limit | Default limit for Find Traces. Defaults to\n instrumented | zipkin.ui.instrumented | Which sites this Zipkin UI covers. Regex syntax. e.g. `http:\\/\\/example.com\\/.*` Defaults to match all websites (`.*`).\n logsUrl | zipkin.ui.logs-url | Logs query service url pattern. If specified, a button will appear on the trace page and will replace {traceId} in the url by the traceId. Not required.\n supportUrl / zipkin.ui.support-url / A URL where a user can ask for support. If specified, a link will be placed in the side menu to this URL, for example a page to file support tickets. Not required.\n+archivePostUrl | zipkin.ui.archive-post-url | Url to POST the current trace in Zipkin v2 json format. e.g. 'https://longterm/api/v2/spans'. If specified, a button will appear on the trace page accordingly. Not required.\n+archiveUrl | zipkin.ui.archive-url | Url to a web application serving an archived trace, templated by '{traceId}'. e.g. https://longterm/zipkin/trace/{traceId}'. This is shown in a confirmation message after a trace is successfully POSTed to the `archivePostUrl`. Not required.\n dependency.lowErrorRate | zipkin.ui.dependency.low-error-rate | The rate of error calls on a dependency link that turns it yellow. Defaults to 0.5 (50%) set to >1 to disable.\n dependency.highErrorRate | zipkin.ui.dependency.high-error-rate | The rate of error calls on a dependency link that turns it red. Defaults to 0.75 (75%) set to >1 to disable.\n basePath | zipkin.ui.basepath | path prefix placed into the <base> tag in the UI HTML; useful when running behind a reverse proxy. Default \"/zipkin\"\n \n To map properties to environment variables, change them to upper-underscore case format. For\n example, if using docker you can set `ZIPKIN_UI_QUERY_LIMIT=100` to affect `$.queryLimit` in `/config.json`.\n \n+### Trace archival", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDI3ODEy", "url": "https://github.com/openzipkin/zipkin/pull/3018#pullrequestreview-377427812", "createdAt": "2020-03-19T05:09:30Z", "commit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNTowOTozMFrOF4gTpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNTowOTozMFrOF4gTpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5Mzg5NQ==", "bodyText": "Are these changes still needed?", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394793895", "createdAt": "2020-03-19T05:09:30Z", "author": {"login": "tacigar"}, "path": "zipkin-lens/src/zipkin/trace.js", "diffHunk": "@@ -291,7 +291,12 @@ function addLayoutDetails(\n   }\n }\n \n-export function detailedTraceSummary(root, logsUrl) {\n+export function detailedTraceSummary(\n+  root,\n+  logsUrl,\n+  archivePostUrl,\n+  archiveUrl,\n+) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59b8eb6802039c1b738ee0fe803ff948f13d74af", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/59b8eb6802039c1b738ee0fe803ff948f13d74af", "committedDate": "2020-03-19T04:51:39Z", "message": "Use notistack to show alerts"}, "afterCommit": {"oid": "b68c5142e10a96944fcf8c7928f4019189205321", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/b68c5142e10a96944fcf8c7928f4019189205321", "committedDate": "2020-03-19T05:36:29Z", "message": "Use notistack to show alerts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDM2NDA4", "url": "https://github.com/openzipkin/zipkin/pull/3018#pullrequestreview-377436408", "createdAt": "2020-03-19T05:40:54Z", "commit": {"oid": "b68c5142e10a96944fcf8c7928f4019189205321"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNTo0MDo1NFrOF4gvfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNTo0MDo1NFrOF4gvfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDgwMTAyMQ==", "bodyText": "sweet", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394801021", "createdAt": "2020-03-19T05:40:54Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-lens/src/components/App/App.jsx", "diffHunk": "@@ -39,29 +40,32 @@ const App = () => {\n       <UiConfig>\n         <MuiPickersUtilsProvider utils={MomentUtils}>\n           <ThemeProvider theme={theme}>\n-            <UiConfigConsumer>\n-              {(config) => (\n-                <Provider store={configureStore(config)}>\n-                  <I18nProvider i18n={i18n}>\n-                    <BrowserRouter basename={BASE_PATH}>\n-                      <Layout>\n-                        <Route exact path=\"/\" component={DiscoverPage} />\n-                        <Route\n-                          exact\n-                          path=\"/dependency\"\n-                          component={DependenciesPage}\n-                        />\n-                        <Route\n-                          exact\n-                          path={['/traces/:traceId', '/traceViewer']}\n-                          component={TracePage}\n-                        />\n-                      </Layout>\n-                    </BrowserRouter>\n-                  </I18nProvider>\n-                </Provider>\n-              )}\n-            </UiConfigConsumer>\n+            // Snackbar is used to provide popup alerts to the user", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b68c5142e10a96944fcf8c7928f4019189205321"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDQ1MDIy", "url": "https://github.com/openzipkin/zipkin/pull/3018#pullrequestreview-377445022", "createdAt": "2020-03-19T06:07:40Z", "commit": {"oid": "b68c5142e10a96944fcf8c7928f4019189205321"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNjowNzo0MFrOF4hL_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNjowNzo0MFrOF4hL_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDgwODMxNw==", "bodyText": "Should be {/* Snackbar is used to provide popup alerts to the user */}", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394808317", "createdAt": "2020-03-19T06:07:40Z", "author": {"login": "tacigar"}, "path": "zipkin-lens/src/components/App/App.jsx", "diffHunk": "@@ -39,29 +40,32 @@ const App = () => {\n       <UiConfig>\n         <MuiPickersUtilsProvider utils={MomentUtils}>\n           <ThemeProvider theme={theme}>\n-            <UiConfigConsumer>\n-              {(config) => (\n-                <Provider store={configureStore(config)}>\n-                  <I18nProvider i18n={i18n}>\n-                    <BrowserRouter basename={BASE_PATH}>\n-                      <Layout>\n-                        <Route exact path=\"/\" component={DiscoverPage} />\n-                        <Route\n-                          exact\n-                          path=\"/dependency\"\n-                          component={DependenciesPage}\n-                        />\n-                        <Route\n-                          exact\n-                          path={['/traces/:traceId', '/traceViewer']}\n-                          component={TracePage}\n-                        />\n-                      </Layout>\n-                    </BrowserRouter>\n-                  </I18nProvider>\n-                </Provider>\n-              )}\n-            </UiConfigConsumer>\n+            // Snackbar is used to provide popup alerts to the user", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b68c5142e10a96944fcf8c7928f4019189205321"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NTA2NjM3", "url": "https://github.com/openzipkin/zipkin/pull/3018#pullrequestreview-377506637", "createdAt": "2020-03-19T08:26:13Z", "commit": {"oid": "b68c5142e10a96944fcf8c7928f4019189205321"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwODoyNjoxNFrOF4kOxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwODoyNjoxNFrOF4kOxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg1ODE4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"Archive Trace\": \"\",\n          \n          \n            \n              \"Archive Trace\": \"Archivar Traza\",", "url": "https://github.com/openzipkin/zipkin/pull/3018#discussion_r394858182", "createdAt": "2020-03-19T08:26:14Z", "author": {"login": "jeqo"}, "path": "zipkin-lens/src/translations/es/messages.json", "diffHunk": "@@ -36,6 +36,7 @@\n   \"Trace ID\": \"ID de Traza\",\n   \"Upload JSON\": \"Subir JSON\",\n   \"View Logs\": \"Ver Logs\",\n+  \"Archive Trace\": \"\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b68c5142e10a96944fcf8c7928f4019189205321"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "902f92669282357173286beb12e4ab82c43e0dd1", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/902f92669282357173286beb12e4ab82c43e0dd1", "committedDate": "2020-03-23T04:49:09Z", "message": "Use notistack to show alerts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b68c5142e10a96944fcf8c7928f4019189205321", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/b68c5142e10a96944fcf8c7928f4019189205321", "committedDate": "2020-03-19T05:36:29Z", "message": "Use notistack to show alerts"}, "afterCommit": {"oid": "902f92669282357173286beb12e4ab82c43e0dd1", "author": {"user": {"login": "drolando", "name": "Daniele"}}, "url": "https://github.com/openzipkin/zipkin/commit/902f92669282357173286beb12e4ab82c43e0dd1", "committedDate": "2020-03-23T04:49:09Z", "message": "Use notistack to show alerts"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1619, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}