{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MjE0OTk3", "number": 3012, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMjo1MTo0MFrODmENMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMDowMDo1MFrODmHlog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjQxMzkzOnYy", "diffSide": "RIGHT", "path": "zipkin-server/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMjo1MTo0MFrOFzSzvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzowMjo0NVrOFzS1qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyOTg1Mw==", "bodyText": "I don't understand what this sentence is saying, Search may be disabled for the storage backend. Is it possible to rephrase it?", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389329853", "createdAt": "2020-03-08T02:51:40Z", "author": {"login": "anuraaga"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -100,26 +118,50 @@ counter.zipkin_collector.spans_dropped.$transport | cumulative spans dropped; re\n gauge.zipkin_collector.message_spans.$transport | last count of spans in a message\n gauge.zipkin_collector.message_bytes.$transport | last count of bytes in a message\n \n-## Self-Tracing\n-Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n-who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n-0.001 (0.1% or 1 out of 1000).\n-\n-When Brave dependencies are in the classpath, and `zipkin.self-tracing.enabled=true`,\n-Zipkin will self-trace calls to the api.\n+## Configuration\n+We support ENV variable configuration, such as `STORAGE_TYPE=cassandra3`, as they are familiar to\n+administrators and easy to use in runtime environments such as Docker.\n \n-[yaml configuration](src/main/resources/zipkin-server-shared.yml) binds the following environment variables to spring properties:\n-\n-Variable | Property | Description\n---- | --- | ---\n-SELF_TRACING_ENABLED | zipkin.self-tracing.enabled | Set to true to enable self-tracing. Defaults to false\n-SELF_TRACING_SAMPLE_RATE`: Percentage of self-traces to retain, defaults to always sample (1.0).\n-SELF_TRACING_FLUSH_INTERVAL | zipkin.self-tracing.flush-interval | Interval in seconds to flush self-tracing data to storage. Defaults to 1\n+Here are the top-level configuration of Zipkin:\n+* `QUERY_PORT`: Listen port for the http api and web ui; Defaults to 9411\n+* `QUERY_ENABLED`: `false` disables the query api and UI assets. Search", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b6b40c75c16ccea38842efed1d383d7e957c809"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMDExOA==", "bodyText": "this content was just moved up. I can address this now, if you think it is relevant to..", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389330118", "createdAt": "2020-03-08T02:57:51Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -100,26 +118,50 @@ counter.zipkin_collector.spans_dropped.$transport | cumulative spans dropped; re\n gauge.zipkin_collector.message_spans.$transport | last count of spans in a message\n gauge.zipkin_collector.message_bytes.$transport | last count of bytes in a message\n \n-## Self-Tracing\n-Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n-who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n-0.001 (0.1% or 1 out of 1000).\n-\n-When Brave dependencies are in the classpath, and `zipkin.self-tracing.enabled=true`,\n-Zipkin will self-trace calls to the api.\n+## Configuration\n+We support ENV variable configuration, such as `STORAGE_TYPE=cassandra3`, as they are familiar to\n+administrators and easy to use in runtime environments such as Docker.\n \n-[yaml configuration](src/main/resources/zipkin-server-shared.yml) binds the following environment variables to spring properties:\n-\n-Variable | Property | Description\n---- | --- | ---\n-SELF_TRACING_ENABLED | zipkin.self-tracing.enabled | Set to true to enable self-tracing. Defaults to false\n-SELF_TRACING_SAMPLE_RATE`: Percentage of self-traces to retain, defaults to always sample (1.0).\n-SELF_TRACING_FLUSH_INTERVAL | zipkin.self-tracing.flush-interval | Interval in seconds to flush self-tracing data to storage. Defaults to 1\n+Here are the top-level configuration of Zipkin:\n+* `QUERY_PORT`: Listen port for the http api and web ui; Defaults to 9411\n+* `QUERY_ENABLED`: `false` disables the query api and UI assets. Search", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyOTg1Mw=="}, "originalCommit": {"oid": "8b6b40c75c16ccea38842efed1d383d7e957c809"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMDM0Nw==", "bodyText": "agree it is awkward.. I'll do this here as it shouldn't be too much chatter to find good text.", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389330347", "createdAt": "2020-03-08T03:02:45Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -100,26 +118,50 @@ counter.zipkin_collector.spans_dropped.$transport | cumulative spans dropped; re\n gauge.zipkin_collector.message_spans.$transport | last count of spans in a message\n gauge.zipkin_collector.message_bytes.$transport | last count of bytes in a message\n \n-## Self-Tracing\n-Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n-who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n-0.001 (0.1% or 1 out of 1000).\n-\n-When Brave dependencies are in the classpath, and `zipkin.self-tracing.enabled=true`,\n-Zipkin will self-trace calls to the api.\n+## Configuration\n+We support ENV variable configuration, such as `STORAGE_TYPE=cassandra3`, as they are familiar to\n+administrators and easy to use in runtime environments such as Docker.\n \n-[yaml configuration](src/main/resources/zipkin-server-shared.yml) binds the following environment variables to spring properties:\n-\n-Variable | Property | Description\n---- | --- | ---\n-SELF_TRACING_ENABLED | zipkin.self-tracing.enabled | Set to true to enable self-tracing. Defaults to false\n-SELF_TRACING_SAMPLE_RATE`: Percentage of self-traces to retain, defaults to always sample (1.0).\n-SELF_TRACING_FLUSH_INTERVAL | zipkin.self-tracing.flush-interval | Interval in seconds to flush self-tracing data to storage. Defaults to 1\n+Here are the top-level configuration of Zipkin:\n+* `QUERY_PORT`: Listen port for the http api and web ui; Defaults to 9411\n+* `QUERY_ENABLED`: `false` disables the query api and UI assets. Search", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyOTg1Mw=="}, "originalCommit": {"oid": "8b6b40c75c16ccea38842efed1d383d7e957c809"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjQxNDg1OnYy", "diffSide": "RIGHT", "path": "zipkin-server/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMjo1NDoyMFrOFzS0LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMjo1ODowNFrOFzS0yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyOTk2NQ==", "bodyText": "I think this relates to my above comment but if query is disabled isn't search always disabled? Do we need to mention storage backend?", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389329965", "createdAt": "2020-03-08T02:54:20Z", "author": {"login": "anuraaga"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -100,26 +118,50 @@ counter.zipkin_collector.spans_dropped.$transport | cumulative spans dropped; re\n gauge.zipkin_collector.message_spans.$transport | last count of spans in a message\n gauge.zipkin_collector.message_bytes.$transport | last count of bytes in a message\n \n-## Self-Tracing\n-Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n-who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n-0.001 (0.1% or 1 out of 1000).\n-\n-When Brave dependencies are in the classpath, and `zipkin.self-tracing.enabled=true`,\n-Zipkin will self-trace calls to the api.\n+## Configuration\n+We support ENV variable configuration, such as `STORAGE_TYPE=cassandra3`, as they are familiar to\n+administrators and easy to use in runtime environments such as Docker.\n \n-[yaml configuration](src/main/resources/zipkin-server-shared.yml) binds the following environment variables to spring properties:\n-\n-Variable | Property | Description\n---- | --- | ---\n-SELF_TRACING_ENABLED | zipkin.self-tracing.enabled | Set to true to enable self-tracing. Defaults to false\n-SELF_TRACING_SAMPLE_RATE`: Percentage of self-traces to retain, defaults to always sample (1.0).\n-SELF_TRACING_FLUSH_INTERVAL | zipkin.self-tracing.flush-interval | Interval in seconds to flush self-tracing data to storage. Defaults to 1\n+Here are the top-level configuration of Zipkin:\n+* `QUERY_PORT`: Listen port for the http api and web ui; Defaults to 9411\n+* `QUERY_ENABLED`: `false` disables the query api and UI assets. Search\n+may also be disabled for the storage backend if it is not needed;\n+Defaults to true\n+* `SEARCH_ENABLED`: `false` disables trace search requests on the storage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b6b40c75c16ccea38842efed1d383d7e957c809"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMDEyMw==", "bodyText": "this content was just moved up. I can address this now, if you think it is relevant to..", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389330123", "createdAt": "2020-03-08T02:58:04Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -100,26 +118,50 @@ counter.zipkin_collector.spans_dropped.$transport | cumulative spans dropped; re\n gauge.zipkin_collector.message_spans.$transport | last count of spans in a message\n gauge.zipkin_collector.message_bytes.$transport | last count of bytes in a message\n \n-## Self-Tracing\n-Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n-who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n-0.001 (0.1% or 1 out of 1000).\n-\n-When Brave dependencies are in the classpath, and `zipkin.self-tracing.enabled=true`,\n-Zipkin will self-trace calls to the api.\n+## Configuration\n+We support ENV variable configuration, such as `STORAGE_TYPE=cassandra3`, as they are familiar to\n+administrators and easy to use in runtime environments such as Docker.\n \n-[yaml configuration](src/main/resources/zipkin-server-shared.yml) binds the following environment variables to spring properties:\n-\n-Variable | Property | Description\n---- | --- | ---\n-SELF_TRACING_ENABLED | zipkin.self-tracing.enabled | Set to true to enable self-tracing. Defaults to false\n-SELF_TRACING_SAMPLE_RATE`: Percentage of self-traces to retain, defaults to always sample (1.0).\n-SELF_TRACING_FLUSH_INTERVAL | zipkin.self-tracing.flush-interval | Interval in seconds to flush self-tracing data to storage. Defaults to 1\n+Here are the top-level configuration of Zipkin:\n+* `QUERY_PORT`: Listen port for the http api and web ui; Defaults to 9411\n+* `QUERY_ENABLED`: `false` disables the query api and UI assets. Search\n+may also be disabled for the storage backend if it is not needed;\n+Defaults to true\n+* `SEARCH_ENABLED`: `false` disables trace search requests on the storage", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyOTk2NQ=="}, "originalCommit": {"oid": "8b6b40c75c16ccea38842efed1d383d7e957c809"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjYwMDk2OnYy", "diffSide": "RIGHT", "path": "zipkin-server/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwOTo0OToyNlrOFzUOBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDo0NjoyN1rOFzYmQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1Mjk2Nw==", "bodyText": "I would bold custom servers are not supported.", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389352967", "createdAt": "2020-03-08T09:49:26Z", "author": {"login": "jcchavezs"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -1,9 +1,12 @@\n # zipkin-server\n-zipkin-server is a [Spring Boot](http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/) application, packaged as an executable jar. You need JRE 8+ to start zipkin-server.\n+Zipkin Server is a Java 1.8+ service, packaged as an executable jar.\n \n-Span storage and collectors are configurable. By default, storage is\n-in-memory, the http collector (POST /api/v2/spans endpoint) is enabled,\n-and the server listens on port 9411.\n+Span storage and collectors are [configurable](#configuration). By default, storage is in-memory,\n+the http collector (POST /api/v2/spans endpoint) is enabled, and the server listens on port 9411.\n+\n+Zipkin Server is implemented with [Armeria](https://github.com/line/armeria) and uses [Spring Boot](http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/)\n+internally for configuration. It should not be considered a normal Spring Boot application: custom\n+servers are not supported.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzY0Nw==", "bodyText": "good point", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389423647", "createdAt": "2020-03-09T00:35:38Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -1,9 +1,12 @@\n # zipkin-server\n-zipkin-server is a [Spring Boot](http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/) application, packaged as an executable jar. You need JRE 8+ to start zipkin-server.\n+Zipkin Server is a Java 1.8+ service, packaged as an executable jar.\n \n-Span storage and collectors are configurable. By default, storage is\n-in-memory, the http collector (POST /api/v2/spans endpoint) is enabled,\n-and the server listens on port 9411.\n+Span storage and collectors are [configurable](#configuration). By default, storage is in-memory,\n+the http collector (POST /api/v2/spans endpoint) is enabled, and the server listens on port 9411.\n+\n+Zipkin Server is implemented with [Armeria](https://github.com/line/armeria) and uses [Spring Boot](http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/)\n+internally for configuration. It should not be considered a normal Spring Boot application: custom\n+servers are not supported.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1Mjk2Nw=="}, "originalCommit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyNDcwNg==", "bodyText": "\ud83e\udd23", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389424706", "createdAt": "2020-03-09T00:46:27Z", "author": {"login": "minwoox"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -1,9 +1,12 @@\n # zipkin-server\n-zipkin-server is a [Spring Boot](http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/) application, packaged as an executable jar. You need JRE 8+ to start zipkin-server.\n+Zipkin Server is a Java 1.8+ service, packaged as an executable jar.\n \n-Span storage and collectors are configurable. By default, storage is\n-in-memory, the http collector (POST /api/v2/spans endpoint) is enabled,\n-and the server listens on port 9411.\n+Span storage and collectors are [configurable](#configuration). By default, storage is in-memory,\n+the http collector (POST /api/v2/spans endpoint) is enabled, and the server listens on port 9411.\n+\n+Zipkin Server is implemented with [Armeria](https://github.com/line/armeria) and uses [Spring Boot](http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/)\n+internally for configuration. It should not be considered a normal Spring Boot application: custom\n+servers are not supported.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1Mjk2Nw=="}, "originalCommit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjk2NjE3OnYy", "diffSide": "RIGHT", "path": "zipkin-server/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxOTo1Nzo1MVrOFzXGGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDozNToyNVrOFzYiFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwMDA4OA==", "bodyText": "nit: HTTP API and Web UI to be consistent with the next paragraph?", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389400088", "createdAt": "2020-03-08T19:57:51Z", "author": {"login": "jcchavezs"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -100,26 +118,50 @@ counter.zipkin_collector.spans_dropped.$transport | cumulative spans dropped; re\n gauge.zipkin_collector.message_spans.$transport | last count of spans in a message\n gauge.zipkin_collector.message_bytes.$transport | last count of bytes in a message\n \n-## Self-Tracing\n-Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n-who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n-0.001 (0.1% or 1 out of 1000).\n-\n-When Brave dependencies are in the classpath, and `zipkin.self-tracing.enabled=true`,\n-Zipkin will self-trace calls to the api.\n-\n-[yaml configuration](src/main/resources/zipkin-server-shared.yml) binds the following environment variables to spring properties:\n+## Configuration\n+We support ENV variable configuration, such as `STORAGE_TYPE=cassandra3`, as they are familiar to\n+administrators and easy to use in runtime environments such as Docker.\n \n-Variable | Property | Description\n---- | --- | ---\n-SELF_TRACING_ENABLED | zipkin.self-tracing.enabled | Set to true to enable self-tracing. Defaults to false\n-SELF_TRACING_SAMPLE_RATE`: Percentage of self-traces to retain, defaults to always sample (1.0).\n-SELF_TRACING_FLUSH_INTERVAL | zipkin.self-tracing.flush-interval | Interval in seconds to flush self-tracing data to storage. Defaults to 1\n+Here are the top-level configuration of Zipkin:\n+* `QUERY_PORT`: Listen port for the http api and web ui; Defaults to 9411", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzYzNw==", "bodyText": "done everywhere", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389423637", "createdAt": "2020-03-09T00:35:25Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -100,26 +118,50 @@ counter.zipkin_collector.spans_dropped.$transport | cumulative spans dropped; re\n gauge.zipkin_collector.message_spans.$transport | last count of spans in a message\n gauge.zipkin_collector.message_bytes.$transport | last count of bytes in a message\n \n-## Self-Tracing\n-Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n-who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n-0.001 (0.1% or 1 out of 1000).\n-\n-When Brave dependencies are in the classpath, and `zipkin.self-tracing.enabled=true`,\n-Zipkin will self-trace calls to the api.\n-\n-[yaml configuration](src/main/resources/zipkin-server-shared.yml) binds the following environment variables to spring properties:\n+## Configuration\n+We support ENV variable configuration, such as `STORAGE_TYPE=cassandra3`, as they are familiar to\n+administrators and easy to use in runtime environments such as Docker.\n \n-Variable | Property | Description\n---- | --- | ---\n-SELF_TRACING_ENABLED | zipkin.self-tracing.enabled | Set to true to enable self-tracing. Defaults to false\n-SELF_TRACING_SAMPLE_RATE`: Percentage of self-traces to retain, defaults to always sample (1.0).\n-SELF_TRACING_FLUSH_INTERVAL | zipkin.self-tracing.flush-interval | Interval in seconds to flush self-tracing data to storage. Defaults to 1\n+Here are the top-level configuration of Zipkin:\n+* `QUERY_PORT`: Listen port for the http api and web ui; Defaults to 9411", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwMDA4OA=="}, "originalCommit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjk2ODAyOnYy", "diffSide": "RIGHT", "path": "zipkin-server/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMDowMDo1MFrOFzXG9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDozNToxNVrOFzYiBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwMDMwOA==", "bodyText": "How about specifying what is the name of the service or how to find such traces?", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389400308", "createdAt": "2020-03-08T20:00:50Z", "author": {"login": "jcchavezs"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -459,6 +477,19 @@ $ COLLECTOR_GRPC_ENABLED=true java -jar zipkin.jar\n \n As this service is experimental, it is not recommended to run this in production environments.\n \n+## Self-Tracing\n+Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n+who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n+0.001 (0.1% or 1 out of 1000).\n+\n+When `zipkin.self-tracing.enabled=true`, Zipkin will self-trace calls to the api.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzYyMg==", "bodyText": "done!", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389423622", "createdAt": "2020-03-09T00:35:15Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -459,6 +477,19 @@ $ COLLECTOR_GRPC_ENABLED=true java -jar zipkin.jar\n \n As this service is experimental, it is not recommended to run this in production environments.\n \n+## Self-Tracing\n+Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n+who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n+0.001 (0.1% or 1 out of 1000).\n+\n+When `zipkin.self-tracing.enabled=true`, Zipkin will self-trace calls to the api.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwMDMwOA=="}, "originalCommit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "originalPosition": 193}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1301, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}