{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2OTA3Njkx", "number": 3249, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDo0ODowM1rOFL9C_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDo0ODowM1rOFL9C_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDc4ODQ0OnYy", "diffSide": "RIGHT", "path": "zipkin/src/main/java/zipkin2/Span.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDo0ODowM1rOIPbUJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDo0ODowM1rOIPbUJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA0NzA3Ng==", "bodyText": "@adriancole can you provide us more context about this change? We were implicitly relying on the previous logic that left-padded 0s for trace ids generated by a legacy application. We have a workaround in place to fix the broken pipeline, but we wanted to hear why this explicitly checks for length of 15 (vs 14, 13 etc...)", "url": "https://github.com/openzipkin/zipkin/pull/3249#discussion_r553047076", "createdAt": "2021-01-07T00:48:03Z", "author": {"login": "karkum"}, "path": "zipkin/src/main/java/zipkin2/Span.java", "diffHunk": "@@ -635,6 +635,7 @@ public static String normalizeTraceId(String traceId) {\n     if (length > 32) throw new IllegalArgumentException(\"traceId.length > 32\");\n     int zeros = validateHexAndReturnZeroPrefix(traceId);\n     if (zeros == length) throw new IllegalArgumentException(\"traceId is all zeros\");\n+    if (length == 15) throw new RuntimeException(\"WTF\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4949831c72599bf3eb135e48ec68140c39c6d8bc"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1055, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}