{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NTYwOTU1", "number": 3019, "title": "Fixes incorrect handling of getTrace and IT access modifiers", "bodyText": "I noticed porting zipkin-voltdb to latest, that we incorrectly handled\ngetTrace in some places. Basically, we treated a non-nullable result as\nnullable. This fixes that and also corrects method protection so that\nsubclasses of the IT can override (ex to ignore).", "createdAt": "2020-03-11T08:59:17Z", "url": "https://github.com/openzipkin/zipkin/pull/3019", "merged": true, "mergeCommit": {"oid": "946b96ce18e9b5cdc31bb447bcf09dc1df383f0f"}, "closed": true, "closedAt": "2020-03-11T10:07:44Z", "author": {"login": "codefromthecrypt"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMjQmdgH2gAyMzg2NTYwOTU1OmRmOGZiZWRmN2IyZTNmOWE4ZWUwMGI4NjU1NGU2Y2E1MGFhYzBlZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMj9KBgFqTM3MjYwNTIzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "df8fbedf7b2e3f9a8ee00b86554e6ca50aac0ee1", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/df8fbedf7b2e3f9a8ee00b86554e6ca50aac0ee1", "committedDate": "2020-03-11T08:57:59Z", "message": "Fixes incorrect handling of getTrace and IT access modifiers\n\nI noticed porting zipkin-voltdb to latest, that we incorrectly handled\ngetTrace in some places. Basically, we treated a non-nullable result as\nnullable. This fixes that and also corrects method protection so that\nsubclasses of the IT can override (ex to ignore)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNTcyMzMx", "url": "https://github.com/openzipkin/zipkin/pull/3019#pullrequestreview-372572331", "createdAt": "2020-03-11T09:00:05Z", "commit": {"oid": "df8fbedf7b2e3f9a8ee00b86554e6ca50aac0ee1"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTowMDowNVrOF0uDuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTowMTo1NlrOF0uHoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgyNDg4OA==", "bodyText": "bug", "url": "https://github.com/openzipkin/zipkin/pull/3019#discussion_r390824888", "createdAt": "2020-03-11T09:00:05Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/src/main/java/zipkin2/server/internal/ZipkinQueryApiV2.java", "diffHunk": "@@ -153,7 +153,7 @@ public AggregatedHttpResponse getTraces(\n   public AggregatedHttpResponse getTrace(@Param(\"traceId\") String traceId) throws IOException {\n     traceId = Span.normalizeTraceId(traceId);\n     List<Span> trace = storage.traces().getTrace(traceId).execute();\n-    if (trace == null) {\n+    if (trace.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8fbedf7b2e3f9a8ee00b86554e6ca50aac0ee1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgyNTEwNg==", "bodyText": "deprecated for a really long alternative!", "url": "https://github.com/openzipkin/zipkin/pull/3019#discussion_r390825106", "createdAt": "2020-03-11T09:00:31Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-tests/src/main/java/zipkin2/storage/ITDependencies.java", "diffHunk": "@@ -77,19 +77,19 @@ protected void processDependencies(List<Span> spans) throws Exception {\n    * Normally, the root-span is where trace id == span id and parent id == null. The default is to\n    * look back one day from today.\n    */\n-  @Test void getDependencies() throws Exception {\n+  @Test protected void getDependencies() throws Exception {\n     processDependencies(TRACE);\n \n     assertThat(store().getDependencies(TRACE_ENDTS, DAY).execute())\n-      .containsOnlyElementsOf(LINKS);\n+      .containsExactlyInAnyOrderElementsOf(LINKS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8fbedf7b2e3f9a8ee00b86554e6ca50aac0ee1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgyNTcxOA==", "bodyText": "bug", "url": "https://github.com/openzipkin/zipkin/pull/3019#discussion_r390825718", "createdAt": "2020-03-11T09:01:35Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin/src/main/java/zipkin2/internal/TracesAdapter.java", "diffHunk": "@@ -67,7 +67,7 @@ public TracesAdapter(SpanStore spanStore) {\n     }\n \n     @Override protected void append(List<Span> input, List<List<Span>> output) {\n-      output.add(input);\n+      if (!input.isEmpty()) output.add(input);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8fbedf7b2e3f9a8ee00b86554e6ca50aac0ee1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgyNTg4OQ==", "bodyText": "unnecessary intellij caught this and it was correct", "url": "https://github.com/openzipkin/zipkin/pull/3019#discussion_r390825889", "createdAt": "2020-03-11T09:01:56Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin/src/main/java/zipkin2/storage/InMemoryStorage.java", "diffHunk": "@@ -369,7 +369,7 @@ private int deleteOldestTrace() {\n   @Override public synchronized Call<List<Span>> getTrace(String traceId) {\n     traceId = Span.normalizeTraceId(traceId);\n     List<Span> spans = spansByTraceId(lowTraceId(traceId));\n-    if (spans == null || spans.isEmpty()) return Call.emptyList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8fbedf7b2e3f9a8ee00b86554e6ca50aac0ee1"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNjA1MjM0", "url": "https://github.com/openzipkin/zipkin/pull/3019#pullrequestreview-372605234", "createdAt": "2020-03-11T09:46:39Z", "commit": {"oid": "df8fbedf7b2e3f9a8ee00b86554e6ca50aac0ee1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1622, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}