{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMTU0NjMx", "number": 3163, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTozMToxNlrOEVQ7MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDo0ODo0MlrOEVXCJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzMyODQ4OnYy", "diffSide": "RIGHT", "path": "docker/Dockerfile.release", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTozMToxNlrOG76yRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTozMToxNlrOG76yRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MjMxMA==", "bodyText": "we forgot to add this to our main image!", "url": "https://github.com/openzipkin/zipkin/pull/3163#discussion_r465482310", "createdAt": "2020-08-05T05:31:16Z", "author": {"login": "codefromthecrypt"}, "path": "docker/Dockerfile.release", "diffHunk": "@@ -108,4 +108,7 @@ USER zipkin\n \n EXPOSE 9410 9411\n \n-ENTRYPOINT [\"/busybox/sh\", \"run.sh\"]\n+# Same settings and rationale as Dockerfile (non-release)\n+HEALTHCHECK --interval=5s --start-period=30s --timeout=5s CMD wget -qO- http://127.0.0.1:9411/health &> /dev/null || exit 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca340c48c812c7a4b4d97b3dfa806e76a2d0f07f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzM2NDQzOnYy", "diffSide": "LEFT", "path": "docker/examples/docker-compose-kafka.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTo0OTozNlrOG77H1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDo1MToyMlrOG8EYiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4NzgzMA==", "bodyText": "we don't need to bind host ports by default as it is especially confusing as only 19092 will work\nthe others are exposed directly by the Dockerfile so we don't need to re-declare expose here either.", "url": "https://github.com/openzipkin/zipkin/pull/3163#discussion_r465487830", "createdAt": "2020-08-05T05:49:36Z", "author": {"login": "codefromthecrypt"}, "path": "docker/examples/docker-compose-kafka.yml", "diffHunk": "@@ -29,10 +29,7 @@ services:\n     # environment:\n       # - KAFKA_ADVERTISED_HOST_NAME=192.168.99.100\n     ports:\n-      - 2181:2181", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca340c48c812c7a4b4d97b3dfa806e76a2d0f07f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzOTU2MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/openzipkin/zipkin/pull/3163#discussion_r465639561", "createdAt": "2020-08-05T10:51:22Z", "author": {"login": "jeqo"}, "path": "docker/examples/docker-compose-kafka.yml", "diffHunk": "@@ -29,10 +29,7 @@ services:\n     # environment:\n       # - KAFKA_ADVERTISED_HOST_NAME=192.168.99.100\n     ports:\n-      - 2181:2181", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4NzgzMA=="}, "originalCommit": {"oid": "ca340c48c812c7a4b4d97b3dfa806e76a2d0f07f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzM2NzE2OnYy", "diffSide": "RIGHT", "path": "docker/examples/docker-compose-mem.yml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTo1MDowNVrOG77JFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjowMDo1OFrOG8Gk7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4ODE0OQ==", "bodyText": "this version is what allows health conditions (note: v3 does not!!)", "url": "https://github.com/openzipkin/zipkin/pull/3163#discussion_r465488149", "createdAt": "2020-08-05T05:50:05Z", "author": {"login": "codefromthecrypt"}, "path": "docker/examples/docker-compose-mem.yml", "diffHunk": "@@ -20,7 +20,7 @@\n #\n # Note that this file is meant for learning Zipkin, not production deployments.\n \n-version: '2'\n+version: '2.4'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca340c48c812c7a4b4d97b3dfa806e76a2d0f07f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY0MDI3NA==", "bodyText": "just in case, is there any docs confirming this (v3 not supporting healthchecks)? I wasn't able to find this restriction.", "url": "https://github.com/openzipkin/zipkin/pull/3163#discussion_r465640274", "createdAt": "2020-08-05T10:52:55Z", "author": {"login": "jeqo"}, "path": "docker/examples/docker-compose-mem.yml", "diffHunk": "@@ -20,7 +20,7 @@\n #\n # Note that this file is meant for learning Zipkin, not production deployments.\n \n-version: '2'\n+version: '2.4'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4ODE0OQ=="}, "originalCommit": {"oid": "ca340c48c812c7a4b4d97b3dfa806e76a2d0f07f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2NjQ2Ng==", "bodyText": "I actually integrated this with a pinot image for test purposes, and it works in 2.x like so\n    depends_on:\n      kafka-zookeeper:\n        condition: service_healthy\nThe docs are very bad about this being removed, only mildly discusses it at the entrypoint of 'condition'\nhttps://docs.docker.com/compose/compose-file/#depends_on\n\nOptions for v3 are not incredible.. basically you have to use wait-for-it and duplicate the health check code of your upstream. I hope v2 lives forever", "url": "https://github.com/openzipkin/zipkin/pull/3163#discussion_r465666466", "createdAt": "2020-08-05T11:42:54Z", "author": {"login": "codefromthecrypt"}, "path": "docker/examples/docker-compose-mem.yml", "diffHunk": "@@ -20,7 +20,7 @@\n #\n # Note that this file is meant for learning Zipkin, not production deployments.\n \n-version: '2'\n+version: '2.4'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4ODE0OQ=="}, "originalCommit": {"oid": "ca340c48c812c7a4b4d97b3dfa806e76a2d0f07f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY3NTUwMg==", "bodyText": "make sense. thanks @adriancole !", "url": "https://github.com/openzipkin/zipkin/pull/3163#discussion_r465675502", "createdAt": "2020-08-05T12:00:58Z", "author": {"login": "jeqo"}, "path": "docker/examples/docker-compose-mem.yml", "diffHunk": "@@ -20,7 +20,7 @@\n #\n # Note that this file is meant for learning Zipkin, not production deployments.\n \n-version: '2'\n+version: '2.4'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4ODE0OQ=="}, "originalCommit": {"oid": "ca340c48c812c7a4b4d97b3dfa806e76a2d0f07f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODMyOTMyOnYy", "diffSide": "RIGHT", "path": "docker/RATIONALE.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDo0ODo0MlrOG8ETGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMTo0NDoyM1rOG8GEaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzODE3MA==", "bodyText": "nit: typo\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * to allow manual allows usage of the docker-compose v2 service_healthy condition\n          \n          \n            \n             * to allow manual usage of the docker-compose v2 service_healthy condition", "url": "https://github.com/openzipkin/zipkin/pull/3163#discussion_r465638170", "createdAt": "2020-08-05T10:48:42Z", "author": {"login": "jeqo"}, "path": "docker/RATIONALE.md", "diffHunk": "@@ -0,0 +1,17 @@\n+# zipkin-docker rationale\n+\n+## Why do we add HEALTHCHECK for test images?\n+\n+While most of our images are not production, we still add HEALTHCHECK for a better ad-hoc\n+and automation experience. Many of our setups will not operate without a service\n+dependency: having HEALTHCHECK present makes triage and scripting a bit easier.\n+\n+HEALTHCHECK on our test image serves primarily two purposes:\n+ * ad-hoc or scripted status of health using docker ps instead of knowing Kafka commands\n+ * to allow manual allows usage of the docker-compose v2 service_healthy condition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48bca925febc2eca74eb1051484ec5ab8fd95afe"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2NzE3Ng==", "bodyText": "thanks @jeqo! 421d8d6", "url": "https://github.com/openzipkin/zipkin/pull/3163#discussion_r465667176", "createdAt": "2020-08-05T11:44:23Z", "author": {"login": "codefromthecrypt"}, "path": "docker/RATIONALE.md", "diffHunk": "@@ -0,0 +1,17 @@\n+# zipkin-docker rationale\n+\n+## Why do we add HEALTHCHECK for test images?\n+\n+While most of our images are not production, we still add HEALTHCHECK for a better ad-hoc\n+and automation experience. Many of our setups will not operate without a service\n+dependency: having HEALTHCHECK present makes triage and scripting a bit easier.\n+\n+HEALTHCHECK on our test image serves primarily two purposes:\n+ * ad-hoc or scripted status of health using docker ps instead of knowing Kafka commands\n+ * to allow manual allows usage of the docker-compose v2 service_healthy condition", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzODE3MA=="}, "originalCommit": {"oid": "48bca925febc2eca74eb1051484ec5ab8fd95afe"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1182, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}