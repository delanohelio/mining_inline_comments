{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MzEzMTI2", "number": 3239, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToyMzoxNFrOEuI7wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToyMzoxNFrOEuI7wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODE2MzIyOnYy", "diffSide": "RIGHT", "path": "zipkin-server/src/main/java/zipkin2/server/internal/ZipkinQueryApiV2.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToyMzoxNFrOHiWp6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNzozOTo0NlrOHjewWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4NDgxMA==", "bodyText": "couldn't find a global toggle to disallow it, hence this workaround. @anuraaga does this please you ?", "url": "https://github.com/openzipkin/zipkin/pull/3239#discussion_r505784810", "createdAt": "2020-10-15T19:23:14Z", "author": {"login": "jorgheymans"}, "path": "zipkin-server/src/main/java/zipkin2/server/internal/ZipkinQueryApiV2.java", "diffHunk": "@@ -202,6 +204,12 @@ public AggregatedHttpResponse getAutocompleteValues(\n     return maybeCacheNames(values.size() > 3, values, ctx.alloc());\n   }\n \n+  @Trace(\"regex:^.*$\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52903c44c018353b9403c850c297a5689bd8cc87"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk3NDk3OQ==", "bodyText": "@ikhoon @minwoox ^^", "url": "https://github.com/openzipkin/zipkin/pull/3239#discussion_r505974979", "createdAt": "2020-10-16T01:49:24Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-server/src/main/java/zipkin2/server/internal/ZipkinQueryApiV2.java", "diffHunk": "@@ -202,6 +204,12 @@ public AggregatedHttpResponse getAutocompleteValues(\n     return maybeCacheNames(values.size() > 3, values, ctx.alloc());\n   }\n \n+  @Trace(\"regex:^.*$\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4NDgxMA=="}, "originalCommit": {"oid": "52903c44c018353b9403c850c297a5689bd8cc87"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk4MDAzMQ==", "bodyText": "How about using route?\nin ZipkinHttpConfiguration.java\n\nsb.route()\n  .methods(HttpMethod.TRACE)\n  .pathPrefix(\"/\")\n  .build((ctx, req) -> HttpResponse.of(HttpStatus.FORBIDDEN));", "url": "https://github.com/openzipkin/zipkin/pull/3239#discussion_r505980031", "createdAt": "2020-10-16T01:59:16Z", "author": {"login": "minwoox"}, "path": "zipkin-server/src/main/java/zipkin2/server/internal/ZipkinQueryApiV2.java", "diffHunk": "@@ -202,6 +204,12 @@ public AggregatedHttpResponse getAutocompleteValues(\n     return maybeCacheNames(values.size() > 3, values, ctx.alloc());\n   }\n \n+  @Trace(\"regex:^.*$\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4NDgxMA=="}, "originalCommit": {"oid": "52903c44c018353b9403c850c297a5689bd8cc87"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk4MjM3OQ==", "bodyText": "@jorgheymans Created an issue for that. \ud83d\ude04\nline/armeria#3114", "url": "https://github.com/openzipkin/zipkin/pull/3239#discussion_r505982379", "createdAt": "2020-10-16T02:05:14Z", "author": {"login": "minwoox"}, "path": "zipkin-server/src/main/java/zipkin2/server/internal/ZipkinQueryApiV2.java", "diffHunk": "@@ -202,6 +204,12 @@ public AggregatedHttpResponse getAutocompleteValues(\n     return maybeCacheNames(values.size() > 3, values, ctx.alloc());\n   }\n \n+  @Trace(\"regex:^.*$\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4NDgxMA=="}, "originalCommit": {"oid": "52903c44c018353b9403c850c297a5689bd8cc87"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk5MzI3Mw==", "bodyText": "I think a decorator would be better to forbid TRACE requests because it could have higher priority than HTTP services.\nsb.routeDecorator()\n  .methods(HttpMethod.TRACE)\n  .pathPrefix(\"/\")\n  .build((delegate, ctx, req) -> HttpResponse.of(HttpStatus.FORBIDDEN));", "url": "https://github.com/openzipkin/zipkin/pull/3239#discussion_r505993273", "createdAt": "2020-10-16T02:25:27Z", "author": {"login": "ikhoon"}, "path": "zipkin-server/src/main/java/zipkin2/server/internal/ZipkinQueryApiV2.java", "diffHunk": "@@ -202,6 +204,12 @@ public AggregatedHttpResponse getAutocompleteValues(\n     return maybeCacheNames(values.size() > 3, values, ctx.alloc());\n   }\n \n+  @Trace(\"regex:^.*$\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4NDgxMA=="}, "originalCommit": {"oid": "52903c44c018353b9403c850c297a5689bd8cc87"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk2NjEwNA==", "bodyText": "thanks for the suggestions, i added the routeDecorator.", "url": "https://github.com/openzipkin/zipkin/pull/3239#discussion_r506966104", "createdAt": "2020-10-17T17:39:46Z", "author": {"login": "jorgheymans"}, "path": "zipkin-server/src/main/java/zipkin2/server/internal/ZipkinQueryApiV2.java", "diffHunk": "@@ -202,6 +204,12 @@ public AggregatedHttpResponse getAutocompleteValues(\n     return maybeCacheNames(values.size() > 3, values, ctx.alloc());\n   }\n \n+  @Trace(\"regex:^.*$\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4NDgxMA=="}, "originalCommit": {"oid": "52903c44c018353b9403c850c297a5689bd8cc87"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1045, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}