{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4NDgzMDQ5", "number": 3208, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMDo0OFrOEkaidg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowNToyOFrOEkapbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjE4OTk4OnYy", "diffSide": "RIGHT", "path": "docker/storage/elasticsearch6/Dockerfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMDo0OFrOHTWIqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMDo0OFrOHTWIqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0NzY1OQ==", "bodyText": "the -oss part removes the need to disable x-pack", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490047659", "createdAt": "2020-09-17T08:00:48Z", "author": {"login": "codefromthecrypt"}, "path": "docker/storage/elasticsearch6/Dockerfile", "diffHunk": "@@ -12,41 +12,39 @@\n # the License.\n #\n \n-FROM alpine:3.12\n+FROM openzipkin/zipkin-builder as install\n \n-ENV ELASTICSEARCH_VERSION 6.8.11\n+ENV ELASTICSEARCH_VERSION 6.8.12\n \n-RUN apk add --update curl\n+WORKDIR /install\n \n-WORKDIR /elasticsearch\n+# We don't download bin scripts as we customize for reasons including BusyBox problems\n+RUN curl -sSL https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-$ELASTICSEARCH_VERSION.tar.gz| tar xz \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjE5MjIxOnYy", "diffSide": "RIGHT", "path": "docker/storage/elasticsearch6/Dockerfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMToyNVrOHTWKGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMToyNVrOHTWKGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0ODAyNg==", "bodyText": "intentionally using the same scripts. didn't extract a common \"elasticsearch\" directory over this, as it would likely be more distracting.", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490048026", "createdAt": "2020-09-17T08:01:25Z", "author": {"login": "codefromthecrypt"}, "path": "docker/storage/elasticsearch6/Dockerfile", "diffHunk": "@@ -12,41 +12,39 @@\n # the License.\n #\n \n-FROM alpine:3.12\n+FROM openzipkin/zipkin-builder as install\n \n-ENV ELASTICSEARCH_VERSION 6.8.11\n+ENV ELASTICSEARCH_VERSION 6.8.12\n \n-RUN apk add --update curl\n+WORKDIR /install\n \n-WORKDIR /elasticsearch\n+# We don't download bin scripts as we customize for reasons including BusyBox problems\n+RUN curl -sSL https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-$ELASTICSEARCH_VERSION.tar.gz| tar xz \\\n+    --wildcards --strip=1 --exclude=*/bin\n \n-RUN curl -sSL https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$ELASTICSEARCH_VERSION.tar.gz| tar xz && \\\n-    mv elasticsearch-$ELASTICSEARCH_VERSION/* /elasticsearch/ && \\\n-    # remove binaries and non shell scripts\n-    rm -f /elasticsearch/bin/elasticsearch-sql* /elasticsearch/bin/*cmd /elasticsearch/bin/*exe && \\\n-    # Remove bash as our images doesn't have it, and it isn't required\n-    ls -d /elasticsearch/bin/* | grep -v x-pack | xargs sed -i 's~#!/bin/bash~#!/bin/sh~g' && \\\n-    chmod +x /elasticsearch/bin/*\n-\n-COPY docker/storage/elasticsearch6/config /elasticsearch/config\n+COPY docker/storage/elasticsearch6/config /install/config\n \n FROM openzipkin/jre-full:14.0.2-14.29.23\n LABEL MAINTAINER Zipkin \"https://zipkin.io/\"\n \n-# https://github.com/elastic/elasticsearch/pull/31003 was closed won't fix\n-ENV ES_TMPDIR /tmp\n-\n-RUN adduser -g '' -h /elasticsearch -D elasticsearch\n+# Add HEALTHCHECK and ENTRYPOINT scripts into the default search path\n+COPY docker/storage/elasticsearch7/docker-bin/* /usr/local/bin/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjE5NDI0OnYy", "diffSide": "RIGHT", "path": "docker/storage/elasticsearch7/Dockerfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMTo1NlrOHTWLTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMTo1NlrOHTWLTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0ODMzMw==", "bodyText": "The -no-jdk part is needed in ES 7+ to avoid downloading a bundled JDK", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490048333", "createdAt": "2020-09-17T08:01:56Z", "author": {"login": "codefromthecrypt"}, "path": "docker/storage/elasticsearch7/Dockerfile", "diffHunk": "@@ -12,43 +12,40 @@\n # the License.\n #\n \n-FROM alpine:3.12\n+FROM openzipkin/zipkin-builder as install\n \n-ENV ELASTICSEARCH_VERSION 7.8.1\n+ENV ELASTICSEARCH_VERSION 7.9.1\n \n-RUN apk add --update curl\n+WORKDIR /install\n \n-WORKDIR /elasticsearch\n+# Download only the OSS distribution (lacks X-Pack)\n+# We don't download bin scripts as we customize for reasons including BusyBox problems\n+RUN curl -sSL https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-$ELASTICSEARCH_VERSION-no-jdk-linux-x86_64.tar.gz| tar xz \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjE5NzAwOnYy", "diffSide": "LEFT", "path": "docker/storage/elasticsearch7/Dockerfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMjo0NlrOHTWNHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMjo0NlrOHTWNHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0ODc5OQ==", "bodyText": "there's no need to expose 9300", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490048799", "createdAt": "2020-09-17T08:02:46Z", "author": {"login": "codefromthecrypt"}, "path": "docker/storage/elasticsearch7/Dockerfile", "diffHunk": "@@ -12,43 +12,40 @@\n # the License.\n #\n \n-FROM alpine:3.12\n+FROM openzipkin/zipkin-builder as install\n \n-ENV ELASTICSEARCH_VERSION 7.8.1\n+ENV ELASTICSEARCH_VERSION 7.9.1\n \n-RUN apk add --update curl\n+WORKDIR /install\n \n-WORKDIR /elasticsearch\n+# Download only the OSS distribution (lacks X-Pack)\n+# We don't download bin scripts as we customize for reasons including BusyBox problems\n+RUN curl -sSL https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-$ELASTICSEARCH_VERSION-no-jdk-linux-x86_64.tar.gz| tar xz \\\n+    --wildcards --strip=1 --exclude=*/bin\n \n-RUN curl -sSL https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$ELASTICSEARCH_VERSION-linux-x86_64.tar.gz| tar xz && \\\n-    mv elasticsearch-$ELASTICSEARCH_VERSION/* /elasticsearch/ && \\\n-    # disable ML as not supported on alpine per https://discuss.elastic.co/t/elasticsearch-failing-to-start-due-to-x-pack/85125/6\n-    rm -rf /elasticsearch/modules/x-pack-ml && \\\n-    # remove binaries and non shell scripts\n-    rm -f /elasticsearch/bin/elasticsearch-sql* /elasticsearch/bin/*cmd /elasticsearch/bin/*exe && \\\n-    # Remove bash as our images doesn't have it, and it isn't required\n-    ls -d /elasticsearch/bin/* | xargs sed -i 's~#!/bin/bash~#!/bin/sh~g' && \\\n-    chmod +x /elasticsearch/bin/*\n-\n-COPY docker/storage/elasticsearch7/config /elasticsearch/config\n-\n-# Overwrite start script to fix parse failures when run with busybox.\n-COPY docker/storage/elasticsearch7/elasticsearch /elasticsearch/bin/\n+COPY docker/storage/elasticsearch7/config /install/config\n \n FROM openzipkin/jre-full:14.0.2-14.29.23\n LABEL MAINTAINER Zipkin \"https://zipkin.io/\"\n \n-RUN adduser -g '' -h /elasticsearch -D elasticsearch\n+# Add HEALTHCHECK and ENTRYPOINT scripts into the default search path\n+COPY docker/storage/elasticsearch6/docker-bin/* /usr/local/bin/\n \n-COPY --from=0 --chown=elasticsearch /elasticsearch /elasticsearch\n+# All content including binaries and logs write under WORKDIR\n+ARG USER=elasticsearch\n+WORKDIR /${USER}\n \n-WORKDIR /elasticsearch\n+# Ensure the process doesn't run as root\n+RUN adduser -g '' -h ${PWD} -D ${USER}\n+USER ${USER}\n \n-# elasticsearch complains if run as root\n-USER elasticsearch\n-\n-EXPOSE 9200 9300", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjIwMDAyOnYy", "diffSide": "RIGHT", "path": "docker/storage/elasticsearch7/docker-bin/docker-healthcheck", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMzozM1rOHTWO4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowMzozM1rOHTWO4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0OTI0OA==", "bodyText": "not scraping the output as don't feel like it, but if we later feel like it, it would be easy to add to this script", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490049248", "createdAt": "2020-09-17T08:03:33Z", "author": {"login": "codefromthecrypt"}, "path": "docker/storage/elasticsearch7/docker-bin/docker-healthcheck", "diffHunk": "@@ -0,0 +1,31 @@\n+#!/bin/sh\n+#\n+# Copyright 2015-2020 The OpenZipkin Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License. You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License\n+# is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+# or implied. See the License for the specific language governing permissions and limitations under\n+# the License.\n+#\n+\n+# HEALTHCHECK for use in `docker ps` or `docker-compose ps`.\n+# It can also be used as a readiness probe in k8s\n+\n+# Fail on unset variables, but don't quit on rc!=0, so we can log what happened\n+set -u +e\n+\n+IP=\"$(hostname -i || echo '127.0.0.1')\"\n+\n+HEALTH_OUTPUT=$(wget -qO- http://${IP}:9200/_cluster/health 2>&1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjIwNTkxOnYy", "diffSide": "RIGHT", "path": "docker/storage/elasticsearch7/docker-bin/start-elasticsearch", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowNTowM1rOHTWSWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowNTowM1rOHTWSWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA1MDEzNw==", "bodyText": "ES will crash if you don't match heap sizes. During our integration tests, this was never above 120m. ExitOnOutOfMemoryError is to help things crash nicer vs have a neatly healthchecked, but broken container.", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490050137", "createdAt": "2020-09-17T08:05:03Z", "author": {"login": "codefromthecrypt"}, "path": "docker/storage/elasticsearch7/docker-bin/start-elasticsearch", "diffHunk": "@@ -0,0 +1,39 @@\n+#!/bin/sh\n+#\n+# Copyright 2015-2020 The OpenZipkin Authors\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License. You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License\n+# is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+# or implied. See the License for the specific language governing permissions and limitations under\n+# the License.\n+#\n+\n+# ENTRYPOINT script that starts Elasticsearch\n+#\n+# This intentionally locates config using the current working directory, in order to consolidate\n+# Dockerfile instructions to WORKDIR\n+set -eu\n+\n+# This file inlines what's done by the Elasticsearch script machinery, which doesn't work here due\n+# to our images using busybox (not bash). See #3044\n+#\n+# Notable settings:\n+# * lower heap size\n+# * tmpdir manual as https://github.com/elastic/elasticsearch/pull/31003 was closed won't fix\n+# * disable log4j JMX not just because we don't use it...\n+#  * ES enables security manager https://github.com/elastic/elasticsearch/issues/21932#issuecomment-264435034\n+\n+exec java \\\n+$ES_JAVA_OPTS \\\n+  -verbose:gc \\\n+  -Xms256m -Xmx256m -XX:+ExitOnOutOfMemoryError \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjIwNzgzOnYy", "diffSide": "RIGHT", "path": "zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/integration/ElasticsearchStorageExtension.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODowNToyOFrOHTWTZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzoyOTowOVrOHT43Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA1MDQwNw==", "bodyText": "this has so far not helped, but maybe it will here?", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490050407", "createdAt": "2020-09-17T08:05:28Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/integration/ElasticsearchStorageExtension.java", "diffHunk": "@@ -36,10 +35,16 @@\n \n class ElasticsearchStorageExtension implements BeforeAllCallback, AfterAllCallback {\n   static final Logger LOGGER = LoggerFactory.getLogger(ElasticsearchStorageExtension.class);\n+\n+  static {\n+    // Gives better context when there's an exception such as AbortedStreamException\n+    System.setProperty(\"com.linecorp.armeria.verboseExceptions\", \"always\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA1Mjg3MQ==", "bodyText": "Dunno if this static block runs early enough for Armeria to pick it up, armeria reads the property only once at initialization", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490052871", "createdAt": "2020-09-17T08:09:38Z", "author": {"login": "anuraaga"}, "path": "zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/integration/ElasticsearchStorageExtension.java", "diffHunk": "@@ -36,10 +35,16 @@\n \n class ElasticsearchStorageExtension implements BeforeAllCallback, AfterAllCallback {\n   static final Logger LOGGER = LoggerFactory.getLogger(ElasticsearchStorageExtension.class);\n+\n+  static {\n+    // Gives better context when there's an exception such as AbortedStreamException\n+    System.setProperty(\"com.linecorp.armeria.verboseExceptions\", \"always\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA1MDQwNw=="}, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDExNzQyOQ==", "bodyText": "yeah I was hoping to not rely on build config, so will move it up farther if this one doesn't work :P", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490117429", "createdAt": "2020-09-17T09:51:55Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/integration/ElasticsearchStorageExtension.java", "diffHunk": "@@ -36,10 +35,16 @@\n \n class ElasticsearchStorageExtension implements BeforeAllCallback, AfterAllCallback {\n   static final Logger LOGGER = LoggerFactory.getLogger(ElasticsearchStorageExtension.class);\n+\n+  static {\n+    // Gives better context when there's an exception such as AbortedStreamException\n+    System.setProperty(\"com.linecorp.armeria.verboseExceptions\", \"always\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA1MDQwNw=="}, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDExNzg3Mg==", "bodyText": "@minwoox @ikhoon @trustin ps any way we can do this without system properties?", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490117872", "createdAt": "2020-09-17T09:52:46Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/integration/ElasticsearchStorageExtension.java", "diffHunk": "@@ -36,10 +35,16 @@\n \n class ElasticsearchStorageExtension implements BeforeAllCallback, AfterAllCallback {\n   static final Logger LOGGER = LoggerFactory.getLogger(ElasticsearchStorageExtension.class);\n+\n+  static {\n+    // Gives better context when there's an exception such as AbortedStreamException\n+    System.setProperty(\"com.linecorp.armeria.verboseExceptions\", \"always\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA1MDQwNw=="}, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMjgzMQ==", "bodyText": "I think using system properties is the only way to change the value. \ud83e\udd14", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490132831", "createdAt": "2020-09-17T10:18:04Z", "author": {"login": "minwoox"}, "path": "zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/integration/ElasticsearchStorageExtension.java", "diffHunk": "@@ -36,10 +35,16 @@\n \n class ElasticsearchStorageExtension implements BeforeAllCallback, AfterAllCallback {\n   static final Logger LOGGER = LoggerFactory.getLogger(ElasticsearchStorageExtension.class);\n+\n+  static {\n+    // Gives better context when there's an exception such as AbortedStreamException\n+    System.setProperty(\"com.linecorp.armeria.verboseExceptions\", \"always\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA1MDQwNw=="}, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NjUzOQ==", "bodyText": "I think the easy verification is to add a debug statement and see if Armeria already logged it's flags-related stuff, if so too late. If not, it should work :)\nAgree with the sentiment of not mucking with build, but for five lines maybe it's still worth not worrying about ordering issues\nhttp://maven.apache.org/surefire/maven-surefire-plugin/examples/system-properties.html\n<plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <version>3.0.0-M5</version>\n        <configuration>\n          <systemPropertyVariables>\n            <propertyName>propertyValue</propertyName>", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490146539", "createdAt": "2020-09-17T10:43:42Z", "author": {"login": "anuraaga"}, "path": "zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/integration/ElasticsearchStorageExtension.java", "diffHunk": "@@ -36,10 +35,16 @@\n \n class ElasticsearchStorageExtension implements BeforeAllCallback, AfterAllCallback {\n   static final Logger LOGGER = LoggerFactory.getLogger(ElasticsearchStorageExtension.class);\n+\n+  static {\n+    // Gives better context when there's an exception such as AbortedStreamException\n+    System.setProperty(\"com.linecorp.armeria.verboseExceptions\", \"always\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA1MDQwNw=="}, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3MTU5NA==", "bodyText": "it is also that I often run in IDE and it wouldn't catch those lines, but then again it never fails in the IDE..", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490171594", "createdAt": "2020-09-17T11:32:18Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/integration/ElasticsearchStorageExtension.java", "diffHunk": "@@ -36,10 +35,16 @@\n \n class ElasticsearchStorageExtension implements BeforeAllCallback, AfterAllCallback {\n   static final Logger LOGGER = LoggerFactory.getLogger(ElasticsearchStorageExtension.class);\n+\n+  static {\n+    // Gives better context when there's an exception such as AbortedStreamException\n+    System.setProperty(\"com.linecorp.armeria.verboseExceptions\", \"always\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA1MDQwNw=="}, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNjYyMw==", "bodyText": "5eec6f3", "url": "https://github.com/openzipkin/zipkin/pull/3208#discussion_r490616623", "createdAt": "2020-09-17T23:29:09Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/integration/ElasticsearchStorageExtension.java", "diffHunk": "@@ -36,10 +35,16 @@\n \n class ElasticsearchStorageExtension implements BeforeAllCallback, AfterAllCallback {\n   static final Logger LOGGER = LoggerFactory.getLogger(ElasticsearchStorageExtension.class);\n+\n+  static {\n+    // Gives better context when there's an exception such as AbortedStreamException\n+    System.setProperty(\"com.linecorp.armeria.verboseExceptions\", \"always\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA1MDQwNw=="}, "originalCommit": {"oid": "7406bc5c000d78fcfbe11c9a89e38685be0c7222"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1247, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}