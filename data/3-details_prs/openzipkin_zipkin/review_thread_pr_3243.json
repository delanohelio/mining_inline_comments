{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MjcxMzk1", "number": 3243, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMjoxMToyN1rOEu0HQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMjoxNDoyNFrOEu0H8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTIzNzc5OnYy", "diffSide": "RIGHT", "path": "zipkin-storage/cassandra-v1/src/main/java/zipkin2/storage/cassandra/v1/SelectRemoteServiceNames.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMjoxMToyN1rOHjc-jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMjoxMToyN1rOHjc-jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzNjk3Mg==", "bodyText": "you'll notice constants like this around. we had assigned them via variables before, this is just a bit more obvious.", "url": "https://github.com/openzipkin/zipkin/pull/3243#discussion_r506936972", "createdAt": "2020-10-17T12:11:27Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-storage/cassandra-v1/src/main/java/zipkin2/storage/cassandra/v1/SelectRemoteServiceNames.java", "diffHunk": "@@ -17,33 +17,35 @@\n import com.datastax.driver.core.ResultSet;\n import com.datastax.driver.core.ResultSetFuture;\n import com.datastax.driver.core.Session;\n-import com.datastax.driver.core.querybuilder.QueryBuilder;\n import java.util.List;\n import java.util.Locale;\n import zipkin2.Call;\n import zipkin2.storage.cassandra.internal.call.DistinctSortedStrings;\n import zipkin2.storage.cassandra.internal.call.ResultSetFutureCall;\n \n+import static com.datastax.driver.core.querybuilder.QueryBuilder.bindMarker;\n+import static com.datastax.driver.core.querybuilder.QueryBuilder.eq;\n+import static com.datastax.driver.core.querybuilder.QueryBuilder.select;\n+import static zipkin2.storage.cassandra.v1.Tables.REMOTE_SERVICE_NAMES;\n+\n final class SelectRemoteServiceNames extends ResultSetFutureCall<ResultSet> {\n \n-  static class Factory {\n+  static final class Factory {\n     final Session session;\n     final PreparedStatement preparedStatement;\n-    final DistinctSortedStrings remoteServiceNames =\n-      new DistinctSortedStrings(\"remote_service_name\");\n \n     Factory(Session session) {\n       this.session = session;\n-      this.preparedStatement = session.prepare(QueryBuilder.select(\"remote_service_name\")\n-        .from(Tables.REMOTE_SERVICE_NAMES)\n-        .where(QueryBuilder.eq(\"service_name\", QueryBuilder.bindMarker(\"service_name\")))\n-        .limit(QueryBuilder.bindMarker(\"limit_\")));\n+      this.preparedStatement =\n+        session.prepare(select(\"remote_service_name\").from(REMOTE_SERVICE_NAMES)\n+          .where(eq(\"service_name\", bindMarker()))\n+          .limit(1000));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e82aad36846ed1d17e0405961763eecb23593dfb"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTIzODY0OnYy", "diffSide": "LEFT", "path": "zipkin-storage/cassandra-v1/src/main/java/zipkin2/storage/cassandra/v1/CassandraSpanStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMjoxMjo1NFrOHjc-7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMjoxMjo1NFrOHjc-7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzNzA3MQ==", "bodyText": "both of these complicated sharing and testing for things that were constant in practice. The timestamp codec has not difference based on version, and bucketCount was always set to 10 with no means to override it ever. since this is a legacy codebase I think being more obvious about constants is better than looking as if we had really parameterized them.", "url": "https://github.com/openzipkin/zipkin/pull/3243#discussion_r506937071", "createdAt": "2020-10-17T12:12:54Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-storage/cassandra-v1/src/main/java/zipkin2/storage/cassandra/v1/CassandraSpanStore.java", "diffHunk": "@@ -67,8 +64,6 @@\n     indexFetchMultiplier = storage.indexFetchMultiplier;\n     strictTraceId = storage.strictTraceId;\n     searchEnabled = storage.searchEnabled;\n-    timestampCodec = new TimestampCodec(metadata.protocolVersion);\n-    buckets = IntStream.range(0, storage.bucketCount).boxed().collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e82aad36846ed1d17e0405961763eecb23593dfb"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTIzOTI1OnYy", "diffSide": "RIGHT", "path": "zipkin-storage/cassandra/src/main/java/zipkin2/storage/cassandra/internal/CassandraStorageBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMjoxMzo0OVrOHjc_OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMjoxMzo0OVrOHjc_OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzNzE0NA==", "bodyText": "this is mostly lifted from cassandra v1s (the common things)", "url": "https://github.com/openzipkin/zipkin/pull/3243#discussion_r506937144", "createdAt": "2020-10-17T12:13:49Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-storage/cassandra/src/main/java/zipkin2/storage/cassandra/internal/CassandraStorageBuilder.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Copyright 2015-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package zipkin2.storage.cassandra.internal;\n+\n+import com.datastax.driver.core.HostDistance;\n+import com.datastax.driver.core.PoolingOptions;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+import zipkin2.internal.Nullable;\n+import zipkin2.storage.QueryRequest;\n+import zipkin2.storage.StorageComponent;\n+\n+public abstract class CassandraStorageBuilder<B extends CassandraStorageBuilder<B>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e82aad36846ed1d17e0405961763eecb23593dfb"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTIzOTUzOnYy", "diffSide": "RIGHT", "path": "zipkin-storage/cassandra/src/main/java/zipkin2/storage/cassandra/internal/SessionBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMjoxNDoyNFrOHjc_Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMjoxNDoyNFrOHjc_Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzNzE3OA==", "bodyText": "this was lifted to avoid copy/pasta between new and old cassandra. especially this code is different in v4 and annoying to do twice.", "url": "https://github.com/openzipkin/zipkin/pull/3243#discussion_r506937178", "createdAt": "2020-10-17T12:14:24Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-storage/cassandra/src/main/java/zipkin2/storage/cassandra/internal/SessionBuilder.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Copyright 2015-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package zipkin2.storage.cassandra.internal;\n+\n+import com.datastax.driver.core.AuthProvider;\n+import com.datastax.driver.core.Cluster;\n+import com.datastax.driver.core.ConsistencyLevel;\n+import com.datastax.driver.core.PoolingOptions;\n+import com.datastax.driver.core.QueryLogger;\n+import com.datastax.driver.core.QueryOptions;\n+import com.datastax.driver.core.Session;\n+import com.datastax.driver.core.policies.DCAwareRoundRobinPolicy;\n+import com.datastax.driver.core.policies.LatencyAwarePolicy;\n+import com.datastax.driver.core.policies.RoundRobinPolicy;\n+import com.datastax.driver.core.policies.TokenAwarePolicy;\n+import java.net.InetSocketAddress;\n+import java.util.ArrayList;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Set;\n+import zipkin2.internal.Nullable;\n+\n+import static zipkin2.Call.propagateIfFatal;\n+\n+public final class SessionBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e82aad36846ed1d17e0405961763eecb23593dfb"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1050, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}