{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MDMxMzYy", "number": 3103, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0Mjo0MFrOECDvug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0ODo1NlrOECD4jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTkzOTc4OnYy", "diffSide": "RIGHT", "path": "zipkin-collector/activemq/src/main/java/zipkin2/collector/activemq/LazyInit.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0Mjo0MFrOGeR_4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTowMToyOFrOGeStGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNTM0NA==", "bodyText": "This is fine too though I think // Ignore in the catch block is fine too and probably what this check is intending, just making sure you didn't accidentally forget", "url": "https://github.com/openzipkin/zipkin/pull/3103#discussion_r434405344", "createdAt": "2020-06-03T08:42:40Z", "author": {"login": "anuraaga"}, "path": "zipkin-collector/activemq/src/main/java/zipkin2/collector/activemq/LazyInit.java", "diffHunk": "@@ -58,6 +58,7 @@ void close() {\n     if (maybe != null) result.close();\n   }\n \n+  @SuppressWarnings(\"EmptyCatch\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f805db87ffa8faf244a61c8ad5442cbb6505916"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxNjkyMw==", "bodyText": "yeah generally I am just trying to get the hugely annoying errorprone messages to go away one way or another. if an empty comment or // ignore works that works for me.", "url": "https://github.com/openzipkin/zipkin/pull/3103#discussion_r434416923", "createdAt": "2020-06-03T09:01:28Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-collector/activemq/src/main/java/zipkin2/collector/activemq/LazyInit.java", "diffHunk": "@@ -58,6 +58,7 @@ void close() {\n     if (maybe != null) result.close();\n   }\n \n+  @SuppressWarnings(\"EmptyCatch\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNTM0NA=="}, "originalCommit": {"oid": "1f805db87ffa8faf244a61c8ad5442cbb6505916"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTk0NDQyOnYy", "diffSide": "RIGHT", "path": "zipkin-collector/rabbitmq/src/main/java/zipkin2/collector/rabbitmq/RabbitMQCollector.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0Mzo1MlrOGeSCtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0Mzo1MlrOGeSCtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNjA3MQ==", "bodyText": "Guess you might have added this for the same check but consider a comment instead", "url": "https://github.com/openzipkin/zipkin/pull/3103#discussion_r434406071", "createdAt": "2020-06-03T08:43:52Z", "author": {"login": "anuraaga"}, "path": "zipkin-collector/rabbitmq/src/main/java/zipkin2/collector/rabbitmq/RabbitMQCollector.java", "diffHunk": "@@ -257,12 +257,13 @@ public void handleDelivery(String tag, Envelope envelope, BasicProperties props,\n     for (int i = 0; i < addresses.size(); i++) {\n       String[] splitAddress = addresses.get(i).split(\":\", 100);\n       String host = splitAddress[0];\n-      Integer port = null;\n+      int port = -1;\n       try {\n         if (splitAddress.length == 2) port = Integer.parseInt(splitAddress[1]);\n       } catch (NumberFormatException ignore) {\n+        port = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f805db87ffa8faf244a61c8ad5442cbb6505916"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTk1MjMwOnYy", "diffSide": "RIGHT", "path": "zipkin-server/src/main/java/zipkin2/server/internal/health/ZipkinHealthController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0NjowNlrOGeSIAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0NjowNlrOGeSIAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNzQyNA==", "bodyText": "Ah too bad this annoying pre-Java8 check is still around", "url": "https://github.com/openzipkin/zipkin/pull/3103#discussion_r434407424", "createdAt": "2020-06-03T08:46:06Z", "author": {"login": "anuraaga"}, "path": "zipkin-server/src/main/java/zipkin2/server/internal/health/ZipkinHealthController.java", "diffHunk": "@@ -48,6 +48,7 @@\n     return health(ctx, MediaType.JSON_UTF_8);\n   }\n \n+  @SuppressWarnings(\"FutureReturnValueIgnored\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f805db87ffa8faf244a61c8ad5442cbb6505916"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTk1NTUyOnYy", "diffSide": "RIGHT", "path": "zipkin-storage/cassandra-v1/src/main/java/zipkin2/storage/cassandra/v1/CassandraUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0NzowNFrOGeSKAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo0Mzo0MVrOGeUR0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNzkzOQ==", "bodyText": "Accidental box?", "url": "https://github.com/openzipkin/zipkin/pull/3103#discussion_r434407939", "createdAt": "2020-06-03T08:47:04Z", "author": {"login": "anuraaga"}, "path": "zipkin-storage/cassandra-v1/src/main/java/zipkin2/storage/cassandra/v1/CassandraUtil.java", "diffHunk": "@@ -142,4 +144,13 @@ public String toString() {\n       return \"SortTraceIdsByDescTimestamp\";\n     }\n   }\n+\n+  @SuppressWarnings(\"JdkObsolete\")\n+  static List<Date> getDays(long endTs, @Nullable Long lookback) {\n+    List<Date> result = new ArrayList<>();\n+    for (Long epochMillis : DateUtil.epochDays(endTs, lookback)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f805db87ffa8faf244a61c8ad5442cbb6505916"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0MjcwNw==", "bodyText": "well it is a List but sure no prob making it eagerly unboxed.", "url": "https://github.com/openzipkin/zipkin/pull/3103#discussion_r434442707", "createdAt": "2020-06-03T09:43:41Z", "author": {"login": "codefromthecrypt"}, "path": "zipkin-storage/cassandra-v1/src/main/java/zipkin2/storage/cassandra/v1/CassandraUtil.java", "diffHunk": "@@ -142,4 +144,13 @@ public String toString() {\n       return \"SortTraceIdsByDescTimestamp\";\n     }\n   }\n+\n+  @SuppressWarnings(\"JdkObsolete\")\n+  static List<Date> getDays(long endTs, @Nullable Long lookback) {\n+    List<Date> result = new ArrayList<>();\n+    for (Long epochMillis : DateUtil.epochDays(endTs, lookback)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNzkzOQ=="}, "originalCommit": {"oid": "1f805db87ffa8faf244a61c8ad5442cbb6505916"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTk2MjM2OnYy", "diffSide": "RIGHT", "path": "zipkin-storage/elasticsearch/src/main/java/zipkin2/elasticsearch/ElasticsearchVersion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0ODo1NlrOGeSORA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0ODo1NlrOGeSORA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwOTAyOA==", "bodyText": "On phone so can't expand this file to see below but if it's duping the next line, commet instead is fine", "url": "https://github.com/openzipkin/zipkin/pull/3103#discussion_r434409028", "createdAt": "2020-06-03T08:48:56Z", "author": {"login": "anuraaga"}, "path": "zipkin-storage/elasticsearch/src/main/java/zipkin2/elasticsearch/ElasticsearchVersion.java", "diffHunk": "@@ -39,6 +39,8 @@ float get(HttpCall.Factory callFactory) throws IOException {\n     try {\n       if (enterPath(parser, \"version\", \"number\") != null) version = parser.getText();\n     } catch (RuntimeException | IOException possiblyParseException) {\n+      throw new IllegalArgumentException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f805db87ffa8faf244a61c8ad5442cbb6505916"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1135, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}