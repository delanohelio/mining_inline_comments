{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MjE0OTk3", "number": 3012, "title": "Refactors server configuration README", "bodyText": "This refactors the server README to remove redundant items about how we\nmap env to properties. This also adds an example of what property file\nSpring Boot will read by default for overrides: zipkin-server.properties.\nThe motivation for this is modules who have other configuration, and a\nnumber of questions over the last years about property files.", "createdAt": "2020-03-08T01:52:48Z", "url": "https://github.com/openzipkin/zipkin/pull/3012", "merged": true, "mergeCommit": {"oid": "c887fcbd497e5137b5aa79838ef02518797ec677"}, "closed": true, "closedAt": "2020-03-09T01:07:57Z", "author": {"login": "codefromthecrypt"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLfXGKAH2gAyMzg1MjE0OTk3OjQ4N2QyNGNhM2E3M2ZkOGE3MjkxYmNlMWNjNWIyMzA4YzBlZDg1ODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLy4HqAH2gAyMzg1MjE0OTk3OjRhMTBhYTE2OTFlMWRlYjVmY2Q5NGZiNDk3MDdmOGE4ZGExNjdkZDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "487d24ca3a73fd8a7291bce1cc5b2308c0ed8581", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/487d24ca3a73fd8a7291bce1cc5b2308c0ed8581", "committedDate": "2020-03-08T01:51:32Z", "message": "Refactors server configuration README\n\nThis refactors the server README to remove redundant items about how we\nmap env to properties. This also adds an example of what property file\nSpring Boot will read by default for overrides: `zipkin-server.properties`.\n\nThe motivation for this is modules who have other configuration, and a\nnumber of questions over the last years about property files."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cd157bdda3e50ba73387055eebc0b60ef502e0f", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/7cd157bdda3e50ba73387055eebc0b60ef502e0f", "committedDate": "2020-03-08T02:02:20Z", "message": "kill trailing tick"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzk5NTQz", "url": "https://github.com/openzipkin/zipkin/pull/3012#pullrequestreview-370799543", "createdAt": "2020-03-08T02:03:51Z", "commit": {"oid": "7cd157bdda3e50ba73387055eebc0b60ef502e0f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a08c79d68fd1df404f5b2f9f2d03f102e23e8ff", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/4a08c79d68fd1df404f5b2f9f2d03f102e23e8ff", "committedDate": "2020-03-08T02:12:36Z", "message": "rewords heading"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b6b40c75c16ccea38842efed1d383d7e957c809", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/8b6b40c75c16ccea38842efed1d383d7e957c809", "committedDate": "2020-03-08T02:13:47Z", "message": "iz"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODAxMDMw", "url": "https://github.com/openzipkin/zipkin/pull/3012#pullrequestreview-370801030", "createdAt": "2020-03-08T02:51:40Z", "commit": {"oid": "8b6b40c75c16ccea38842efed1d383d7e957c809"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMjo1MTo0MFrOFzSzvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMjo1NDoyMFrOFzS0LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyOTg1Mw==", "bodyText": "I don't understand what this sentence is saying, Search may be disabled for the storage backend. Is it possible to rephrase it?", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389329853", "createdAt": "2020-03-08T02:51:40Z", "author": {"login": "anuraaga"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -100,26 +118,50 @@ counter.zipkin_collector.spans_dropped.$transport | cumulative spans dropped; re\n gauge.zipkin_collector.message_spans.$transport | last count of spans in a message\n gauge.zipkin_collector.message_bytes.$transport | last count of bytes in a message\n \n-## Self-Tracing\n-Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n-who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n-0.001 (0.1% or 1 out of 1000).\n-\n-When Brave dependencies are in the classpath, and `zipkin.self-tracing.enabled=true`,\n-Zipkin will self-trace calls to the api.\n+## Configuration\n+We support ENV variable configuration, such as `STORAGE_TYPE=cassandra3`, as they are familiar to\n+administrators and easy to use in runtime environments such as Docker.\n \n-[yaml configuration](src/main/resources/zipkin-server-shared.yml) binds the following environment variables to spring properties:\n-\n-Variable | Property | Description\n---- | --- | ---\n-SELF_TRACING_ENABLED | zipkin.self-tracing.enabled | Set to true to enable self-tracing. Defaults to false\n-SELF_TRACING_SAMPLE_RATE`: Percentage of self-traces to retain, defaults to always sample (1.0).\n-SELF_TRACING_FLUSH_INTERVAL | zipkin.self-tracing.flush-interval | Interval in seconds to flush self-tracing data to storage. Defaults to 1\n+Here are the top-level configuration of Zipkin:\n+* `QUERY_PORT`: Listen port for the http api and web ui; Defaults to 9411\n+* `QUERY_ENABLED`: `false` disables the query api and UI assets. Search", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b6b40c75c16ccea38842efed1d383d7e957c809"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyOTk2NQ==", "bodyText": "I think this relates to my above comment but if query is disabled isn't search always disabled? Do we need to mention storage backend?", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389329965", "createdAt": "2020-03-08T02:54:20Z", "author": {"login": "anuraaga"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -100,26 +118,50 @@ counter.zipkin_collector.spans_dropped.$transport | cumulative spans dropped; re\n gauge.zipkin_collector.message_spans.$transport | last count of spans in a message\n gauge.zipkin_collector.message_bytes.$transport | last count of bytes in a message\n \n-## Self-Tracing\n-Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n-who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n-0.001 (0.1% or 1 out of 1000).\n-\n-When Brave dependencies are in the classpath, and `zipkin.self-tracing.enabled=true`,\n-Zipkin will self-trace calls to the api.\n+## Configuration\n+We support ENV variable configuration, such as `STORAGE_TYPE=cassandra3`, as they are familiar to\n+administrators and easy to use in runtime environments such as Docker.\n \n-[yaml configuration](src/main/resources/zipkin-server-shared.yml) binds the following environment variables to spring properties:\n-\n-Variable | Property | Description\n---- | --- | ---\n-SELF_TRACING_ENABLED | zipkin.self-tracing.enabled | Set to true to enable self-tracing. Defaults to false\n-SELF_TRACING_SAMPLE_RATE`: Percentage of self-traces to retain, defaults to always sample (1.0).\n-SELF_TRACING_FLUSH_INTERVAL | zipkin.self-tracing.flush-interval | Interval in seconds to flush self-tracing data to storage. Defaults to 1\n+Here are the top-level configuration of Zipkin:\n+* `QUERY_PORT`: Listen port for the http api and web ui; Defaults to 9411\n+* `QUERY_ENABLED`: `false` disables the query api and UI assets. Search\n+may also be disabled for the storage backend if it is not needed;\n+Defaults to true\n+* `SEARCH_ENABLED`: `false` disables trace search requests on the storage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b6b40c75c16ccea38842efed1d383d7e957c809"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/6934e5053d842724297b8c0867eacf229f90b6ac", "committedDate": "2020-03-08T03:21:20Z", "message": "feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODAxOTkz", "url": "https://github.com/openzipkin/zipkin/pull/3012#pullrequestreview-370801993", "createdAt": "2020-03-08T03:21:51Z", "commit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODE3NTIw", "url": "https://github.com/openzipkin/zipkin/pull/3012#pullrequestreview-370817520", "createdAt": "2020-03-08T09:49:26Z", "commit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwOTo0OToyNlrOFzUOBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwOTo0OToyNlrOFzUOBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1Mjk2Nw==", "bodyText": "I would bold custom servers are not supported.", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389352967", "createdAt": "2020-03-08T09:49:26Z", "author": {"login": "jcchavezs"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -1,9 +1,12 @@\n # zipkin-server\n-zipkin-server is a [Spring Boot](http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/) application, packaged as an executable jar. You need JRE 8+ to start zipkin-server.\n+Zipkin Server is a Java 1.8+ service, packaged as an executable jar.\n \n-Span storage and collectors are configurable. By default, storage is\n-in-memory, the http collector (POST /api/v2/spans endpoint) is enabled,\n-and the server listens on port 9411.\n+Span storage and collectors are [configurable](#configuration). By default, storage is in-memory,\n+the http collector (POST /api/v2/spans endpoint) is enabled, and the server listens on port 9411.\n+\n+Zipkin Server is implemented with [Armeria](https://github.com/line/armeria) and uses [Spring Boot](http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/)\n+internally for configuration. It should not be considered a normal Spring Boot application: custom\n+servers are not supported.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODUzODg2", "url": "https://github.com/openzipkin/zipkin/pull/3012#pullrequestreview-370853886", "createdAt": "2020-03-08T19:57:51Z", "commit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxOTo1Nzo1MVrOFzXGGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxOTo1Nzo1MVrOFzXGGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwMDA4OA==", "bodyText": "nit: HTTP API and Web UI to be consistent with the next paragraph?", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389400088", "createdAt": "2020-03-08T19:57:51Z", "author": {"login": "jcchavezs"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -100,26 +118,50 @@ counter.zipkin_collector.spans_dropped.$transport | cumulative spans dropped; re\n gauge.zipkin_collector.message_spans.$transport | last count of spans in a message\n gauge.zipkin_collector.message_bytes.$transport | last count of bytes in a message\n \n-## Self-Tracing\n-Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n-who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n-0.001 (0.1% or 1 out of 1000).\n-\n-When Brave dependencies are in the classpath, and `zipkin.self-tracing.enabled=true`,\n-Zipkin will self-trace calls to the api.\n-\n-[yaml configuration](src/main/resources/zipkin-server-shared.yml) binds the following environment variables to spring properties:\n+## Configuration\n+We support ENV variable configuration, such as `STORAGE_TYPE=cassandra3`, as they are familiar to\n+administrators and easy to use in runtime environments such as Docker.\n \n-Variable | Property | Description\n---- | --- | ---\n-SELF_TRACING_ENABLED | zipkin.self-tracing.enabled | Set to true to enable self-tracing. Defaults to false\n-SELF_TRACING_SAMPLE_RATE`: Percentage of self-traces to retain, defaults to always sample (1.0).\n-SELF_TRACING_FLUSH_INTERVAL | zipkin.self-tracing.flush-interval | Interval in seconds to flush self-tracing data to storage. Defaults to 1\n+Here are the top-level configuration of Zipkin:\n+* `QUERY_PORT`: Listen port for the http api and web ui; Defaults to 9411", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODU0MDM0", "url": "https://github.com/openzipkin/zipkin/pull/3012#pullrequestreview-370854034", "createdAt": "2020-03-08T20:00:50Z", "commit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMDowMDo1MFrOFzXG9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMDowMDo1MFrOFzXG9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwMDMwOA==", "bodyText": "How about specifying what is the name of the service or how to find such traces?", "url": "https://github.com/openzipkin/zipkin/pull/3012#discussion_r389400308", "createdAt": "2020-03-08T20:00:50Z", "author": {"login": "jcchavezs"}, "path": "zipkin-server/README.md", "diffHunk": "@@ -459,6 +477,19 @@ $ COLLECTOR_GRPC_ENABLED=true java -jar zipkin.jar\n \n As this service is experimental, it is not recommended to run this in production environments.\n \n+## Self-Tracing\n+Self tracing exists to help troubleshoot performance of the zipkin-server. Production deployments\n+who enable self-tracing should lower the sample rate from 1.0 (100%) to a much smaller rate, like\n+0.001 (0.1% or 1 out of 1000).\n+\n+When `zipkin.self-tracing.enabled=true`, Zipkin will self-trace calls to the api.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6934e5053d842724297b8c0867eacf229f90b6ac"}, "originalPosition": 193}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a10aa1691e1deb5fcd94fb49707f8a8da167dd9", "author": {"user": null}, "url": "https://github.com/openzipkin/zipkin/commit/4a10aa1691e1deb5fcd94fb49707f8a8da167dd9", "committedDate": "2020-03-09T00:35:48Z", "message": "feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1603, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}