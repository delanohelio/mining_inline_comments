{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MjQ1MDY4", "number": 7471, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNToxODoxOFrODldqIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNToxODozOVrODldqsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjA5ODI1OnYy", "diffSide": "RIGHT", "path": "template-manager-tag/src/main/java/com/sequenceiq/cloudbreak/tag/DefaultCostTaggingService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNToxODoxOFrOFyXrcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjo0MDoyNlrOFybHXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM2MTA3Mg==", "bodyText": "request.getRequestTags() can be null", "url": "https://github.com/hortonworks/cloudbreak/pull/7471#discussion_r388361072", "createdAt": "2020-03-05T15:18:18Z", "author": {"login": "keyki"}, "path": "template-manager-tag/src/main/java/com/sequenceiq/cloudbreak/tag/DefaultCostTaggingService.java", "diffHunk": "@@ -57,14 +57,24 @@\n     public Map<String, String> mergeTags(CDPTagMergeRequest request) {\n         LOGGER.debug(\"About to merge tag(s)...\");\n         Map<String, String> result = new HashMap<>();\n-        result.putAll(request.getRequestTags());\n-        for (String key : request.getEnvironmentTags().keySet()) {\n-            addTagIfNotPresented(result, request, key);\n+        for (Map.Entry<String, String> entry : request.getRequestTags().entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07fd4c898a3d2111bbcba413edcb57ac69d6a47b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxNzM3NA==", "bodyText": "it can not!", "url": "https://github.com/hortonworks/cloudbreak/pull/7471#discussion_r388417374", "createdAt": "2020-03-05T16:40:26Z", "author": {"login": "doktoric"}, "path": "template-manager-tag/src/main/java/com/sequenceiq/cloudbreak/tag/DefaultCostTaggingService.java", "diffHunk": "@@ -57,14 +57,24 @@\n     public Map<String, String> mergeTags(CDPTagMergeRequest request) {\n         LOGGER.debug(\"About to merge tag(s)...\");\n         Map<String, String> result = new HashMap<>();\n-        result.putAll(request.getRequestTags());\n-        for (String key : request.getEnvironmentTags().keySet()) {\n-            addTagIfNotPresented(result, request, key);\n+        for (Map.Entry<String, String> entry : request.getRequestTags().entrySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM2MTA3Mg=="}, "originalCommit": {"oid": "07fd4c898a3d2111bbcba413edcb57ac69d6a47b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjA5OTcxOnYy", "diffSide": "RIGHT", "path": "template-manager-tag/src/main/java/com/sequenceiq/cloudbreak/tag/DefaultCostTaggingService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNToxODozOVrOFyXsWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjozOTozMFrOFybFCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM2MTMwNg==", "bodyText": "do we need isBlank and isEmpty?", "url": "https://github.com/hortonworks/cloudbreak/pull/7471#discussion_r388361306", "createdAt": "2020-03-05T15:18:39Z", "author": {"login": "keyki"}, "path": "template-manager-tag/src/main/java/com/sequenceiq/cloudbreak/tag/DefaultCostTaggingService.java", "diffHunk": "@@ -57,14 +57,24 @@\n     public Map<String, String> mergeTags(CDPTagMergeRequest request) {\n         LOGGER.debug(\"About to merge tag(s)...\");\n         Map<String, String> result = new HashMap<>();\n-        result.putAll(request.getRequestTags());\n-        for (String key : request.getEnvironmentTags().keySet()) {\n-            addTagIfNotPresented(result, request, key);\n+        for (Map.Entry<String, String> entry : request.getRequestTags().entrySet()) {\n+            if (!keyOrValueIsEmpty(entry.getKey(), entry.getValue())) {\n+                result.put(entry.getKey(), entry.getValue());\n+            }\n+        }\n+        for (Map.Entry<String, String> entry : request.getEnvironmentTags().entrySet()) {\n+            if (!keyOrValueIsEmpty(entry.getKey(), entry.getValue())) {\n+                addTagIfNotPresented(result, request, entry.getKey());\n+            }\n         }\n         LOGGER.debug(\"The following requested tag(s) will be applied prepared: {}\", result);\n         return result;\n     }\n \n+    private boolean keyOrValueIsEmpty(String key, String value) {\n+        return (key == null || key.isBlank() || key.isEmpty()) || (value == null || value.isBlank() || value.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07fd4c898a3d2111bbcba413edcb57ac69d6a47b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxNjc3Nw==", "bodyText": "yes", "url": "https://github.com/hortonworks/cloudbreak/pull/7471#discussion_r388416777", "createdAt": "2020-03-05T16:39:30Z", "author": {"login": "doktoric"}, "path": "template-manager-tag/src/main/java/com/sequenceiq/cloudbreak/tag/DefaultCostTaggingService.java", "diffHunk": "@@ -57,14 +57,24 @@\n     public Map<String, String> mergeTags(CDPTagMergeRequest request) {\n         LOGGER.debug(\"About to merge tag(s)...\");\n         Map<String, String> result = new HashMap<>();\n-        result.putAll(request.getRequestTags());\n-        for (String key : request.getEnvironmentTags().keySet()) {\n-            addTagIfNotPresented(result, request, key);\n+        for (Map.Entry<String, String> entry : request.getRequestTags().entrySet()) {\n+            if (!keyOrValueIsEmpty(entry.getKey(), entry.getValue())) {\n+                result.put(entry.getKey(), entry.getValue());\n+            }\n+        }\n+        for (Map.Entry<String, String> entry : request.getEnvironmentTags().entrySet()) {\n+            if (!keyOrValueIsEmpty(entry.getKey(), entry.getValue())) {\n+                addTagIfNotPresented(result, request, entry.getKey());\n+            }\n         }\n         LOGGER.debug(\"The following requested tag(s) will be applied prepared: {}\", result);\n         return result;\n     }\n \n+    private boolean keyOrValueIsEmpty(String key, String value) {\n+        return (key == null || key.isBlank() || key.isEmpty()) || (value == null || value.isBlank() || value.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM2MTMwNg=="}, "originalCommit": {"oid": "07fd4c898a3d2111bbcba413edcb57ac69d6a47b"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2725, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}