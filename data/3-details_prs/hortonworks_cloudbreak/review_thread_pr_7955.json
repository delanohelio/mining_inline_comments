{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMDY2MTQ0", "number": 7955, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOTowMTozNVrOD4ozQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOTowMjozM1rOD4ozlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzE1MzMxOnYy", "diffSide": "RIGHT", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOTowMTozNVrOGPhsTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNTozMDo0NVrOGPzIDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzgzNg==", "bodyText": "This is a complex method, I think we shall increase the test coverage", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#discussion_r418933836", "createdAt": "2020-05-02T09:01:35Z", "author": {"login": "akanto"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -124,54 +122,48 @@ private void updateConfigsInTemplate(CmTemplateProcessor templateProcessor, Map<\n         for (Map.Entry<String, Map<String, List<ApiClusterTemplateConfig>>> entry : newConfigsByRCG.entrySet()) {\n             String configGroupName = entry.getKey();\n             ApiClusterTemplateRoleConfigGroup configGroup = roleConfigGroupByName.get(configGroupName);\n+            ApiClusterTemplateService templateService = serviceByRCG.get(configGroupName);\n             Map<String, List<ApiClusterTemplateConfig>> configsByHostGroup = entry.getValue();\n             int groupCount = configsByHostGroup.size();\n-            switch (groupCount) {\n-                case 1:\n-                    templateProcessor.mergeRoleConfigs(configGroup, configsByHostGroup.values().iterator().next());\n-                    break;\n-                case 0:\n-                    // noop\n-                    break;\n-                default:\n-                    LOGGER.debug(\"Cloning config group {} into {} host groups: {}\", configGroupName, groupCount, configsByHostGroup.keySet());\n-\n-                    // \"clone\" config group for each host group\n-                    Map<String, ApiClusterTemplateRoleConfigGroup> clonesByHostGroup = configsByHostGroup.keySet().stream()\n-                            .map(hostGroupName -> Pair.of(hostGroupName, copyForHostGroup(configGroup, hostGroupName)))\n-                            .collect(toMap(Pair::getKey, Pair::getValue));\n-\n-                    // add host group-specific configs to clones\n-                    configsByHostGroup.forEach((hostGroupName, newConfigs) ->\n-                            templateProcessor.mergeRoleConfigs(clonesByHostGroup.get(hostGroupName), newConfigs));\n-\n-                    // remove original from service\n-                    ApiClusterTemplateService service = serviceByRCG.get(configGroupName);\n-                    service.getRoleConfigGroups().removeIf(group -> Objects.equals(group.getRefName(), configGroupName));\n-\n-                    // remove original from instantiator\n-                    if (instantiatorRoleConfigGroups != null) {\n-                        instantiatorRoleConfigGroups.removeIf(groupInfo -> Objects.equals(groupInfo.getRcgRefName(), configGroupName));\n-                    }\n+            if (groupCount == 1 || isSharedComponent(templateService.getServiceType(), configGroup.getRoleType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377e5a8741a1cd3cd24668c285c19509678817fc"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIxOTQ2OQ==", "bodyText": "This is a complex method, I think we shall increase the test coverage\n\nTest coverage is 91% in this class. I read other tests and the expression is well-tested.", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#discussion_r419219469", "createdAt": "2020-05-04T05:30:45Z", "author": {"login": "topolyai5"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -124,54 +122,48 @@ private void updateConfigsInTemplate(CmTemplateProcessor templateProcessor, Map<\n         for (Map.Entry<String, Map<String, List<ApiClusterTemplateConfig>>> entry : newConfigsByRCG.entrySet()) {\n             String configGroupName = entry.getKey();\n             ApiClusterTemplateRoleConfigGroup configGroup = roleConfigGroupByName.get(configGroupName);\n+            ApiClusterTemplateService templateService = serviceByRCG.get(configGroupName);\n             Map<String, List<ApiClusterTemplateConfig>> configsByHostGroup = entry.getValue();\n             int groupCount = configsByHostGroup.size();\n-            switch (groupCount) {\n-                case 1:\n-                    templateProcessor.mergeRoleConfigs(configGroup, configsByHostGroup.values().iterator().next());\n-                    break;\n-                case 0:\n-                    // noop\n-                    break;\n-                default:\n-                    LOGGER.debug(\"Cloning config group {} into {} host groups: {}\", configGroupName, groupCount, configsByHostGroup.keySet());\n-\n-                    // \"clone\" config group for each host group\n-                    Map<String, ApiClusterTemplateRoleConfigGroup> clonesByHostGroup = configsByHostGroup.keySet().stream()\n-                            .map(hostGroupName -> Pair.of(hostGroupName, copyForHostGroup(configGroup, hostGroupName)))\n-                            .collect(toMap(Pair::getKey, Pair::getValue));\n-\n-                    // add host group-specific configs to clones\n-                    configsByHostGroup.forEach((hostGroupName, newConfigs) ->\n-                            templateProcessor.mergeRoleConfigs(clonesByHostGroup.get(hostGroupName), newConfigs));\n-\n-                    // remove original from service\n-                    ApiClusterTemplateService service = serviceByRCG.get(configGroupName);\n-                    service.getRoleConfigGroups().removeIf(group -> Objects.equals(group.getRefName(), configGroupName));\n-\n-                    // remove original from instantiator\n-                    if (instantiatorRoleConfigGroups != null) {\n-                        instantiatorRoleConfigGroups.removeIf(groupInfo -> Objects.equals(groupInfo.getRcgRefName(), configGroupName));\n-                    }\n+            if (groupCount == 1 || isSharedComponent(templateService.getServiceType(), configGroup.getRoleType())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzgzNg=="}, "originalCommit": {"oid": "377e5a8741a1cd3cd24668c285c19509678817fc"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzE1NDE0OnYy", "diffSide": "RIGHT", "path": "template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOTowMjozM1rOGPhsrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNTozMjowMFrOGPzJAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzkzMw==", "bodyText": "I do not see such test which especially covers the ZK case", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#discussion_r418933933", "createdAt": "2020-05-02T09:02:33Z", "author": {"login": "akanto"}, "path": "template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessorTest.java", "diffHunk": "@@ -226,22 +226,25 @@ public void testGenerateConfigsWhenHdfsJournalNodeNotNull() {\n         setup(\"input/cb5660.bp\", Builder.builder().withHostgroupViews(Set.of(master1, master2, worker, compute, quorum)));\n \n         Map<String, Map<String, List<ApiClusterTemplateConfig>>> actual = underTest.generateConfigs(templateProcessor, templatePreparator);\n-        assertNull(actual.get(\"hdfs-JOURNALNODE-BASE\"));\n+        assertNotNull(actual.get(\"hdfs-JOURNALNODE-BASE\"));\n     }\n \n     @Test\n-    public void testGenerateConfigsWhenHdfsJournalNodeIsNotNull() {\n-        List<SharedComponent> sharedComponents = List.of();\n+    public void testProcessWhenSharedConfigThenAddVolumeConfig() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377e5a8741a1cd3cd24668c285c19509678817fc"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIxOTcxNA==", "bodyText": "done", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#discussion_r419219714", "createdAt": "2020-05-04T05:32:00Z", "author": {"login": "topolyai5"}, "path": "template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessorTest.java", "diffHunk": "@@ -226,22 +226,25 @@ public void testGenerateConfigsWhenHdfsJournalNodeNotNull() {\n         setup(\"input/cb5660.bp\", Builder.builder().withHostgroupViews(Set.of(master1, master2, worker, compute, quorum)));\n \n         Map<String, Map<String, List<ApiClusterTemplateConfig>>> actual = underTest.generateConfigs(templateProcessor, templatePreparator);\n-        assertNull(actual.get(\"hdfs-JOURNALNODE-BASE\"));\n+        assertNotNull(actual.get(\"hdfs-JOURNALNODE-BASE\"));\n     }\n \n     @Test\n-    public void testGenerateConfigsWhenHdfsJournalNodeIsNotNull() {\n-        List<SharedComponent> sharedComponents = List.of();\n+    public void testProcessWhenSharedConfigThenAddVolumeConfig() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzkzMw=="}, "originalCommit": {"oid": "377e5a8741a1cd3cd24668c285c19509678817fc"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2414, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}