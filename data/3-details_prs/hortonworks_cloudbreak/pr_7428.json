{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNTA5OTI5", "number": 7428, "title": "CDPCP-1549. Fix issue where user sync failure is not recorded", "bodyText": "This PR contains two commits to address the behavior exhibited in CDPCP-1549.\nCDPCP-1549. Run user sync internals as internal user\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\nCDPCP-1549. Catch and fail user sync operation\nThere was a gap where exceptions could cause user sync to fail but\nnot be recorded in the Operation database. This would prevent another\nuser sync from being accepted even though the current user sync was\nnot actually running. Eventually, the operation would be TIMEDOUT,\nallowing another user sync to be accepted.\nThis commit closes the gap by catching all RuntimeExceptions and\nrecording the failure in the Operation database.\nTesting: manual\n\ncreated a machine user w/o write rights. verified that user sync was accepted but failed w/o updating the operation to FAILED.\nAdded change to catch and fail user sync. verified that user sync was accepted then failed\nAdded change to run user sync internals as internal user. verified that user sync was accepted and runs", "createdAt": "2020-02-28T17:35:29Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7428", "merged": true, "mergeCommit": {"oid": "c73fb1baf9a25e70313d3ba54d229a5ca09317af"}, "closed": true, "closedAt": "2020-03-06T14:22:20Z", "author": {"login": "handavid"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcI3zQ9gFqTM2NjcyNTU3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLA4t8AFqTM3MDM1NTAwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzI1NTcy", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#pullrequestreview-366725572", "createdAt": "2020-02-28T22:35:33Z", "commit": {"oid": "2a988ded60fe21f5539ef1fe278ea9cc22dbc576"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMjozNTozM1rOFwEw6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMjozNjowOVrOFwExqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1NDAyNA==", "bodyText": "I would catch Exceeption", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#discussion_r385954024", "createdAt": "2020-02-28T22:35:33Z", "author": {"login": "giladwolff"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -117,16 +117,22 @@ public Operation synchronizeUsers(String accountId, String actorCrn, Set<String>\n         LOGGER.info(\"Starting operation [{}] with status [{}]\", operation.getOperationId(), operation.getStatus());\n \n         if (operation.getStatus() == OperationState.RUNNING) {\n-            boolean fullSync = userCrnFilter.isEmpty() && machineUserCrnFilter.isEmpty();\n-            if (fullSync) {\n-                long currentTime = Instant.now().toEpochMilli();\n-                stacks.forEach(stack -> {\n-                    UserSyncStatus userSyncStatus = userSyncStatusService.getOrCreateForStack(stack);\n-                    userSyncStatus.setLastFullSyncStartTime(currentTime);\n-                    userSyncStatusService.save(userSyncStatus);\n-                });\n+            try {\n+                boolean fullSync = userCrnFilter.isEmpty() && machineUserCrnFilter.isEmpty();\n+                if (fullSync) {\n+                    long currentTime = Instant.now().toEpochMilli();\n+                    stacks.forEach(stack -> {\n+                        UserSyncStatus userSyncStatus = userSyncStatusService.getOrCreateForStack(stack);\n+                        userSyncStatus.setLastFullSyncStartTime(currentTime);\n+                        userSyncStatusService.save(userSyncStatus);\n+                    });\n+                }\n+                asyncSynchronizeUsers(operation.getOperationId(), accountId, actorCrn, stacks, userCrnFilter, machineUserCrnFilter, fullSync);\n+            } catch (RuntimeException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a988ded60fe21f5539ef1fe278ea9cc22dbc576"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1NDIxOA==", "bodyText": "Why not Exception?", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#discussion_r385954218", "createdAt": "2020-02-28T22:36:09Z", "author": {"login": "giladwolff"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -184,7 +190,7 @@ private void internalSynchronizeUsers(String operationId, String accountId, Stri\n             operationService.completeOperation(accountId, operationId, success, failure);\n         } catch (RuntimeException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a988ded60fe21f5539ef1fe278ea9cc22dbc576"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b73cdb5ed394e1ed09fdded500dc5433ecf30138", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/b73cdb5ed394e1ed09fdded500dc5433ecf30138", "committedDate": "2020-02-28T17:20:02Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser."}, "afterCommit": {"oid": "3101f715285c912b8c3db51d219bc67019749534", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3101f715285c912b8c3db51d219bc67019749534", "committedDate": "2020-03-02T21:15:22Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\n\nSince UserSyncService internals use an AsyncTaskExecutor, the UserSyncConfig\nhas been updated to add a decorator for propagating the user crn to the\nsubmitted jobs."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODUwOTYx", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#pullrequestreview-367850961", "createdAt": "2020-03-03T10:12:44Z", "commit": {"oid": "3101f715285c912b8c3db51d219bc67019749534"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDoxMjo0NVrOFw_nWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDoxMjo0NVrOFw_nWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkxODIzMg==", "bodyText": "this looks almost the same like in internalSynchronizeUsers, could you move these into a separate method?", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#discussion_r386918232", "createdAt": "2020-03-03T10:12:45Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -117,22 +121,37 @@ public Operation synchronizeUsers(String accountId, String actorCrn, Set<String>\n         LOGGER.info(\"Starting operation [{}] with status [{}]\", operation.getOperationId(), operation.getStatus());\n \n         if (operation.getStatus() == OperationState.RUNNING) {\n-            boolean fullSync = userCrnFilter.isEmpty() && machineUserCrnFilter.isEmpty();\n-            if (fullSync) {\n-                long currentTime = Instant.now().toEpochMilli();\n-                stacks.forEach(stack -> {\n-                    UserSyncStatus userSyncStatus = userSyncStatusService.getOrCreateForStack(stack);\n-                    userSyncStatus.setLastFullSyncStartTime(currentTime);\n-                    userSyncStatusService.save(userSyncStatus);\n+            try {\n+                ThreadBasedUserCrnProvider.doAs(INTERNAL_USER_CRN, () -> {\n+                    boolean fullSync = userCrnFilter.isEmpty() && machineUserCrnFilter.isEmpty();\n+                    if (fullSync) {\n+                        long currentTime = Instant.now().toEpochMilli();\n+                        stacks.forEach(stack -> {\n+                            UserSyncStatus userSyncStatus = userSyncStatusService.getOrCreateForStack(stack);\n+                            userSyncStatus.setLastFullSyncStartTime(currentTime);\n+                            userSyncStatusService.save(userSyncStatus);\n+                        });\n+                    }\n+                    asyncSynchronizeUsers(operation.getOperationId(), accountId, actorCrn, stacks, userCrnFilter, machineUserCrnFilter, fullSync);\n                 });\n+            } catch (Throwable t) {\n+                try {\n+                    LOGGER.error(\"Failed to start operation [{}]. Attempting to mark failure in database then re-throwing\", operation, t);\n+                    operationService.failOperation(accountId, operation.getOperationId(),\n+                            \"Failed to start operation: \" + t.getLocalizedMessage());\n+                } catch (Exception e) {\n+                    LOGGER.error(\"Failed to mark operation [{}] as failed in database.\", operation, e);\n+                } finally {\n+                    throw t;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3101f715285c912b8c3db51d219bc67019749534"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MTI0NTM5", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#pullrequestreview-368124539", "createdAt": "2020-03-03T16:21:57Z", "commit": {"oid": "3101f715285c912b8c3db51d219bc67019749534"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjoyMTo1OFrOFxM3Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjoyODo0MlrOFxNL9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzNTMxNQ==", "bodyText": "super nit: mind making it immutablelist?", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#discussion_r387135315", "createdAt": "2020-03-03T16:21:58Z", "author": {"login": "giladwolff"}, "path": "cloud-common/src/main/java/com/sequenceiq/cloudbreak/concurrent/CompositeTaskDecorator.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.sequenceiq.cloudbreak.concurrent;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import java.util.List;\n+\n+import org.springframework.core.task.TaskDecorator;\n+\n+/**\n+ * Task decorator that composes multiple task decorators.\n+ */\n+public class CompositeTaskDecorator implements TaskDecorator {\n+\n+    private final List<TaskDecorator> decorators;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3101f715285c912b8c3db51d219bc67019749534"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzNjExMw==", "bodyText": "can runnable be null? assert?", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#discussion_r387136113", "createdAt": "2020-03-03T16:22:56Z", "author": {"login": "giladwolff"}, "path": "cloud-common/src/main/java/com/sequenceiq/cloudbreak/concurrent/CompositeTaskDecorator.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.sequenceiq.cloudbreak.concurrent;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import java.util.List;\n+\n+import org.springframework.core.task.TaskDecorator;\n+\n+/**\n+ * Task decorator that composes multiple task decorators.\n+ */\n+public class CompositeTaskDecorator implements TaskDecorator {\n+\n+    private final List<TaskDecorator> decorators;\n+\n+    /**\n+     * Create a CompositeTaskDecorator from the list of task decorators.\n+     *\n+     * @param decorators a list of task decorators to apply, from innermost to outermost.\n+     */\n+    public CompositeTaskDecorator(List<TaskDecorator> decorators) {\n+        requireNonNull(decorators, \"decorators is null\");\n+        this.decorators = List.copyOf(decorators);\n+    }\n+\n+    @Override\n+    public Runnable decorate(Runnable runnable) {\n+        Runnable decoratedRunnable = runnable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3101f715285c912b8c3db51d219bc67019749534"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE0MDU5Nw==", "bodyText": "First, user crn should probably renamed to actor CRN. Secondly, this looks a bit weird to me. why does the ThreadBaseUserCrnProvider has both a getUserCrn, and doAs interface that gets the user crn? What does doAs do actually? What happens at the end of doAs? Do you need to reset something?\nWe have examples in our code base in thunderhead git where we have thread local contexts that we set. We basically have a list of them per context. These contexts expose attach/detach operation and keep track of the previous context that was attached. So maybe you want something similar? Or maybe this is similar but the terms are different?", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#discussion_r387140597", "createdAt": "2020-03-03T16:28:42Z", "author": {"login": "giladwolff"}, "path": "cloud-common/src/main/java/com/sequenceiq/cloudbreak/concurrent/UserCrnTaskDecorator.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.sequenceiq.cloudbreak.concurrent;\n+\n+import org.springframework.core.task.TaskDecorator;\n+\n+import com.sequenceiq.cloudbreak.auth.ThreadBasedUserCrnProvider;\n+\n+/**\n+ * Task decorator that propagates the user CRN from the caller to\n+ * the running task.\n+ */\n+public class UserCrnTaskDecorator implements TaskDecorator {\n+    @Override\n+    public Runnable decorate(Runnable runnable) {\n+        String userCrn = ThreadBasedUserCrnProvider.getUserCrn();\n+        return () -> {\n+            ThreadBasedUserCrnProvider.doAs(userCrn, runnable);\n+        };\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3101f715285c912b8c3db51d219bc67019749534"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3101f715285c912b8c3db51d219bc67019749534", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3101f715285c912b8c3db51d219bc67019749534", "committedDate": "2020-03-02T21:15:22Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\n\nSince UserSyncService internals use an AsyncTaskExecutor, the UserSyncConfig\nhas been updated to add a decorator for propagating the user crn to the\nsubmitted jobs."}, "afterCommit": {"oid": "37d542e62669bb3ba8336bee21c117eccd1c904c", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/37d542e62669bb3ba8336bee21c117eccd1c904c", "committedDate": "2020-03-03T17:36:08Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\n\nSince UserSyncService internals use an AsyncTaskExecutor, the UserSyncConfig\nhas been updated to add a decorator for propagating the user crn to the\nsubmitted jobs."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37d542e62669bb3ba8336bee21c117eccd1c904c", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/37d542e62669bb3ba8336bee21c117eccd1c904c", "committedDate": "2020-03-03T17:36:08Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\n\nSince UserSyncService internals use an AsyncTaskExecutor, the UserSyncConfig\nhas been updated to add a decorator for propagating the user crn to the\nsubmitted jobs."}, "afterCommit": {"oid": "6e6b85215f53cd793d7e738f2859342333a53a3e", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/6e6b85215f53cd793d7e738f2859342333a53a3e", "committedDate": "2020-03-03T18:31:40Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\n\nSince UserSyncService internals use an AsyncTaskExecutor, the UserSyncConfig\nhas been updated to add a decorator for propagating the user crn to the\nsubmitted jobs."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e6b85215f53cd793d7e738f2859342333a53a3e", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/6e6b85215f53cd793d7e738f2859342333a53a3e", "committedDate": "2020-03-03T18:31:40Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\n\nSince UserSyncService internals use an AsyncTaskExecutor, the UserSyncConfig\nhas been updated to add a decorator for propagating the user crn to the\nsubmitted jobs."}, "afterCommit": {"oid": "ac45d8c6c401ee90ebeb6f8199cd7591c196411e", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ac45d8c6c401ee90ebeb6f8199cd7591c196411e", "committedDate": "2020-03-03T18:37:30Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\n\nSince UserSyncService internals use an AsyncTaskExecutor, the UserSyncConfig\nhas been updated to add a decorator for propagating the user crn to the\nsubmitted jobs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53df3682afeebc5803a4f98a7050368534f1c775", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/53df3682afeebc5803a4f98a7050368534f1c775", "committedDate": "2020-03-04T16:50:05Z", "message": "CDPCP-1549. Catch and fail user sync operation\n\nThere was a gap where exceptions could cause user sync to fail but\nnot be recorded in the Operation database. This would prevent another\nuser sync from being accepted even though the current user sync was\nnot actually running. Eventually, the operation would be TIMEDOUT,\nallowing another user sync to be accepted.\n\nThis commit closes the gap by catching all RuntimeExceptions and\nrecording the failure in the Operation database."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac4d8f16f6d26cf6b777e8b1d216487bbc7db886", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ac4d8f16f6d26cf6b777e8b1d216487bbc7db886", "committedDate": "2020-03-04T16:50:05Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\n\nSince UserSyncService internals use an AsyncTaskExecutor, the UserSyncConfig\nhas been updated to add a decorator for propagating the user crn to the\nsubmitted jobs."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac45d8c6c401ee90ebeb6f8199cd7591c196411e", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ac45d8c6c401ee90ebeb6f8199cd7591c196411e", "committedDate": "2020-03-03T18:37:30Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\n\nSince UserSyncService internals use an AsyncTaskExecutor, the UserSyncConfig\nhas been updated to add a decorator for propagating the user crn to the\nsubmitted jobs."}, "afterCommit": {"oid": "ac4d8f16f6d26cf6b777e8b1d216487bbc7db886", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ac4d8f16f6d26cf6b777e8b1d216487bbc7db886", "committedDate": "2020-03-04T16:50:05Z", "message": "CDPCP-1549. Run user sync internals as internal user\n\nAn authorization mismatch between the Operation db and the UserSyncStatus\ndb resulted in a bug where a user sync operation can be accepted, but\nwill fail when saving the user sync status. This commit changes the\nauthorization behavior so that authoriation is only performed on acceptance\nof the sync operation. All the user sync internals are run as the internal\nuser.\n\nSince UserSyncService internals use an AsyncTaskExecutor, the UserSyncConfig\nhas been updated to add a decorator for propagating the user crn to the\nsubmitted jobs."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MzU0NTA1", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#pullrequestreview-369354505", "createdAt": "2020-03-05T07:54:49Z", "commit": {"oid": "ac4d8f16f6d26cf6b777e8b1d216487bbc7db886"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzo1NDo0OVrOFyJW6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzo1NDo0OVrOFyJW6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEyNjQ0Mw==", "bodyText": "why is it IAM and not FREEIPA as this service is not IAM?", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#discussion_r388126443", "createdAt": "2020-03-05T07:54:49Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -67,6 +69,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(UserSyncService.class);\n \n+    private static final String INTERNAL_USER_CRN = new InternalCrnBuilder(Crn.Service.IAM).getInternalCrnForServiceAsString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac4d8f16f6d26cf6b777e8b1d216487bbc7db886"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cacc52ff6083b04435bbd21bad747c4a148fd993", "author": {"user": {"login": "handavid", "name": "David Han"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/cacc52ff6083b04435bbd21bad747c4a148fd993", "committedDate": "2020-03-05T13:32:55Z", "message": "CDPCP-1549. Reconcile usersyncstatus permissions with operation permissions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzU1MDA1", "url": "https://github.com/hortonworks/cloudbreak/pull/7428#pullrequestreview-370355005", "createdAt": "2020-03-06T14:21:12Z", "commit": {"oid": "cacc52ff6083b04435bbd21bad747c4a148fd993"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2628, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}