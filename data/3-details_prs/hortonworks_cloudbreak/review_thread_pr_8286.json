{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0ODIxNjAw", "number": 8286, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTo1MToyNlrOEFtYJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDozMToyMFrOEF4QVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDIxNzk2OnYy", "diffSide": "RIGHT", "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/endpoint/SdxEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTo1MToyNlrOGkD_gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTo1MToyNlrOGkD_gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2NzMyOA==", "bodyText": "Is the \"name\" in this context the Data Lake CRN?", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440467328", "createdAt": "2020-06-15T21:51:26Z", "author": {"login": "brycederriso"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/endpoint/SdxEndpoint.java", "diffHunk": "@@ -165,4 +169,27 @@ SdxClusterResponse create(@ValidStackNameFormat @ValidStackNameLength @PathParam\n     @ApiOperation(value = \"list advertised datalake versions\", produces = MediaType.APPLICATION_JSON, nickname = \"advertisedruntimes\")\n     List<AdvertisedRuntime> advertisedRuntimes();\n \n+    @POST\n+    @Path(\"{name}/backupDatabase\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = \"backup the database backing datalake \", produces = MediaType.APPLICATION_JSON, nickname = \"backupDatabase\")\n+    SdxDatabaseBackupResponse backupDatabaseByName(@PathParam(\"name\") String name, @QueryParam(\"backupId\") String backupId, @QueryParam(\"backupLocation\") String backupLocation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTg2MTcwOnYy", "diffSide": "RIGHT", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/stacks/StackV4Endpoint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwOTo1MToyM1rOGkT6BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjo1NjoyMVrOGkZ-Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyODA2OQ==", "bodyText": "backupId is the UUID or the name of the backup? I assume \"name\" parameter is the stack's name and was expecting a \"backupName\" param here.\nOr is this id generated by the DR Service?", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440728069", "createdAt": "2020-06-16T09:51:23Z", "author": {"login": "pdarvasi"}, "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/stacks/StackV4Endpoint.java", "diffHunk": "@@ -269,4 +273,17 @@ FlowIdentifier setClusterMaintenanceMode(@PathParam(\"workspaceId\") Long workspac\n     @ApiOperation(value = UPDATE_SALT, nickname = \"updateSaltByName\")\n     FlowIdentifier updateSaltByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name);\n \n+    @POST\n+    @Path(\"{name}/database_backup\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = DATABASE_BACKUP, nickname = \"databaseBackup\")\n+    BackupV4Response backupDatabaseByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name,\n+            @QueryParam(\"backupLocation\") String backupLocation, @QueryParam(\"backupId\") String backupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgyNzQ1OA==", "bodyText": "backupId is the UUID for the backup. It is the Id generated by datalake-dr service. Yes, the name is the stack name. There is no use for backup name here.", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440827458", "createdAt": "2020-06-16T12:56:21Z", "author": {"login": "kkalvagadda1"}, "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/stacks/StackV4Endpoint.java", "diffHunk": "@@ -269,4 +273,17 @@ FlowIdentifier setClusterMaintenanceMode(@PathParam(\"workspaceId\") Long workspac\n     @ApiOperation(value = UPDATE_SALT, nickname = \"updateSaltByName\")\n     FlowIdentifier updateSaltByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name);\n \n+    @POST\n+    @Path(\"{name}/database_backup\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = DATABASE_BACKUP, nickname = \"databaseBackup\")\n+    BackupV4Response backupDatabaseByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name,\n+            @QueryParam(\"backupLocation\") String backupLocation, @QueryParam(\"backupId\") String backupId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyODA2OQ=="}, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTk0MTc5OnYy", "diffSide": "RIGHT", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/stacks/StackV4Endpoint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDoxMzo0NlrOGkUsXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoxOTo1MlrOGka6PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0MDk1OA==", "bodyText": "the same here.. is it uuid or name?", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440740958", "createdAt": "2020-06-16T10:13:46Z", "author": {"login": "pdarvasi"}, "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/stacks/StackV4Endpoint.java", "diffHunk": "@@ -269,4 +273,17 @@ FlowIdentifier setClusterMaintenanceMode(@PathParam(\"workspaceId\") Long workspac\n     @ApiOperation(value = UPDATE_SALT, nickname = \"updateSaltByName\")\n     FlowIdentifier updateSaltByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name);\n \n+    @POST\n+    @Path(\"{name}/database_backup\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = DATABASE_BACKUP, nickname = \"databaseBackup\")\n+    BackupV4Response backupDatabaseByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name,\n+            @QueryParam(\"backupLocation\") String backupLocation, @QueryParam(\"backupId\") String backupId);\n+\n+    @POST\n+    @Path(\"{name}/database_restore\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = DATABASE_RESTORE, nickname = \"databaseRestore\")\n+    RestoreV4Response restoreDatabaseByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name,\n+            @QueryParam(\"backupLocation\") String backupLocation, @QueryParam(\"backupId\") String backupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0MjgxMw==", "bodyText": "backupId is the UUID for the backup. It is the Id generated by datalake-dr service. Yes, the name is the stack name. There is no use for backup name here.", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440842813", "createdAt": "2020-06-16T13:19:52Z", "author": {"login": "kkalvagadda1"}, "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/stacks/StackV4Endpoint.java", "diffHunk": "@@ -269,4 +273,17 @@ FlowIdentifier setClusterMaintenanceMode(@PathParam(\"workspaceId\") Long workspac\n     @ApiOperation(value = UPDATE_SALT, nickname = \"updateSaltByName\")\n     FlowIdentifier updateSaltByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name);\n \n+    @POST\n+    @Path(\"{name}/database_backup\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = DATABASE_BACKUP, nickname = \"databaseBackup\")\n+    BackupV4Response backupDatabaseByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name,\n+            @QueryParam(\"backupLocation\") String backupLocation, @QueryParam(\"backupId\") String backupId);\n+\n+    @POST\n+    @Path(\"{name}/database_restore\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = DATABASE_RESTORE, nickname = \"databaseRestore\")\n+    RestoreV4Response restoreDatabaseByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name,\n+            @QueryParam(\"backupLocation\") String backupLocation, @QueryParam(\"backupId\") String backupId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0MDk1OA=="}, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTk3MDUzOnYy", "diffSide": "RIGHT", "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/endpoint/SdxEndpoint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDoyMTo1OFrOGkU-Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoyMDowOVrOGka69Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0NTU1MA==", "bodyText": "the same here.. is it uuid or name?", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440745550", "createdAt": "2020-06-16T10:21:58Z", "author": {"login": "pdarvasi"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/endpoint/SdxEndpoint.java", "diffHunk": "@@ -165,4 +169,27 @@ SdxClusterResponse create(@ValidStackNameFormat @ValidStackNameLength @PathParam\n     @ApiOperation(value = \"list advertised datalake versions\", produces = MediaType.APPLICATION_JSON, nickname = \"advertisedruntimes\")\n     List<AdvertisedRuntime> advertisedRuntimes();\n \n+    @POST\n+    @Path(\"{name}/backupDatabase\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = \"backup the database backing datalake \", produces = MediaType.APPLICATION_JSON, nickname = \"backupDatabase\")\n+    SdxDatabaseBackupResponse backupDatabaseByName(@PathParam(\"name\") String name, @QueryParam(\"backupId\") String backupId, @QueryParam(\"backupLocation\") String backupLocation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0Mjk5Nw==", "bodyText": "backupId is the UUID for the backup. It is the Id generated by datalake-dr service. Yes, the name is the stack name. There is no use for backup name here.", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440842997", "createdAt": "2020-06-16T13:20:09Z", "author": {"login": "kkalvagadda1"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/endpoint/SdxEndpoint.java", "diffHunk": "@@ -165,4 +169,27 @@ SdxClusterResponse create(@ValidStackNameFormat @ValidStackNameLength @PathParam\n     @ApiOperation(value = \"list advertised datalake versions\", produces = MediaType.APPLICATION_JSON, nickname = \"advertisedruntimes\")\n     List<AdvertisedRuntime> advertisedRuntimes();\n \n+    @POST\n+    @Path(\"{name}/backupDatabase\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = \"backup the database backing datalake \", produces = MediaType.APPLICATION_JSON, nickname = \"backupDatabase\")\n+    SdxDatabaseBackupResponse backupDatabaseByName(@PathParam(\"name\") String name, @QueryParam(\"backupId\") String backupId, @QueryParam(\"backupLocation\") String backupLocation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0NTU1MA=="}, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTk4NzQ3OnYy", "diffSide": "RIGHT", "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/model/SdxDatabaseBackupStatusResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDoyNzoyMVrOGkVJPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoyMDowMlrOGka6tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0ODM0OQ==", "bodyText": "what is the value set? If it is fixed then I would prefer using an enum, if not then it is fine.", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440748349", "createdAt": "2020-06-16T10:27:21Z", "author": {"login": "pdarvasi"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/model/SdxDatabaseBackupStatusResponse.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.sequenceiq.sdx.api.model;\n+\n+public class SdxDatabaseBackupStatusResponse {\n+    private String status;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0MjkzMg==", "bodyText": "backupId is the UUID for the backup. It is the Id generated by datalake-dr service. Yes, the name is the stack name. There is no use for backup name here.", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440842932", "createdAt": "2020-06-16T13:20:02Z", "author": {"login": "kkalvagadda1"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/model/SdxDatabaseBackupStatusResponse.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.sequenceiq.sdx.api.model;\n+\n+public class SdxDatabaseBackupStatusResponse {\n+    private String status;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0ODM0OQ=="}, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTk4Nzg4OnYy", "diffSide": "RIGHT", "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/model/SdxDatabaseRestoreStatusResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDoyNzoyOVrOGkVJfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoyMDoyOVrOGka7zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0ODQxNQ==", "bodyText": "what is the value set? If it is fixed then I would prefer using an enum, if not then it is fine.", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440748415", "createdAt": "2020-06-16T10:27:29Z", "author": {"login": "pdarvasi"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/model/SdxDatabaseRestoreStatusResponse.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.sequenceiq.sdx.api.model;\n+\n+public class SdxDatabaseRestoreStatusResponse {\n+    private String status;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0MzIxMg==", "bodyText": "done", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440843212", "createdAt": "2020-06-16T13:20:29Z", "author": {"login": "kkalvagadda1"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/model/SdxDatabaseRestoreStatusResponse.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.sequenceiq.sdx.api.model;\n+\n+public class SdxDatabaseRestoreStatusResponse {\n+    private String status;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0ODQxNQ=="}, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjAwMDIzOnYy", "diffSide": "RIGHT", "path": "datalake/src/main/java/com/sequenceiq/datalake/controller/sdx/SdxController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDozMToyMFrOGkVRaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoyMDoxOVrOGka7ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc1MDQ0MQ==", "bodyText": "Pls. introduce new AuthorizationResourceAction regarding backup/restore", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440750441", "createdAt": "2020-06-16T10:31:20Z", "author": {"login": "pdarvasi"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/controller/sdx/SdxController.java", "diffHunk": "@@ -239,4 +243,27 @@ public FlowIdentifier stopByCrn(@ResourceCrn String crn) {\n         return cdpConfigService.getAdvertisedRuntimes();\n     }\n \n+    @Override\n+    @CheckPermissionByAccount(action = AuthorizationResourceAction.DATALAKE_READ)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0MzEwOA==", "bodyText": "done", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440843108", "createdAt": "2020-06-16T13:20:19Z", "author": {"login": "kkalvagadda1"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/controller/sdx/SdxController.java", "diffHunk": "@@ -239,4 +243,27 @@ public FlowIdentifier stopByCrn(@ResourceCrn String crn) {\n         return cdpConfigService.getAdvertisedRuntimes();\n     }\n \n+    @Override\n+    @CheckPermissionByAccount(action = AuthorizationResourceAction.DATALAKE_READ)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc1MDQ0MQ=="}, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3221, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}