{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5ODQxMzQw", "number": 9650, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDo0MzowMFrOFFhRRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0NTozNVrOFFsXUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzMyMjkyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDo0MzowMFrOIGEbxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo1MzoxOFrOIGVfyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNTAxMw==", "bodyText": "this doesn't seems to be a good long term solution. I would suggest to fetch the gateways' hostnames/fqdns and filter in them instead of the magic gateway string", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543235013", "createdAt": "2020-12-15T10:43:00Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java", "diffHunk": "@@ -600,8 +601,13 @@ private void saveGatewayPillar(GatewayConfig gatewayConfig, Cluster cluster,\n \n         ExposedService rangerService = exposedServiceCollector.getRangerService();\n         List<String> rangerLocations = serviceLocations.get(rangerService.getServiceName());\n+\n         if (!CollectionUtils.isEmpty(rangerLocations)) {\n-            serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            if (SdxClusterShape.LIGHT_DUTY.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            } else if (SdxClusterShape.MEDIUM_DUTY_HA.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), rangerLocations.stream().filter(s -> s.contains(\"gateway\")).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc426dff5988d3c06f8150b2572cf742d70722f5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4ODQ5Mg==", "bodyText": "The gateways are called gateway in Medium duty.  But I can change it to that instead.", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543488492", "createdAt": "2020-12-15T16:21:31Z", "author": {"login": "frozenwizard"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java", "diffHunk": "@@ -600,8 +601,13 @@ private void saveGatewayPillar(GatewayConfig gatewayConfig, Cluster cluster,\n \n         ExposedService rangerService = exposedServiceCollector.getRangerService();\n         List<String> rangerLocations = serviceLocations.get(rangerService.getServiceName());\n+\n         if (!CollectionUtils.isEmpty(rangerLocations)) {\n-            serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            if (SdxClusterShape.LIGHT_DUTY.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            } else if (SdxClusterShape.MEDIUM_DUTY_HA.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), rangerLocations.stream().filter(s -> s.contains(\"gateway\")).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNTAxMw=="}, "originalCommit": {"oid": "cc426dff5988d3c06f8150b2572cf742d70722f5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUxNDU2OA==", "bodyText": "I think you can filter on stack.getPrimaryGatewayInstance().getInstanceGroup().getGroupName(). For medium duty the group name should be \"gateway\", and for light duty it would be \"master\".", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543514568", "createdAt": "2020-12-15T16:53:18Z", "author": {"login": "hreeve-cloudera"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java", "diffHunk": "@@ -600,8 +601,13 @@ private void saveGatewayPillar(GatewayConfig gatewayConfig, Cluster cluster,\n \n         ExposedService rangerService = exposedServiceCollector.getRangerService();\n         List<String> rangerLocations = serviceLocations.get(rangerService.getServiceName());\n+\n         if (!CollectionUtils.isEmpty(rangerLocations)) {\n-            serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            if (SdxClusterShape.LIGHT_DUTY.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            } else if (SdxClusterShape.MEDIUM_DUTY_HA.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), rangerLocations.stream().filter(s -> s.contains(\"gateway\")).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNTAxMw=="}, "originalCommit": {"oid": "cc426dff5988d3c06f8150b2572cf742d70722f5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzMzMzM5OnYy", "diffSide": "RIGHT", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/common/SdxClusterShape.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDo0NToxNVrOIGEh2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDo0NToxNVrOIGEh2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNjU3MA==", "bodyText": "as this must match with the other SdxClusterShape it must be ensured via unit tests", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543236570", "createdAt": "2020-12-15T10:45:15Z", "author": {"login": "lacikaaa"}, "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/common/SdxClusterShape.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.sequenceiq.cloudbreak.api.endpoint.v4.common;\n+\n+public enum SdxClusterShape {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc426dff5988d3c06f8150b2572cf742d70722f5"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzM2MjIzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDo1MToyNlrOIGEyhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzoyNzozOFrOIHFPGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI0MDgzOQ==", "bodyText": "is it possible to have multiple gateway node for LIGHT_DUTY? I mean do we need this if-else at all? couldn't be it like all gateway node has ranger and LIGHT_DUTY has only one GW while MEDIUM has multiple and the result would be the same. In this case we won't need the cluster shape on CB side", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543240839", "createdAt": "2020-12-15T10:51:26Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java", "diffHunk": "@@ -600,8 +601,13 @@ private void saveGatewayPillar(GatewayConfig gatewayConfig, Cluster cluster,\n \n         ExposedService rangerService = exposedServiceCollector.getRangerService();\n         List<String> rangerLocations = serviceLocations.get(rangerService.getServiceName());\n+\n         if (!CollectionUtils.isEmpty(rangerLocations)) {\n-            serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            if (SdxClusterShape.LIGHT_DUTY.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            } else if (SdxClusterShape.MEDIUM_DUTY_HA.equals(cluster.getStack().getSdxClusterShape())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc426dff5988d3c06f8150b2572cf742d70722f5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MDkzMQ==", "bodyText": "No, medium has multiple nodes called gateway, light duty has none.", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543470931", "createdAt": "2020-12-15T15:59:46Z", "author": {"login": "frozenwizard"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java", "diffHunk": "@@ -600,8 +601,13 @@ private void saveGatewayPillar(GatewayConfig gatewayConfig, Cluster cluster,\n \n         ExposedService rangerService = exposedServiceCollector.getRangerService();\n         List<String> rangerLocations = serviceLocations.get(rangerService.getServiceName());\n+\n         if (!CollectionUtils.isEmpty(rangerLocations)) {\n-            serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            if (SdxClusterShape.LIGHT_DUTY.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            } else if (SdxClusterShape.MEDIUM_DUTY_HA.equals(cluster.getStack().getSdxClusterShape())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI0MDgzOQ=="}, "originalCommit": {"oid": "cc426dff5988d3c06f8150b2572cf742d70722f5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI5NjczMA==", "bodyText": "but in case of LIGHT_DUTY the master is GATEWAY type, while in case of MEDIUM_DUTY_HA not the master is the gateway. We could depend on that information and select those FQDNs. Stack has a method: getGatewayInstanceMetadata which could be used to get all the gateway instances.", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r544296730", "createdAt": "2020-12-16T13:27:38Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java", "diffHunk": "@@ -600,8 +601,13 @@ private void saveGatewayPillar(GatewayConfig gatewayConfig, Cluster cluster,\n \n         ExposedService rangerService = exposedServiceCollector.getRangerService();\n         List<String> rangerLocations = serviceLocations.get(rangerService.getServiceName());\n+\n         if (!CollectionUtils.isEmpty(rangerLocations)) {\n-            serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            if (SdxClusterShape.LIGHT_DUTY.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            } else if (SdxClusterShape.MEDIUM_DUTY_HA.equals(cluster.getStack().getSdxClusterShape())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI0MDgzOQ=="}, "originalCommit": {"oid": "cc426dff5988d3c06f8150b2572cf742d70722f5"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTE0MDY0OnYy", "diffSide": "RIGHT", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/doc/ModelDescriptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0NTozNVrOIGVGlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0NTozNVrOIGVGlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwODExNw==", "bodyText": "This is a very basic description. Can you add more information, like explaining what a cluster shape is?", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543508117", "createdAt": "2020-12-15T16:45:35Z", "author": {"login": "hreeve-cloudera"}, "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/doc/ModelDescriptions.java", "diffHunk": "@@ -241,6 +241,7 @@ private ModelDescriptions() {\n         public static final String TUNNEL = \"Configuration that the connection going directly or with cluster proxy or with ccm and cluster proxy.\";\n         public static final String FLOW_ID = \"Flow identifier for the current stack creation. Only returned during the stack create request/response.\";\n         public static final String EXTERNAL_DATABASE = \"External database parameters for the stack.\";\n+        public static final String SDX_CLUSTER_SHAPE = \"SDX Cluster Shape\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc426dff5988d3c06f8150b2572cf742d70722f5"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3468, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}