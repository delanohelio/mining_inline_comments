{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzA1OTg1", "number": 8113, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMTo0ODoyOFrOD-kbXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMTo1ODozNlrOD-kldg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTM1MTMyOnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentInitHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMTo0ODoyOFrOGYv8FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjowNzo1MFrOGYwaRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNDQzNg==", "bodyText": "isNullorEmpty ?", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428604436", "createdAt": "2020-05-21T11:48:28Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentInitHandler.java", "diffHunk": "@@ -52,6 +62,34 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                 );\n     }\n \n+    private void initEnvironment(Environment environment) {\n+        String environmentCrnForVirtualGroups = getEnvironmentCrnForVirtualGroups(environment);\n+        if (!createVirtualGroups(environment, environmentCrnForVirtualGroups)) {\n+            // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n+            environmentService.setAdminGroupName(environment, environment.getAdminGroupName());\n+        }\n+        environmentService.assignEnvironmentAdminAndOwnerRole(environment.getCreator(), environmentCrnForVirtualGroups);\n+        setLocationAndRegions(environment);\n+    }\n+\n+    private String getEnvironmentCrnForVirtualGroups(Environment environment) {\n+        String environmentCrnForVirtualGroups = environment.getResourceCrn();\n+        if (Objects.nonNull(environment.getParentEnvironment())) {\n+            environmentCrnForVirtualGroups = environment.getParentEnvironment().getResourceCrn();\n+        }\n+        return environmentCrnForVirtualGroups;\n+    }\n+\n+    private boolean createVirtualGroups(Environment environment, String envCrn) {\n+        boolean result = false;\n+        if (StringUtils.isEmpty(environment.getAdminGroupName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c36e0f6966e165243263cc306f4639bae45b2ecd"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNzk1Nw==", "bodyText": "isblank? :D", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428607957", "createdAt": "2020-05-21T11:57:16Z", "author": {"login": "bergerdenes"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentInitHandler.java", "diffHunk": "@@ -52,6 +62,34 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                 );\n     }\n \n+    private void initEnvironment(Environment environment) {\n+        String environmentCrnForVirtualGroups = getEnvironmentCrnForVirtualGroups(environment);\n+        if (!createVirtualGroups(environment, environmentCrnForVirtualGroups)) {\n+            // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n+            environmentService.setAdminGroupName(environment, environment.getAdminGroupName());\n+        }\n+        environmentService.assignEnvironmentAdminAndOwnerRole(environment.getCreator(), environmentCrnForVirtualGroups);\n+        setLocationAndRegions(environment);\n+    }\n+\n+    private String getEnvironmentCrnForVirtualGroups(Environment environment) {\n+        String environmentCrnForVirtualGroups = environment.getResourceCrn();\n+        if (Objects.nonNull(environment.getParentEnvironment())) {\n+            environmentCrnForVirtualGroups = environment.getParentEnvironment().getResourceCrn();\n+        }\n+        return environmentCrnForVirtualGroups;\n+    }\n+\n+    private boolean createVirtualGroups(Environment environment, String envCrn) {\n+        boolean result = false;\n+        if (StringUtils.isEmpty(environment.getAdminGroupName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNDQzNg=="}, "originalCommit": {"oid": "c36e0f6966e165243263cc306f4639bae45b2ecd"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYxMjE2NQ==", "bodyText": "dont worry they all do the same. :D I like the isEmpty named version", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428612165", "createdAt": "2020-05-21T12:07:50Z", "author": {"login": "attilapalfi92"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentInitHandler.java", "diffHunk": "@@ -52,6 +62,34 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                 );\n     }\n \n+    private void initEnvironment(Environment environment) {\n+        String environmentCrnForVirtualGroups = getEnvironmentCrnForVirtualGroups(environment);\n+        if (!createVirtualGroups(environment, environmentCrnForVirtualGroups)) {\n+            // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n+            environmentService.setAdminGroupName(environment, environment.getAdminGroupName());\n+        }\n+        environmentService.assignEnvironmentAdminAndOwnerRole(environment.getCreator(), environmentCrnForVirtualGroups);\n+        setLocationAndRegions(environment);\n+    }\n+\n+    private String getEnvironmentCrnForVirtualGroups(Environment environment) {\n+        String environmentCrnForVirtualGroups = environment.getResourceCrn();\n+        if (Objects.nonNull(environment.getParentEnvironment())) {\n+            environmentCrnForVirtualGroups = environment.getParentEnvironment().getResourceCrn();\n+        }\n+        return environmentCrnForVirtualGroups;\n+    }\n+\n+    private boolean createVirtualGroups(Environment environment, String envCrn) {\n+        boolean result = false;\n+        if (StringUtils.isEmpty(environment.getAdminGroupName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNDQzNg=="}, "originalCommit": {"oid": "c36e0f6966e165243263cc306f4639bae45b2ecd"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTM3NzE4OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentInitHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMTo1ODozNlrOGYwL8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjoyNzozMlrOGYw7wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwODQ5Nw==", "bodyText": "I hope getParentEnvironment is cached. if not, please extract this to a variable.", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428608497", "createdAt": "2020-05-21T11:58:36Z", "author": {"login": "bergerdenes"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentInitHandler.java", "diffHunk": "@@ -52,6 +62,34 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                 );\n     }\n \n+    private void initEnvironment(Environment environment) {\n+        String environmentCrnForVirtualGroups = getEnvironmentCrnForVirtualGroups(environment);\n+        if (!createVirtualGroups(environment, environmentCrnForVirtualGroups)) {\n+            // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n+            environmentService.setAdminGroupName(environment, environment.getAdminGroupName());\n+        }\n+        environmentService.assignEnvironmentAdminAndOwnerRole(environment.getCreator(), environmentCrnForVirtualGroups);\n+        setLocationAndRegions(environment);\n+    }\n+\n+    private String getEnvironmentCrnForVirtualGroups(Environment environment) {\n+        String environmentCrnForVirtualGroups = environment.getResourceCrn();\n+        if (Objects.nonNull(environment.getParentEnvironment())) {\n+            environmentCrnForVirtualGroups = environment.getParentEnvironment().getResourceCrn();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c36e0f6966e165243263cc306f4639bae45b2ecd"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYxNTExNQ==", "bodyText": "It is not an api call or anything, returns a reference. I can cache that reference to a local variable but I think the JVM will do that so the method call overhead will be removed too.", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428615115", "createdAt": "2020-05-21T12:14:39Z", "author": {"login": "attilapalfi92"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentInitHandler.java", "diffHunk": "@@ -52,6 +62,34 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                 );\n     }\n \n+    private void initEnvironment(Environment environment) {\n+        String environmentCrnForVirtualGroups = getEnvironmentCrnForVirtualGroups(environment);\n+        if (!createVirtualGroups(environment, environmentCrnForVirtualGroups)) {\n+            // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n+            environmentService.setAdminGroupName(environment, environment.getAdminGroupName());\n+        }\n+        environmentService.assignEnvironmentAdminAndOwnerRole(environment.getCreator(), environmentCrnForVirtualGroups);\n+        setLocationAndRegions(environment);\n+    }\n+\n+    private String getEnvironmentCrnForVirtualGroups(Environment environment) {\n+        String environmentCrnForVirtualGroups = environment.getResourceCrn();\n+        if (Objects.nonNull(environment.getParentEnvironment())) {\n+            environmentCrnForVirtualGroups = environment.getParentEnvironment().getResourceCrn();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwODQ5Nw=="}, "originalCommit": {"oid": "c36e0f6966e165243263cc306f4639bae45b2ecd"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyMDczNg==", "bodyText": "(I moved this code without modification from the env creation service)", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428620736", "createdAt": "2020-05-21T12:27:32Z", "author": {"login": "attilapalfi92"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentInitHandler.java", "diffHunk": "@@ -52,6 +62,34 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                 );\n     }\n \n+    private void initEnvironment(Environment environment) {\n+        String environmentCrnForVirtualGroups = getEnvironmentCrnForVirtualGroups(environment);\n+        if (!createVirtualGroups(environment, environmentCrnForVirtualGroups)) {\n+            // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n+            environmentService.setAdminGroupName(environment, environment.getAdminGroupName());\n+        }\n+        environmentService.assignEnvironmentAdminAndOwnerRole(environment.getCreator(), environmentCrnForVirtualGroups);\n+        setLocationAndRegions(environment);\n+    }\n+\n+    private String getEnvironmentCrnForVirtualGroups(Environment environment) {\n+        String environmentCrnForVirtualGroups = environment.getResourceCrn();\n+        if (Objects.nonNull(environment.getParentEnvironment())) {\n+            environmentCrnForVirtualGroups = environment.getParentEnvironment().getResourceCrn();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwODQ5Nw=="}, "originalCommit": {"oid": "c36e0f6966e165243263cc306f4639bae45b2ecd"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3344, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}