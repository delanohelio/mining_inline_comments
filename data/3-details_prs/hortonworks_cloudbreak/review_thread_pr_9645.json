{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3OTA5MTEy", "number": 9645, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzo1ODowMlrOFE_tdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDowMzowNFrOFE_3hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzgyNDU1OnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/CloudbreakFailedChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzo1ODowMlrOIFRqsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxNzowM1rOIFShWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwMzI0OQ==", "bodyText": "As far as I see we can rename this to a more general, for example WaitFailedChecker or FailedChecker, because of this is not only for CloudbreakClient or CloudbreakService", "url": "https://github.com/hortonworks/cloudbreak/pull/9645#discussion_r542403249", "createdAt": "2020-12-14T13:58:02Z", "author": {"login": "aszegedi"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/CloudbreakFailedChecker.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.sequenceiq.it.cloudbreak.util.wait.service;\n+\n+import java.util.Map;\n+\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.ProcessingException;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.sequenceiq.it.cloudbreak.exception.TestFailException;\n+\n+public class CloudbreakFailedChecker<T extends WaitObject> extends ExceptionChecker<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0f697708b7764fe4f3ba6f27e9aeb0a3b6efb98"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxNzI0MA==", "bodyText": "This name is ok for me", "url": "https://github.com/hortonworks/cloudbreak/pull/9645#discussion_r542417240", "createdAt": "2020-12-14T14:17:03Z", "author": {"login": "topolyai5"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/CloudbreakFailedChecker.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.sequenceiq.it.cloudbreak.util.wait.service;\n+\n+import java.util.Map;\n+\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.ProcessingException;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.sequenceiq.it.cloudbreak.exception.TestFailException;\n+\n+public class CloudbreakFailedChecker<T extends WaitObject> extends ExceptionChecker<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwMzI0OQ=="}, "originalCommit": {"oid": "b0f697708b7764fe4f3ba6f27e9aeb0a3b6efb98"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzgzMDkyOnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/CloudbreakOperationChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzo1OToxOFrOIFRuTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxNzowOFrOIFShfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwNDE3NQ==", "bodyText": "Also this can be called WaitOperationChecker or OperationChecker.", "url": "https://github.com/hortonworks/cloudbreak/pull/9645#discussion_r542404175", "createdAt": "2020-12-14T13:59:18Z", "author": {"login": "aszegedi"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/CloudbreakOperationChecker.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package com.sequenceiq.it.cloudbreak.util.wait.service;\n+\n+import java.util.Map;\n+\n+import javax.ws.rs.ProcessingException;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.sequenceiq.it.cloudbreak.exception.TestFailException;\n+\n+public class CloudbreakOperationChecker<T extends WaitObject> extends ExceptionChecker<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0f697708b7764fe4f3ba6f27e9aeb0a3b6efb98"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxNzI3OQ==", "bodyText": "This name is ok for me", "url": "https://github.com/hortonworks/cloudbreak/pull/9645#discussion_r542417279", "createdAt": "2020-12-14T14:17:08Z", "author": {"login": "topolyai5"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/CloudbreakOperationChecker.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package com.sequenceiq.it.cloudbreak.util.wait.service;\n+\n+import java.util.Map;\n+\n+import javax.ws.rs.ProcessingException;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.sequenceiq.it.cloudbreak.exception.TestFailException;\n+\n+public class CloudbreakOperationChecker<T extends WaitObject> extends ExceptionChecker<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwNDE3NQ=="}, "originalCommit": {"oid": "b0f697708b7764fe4f3ba6f27e9aeb0a3b6efb98"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzgzMzAzOnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/CloudbreakTerminationChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzo1OTo0MlrOIFRvfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxNzoxM1rOIFShvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwNDQ3Nw==", "bodyText": "Also this can be called WaitTerminationChecker or TerminationChecker.", "url": "https://github.com/hortonworks/cloudbreak/pull/9645#discussion_r542404477", "createdAt": "2020-12-14T13:59:42Z", "author": {"login": "aszegedi"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/CloudbreakTerminationChecker.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package com.sequenceiq.it.cloudbreak.util.wait.service;\n+\n+import static com.sequenceiq.cloudbreak.api.endpoint.v4.common.Status.DELETE_COMPLETED;\n+\n+import java.util.Map;\n+\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.ProcessingException;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.sequenceiq.it.cloudbreak.exception.TestFailException;\n+\n+public class CloudbreakTerminationChecker<T extends WaitObject> extends ExceptionChecker<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0f697708b7764fe4f3ba6f27e9aeb0a3b6efb98"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxNzM0MA==", "bodyText": "This name is ok for me", "url": "https://github.com/hortonworks/cloudbreak/pull/9645#discussion_r542417340", "createdAt": "2020-12-14T14:17:13Z", "author": {"login": "topolyai5"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/CloudbreakTerminationChecker.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package com.sequenceiq.it.cloudbreak.util.wait.service;\n+\n+import static com.sequenceiq.cloudbreak.api.endpoint.v4.common.Status.DELETE_COMPLETED;\n+\n+import java.util.Map;\n+\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.ProcessingException;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.sequenceiq.it.cloudbreak.exception.TestFailException;\n+\n+public class CloudbreakTerminationChecker<T extends WaitObject> extends ExceptionChecker<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwNDQ3Nw=="}, "originalCommit": {"oid": "b0f697708b7764fe4f3ba6f27e9aeb0a3b6efb98"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzg1MDMwOnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/ResourceAwait.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDowMzowNFrOIFR5fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxODoyMVrOIFSlEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwNzAzNg==", "bodyText": "What is the purpose of this, where it is going to be used?", "url": "https://github.com/hortonworks/cloudbreak/pull/9645#discussion_r542407036", "createdAt": "2020-12-14T14:03:04Z", "author": {"login": "aszegedi"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/ResourceAwait.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.sequenceiq.it.cloudbreak.util.wait.service;\n+\n+import java.time.Duration;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.it.cloudbreak.MicroserviceClient;\n+import com.sequenceiq.it.cloudbreak.context.RunningParameter;\n+import com.sequenceiq.it.cloudbreak.context.TestContext;\n+import com.sequenceiq.it.cloudbreak.dto.CloudbreakTestDto;\n+import com.sequenceiq.it.cloudbreak.log.Log;\n+import com.sequenceiq.it.cloudbreak.util.ResponseUtil;\n+\n+@Component\n+public class ResourceAwait {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0f697708b7764fe4f3ba6f27e9aeb0a3b6efb98"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxODE5Mg==", "bodyText": "we call this from the TestContext in the awaitForFlow()", "url": "https://github.com/hortonworks/cloudbreak/pull/9645#discussion_r542418192", "createdAt": "2020-12-14T14:18:21Z", "author": {"login": "topolyai5"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/service/ResourceAwait.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.sequenceiq.it.cloudbreak.util.wait.service;\n+\n+import java.time.Duration;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.it.cloudbreak.MicroserviceClient;\n+import com.sequenceiq.it.cloudbreak.context.RunningParameter;\n+import com.sequenceiq.it.cloudbreak.context.TestContext;\n+import com.sequenceiq.it.cloudbreak.dto.CloudbreakTestDto;\n+import com.sequenceiq.it.cloudbreak.log.Log;\n+import com.sequenceiq.it.cloudbreak.util.ResponseUtil;\n+\n+@Component\n+public class ResourceAwait {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwNzAzNg=="}, "originalCommit": {"oid": "b0f697708b7764fe4f3ba6f27e9aeb0a3b6efb98"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3463, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}