{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NjIxOTA3", "number": 9278, "title": "CB-9298: Instance status is incorrect on UI", "bodyText": "Integrated freeipa health check and platform instance check results to show actual instance statuses on UI. Currently instance status is incorrect on UI when the instances are unreachable because only platform instance check is used. The platform instance check doesn't check if the instance is reachable. If instances are not available, the UI will show incorrect running status. With this fix, the UI will show the instance as unreachable.\nSee detailed description in the commit message.", "createdAt": "2020-10-23T00:04:50Z", "url": "https://github.com/hortonworks/cloudbreak/pull/9278", "merged": true, "mergeCommit": {"oid": "7f073c40338aa752cc4af8fe6d210f2a89fd8a7b"}, "closed": true, "closedAt": "2020-10-30T13:37:09Z", "author": {"login": "christmasferret"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVYX8PgFqTUxNTc1MzI2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXW-evgBqjM5Mzc5NDA3NzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NzUzMjYy", "url": "https://github.com/hortonworks/cloudbreak/pull/9278#pullrequestreview-515753262", "createdAt": "2020-10-23T15:03:57Z", "commit": {"oid": "4f942f3c0aa971233e555bfbf5a058e33c93eb4f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNTowMzo1N1rOHnRyJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNTozMTo1MVrOHnS-6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0Nzg3Ng==", "bodyText": "I think this might only work for cases where the status is unreachable. For example, if the instance health is unhealthy I suspect the UI will report \"running\" since it will rely on the VM status which will be started which means the instance status will be created which means the UI will report \"running\".", "url": "https://github.com/hortonworks/cloudbreak/pull/9278#discussion_r510947876", "createdAt": "2020-10-23T15:03:57Z", "author": {"login": "jamisonbennett"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -74,33 +77,39 @@\n         }, LOGGER, \":::Auto sync::: provider is checked in {}ms\");\n     }\n \n-    private InstanceStatus updateStatuses(CloudVmInstanceStatus vmInstanceStatus, InstanceMetaData instanceMetaData) {\n+    private InstanceStatus updateStatuses(CloudVmInstanceStatus vmInstanceStatus, InstanceMetaData instanceMetaData,\n+        Map<InstanceMetaData, DetailedStackStatus> instanceHealthStatusMap) {\n         LOGGER.info(\":::Auto sync::: {} instance metadata status update in progress, new status: {}\",\n                 instanceMetaData.getShortHostname(), vmInstanceStatus);\n         InstanceStatus status = null;\n-        switch (vmInstanceStatus.getStatus()) {\n-            case STARTED:\n-                setStatusIfNotTheSame(instanceMetaData, InstanceStatus.CREATED);\n-                status = InstanceStatus.CREATED;\n-                break;\n-            case STOPPED:\n-                setStatusIfNotTheSame(instanceMetaData, InstanceStatus.STOPPED);\n-                status = InstanceStatus.STOPPED;\n-                break;\n-            case FAILED:\n-                setStatusIfNotTheSame(instanceMetaData, InstanceStatus.FAILED);\n-                status = InstanceStatus.FAILED;\n-                break;\n-            case TERMINATED:\n-                setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_ON_PROVIDER_SIDE);\n-                status = InstanceStatus.DELETED_ON_PROVIDER_SIDE;\n-                break;\n-            case TERMINATED_BY_PROVIDER:\n-                setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_BY_PROVIDER);\n-                status = InstanceStatus.DELETED_BY_PROVIDER;\n-                break;\n-            default:\n-                LOGGER.info(\":::Auto sync::: the '{}' status is not converted\", vmInstanceStatus.getStatus());\n+        if (DetailedStackStatus.UNREACHABLE == instanceHealthStatusMap.get(instanceMetaData)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f942f3c0aa971233e555bfbf5a058e33c93eb4f"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk1NTIxNQ==", "bodyText": "Since the unreachable's logic above is the highest precedence, it appears that unhealthy overrides stopped, failed, terminated, and terminated by the provider (all of which will report an unreachable status). I think the instance's health status should only be considered if the VM is in the running state.", "url": "https://github.com/hortonworks/cloudbreak/pull/9278#discussion_r510955215", "createdAt": "2020-10-23T15:15:22Z", "author": {"login": "jamisonbennett"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -74,33 +77,39 @@\n         }, LOGGER, \":::Auto sync::: provider is checked in {}ms\");\n     }\n \n-    private InstanceStatus updateStatuses(CloudVmInstanceStatus vmInstanceStatus, InstanceMetaData instanceMetaData) {\n+    private InstanceStatus updateStatuses(CloudVmInstanceStatus vmInstanceStatus, InstanceMetaData instanceMetaData,\n+        Map<InstanceMetaData, DetailedStackStatus> instanceHealthStatusMap) {\n         LOGGER.info(\":::Auto sync::: {} instance metadata status update in progress, new status: {}\",\n                 instanceMetaData.getShortHostname(), vmInstanceStatus);\n         InstanceStatus status = null;\n-        switch (vmInstanceStatus.getStatus()) {\n-            case STARTED:\n-                setStatusIfNotTheSame(instanceMetaData, InstanceStatus.CREATED);\n-                status = InstanceStatus.CREATED;\n-                break;\n-            case STOPPED:\n-                setStatusIfNotTheSame(instanceMetaData, InstanceStatus.STOPPED);\n-                status = InstanceStatus.STOPPED;\n-                break;\n-            case FAILED:\n-                setStatusIfNotTheSame(instanceMetaData, InstanceStatus.FAILED);\n-                status = InstanceStatus.FAILED;\n-                break;\n-            case TERMINATED:\n-                setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_ON_PROVIDER_SIDE);\n-                status = InstanceStatus.DELETED_ON_PROVIDER_SIDE;\n-                break;\n-            case TERMINATED_BY_PROVIDER:\n-                setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_BY_PROVIDER);\n-                status = InstanceStatus.DELETED_BY_PROVIDER;\n-                break;\n-            default:\n-                LOGGER.info(\":::Auto sync::: the '{}' status is not converted\", vmInstanceStatus.getStatus());\n+        if (DetailedStackStatus.UNREACHABLE == instanceHealthStatusMap.get(instanceMetaData)) {\n+            setStatusIfNotTheSame(instanceMetaData, InstanceStatus.UNREACHABLE);\n+            status = InstanceStatus.UNREACHABLE;\n+        } else {\n+            switch (vmInstanceStatus.getStatus()) {\n+                case STARTED:\n+                    setStatusIfNotTheSame(instanceMetaData, InstanceStatus.CREATED);\n+                    status = InstanceStatus.CREATED;\n+                    break;\n+                case STOPPED:\n+                    setStatusIfNotTheSame(instanceMetaData, InstanceStatus.STOPPED);\n+                    status = InstanceStatus.STOPPED;\n+                    break;\n+                case FAILED:\n+                    setStatusIfNotTheSame(instanceMetaData, InstanceStatus.FAILED);\n+                    status = InstanceStatus.FAILED;\n+                    break;\n+                case TERMINATED:\n+                    setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_ON_PROVIDER_SIDE);\n+                    status = InstanceStatus.DELETED_ON_PROVIDER_SIDE;\n+                    break;\n+                case TERMINATED_BY_PROVIDER:\n+                    setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_BY_PROVIDER);\n+                    status = InstanceStatus.DELETED_BY_PROVIDER;\n+                    break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f942f3c0aa971233e555bfbf5a058e33c93eb4f"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk2NzUyOA==", "bodyText": "Instead of using an outbound parameter instanceHealthStatusMap, would it be better to include that as a part of the SyncResult?", "url": "https://github.com/hortonworks/cloudbreak/pull/9278#discussion_r510967528", "createdAt": "2020-10-23T15:31:51Z", "author": {"login": "jamisonbennett"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaChecker.java", "diffHunk": "@@ -29,31 +32,31 @@\n     @Inject\n     private FreeIpaHealthDetailsService freeIpaHealthDetailsService;\n \n-    private Pair<List<DetailedStackStatus>, String> checkStatus(Stack stack, Set<InstanceMetaData> checkableInstances) throws Exception {\n+    private Pair<Map<InstanceMetaData, DetailedStackStatus>, String> checkStatus(Stack stack, Set<InstanceMetaData> checkableInstances) throws Exception {\n         return checkedMeasure(() -> {\n-            List<DetailedStackStatus> statuses = new LinkedList<>();\n+            Map<InstanceMetaData, DetailedStackStatus> statuses = new HashMap<>();\n             List<RPCResponse<Boolean>> responses = new LinkedList<>();\n             for (InstanceMetaData instanceMetaData : checkableInstances) {\n                 try {\n                     RPCResponse<Boolean> response = checkedMeasure(() -> freeIpaHealthDetailsService.checkFreeIpaHealth(stack, instanceMetaData), LOGGER,\n                             \":::Auto sync::: FreeIPA health check ran in {}ms\");\n                     responses.add(response);\n                     if (response.getResult()) {\n-                        statuses.add(DetailedStackStatus.AVAILABLE);\n+                        statuses.put(instanceMetaData, DetailedStackStatus.AVAILABLE);\n                     } else {\n-                        statuses.add(DetailedStackStatus.UNHEALTHY);\n+                        statuses.put(instanceMetaData, DetailedStackStatus.UNHEALTHY);\n                     }\n                 } catch (Exception e) {\n                     LOGGER.info(\"FreeIpaClientException occurred during status fetch: \" + e.getMessage(), e);\n-                    statuses.add(DetailedStackStatus.UNREACHABLE);\n+                    statuses.put(instanceMetaData, DetailedStackStatus.UNREACHABLE);\n                 }\n             }\n             String message = getMessages(responses);\n             return Pair.of(statuses, message);\n         }, LOGGER, \":::Auto sync::: freeipa server status is checked in {}ms\");\n     }\n \n-    public SyncResult getStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {\n+    public SyncResult getStatus(Stack stack, Set<InstanceMetaData> checkableInstances, Map<InstanceMetaData, DetailedStackStatus> instanceHealthStatusMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f942f3c0aa971233e555bfbf5a058e33c93eb4f"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f942f3c0aa971233e555bfbf5a058e33c93eb4f", "author": {"user": {"login": "christmasferret", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/4f942f3c0aa971233e555bfbf5a058e33c93eb4f", "committedDate": "2020-10-23T00:03:54Z", "message": "CB-9298: Instance status is incorrect on UI\n\nIntegrated freeipa health check and platform instance check results to show actual instance statuses on UI. Currently instance status is incorrect on UI when the instances are unreachable because only platform instance check is used. The platform instance check doesn't check if the instance is reachable. If instances are not available, the UI will show incorrect running status. With this fix, the UI will show the instance as unreachable."}, "afterCommit": {"oid": "3971d03fdd7d980b6cf290acbde5deb22f392b8a", "author": {"user": {"login": "christmasferret", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3971d03fdd7d980b6cf290acbde5deb22f392b8a", "committedDate": "2020-10-26T01:28:53Z", "message": "CB-9298: Instance status is incorrect on UI\n\nIntegrated freeipa health check and platform instance check results to show actual instance statuses on UI. Currently instance status is incorrect on UI when the instances are unreachable because only platform instance check is used. The platform instance check doesn't check if the instance is reachable. If instances are not available, the UI will show incorrect running status. With this fix, the UI will show the instance as unreachable."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NTM4MTk5", "url": "https://github.com/hortonworks/cloudbreak/pull/9278#pullrequestreview-516538199", "createdAt": "2020-10-26T08:07:04Z", "commit": {"oid": "3971d03fdd7d980b6cf290acbde5deb22f392b8a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTgyNDIy", "url": "https://github.com/hortonworks/cloudbreak/pull/9278#pullrequestreview-516982422", "createdAt": "2020-10-26T16:52:29Z", "commit": {"oid": "3971d03fdd7d980b6cf290acbde5deb22f392b8a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MTU5MTA3", "url": "https://github.com/hortonworks/cloudbreak/pull/9278#pullrequestreview-517159107", "createdAt": "2020-10-26T20:42:10Z", "commit": {"oid": "3971d03fdd7d980b6cf290acbde5deb22f392b8a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDU1MjQ2", "url": "https://github.com/hortonworks/cloudbreak/pull/9278#pullrequestreview-519055246", "createdAt": "2020-10-28T20:26:27Z", "commit": {"oid": "85ca87fd33ec0f33c10648f5c29ee0e421760d31"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDoyNjoyN1rOHp8GQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDoyNjoyN1rOHp8GQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzczODMwNQ==", "bodyText": "I think I know the answer to this but I wanted to check. Is the reason that DetailedStackStatus.UNHEALTHTY can't bypass the cloud provider check because we need to catch the case where 1 VM is running and 1 VM is either stopped, deleted, etc?", "url": "https://github.com/hortonworks/cloudbreak/pull/9278#discussion_r513738305", "createdAt": "2020-10-28T20:26:27Z", "author": {"login": "jamisonbennett"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -100,11 +100,16 @@ public void syncAStack(Stack stack) {\n                     }\n                     if (!checkableInstances.isEmpty()) {\n                         SyncResult syncResult = freeipaChecker.getStatus(stack, checkableInstances);\n-                        List<ProviderSyncResult> results = providerChecker.updateAndGetStatuses(stack, checkableInstances, syncResult.getInstanceStatusMap());\n-                        if (!results.isEmpty()) {\n-                            updateStackStatus(stack, syncResult, results, alreadyDeletedCount);\n+                        if (DetailedStackStatus.AVAILABLE == syncResult.getStatus()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85ca87fd33ec0f33c10648f5c29ee0e421760d31"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5OTM3MzY0", "url": "https://github.com/hortonworks/cloudbreak/pull/9278#pullrequestreview-519937364", "createdAt": "2020-10-29T18:01:21Z", "commit": {"oid": "85ca87fd33ec0f33c10648f5c29ee0e421760d31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85ca87fd33ec0f33c10648f5c29ee0e421760d31", "author": {"user": {"login": "christmasferret", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/85ca87fd33ec0f33c10648f5c29ee0e421760d31", "committedDate": "2020-10-28T19:57:51Z", "message": "CB-9298: Instance status is incorrect on UI\n\nIntegrated freeipa health check and platform instance check results to show actual instance statuses on UI. Currently instance status is incorrect on UI when the instances are unreachable because only platform instance check is used. The platform instance check doesn't check if the instance is reachable. If instances are not available, the UI will show incorrect running status. With this fix, the UI will show the instance as unreachable."}, "afterCommit": {"oid": "2c6bca900d8d552b05851b701e96bb068e1f0392", "author": {"user": {"login": "christmasferret", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/2c6bca900d8d552b05851b701e96bb068e1f0392", "committedDate": "2020-10-29T18:31:08Z", "message": "CB-9298: Instance status is incorrect on UI\n\nIntegrated freeipa health check and platform instance check results to show actual instance statuses on UI. Currently instance status is incorrect on UI when the instances are unreachable because only platform instance check is used. The platform instance check doesn't check if the instance is reachable. If instances are not available, the UI will show incorrect running status. With this fix, the UI will show the instance as unreachable."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23f2ba23e654b73475124537e105a5b16c0dd7b6", "author": {"user": {"login": "christmasferret", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/23f2ba23e654b73475124537e105a5b16c0dd7b6", "committedDate": "2020-10-29T18:37:17Z", "message": "CB-9298: Instance status is incorrect on UI\n\nIntegrated freeipa health check and platform instance check results to show actual instance statuses on UI. Currently instance status is incorrect on UI when the instances are unreachable because only platform instance check is used. The platform instance check doesn't check if the instance is reachable. If instances are not available, the UI will show incorrect running status. With this fix, the UI will show the instance as unreachable."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c6bca900d8d552b05851b701e96bb068e1f0392", "author": {"user": {"login": "christmasferret", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/2c6bca900d8d552b05851b701e96bb068e1f0392", "committedDate": "2020-10-29T18:31:08Z", "message": "CB-9298: Instance status is incorrect on UI\n\nIntegrated freeipa health check and platform instance check results to show actual instance statuses on UI. Currently instance status is incorrect on UI when the instances are unreachable because only platform instance check is used. The platform instance check doesn't check if the instance is reachable. If instances are not available, the UI will show incorrect running status. With this fix, the UI will show the instance as unreachable."}, "afterCommit": {"oid": "23f2ba23e654b73475124537e105a5b16c0dd7b6", "author": {"user": {"login": "christmasferret", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/23f2ba23e654b73475124537e105a5b16c0dd7b6", "committedDate": "2020-10-29T18:37:17Z", "message": "CB-9298: Instance status is incorrect on UI\n\nIntegrated freeipa health check and platform instance check results to show actual instance statuses on UI. Currently instance status is incorrect on UI when the instances are unreachable because only platform instance check is used. The platform instance check doesn't check if the instance is reachable. If instances are not available, the UI will show incorrect running status. With this fix, the UI will show the instance as unreachable."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2052, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}