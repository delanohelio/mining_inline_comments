{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NjczMzkz", "number": 9006, "title": "CB-8778 validate paywall access before starting the upgrade process", "bodyText": "For runtime upgrade, we have to download the CM and CDP builds from paywall\n(archive.cloudera.com/p/). The CM license that is configured uniquely for each\nCDP account can be used to authenticate. However, it can happen that customers\ndo not have an updated license that can be used. In this case, it would be a\nmistake to even start the upgrade process. Instead, whenever an upgrade is\nrequested we'll validate if we can use the configured license to access the paywall.\nIf it's not valid we will reject the request. Once they update the license in UMS\nwe will also update the license as part of the upgrade process to make sure\nwe can download everything. We're also NOT checking the validity of the license\nwhen we're searching for upgrade candidates. This is because this operation happens\nvery frequently (each time you open up the Datalake details page on the UI). Due to\nthis we will show a message on the UI that upgrades are available, but when they\ntry to trigger it we will reject the request.", "createdAt": "2020-09-14T14:47:02Z", "url": "https://github.com/hortonworks/cloudbreak/pull/9006", "merged": true, "mergeCommit": {"oid": "f3c9a30b739ab4b1d0f84592e3abcd8f413ef219"}, "closed": true, "closedAt": "2020-09-15T06:53:13Z", "author": {"login": "keyki"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI1EcTgBqjM3NjQwNzQ0MTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdI37l_ABqjM3NjQ4OTU4MzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb680683e1ac159d76a17b9b86c8d37290849d03", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/cb680683e1ac159d76a17b9b86c8d37290849d03", "committedDate": "2020-09-14T14:45:41Z", "message": "CB-8778 validate paywall access before starting the upgrade process\nFor runtime upgrade, we have to download the CM and CDP builds from paywall\n(archive.cloudera.com/p/). The CM license that is configured uniquely for each\nCDP account can be used to authenticate. However, it can happen that customers\ndo not have an updated license that can be used. In this case, it would be a\nmistake to even start the upgrade process. Instead, whenever an upgrade is\nrequested we'll validate if we can use the configured license to access the paywall.\nIf it's not valid we will reject the request. Once they update the license in UMS\nwe will also update the license as part of the upgrade process to make sure\nwe can download everything. We're also NOT checking the validity of the license\nwhen we're searching for upgrade candidates. This is because this operation happens\nvery frequently (each time you open up the Datalake details page on the UI). Due to\nthis we will show a message on the UI that upgrades are available, but when they\ntry to trigger it we will reject the request."}, "afterCommit": {"oid": "dfc9a73220c728c2ec232e5fd7f0e251d4f77414", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/dfc9a73220c728c2ec232e5fd7f0e251d4f77414", "committedDate": "2020-09-14T15:37:59Z", "message": "CB-8778 validate paywall access before starting the upgrade process\nFor runtime upgrade, we have to download the CM and CDP builds from paywall\n(archive.cloudera.com/p/). The CM license that is configured uniquely for each\nCDP account can be used to authenticate. However, it can happen that customers\ndo not have an updated license that can be used. In this case, it would be a\nmistake to even start the upgrade process. Instead, whenever an upgrade is\nrequested we'll validate if we can use the configured license to access the paywall.\nIf it's not valid we will reject the request. Once they update the license in UMS\nwe will also update the license as part of the upgrade process to make sure\nwe can download everything. We're also NOT checking the validity of the license\nwhen we're searching for upgrade candidates. This is because this operation happens\nvery frequently (each time you open up the Datalake details page on the UI). Due to\nthis we will show a message on the UI that upgrades are available, but when they\ntry to trigger it we will reject the request."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDE3MTE0", "url": "https://github.com/hortonworks/cloudbreak/pull/9006#pullrequestreview-488017114", "createdAt": "2020-09-14T18:01:46Z", "commit": {"oid": "dfc9a73220c728c2ec232e5fd7f0e251d4f77414"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODowMTo0NlrOHRgn0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODowMTo0NlrOHRgn0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyMjMyMg==", "bodyText": "typo here", "url": "https://github.com/hortonworks/cloudbreak/pull/9006#discussion_r488122322", "createdAt": "2020-09-14T18:01:46Z", "author": {"login": "pdarvasi"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java", "diffHunk": "@@ -146,6 +174,46 @@ private void verifyRuntimeUpgradeEntitlement(String userCrn, SdxUpgradeRequest u\n         }\n     }\n \n+    private void verifyPaywallAccess(String userCrn, SdxUpgradeRequest upgradeRequest) {\n+        if (upgradeRequest != null && !Boolean.TRUE.equals(upgradeRequest.getLockComponents())) {\n+            if (!isInternalRepoAllowedForUpgrade(userCrn)) {\n+                verifyCMLicenseValidity(userCrn);\n+            } else {\n+                LOGGER.info(\"Internal repo is allowed for upgrade, skip CM license validation\");\n+            }\n+        }\n+    }\n+\n+    private void verifyCMLicenseValidity(String userCrn) {\n+        LOGGER.info(\"Verify if the CM license is valid to authentichate to {}\", paywallUrl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc9a73220c728c2ec232e5fd7f0e251d4f77414"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d68c0f44e188d071b24440781ba227a917cd6538", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d68c0f44e188d071b24440781ba227a917cd6538", "committedDate": "2020-09-14T18:58:13Z", "message": "CB-8778 validate paywall access before starting the upgrade process\nFor runtime upgrade, we have to download the CM and CDP builds from paywall\n(archive.cloudera.com/p/). The CM license that is configured uniquely for each\nCDP account can be used to authenticate. However, it can happen that customers\ndo not have an updated license that can be used. In this case, it would be a\nmistake to even start the upgrade process. Instead, whenever an upgrade is\nrequested we'll validate if we can use the configured license to access the paywall.\nIf it's not valid we will reject the request. Once they update the license in UMS\nwe will also update the license as part of the upgrade process to make sure\nwe can download everything. We're also NOT checking the validity of the license\nwhen we're searching for upgrade candidates. This is because this operation happens\nvery frequently (each time you open up the Datalake details page on the UI). Due to\nthis we will show a message on the UI that upgrades are available, but when they\ntry to trigger it we will reject the request."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dfc9a73220c728c2ec232e5fd7f0e251d4f77414", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/dfc9a73220c728c2ec232e5fd7f0e251d4f77414", "committedDate": "2020-09-14T15:37:59Z", "message": "CB-8778 validate paywall access before starting the upgrade process\nFor runtime upgrade, we have to download the CM and CDP builds from paywall\n(archive.cloudera.com/p/). The CM license that is configured uniquely for each\nCDP account can be used to authenticate. However, it can happen that customers\ndo not have an updated license that can be used. In this case, it would be a\nmistake to even start the upgrade process. Instead, whenever an upgrade is\nrequested we'll validate if we can use the configured license to access the paywall.\nIf it's not valid we will reject the request. Once they update the license in UMS\nwe will also update the license as part of the upgrade process to make sure\nwe can download everything. We're also NOT checking the validity of the license\nwhen we're searching for upgrade candidates. This is because this operation happens\nvery frequently (each time you open up the Datalake details page on the UI). Due to\nthis we will show a message on the UI that upgrades are available, but when they\ntry to trigger it we will reject the request."}, "afterCommit": {"oid": "d68c0f44e188d071b24440781ba227a917cd6538", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d68c0f44e188d071b24440781ba227a917cd6538", "committedDate": "2020-09-14T18:58:13Z", "message": "CB-8778 validate paywall access before starting the upgrade process\nFor runtime upgrade, we have to download the CM and CDP builds from paywall\n(archive.cloudera.com/p/). The CM license that is configured uniquely for each\nCDP account can be used to authenticate. However, it can happen that customers\ndo not have an updated license that can be used. In this case, it would be a\nmistake to even start the upgrade process. Instead, whenever an upgrade is\nrequested we'll validate if we can use the configured license to access the paywall.\nIf it's not valid we will reject the request. Once they update the license in UMS\nwe will also update the license as part of the upgrade process to make sure\nwe can download everything. We're also NOT checking the validity of the license\nwhen we're searching for upgrade candidates. This is because this operation happens\nvery frequently (each time you open up the Datalake details page on the UI). Due to\nthis we will show a message on the UI that upgrades are available, but when they\ntry to trigger it we will reject the request."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2320, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}