{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0ODA0ODA1", "number": 8757, "title": "CB-8274: Re-write ranger admin group in ranger policies.", "bodyText": "Here is the summary of the code changes.\n\nPass the ranger_admin_group name from  CB -> salt pillar on the datalake database backup.\nPass the ranger_admin_group name from CB -> salt pillar on the datalake database restore.\nUse a configured retry attempts to get the status of datalake database backup-restore operations and also retry count on failures.\nChanges to database backup script to replace the group name in the ranger back up with the hardcoded KEYWORD before writing to S3.\nChanges to database restore script to replace the hardcoded KEYWORD with the group name in the ranger back up with before using to restore the database.\n\nTests:\n\nUpdated existing tests to cover the change that was made.\nI created an environment with these changes in place and made sure that the pillar information was correct and also triggered database backup-restore operations and made sure that the ranger permissions are re-written as expected.", "createdAt": "2020-08-07T20:34:31Z", "url": "https://github.com/hortonworks/cloudbreak/pull/8757", "merged": true, "mergeCommit": {"oid": "1615237e5ffa3967210fcbb5bb21aeb2934db015"}, "closed": true, "closedAt": "2020-08-10T20:20:02Z", "author": {"login": "kkalvagadda1"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9iLF4gH2gAyNDY0ODA0ODA1OmE0YTQ1OGUzNGQwZjk2OGNmZjQwMTJjMTJjNzQxOWRhMDg5M2U0ZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9nSXMgBqjM2NDAxNTI1Mzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a4a458e34d0f968cff4012c12c7419da0893e4ef", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a4a458e34d0f968cff4012c12c7419da0893e4ef", "committedDate": "2020-08-10T13:24:21Z", "message": "CB-8274: Re-write ranger admin group in ranger policies."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44a0f58b149ab261e205e4c7f4257ade0f401d0e", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/44a0f58b149ab261e205e4c7f4257ade0f401d0e", "committedDate": "2020-08-07T20:23:50Z", "message": "CB-8274: Re-write ranger admin group in ranger policies."}, "afterCommit": {"oid": "a4a458e34d0f968cff4012c12c7419da0893e4ef", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a4a458e34d0f968cff4012c12c7419da0893e4ef", "committedDate": "2020-08-10T13:24:21Z", "message": "CB-8274: Re-write ranger admin group in ranger policies."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MjUwNjk3", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#pullrequestreview-464250697", "createdAt": "2020-08-10T13:56:12Z", "commit": {"oid": "a4a458e34d0f968cff4012c12c7419da0893e4ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjU4NDU0", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#pullrequestreview-463658454", "createdAt": "2020-08-07T21:50:46Z", "commit": {"oid": "44a0f58b149ab261e205e4c7f4257ade0f401d0e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMTo1MDo0N1rOG9pfVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDoyMToyOFrOG-Qqtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI5NjA4Ng==", "bodyText": "suggestion: For the Database backup failed state, since we're passing so many null values in, and reusing this BackupRestoreContext for both active and failed backups and restores, it seems to me that we may want to create a new context type.", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#discussion_r467296086", "createdAt": "2020-08-07T21:50:47Z", "author": {"login": "brycederriso"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/dr/backup/DatabaseBackupActions.java", "diffHunk": "@@ -81,7 +82,7 @@ protected BackupRestoreContext createFlowContext(FlowParameters flowParameters,\n                     DatabaseBackupFailedEvent payload) {\n                 Flow flow = getFlow(flowParameters.getFlowId());\n                 flow.setFlowFailed(payload.getException());\n-                return BackupRestoreContext.from(flowParameters, payload, null, null);\n+                return BackupRestoreContext.from(flowParameters, payload, null, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44a0f58b149ab261e205e4c7f4257ade0f401d0e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI5ODE3Nw==", "bodyText": "suggestion: append _KEY to the end of this constant, since it refers to the key value we have to line up with in the key:value pair of our Yaml pillar.", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#discussion_r467298177", "createdAt": "2020-08-07T21:53:29Z", "author": {"login": "brycederriso"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/reactor/handler/cluster/dr/BackupRestoreSaltConfigGenerator.java", "diffHunk": "@@ -27,14 +26,17 @@\n \n     public static final String AWS_REGION_KEY = \"aws_region\";\n \n-    public SaltConfig createSaltConfig(String location, String backupId, Stack stack) throws URISyntaxException {\n+    public static final String RANGER_ADMIN_GROUP = \"ranger_admin_group\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44a0f58b149ab261e205e4c7f4257ade0f401d0e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwMTY3NA==", "bodyText": "suggestion: refer to this from public constant attached to the BackupRestoreSaltConfigGenerator instead of redefining a string literal that must match.", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#discussion_r467301674", "createdAt": "2020-08-07T21:58:06Z", "author": {"login": "brycederriso"}, "path": "datalake/src/test/java/com/sequenceiq/datalake/service/sdx/dr/SdxDatabaseDrServiceTest.java", "diffHunk": "@@ -40,6 +40,8 @@\n \n     private static final String BACKUPLOCATION = \"location/of/backup\";\n \n+    private static final String RANGERADMINGROUP = \"ranger_admin_group\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44a0f58b149ab261e205e4c7f4257ade0f401d0e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwNjU5Nw==", "bodyText": "question: Could you move this set down with the rest of the shell options? Lines 9-10.\nset -o xtrace", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#discussion_r467306597", "createdAt": "2020-08-07T22:06:06Z", "author": {"login": "brycederriso"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/disaster_recovery/scripts/backup_db.sh", "diffHunk": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/bin/bash -x", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44a0f58b149ab261e205e4c7f4257ade0f401d0e"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzMTc1OQ==", "bodyText": "question: Should this actually be a LOGGER.info or debug?", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#discussion_r467931759", "createdAt": "2020-08-10T14:12:07Z", "author": {"login": "brycederriso"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/reactor/handler/cluster/dr/backup/DatabaseBackupHandler.java", "diffHunk": "@@ -71,7 +88,14 @@ protected Selectable doAccept(HandlerEvent event) {\n             GatewayConfig gatewayConfig = gatewayConfigService.getGatewayConfig(stack, gatewayInstance, cluster.hasGateway());\n             Set<String> gatewayFQDN = Collections.singleton(gatewayInstance.getDiscoveryFQDN());\n             ExitCriteriaModel exitModel = ClusterDeletionBasedExitCriteriaModel.clusterDeletionBasedModel(stackId, cluster.getId());\n-            SaltConfig saltConfig = saltConfigGenerator.createSaltConfig(request.getBackupLocation(), request.getBackupId(), stack);\n+            Optional<LdapView> ldapView = ldapConfigService.get(stack.getEnvironmentCrn(), stack.getName());\n+            String virtualGroupsEnvironmentCrn = environmentConfigProvider.getParentEnvironmentCrn(stack.getEnvironmentCrn());\n+            String adminGroup = ldapView.orElseThrow(() -> new CloudbreakServiceException(\"Ranger admin group not found.\"))\n+                    .getAdminGroup();\n+            LOGGER.error(\"Admin Group:\", adminGroup);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a458e34d0f968cff4012c12c7419da0893e4ef"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzMTk4NA==", "bodyText": "praise: Good use of orElseThrow().", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#discussion_r467931984", "createdAt": "2020-08-10T14:12:26Z", "author": {"login": "brycederriso"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/reactor/handler/cluster/dr/backup/DatabaseBackupHandler.java", "diffHunk": "@@ -71,7 +88,14 @@ protected Selectable doAccept(HandlerEvent event) {\n             GatewayConfig gatewayConfig = gatewayConfigService.getGatewayConfig(stack, gatewayInstance, cluster.hasGateway());\n             Set<String> gatewayFQDN = Collections.singleton(gatewayInstance.getDiscoveryFQDN());\n             ExitCriteriaModel exitModel = ClusterDeletionBasedExitCriteriaModel.clusterDeletionBasedModel(stackId, cluster.getId());\n-            SaltConfig saltConfig = saltConfigGenerator.createSaltConfig(request.getBackupLocation(), request.getBackupId(), stack);\n+            Optional<LdapView> ldapView = ldapConfigService.get(stack.getEnvironmentCrn(), stack.getName());\n+            String virtualGroupsEnvironmentCrn = environmentConfigProvider.getParentEnvironmentCrn(stack.getEnvironmentCrn());\n+            String adminGroup = ldapView.orElseThrow(() -> new CloudbreakServiceException(\"Ranger admin group not found.\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a458e34d0f968cff4012c12c7419da0893e4ef"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzNDUwMQ==", "bodyText": "suggestion: If this block of additions is identical to the one in DatabaseBackupHandler, could we move it into it's own class for retrieving the rangerAdminGroup and then inject just that single class in both handlers?\nI think that could help improve the testability of this functionality, and help reduce the number of direct dependencies for these ...Handlers.", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#discussion_r467934501", "createdAt": "2020-08-10T14:16:10Z", "author": {"login": "brycederriso"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/reactor/handler/cluster/dr/restore/DatabaseRestoreHandler.java", "diffHunk": "@@ -71,7 +88,14 @@ protected Selectable doAccept(HandlerEvent event) {\n             GatewayConfig gatewayConfig = gatewayConfigService.getGatewayConfig(stack, gatewayInstance, cluster.hasGateway());\n             Set<String> gatewayFQDN = Collections.singleton(gatewayInstance.getDiscoveryFQDN());\n             ExitCriteriaModel exitModel = ClusterDeletionBasedExitCriteriaModel.clusterDeletionBasedModel(stackId, cluster.getId());\n-            SaltConfig saltConfig = saltConfigGenerator.createSaltConfig(request.getBackupLocation(), request.getBackupId(), stack);\n+            Optional<LdapView> ldapView = ldapConfigService.get(stack.getEnvironmentCrn(), stack.getName());\n+            String virtualGroupsEnvironmentCrn = environmentConfigProvider.getParentEnvironmentCrn(stack.getEnvironmentCrn());\n+            String adminGroup = ldapView.orElseThrow(() -> new CloudbreakServiceException(\"Ranger admin group not found.\"))\n+                    .getAdminGroup();\n+            LOGGER.error(\"Admin Group:\", adminGroup);\n+            VirtualGroupRequest virtualGroupRequest = new VirtualGroupRequest(virtualGroupsEnvironmentCrn, adminGroup);\n+            String rangerAdminGroup = virtualGroupService.getVirtualGroup(virtualGroupRequest, UmsRight.RANGER_ADMIN.getRight());\n+            SaltConfig saltConfig = saltConfigGenerator.createSaltConfig(request.getBackupLocation(), request.getBackupId(), rangerAdminGroup, stack);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a458e34d0f968cff4012c12c7419da0893e4ef"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzNzk3NQ==", "bodyText": "question: How confident are we that RANGER_WAG will never be in the SQL files that we're using?\nIs there a string we could use here that is both invalid SQL (preventing restoration unless replacement occurs) and that we can be sure won't show up as part of the dump?", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#discussion_r467937975", "createdAt": "2020-08-10T14:21:28Z", "author": {"login": "brycederriso"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/disaster_recovery/scripts/backup_db.sh", "diffHunk": "@@ -81,21 +87,47 @@ run_azure_backup() {\n   rmdir -v \"$DATE_DIR\" > >(tee -a $LOGFILE) 2> >(tee -a $LOGFILE >&2)\n }\n \n+replace_ranger_group_before_export() {\n+  doLog \"INFO Replacing \"$1\" with RANGER_WAG in the dump before export\"\n+  echo \"sed --in-place=\"original\" 's/\"$1\"/RANGER_WAG/g' $2\"\n+  ret_code=$(sed --in-place=\"original\" -e s/\"$1\"/RANGER_WAG/g \"$2\" || echo $?)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a458e34d0f968cff4012c12c7419da0893e4ef"}, "originalPosition": 54}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab60adf30552d56d4daaee57d0f4ca460b873e6d", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ab60adf30552d56d4daaee57d0f4ca460b873e6d", "committedDate": "2020-08-10T16:41:57Z", "message": "CB-8274: Re-write ranger admin group in ranger policies.Addressed review comments."}, "afterCommit": {"oid": "e67dd692fa4d9dd4b97405279c4c794cf95beca8", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/e67dd692fa4d9dd4b97405279c4c794cf95beca8", "committedDate": "2020-08-10T18:38:37Z", "message": "CB-8274: Re-write ranger admin group in ranger policies.Addressed review comments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e67dd692fa4d9dd4b97405279c4c794cf95beca8", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/e67dd692fa4d9dd4b97405279c4c794cf95beca8", "committedDate": "2020-08-10T18:38:37Z", "message": "CB-8274: Re-write ranger admin group in ranger policies.Addressed review comments."}, "afterCommit": {"oid": "41d6a523a49d89e6d7ce65ef1b97689bbb1d1950", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/41d6a523a49d89e6d7ce65ef1b97689bbb1d1950", "committedDate": "2020-08-10T18:43:18Z", "message": "CB-8274: Re-write ranger admin group in ranger policies.Addressed review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDg3Nzgz", "url": "https://github.com/hortonworks/cloudbreak/pull/8757#pullrequestreview-464487783", "createdAt": "2020-08-10T18:51:24Z", "commit": {"oid": "41d6a523a49d89e6d7ce65ef1b97689bbb1d1950"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e29243169a74edefd4ff673ad708393984599966", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/e29243169a74edefd4ff673ad708393984599966", "committedDate": "2020-08-10T19:21:31Z", "message": "CB-8274: Re-write ranger admin group in ranger policies.Addressed review comments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "41d6a523a49d89e6d7ce65ef1b97689bbb1d1950", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/41d6a523a49d89e6d7ce65ef1b97689bbb1d1950", "committedDate": "2020-08-10T18:43:18Z", "message": "CB-8274: Re-write ranger admin group in ranger policies.Addressed review comments."}, "afterCommit": {"oid": "e29243169a74edefd4ff673ad708393984599966", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/e29243169a74edefd4ff673ad708393984599966", "committedDate": "2020-08-10T19:21:31Z", "message": "CB-8274: Re-write ranger admin group in ranger policies.Addressed review comments."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2439, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}