{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MTM4Nzc5", "number": 7346, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzoxNToxM1rODhyM1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo0MzoyNFrODhyigg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzUyMDg1OnYy", "diffSide": "RIGHT", "path": "flow/src/main/java/com/sequenceiq/flow/core/Flow2Handler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzoxNToxM1rOFstjdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOToyMjo0M1rOFswdGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQyODAyMg==", "bodyText": "Could you please write few unit tests?", "url": "https://github.com/hortonworks/cloudbreak/pull/7346#discussion_r382428022", "createdAt": "2020-02-21T07:15:13Z", "author": {"login": "topolyai5"}, "path": "flow/src/main/java/com/sequenceiq/flow/core/Flow2Handler.java", "diffHunk": "@@ -109,10 +109,16 @@ private void handle(String key, Payload payload, FlowParameters flowParameters,\n                         flowParameters.setFlowId(flowId);\n                         Flow flow = flowConfig.createFlow(flowId, payload.getResourceId());\n                         flow.initialize(contextParams);\n-                        flowLogService.save(flowParameters, flowChainId, key, payload, null, flowConfig.getClass(), flow.getCurrentState());\n+                        runningFlows.put(flow, flowChainId);\n+                        try {\n+                            flowLogService.save(flowParameters, flowChainId, key, payload, null, flowConfig.getClass(), flow.getCurrentState());\n+                        } catch (Exception e) {\n+                            LOGGER.error(\"Can't save flow: {}\", flowId);\n+                            runningFlows.remove(flowId);\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7f84282883a2a2e0a7c9d041ab41dd438f4d0bc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3NTU0NA==", "bodyText": "Done! Thanks", "url": "https://github.com/hortonworks/cloudbreak/pull/7346#discussion_r382475544", "createdAt": "2020-02-21T09:22:43Z", "author": {"login": "sodre90"}, "path": "flow/src/main/java/com/sequenceiq/flow/core/Flow2Handler.java", "diffHunk": "@@ -109,10 +109,16 @@ private void handle(String key, Payload payload, FlowParameters flowParameters,\n                         flowParameters.setFlowId(flowId);\n                         Flow flow = flowConfig.createFlow(flowId, payload.getResourceId());\n                         flow.initialize(contextParams);\n-                        flowLogService.save(flowParameters, flowChainId, key, payload, null, flowConfig.getClass(), flow.getCurrentState());\n+                        runningFlows.put(flow, flowChainId);\n+                        try {\n+                            flowLogService.save(flowParameters, flowChainId, key, payload, null, flowConfig.getClass(), flow.getCurrentState());\n+                        } catch (Exception e) {\n+                            LOGGER.error(\"Can't save flow: {}\", flowId);\n+                            runningFlows.remove(flowId);\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQyODAyMg=="}, "originalCommit": {"oid": "e7f84282883a2a2e0a7c9d041ab41dd438f4d0bc"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzU3NjM0OnYy", "diffSide": "RIGHT", "path": "flow/src/main/java/com/sequenceiq/cloudbreak/service/ha/HeartbeatService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo0MzoyNFrOFsuEdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo0MzoyNFrOFsuEdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzNjQ3MA==", "bodyText": "This method says nothing about when it should run. Can you please rename it or just inline the underlying implementation which is so simple:\nnodeConfig.isNodeIdSpecified()", "url": "https://github.com/hortonworks/cloudbreak/pull/7346#discussion_r382436470", "createdAt": "2020-02-21T07:43:24Z", "author": {"login": "foldik"}, "path": "flow/src/main/java/com/sequenceiq/cloudbreak/service/ha/HeartbeatService.java", "diffHunk": "@@ -119,12 +119,14 @@ public void heartbeat() {\n     @Scheduled(initialDelay = 35000L, fixedDelay = 30000L)\n     public void scheduledFlowDistribution() {\n         if (shouldRun()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7f84282883a2a2e0a7c9d041ab41dd438f4d0bc"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2760, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}