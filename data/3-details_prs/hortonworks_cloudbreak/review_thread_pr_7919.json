{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMjA4MzYw", "number": 7919, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjoyNDo1N1rOD3Rykw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjoyNDo1N1rOD3Rykw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5Mjg5NzQ3OnYy", "diffSide": "RIGHT", "path": "freeipa-client/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientException.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjoyNDo1N1rOGNcfTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjo1ODo1OVrOGOISAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTQzOA==", "bodyText": "Can we move this to the constructor and store a boolean flag? I think it would be better to compute this value once per exception.", "url": "https://github.com/hortonworks/cloudbreak/pull/7919#discussion_r416751438", "createdAt": "2020-04-28T16:24:57Z", "author": {"login": "handavid"}, "path": "freeipa-client/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientException.java", "diffHunk": "@@ -29,4 +29,8 @@ public FreeIpaClientException(String message, Throwable cause, OptionalInt statu\n     public OptionalInt getStatusCode() {\n         return statusCode;\n     }\n+\n+    public boolean isClientUnusable() {\n+        return FreeIpaClientExceptionUtil.isClientUnusable(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "414c9a4c85472333d7f6c73f9ba8631bba98cd32"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIxNDAzNw==", "bodyText": "I was thinking about the same, but ideally you would call it once, and also the whole code is based on passing the FreeIpaClientException to the util class, and we shouldn't do that in construction time. If it becomes a use-case that we call this method multiple times for the same exception I can refactor it", "url": "https://github.com/hortonworks/cloudbreak/pull/7919#discussion_r417214037", "createdAt": "2020-04-29T10:26:58Z", "author": {"login": "lacikaaa"}, "path": "freeipa-client/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientException.java", "diffHunk": "@@ -29,4 +29,8 @@ public FreeIpaClientException(String message, Throwable cause, OptionalInt statu\n     public OptionalInt getStatusCode() {\n         return statusCode;\n     }\n+\n+    public boolean isClientUnusable() {\n+        return FreeIpaClientExceptionUtil.isClientUnusable(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTQzOA=="}, "originalCommit": {"oid": "414c9a4c85472333d7f6c73f9ba8631bba98cd32"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2ODkyOA==", "bodyText": "sounds good. thanks!", "url": "https://github.com/hortonworks/cloudbreak/pull/7919#discussion_r417468928", "createdAt": "2020-04-29T16:58:59Z", "author": {"login": "handavid"}, "path": "freeipa-client/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientException.java", "diffHunk": "@@ -29,4 +29,8 @@ public FreeIpaClientException(String message, Throwable cause, OptionalInt statu\n     public OptionalInt getStatusCode() {\n         return statusCode;\n     }\n+\n+    public boolean isClientUnusable() {\n+        return FreeIpaClientExceptionUtil.isClientUnusable(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTQzOA=="}, "originalCommit": {"oid": "414c9a4c85472333d7f6c73f9ba8631bba98cd32"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2506, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}