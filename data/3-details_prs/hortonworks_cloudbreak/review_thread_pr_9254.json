{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2OTU2NDQ3", "number": 9254, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MjoxOVrOEzA0aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MjoxOVrOEzA0aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTI2MjQ4OnYy", "diffSide": "RIGHT", "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/disaster_recovery/scripts/backup_db.sh", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTo0MjoxOVrOHp-l1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMzoxNDo1M1rOH_o6zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTE1OA==", "bodyText": "how about if we pass the folder /hadoopfs/fs1 down  in a pillar. In that case if somebody change the volume logic then we automatically get the right value.", "url": "https://github.com/hortonworks/cloudbreak/pull/9254#discussion_r513779158", "createdAt": "2020-10-28T21:42:19Z", "author": {"login": "doktoric"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/disaster_recovery/scripts/backup_db.sh", "diffHunk": "@@ -29,6 +29,11 @@ RANGERGROUP=\"$5\"\n LOGFILE=${6:-/var/log/}/dl_postgres_backup.log\n echo \"Logs at ${LOGFILE}\"\n \n+if [[ -f /hadoopfs/fs1/database-cacerts/certs.pem ]]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d3d6cecc5da37de95eb8dd9bc47c0388bba86a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc4NzYzNA==", "bodyText": "Where should we set that pillar value? Is it already available in salt through the other changes @lajosrodek has made, or will I need to set it somewhere in the Java side?", "url": "https://github.com/hortonworks/cloudbreak/pull/9254#discussion_r513787634", "createdAt": "2020-10-28T21:59:50Z", "author": {"login": "brycederriso"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/disaster_recovery/scripts/backup_db.sh", "diffHunk": "@@ -29,6 +29,11 @@ RANGERGROUP=\"$5\"\n LOGFILE=${6:-/var/log/}/dl_postgres_backup.log\n echo \"Logs at ${LOGFILE}\"\n \n+if [[ -f /hadoopfs/fs1/database-cacerts/certs.pem ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTE1OA=="}, "originalCommit": {"oid": "21d3d6cecc5da37de95eb8dd9bc47c0388bba86a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MDkzOQ==", "bodyText": "That would certainly need changes in my logic as well once it happens. \ud83d\ude03\n@doktoric I agree this would be a better approach, and we shall indeed do it (not only here but also in other related parts). However, I am wondering if it is the right time to fix this now. Could we possibly postpone it to 2.33 and fix all affected things altogether?", "url": "https://github.com/hortonworks/cloudbreak/pull/9254#discussion_r513790939", "createdAt": "2020-10-28T22:07:33Z", "author": {"login": "lajosrodek"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/disaster_recovery/scripts/backup_db.sh", "diffHunk": "@@ -29,6 +29,11 @@ RANGERGROUP=\"$5\"\n LOGFILE=${6:-/var/log/}/dl_postgres_backup.log\n echo \"Logs at ${LOGFILE}\"\n \n+if [[ -f /hadoopfs/fs1/database-cacerts/certs.pem ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTE1OA=="}, "originalCommit": {"oid": "21d3d6cecc5da37de95eb8dd9bc47c0388bba86a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgyMTM4OQ==", "bodyText": "I've added a new value under the disaster_recovery pillar and tested backup + restore by rsyncing salt scripts and formulas across.\nWorking on testing with CB running locally, but I've not run that many CB components from IntelliJ before. working through it.", "url": "https://github.com/hortonworks/cloudbreak/pull/9254#discussion_r513821389", "createdAt": "2020-10-28T23:28:57Z", "author": {"login": "brycederriso"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/disaster_recovery/scripts/backup_db.sh", "diffHunk": "@@ -29,6 +29,11 @@ RANGERGROUP=\"$5\"\n LOGFILE=${6:-/var/log/}/dl_postgres_backup.log\n echo \"Logs at ${LOGFILE}\"\n \n+if [[ -f /hadoopfs/fs1/database-cacerts/certs.pem ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTE1OA=="}, "originalCommit": {"oid": "21d3d6cecc5da37de95eb8dd9bc47c0388bba86a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgyMjA0MQ==", "bodyText": "I'll monitor the build jobs and retry them.", "url": "https://github.com/hortonworks/cloudbreak/pull/9254#discussion_r513822041", "createdAt": "2020-10-28T23:30:56Z", "author": {"login": "brycederriso"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/disaster_recovery/scripts/backup_db.sh", "diffHunk": "@@ -29,6 +29,11 @@ RANGERGROUP=\"$5\"\n LOGFILE=${6:-/var/log/}/dl_postgres_backup.log\n echo \"Logs at ${LOGFILE}\"\n \n+if [[ -f /hadoopfs/fs1/database-cacerts/certs.pem ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTE1OA=="}, "originalCommit": {"oid": "21d3d6cecc5da37de95eb8dd9bc47c0388bba86a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ5Mjc1MQ==", "bodyText": "Has been solved in #9563.", "url": "https://github.com/hortonworks/cloudbreak/pull/9254#discussion_r536492751", "createdAt": "2020-12-05T03:14:53Z", "author": {"login": "lajosrodek"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/disaster_recovery/scripts/backup_db.sh", "diffHunk": "@@ -29,6 +29,11 @@ RANGERGROUP=\"$5\"\n LOGFILE=${6:-/var/log/}/dl_postgres_backup.log\n echo \"Logs at ${LOGFILE}\"\n \n+if [[ -f /hadoopfs/fs1/database-cacerts/certs.pem ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTE1OA=="}, "originalCommit": {"oid": "21d3d6cecc5da37de95eb8dd9bc47c0388bba86a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2025, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}