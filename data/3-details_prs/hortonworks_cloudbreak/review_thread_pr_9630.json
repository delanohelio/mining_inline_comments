{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NTM0MDU3", "number": 9630, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzo1NzowNlrOFD_zpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzo1NzowNlrOFD_zpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NzM1NDYyOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaHealthDetailsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzo1NzowNlrOID52bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzo1NzowNlrOID52bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NDQ2MQ==", "bodyText": "we have 3 checks here, either of them fails we will set the status to unhealthy. Will it be obvious from the logs while we set it to unhealthy or shall we add some extra log here?\nI'm just worried we will have to dig deep why it's unhealthy, but maybe it's covered by other logs.", "url": "https://github.com/hortonworks/cloudbreak/pull/9630#discussion_r540964461", "createdAt": "2020-12-11T13:57:06Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaHealthDetailsService.java", "diffHunk": "@@ -109,17 +111,29 @@ private void addUnreachableResponse(InstanceMetaData instance, HealthDetailsFree\n         response.addNodeHealthDetailsFreeIpaResponses(nodeResponse);\n         nodeResponse.setName(instance.getDiscoveryFQDN());\n         nodeResponse.setStatus(InstanceStatus.UNREACHABLE);\n+        nodeResponse.setInstanceId(instance.getInstanceId());\n         nodeResponse.addIssue(issue);\n     }\n \n     private HealthDetailsFreeIpaResponse updateResponse(Stack stack, HealthDetailsFreeIpaResponse response) {\n         response.setEnvironmentCrn(stack.getEnvironmentCrn());\n         response.setCrn(stack.getResourceCrn());\n         response.setName(stack.getName());\n-        if (isOverallHealthy(response)) {\n-            response.setStatus(DetailedStackStatus.PROVISIONED.getStatus());\n+\n+        Set<String> notTermiatedStackInstanceIds = stack.getAllInstanceMetaDataList().stream()\n+                .filter(not(InstanceMetaData::isTerminated))\n+                .map(InstanceMetaData::getInstanceId)\n+                .filter(Objects::nonNull)\n+                .collect(Collectors.toSet());\n+        List<InstanceStatus> nonTerminatedStatuses = response.getNodeHealthDetails().stream()\n+                .filter(nodeHealthDetails -> notTermiatedStackInstanceIds.contains(nodeHealthDetails.getInstanceId()))\n+                .map(NodeHealthDetails::getStatus)\n+                .collect(Collectors.toList());\n+        if (!nonTerminatedStatuses.isEmpty() &&\n+                areAllStatusTheSame(nonTerminatedStatuses) && !hasMissingStatus(nonTerminatedStatuses, notTermiatedStackInstanceIds)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c73f39329c783b235352776a3c649f30548b0e9"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3453, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}