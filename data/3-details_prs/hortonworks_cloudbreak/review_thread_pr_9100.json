{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NzM0OTQ4", "number": 9100, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0NzowNlrOEogsDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0NzowNlrOEogsDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTE0MDYwOnYy", "diffSide": "RIGHT", "path": "authorization-common/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0NzowNlrOHZpPNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo1MDo1NVrOHZpXDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1MjA4Ng==", "bodyText": "Please fix this typo accound id to account id", "url": "https://github.com/hortonworks/cloudbreak/pull/9100#discussion_r496652086", "createdAt": "2020-09-29T11:47:06Z", "author": {"login": "foldik"}, "path": "authorization-common/README.md", "diffHunk": "@@ -118,11 +114,12 @@ Some APIs are used internal only between services, in this case we are using int\n \n #### But what about account id?\n \n-We are using account id in service layer heavily, but internal actor CRN doesn't have that information, so there are specific requirements for APIs which can called with internal actor:\n+We are using account id in service layer heavily, but internal actor CRN doesn't have that information, so there are specific requirements for APIs which can be called with internal actor:\n \n Your method in the Controller class should have at least one parameter:\n - which is some kind of resource CRN -> annotate the parameter with `@TenantAwareParam`, which will extract the account id from CRN parameter and use that in lower layers\n-- or it is an accound id parameter -> annotate a CRN parameter with `@AccountId` and we'll use that in lower layers. Please note that `@AccountId` is also a validation annotation, thus you need to place it on the API interface method's parameter.\n+- or it is an accound id parameter -> annotate the parameter with `@AccountId` and we'll use that in lower layers. Please note that `@AccountId` is also a validation annotation, thus you need to place it on the API interface method's parameter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bb07c93084b56c0adf4ac63c8d2280f35bfe89"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NDA5Mg==", "bodyText": "thx, fixed", "url": "https://github.com/hortonworks/cloudbreak/pull/9100#discussion_r496654092", "createdAt": "2020-09-29T11:50:55Z", "author": {"login": "horadla23"}, "path": "authorization-common/README.md", "diffHunk": "@@ -118,11 +114,12 @@ Some APIs are used internal only between services, in this case we are using int\n \n #### But what about account id?\n \n-We are using account id in service layer heavily, but internal actor CRN doesn't have that information, so there are specific requirements for APIs which can called with internal actor:\n+We are using account id in service layer heavily, but internal actor CRN doesn't have that information, so there are specific requirements for APIs which can be called with internal actor:\n \n Your method in the Controller class should have at least one parameter:\n - which is some kind of resource CRN -> annotate the parameter with `@TenantAwareParam`, which will extract the account id from CRN parameter and use that in lower layers\n-- or it is an accound id parameter -> annotate a CRN parameter with `@AccountId` and we'll use that in lower layers. Please note that `@AccountId` is also a validation annotation, thus you need to place it on the API interface method's parameter.\n+- or it is an accound id parameter -> annotate the parameter with `@AccountId` and we'll use that in lower layers. Please note that `@AccountId` is also a validation annotation, thus you need to place it on the API interface method's parameter.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1MjA4Ng=="}, "originalCommit": {"oid": "42bb07c93084b56c0adf4ac63c8d2280f35bfe89"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2214, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}