{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTA1MzYw", "number": 8739, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNTo0NjozN1rOEV4uxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNTo0NjozN1rOEV4uxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzg1MDMxOnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/proxy/v1/controller/ProxyController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNTo0NjozN1rOG85dpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjowOToyOVrOG86YfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwOTIyMQ==", "bodyText": "accountId should be annotated with @AccountId, if the method is internal only", "url": "https://github.com/hortonworks/cloudbreak/pull/8739#discussion_r466509221", "createdAt": "2020-08-06T15:46:37Z", "author": {"login": "horadla23"}, "path": "environment/src/main/java/com/sequenceiq/environment/proxy/v1/controller/ProxyController.java", "diffHunk": "@@ -55,39 +55,45 @@ public ProxyController(ProxyConfigService proxyConfigService,\n     }\n \n     @Override\n-    @CheckPermissionByAccount(action = AuthorizationResourceAction.ENVIRONMENT_READ)\n+    @CheckPermissionByAccount(action = AuthorizationResourceAction.POWERUSER_ONLY)\n     public ProxyResponses list() {\n         String accountId = ThreadBasedUserCrnProvider.getAccountId();\n         Set<ProxyConfig> listInAccount = proxyConfigService.listInAccount(accountId);\n         return new ProxyResponses(new HashSet<>(proxyConfigToProxyResponseConverter.convert(listInAccount)));\n     }\n \n     @Override\n-    @CheckPermissionByAccount(action = AuthorizationResourceAction.ENVIRONMENT_READ)\n+    @CheckPermissionByAccount(action = AuthorizationResourceAction.POWERUSER_ONLY)\n     public ProxyResponse getByName(String name) {\n         String accountId = ThreadBasedUserCrnProvider.getAccountId();\n         ProxyConfig config = proxyConfigService.getByNameForAccountId(name, accountId);\n         return proxyConfigToProxyResponseConverter.convert(config);\n     }\n \n     @Override\n-    @CheckPermissionByAccount(action = AuthorizationResourceAction.ENVIRONMENT_READ)\n-    public ProxyResponse getByEnvironmentCrn(@ResourceCrn @TenantAwareParam String environmentCrn) {\n+    @InternalOnly\n+    public String getCrnByAccountIdAndName(String accountId, String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca0b7cccdf61a4238644a0ade7e08e1db192afb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUyNDI4NQ==", "bodyText": "Thanks!", "url": "https://github.com/hortonworks/cloudbreak/pull/8739#discussion_r466524285", "createdAt": "2020-08-06T16:09:29Z", "author": {"login": "sodre90"}, "path": "environment/src/main/java/com/sequenceiq/environment/proxy/v1/controller/ProxyController.java", "diffHunk": "@@ -55,39 +55,45 @@ public ProxyController(ProxyConfigService proxyConfigService,\n     }\n \n     @Override\n-    @CheckPermissionByAccount(action = AuthorizationResourceAction.ENVIRONMENT_READ)\n+    @CheckPermissionByAccount(action = AuthorizationResourceAction.POWERUSER_ONLY)\n     public ProxyResponses list() {\n         String accountId = ThreadBasedUserCrnProvider.getAccountId();\n         Set<ProxyConfig> listInAccount = proxyConfigService.listInAccount(accountId);\n         return new ProxyResponses(new HashSet<>(proxyConfigToProxyResponseConverter.convert(listInAccount)));\n     }\n \n     @Override\n-    @CheckPermissionByAccount(action = AuthorizationResourceAction.ENVIRONMENT_READ)\n+    @CheckPermissionByAccount(action = AuthorizationResourceAction.POWERUSER_ONLY)\n     public ProxyResponse getByName(String name) {\n         String accountId = ThreadBasedUserCrnProvider.getAccountId();\n         ProxyConfig config = proxyConfigService.getByNameForAccountId(name, accountId);\n         return proxyConfigToProxyResponseConverter.convert(config);\n     }\n \n     @Override\n-    @CheckPermissionByAccount(action = AuthorizationResourceAction.ENVIRONMENT_READ)\n-    public ProxyResponse getByEnvironmentCrn(@ResourceCrn @TenantAwareParam String environmentCrn) {\n+    @InternalOnly\n+    public String getCrnByAccountIdAndName(String accountId, String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwOTIyMQ=="}, "originalCommit": {"oid": "7ca0b7cccdf61a4238644a0ade7e08e1db192afb"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3029, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}