{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNDkzNzQ0", "number": 7029, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODozNDo0OVrODWxaNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODozNDo0OVrODWxaNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjA0NzkxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/GatewaySecurityGroupWithDefaultGatewayCidrsDecorator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODozNDo0OVrOFbuHYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwOToyMzowNVrOFbvWcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMTQyNg==", "bodyText": "Can we use a simpler name? Like GatewaySecurityGroupDecorator?", "url": "https://github.com/hortonworks/cloudbreak/pull/7029#discussion_r364611426", "createdAt": "2020-01-09T08:34:49Z", "author": {"login": "keyki"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/GatewaySecurityGroupWithDefaultGatewayCidrsDecorator.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package com.sequenceiq.cloudbreak.service.stack;\n+\n+import static com.sequenceiq.cloudbreak.service.securityrule.SecurityRuleService.TCP_PROTOCOL;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.CollectionUtils;\n+\n+import com.sequenceiq.cloudbreak.domain.SecurityGroup;\n+import com.sequenceiq.cloudbreak.domain.SecurityRule;\n+import com.sequenceiq.cloudbreak.domain.stack.Stack;\n+import com.sequenceiq.cloudbreak.domain.stack.instance.InstanceGroup;\n+import com.sequenceiq.common.api.type.InstanceGroupType;\n+import com.sequenceiq.common.api.type.Tunnel;\n+\n+@Component\n+public class GatewaySecurityGroupWithDefaultGatewayCidrsDecorator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYzMTY2Nw==", "bodyText": "renamed", "url": "https://github.com/hortonworks/cloudbreak/pull/7029#discussion_r364631667", "createdAt": "2020-01-09T09:23:05Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/GatewaySecurityGroupWithDefaultGatewayCidrsDecorator.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package com.sequenceiq.cloudbreak.service.stack;\n+\n+import static com.sequenceiq.cloudbreak.service.securityrule.SecurityRuleService.TCP_PROTOCOL;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.CollectionUtils;\n+\n+import com.sequenceiq.cloudbreak.domain.SecurityGroup;\n+import com.sequenceiq.cloudbreak.domain.SecurityRule;\n+import com.sequenceiq.cloudbreak.domain.stack.Stack;\n+import com.sequenceiq.cloudbreak.domain.stack.instance.InstanceGroup;\n+import com.sequenceiq.common.api.type.InstanceGroupType;\n+import com.sequenceiq.common.api.type.Tunnel;\n+\n+@Component\n+public class GatewaySecurityGroupWithDefaultGatewayCidrsDecorator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMTQyNg=="}, "originalCommit": null, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2958, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}