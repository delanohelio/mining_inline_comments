{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMjUwMDE4", "number": 8465, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowMDowNFrOEKZ9hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToyOTowNVrOEKb5hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzQ2NTY1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowMDowNFrOGrbH-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowMDowNFrOGrbH-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4NjM2Mg==", "bodyText": "Pls. ensure this is NPE safe", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448186362", "createdAt": "2020-07-01T08:00:04Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzcxNTg1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTowOTo0OFrOGrdlCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTowOTo0OFrOGrdlCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNjU2OQ==", "bodyText": "Pls. ensure this is NPE safe", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448226569", "createdAt": "2020-07-01T09:09:48Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mzc0MDI5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToxNjozNFrOGrd0Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToxNjozNFrOGrd0Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMDQ4Mw==", "bodyText": "Pls. ensure this is NPE safe", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448230483", "createdAt": "2020-07-01T09:16:34Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentIm.getCmBuildNumber().equals(targetIm.getCmBuildNumber());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mzc0MTQ0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToxNjo1N1rOGrd1Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToxNjo1N1rOGrd1Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMDY3OA==", "bodyText": "Pls. ensure this is NPE safe", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448230678", "createdAt": "2020-07-01T09:16:57Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentIm.getCmBuildNumber().equals(targetIm.getCmBuildNumber());\n+        boolean clusterRuntimeUpgradeNeeded = !currentRuntimeBuildNumber.equals(targetIm.getStackDetails().getStackBuildNumber());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mzc1MTE4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToxOTo0N1rOGrd7fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDo1MzowMlrOGrpZqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMjMxNw==", "bodyText": "could you pls add some extra logging here for the different clauses?", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448232317", "createdAt": "2020-07-01T09:19:47Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentIm.getCmBuildNumber().equals(targetIm.getCmBuildNumber());\n+        boolean clusterRuntimeUpgradeNeeded = !currentRuntimeBuildNumber.equals(targetIm.getStackDetails().getStackBuildNumber());\n \n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_FINISHED, clusterManagerVersion);\n+        if (clusterManagerUpdateNeeded) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyMDI2Ng==", "bodyText": "The flowMessageService.fireEventAndLog() method will log the different kind of messages. I think it should be enough. What do you think?", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448420266", "createdAt": "2020-07-01T14:53:02Z", "author": {"login": "schfeca75"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentIm.getCmBuildNumber().equals(targetIm.getCmBuildNumber());\n+        boolean clusterRuntimeUpgradeNeeded = !currentRuntimeBuildNumber.equals(targetIm.getStackDetails().getStackBuildNumber());\n \n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_FINISHED, clusterManagerVersion);\n+        if (clusterManagerUpdateNeeded) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMjMxNw=="}, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mzc2MDcwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToyMjoyN1rOGreBdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToyMjoyN1rOGreBdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMzg0NA==", "bodyText": "clusterManagerUpdateNeeded and clusterRuntimeUpgradeNeeded are used twice, could you pls extract those to separate methods?", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448233844", "createdAt": "2020-07-01T09:22:27Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mzc4MzEwOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToyOTowNVrOGreP1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNToxNToyMlrOGrqTtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzNzUyNA==", "bodyText": "Nice coverage, well done!", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448237524", "createdAt": "2020-07-01T09:29:05Z", "author": {"login": "pdarvasi"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeServiceTest.java", "diffHunk": "@@ -43,6 +78,124 @@ public void setUp() {\n         MockitoAnnotations.initMocks(this);\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQzNTEyNg==", "bodyText": "thank you!", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448435126", "createdAt": "2020-07-01T15:15:22Z", "author": {"login": "schfeca75"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeServiceTest.java", "diffHunk": "@@ -43,6 +78,124 @@ public void setUp() {\n         MockitoAnnotations.initMocks(this);\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzNzUyNA=="}, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3106, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}