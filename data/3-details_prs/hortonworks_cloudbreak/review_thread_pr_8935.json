{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMzQzNjI1", "number": 8935, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjoyMjoyMFrOEgy4Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjoyMzoxMVrOEgy5Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODIzNDc5OnYy", "diffSide": "RIGHT", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjoyMjoyMFrOHNxjXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNjo1NjozNVrOHOmDcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTQwNg==", "bodyText": "isDeleteProtectionEnabled", "url": "https://github.com/hortonworks/cloudbreak/pull/8935#discussion_r484205406", "createdAt": "2020-09-07T06:22:20Z", "author": {"login": "doktoric"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java", "diffHunk": "@@ -44,6 +49,28 @@ public ExternalDatabaseStatus getStatus(AuthenticatedContext ac, DatabaseStack d\n                 .get();\n     }\n \n+    public boolean isDeleteProtectonEnabled(AuthenticatedContext ac, DatabaseStack dbStack) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18383da33481999e2be15d8d43d45f687dd83252"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA2NTU4NQ==", "bodyText": "fixed.", "url": "https://github.com/hortonworks/cloudbreak/pull/8935#discussion_r485065585", "createdAt": "2020-09-08T16:56:35Z", "author": {"login": "kkalvagadda1"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java", "diffHunk": "@@ -44,6 +49,28 @@ public ExternalDatabaseStatus getStatus(AuthenticatedContext ac, DatabaseStack d\n                 .get();\n     }\n \n+    public boolean isDeleteProtectonEnabled(AuthenticatedContext ac, DatabaseStack dbStack) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTQwNg=="}, "originalCommit": {"oid": "18383da33481999e2be15d8d43d45f687dd83252"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODIzNTQ5OnYy", "diffSide": "RIGHT", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsResourceConnector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjoyMjo0MFrOHNxjxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNjo1NjoyNlrOHOmDHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTUxMA==", "bodyText": "isDeleteProtectionEnabled", "url": "https://github.com/hortonworks/cloudbreak/pull/8935#discussion_r484205510", "createdAt": "2020-09-07T06:22:40Z", "author": {"login": "doktoric"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsResourceConnector.java", "diffHunk": "@@ -118,6 +121,10 @@ private boolean deployingToSameVPC(AwsNetworkView awsNetworkView, boolean existi\n     @Override\n     public List<CloudResourceStatus> terminateDatabaseServer(AuthenticatedContext ac, DatabaseStack stack,\n             List<CloudResource> resources, PersistenceNotifier persistenceNotifier, boolean force) throws Exception {\n+        if(awsRdsStatusLookupService.isDeleteProtectonEnabled(ac, stack)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18383da33481999e2be15d8d43d45f687dd83252"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA2NTUwMQ==", "bodyText": "fixed.", "url": "https://github.com/hortonworks/cloudbreak/pull/8935#discussion_r485065501", "createdAt": "2020-09-08T16:56:26Z", "author": {"login": "kkalvagadda1"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsResourceConnector.java", "diffHunk": "@@ -118,6 +121,10 @@ private boolean deployingToSameVPC(AwsNetworkView awsNetworkView, boolean existi\n     @Override\n     public List<CloudResourceStatus> terminateDatabaseServer(AuthenticatedContext ac, DatabaseStack stack,\n             List<CloudResource> resources, PersistenceNotifier persistenceNotifier, boolean force) throws Exception {\n+        if(awsRdsStatusLookupService.isDeleteProtectonEnabled(ac, stack)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTUxMA=="}, "originalCommit": {"oid": "18383da33481999e2be15d8d43d45f687dd83252"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODIzNjk0OnYy", "diffSide": "RIGHT", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/scheduler/CustomAmazonWaiterProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjoyMzoxMVrOHNxklA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNjo1NzoxN1rOHOmFDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTcxNg==", "bodyText": "available ?", "url": "https://github.com/hortonworks/cloudbreak/pull/8935#discussion_r484205716", "createdAt": "2020-09-07T06:23:11Z", "author": {"login": "doktoric"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/scheduler/CustomAmazonWaiterProvider.java", "diffHunk": "@@ -81,4 +81,37 @@ public WaiterState getState() {\n                         new FixedDelayStrategy(DEFAULT_DELAY_IN_SECONDS)))\n                 .withExecutorService(WaiterExecutorServiceFactory.buildExecutorServiceForWaiter(\"AmazonRDSWaiters\")).build();\n     }\n+\n+    public Waiter<DescribeDBInstancesRequest> getDbInstanceModifyWaiter(AmazonRDS rdsClient) {\n+        return new WaiterBuilder<DescribeDBInstancesRequest, DescribeDBInstancesResult>()\n+                .withSdkFunction(new DescribeDBInstancesFunction(rdsClient))\n+                .withAcceptors(new WaiterAcceptor<DescribeDBInstancesResult>() {\n+                    @Override\n+                    public boolean matches(DescribeDBInstancesResult describeDBInstancesResult) {\n+                        return describeDBInstancesResult.getDBInstances().stream().allMatch(instance -> \"avaialble\".equals(instance.getDBInstanceStatus()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18383da33481999e2be15d8d43d45f687dd83252"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA2NTk5OA==", "bodyText": "yes. Updated.", "url": "https://github.com/hortonworks/cloudbreak/pull/8935#discussion_r485065998", "createdAt": "2020-09-08T16:57:17Z", "author": {"login": "kkalvagadda1"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/scheduler/CustomAmazonWaiterProvider.java", "diffHunk": "@@ -81,4 +81,37 @@ public WaiterState getState() {\n                         new FixedDelayStrategy(DEFAULT_DELAY_IN_SECONDS)))\n                 .withExecutorService(WaiterExecutorServiceFactory.buildExecutorServiceForWaiter(\"AmazonRDSWaiters\")).build();\n     }\n+\n+    public Waiter<DescribeDBInstancesRequest> getDbInstanceModifyWaiter(AmazonRDS rdsClient) {\n+        return new WaiterBuilder<DescribeDBInstancesRequest, DescribeDBInstancesResult>()\n+                .withSdkFunction(new DescribeDBInstancesFunction(rdsClient))\n+                .withAcceptors(new WaiterAcceptor<DescribeDBInstancesResult>() {\n+                    @Override\n+                    public boolean matches(DescribeDBInstancesResult describeDBInstancesResult) {\n+                        return describeDBInstancesResult.getDBInstances().stream().allMatch(instance -> \"avaialble\".equals(instance.getDBInstanceStatus()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTcxNg=="}, "originalCommit": {"oid": "18383da33481999e2be15d8d43d45f687dd83252"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2349, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}