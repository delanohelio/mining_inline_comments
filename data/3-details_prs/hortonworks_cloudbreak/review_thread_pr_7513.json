{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NjYyOTc0", "number": 7513, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjowOToxM1rODmXLsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjowOToxM1rODmXLsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTUyMzA2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/provision/ClusterCreationActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjowOToxM1rOFzvK1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjowOToxM1rOFzvK1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc5NDUxNg==", "bodyText": "Why is this StackEvent instead of CleanupFreeIpaEvent? Is it because we don't actually care about anything in the event?", "url": "https://github.com/hortonworks/cloudbreak/pull/7513#discussion_r389794516", "createdAt": "2020-03-09T16:09:13Z", "author": {"login": "handavid"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/provision/ClusterCreationActions.java", "diffHunk": "@@ -107,11 +112,33 @@ protected Selectable createRequest(StackContext context) {\n         };\n     }\n \n+    @Bean(name = \"CLEANUP_FREEIPA_STATE\")\n+    public Action<?, ?> cleanupFreeIpaAction() {\n+        return new AbstractStackCreationAction<>(HostMetadataSetupSuccess.class) {\n+\n+            @Inject\n+            private InstanceMetaDataService instanceMetaDataService;\n+\n+            @Override\n+            protected void doExecute(StackContext context, HostMetadataSetupSuccess payload, Map<Object, Object> variables) throws Exception {\n+                sendEvent(context);\n+            }\n+\n+            @Override\n+            protected Selectable createRequest(StackContext context) {\n+                Set<InstanceMetaData> instanceMetaData = instanceMetaDataService.findNotTerminatedForStack(context.getStack().getId());\n+                Set<String> hostNames = instanceMetaData.stream().map(InstanceMetaData::getDiscoveryFQDN).collect(Collectors.toSet());\n+                Set<String> ips = instanceMetaData.stream().map(InstanceMetaData::getPrivateIp).collect(Collectors.toSet());\n+                return new CleanupFreeIpaEvent(context.getStack().getId(), hostNames, ips);\n+            }\n+        };\n+    }\n+\n     @Bean(name = \"BOOTSTRAPPING_PUBLIC_ENDPOINT_STATE\")\n     public Action<?, ?> bootStrappingPublicEndpointAction() {\n-        return new AbstractStackCreationAction<>(HostMetadataSetupSuccess.class) {\n+        return new AbstractStackCreationAction<>(StackEvent.class) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f9ae5ed4cd4c7dfc5917f057c9a76bee2aa0f7"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2743, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}