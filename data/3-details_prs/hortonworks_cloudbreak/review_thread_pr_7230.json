{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxODA0ODgw", "number": 7230, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOToyNzoxMFrODfeRPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDozNzo0MVrODffu8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzI4MzgzOnYy", "diffSide": "RIGHT", "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/environment/model/request/EnvironmentRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOToyNzoxMFrOFpMgpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoxODoyOFrOFp2Qdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MDkwMw==", "bodyText": "can we use name or crn here ?", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378740903", "createdAt": "2020-02-13T09:27:10Z", "author": {"login": "doktoric"}, "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/environment/model/request/EnvironmentRequest.java", "diffHunk": "@@ -79,6 +79,9 @@\n     @ApiModelProperty(EnvironmentModelDescription.AWS_PARAMETERS)\n     private AwsEnvironmentParameters aws;\n \n+    @ApiModelProperty(value = EnvironmentModelDescription.PARENT_ENVIRONMENT_CRN)\n+    private String parentEnvironmentCrn;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyNDg4Ng==", "bodyText": "Done in af20f70", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r379424886", "createdAt": "2020-02-14T13:18:28Z", "author": {"login": "pkedvessy"}, "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/environment/model/request/EnvironmentRequest.java", "diffHunk": "@@ -79,6 +79,9 @@\n     @ApiModelProperty(EnvironmentModelDescription.AWS_PARAMETERS)\n     private AwsEnvironmentParameters aws;\n \n+    @ApiModelProperty(value = EnvironmentModelDescription.PARENT_ENVIRONMENT_CRN)\n+    private String parentEnvironmentCrn;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MDkwMw=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzI4NTA0OnYy", "diffSide": "RIGHT", "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/environment/model/response/DetailedEnvironmentResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOToyNzozNFrOFpMhdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoxODo0MVrOFp2Q1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MTEwOQ==", "bodyText": "I think it should be great to show the name as well", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378741109", "createdAt": "2020-02-13T09:27:34Z", "author": {"login": "doktoric"}, "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/environment/model/response/DetailedEnvironmentResponse.java", "diffHunk": "@@ -70,6 +70,8 @@ public void setCredential(CredentialResponse credential) {\n \n         private AwsEnvironmentParameters aws;\n \n+        private String parentEnvironmentCrn;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyNDk4MA==", "bodyText": "Done in af20f70", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r379424980", "createdAt": "2020-02-14T13:18:41Z", "author": {"login": "pkedvessy"}, "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/environment/model/response/DetailedEnvironmentResponse.java", "diffHunk": "@@ -70,6 +70,8 @@ public void setCredential(CredentialResponse credential) {\n \n         private AwsEnvironmentParameters aws;\n \n+        private String parentEnvironmentCrn;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MTEwOQ=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzI5MDIxOnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/freeipa/FreeIpaCreationHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOToyODo1N1rOFpMkgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoxNjo0NFrOFp2NpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MTg4OA==", "bodyText": "I think it should be an application property", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378741888", "createdAt": "2020-02-13T09:28:57Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/freeipa/FreeIpaCreationHandler.java", "diffHunk": "@@ -70,6 +74,8 @@\n \n     private static final List<String> DEFAULT_SECURITY_GROUP_PORTS = List.of(\"22\");\n \n+    private static final String YARN_NETWORK_CIDR = \"172.27.0.0/16\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyNDE2NA==", "bodyText": "Done in af20f70", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r379424164", "createdAt": "2020-02-14T13:16:44Z", "author": {"login": "pkedvessy"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/freeipa/FreeIpaCreationHandler.java", "diffHunk": "@@ -70,6 +74,8 @@\n \n     private static final List<String> DEFAULT_SECURITY_GROUP_PORTS = List.of(\"22\");\n \n+    private static final String YARN_NETWORK_CIDR = \"172.27.0.0/16\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MTg4OA=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzI5NTU5OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/freeipa/FreeIpaCreationHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTozMDoyOVrOFpMnwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoxNzowM1rOFp2OIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MjcyMQ==", "bodyText": "should we use the mock as well ? If we dont have this option for mock I am afraid that we can easily break this feature.", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378742721", "createdAt": "2020-02-13T09:30:29Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/freeipa/FreeIpaCreationHandler.java", "diffHunk": "@@ -143,13 +151,33 @@ private void createFreeIpa(Event<EnvironmentDto> environmentDtoEvent, Environmen\n                 dnsV1Endpoint.addDnsZoneForSubnetIds(addDnsZoneForSubnetIdsRequest);\n             }\n         } else {\n-            LOGGER.info(\"FreeIpa for environmentCrn '{}' already exists. Using this one.\", environment.getResourceCrn());\n+            LOGGER.info(\"FreeIpa for environmentCrn '{}' already exists. Using this one.\", environmentDto.getResourceCrn());\n             if (CREATE_IN_PROGRESS == freeIpa.get().getStatus()) {\n                 awaitFreeIpaCreation(environmentDtoEvent, environmentDto);\n             }\n         }\n     }\n \n+    private void attachParentFreeIpa(EnvironmentDto environmentDto) throws Exception {\n+        String parentEnvironmentCrn = environmentDto.getParentEnvironmentCrn();\n+        Optional<DescribeFreeIpaResponse> freeIpa = freeIpaService.describe(parentEnvironmentCrn);\n+        if (freeIpa.isPresent() && CloudPlatform.YARN.name().equalsIgnoreCase(environmentDto.getCloudPlatform())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyNDI5MA==", "bodyText": "Done in af20f70", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r379424290", "createdAt": "2020-02-14T13:17:03Z", "author": {"login": "pkedvessy"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/freeipa/FreeIpaCreationHandler.java", "diffHunk": "@@ -143,13 +151,33 @@ private void createFreeIpa(Event<EnvironmentDto> environmentDtoEvent, Environmen\n                 dnsV1Endpoint.addDnsZoneForSubnetIds(addDnsZoneForSubnetIdsRequest);\n             }\n         } else {\n-            LOGGER.info(\"FreeIpa for environmentCrn '{}' already exists. Using this one.\", environment.getResourceCrn());\n+            LOGGER.info(\"FreeIpa for environmentCrn '{}' already exists. Using this one.\", environmentDto.getResourceCrn());\n             if (CREATE_IN_PROGRESS == freeIpa.get().getStatus()) {\n                 awaitFreeIpaCreation(environmentDtoEvent, environmentDto);\n             }\n         }\n     }\n \n+    private void attachParentFreeIpa(EnvironmentDto environmentDto) throws Exception {\n+        String parentEnvironmentCrn = environmentDto.getParentEnvironmentCrn();\n+        Optional<DescribeFreeIpaResponse> freeIpa = freeIpaService.describe(parentEnvironmentCrn);\n+        if (freeIpa.isPresent() && CloudPlatform.YARN.name().equalsIgnoreCase(environmentDto.getCloudPlatform())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MjcyMQ=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzI5OTg4OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/EnvironmentValidatorService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTozMTozNlrOFpMqTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoxNzoxOVrOFp2OjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MzM3Mg==", "bodyText": "I think the name is more useful here", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378743372", "createdAt": "2020-02-13T09:31:36Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/EnvironmentValidatorService.java", "diffHunk": "@@ -73,6 +75,25 @@ public ValidationResultBuilder validateNetworkCreation(Environment environment,\n         return networkCreationValidator.validateNetworkCreation(environment, network, subnetMetas);\n     }\n \n+    public ValidationResult validateParentChildRelation(Environment environment, String parentEnvironmentCrn) {\n+        ValidationResultBuilder resultBuilder = new ValidationResultBuilder();\n+\n+        resultBuilder.ifError(() -> Objects.nonNull(parentEnvironmentCrn) && Objects.isNull(environment.getParentEnvironment()),\n+                String.format(\"Active parent environment with crn '%s' is not available in account '%s'.\", parentEnvironmentCrn, environment.getAccountId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyNDM5Nw==", "bodyText": "Done in af20f70", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r379424397", "createdAt": "2020-02-14T13:17:19Z", "author": {"login": "pkedvessy"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/EnvironmentValidatorService.java", "diffHunk": "@@ -73,6 +75,25 @@ public ValidationResultBuilder validateNetworkCreation(Environment environment,\n         return networkCreationValidator.validateNetworkCreation(environment, network, subnetMetas);\n     }\n \n+    public ValidationResult validateParentChildRelation(Environment environment, String parentEnvironmentCrn) {\n+        ValidationResultBuilder resultBuilder = new ValidationResultBuilder();\n+\n+        resultBuilder.ifError(() -> Objects.nonNull(parentEnvironmentCrn) && Objects.isNull(environment.getParentEnvironment()),\n+                String.format(\"Active parent environment with crn '%s' is not available in account '%s'.\", parentEnvironmentCrn, environment.getAccountId()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MzM3Mg=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzMwMjQ2OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/EnvironmentValidatorService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTozMjoxM1rOFpMruQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoxNzozN1rOFp2O-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MzczNw==", "bodyText": "can we expose the supported platforms to an application property ?", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378743737", "createdAt": "2020-02-13T09:32:13Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/EnvironmentValidatorService.java", "diffHunk": "@@ -73,6 +75,25 @@ public ValidationResultBuilder validateNetworkCreation(Environment environment,\n         return networkCreationValidator.validateNetworkCreation(environment, network, subnetMetas);\n     }\n \n+    public ValidationResult validateParentChildRelation(Environment environment, String parentEnvironmentCrn) {\n+        ValidationResultBuilder resultBuilder = new ValidationResultBuilder();\n+\n+        resultBuilder.ifError(() -> Objects.nonNull(parentEnvironmentCrn) && Objects.isNull(environment.getParentEnvironment()),\n+                String.format(\"Active parent environment with crn '%s' is not available in account '%s'.\", parentEnvironmentCrn, environment.getAccountId()));\n+        if (Objects.nonNull(environment.getParentEnvironment())) {\n+            resultBuilder.ifError(() -> environment.getParentEnvironment().getStatus() != EnvironmentStatus.AVAILABLE,\n+                    \"Parent environment should be in 'AVAILABLE' status.\");\n+            resultBuilder.ifError(() -> Objects.nonNull(environment.getParentEnvironment().getParentEnvironment()),\n+                    \"Parent environment is already a child environment.\");\n+            resultBuilder.ifError(() -> !CloudPlatform.YARN.name().equalsIgnoreCase(environment.getCloudPlatform()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyNDUwNA==", "bodyText": "Done in af20f70", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r379424504", "createdAt": "2020-02-14T13:17:37Z", "author": {"login": "pkedvessy"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/EnvironmentValidatorService.java", "diffHunk": "@@ -73,6 +75,25 @@ public ValidationResultBuilder validateNetworkCreation(Environment environment,\n         return networkCreationValidator.validateNetworkCreation(environment, network, subnetMetas);\n     }\n \n+    public ValidationResult validateParentChildRelation(Environment environment, String parentEnvironmentCrn) {\n+        ValidationResultBuilder resultBuilder = new ValidationResultBuilder();\n+\n+        resultBuilder.ifError(() -> Objects.nonNull(parentEnvironmentCrn) && Objects.isNull(environment.getParentEnvironment()),\n+                String.format(\"Active parent environment with crn '%s' is not available in account '%s'.\", parentEnvironmentCrn, environment.getAccountId()));\n+        if (Objects.nonNull(environment.getParentEnvironment())) {\n+            resultBuilder.ifError(() -> environment.getParentEnvironment().getStatus() != EnvironmentStatus.AVAILABLE,\n+                    \"Parent environment should be in 'AVAILABLE' status.\");\n+            resultBuilder.ifError(() -> Objects.nonNull(environment.getParentEnvironment().getParentEnvironment()),\n+                    \"Parent environment is already a child environment.\");\n+            resultBuilder.ifError(() -> !CloudPlatform.YARN.name().equalsIgnoreCase(environment.getCloudPlatform()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0MzczNw=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzMwNTM4OnYy", "diffSide": "RIGHT", "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/FreeIpaV1Endpoint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTozMzowOFrOFpMtmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMTozMTo0OFrOFpzwhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0NDIxOA==", "bodyText": "attach ?", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378744218", "createdAt": "2020-02-13T09:33:08Z", "author": {"login": "doktoric"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/FreeIpaV1Endpoint.java", "diffHunk": "@@ -39,6 +41,20 @@\n             nickname = \"createFreeIpaV1\")\n     DescribeFreeIpaResponse create(@Valid CreateFreeIpaRequest request);\n \n+    @POST\n+    @Path(\"/register_child_environment\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM4Mzk0MQ==", "bodyText": "Renamed", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r379383941", "createdAt": "2020-02-14T11:31:48Z", "author": {"login": "Bajzathd"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/FreeIpaV1Endpoint.java", "diffHunk": "@@ -39,6 +41,20 @@\n             nickname = \"createFreeIpaV1\")\n     DescribeFreeIpaResponse create(@Valid CreateFreeIpaRequest request);\n \n+    @POST\n+    @Path(\"/register_child_environment\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0NDIxOA=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzMwNTY3OnYy", "diffSide": "RIGHT", "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/FreeIpaV1Endpoint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTozMzoxM1rOFpMtxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMTozMTo1MlrOFpzwpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0NDI2MA==", "bodyText": "detach ?", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378744260", "createdAt": "2020-02-13T09:33:13Z", "author": {"login": "doktoric"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/FreeIpaV1Endpoint.java", "diffHunk": "@@ -39,6 +41,20 @@\n             nickname = \"createFreeIpaV1\")\n     DescribeFreeIpaResponse create(@Valid CreateFreeIpaRequest request);\n \n+    @POST\n+    @Path(\"/register_child_environment\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = FreeIpaOperationDescriptions.REGISTER_CHILD_ENVIRONMENT, produces = MediaType.APPLICATION_JSON, notes = FreeIpaNotes.FREEIPA_NOTES,\n+            nickname = \"registerChildEnvironmentV1\")\n+    void registerChildEnvironment(@Valid RegisterChildEnvironmentRequest request);\n+\n+    @POST\n+    @Path(\"/deregister_child_environment\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM4Mzk3Mg==", "bodyText": "Renamed", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r379383972", "createdAt": "2020-02-14T11:31:52Z", "author": {"login": "Bajzathd"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/FreeIpaV1Endpoint.java", "diffHunk": "@@ -39,6 +41,20 @@\n             nickname = \"createFreeIpaV1\")\n     DescribeFreeIpaResponse create(@Valid CreateFreeIpaRequest request);\n \n+    @POST\n+    @Path(\"/register_child_environment\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = FreeIpaOperationDescriptions.REGISTER_CHILD_ENVIRONMENT, produces = MediaType.APPLICATION_JSON, notes = FreeIpaNotes.FREEIPA_NOTES,\n+            nickname = \"registerChildEnvironmentV1\")\n+    void registerChildEnvironment(@Valid RegisterChildEnvironmentRequest request);\n+\n+    @POST\n+    @Path(\"/deregister_child_environment\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0NDI2MA=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzMwNjg4OnYy", "diffSide": "RIGHT", "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/describe/DescribeFreeIpaResponse.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTozMzozNVrOFpMujA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoxMDoyNlrOFpVKFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0NDQ2MA==", "bodyText": "childEnvironmentNames ?", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378744460", "createdAt": "2020-02-13T09:33:35Z", "author": {"login": "doktoric"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/describe/DescribeFreeIpaResponse.java", "diffHunk": "@@ -30,6 +30,9 @@\n     @ApiModelProperty(value = ModelDescriptions.ENVIRONMENT_CRN, required = true)\n     private String environmentCrn;\n \n+    @ApiModelProperty(ModelDescriptions.CHILD_ENVIRONMENT_CRN_LIST)\n+    private List<String> childEnvironmentCrns;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3OTQ0Nw==", "bodyText": "everything is crn driven, I would stick with it", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378779447", "createdAt": "2020-02-13T10:39:16Z", "author": {"login": "lacikaaa"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/describe/DescribeFreeIpaResponse.java", "diffHunk": "@@ -30,6 +30,9 @@\n     @ApiModelProperty(value = ModelDescriptions.ENVIRONMENT_CRN, required = true)\n     private String environmentCrn;\n \n+    @ApiModelProperty(ModelDescriptions.CHILD_ENVIRONMENT_CRN_LIST)\n+    private List<String> childEnvironmentCrns;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0NDQ2MA=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4MjU4MQ==", "bodyText": "ok then", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378882581", "createdAt": "2020-02-13T14:10:26Z", "author": {"login": "doktoric"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/describe/DescribeFreeIpaResponse.java", "diffHunk": "@@ -30,6 +30,9 @@\n     @ApiModelProperty(value = ModelDescriptions.ENVIRONMENT_CRN, required = true)\n     private String environmentCrn;\n \n+    @ApiModelProperty(ModelDescriptions.CHILD_ENVIRONMENT_CRN_LIST)\n+    private List<String> childEnvironmentCrns;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0NDQ2MA=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzMxMjY1OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/repository/StackRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTozNToxM1rOFpMyFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDoyOTo1OFrOFpOj8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0NTM2NA==", "bodyText": "can we check for the status? I am afraid if somebody change the terminated = -1 we will be broken", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378745364", "createdAt": "2020-02-13T09:35:13Z", "author": {"login": "doktoric"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/repository/StackRepository.java", "diffHunk": "@@ -67,6 +67,11 @@\n             + \"LEFT JOIN FETCH ig.instanceMetaData WHERE s.environmentCrn = :environmentCrn AND s.accountId = :accountId AND s.terminated = -1\")\n     Optional<Stack> findByEnvironmentCrnAndAccountIdWithList(@Param(\"environmentCrn\") String environmentCrn, @Param(\"accountId\") String accountId);\n \n+    @CheckPermission(action = ResourceAction.READ)\n+    @Query(\"SELECT s FROM Stack s LEFT JOIN FETCH s.childEnvironments c LEFT JOIN FETCH s.instanceGroups ig \"\n+            + \"LEFT JOIN FETCH ig.instanceMetaData WHERE c.environmentCrn = :environmentCrn AND s.accountId = :accountId AND s.terminated = -1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3NDUxNA==", "bodyText": "we work only with non-terminated stacks, which is indicated by this everywhere. I won't join another table for this reason, if not really necessary", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378774514", "createdAt": "2020-02-13T10:29:58Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/repository/StackRepository.java", "diffHunk": "@@ -67,6 +67,11 @@\n             + \"LEFT JOIN FETCH ig.instanceMetaData WHERE s.environmentCrn = :environmentCrn AND s.accountId = :accountId AND s.terminated = -1\")\n     Optional<Stack> findByEnvironmentCrnAndAccountIdWithList(@Param(\"environmentCrn\") String environmentCrn, @Param(\"accountId\") String accountId);\n \n+    @CheckPermission(action = ResourceAction.READ)\n+    @Query(\"SELECT s FROM Stack s LEFT JOIN FETCH s.childEnvironments c LEFT JOIN FETCH s.instanceGroups ig \"\n+            + \"LEFT JOIN FETCH ig.instanceMetaData WHERE c.environmentCrn = :environmentCrn AND s.accountId = :accountId AND s.terminated = -1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0NTM2NA=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzM5MjExOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/entity/Stack.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTo1ODo0M1rOFpNjcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzowNzo0MlrOFp1_3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1ODAwMA==", "bodyText": "do we really need it eagerly? this would mean an extra join every time we fetch the stack", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378758000", "createdAt": "2020-02-13T09:58:43Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/entity/Stack.java", "diffHunk": "@@ -48,6 +50,9 @@\n \n     private String environmentCrn;\n \n+    @OneToMany(mappedBy = \"stack\", fetch = FetchType.EAGER, cascade = CascadeType.ALL, orphanRemoval = true)\n+    private List<ChildEnvironment> childEnvironments = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMDYzNg==", "bodyText": "Seems like we do not really need it, I have a PR for this alone\n#7288", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r379420636", "createdAt": "2020-02-14T13:07:42Z", "author": {"login": "Bajzathd"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/entity/Stack.java", "diffHunk": "@@ -48,6 +50,9 @@\n \n     private String environmentCrn;\n \n+    @OneToMany(mappedBy = \"stack\", fetch = FetchType.EAGER, cascade = CascadeType.ALL, orphanRemoval = true)\n+    private List<ChildEnvironment> childEnvironments = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1ODAwMA=="}, "originalCommit": {"oid": "d19d0066d771099d98678da8d0d062375a4722e9"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzQ1Nzk4OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/deletion/handler/freeipa/FreeIpaDeletionHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDoxODoxMFrOFpOMBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDoxODoxMFrOFpOMBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2ODM5MA==", "bodyText": "could you refactor into smaller methods?", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378768390", "createdAt": "2020-02-13T10:18:10Z", "author": {"login": "lacikaaa"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/deletion/handler/freeipa/FreeIpaDeletionHandler.java", "diffHunk": "@@ -52,24 +54,29 @@ protected FreeIpaDeletionHandler(EventSender eventSender, EnvironmentService env\n     @Override\n     public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n         EnvironmentDto environmentDto = environmentDtoEvent.getData();\n-        Optional<Environment> env = environmentService.findEnvironmentById(environmentDto.getId());\n+        Optional<Environment> envOptional = environmentService.findEnvironmentById(environmentDto.getId());\n         try {\n-            if (env.isPresent() && env.get().isCreateFreeIpa() && freeIpaExistsForEnvironment(env.get())) {\n-                freeIpaService.delete(env.get().getResourceCrn());\n-                Pair<PollingResult, Exception> result = freeIpaPollingService.pollWithTimeout(\n-                        new FreeIpaDeletionRetrievalTask(freeIpaService),\n-                        new FreeIpaPollerObject(env.get().getId(), env.get().getResourceCrn()),\n-                        FreeIpaDeletionRetrievalTask.FREEIPA_RETRYING_INTERVAL,\n-                        FreeIpaDeletionRetrievalTask.FREEIPA_RETRYING_COUNT,\n-                        SINGLE_FAILURE);\n-                if (isSuccess(result.getLeft())) {\n-                    eventSender().sendEvent(getNextStepObject(environmentDto), environmentDtoEvent.getHeaders());\n+            if (envOptional.isPresent() && envOptional.get().isCreateFreeIpa() && freeIpaExistsForEnvironment(envOptional.get())) {\n+                Environment environment = envOptional.get();\n+                if (isNull(environment.getParentEnvironment())) {\n+                    freeIpaService.delete(environment.getResourceCrn());\n+                    Pair<PollingResult, Exception> result = freeIpaPollingService.pollWithTimeout(\n+                            new FreeIpaDeletionRetrievalTask(freeIpaService),\n+                            new FreeIpaPollerObject(environment.getId(), environment.getResourceCrn()),\n+                            FreeIpaDeletionRetrievalTask.FREEIPA_RETRYING_INTERVAL,\n+                            FreeIpaDeletionRetrievalTask.FREEIPA_RETRYING_COUNT,\n+                            SINGLE_FAILURE);\n+                    if (!isSuccess(result.getLeft())) {\n+                        throw new FreeIpaOperationFailedException(\"Failed to delete FreeIpa! \" + getIfNotNull(result.getRight(), Throwable::getMessage));\n+                    }\n                 } else {\n-                    throw new FreeIpaOperationFailedException(\"Failed to delete FreeIpa! \" + getIfNotNull(result.getRight(), Throwable::getMessage));\n+                    DeregisterChildEnvironmentRequest deregisterChildEnvironmentRequest = new DeregisterChildEnvironmentRequest();\n+                    deregisterChildEnvironmentRequest.setParentEnvironmentCrn(environment.getParentEnvironment().getResourceCrn());\n+                    deregisterChildEnvironmentRequest.setChildEnvironmentCrn(environment.getResourceCrn());\n+                    freeIpaService.deregisterChildEnvironment(deregisterChildEnvironmentRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16e14673b95d41497329f021f2e583c16910bacb"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzUyMzcxOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/controller/FreeIpaV1Controller.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDozNzo0MVrOFpOz2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMTozMjo0MVrOFpzxxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3ODU4Nw==", "bodyText": "not FreeIPA request, it's RegisterChildEnvironmentRequest", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r378778587", "createdAt": "2020-02-13T10:37:41Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/controller/FreeIpaV1Controller.java", "diffHunk": "@@ -86,6 +96,23 @@ public DescribeFreeIpaResponse create(@Valid CreateFreeIpaRequest request) {\n         return freeIpaCreationService.launchFreeIpa(request, accountId);\n     }\n \n+    @Override\n+    public void registerChildEnvironment(@Valid RegisterChildEnvironmentRequest request) {\n+        ValidationResult validationResult = registerChildEnvironmentRequestValidator.validate(request);\n+        if (validationResult.hasError()) {\n+            LOGGER.debug(\"FreeIPA request has validation error(s): {}.\", validationResult.getFormattedErrors());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16e14673b95d41497329f021f2e583c16910bacb"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM4NDI2MA==", "bodyText": "Fixed", "url": "https://github.com/hortonworks/cloudbreak/pull/7230#discussion_r379384260", "createdAt": "2020-02-14T11:32:41Z", "author": {"login": "Bajzathd"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/controller/FreeIpaV1Controller.java", "diffHunk": "@@ -86,6 +96,23 @@ public DescribeFreeIpaResponse create(@Valid CreateFreeIpaRequest request) {\n         return freeIpaCreationService.launchFreeIpa(request, accountId);\n     }\n \n+    @Override\n+    public void registerChildEnvironment(@Valid RegisterChildEnvironmentRequest request) {\n+        ValidationResult validationResult = registerChildEnvironmentRequestValidator.validate(request);\n+        if (validationResult.hasError()) {\n+            LOGGER.debug(\"FreeIPA request has validation error(s): {}.\", validationResult.getFormattedErrors());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3ODU4Nw=="}, "originalCommit": {"oid": "16e14673b95d41497329f021f2e583c16910bacb"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2908, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}