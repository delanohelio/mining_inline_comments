{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MTk1MjUx", "number": 8988, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoxNDo1NVrOEiRqfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjozNTowOFrOEjGn0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Mzc2NDQ3OnYy", "diffSide": "RIGHT", "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/doc/UserModelDescriptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoxNDo1NVrOHQEJkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzo0MjowMlrOHQJUww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwNzI0OQ==", "bodyText": "I think we want to be clear that this is a workload username, not a user crn, username, etc.\nWe should also indicate that this workload username corresponds to the single user or machine user crn in the filters.", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r486607249", "createdAt": "2020-09-10T20:14:55Z", "author": {"login": "handavid"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/doc/UserModelDescriptions.java", "diffHunk": "@@ -6,6 +6,7 @@\n     public static final String USERSYNC_ENVIRONMENT_CRNS = \"Optional environment crns to sync\";\n     public static final String USERSYNC_USER_CRNS = \"Optional user crns to sync\";\n     public static final String USERSYNC_MACHINEUSER_CRNS = \"Optional machine user crns to sync\";\n+    public static final String DELETED_WORKLOAD_USER = \"An Optional workload user to be deleted\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df6fe7b6723ac58edb359f5c948af3f6e861e666"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5MjAzNQ==", "bodyText": "Okay, I've updated it. Since we're planning on moving to newer endpoints soon, I wasn't worrying too much about usability here.", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r486692035", "createdAt": "2020-09-10T23:42:02Z", "author": {"login": "aarman-cloudera"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/doc/UserModelDescriptions.java", "diffHunk": "@@ -6,6 +6,7 @@\n     public static final String USERSYNC_ENVIRONMENT_CRNS = \"Optional environment crns to sync\";\n     public static final String USERSYNC_USER_CRNS = \"Optional user crns to sync\";\n     public static final String USERSYNC_MACHINEUSER_CRNS = \"Optional machine user crns to sync\";\n+    public static final String DELETED_WORKLOAD_USER = \"An Optional workload user to be deleted\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwNzI0OQ=="}, "originalCommit": {"oid": "df6fe7b6723ac58edb359f5c948af3f6e861e666"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzgwNDk3OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoyNjo1MFrOHQEh3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzo1Njo0MFrOHQJlXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMzQ3MQ==", "bodyText": "validateParameters should be updated for your userSyncRequestFilter including the users+machineUsers size when a deletedWorkloadUsername is included", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r486613471", "createdAt": "2020-09-10T20:26:50Z", "author": {"login": "handavid"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -184,11 +187,9 @@ private void logAffectedStacks(List<Stack> stacks) {\n         LOGGER.info(\"Affected stacks: {}\", stacksAffected);\n     }\n \n-    private List<Stack> getStacksForSync(String accountId, String actorCrn, Set<String> environmentCrnFilter,\n-            Set<String> userCrnFilter, Set<String> machineUserCrnFilter) {\n-        validateParameters(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n-        LOGGER.debug(\"Synchronizing users in account {} for environmentCrns {}, userCrns {}, and machineUserCrns {}\",\n-                accountId, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+    private List<Stack> getStacksForSync(String accountId, String actorCrn, Set<String> environmentCrnFilter, UserSyncRequestFilter useSyncFilter) {\n+        validateParameters(accountId, actorCrn, environmentCrnFilter, useSyncFilter.getUserCrnFilter(), useSyncFilter.getMachineUserCrnFilter());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df6fe7b6723ac58edb359f5c948af3f6e861e666"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5NjI4Nw==", "bodyText": "Ah, this check was in the constructor, but I can move it to here instead.", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r486696287", "createdAt": "2020-09-10T23:56:40Z", "author": {"login": "aarman-cloudera"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -184,11 +187,9 @@ private void logAffectedStacks(List<Stack> stacks) {\n         LOGGER.info(\"Affected stacks: {}\", stacksAffected);\n     }\n \n-    private List<Stack> getStacksForSync(String accountId, String actorCrn, Set<String> environmentCrnFilter,\n-            Set<String> userCrnFilter, Set<String> machineUserCrnFilter) {\n-        validateParameters(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n-        LOGGER.debug(\"Synchronizing users in account {} for environmentCrns {}, userCrns {}, and machineUserCrns {}\",\n-                accountId, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+    private List<Stack> getStacksForSync(String accountId, String actorCrn, Set<String> environmentCrnFilter, UserSyncRequestFilter useSyncFilter) {\n+        validateParameters(accountId, actorCrn, environmentCrnFilter, useSyncFilter.getUserCrnFilter(), useSyncFilter.getMachineUserCrnFilter());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMzQ3MQ=="}, "originalCommit": {"oid": "df6fe7b6723ac58edb359f5c948af3f6e861e666"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzgwNjExOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoyNzoxMFrOHQEikw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoyNzoxMFrOHQEikw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMzY1MQ==", "bodyText": "useSyncFilter --> userSyncRequestFilter", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r486613651", "createdAt": "2020-09-10T20:27:10Z", "author": {"login": "handavid"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -184,11 +187,9 @@ private void logAffectedStacks(List<Stack> stacks) {\n         LOGGER.info(\"Affected stacks: {}\", stacksAffected);\n     }\n \n-    private List<Stack> getStacksForSync(String accountId, String actorCrn, Set<String> environmentCrnFilter,\n-            Set<String> userCrnFilter, Set<String> machineUserCrnFilter) {\n-        validateParameters(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n-        LOGGER.debug(\"Synchronizing users in account {} for environmentCrns {}, userCrns {}, and machineUserCrns {}\",\n-                accountId, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+    private List<Stack> getStacksForSync(String accountId, String actorCrn, Set<String> environmentCrnFilter, UserSyncRequestFilter useSyncFilter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df6fe7b6723ac58edb359f5c948af3f6e861e666"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzgyMTk4OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDozMTo1M1rOHQEsCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDozMTo1M1rOHQEsCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNjA3NA==", "bodyText": "I don't see a matching Finished log for USER_SYNC_DELETE. I think you need to move this logging into internalSynchronizeStackForDeleteUser", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r486616074", "createdAt": "2020-09-10T20:31:53Z", "author": {"login": "handavid"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -243,20 +242,30 @@ private void internalSynchronizeUsers(String operationId, String accountId, Stri\n \n             LogEvent logUserSyncEvent = fullSync ? LogEvent.FULL_USER_SYNC : LogEvent.PARTIAL_USER_SYNC;\n             LOGGER.info(\"Starting {} for environments {} with operationId {} ...\", logUserSyncEvent, environmentCrns, operationId);\n-            LogEvent logRetrieveUmsEvent = fullSync ? LogEvent.RETRIEVE_FULL_UMS_STATE : LogEvent.RETRIEVE_PARTIAL_UMS_STATE;\n-            LOGGER.debug(\"Starting {} for environments {} ...\", logRetrieveUmsEvent, environmentCrns);\n-            Map<String, UmsUsersState> envToUmsStateMap = umsUsersStateProvider\n-                    .getEnvToUmsUsersStateMap(accountId, actorCrn, environmentCrns, userCrnFilter, machineUserCrnFilter, requestId);\n-            LOGGER.debug(\"Finished {}.\", logRetrieveUmsEvent);\n+\n+            Map<String, Future<SyncStatusDetail>> statusFutures;\n+\n+            if (userSyncFilter.getDeletedWorkloadUser().isEmpty()) {\n+                LogEvent logRetrieveUmsEvent = fullSync ? LogEvent.RETRIEVE_FULL_UMS_STATE : LogEvent.RETRIEVE_PARTIAL_UMS_STATE;\n+                LOGGER.debug(\"Starting {} for environments {} ...\", logRetrieveUmsEvent, environmentCrns);\n+                Map<String, UmsUsersState> envToUmsStateMap = umsUsersStateProvider\n+                        .getEnvToUmsUsersStateMap(accountId, actorCrn, environmentCrns, userSyncFilter.getUserCrnFilter(),\n+                                userSyncFilter.getMachineUserCrnFilter(), requestId);\n+                LOGGER.debug(\"Finished {}.\", logRetrieveUmsEvent);\n+                statusFutures = stacks.stream()\n+                        .collect(Collectors.toMap(Stack::getEnvironmentCrn,\n+                                stack -> asyncSynchronizeStack(stack, envToUmsStateMap.get(stack.getEnvironmentCrn()), umsEventGenerationIds, fullSync,\n+                                        operationId, accountId)));\n+            } else {\n+                String deletedWorkloadUser = userSyncFilter.getDeletedWorkloadUser().get();\n+                LOGGER.debug(\"Starting {} for environments {} and deleted user {} ...\", LogEvent.USER_SYNC_DELETE, environmentCrns, deletedWorkloadUser);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df6fe7b6723ac58edb359f5c948af3f6e861e666"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Mzg0MDc0OnYy", "diffSide": "RIGHT", "path": "freeipa/src/test/java/com/sequenceiq/freeipa/controller/UserV1ControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDozNzozN1rOHQE3jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDozNzozN1rOHQE3jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxOTAyMA==", "bodyText": "I think we need a test that checks the parameter validation and ensures that we reject requests with a deleted workload username that contain 0 or >1 crns.", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r486619020", "createdAt": "2020-09-10T20:37:37Z", "author": {"login": "handavid"}, "path": "freeipa/src/test/java/com/sequenceiq/freeipa/controller/UserV1ControllerTest.java", "diffHunk": "@@ -115,14 +120,36 @@ void synchronizeAllUsers() {\n         request.setMachineUsers(machineUsers);\n \n         Operation operation = mock(Operation.class);\n-        when(userSyncService.synchronizeUsersWithCustomPermissionCheck(any(), any(), any(), any(), any(), any())).thenReturn(operation);\n+        when(userSyncService.synchronizeUsersWithCustomPermissionCheck(any(), any(), any(), any(), any())).thenReturn(operation);\n         SyncOperationStatus status = mock(SyncOperationStatus.class);\n         when(operationToSyncOperationStatus.convert(operation)).thenReturn(status);\n \n         assertEquals(status, ThreadBasedUserCrnProvider.doAs(USER_CRN, () -> underTest.synchronizeAllUsers(request)));\n \n+        UserSyncRequestFilter userSyncFilter = new UserSyncRequestFilter(users, machineUsers, Optional.empty());\n         verify(userSyncService, times(1)).synchronizeUsersWithCustomPermissionCheck(ACCOUNT_ID, USER_CRN, environments,\n-                users, machineUsers, AuthorizationResourceAction.DESCRIBE_ENVIRONMENT);\n+                userSyncFilter, AuthorizationResourceAction.DESCRIBE_ENVIRONMENT);\n+    }\n+\n+    @Test\n+    void synchronizeAllUsersDeleteWorkloadUser() {\n+        Set<String> users = Set.of(USER_CRN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df6fe7b6723ac58edb359f5c948af3f6e861e666"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjkyNjQ1OnYy", "diffSide": "RIGHT", "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/doc/UserModelDescriptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNDo1NToyMFrOHQiTyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToxNzo0OFrOHQjKgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEwMTM4Nw==", "bodyText": "typo: corresponds", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r487101387", "createdAt": "2020-09-11T14:55:20Z", "author": {"login": "handavid"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/doc/UserModelDescriptions.java", "diffHunk": "@@ -6,6 +6,8 @@\n     public static final String USERSYNC_ENVIRONMENT_CRNS = \"Optional environment crns to sync\";\n     public static final String USERSYNC_USER_CRNS = \"Optional user crns to sync\";\n     public static final String USERSYNC_MACHINEUSER_CRNS = \"Optional machine user crns to sync\";\n+    public static final String DELETED_WORKLOAD_USER = \"An Optional workload user name to be deleted. When this is included, there should also be\" +\n+            \" exactly 1 crn in the machineUsers or users set that coreesponds to the deleted workload user.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f61dd42fb0b819c9744528540c998fdc3b06565"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzExNTM5NA==", "bodyText": "fixed", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r487115394", "createdAt": "2020-09-11T15:17:48Z", "author": {"login": "handavid"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/doc/UserModelDescriptions.java", "diffHunk": "@@ -6,6 +6,8 @@\n     public static final String USERSYNC_ENVIRONMENT_CRNS = \"Optional environment crns to sync\";\n     public static final String USERSYNC_USER_CRNS = \"Optional user crns to sync\";\n     public static final String USERSYNC_MACHINEUSER_CRNS = \"Optional machine user crns to sync\";\n+    public static final String DELETED_WORKLOAD_USER = \"An Optional workload user name to be deleted. When this is included, there should also be\" +\n+            \" exactly 1 crn in the machineUsers or users set that coreesponds to the deleted workload user.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEwMTM4Nw=="}, "originalCommit": {"oid": "6f61dd42fb0b819c9744528540c998fdc3b06565"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjIyMDQwOnYy", "diffSide": "RIGHT", "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/model/SynchronizeAllUsersRequest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTozMjo1NFrOHRPkjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzo0MTozNlrOHUBsoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0Mjk1OQ==", "bodyText": "is there any reason this can't be a set? it looks more flexible and I don't see why can't we delete 2 user at once", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r487842959", "createdAt": "2020-09-14T11:32:54Z", "author": {"login": "lacikaaa"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/model/SynchronizeAllUsersRequest.java", "diffHunk": "@@ -18,6 +18,9 @@\n     @ApiModelProperty(value = UserModelDescriptions.USERSYNC_USER_CRNS)\n     private Set<String> users = new HashSet<>();\n \n+    @ApiModelProperty(value = UserModelDescriptions.DELETED_WORKLOAD_USER)\n+    private String deletedWorkloadUser;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ2NDc4NA==", "bodyText": "It has been resolved but not answered. I'm pushing this because a set would be more flexible and later you can't change this as the API has to be backward compatible.", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r488464784", "createdAt": "2020-09-15T07:59:19Z", "author": {"login": "lacikaaa"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/model/SynchronizeAllUsersRequest.java", "diffHunk": "@@ -18,6 +18,9 @@\n     @ApiModelProperty(value = UserModelDescriptions.USERSYNC_USER_CRNS)\n     private Set<String> users = new HashSet<>();\n \n+    @ApiModelProperty(value = UserModelDescriptions.DELETED_WORKLOAD_USER)\n+    private String deletedWorkloadUser;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0Mjk1OQ=="}, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU1MTMxNg==", "bodyText": "Sorry, my comment got lost. I did originally consider a set here, but ended up going with a single user (and had discussed with David prior to posting the PR) since it aligns with some follow on work coming up. We plan on updating user sync to only allow environment level sync or single actor sync and dropping support for something in between (like syncing N arbitrary users). This would involve adding new api endpoints and probably deprecating these existing ones. (I can point you to the design doc if you want). So I think it makes sense to keep this field single user only.", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r488551316", "createdAt": "2020-09-15T10:15:16Z", "author": {"login": "aarman-cloudera"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/model/SynchronizeAllUsersRequest.java", "diffHunk": "@@ -18,6 +18,9 @@\n     @ApiModelProperty(value = UserModelDescriptions.USERSYNC_USER_CRNS)\n     private Set<String> users = new HashSet<>();\n \n+    @ApiModelProperty(value = UserModelDescriptions.DELETED_WORKLOAD_USER)\n+    private String deletedWorkloadUser;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0Mjk1OQ=="}, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2MTM3Ng==", "bodyText": "Okay, after further discussion, I've updated to set and added a validation that will fail if size isn't 1.", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r490761376", "createdAt": "2020-09-18T07:41:36Z", "author": {"login": "aarman-cloudera"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/user/model/SynchronizeAllUsersRequest.java", "diffHunk": "@@ -18,6 +18,9 @@\n     @ApiModelProperty(value = UserModelDescriptions.USERSYNC_USER_CRNS)\n     private Set<String> users = new HashSet<>();\n \n+    @ApiModelProperty(value = UserModelDescriptions.DELETED_WORKLOAD_USER)\n+    private String deletedWorkloadUser;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0Mjk1OQ=="}, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjM0ODMyOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjoxMToxOFrOHRQxTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjoxMToxOFrOHRQxTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2MjYwNg==", "bodyText": "I would prefer if you pass UserSyncRequestFilter instead of adding a new parameter.\nalso moving the whole validation to a separate class would be nice (@VisibleForTesting annotation already a sign this method should be in another class)", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r487862606", "createdAt": "2020-09-14T12:11:18Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -529,16 +583,24 @@ private void checkIfClientStillUsable(FreeIpaClientException e) throws FreeIpaCl\n \n     @VisibleForTesting\n     void validateParameters(String accountId, String actorCrn, Set<String> environmentCrnFilter,\n-            Set<String> userCrnFilter, Set<String> machineUserCrnFilter) {\n+            Set<String> userCrnFilter, Set<String> machineUserCrnFilter, Optional<String> deletedWorkoadUser) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 223}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjQxMjY2OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjoyODoyOFrOHRRXYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDoyMzo1NVrOHRlRUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3MjM1NA==", "bodyText": "could you move this to a separate class and refactor into multiple shorter methods", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r487872354", "createdAt": "2020-09-14T12:28:28Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -355,13 +368,54 @@ private SyncStatusDetail internalSynchronizeStack(Stack stack, UmsUsersState ums\n         }\n     }\n \n+    private SyncStatusDetail internalSynchronizeStackForDeleteUser(Stack stack, String deletedWorkloadUser) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 167}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE5ODQ4Mw==", "bodyText": "I've made it slightly shorter. We can do additional refactoring when working on the new sync endpoints (as mention in a previous comment), so I prefer to keep it in this class for now.", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r488198483", "createdAt": "2020-09-14T20:23:55Z", "author": {"login": "aarman-cloudera"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -355,13 +368,54 @@ private SyncStatusDetail internalSynchronizeStack(Stack stack, UmsUsersState ums\n         }\n     }\n \n+    private SyncStatusDetail internalSynchronizeStackForDeleteUser(Stack stack, String deletedWorkloadUser) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3MjM1NA=="}, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 167}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjQxNzg5OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjoyOTo0MlrOHRRaVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDoyNDoxOVrOHRlSNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3MzExMQ==", "bodyText": "I think it should fit into one log line", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r487873111", "createdAt": "2020-09-14T12:29:42Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -355,13 +368,54 @@ private SyncStatusDetail internalSynchronizeStack(Stack stack, UmsUsersState ums\n         }\n     }\n \n+    private SyncStatusDetail internalSynchronizeStackForDeleteUser(Stack stack, String deletedWorkloadUser) {\n+        MDCBuilder.buildMdcContext(stack);\n+        String environmentCrn = stack.getEnvironmentCrn();\n+        Multimap<String, String> warnings = ArrayListMultimap.create();\n+        try {\n+            FreeIpaClient freeIpaClient = freeIpaClientFactory.getFreeIpaClientForStack(stack);\n+\n+            LOGGER.debug(\"Starting {} for environment {} and deleted user {} ...\", LogEvent.USER_SYNC_DELETE, environmentCrn, deletedWorkloadUser);\n+\n+            LogEvent logEvent = LogEvent.RETRIEVE_PARTIAL_IPA_STATE;\n+            LOGGER.debug(\"Starting {} ...\", LogEvent.RETRIEVE_PARTIAL_IPA_STATE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE5ODcwOQ==", "bodyText": "I've removed the logEvent variable so it no longer fits.", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r488198709", "createdAt": "2020-09-14T20:24:19Z", "author": {"login": "aarman-cloudera"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -355,13 +368,54 @@ private SyncStatusDetail internalSynchronizeStack(Stack stack, UmsUsersState ums\n         }\n     }\n \n+    private SyncStatusDetail internalSynchronizeStackForDeleteUser(Stack stack, String deletedWorkloadUser) {\n+        MDCBuilder.buildMdcContext(stack);\n+        String environmentCrn = stack.getEnvironmentCrn();\n+        Multimap<String, String> warnings = ArrayListMultimap.create();\n+        try {\n+            FreeIpaClient freeIpaClient = freeIpaClientFactory.getFreeIpaClientForStack(stack);\n+\n+            LOGGER.debug(\"Starting {} for environment {} and deleted user {} ...\", LogEvent.USER_SYNC_DELETE, environmentCrn, deletedWorkloadUser);\n+\n+            LogEvent logEvent = LogEvent.RETRIEVE_PARTIAL_IPA_STATE;\n+            LOGGER.debug(\"Starting {} ...\", LogEvent.RETRIEVE_PARTIAL_IPA_STATE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3MzExMQ=="}, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 177}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjQ0MTE1OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjozNTowOFrOHRRnZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDoyNDoyNlrOHRlSeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3NjQ1Mw==", "bodyText": "I think you should either delete logEvent variable or use it in the next line also", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r487876453", "createdAt": "2020-09-14T12:35:08Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -355,13 +368,54 @@ private SyncStatusDetail internalSynchronizeStack(Stack stack, UmsUsersState ums\n         }\n     }\n \n+    private SyncStatusDetail internalSynchronizeStackForDeleteUser(Stack stack, String deletedWorkloadUser) {\n+        MDCBuilder.buildMdcContext(stack);\n+        String environmentCrn = stack.getEnvironmentCrn();\n+        Multimap<String, String> warnings = ArrayListMultimap.create();\n+        try {\n+            FreeIpaClient freeIpaClient = freeIpaClientFactory.getFreeIpaClientForStack(stack);\n+\n+            LOGGER.debug(\"Starting {} for environment {} and deleted user {} ...\", LogEvent.USER_SYNC_DELETE, environmentCrn, deletedWorkloadUser);\n+\n+            LogEvent logEvent = LogEvent.RETRIEVE_PARTIAL_IPA_STATE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE5ODc3Ng==", "bodyText": "Deleted", "url": "https://github.com/hortonworks/cloudbreak/pull/8988#discussion_r488198776", "createdAt": "2020-09-14T20:24:26Z", "author": {"login": "aarman-cloudera"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -355,13 +368,54 @@ private SyncStatusDetail internalSynchronizeStack(Stack stack, UmsUsersState ums\n         }\n     }\n \n+    private SyncStatusDetail internalSynchronizeStackForDeleteUser(Stack stack, String deletedWorkloadUser) {\n+        MDCBuilder.buildMdcContext(stack);\n+        String environmentCrn = stack.getEnvironmentCrn();\n+        Multimap<String, String> warnings = ArrayListMultimap.create();\n+        try {\n+            FreeIpaClient freeIpaClient = freeIpaClientFactory.getFreeIpaClientForStack(stack);\n+\n+            LOGGER.debug(\"Starting {} for environment {} and deleted user {} ...\", LogEvent.USER_SYNC_DELETE, environmentCrn, deletedWorkloadUser);\n+\n+            LogEvent logEvent = LogEvent.RETRIEVE_PARTIAL_IPA_STATE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3NjQ1Mw=="}, "originalCommit": {"oid": "d6c4ab5b6740560561d808affd21dc42fae99e94"}, "originalPosition": 176}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2265, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}