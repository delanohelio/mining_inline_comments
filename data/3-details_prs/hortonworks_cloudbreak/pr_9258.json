{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MDQ3MDEx", "number": 9258, "title": "CB-8945 Ability to run tests against MOW Dev", "bodyText": "In order to make sure that we can verify CB deployment was successful we shall execute our E2E test suits against MOW environments as well.\n\nAs a first version I would only include the API E2E tests and use a static ACCESSKEY/SECRETKEY pair. Later on with the cdpcpaccounthelper we can even start a Chrome instance that has UI access but that would require more effort.", "createdAt": "2020-10-20T19:33:13Z", "url": "https://github.com/hortonworks/cloudbreak/pull/9258", "merged": true, "mergeCommit": {"oid": "0d271f117f1a895bd296430ea5dc9bcca507e51a"}, "closed": true, "closedAt": "2020-10-22T15:57:36Z", "author": {"login": "aszegedi"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUpk9iAFqTUxMzQ1NjIzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVEHenAFqTUxNDg4MzU0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDU2MjM1", "url": "https://github.com/hortonworks/cloudbreak/pull/9258#pullrequestreview-513456235", "createdAt": "2020-10-21T08:59:06Z", "commit": {"oid": "ea6ac7a1db7250abc8dcbe10c9cee882fc6082b2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODo1OTowNlrOHlhkbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOTowMTo1OVrOHlhsmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEwOTM1OA==", "bodyText": "Can we refactor this to smaller methods and do less in the catch block? It's kind hard to read.\nSomething like:\ngetMockBasedUser()\ngetRealUmsUser()\ngetTestParamUser()", "url": "https://github.com/hortonworks/cloudbreak/pull/9258#discussion_r509109358", "createdAt": "2020-10-21T08:59:06Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/context/TestContext.java", "diffHunk": "@@ -447,15 +448,57 @@ protected String getActingUserAccessKey() {\n     }\n \n     public Crn getActingUserCrn() {\n-        // real ums user\n-        if (Crn.isCrn(getActingUser().getCrn())) {\n-            return Crn.fromString(getActingUser().getCrn());\n+        try {\n+            /**\n+             * Default application parameter:\n+             * integrationtest.user.crn or \"localhost\" in ~/.dp/config\n+             */\n+            return Crn.fromString(new String(Base64.getDecoder().decode(getActingUserAccessKey())));\n+        } catch (Exception e) {\n+            if (Crn.isCrn(getActingUser().getCrn())) {\n+                /**\n+                 * Real UMS user:\n+                 * useRealUmsUser(testContext, AuthUserKeys.ACCOUNT_ADMIN);\n+                 */\n+                return Crn.fromString(getActingUser().getCrn());\n+            }\n+            if (!testParameter.get(CloudbreakTest.USER_CRN).isEmpty() || testParameter.get(CloudbreakTest.USER_CRN) != null) {\n+                /**\n+                 * Application parameter:\n+                 * integrationtest.user.crn\n+                 */\n+                return Crn.fromString(testParameter.get(CloudbreakTest.USER_CRN));\n+            }\n+            LOGGER.error(\"Cannot find acting user: '{}' - Crn, because of: '{}'\", getActingUserAccessKey(), e.getMessage(), e);\n+            throw new TestFailException(String.format(\"Cannot find acting user: '%s' - Crn, because of: '%s'\", getActingUserAccessKey(), e.getMessage()), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea6ac7a1db7250abc8dcbe10c9cee882fc6082b2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEwOTY0OQ==", "bodyText": "Same applies here as before.", "url": "https://github.com/hortonworks/cloudbreak/pull/9258#discussion_r509109649", "createdAt": "2020-10-21T08:59:29Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/context/TestContext.java", "diffHunk": "@@ -447,15 +448,57 @@ protected String getActingUserAccessKey() {\n     }\n \n     public Crn getActingUserCrn() {\n-        // real ums user\n-        if (Crn.isCrn(getActingUser().getCrn())) {\n-            return Crn.fromString(getActingUser().getCrn());\n+        try {\n+            /**\n+             * Default application parameter:\n+             * integrationtest.user.crn or \"localhost\" in ~/.dp/config\n+             */\n+            return Crn.fromString(new String(Base64.getDecoder().decode(getActingUserAccessKey())));\n+        } catch (Exception e) {\n+            if (Crn.isCrn(getActingUser().getCrn())) {\n+                /**\n+                 * Real UMS user:\n+                 * useRealUmsUser(testContext, AuthUserKeys.ACCOUNT_ADMIN);\n+                 */\n+                return Crn.fromString(getActingUser().getCrn());\n+            }\n+            if (!testParameter.get(CloudbreakTest.USER_CRN).isEmpty() || testParameter.get(CloudbreakTest.USER_CRN) != null) {\n+                /**\n+                 * Application parameter:\n+                 * integrationtest.user.crn\n+                 */\n+                return Crn.fromString(testParameter.get(CloudbreakTest.USER_CRN));\n+            }\n+            LOGGER.error(\"Cannot find acting user: '{}' - Crn, because of: '{}'\", getActingUserAccessKey(), e.getMessage(), e);\n+            throw new TestFailException(String.format(\"Cannot find acting user: '%s' - Crn, because of: '%s'\", getActingUserAccessKey(), e.getMessage()), e);\n         }\n-        return Crn.fromString(new String(Base64.getDecoder().decode(getActingUserAccessKey())));\n     }\n \n     public String getActingUserName() {\n-        return Crn.fromString(new String(Base64.getDecoder().decode(getActingUserAccessKey()))).getUserId();\n+        try {\n+            /**\n+             * Default application parameter:\n+             * integrationtest.user.name or \"localhost\" in ~/.dp/config\n+             */\n+            return Objects.requireNonNull(Crn.fromString(new String(Base64.getDecoder().decode(getActingUserAccessKey())))).getUserId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea6ac7a1db7250abc8dcbe10c9cee882fc6082b2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTExMTQ0OA==", "bodyText": "I'm not sure about his change. At least the Owner tag should contain the creator's name not the CRN I think.", "url": "https://github.com/hortonworks/cloudbreak/pull/9258#discussion_r509111448", "createdAt": "2020-10-21T09:01:59Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/java/com/sequenceiq/it/util/TagsUtil.java", "diffHunk": "@@ -109,14 +110,17 @@ private void validateOwnerTag(TaggedResponse response, String tag, TestContext t\n     }\n \n     private void validateClouderaCreatorResourceNameTag(TaggedResponse response, String tag, TestContext testContext) {\n-        if (response.getTagValue(tag).contains(testContext.getActingUserName())) {\n-            Log.log(LOGGER, format(\" Default tag: [%s] value is: [%s] contains [%s] acting user name! \", tag, response.getTagValue(tag),\n-                    testContext.getActingUserName()));\n+        Crn actingUserCrn = testContext.getActingUserCrn();\n+        Crn clouderaCreatorResourceName = Crn.fromString(response.getTagValue(tag));\n+\n+        if (clouderaCreatorResourceName.equals(actingUserCrn)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea6ac7a1db7250abc8dcbe10c9cee882fc6082b2"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea6ac7a1db7250abc8dcbe10c9cee882fc6082b2", "author": {"user": {"login": "aszegedi", "name": "Annamaria Szegedi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ea6ac7a1db7250abc8dcbe10c9cee882fc6082b2", "committedDate": "2020-10-20T19:27:47Z", "message": "CB-8945 Ability to run tests against MOW Dev"}, "afterCommit": {"oid": "12db6a1175dad7c64a680c1691bb21e97c05e190", "author": {"user": {"login": "aszegedi", "name": "Annamaria Szegedi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/12db6a1175dad7c64a680c1691bb21e97c05e190", "committedDate": "2020-10-21T13:57:26Z", "message": "CB-8945 Ability to run tests against MOW Dev"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12db6a1175dad7c64a680c1691bb21e97c05e190", "author": {"user": {"login": "aszegedi", "name": "Annamaria Szegedi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/12db6a1175dad7c64a680c1691bb21e97c05e190", "committedDate": "2020-10-21T13:57:26Z", "message": "CB-8945 Ability to run tests against MOW Dev"}, "afterCommit": {"oid": "6fc048a0fe3903e3e7a59f7e047f8db205dc71e7", "author": {"user": {"login": "aszegedi", "name": "Annamaria Szegedi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/6fc048a0fe3903e3e7a59f7e047f8db205dc71e7", "committedDate": "2020-10-21T15:03:41Z", "message": "CB-8945 Ability to run tests against MOW Dev"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68ab42985890458258662b8def464998e65813aa", "author": {"user": {"login": "lnardai", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/68ab42985890458258662b8def464998e65813aa", "committedDate": "2020-10-22T12:43:23Z", "message": "CB-8945 Ability to run tests against MOW Dev small refactor"}, "afterCommit": {"oid": "1581bb0347862fc49bcb30f0a7070210a5a8c9de", "author": {"user": {"login": "aszegedi", "name": "Annamaria Szegedi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/1581bb0347862fc49bcb30f0a7070210a5a8c9de", "committedDate": "2020-10-22T14:56:17Z", "message": "CB-8945 Ability to run tests against MOW Dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf7066cb093fa022b2057b22703bf51882fd6946", "author": {"user": {"login": "aszegedi", "name": "Annamaria Szegedi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/bf7066cb093fa022b2057b22703bf51882fd6946", "committedDate": "2020-10-22T14:57:06Z", "message": "CB-8945 Ability to run tests against MOW Dev"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1581bb0347862fc49bcb30f0a7070210a5a8c9de", "author": {"user": {"login": "aszegedi", "name": "Annamaria Szegedi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/1581bb0347862fc49bcb30f0a7070210a5a8c9de", "committedDate": "2020-10-22T14:56:17Z", "message": "CB-8945 Ability to run tests against MOW Dev"}, "afterCommit": {"oid": "bf7066cb093fa022b2057b22703bf51882fd6946", "author": {"user": {"login": "aszegedi", "name": "Annamaria Szegedi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/bf7066cb093fa022b2057b22703bf51882fd6946", "committedDate": "2020-10-22T14:57:06Z", "message": "CB-8945 Ability to run tests against MOW Dev"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0ODgzNTQ5", "url": "https://github.com/hortonworks/cloudbreak/pull/9258#pullrequestreview-514883549", "createdAt": "2020-10-22T15:57:26Z", "commit": {"oid": "bf7066cb093fa022b2057b22703bf51882fd6946"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2036, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}