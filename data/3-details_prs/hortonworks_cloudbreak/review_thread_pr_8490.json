{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODc1NDg1", "number": 8490, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjozOTo1NVrOEL8aNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjozOTo1NVrOEL8aNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTU5NTQxOnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/ssh/action/SshEnaDriverCheckActions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjozOTo1NVrOGtw_2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNjo1MDoxMFrOGtxPmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0MTg4Mw==", "bodyText": "I thought this will be implemented with an API call.", "url": "https://github.com/hortonworks/cloudbreak/pull/8490#discussion_r450641883", "createdAt": "2020-07-07T06:39:55Z", "author": {"login": "akanto"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/ssh/action/SshEnaDriverCheckActions.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package com.sequenceiq.it.cloudbreak.util.ssh.action;\n+\n+import java.util.Collections;\n+import java.util.stream.Stream;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.response.instancegroup.instancemetadata.InstanceMetaDataV4Response;\n+import com.sequenceiq.cloudbreak.common.json.Json;\n+import com.sequenceiq.cloudbreak.common.mappable.CloudPlatform;\n+import com.sequenceiq.it.cloudbreak.CloudbreakClient;\n+import com.sequenceiq.it.cloudbreak.dto.distrox.DistroXTestDto;\n+import com.sequenceiq.it.cloudbreak.exception.TestFailException;\n+import com.sequenceiq.it.cloudbreak.util.ssh.client.SshJClient;\n+\n+@Component\n+public class SshEnaDriverCheckActions extends SshJClient {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(SshEnaDriverCheckActions.class);\n+\n+    private void checkEnaDriver(String instanceIP) {\n+        String modinfoEnaCmd = \"/usr/sbin/modinfo ena\";\n+        String wrongResult = \"modinfo: ERROR: Module ena not found.\";\n+        Pair<Integer, String> result = executeCommand(instanceIP, modinfoEnaCmd);\n+        if (result.getValue().startsWith(wrongResult)) {\n+            throw new TestFailException(\"Cannot find ena driver on the instance\");\n+        }\n+    }\n+\n+    private void checkEnaSupport(String instanceIP, String instanceId, String region) {\n+        String modinfoEnaCmd = String.format(\"aws ec2 describe-instances --instance-ids %s --query \\\"Reservations[].Instances[].EnaSupport\\\" --region %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e8a09ddd28dd1263d9a5616ba6de2902f4071a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0NTkxMg==", "bodyText": "I'm going to rewrite to an API call", "url": "https://github.com/hortonworks/cloudbreak/pull/8490#discussion_r450645912", "createdAt": "2020-07-07T06:50:10Z", "author": {"login": "topolyai5"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/ssh/action/SshEnaDriverCheckActions.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package com.sequenceiq.it.cloudbreak.util.ssh.action;\n+\n+import java.util.Collections;\n+import java.util.stream.Stream;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.response.instancegroup.instancemetadata.InstanceMetaDataV4Response;\n+import com.sequenceiq.cloudbreak.common.json.Json;\n+import com.sequenceiq.cloudbreak.common.mappable.CloudPlatform;\n+import com.sequenceiq.it.cloudbreak.CloudbreakClient;\n+import com.sequenceiq.it.cloudbreak.dto.distrox.DistroXTestDto;\n+import com.sequenceiq.it.cloudbreak.exception.TestFailException;\n+import com.sequenceiq.it.cloudbreak.util.ssh.client.SshJClient;\n+\n+@Component\n+public class SshEnaDriverCheckActions extends SshJClient {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(SshEnaDriverCheckActions.class);\n+\n+    private void checkEnaDriver(String instanceIP) {\n+        String modinfoEnaCmd = \"/usr/sbin/modinfo ena\";\n+        String wrongResult = \"modinfo: ERROR: Module ena not found.\";\n+        Pair<Integer, String> result = executeCommand(instanceIP, modinfoEnaCmd);\n+        if (result.getValue().startsWith(wrongResult)) {\n+            throw new TestFailException(\"Cannot find ena driver on the instance\");\n+        }\n+    }\n+\n+    private void checkEnaSupport(String instanceIP, String instanceId, String region) {\n+        String modinfoEnaCmd = String.format(\"aws ec2 describe-instances --instance-ids %s --query \\\"Reservations[].Instances[].EnaSupport\\\" --region %s\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0MTg4Mw=="}, "originalCommit": {"oid": "c6e8a09ddd28dd1263d9a5616ba6de2902f4071a"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3110, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}