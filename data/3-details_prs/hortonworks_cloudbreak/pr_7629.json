{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzc2MzI3", "number": 7629, "title": "CB-6203 only sync workload admin groups that are related to environment", "bodyText": "", "createdAt": "2020-03-23T13:12:31Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7629", "merged": true, "mergeCommit": {"oid": "4f5be14d67b924da70b987873d0b2bda7898ab18"}, "closed": true, "closedAt": "2020-03-24T07:48:33Z", "author": {"login": "keyki"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQgSW2gFqTM3OTU1NjM5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQjbDlAFqTM3OTc0NTc4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTU2Mzk4", "url": "https://github.com/hortonworks/cloudbreak/pull/7629#pullrequestreview-379556398", "createdAt": "2020-03-23T15:43:44Z", "commit": {"oid": "9dc554ade4392d7f916323c3e2e186cd6146ed05"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTo0Mzo0NFrOF6LeHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTo0Mzo0NFrOF6LeHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0OTY2MQ==", "bodyText": "this doesn't work. WAGs may be associated with resources that are not environments. We don't currently have a mapping of resources to environments, so we can't tell if a WAG is applicable to a given environment.\nIf we could use the WAG resource, then we could do the filtering on the wags list in getEnvToUmsUsersStateMap instead of in handleUser", "url": "https://github.com/hortonworks/cloudbreak/pull/7629#discussion_r396549661", "createdAt": "2020-03-23T15:43:44Z", "author": {"login": "handavid"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UmsUsersStateProvider.java", "diffHunk": "@@ -166,7 +165,13 @@ private void handleUser(UmsUsersState.Builder umsUsersStateBuilder, UsersState.B\n                     }\n                 });\n \n-                workloadAdministrationGroups.getWorkloadAdministrationGroupNameList().forEach(groupName -> {\n+                // Only add workload admin groups that belong to this environment\n+                workloadAdminGroups.stream()\n+                        .filter(wag -> wag.getResource().equalsIgnoreCase(environmentAccessRights.getEnvironmentCrn()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc554ade4392d7f916323c3e2e186cd6146ed05"}, "originalPosition": 99}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dc554ade4392d7f916323c3e2e186cd6146ed05", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9dc554ade4392d7f916323c3e2e186cd6146ed05", "committedDate": "2020-03-23T13:11:44Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}, "afterCommit": {"oid": "a2a0fb3d068d73c470ee6e224570cbf19bb44294", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a2a0fb3d068d73c470ee6e224570cbf19bb44294", "committedDate": "2020-03-23T16:32:07Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2a0fb3d068d73c470ee6e224570cbf19bb44294", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a2a0fb3d068d73c470ee6e224570cbf19bb44294", "committedDate": "2020-03-23T16:32:07Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}, "afterCommit": {"oid": "6de17b67f26c00af6cd3c999c4f1a3e198b86e09", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/6de17b67f26c00af6cd3c999c4f1a3e198b86e09", "committedDate": "2020-03-23T16:33:19Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6de17b67f26c00af6cd3c999c4f1a3e198b86e09", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/6de17b67f26c00af6cd3c999c4f1a3e198b86e09", "committedDate": "2020-03-23T16:33:19Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}, "afterCommit": {"oid": "ed1fc6ebb698d5da053cc0a3e1c55af856fd1a52", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ed1fc6ebb698d5da053cc0a3e1c55af856fd1a52", "committedDate": "2020-03-23T16:34:59Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed1fc6ebb698d5da053cc0a3e1c55af856fd1a52", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ed1fc6ebb698d5da053cc0a3e1c55af856fd1a52", "committedDate": "2020-03-23T16:34:59Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}, "afterCommit": {"oid": "98da0887255b3e879de3fbab4882940b45f470df", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/98da0887255b3e879de3fbab4882940b45f470df", "committedDate": "2020-03-23T16:37:27Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NjI2NDM5", "url": "https://github.com/hortonworks/cloudbreak/pull/7629#pullrequestreview-379626439", "createdAt": "2020-03-23T16:56:43Z", "commit": {"oid": "98da0887255b3e879de3fbab4882940b45f470df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98da0887255b3e879de3fbab4882940b45f470df", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/98da0887255b3e879de3fbab4882940b45f470df", "committedDate": "2020-03-23T16:37:27Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}, "afterCommit": {"oid": "c12192c88cf7cf63cfa27d5a7e4799cba256d5d7", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/c12192c88cf7cf63cfa27d5a7e4799cba256d5d7", "committedDate": "2020-03-23T19:06:27Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e068c8aceba12287d32b964871995af01da2c75", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/4e068c8aceba12287d32b964871995af01da2c75", "committedDate": "2020-03-23T19:10:11Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c12192c88cf7cf63cfa27d5a7e4799cba256d5d7", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/c12192c88cf7cf63cfa27d5a7e4799cba256d5d7", "committedDate": "2020-03-23T19:06:27Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}, "afterCommit": {"oid": "4e068c8aceba12287d32b964871995af01da2c75", "author": {"user": {"login": "keyki", "name": "Krisztian Horvath"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/4e068c8aceba12287d32b964871995af01da2c75", "committedDate": "2020-03-23T19:10:11Z", "message": "CB-6203 only sync workload admin groups that are related to environment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NzQ1Nzgy", "url": "https://github.com/hortonworks/cloudbreak/pull/7629#pullrequestreview-379745782", "createdAt": "2020-03-23T19:20:47Z", "commit": {"oid": "c12192c88cf7cf63cfa27d5a7e4799cba256d5d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToyMzoxMlrOF6UoWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToyMzoxMlrOF6UoWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5OTczNw==", "bodyText": "WAGs should be modeled as WorkloadAdministrationGroups rather than Groups. WAGs don't have crns, only names, accountids, rights, and resources. Moving to WorkloadAdministrationGroup would probably make the WAG-related mock code more sensible.", "url": "https://github.com/hortonworks/cloudbreak/pull/7629#discussion_r396699737", "createdAt": "2020-03-23T19:23:12Z", "author": {"login": "handavid"}, "path": "mock-caas/src/main/java/com/sequenceiq/caas/grpc/service/MockGroupManagementService.java", "diffHunk": "@@ -16,120 +16,151 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Service;\n \n-import com.cloudera.thunderhead.service.usermanagement.UserManagementProto;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.DeleteWorkloadAdministrationGroupNameRequest;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.DeleteWorkloadAdministrationGroupNameResponse;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.GetWorkloadAdministrationGroupNameRequest;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.GetWorkloadAdministrationGroupNameResponse;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.GetWorkloadAdministrationGroupNameResponse.Builder;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.Group;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListGroupsRequest;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListGroupsResponse;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.SetWorkloadAdministrationGroupNameRequest;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.SetWorkloadAdministrationGroupNameResponse;\n import com.sequenceiq.cloudbreak.auth.altus.Crn;\n+import com.sequenceiq.cloudbreak.auth.altus.Crn.ResourceType;\n import com.sequenceiq.cloudbreak.auth.altus.UmsRight;\n \n import io.grpc.stub.StreamObserver;\n \n @Service\n class MockGroupManagementService {\n+\n     private static final Logger LOGGER = LoggerFactory.getLogger(MockGroupManagementService.class);\n \n     private static final String CM_ADMIN_RIGHT = \"environments/adminClouderaManager\";\n \n+    private static final int NUM_USER_GROUPS = 5;\n+\n     @Inject\n     private MockCrnService mockCrnService;\n \n-    private final Map<String, Map<String, UserManagementProto.Group>> accountGroups = new ConcurrentHashMap<>();\n+    private final Map<String, Map<String, Group>> accountWorkloadGroups = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e068c8aceba12287d32b964871995af01da2c75"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2494, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}