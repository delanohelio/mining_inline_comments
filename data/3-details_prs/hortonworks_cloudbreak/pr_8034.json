{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MjU4MzY4", "number": 8034, "title": "CB-4785 Better error message display for environment+sdx accidental A\u2026", "bodyText": "", "createdAt": "2020-05-13T10:08:39Z", "url": "https://github.com/hortonworks/cloudbreak/pull/8034", "merged": true, "mergeCommit": {"oid": "8a56173e5d19e14c601d6cc68c6cce2118d603f5"}, "closed": true, "closedAt": "2020-05-14T11:54:13Z", "author": {"login": "topolyai5"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg3SJ4AFqTQxMDgzNjA1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABchMDDrgFqTQxMTcyMzkxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwODM2MDUy", "url": "https://github.com/hortonworks/cloudbreak/pull/8034#pullrequestreview-410836052", "createdAt": "2020-05-13T11:36:15Z", "commit": {"oid": "9ad3166cee886b4d9cdfbfe04640ce38cb7638d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTozNjoxNlrOGUtaoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTozNjoxNlrOGUtaoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2ODgwMQ==", "bodyText": "hmm.. can we throw badrequest instead of internal server error from cloudbreak side?", "url": "https://github.com/hortonworks/cloudbreak/pull/8034#discussion_r424368801", "createdAt": "2020-05-13T11:36:16Z", "author": {"login": "sodre90"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/ProvisionerService.java", "diffHunk": "@@ -175,7 +176,7 @@ public void startStackProvisioning(Long id, DetailedEnvironmentResponse environm\n                 sdxClusterRepository.save(sdxCluster);\n                 cloudbreakFlowService.saveLastCloudbreakFlowChainId(sdxCluster, stackV4Response.getFlowIdentifier());\n                 LOGGER.info(\"Sdx cluster updated\");\n-            } catch (ClientErrorException e) {\n+            } catch (ClientErrorException | InternalServerErrorException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad3166cee886b4d9cdfbfe04640ce38cb7638d0"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwODM3NTIz", "url": "https://github.com/hortonworks/cloudbreak/pull/8034#pullrequestreview-410837523", "createdAt": "2020-05-13T11:38:30Z", "commit": {"oid": "9ad3166cee886b4d9cdfbfe04640ce38cb7638d0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTozODozMFrOGUtfEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTo0MDoyN1rOGUti3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2OTkzOA==", "bodyText": "The exception message is misleading", "url": "https://github.com/hortonworks/cloudbreak/pull/8034#discussion_r424369938", "createdAt": "2020-05-13T11:38:30Z", "author": {"login": "daszabo"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/ProvisionerService.java", "diffHunk": "@@ -175,7 +176,7 @@ public void startStackProvisioning(Long id, DetailedEnvironmentResponse environm\n                 sdxClusterRepository.save(sdxCluster);\n                 cloudbreakFlowService.saveLastCloudbreakFlowChainId(sdxCluster, stackV4Response.getFlowIdentifier());\n                 LOGGER.info(\"Sdx cluster updated\");\n-            } catch (ClientErrorException e) {\n+            } catch (ClientErrorException | InternalServerErrorException e) {\n                 String errorMessage = webApplicationExceptionMessageExtractor.getErrorMessage(e);\n                 LOGGER.info(\"Can not start provisioning: {}\", errorMessage, e);\n                 throw new RuntimeException(\"Can not start provisioning, client error happened on Cloudbreak side: \" + errorMessage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad3166cee886b4d9cdfbfe04640ce38cb7638d0"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MDkxMA==", "bodyText": "Should we throw an exception, if the AZ list is empty? If not, at least log the fact please.", "url": "https://github.com/hortonworks/cloudbreak/pull/8034#discussion_r424370910", "createdAt": "2020-05-13T11:40:27Z", "author": {"login": "daszabo"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsPlatformResources.java", "diffHunk": "@@ -636,12 +636,15 @@ private CloudVmTypes getCloudVmTypes(CloudCredential cloudCredential, Region reg\n         Map<String, Set<VmType>> cloudVmResponses = new HashMap<>();\n         Map<String, VmType> defaultCloudVmResponses = new HashMap<>();\n \n-        for (AvailabilityZone availabilityZone : regions.getCloudRegions().get(region)) {\n-            Set<VmType> types = vmTypes.get(region).stream()\n-                    .filter(enabledInstanceTypeFilter)\n-                    .collect(Collectors.toSet());\n-            cloudVmResponses.put(availabilityZone.value(), types);\n-            defaultCloudVmResponses.put(availabilityZone.value(), defaultVmTypes.get(region));\n+        List<AvailabilityZone> availabilityZones = regions.getCloudRegions().get(region);\n+        if (availabilityZones != null && !availabilityZones.isEmpty()) {\n+            for (AvailabilityZone availabilityZone : availabilityZones) {\n+                Set<VmType> types = vmTypes.get(region).stream()\n+                        .filter(enabledInstanceTypeFilter)\n+                        .collect(Collectors.toSet());\n+                cloudVmResponses.put(availabilityZone.value(), types);\n+                defaultCloudVmResponses.put(availabilityZone.value(), defaultVmTypes.get(region));\n+            }\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad3166cee886b4d9cdfbfe04640ce38cb7638d0"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ad3166cee886b4d9cdfbfe04640ce38cb7638d0", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9ad3166cee886b4d9cdfbfe04640ce38cb7638d0", "committedDate": "2020-05-13T09:36:00Z", "message": "CB-4785 Better error message display for environment+sdx accidental Azure-AWS mix-up"}, "afterCommit": {"oid": "f2a5a0111f59a58cf096a1401046e77492568f1d", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/f2a5a0111f59a58cf096a1401046e77492568f1d", "committedDate": "2020-05-13T14:23:21Z", "message": "CB-4785 Better error message display for environment+sdx accidental Azure-AWS mix-up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b847a37e8c071eb90c8b3e4e7a4e1e210c38b095", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/b847a37e8c071eb90c8b3e4e7a4e1e210c38b095", "committedDate": "2020-05-14T05:51:51Z", "message": "CB-4785 Better error message display for environment+sdx accidental Azure-AWS mix-up"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2a5a0111f59a58cf096a1401046e77492568f1d", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/f2a5a0111f59a58cf096a1401046e77492568f1d", "committedDate": "2020-05-13T14:23:21Z", "message": "CB-4785 Better error message display for environment+sdx accidental Azure-AWS mix-up"}, "afterCommit": {"oid": "b847a37e8c071eb90c8b3e4e7a4e1e210c38b095", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/b847a37e8c071eb90c8b3e4e7a4e1e210c38b095", "committedDate": "2020-05-14T05:51:51Z", "message": "CB-4785 Better error message display for environment+sdx accidental Azure-AWS mix-up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNTE2MzQz", "url": "https://github.com/hortonworks/cloudbreak/pull/8034#pullrequestreview-411516343", "createdAt": "2020-05-14T07:02:44Z", "commit": {"oid": "b847a37e8c071eb90c8b3e4e7a4e1e210c38b095"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNzIzOTE4", "url": "https://github.com/hortonworks/cloudbreak/pull/8034#pullrequestreview-411723918", "createdAt": "2020-05-14T11:47:47Z", "commit": {"oid": "b847a37e8c071eb90c8b3e4e7a4e1e210c38b095"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2206, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}