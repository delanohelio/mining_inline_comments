{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0ODgwODE5", "number": 7675, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNTozMzowNFrODsSPKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNTozMzowNFrODsSPKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzYyNzI5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/stack/image/update/StackImageUpdateService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNTozMzowNFrOF9HCsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNzoyNjowMlrOF9K-fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyMjgzNA==", "bodyText": "why not log anyway?", "url": "https://github.com/hortonworks/cloudbreak/pull/7675#discussion_r399622834", "createdAt": "2020-03-28T05:33:04Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/stack/image/update/StackImageUpdateService.java", "diffHunk": "@@ -213,8 +213,25 @@ public boolean isValidImage(Stack stack, String newImageId, String imageCatalogN\n             try {\n                 Image currentImage = getCurrentImage(stack);\n                 StatedImage newImage = getNewImage(newImageId, imageCatalogName, imageCatalogUrl, currentImage);\n-                return isCloudPlatformMatches(stack, newImage) && isOsVersionsMatch(currentImage, newImage) && isStackMatchIfPrewarmed(stack, newImage)\n-                        && checkPackageVersions(stack, newImage).getStatus() == EventStatus.OK;\n+                boolean cloudPlatformMatches = isCloudPlatformMatches(stack, newImage);\n+                boolean osVersionsMatch = isOsVersionsMatch(currentImage, newImage);\n+                boolean stackMatchIfPrewarmed = isStackMatchIfPrewarmed(stack, newImage);\n+                CheckResult status = checkPackageVersions(stack, newImage);\n+                boolean aggregatedValidationResult = cloudPlatformMatches && osVersionsMatch && stackMatchIfPrewarmed\n+                        && status.getStatus() == EventStatus.OK;\n+                if (!aggregatedValidationResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28e585d0bfc267e73ddf660b847a32d8797edf39"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY4NzI5NQ==", "bodyText": "Because it takes up quite some log-space to log the successful entries, too, with no real benefit.", "url": "https://github.com/hortonworks/cloudbreak/pull/7675#discussion_r399687295", "createdAt": "2020-03-28T17:26:02Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/stack/image/update/StackImageUpdateService.java", "diffHunk": "@@ -213,8 +213,25 @@ public boolean isValidImage(Stack stack, String newImageId, String imageCatalogN\n             try {\n                 Image currentImage = getCurrentImage(stack);\n                 StatedImage newImage = getNewImage(newImageId, imageCatalogName, imageCatalogUrl, currentImage);\n-                return isCloudPlatformMatches(stack, newImage) && isOsVersionsMatch(currentImage, newImage) && isStackMatchIfPrewarmed(stack, newImage)\n-                        && checkPackageVersions(stack, newImage).getStatus() == EventStatus.OK;\n+                boolean cloudPlatformMatches = isCloudPlatformMatches(stack, newImage);\n+                boolean osVersionsMatch = isOsVersionsMatch(currentImage, newImage);\n+                boolean stackMatchIfPrewarmed = isStackMatchIfPrewarmed(stack, newImage);\n+                CheckResult status = checkPackageVersions(stack, newImage);\n+                boolean aggregatedValidationResult = cloudPlatformMatches && osVersionsMatch && stackMatchIfPrewarmed\n+                        && status.getStatus() == EventStatus.OK;\n+                if (!aggregatedValidationResult) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyMjgzNA=="}, "originalCommit": {"oid": "28e585d0bfc267e73ddf660b847a32d8797edf39"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2601, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}