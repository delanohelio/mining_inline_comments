{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MzIzMTIz", "number": 8275, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNTowNzowMFrOEFyHFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNzo0NzoxOFrOEGPANA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDk5MzUwOnYy", "diffSide": "RIGHT", "path": "autoscale/src/main/java/com/sequenceiq/periscope/controller/AlertController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNTowNzowMFrOGkLYzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDoyMDo1NVrOGkU75w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU4ODQ5Mg==", "bodyText": "This will not NPE if there's no supported groups, correct?", "url": "https://github.com/hortonworks/cloudbreak/pull/8275#discussion_r440588492", "createdAt": "2020-06-16T05:07:00Z", "author": {"login": "sidseth"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/controller/AlertController.java", "diffHunk": "@@ -176,15 +185,36 @@ private void validateAccountEntitlement(Cluster cluster) {\n                 ThreadBasedUserCrnProvider.getUserCrn(),\n                 ThreadBasedUserCrnProvider.getAccountId(),\n                 cluster.getCloudPlatform())) {\n-            throw new BadRequestException(String.format(\"Autoscaling is not enabled for CloudPlatform '%s', Cluster '%s' in this Account\",\n-                    cluster.getCloudPlatform(), cluster.getStackCrn()));\n+            throw new BadRequestException(messagesService.getMessage(MessageCode.AUTOSCALING_ENTITLEMENT_NOT_ENABLED,\n+                    List.of(cluster.getCloudPlatform(),  cluster.getStackName())));\n+        }\n+    }\n+\n+    private void validateSupportedHostGroup(Cluster cluster, String requestHostGroup, AlertType alertType) {\n+        Set<String> supportedHostGroups = Optional.ofNullable(\n+                recommendationService.getAutoscaleRecommendations(cluster.getStackCrn())).map(\n+                recommendation -> {\n+                    if (AlertType.LOAD.equals(alertType)) {\n+                        return recommendation.getLoadBasedHostGroups();\n+                    }\n+                    if (AlertType.TIME.equals(alertType)) {\n+                        return recommendation.getTimeBasedHostGroups();\n+                    }\n+                    return Set.of(\"\");\n+                }).orElse(Set.of(\"\"));\n+        if (!supportedHostGroups.contains(requestHostGroup)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91bc048a04e83857e9e04ed4c24289a6bb6d295e"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0NDkzNQ==", "bodyText": "The service returns empty set when no supported group, added additional null validation.", "url": "https://github.com/hortonworks/cloudbreak/pull/8275#discussion_r440744935", "createdAt": "2020-06-16T10:20:55Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/controller/AlertController.java", "diffHunk": "@@ -176,15 +185,36 @@ private void validateAccountEntitlement(Cluster cluster) {\n                 ThreadBasedUserCrnProvider.getUserCrn(),\n                 ThreadBasedUserCrnProvider.getAccountId(),\n                 cluster.getCloudPlatform())) {\n-            throw new BadRequestException(String.format(\"Autoscaling is not enabled for CloudPlatform '%s', Cluster '%s' in this Account\",\n-                    cluster.getCloudPlatform(), cluster.getStackCrn()));\n+            throw new BadRequestException(messagesService.getMessage(MessageCode.AUTOSCALING_ENTITLEMENT_NOT_ENABLED,\n+                    List.of(cluster.getCloudPlatform(),  cluster.getStackName())));\n+        }\n+    }\n+\n+    private void validateSupportedHostGroup(Cluster cluster, String requestHostGroup, AlertType alertType) {\n+        Set<String> supportedHostGroups = Optional.ofNullable(\n+                recommendationService.getAutoscaleRecommendations(cluster.getStackCrn())).map(\n+                recommendation -> {\n+                    if (AlertType.LOAD.equals(alertType)) {\n+                        return recommendation.getLoadBasedHostGroups();\n+                    }\n+                    if (AlertType.TIME.equals(alertType)) {\n+                        return recommendation.getTimeBasedHostGroups();\n+                    }\n+                    return Set.of(\"\");\n+                }).orElse(Set.of(\"\"));\n+        if (!supportedHostGroups.contains(requestHostGroup)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU4ODQ5Mg=="}, "originalCommit": {"oid": "91bc048a04e83857e9e04ed4c24289a6bb6d295e"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTcyMjE3OnYy", "diffSide": "RIGHT", "path": "autoscale-api/src/main/java/com/sequenceiq/periscope/api/model/AlertType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNzo0NTo1MFrOGk5tog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODoyNjozNlrOGk7Mmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM0NzQ5MA==", "bodyText": "what is your opinion about that you convert only the different value and you are using the .name() any other case?", "url": "https://github.com/hortonworks/cloudbreak/pull/8275#discussion_r441347490", "createdAt": "2020-06-17T07:45:50Z", "author": {"login": "topolyai5"}, "path": "autoscale-api/src/main/java/com/sequenceiq/periscope/api/model/AlertType.java", "diffHunk": "@@ -1,5 +1,16 @@\n package com.sequenceiq.periscope.api.model;\n \n public enum AlertType {\n-    METRIC, TIME, PROMETHEUS, LOAD\n+    METRIC, TIME, PROMETHEUS, LOAD;\n+\n+    @Override\n+    public String toString() {\n+        switch (this) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f2401f1fdb5bec1826a8ba33140ec1a7f9e21c5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3MTgwMw==", "bodyText": "ok, updated to use .name()", "url": "https://github.com/hortonworks/cloudbreak/pull/8275#discussion_r441371803", "createdAt": "2020-06-17T08:26:36Z", "author": {"login": "smaniraju"}, "path": "autoscale-api/src/main/java/com/sequenceiq/periscope/api/model/AlertType.java", "diffHunk": "@@ -1,5 +1,16 @@\n package com.sequenceiq.periscope.api.model;\n \n public enum AlertType {\n-    METRIC, TIME, PROMETHEUS, LOAD\n+    METRIC, TIME, PROMETHEUS, LOAD;\n+\n+    @Override\n+    public String toString() {\n+        switch (this) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM0NzQ5MA=="}, "originalCommit": {"oid": "4f2401f1fdb5bec1826a8ba33140ec1a7f9e21c5"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTcyNzI0OnYy", "diffSide": "RIGHT", "path": "autoscale-api/src/test/java/com/sequenceiq/periscope/api/endpoint/validator/DistroXAutoscaleRequestValidatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNzo0NzoxOFrOGk5w_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODoyNTo0N1rOGk7KlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM0ODM1MA==", "bodyText": "this should work without this because the class is annotated with @RunWith(MockitoJUnitRunner.class) or am I missing something?", "url": "https://github.com/hortonworks/cloudbreak/pull/8275#discussion_r441348350", "createdAt": "2020-06-17T07:47:18Z", "author": {"login": "topolyai5"}, "path": "autoscale-api/src/test/java/com/sequenceiq/periscope/api/endpoint/validator/DistroXAutoscaleRequestValidatorTest.java", "diffHunk": "@@ -38,8 +43,12 @@\n \n     private ConstraintValidatorContext validatorContext;\n \n+    @Mock\n+    private CloudbreakMessagesService messagesService;\n+\n     @Before\n     public void setupMocks() {\n+        MockitoAnnotations.initMocks(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f2401f1fdb5bec1826a8ba33140ec1a7f9e21c5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3MTI4NA==", "bodyText": "yes this is not required, fixed it.", "url": "https://github.com/hortonworks/cloudbreak/pull/8275#discussion_r441371284", "createdAt": "2020-06-17T08:25:47Z", "author": {"login": "smaniraju"}, "path": "autoscale-api/src/test/java/com/sequenceiq/periscope/api/endpoint/validator/DistroXAutoscaleRequestValidatorTest.java", "diffHunk": "@@ -38,8 +43,12 @@\n \n     private ConstraintValidatorContext validatorContext;\n \n+    @Mock\n+    private CloudbreakMessagesService messagesService;\n+\n     @Before\n     public void setupMocks() {\n+        MockitoAnnotations.initMocks(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM0ODM1MA=="}, "originalCommit": {"oid": "4f2401f1fdb5bec1826a8ba33140ec1a7f9e21c5"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3205, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}