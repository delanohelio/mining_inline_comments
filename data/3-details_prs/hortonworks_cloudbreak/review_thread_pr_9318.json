{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNTk5Njk3", "number": 9318, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1OToyMlrOEy2tAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1OToyMlrOEy2tAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzYwNTE0OnYy", "diffSide": "RIGHT", "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/client/TracingClientSpanDecorator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo1OToyMlrOHpueUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNToxMDoyNlrOHpvBsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxNTA5MA==", "bodyText": "most salt calls happens using /saltapi/run. see SaltEndpoint#SALT_RUN\nthis way StringUtils.substringAfterLast will return an empty string", "url": "https://github.com/hortonworks/cloudbreak/pull/9318#discussion_r513515090", "createdAt": "2020-10-28T14:59:22Z", "author": {"login": "lacikaaa"}, "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/client/TracingClientSpanDecorator.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package com.sequenceiq.cloudbreak.orchestrator.salt.client;\n+\n+import javax.ws.rs.client.ClientRequestContext;\n+import javax.ws.rs.client.ClientResponseContext;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+import com.sequenceiq.cloudbreak.orchestrator.salt.domain.Pillar;\n+import com.sequenceiq.cloudbreak.tracing.TracingUtil;\n+\n+import io.opentracing.Span;\n+import io.opentracing.contrib.jaxrs2.client.ClientSpanDecorator;\n+\n+public class TracingClientSpanDecorator implements ClientSpanDecorator {\n+\n+    @Override\n+    public void decorateRequest(ClientRequestContext requestContext, Span span) {\n+        String uri = requestContext.getUri().toString();\n+        String saltPath = StringUtils.substringAfterLast(uri, \"/saltboot/\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ee5729ef857c1f5cbd1e771e55ce18e7c2d3b31"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUyNDE0Nw==", "bodyText": "this explains an anomaly I just saw in jaeger", "url": "https://github.com/hortonworks/cloudbreak/pull/9318#discussion_r513524147", "createdAt": "2020-10-28T15:10:26Z", "author": {"login": "attilapalfi92"}, "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/client/TracingClientSpanDecorator.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package com.sequenceiq.cloudbreak.orchestrator.salt.client;\n+\n+import javax.ws.rs.client.ClientRequestContext;\n+import javax.ws.rs.client.ClientResponseContext;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+import com.sequenceiq.cloudbreak.orchestrator.salt.domain.Pillar;\n+import com.sequenceiq.cloudbreak.tracing.TracingUtil;\n+\n+import io.opentracing.Span;\n+import io.opentracing.contrib.jaxrs2.client.ClientSpanDecorator;\n+\n+public class TracingClientSpanDecorator implements ClientSpanDecorator {\n+\n+    @Override\n+    public void decorateRequest(ClientRequestContext requestContext, Span span) {\n+        String uri = requestContext.getUri().toString();\n+        String saltPath = StringUtils.substringAfterLast(uri, \"/saltboot/\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxNTA5MA=="}, "originalCommit": {"oid": "1ee5729ef857c1f5cbd1e771e55ce18e7c2d3b31"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2065, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}