{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxOTkyNTU4", "number": 7776, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNjowNToyNVrODxfkzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNjowNToyNVrODxfkzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMjI0MTQxOnYy", "diffSide": "RIGHT", "path": "template-manager-tag/src/test/java/com/sequenceiq/cloudbreak/DefaultCostTaggingServiceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNjowNToyNVrOGE_dUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0Mzo0MVrOGFXktw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4NzE4NA==", "bodyText": "testAccountTagUserTagConflictGeneratesError", "url": "https://github.com/hortonworks/cloudbreak/pull/7776#discussion_r407887184", "createdAt": "2020-04-14T06:05:25Z", "author": {"login": "doktoric"}, "path": "template-manager-tag/src/test/java/com/sequenceiq/cloudbreak/DefaultCostTaggingServiceTest.java", "diffHunk": "@@ -100,22 +101,62 @@ public void testMergeTagsShouldReturnWithAnUnion() {\n         Assert.assertEquals(\"apple4\", \"apple4\");\n     }\n \n+    @Test\n+    public void testAccountTagUserTagEqualityNoError() {\n+        Map<String, String> envMap = new HashMap<>();\n+        envMap.put(\"apple1\", \"apple1\");\n+        envMap.put(\"apple2\", \"apple2\");\n+        envMap.put(\"owner\", \"owner\");\n+        Map<String, String> requestTag = new HashMap<>();\n+        requestTag.put(\"pear1\", \"pear1\");\n+        requestTag.put(\"owner\", \"owner\");\n+\n+        CDPTagGenerationRequest tagRequest = tagRequest(\"AWS\", new HashMap<>(), envMap, requestTag);\n+        underTest.prepareDefaultTags(tagRequest);\n+    }\n+\n+    @Test\n+    public void testAccountTagUserTagConflictGeneartesError() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7213f5762fc4286d259752aa049a5fb4805f94"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4MjI5NQ==", "bodyText": "Fixed in the latest push.", "url": "https://github.com/hortonworks/cloudbreak/pull/7776#discussion_r408282295", "createdAt": "2020-04-14T16:43:41Z", "author": {"login": "sidseth"}, "path": "template-manager-tag/src/test/java/com/sequenceiq/cloudbreak/DefaultCostTaggingServiceTest.java", "diffHunk": "@@ -100,22 +101,62 @@ public void testMergeTagsShouldReturnWithAnUnion() {\n         Assert.assertEquals(\"apple4\", \"apple4\");\n     }\n \n+    @Test\n+    public void testAccountTagUserTagEqualityNoError() {\n+        Map<String, String> envMap = new HashMap<>();\n+        envMap.put(\"apple1\", \"apple1\");\n+        envMap.put(\"apple2\", \"apple2\");\n+        envMap.put(\"owner\", \"owner\");\n+        Map<String, String> requestTag = new HashMap<>();\n+        requestTag.put(\"pear1\", \"pear1\");\n+        requestTag.put(\"owner\", \"owner\");\n+\n+        CDPTagGenerationRequest tagRequest = tagRequest(\"AWS\", new HashMap<>(), envMap, requestTag);\n+        underTest.prepareDefaultTags(tagRequest);\n+    }\n+\n+    @Test\n+    public void testAccountTagUserTagConflictGeneartesError() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4NzE4NA=="}, "originalCommit": {"oid": "2a7213f5762fc4286d259752aa049a5fb4805f94"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2539, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}