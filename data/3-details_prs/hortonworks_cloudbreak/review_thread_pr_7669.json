{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NjY0MzIy", "number": 7669, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTo1Mjo1OVrODsIA-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNzoxOVrODsIZCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTk1MjU5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTo1Mjo1OVrOF83Uzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjo0NzowOFrOF85jYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NTMyNg==", "bodyText": "Could you please write unit test for this class?", "url": "https://github.com/hortonworks/cloudbreak/pull/7669#discussion_r399365326", "createdAt": "2020-03-27T15:52:59Z", "author": {"login": "tiborpopovics"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.sequenceiq.cloudbreak.service.upgrade;\n+\n+import static com.sequenceiq.cloudbreak.cloud.PrefixMatchLength.MINOR;\n+\n+import org.springframework.stereotype.Service;\n+\n+import com.sequenceiq.cloudbreak.cloud.VersionComparator;\n+import com.sequenceiq.cloudbreak.cloud.VersionPrefix;\n+\n+@Service\n+public class UpgradePermissionProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e6919d30fbadea1e320faa3fec73073c0ed43f5"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM4MDA0MQ==", "bodyText": "I used a @SPY in ClusterUpgradeImageFilterTest, but I can definitely add tests for this.", "url": "https://github.com/hortonworks/cloudbreak/pull/7669#discussion_r399380041", "createdAt": "2020-03-27T16:14:30Z", "author": {"login": "akanto"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.sequenceiq.cloudbreak.service.upgrade;\n+\n+import static com.sequenceiq.cloudbreak.cloud.PrefixMatchLength.MINOR;\n+\n+import org.springframework.stereotype.Service;\n+\n+import com.sequenceiq.cloudbreak.cloud.VersionComparator;\n+import com.sequenceiq.cloudbreak.cloud.VersionPrefix;\n+\n+@Service\n+public class UpgradePermissionProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NTMyNg=="}, "originalCommit": {"oid": "7e6919d30fbadea1e320faa3fec73073c0ed43f5"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwMTgyNg==", "bodyText": "Added 100% coverage to it.", "url": "https://github.com/hortonworks/cloudbreak/pull/7669#discussion_r399401826", "createdAt": "2020-03-27T16:47:08Z", "author": {"login": "akanto"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.sequenceiq.cloudbreak.service.upgrade;\n+\n+import static com.sequenceiq.cloudbreak.cloud.PrefixMatchLength.MINOR;\n+\n+import org.springframework.stereotype.Service;\n+\n+import com.sequenceiq.cloudbreak.cloud.VersionComparator;\n+import com.sequenceiq.cloudbreak.cloud.VersionPrefix;\n+\n+@Service\n+public class UpgradePermissionProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NTMyNg=="}, "originalCommit": {"oid": "7e6919d30fbadea1e320faa3fec73073c0ed43f5"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjAxNDE5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeImageFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNzoxOVrOF837Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjo0NjoxNlrOF85hDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3NTE3NQ==", "bodyText": "Can you please extract the upgradePermissionProvider.permitCmAndSatckUpgrade call into a new method?", "url": "https://github.com/hortonworks/cloudbreak/pull/7669#discussion_r399375175", "createdAt": "2020-03-27T16:07:19Z", "author": {"login": "tiborpopovics"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeImageFilter.java", "diffHunk": "@@ -85,23 +83,27 @@ private boolean isOsVersionsMatch(Image currentImage, Image newImage) {\n     }\n \n     private Predicate<Image> validateCmVersion(Image currentImage) {\n-        return image -> compareVersionStrict(currentImage.getPackageVersions().get(CM_PACKAGE_KEY), image.getPackageVersions().get(CM_PACKAGE_KEY));\n+        return image -> upgradePermissionProvider.permitCmAndSatckUpgrade(currentImage.getPackageVersions().get(CM_PACKAGE_KEY),\n+                image.getPackageVersions().get(CM_PACKAGE_KEY));\n     }\n \n     private Predicate<Image> validateStackVersion(Image currentImage) {\n-        return image -> compareVersionStrict(currentImage.getPackageVersions().get(STACK_PACKAGE_KEY), image.getPackageVersions().get(STACK_PACKAGE_KEY));\n+        return image -> upgradePermissionProvider.permitCmAndSatckUpgrade(currentImage.getPackageVersions().get(STACK_PACKAGE_KEY),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e6919d30fbadea1e320faa3fec73073c0ed43f5"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwMTIzMQ==", "bodyText": "Thanks. Done.", "url": "https://github.com/hortonworks/cloudbreak/pull/7669#discussion_r399401231", "createdAt": "2020-03-27T16:46:16Z", "author": {"login": "akanto"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeImageFilter.java", "diffHunk": "@@ -85,23 +83,27 @@ private boolean isOsVersionsMatch(Image currentImage, Image newImage) {\n     }\n \n     private Predicate<Image> validateCmVersion(Image currentImage) {\n-        return image -> compareVersionStrict(currentImage.getPackageVersions().get(CM_PACKAGE_KEY), image.getPackageVersions().get(CM_PACKAGE_KEY));\n+        return image -> upgradePermissionProvider.permitCmAndSatckUpgrade(currentImage.getPackageVersions().get(CM_PACKAGE_KEY),\n+                image.getPackageVersions().get(CM_PACKAGE_KEY));\n     }\n \n     private Predicate<Image> validateStackVersion(Image currentImage) {\n-        return image -> compareVersionStrict(currentImage.getPackageVersions().get(STACK_PACKAGE_KEY), image.getPackageVersions().get(STACK_PACKAGE_KEY));\n+        return image -> upgradePermissionProvider.permitCmAndSatckUpgrade(currentImage.getPackageVersions().get(STACK_PACKAGE_KEY),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3NTE3NQ=="}, "originalCommit": {"oid": "7e6919d30fbadea1e320faa3fec73073c0ed43f5"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2599, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}