{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDY4NDMy", "number": 7135, "title": "Fix of Datahub cluster terminations when FreeIPA clean failed previously", "bodyText": "", "createdAt": "2020-01-23T17:03:07Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7135", "merged": true, "mergeCommit": {"oid": "7cd4ce361c9a40a1470b3b4b25b09b384a6e8bff"}, "closed": true, "closedAt": "2020-01-24T09:23:01Z", "author": {"login": "biharitomi"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9NqfOgFqTM0NzQ3MjQwMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9bBIfgFqTM0NzgxNDA1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NDcyNDAw", "url": "https://github.com/hortonworks/cloudbreak/pull/7135#pullrequestreview-347472400", "createdAt": "2020-01-23T17:19:29Z", "commit": {"oid": "42f3ae446512af6bdf7ed56695ff0471e795f232"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxOToyOVrOFhGTGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxOToyOVrOFhGTGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1MDUyMQ==", "bodyText": "please move this condition into the status as a method, so you don't have the implementation twice", "url": "https://github.com/hortonworks/cloudbreak/pull/7135#discussion_r370250521", "createdAt": "2020-01-23T17:19:29Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "diffHunk": "@@ -71,25 +72,43 @@ private String toClusterProxyBasepath(String freeIpaClusterCrn) {\n \n     public FreeIpaClient getFreeIpaClientForStack(Stack stack) throws FreeIpaClientException {\n         LOGGER.debug(\"Creating FreeIpaClient for stack {}\", stack.getResourceCrn());\n-\n-        try {\n-            if (clusterProxyService.isCreateConfigForClusterProxy(stack)) {\n-                return getFreeIpaClientBuilderForClusterProxy(stack).build();\n-            } else {\n-                return getFreeIpaClientBuilder(stack).build();\n+        Status stackStatus = stack.getStackStatus().getStatus();\n+        if (!Status.FREEIPA_UNREACHABLE_STATUSES.contains(stackStatus)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f3ae446512af6bdf7ed56695ff0471e795f232"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NDczMTQx", "url": "https://github.com/hortonworks/cloudbreak/pull/7135#pullrequestreview-347473141", "createdAt": "2020-01-23T17:20:40Z", "commit": {"oid": "42f3ae446512af6bdf7ed56695ff0471e795f232"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoyMDo0MFrOFhGVRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoyMDo0MFrOFhGVRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1MTA3Ng==", "bodyText": "this else branch can be moved into a separate method", "url": "https://github.com/hortonworks/cloudbreak/pull/7135#discussion_r370251076", "createdAt": "2020-01-23T17:20:40Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "diffHunk": "@@ -71,25 +72,43 @@ private String toClusterProxyBasepath(String freeIpaClusterCrn) {\n \n     public FreeIpaClient getFreeIpaClientForStack(Stack stack) throws FreeIpaClientException {\n         LOGGER.debug(\"Creating FreeIpaClient for stack {}\", stack.getResourceCrn());\n-\n-        try {\n-            if (clusterProxyService.isCreateConfigForClusterProxy(stack)) {\n-                return getFreeIpaClientBuilderForClusterProxy(stack).build();\n-            } else {\n-                return getFreeIpaClientBuilder(stack).build();\n+        Status stackStatus = stack.getStackStatus().getStatus();\n+        if (!Status.FREEIPA_UNREACHABLE_STATUSES.contains(stackStatus)) {\n+            try {\n+                if (clusterProxyService.isCreateConfigForClusterProxy(stack)) {\n+                    return getFreeIpaClientBuilderForClusterProxy(stack).build();\n+                } else {\n+                    return getFreeIpaClientBuilder(stack).build();\n+                }\n+            } catch (Exception e) {\n+                throw new FreeIpaClientException(\"Couldn't build FreeIPA client. \"\n+                        + \"Check if the FreeIPA security rules have not changed and the instance is in running state. \" + e.getLocalizedMessage(), e);\n             }\n-        } catch (Exception e) {\n-            throw new FreeIpaClientException(\"Couldn't build FreeIPA client. \"\n-                    + \"Check if the FreeIPA security rules have not changed and the instance is in running state. \" + e.getLocalizedMessage(), e);\n+        } else {\n+            String message = String.format(\"Couldn't build FreeIPA client. Because FreeIPA is in invalid state: '%s'\", stackStatus);\n+            LOGGER.warn(message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f3ae446512af6bdf7ed56695ff0471e795f232"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42f3ae446512af6bdf7ed56695ff0471e795f232", "author": {"user": {"login": "biharitomi", "name": "Tamas Bihari"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/42f3ae446512af6bdf7ed56695ff0471e795f232", "committedDate": "2020-01-23T17:00:57Z", "message": "CB-5190 avoid timeouts of DistroX/Cluster termination triggers"}, "afterCommit": {"oid": "098866ca250be2aeb245b0cc1ea7b38896a38c18", "author": {"user": {"login": "biharitomi", "name": "Tamas Bihari"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/098866ca250be2aeb245b0cc1ea7b38896a38c18", "committedDate": "2020-01-23T21:13:24Z", "message": "CB-5190 avoid timeouts of DistroX/Cluster termination triggers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "098866ca250be2aeb245b0cc1ea7b38896a38c18", "author": {"user": {"login": "biharitomi", "name": "Tamas Bihari"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/098866ca250be2aeb245b0cc1ea7b38896a38c18", "committedDate": "2020-01-23T21:13:24Z", "message": "CB-5190 avoid timeouts of DistroX/Cluster termination triggers"}, "afterCommit": {"oid": "9a737166b0e73f0942ef592931e6cfb7030f6731", "author": {"user": {"login": "biharitomi", "name": "Tamas Bihari"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9a737166b0e73f0942ef592931e6cfb7030f6731", "committedDate": "2020-01-24T00:13:49Z", "message": "CB-5190 avoid timeouts of DistroX/Cluster termination triggers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6171bdee467c19a2a42aebdb9e0a3e8be1d1104", "author": {"user": {"login": "biharitomi", "name": "Tamas Bihari"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/b6171bdee467c19a2a42aebdb9e0a3e8be1d1104", "committedDate": "2020-01-24T08:13:04Z", "message": "CB-5190 client builder based on stack state in FreeIPA"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "770c0c32ae18b6c589a1801113f34226920c6cb0", "author": {"user": {"login": "biharitomi", "name": "Tamas Bihari"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/770c0c32ae18b6c589a1801113f34226920c6cb0", "committedDate": "2020-01-24T08:13:04Z", "message": "CB-5190 avoid timeouts of DistroX/Cluster termination triggers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a737166b0e73f0942ef592931e6cfb7030f6731", "author": {"user": {"login": "biharitomi", "name": "Tamas Bihari"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9a737166b0e73f0942ef592931e6cfb7030f6731", "committedDate": "2020-01-24T00:13:49Z", "message": "CB-5190 avoid timeouts of DistroX/Cluster termination triggers"}, "afterCommit": {"oid": "770c0c32ae18b6c589a1801113f34226920c6cb0", "author": {"user": {"login": "biharitomi", "name": "Tamas Bihari"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/770c0c32ae18b6c589a1801113f34226920c6cb0", "committedDate": "2020-01-24T08:13:04Z", "message": "CB-5190 avoid timeouts of DistroX/Cluster termination triggers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3ODE0MDUx", "url": "https://github.com/hortonworks/cloudbreak/pull/7135#pullrequestreview-347814051", "createdAt": "2020-01-24T08:52:59Z", "commit": {"oid": "770c0c32ae18b6c589a1801113f34226920c6cb0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1908, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}