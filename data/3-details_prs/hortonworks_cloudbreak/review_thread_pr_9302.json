{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNzIxNjI3", "number": 9302, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDowMDozNFrOEyvCvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDowNDoxNFrOEyvH7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjM1MDA1OnYy", "diffSide": "LEFT", "path": "integration-test/scripts/fetch-secrets.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDowMDozNFrOHpiW5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDo1NDowMFrOHpkYtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMxNjU4Mw==", "bodyText": "why create a new map?\naz keyvault secret show --name \"real-ums-users-dev\" --vault-name \"jenkins-secret\" --version $secret_version --query 'value' -o tsv | jq > $USER_JSON_LOCATION\nI've a similar approach in another PR. This way we can easily update the secret.", "url": "https://github.com/hortonworks/cloudbreak/pull/9302#discussion_r513316583", "createdAt": "2020-10-28T10:00:34Z", "author": {"login": "lnardai"}, "path": "integration-test/scripts/fetch-secrets.sh", "diffHunk": "@@ -14,7 +14,7 @@ fi\n mkdir -p ./src/main/resources/ums-users\n \n echo \"Executing secret fetching from Azure 'jenkins-secret' store\"\n-az keyvault secret show --name \"real-ums-users-dev\" --vault-name \"jenkins-secret\" --query 'value' -o tsv | jq > $USER_JSON_LOCATION", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4a637c032bdd58d54f690f738f006abd35935a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM0OTgxMg==", "bodyText": "sure, makes sense, i'll wait for your pr and rebase onto that commit to use that solution", "url": "https://github.com/hortonworks/cloudbreak/pull/9302#discussion_r513349812", "createdAt": "2020-10-28T10:54:00Z", "author": {"login": "horadla23"}, "path": "integration-test/scripts/fetch-secrets.sh", "diffHunk": "@@ -14,7 +14,7 @@ fi\n mkdir -p ./src/main/resources/ums-users\n \n echo \"Executing secret fetching from Azure 'jenkins-secret' store\"\n-az keyvault secret show --name \"real-ums-users-dev\" --vault-name \"jenkins-secret\" --query 'value' -o tsv | jq > $USER_JSON_LOCATION", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMxNjU4Mw=="}, "originalCommit": {"oid": "be4a637c032bdd58d54f690f738f006abd35935a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjM1NDA3OnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/actor/CloudbreakUser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDowMTo0MVrOHpiZdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDo1NDoxOFrOHpkZcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMxNzIzNg==", "bodyText": "can't we just use the primitive? Constructors could be simpler also.", "url": "https://github.com/hortonworks/cloudbreak/pull/9302#discussion_r513317236", "createdAt": "2020-10-28T10:01:41Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/actor/CloudbreakUser.java", "diffHunk": "@@ -12,19 +12,30 @@\n \n     private String displayName;\n \n+    private Boolean admin;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4a637c032bdd58d54f690f738f006abd35935a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM1MDAwMw==", "bodyText": "sure", "url": "https://github.com/hortonworks/cloudbreak/pull/9302#discussion_r513350003", "createdAt": "2020-10-28T10:54:18Z", "author": {"login": "horadla23"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/actor/CloudbreakUser.java", "diffHunk": "@@ -12,19 +12,30 @@\n \n     private String displayName;\n \n+    private Boolean admin;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMxNzIzNg=="}, "originalCommit": {"oid": "be4a637c032bdd58d54f690f738f006abd35935a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjM2MzMyOnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/context/TestContext.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDowNDoxNFrOHpiffg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNToyNTowM1rOHpvvcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMxODc4Mg==", "bodyText": "Will this work with the old local setup for dp cli command? Since in that run there is no concept of userCrn.", "url": "https://github.com/hortonworks/cloudbreak/pull/9302#discussion_r513318782", "createdAt": "2020-10-28T10:04:14Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/context/TestContext.java", "diffHunk": "@@ -336,7 +335,7 @@ T doAction(T entity, Class<? extends MicroserviceClient> clientClass, Action<T,\n \n     protected <T extends CloudbreakTestDto, U extends MicroserviceClient>\n     T doActionAsAdmin(T entity, Class<? extends MicroserviceClient> clientClass, Action<T, U> action, String who) throws Exception {\n-        return action.action(getTestContext(), entity, getAdminMicroserviceClient(clientClass));\n+        return action.action(getTestContext(), entity, getAdminMicroserviceClient(clientClass, Crn.fromString(entity.getCrn()).getAccountId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4a637c032bdd58d54f690f738f006abd35935a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM0Nzk5Nw==", "bodyText": "what do you mean by old local setup? i guess tests should run against same version of cbd, or is there some tests which uses older cbd than the version of integration-test.jar? here i am using the crn of the entity, not usercrn, so it should work. (side note: this method is not used, so probably i will delete it when i update this pr with secret versioning change)", "url": "https://github.com/hortonworks/cloudbreak/pull/9302#discussion_r513347997", "createdAt": "2020-10-28T10:50:48Z", "author": {"login": "horadla23"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/context/TestContext.java", "diffHunk": "@@ -336,7 +335,7 @@ T doAction(T entity, Class<? extends MicroserviceClient> clientClass, Action<T,\n \n     protected <T extends CloudbreakTestDto, U extends MicroserviceClient>\n     T doActionAsAdmin(T entity, Class<? extends MicroserviceClient> clientClass, Action<T, U> action, String who) throws Exception {\n-        return action.action(getTestContext(), entity, getAdminMicroserviceClient(clientClass));\n+        return action.action(getTestContext(), entity, getAdminMicroserviceClient(clientClass, Crn.fromString(entity.getCrn()).getAccountId()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMxODc4Mg=="}, "originalCommit": {"oid": "be4a637c032bdd58d54f690f738f006abd35935a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUzNTg1OQ==", "bodyText": "removed", "url": "https://github.com/hortonworks/cloudbreak/pull/9302#discussion_r513535859", "createdAt": "2020-10-28T15:25:03Z", "author": {"login": "horadla23"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/context/TestContext.java", "diffHunk": "@@ -336,7 +335,7 @@ T doAction(T entity, Class<? extends MicroserviceClient> clientClass, Action<T,\n \n     protected <T extends CloudbreakTestDto, U extends MicroserviceClient>\n     T doActionAsAdmin(T entity, Class<? extends MicroserviceClient> clientClass, Action<T, U> action, String who) throws Exception {\n-        return action.action(getTestContext(), entity, getAdminMicroserviceClient(clientClass));\n+        return action.action(getTestContext(), entity, getAdminMicroserviceClient(clientClass, Crn.fromString(entity.getCrn()).getAccountId()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMxODc4Mg=="}, "originalCommit": {"oid": "be4a637c032bdd58d54f690f738f006abd35935a"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2059, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}