{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODgwMzk2", "number": 7281, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjoxNDowMFrODf3u1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjoxODo1NVrODf3zaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzQ1NTU2OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/dto/EnvironmentDtoConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjoxNDowMFrOFp0vTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjoxNDowMFrOFp0vTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwMDAxNQ==", "bodyText": "Is it only used in case of Azure?", "url": "https://github.com/hortonworks/cloudbreak/pull/7281#discussion_r379400015", "createdAt": "2020-02-14T12:14:00Z", "author": {"login": "biharitomi"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/dto/EnvironmentDtoConverter.java", "diffHunk": "@@ -99,11 +121,39 @@ public LocationDto environmentToLocationDto(Environment environment) {\n                 .build();\n     }\n \n+    private String getUserFromCrn(String crn) {\n+        return Optional.ofNullable(Crn.fromString(crn)).map(Crn::getUserId).orElse(null);\n+    }\n+\n     private SecurityAccessDto environmentToSecurityAccessDto(Environment environment) {\n         return SecurityAccessDto.builder()\n                 .withCidr(environment.getCidr())\n                 .withSecurityGroupIdForKnox(environment.getSecurityGroupIdForKnox())\n                 .withDefaultSecurityGroupId(environment.getDefaultSecurityGroupId())\n                 .build();\n     }\n+\n+    private Json getTags(EnvironmentCreationDto creationDto) {\n+        boolean internalTenant = entitlementService.internalTenant(creationDto.getCreator(), creationDto.getAccountId());\n+        CDPTagGenerationRequest request = CDPTagGenerationRequest.Builder.builder()\n+                .withCreatorCrn(creationDto.getCreator())\n+                .withEnvironmentCrn(creationDto.getCrn())\n+                .withAccountId(creationDto.getAccountId())\n+                .withPlatform(CloudConstants.AZURE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "751901f99ea6e091133dbdffea952b65189c9974"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzQ1ODUwOnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/v1/EnvironmentApiConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjoxNTowOVrOFp0xCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjoxNTowOVrOFp0xCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwMDQ1Ng==", "bodyText": "The getUserCrn method should be used here for getting user's crn.", "url": "https://github.com/hortonworks/cloudbreak/pull/7281#discussion_r379400456", "createdAt": "2020-02-14T12:15:09Z", "author": {"login": "biharitomi"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/v1/EnvironmentApiConverter.java", "diffHunk": "@@ -112,6 +117,8 @@ public EnvironmentCreationDto initCreationDto(EnvironmentRequest request) {\n                 .withRegions(request.getRegions())\n                 .withAuthentication(authenticationRequestToDto(request.getAuthentication()))\n                 .withAdminGroupName(request.getAdminGroupName())\n+                .withTags(request.getTags())\n+                .withCrn(createCrn(ThreadBasedUserCrnProvider.getAccountId()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "751901f99ea6e091133dbdffea952b65189c9974"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzQ2NzI4OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/network/service/NetworkCreationRequestFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjoxODo1NVrOFp02QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjoxODo1NVrOFp02QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwMTc5Mg==", "bodyText": "I sow a similar method, maybe we should create a dedicated factory or constructor for creating this object from EnvironmentDto.", "url": "https://github.com/hortonworks/cloudbreak/pull/7281#discussion_r379401792", "createdAt": "2020-02-14T12:18:55Z", "author": {"login": "biharitomi"}, "path": "environment/src/main/java/com/sequenceiq/environment/network/service/NetworkCreationRequestFactory.java", "diffHunk": "@@ -70,4 +77,13 @@ private boolean getPrivateSubnetEnabled(EnvironmentDto environmentDto) {\n     private String getUserFromCrn(String crn) {\n         return Optional.ofNullable(Crn.fromString(crn)).map(Crn::getUserId).orElse(null);\n     }\n+\n+    private CDPTagMergeRequest cdpTagMergeRequest(EnvironmentDto environmentDto) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "751901f99ea6e091133dbdffea952b65189c9974"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2845, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}