{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMDE5MTM5", "number": 9286, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDoyOTo0M1rOEx7Wfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozODo1NVrOEx7pWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzg4MDk0OnYy", "diffSide": "RIGHT", "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/GcpNetworkConnector.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDoyOTo0M1rOHoSNQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDoyOTo0M1rOHoSNQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwMzM5Mw==", "bodyText": "Why should we query the subnetwor again from GCP's API?\nI assume it should be in the collect set as only the only content, shouldn't it?", "url": "https://github.com/hortonworks/cloudbreak/pull/9286#discussion_r512003393", "createdAt": "2020-10-26T14:29:43Z", "author": {"login": "biharitomi"}, "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/GcpNetworkConnector.java", "diffHunk": "@@ -130,11 +132,23 @@ public void deleteNetworkWithSubnets(NetworkDeletionRequest networkDeletionReque\n     public NetworkCidr getNetworkCidr(Network network, CloudCredential credential) {\n         String subnetId = network.getStringParameter(GcpStackUtil.SUBNET_ID);\n         String region = network.getStringParameter(GcpStackUtil.REGION);\n+        String sharedProjectId = network.getStringParameter(GcpStackUtil.SHARED_PROJECT_ID);\n         LOGGER.debug(\"Getting network cidrs for subnet {} in region {}\", subnetId, region);\n         Compute compute = GcpStackUtil.buildCompute(credential);\n         String projectId = GcpStackUtil.getProjectId(credential);\n+        Subnetwork subnet = null;\n         try {\n-            String ipCidrRange = compute.subnetworks().get(projectId, region, subnetId).execute().getIpCidrRange();\n+            SubnetworkList ownProjectSubnets = compute.subnetworks().list(projectId, region).execute();\n+            Set<Subnetwork> collect = ownProjectSubnets.getItems()\n+                    .stream()\n+                    .filter(e -> e.getName().equals(subnetId))\n+                    .collect(Collectors.toSet());\n+            if (collect.isEmpty()) {\n+                subnet = compute.subnetworks().get(sharedProjectId, region, subnetId).execute();\n+            } else {\n+                subnet = compute.subnetworks().get(projectId, region, subnetId).execute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0f641d89155a5f59949dc5fcf0028480a42a77"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzkwMTkxOnYy", "diffSide": "RIGHT", "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/group/GcpFirewallInResourceBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozMzo0NFrOHoSZ7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozMzo0NFrOHoSZ7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwNjYzOQ==", "bodyText": "I think it's worth to check that the group.getSecurity() is not null here.", "url": "https://github.com/hortonworks/cloudbreak/pull/9286#discussion_r512006639", "createdAt": "2020-10-26T14:33:44Z", "author": {"login": "biharitomi"}, "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/group/GcpFirewallInResourceBuilder.java", "diffHunk": "@@ -60,8 +60,8 @@ public CloudResource build(GcpContext context, AuthenticatedContext auth, Group\n             throws Exception {\n         String projectId = context.getProjectId();\n \n-        ComputeRequest<Operation> firewallRequest = StringUtils.isNotBlank(security.getCloudSecurityId()) && isExistingNetwork(network)\n-                ? updateExistingFirewallForNewTargets(context, auth, group, security)\n+        ComputeRequest<Operation> firewallRequest = StringUtils.isNotBlank(group.getSecurity().getCloudSecurityId()) && isExistingNetwork(network)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0f641d89155a5f59949dc5fcf0028480a42a77"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzkxMDkxOnYy", "diffSide": "RIGHT", "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/group/GcpFirewallInResourceBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozNToyOFrOHoSfkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozNToyOFrOHoSfkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwODA4Mw==", "bodyText": "Can we move the lambda expression into a separated method?", "url": "https://github.com/hortonworks/cloudbreak/pull/9286#discussion_r512008083", "createdAt": "2020-10-26T14:35:28Z", "author": {"login": "biharitomi"}, "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/group/GcpFirewallInResourceBuilder.java", "diffHunk": "@@ -74,25 +74,27 @@ public CloudResource build(GcpContext context, AuthenticatedContext auth, Group\n         }\n     }\n \n-    private Update updateExistingFirewallForNewTargets(GcpContext context, AuthenticatedContext auth, Group group, Security security)\n+    private Update updateExistingFirewallForNewTargets(GcpContext context, AuthenticatedContext auth, Group group)\n             throws java.io.IOException {\n-        Firewall firewall = context.getCompute().firewalls().get(context.getProjectId(), security.getCloudSecurityId()).execute();\n+        Firewall firewall = context.getCompute().firewalls().get(context.getProjectId(), group.getSecurity().getCloudSecurityId()).execute();\n+        String groupTypeTag = GcpStackUtil.getGroupTypeTag(group.getType());\n         if (firewall.getTargetTags() == null) {\n-            firewall.setTargetTags(Lists.newArrayListWithCapacity(1));\n+            firewall.setTargetTags(List.of(groupTypeTag));\n+        } else if (firewall.getTargetTags().stream().filter(e -> e.equals(groupTypeTag)).collect(Collectors.toSet()).isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0f641d89155a5f59949dc5fcf0028480a42a77"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzkyOTIzOnYy", "diffSide": "RIGHT", "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/util/GcpStackUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozODo1NVrOHoSqYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozODo1NVrOHoSqYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAxMDg0OQ==", "bodyText": "Can we have a few unit tests for the replace logic?", "url": "https://github.com/hortonworks/cloudbreak/pull/9286#discussion_r512010849", "createdAt": "2020-10-26T14:38:55Z", "author": {"login": "biharitomi"}, "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/util/GcpStackUtil.java", "diffHunk": "@@ -416,6 +417,10 @@ public static String getGroupClusterTag(CloudContext cloudContext, Group group)\n         return group.getName().toLowerCase().replaceAll(\"[^A-Za-z0-9 ]\", \"\") + cloudContext.getId();\n     }\n \n+    public static String getGroupTypeTag(InstanceGroupType type) {\n+        return type.name().toLowerCase().replaceAll(\"[^A-Za-z0-9 ]\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0f641d89155a5f59949dc5fcf0028480a42a77"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2045, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}