{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNzMwNjI0", "number": 7402, "title": "CB-5791 Don't attempt to disable autorestart without KNOX service name", "bodyText": "", "createdAt": "2020-02-27T09:32:06Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7402", "merged": true, "mergeCommit": {"oid": "c3cffd4adbc37c950a17040c3fff64e637dc6d2b"}, "closed": true, "closedAt": "2020-02-27T17:26:18Z", "author": {"login": "daszabo"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIYIq0AFqTM2NTUzODE0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIa51rgBqjMwNzc3ODY0MTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTM4MTQ0", "url": "https://github.com/hortonworks/cloudbreak/pull/7402#pullrequestreview-365538144", "createdAt": "2020-02-27T09:44:40Z", "commit": {"oid": "ca104ce29503b8e0e43d3d822cac5fa1f4fc793c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTYzMDA3", "url": "https://github.com/hortonworks/cloudbreak/pull/7402#pullrequestreview-365563007", "createdAt": "2020-02-27T10:19:55Z", "commit": {"oid": "ca104ce29503b8e0e43d3d822cac5fa1f4fc793c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoxOTo1NVrOFvMmQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoxOTo1NVrOFvMmQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMzc5NA==", "bodyText": "Maybe the cluster name should be added to the log message", "url": "https://github.com/hortonworks/cloudbreak/pull/7402#discussion_r385033794", "createdAt": "2020-02-27T10:19:55Z", "author": {"login": "doktoric"}, "path": "cluster-cm/src/main/java/com/sequenceiq/cloudbreak/cm/ClouderaManagerConfigService.java", "diffHunk": "@@ -82,23 +85,35 @@ public void disableKnoxAutorestartIfCmVersionAtLeast(Versioned versionAtLeast, A\n     }\n \n     private void disableKnoxAutorestart(ApiClient client, String clusterName) {\n-        try {\n             ServicesResourceApi servicesResourceApi = clouderaManagerApiFactory.getServicesResourceApi(client);\n-            String knoxServiceName = getKnoxServiceName(clusterName, servicesResourceApi);\n+            getKnoxServiceName(clusterName, servicesResourceApi)\n+                    .ifPresentOrElse(\n+                            doDisableKnoxAutorestart(clusterName, servicesResourceApi),\n+                            () -> LOGGER.info(\"KNOX service name is missing, skipping disabling the autorestart property.\"));\n+    }\n \n+    private Consumer<String> doDisableKnoxAutorestart(String clusterName, ServicesResourceApi servicesResourceApi) {\n+        return knoxServiceName -> {\n             ApiConfig autorestartConfig = new ApiConfig().name(KNOX_AUTORESTART_ON_STOP).value(Boolean.FALSE.toString());\n             ApiServiceConfig serviceConfig = new ApiServiceConfig().addItemsItem(autorestartConfig);\n-            servicesResourceApi.updateServiceConfig(clusterName, knoxServiceName, \"\", serviceConfig);\n-        } catch (ApiException e) {\n-            LOGGER.debug(\"Failed to set autorestart_on_stop to KNOX in Cloudera Manager.\", e);\n-        }\n+            try {\n+                servicesResourceApi.updateServiceConfig(clusterName, knoxServiceName, \"\", serviceConfig);\n+            } catch (ApiException e) {\n+                LOGGER.debug(\"Failed to set autorestart_on_stop to KNOX in Cloudera Manager.\", e);\n+            }\n+        };\n     }\n \n-    private String getKnoxServiceName(String clusterName, ServicesResourceApi servicesResourceApi) throws ApiException {\n-        ApiServiceList serviceList = servicesResourceApi.readServices(clusterName, DataView.SUMMARY.name());\n-        return serviceList.getItems().stream()\n-                .filter(service -> KNOX_SERVICE.equals(service.getType()))\n-                .map(ApiService::getName)\n-                .findFirst().orElse(KNOX_SERVICE);\n+    private Optional<String> getKnoxServiceName(String clusterName, ServicesResourceApi servicesResourceApi) {\n+        try {\n+            ApiServiceList serviceList = servicesResourceApi.readServices(clusterName, DataView.SUMMARY.name());\n+            return serviceList.getItems().stream()\n+                    .filter(service -> KNOX_SERVICE.equals(service.getType()))\n+                    .map(ApiService::getName)\n+                    .findFirst();\n+        } catch (ApiException e) {\n+            LOGGER.debug(\"Failed to get KNOX service name from Cloudera Manager.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca104ce29503b8e0e43d3d822cac5fa1f4fc793c"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTYzMDY1", "url": "https://github.com/hortonworks/cloudbreak/pull/7402#pullrequestreview-365563065", "createdAt": "2020-02-27T10:20:00Z", "commit": {"oid": "ca104ce29503b8e0e43d3d822cac5fa1f4fc793c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoyMDowMFrOFvMmcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoyMDowMFrOFvMmcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMzg0MQ==", "bodyText": "Maybe the cluster name should be added to the log message", "url": "https://github.com/hortonworks/cloudbreak/pull/7402#discussion_r385033841", "createdAt": "2020-02-27T10:20:00Z", "author": {"login": "doktoric"}, "path": "cluster-cm/src/main/java/com/sequenceiq/cloudbreak/cm/ClouderaManagerConfigService.java", "diffHunk": "@@ -82,23 +85,35 @@ public void disableKnoxAutorestartIfCmVersionAtLeast(Versioned versionAtLeast, A\n     }\n \n     private void disableKnoxAutorestart(ApiClient client, String clusterName) {\n-        try {\n             ServicesResourceApi servicesResourceApi = clouderaManagerApiFactory.getServicesResourceApi(client);\n-            String knoxServiceName = getKnoxServiceName(clusterName, servicesResourceApi);\n+            getKnoxServiceName(clusterName, servicesResourceApi)\n+                    .ifPresentOrElse(\n+                            doDisableKnoxAutorestart(clusterName, servicesResourceApi),\n+                            () -> LOGGER.info(\"KNOX service name is missing, skipping disabling the autorestart property.\"));\n+    }\n \n+    private Consumer<String> doDisableKnoxAutorestart(String clusterName, ServicesResourceApi servicesResourceApi) {\n+        return knoxServiceName -> {\n             ApiConfig autorestartConfig = new ApiConfig().name(KNOX_AUTORESTART_ON_STOP).value(Boolean.FALSE.toString());\n             ApiServiceConfig serviceConfig = new ApiServiceConfig().addItemsItem(autorestartConfig);\n-            servicesResourceApi.updateServiceConfig(clusterName, knoxServiceName, \"\", serviceConfig);\n-        } catch (ApiException e) {\n-            LOGGER.debug(\"Failed to set autorestart_on_stop to KNOX in Cloudera Manager.\", e);\n-        }\n+            try {\n+                servicesResourceApi.updateServiceConfig(clusterName, knoxServiceName, \"\", serviceConfig);\n+            } catch (ApiException e) {\n+                LOGGER.debug(\"Failed to set autorestart_on_stop to KNOX in Cloudera Manager.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca104ce29503b8e0e43d3d822cac5fa1f4fc793c"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca104ce29503b8e0e43d3d822cac5fa1f4fc793c", "author": {"user": {"login": "daszabo", "name": "David Szabo"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ca104ce29503b8e0e43d3d822cac5fa1f4fc793c", "committedDate": "2020-02-27T09:28:28Z", "message": "CB-5791 Don't attempt to dosable autorestart without KNOX service name"}, "afterCommit": {"oid": "74dd0e39c9d44f85fa331333b2afb7fcd037ffac", "author": {"user": {"login": "daszabo", "name": "David Szabo"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/74dd0e39c9d44f85fa331333b2afb7fcd037ffac", "committedDate": "2020-02-27T10:54:50Z", "message": "CB-5791 Don't attempt to dosable autorestart without KNOX service name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61fba725894b6dfc5c99c69e6754b79ae1055d6d", "author": {"user": {"login": "daszabo", "name": "David Szabo"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/61fba725894b6dfc5c99c69e6754b79ae1055d6d", "committedDate": "2020-02-27T12:57:57Z", "message": "CB-5791 Don't attempt to dosable autorestart without KNOX service name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "74dd0e39c9d44f85fa331333b2afb7fcd037ffac", "author": {"user": {"login": "daszabo", "name": "David Szabo"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/74dd0e39c9d44f85fa331333b2afb7fcd037ffac", "committedDate": "2020-02-27T10:54:50Z", "message": "CB-5791 Don't attempt to dosable autorestart without KNOX service name"}, "afterCommit": {"oid": "61fba725894b6dfc5c99c69e6754b79ae1055d6d", "author": {"user": {"login": "daszabo", "name": "David Szabo"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/61fba725894b6dfc5c99c69e6754b79ae1055d6d", "committedDate": "2020-02-27T12:57:57Z", "message": "CB-5791 Don't attempt to dosable autorestart without KNOX service name"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2607, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}