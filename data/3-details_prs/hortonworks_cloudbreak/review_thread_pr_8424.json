{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNDczNzM3", "number": 8424, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTo0MTo1MlrOEJGiuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTo0MTo1MlrOEJGiuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTc5ODMzOnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/tags/v1/controller/AccountTagController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTo0MTo1MlrOGpdyOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTo1ODowMVrOGpeMag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzMjc5Mg==", "bodyText": "How is this limited to internalOnly?", "url": "https://github.com/hortonworks/cloudbreak/pull/8424#discussion_r446132792", "createdAt": "2020-06-26T11:41:52Z", "author": {"login": "lnardai"}, "path": "environment/src/main/java/com/sequenceiq/environment/tags/v1/controller/AccountTagController.java", "diffHunk": "@@ -71,6 +71,12 @@ public AccountTagController(AccountTagService accountTagService,\n     @CheckPermissionByAccount(action = AuthorizationResourceAction.ENVIRONMENT_READ)\n     public AccountTagResponses list() {\n         String accountId = ThreadBasedUserCrnProvider.getAccountId();\n+        return listInAccount(accountId);\n+    }\n+\n+    @Override\n+    @CheckPermissionByAccount(action = AuthorizationResourceAction.ENVIRONMENT_READ)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ff93a2bc5d984b918275cd89fdb1357715132b4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzOTQ5OA==", "bodyText": "introduced an annotation for that, let's discuss if there is a simpler way to do this", "url": "https://github.com/hortonworks/cloudbreak/pull/8424#discussion_r446139498", "createdAt": "2020-06-26T11:58:01Z", "author": {"login": "horadla23"}, "path": "environment/src/main/java/com/sequenceiq/environment/tags/v1/controller/AccountTagController.java", "diffHunk": "@@ -71,6 +71,12 @@ public AccountTagController(AccountTagService accountTagService,\n     @CheckPermissionByAccount(action = AuthorizationResourceAction.ENVIRONMENT_READ)\n     public AccountTagResponses list() {\n         String accountId = ThreadBasedUserCrnProvider.getAccountId();\n+        return listInAccount(accountId);\n+    }\n+\n+    @Override\n+    @CheckPermissionByAccount(action = AuthorizationResourceAction.ENVIRONMENT_READ)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzMjc5Mg=="}, "originalCommit": {"oid": "3ff93a2bc5d984b918275cd89fdb1357715132b4"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3174, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}