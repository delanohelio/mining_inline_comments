{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzU5Njgz", "number": 8116, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1MTowNlrOD-OlaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1MTowNlrOD-OlaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTc3MjU3OnYy", "diffSide": "RIGHT", "path": "cluster-proxy/src/main/java/com/sequenceiq/cloudbreak/clusterproxy/ClusterProxyEnablementService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1MTowNlrOGYMv3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowMDo1OFrOGYNQSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyNzg3MA==", "bodyText": "instead of a hard coded value, could you use a configurable one and instead of a single item it could be a set/list so we can disable it on multiple platforms if necessary", "url": "https://github.com/hortonworks/cloudbreak/pull/8116#discussion_r428027870", "createdAt": "2020-05-20T13:51:06Z", "author": {"login": "lacikaaa"}, "path": "cluster-proxy/src/main/java/com/sequenceiq/cloudbreak/clusterproxy/ClusterProxyEnablementService.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.sequenceiq.cloudbreak.clusterproxy;\n+\n+import javax.inject.Inject;\n+\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.common.mappable.CloudPlatform;\n+\n+@Component\n+public class ClusterProxyEnablementService {\n+\n+    @Inject\n+    private ClusterProxyConfiguration clusterProxyConfiguration;\n+\n+    public boolean isClusterProxyApplicable(String cloudPlatform) {\n+        return clusterProxyConfiguration.isClusterProxyIntegrationEnabled() && !CloudPlatform.MOCK.name().equals(cloudPlatform);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571b6df6e97d7edea071cd6a95ae76be2788eb9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzNjE3MA==", "bodyText": "fair point. let me do that", "url": "https://github.com/hortonworks/cloudbreak/pull/8116#discussion_r428036170", "createdAt": "2020-05-20T14:00:58Z", "author": {"login": "doktoric"}, "path": "cluster-proxy/src/main/java/com/sequenceiq/cloudbreak/clusterproxy/ClusterProxyEnablementService.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.sequenceiq.cloudbreak.clusterproxy;\n+\n+import javax.inject.Inject;\n+\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.common.mappable.CloudPlatform;\n+\n+@Component\n+public class ClusterProxyEnablementService {\n+\n+    @Inject\n+    private ClusterProxyConfiguration clusterProxyConfiguration;\n+\n+    public boolean isClusterProxyApplicable(String cloudPlatform) {\n+        return clusterProxyConfiguration.isClusterProxyIntegrationEnabled() && !CloudPlatform.MOCK.name().equals(cloudPlatform);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyNzg3MA=="}, "originalCommit": {"oid": "0571b6df6e97d7edea071cd6a95ae76be2788eb9"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3346, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}