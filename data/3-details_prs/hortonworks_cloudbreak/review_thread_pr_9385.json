{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NDY4NzY3", "number": 9385, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwODowODoxOVrOE2pYTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0ODoyMVrOE8I5gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NzM2NTI1OnYy", "diffSide": "RIGHT", "path": "datalake/src/main/resources/duties/7.2.7/aws/light_duty.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwODowODoxOVrOHvi-IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwODowODoxOVrOHvi-IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYxODA4MA==", "bodyText": "This doesn't seem right. 1 GB disk?", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r519618080", "createdAt": "2020-11-09T08:08:19Z", "author": {"login": "keyki"}, "path": "datalake/src/main/resources/duties/7.2.7/aws/light_duty.json", "diffHunk": "@@ -15,7 +15,7 @@\n         \"attachedVolumes\": [\n           {\n             \"count\": 1,\n-            \"size\": 100,\n+            \"size\": 1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f62ff213df8d364b0b2f2ad9c46a4b3a5b7261b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDU3NTkzOnYy", "diffSide": "RIGHT", "path": "datalake/src/main/resources/duties/7.2.7/aws/medium_duty_ha.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoxNToyNFrOHyHo7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoxNToyNFrOHyHo7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxNjAxMg==", "bodyText": "If we set \"count\" to 0, do we also have to set \"size\" to 0. That's a little confusing. We should remove the \"size\" field from this JSON if count is 0.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r522316012", "createdAt": "2020-11-12T18:15:24Z", "author": {"login": "kmanamcheri"}, "path": "datalake/src/main/resources/duties/7.2.7/aws/medium_duty_ha.json", "diffHunk": "@@ -54,8 +54,8 @@\n         \"instanceType\": \"t3.medium\",\n         \"attachedVolumes\": [\n           {\n-            \"count\": 1,\n-            \"size\": 100,\n+            \"count\": 0,\n+            \"size\": 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51323b9bd8fbf69730bd80d64c1b06e1d51d9681"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDU4MTAyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoxNjo0OFrOHyHsMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoxNjo0OFrOHyHsMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxNjg1MA==", "bodyText": "Update the error message to state that IDBroker does not use data volume and so you are expecting it to be zero.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r522316850", "createdAt": "2020-11-12T18:16:48Z", "author": {"login": "kmanamcheri"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -157,13 +163,22 @@ private void validateVolumeType(VolumeTemplate value, Platform platform, Validat\n         }\n     }\n \n+    private boolean isIDBrokerInstanceGroup(InstanceGroup instanceGroup) {\n+        return groupNameIDBroker.equalsIgnoreCase(instanceGroup.getGroupName());\n+    }\n+\n     private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n                 if (value.getVolumeCount() > config.maximumNumber()) {\n                     validationBuilder.error(String.format(\"Max allowed volume count for '%s': %s\", vmType.value(), config.maximumNumber()));\n+                } else if (isIDBrokerInstanceGroup(instanceGroup)) {\n+                    if (value.getVolumeCount() != 0)  {\n+                        // IDBroker does not use data volume, so its volume count should be zero\n+                        validationBuilder.error(String.format(\"IDBroker volume count: %s is not zero\", value.getVolumeCount()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51323b9bd8fbf69730bd80d64c1b06e1d51d9681"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDU5MTc1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoxOToyMlrOHyHyuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoxOToyMlrOHyHyuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxODUyMQ==", "bodyText": "nit: why use a constant and then a function, and then another helper function. Why can't we just use the string to compare directly?\nAlso, static strings should be upper case.\nIDBROKER_GROUP_NAME.equalsIgnoreCase(instanceGroup.getGroupName());", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r522318521", "createdAt": "2020-11-12T18:19:22Z", "author": {"login": "kmanamcheri"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -157,13 +163,22 @@ private void validateVolumeType(VolumeTemplate value, Platform platform, Validat\n         }\n     }\n \n+    private boolean isIDBrokerInstanceGroup(InstanceGroup instanceGroup) {\n+        return groupNameIDBroker.equalsIgnoreCase(instanceGroup.getGroupName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51323b9bd8fbf69730bd80d64c1b06e1d51d9681"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDU5NzkxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoyMTowMlrOHyH2kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoyMTowMlrOHyH2kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxOTUwNQ==", "bodyText": "This can be final and by convention static final variables are upper cased.\nhttps://docs.oracle.com/javase/tutorial/java/nutsandbolts/variables.html\n\nIf your variable stores a constant value, such as static final int NUM_GEARS = 6, the convention changes slightly, capitalizing every letter and separating subsequent words with the underscore character. By convention, the underscore character is never used elsewhere.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r522319505", "createdAt": "2020-11-12T18:21:02Z", "author": {"login": "kmanamcheri"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -29,13 +29,15 @@\n import com.sequenceiq.cloudbreak.domain.Template;\n import com.sequenceiq.cloudbreak.domain.VolumeTemplate;\n import com.sequenceiq.cloudbreak.domain.stack.Stack;\n+import com.sequenceiq.cloudbreak.domain.stack.instance.InstanceGroup;\n import com.sequenceiq.cloudbreak.dto.credential.Credential;\n import com.sequenceiq.cloudbreak.validation.ValidationResult;\n import com.sequenceiq.cloudbreak.workspace.model.User;\n import com.sequenceiq.common.api.type.CdpResourceType;\n \n @Component\n public class TemplateValidator {\n+    private static String groupNameIDBroker = \"idbroker\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51323b9bd8fbf69730bd80d64c1b06e1d51d9681"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTU1MDUwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjoyNTozM1rOHyRGHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjoyNTozM1rOHyRGHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ3MDk0MQ==", "bodyText": "You have a typo in doesn't\nI prefer not using contractions in error logs. Use the full form does not", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r522470941", "createdAt": "2020-11-12T22:25:33Z", "author": {"login": "kmanamcheri"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -157,13 +159,24 @@ private void validateVolumeType(VolumeTemplate value, Platform platform, Validat\n         }\n     }\n \n+    private boolean isIDBrokerInstanceGroup(InstanceGroup instanceGroup) {\n+        return GROUP_NAME_ID_BROKER.equalsIgnoreCase(instanceGroup.getGroupName());\n+    }\n+\n     private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n                 if (value.getVolumeCount() > config.maximumNumber()) {\n                     validationBuilder.error(String.format(\"Max allowed volume count for '%s': %s\", vmType.value(), config.maximumNumber()));\n+                } else if (isIDBrokerInstanceGroup(instanceGroup)) {\n+                    if (value.getVolumeCount() != 0)  {\n+                        // IDBroker does not use data volume, so its volume count should be zero\n+                        validationBuilder.error(\n+                                String.format(\"IDBroker volume count: %s is not zero. It does't use data volume, and its count must be zero.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29c2955c3a047560db5570582733a5c55e4d0408"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODE3NTczOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMjoxMzozMFrOH1q7sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNDo0NzoxNVrOH1xSwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjAzOTk4NQ==", "bodyText": "why we are doing this? we dont want to set it if the user specify us. QA team can test any scenario.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r526039985", "createdAt": "2020-11-18T12:13:30Z", "author": {"login": "doktoric"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -157,12 +159,23 @@ private void validateVolumeType(VolumeTemplate value, Platform platform, Validat\n         }\n     }\n \n+    private boolean isIDBrokerInstanceGroup(InstanceGroup instanceGroup) {\n+        return GROUP_NAME_ID_BROKER.equalsIgnoreCase(instanceGroup.getGroupName());\n+    }\n+\n     private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n-                if (value.getVolumeCount() > config.maximumNumber()) {\n+                if (isIDBrokerInstanceGroup(instanceGroup)) {\n+                    if (value.getVolumeCount() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cd06a23163c83b6f8344cbf9457d94eed285e13"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE0NDE5NA==", "bodyText": "@doktoric I think we never want to attach a data volume for the IDBroker node. I don't think QA team should or want to test this. This is applicable ONLY for IDBroker nodes. The reason is that IDBroker should not need a data volume.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r526144194", "createdAt": "2020-11-18T14:47:15Z", "author": {"login": "kmanamcheri"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -157,12 +159,23 @@ private void validateVolumeType(VolumeTemplate value, Platform platform, Validat\n         }\n     }\n \n+    private boolean isIDBrokerInstanceGroup(InstanceGroup instanceGroup) {\n+        return GROUP_NAME_ID_BROKER.equalsIgnoreCase(instanceGroup.getGroupName());\n+    }\n+\n     private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n-                if (value.getVolumeCount() > config.maximumNumber()) {\n+                if (isIDBrokerInstanceGroup(instanceGroup)) {\n+                    if (value.getVolumeCount() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjAzOTk4NQ=="}, "originalCommit": {"oid": "2cd06a23163c83b6f8344cbf9457d94eed285e13"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODE3NjQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMjoxMzo0N1rOH1q8OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMjoxMzo0N1rOH1q8OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA0MDEyMQ==", "bodyText": "I dont think we should do this", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r526040121", "createdAt": "2020-11-18T12:13:47Z", "author": {"login": "doktoric"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -174,11 +187,18 @@ private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumePara\n     }\n \n     private void validateVolumeSize(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n-                if (value.getVolumeSize() > config.maximumSize()) {\n+                if (isIDBrokerInstanceGroup(instanceGroup)) {\n+                    if (value.getVolumeSize() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cd06a23163c83b6f8344cbf9457d94eed285e13"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTIxNzQwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozMzowNVrOH2ucHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozMzowNVrOH2ucHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0NjAxMw==", "bodyText": "Naive question: Is there possibly any VM type that has a positive minimum size? If so, the change above will cause conflicts if the custom DL is launched with the IDBroker using such an instance type.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r527146013", "createdAt": "2020-11-19T19:33:05Z", "author": {"login": "lajosrodek"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -157,12 +159,21 @@ private void validateVolumeType(VolumeTemplate value, Platform platform, Validat\n         }\n     }\n \n+    private boolean isIDBrokerInstanceGroup(InstanceGroup instanceGroup) {\n+        return GROUP_NAME_ID_BROKER.equalsIgnoreCase(instanceGroup.getGroupName());\n+    }\n+\n     private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n-                if (value.getVolumeCount() > config.maximumNumber()) {\n+                if (isIDBrokerInstanceGroup(instanceGroup)) {\n+                    if (value.getVolumeCount() != 0) {\n+                        // IDBroker does not use data volume, so its volume count should be zero\n+                        validationBuilder.error(String.format(\"IDBroker volume count: %s is not zero\", value.getVolumeCount()));\n+                    }\n+                } else if (value.getVolumeCount() > config.maximumNumber()) {\n                     validationBuilder.error(String.format(\"Max allowed volume count for '%s': %s\", vmType.value(), config.maximumNumber()));\n                 } else if (value.getVolumeCount() < config.minimumNumber()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b203109ee8c21677c5c1bb3f6e8faf17172ba7ea"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTIyMjUxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozNDoyNFrOH2ufIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozNDoyNFrOH2ufIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0Njc4NQ==", "bodyText": "Like above, I wonder if forcing the size & count to zero causes any troubles for custom DL clusters.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r527146785", "createdAt": "2020-11-19T19:34:24Z", "author": {"login": "lajosrodek"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -174,11 +185,16 @@ private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumePara\n     }\n \n     private void validateVolumeSize(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n-                if (value.getVolumeSize() > config.maximumSize()) {\n+                if (isIDBrokerInstanceGroup(instanceGroup)) {\n+                    if (value.getVolumeSize() != 0) {\n+                        // IDBroker does not use data volume, so its volume size should be zero\n+                        validationBuilder.error(String.format(\"IDBroker volume size: %s is not zero\", value.getVolumeSize()));\n+                    }\n+                } else if (value.getVolumeSize() > config.maximumSize()) {\n                     validationBuilder.error(String.format(\"Max allowed volume size for '%s': %s\", vmType.value(), config.maximumSize()));\n                 } else if (value.getVolumeSize() < config.minimumSize()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b203109ee8c21677c5c1bb3f6e8faf17172ba7ea"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTIzNzQ3OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidatorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozODoxNlrOH2un6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozODoxNlrOH2un6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0OTAzNA==", "bodyText": "The usage of JUnit 5 would be preferable; it is high time to get rid of JUnit 4. For assertions, please consider using AssertJ assertThat() etc. as its fluent API is more expressive. (Neither of these are mandatory or enforced anywhere, but it would be nice to use them in new tests at least.)", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r527149034", "createdAt": "2020-11-19T19:38:16Z", "author": {"login": "lajosrodek"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidatorTest.java", "diffHunk": "@@ -0,0 +1,217 @@\n+package com.sequenceiq.cloudbreak.controller.validation.template;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.isNull;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.junit.Assert;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b203109ee8c21677c5c1bb3f6e8faf17172ba7ea"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTI0MDA0OnYy", "diffSide": "RIGHT", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozODo1OVrOH2upeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozODo1OVrOH2upeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0OTQzMg==", "bodyText": "I wonder if anyone relying on custom DL templates would be pissed about this change if they expected the volume to be present (for whatever reason). I know we are already committing such a change by overwriting the RAZ flag just a few lines below. \ud83d\ude04", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r527149432", "createdAt": "2020-11-19T19:38:59Z", "author": {"login": "lajosrodek"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxService.java", "diffHunk": "@@ -288,9 +292,12 @@ private StackV4Request getStackRequest(SdxClusterRequest sdxClusterRequest, Stac\n                 throw new BadRequestException(\"Can't find template for cloudplatform: \" + cloudPlatform + \", shape: \" + sdxClusterRequest.getClusterShape() +\n                         \", runtime version: \" + runtimeVersion);\n             }\n+            updateStackV4RequestWithIDBrokerVolume(stackRequest);\n             stackRequest.getCluster().setRangerRazEnabled(sdxClusterRequest.isEnableRangerRaz());\n             return stackRequest;\n         } else {\n+            updateStackV4RequestWithIDBrokerVolume(internalStackV4Request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b203109ee8c21677c5c1bb3f6e8faf17172ba7ea"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTI1Mjg3OnYy", "diffSide": "RIGHT", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTo0MjoxMFrOH2uxJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTo0MjoxMFrOH2uxJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE1MTM5Ng==", "bodyText": "Nit: compatable -> compatible.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r527151396", "createdAt": "2020-11-19T19:42:10Z", "author": {"login": "lajosrodek"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxService.java", "diffHunk": "@@ -299,6 +306,26 @@ private StackV4Request getStackRequest(SdxClusterRequest sdxClusterRequest, Stac\n         }\n     }\n \n+    private void updateStackV4RequestWithIDBrokerVolume(StackV4Request request) {\n+        for (InstanceGroupV4Request instanceGroupV4Request : request.getInstanceGroups()) {\n+            if (!GROUP_NAME_ID_BROKER.equalsIgnoreCase(instanceGroupV4Request.getName())) {\n+                continue;\n+            }\n+\n+            InstanceTemplateV4Request templateV4Request = instanceGroupV4Request.getTemplate();\n+            if (templateV4Request == null || templateV4Request.getAttachedVolumes() == null) {\n+                continue;\n+            }\n+\n+            for (VolumeV4Request attachedVolumeRequest : templateV4Request.getAttachedVolumes()) {\n+                // IDBroker does not use data volume, so its volume count should be zero\n+                // set the data volume count and size to be zero to be backward-compatable and avoid creating volume that is not used", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b203109ee8c21677c5c1bb3f6e8faf17172ba7ea"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDkwODk2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTozNjowMVrOH4FYCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTozNjowMVrOH4FYCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3MDM3OA==", "bodyText": "Insert !isIDBrokerInstanceGroup(instanceGroup) &&  at the beginning of condition.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r528570378", "createdAt": "2020-11-23T09:36:01Z", "author": {"login": "lajosrodek"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -157,12 +159,22 @@ private void validateVolumeType(VolumeTemplate value, Platform platform, Validat\n         }\n     }\n \n+    private boolean isIDBrokerInstanceGroup(InstanceGroup instanceGroup) {\n+        return GROUP_NAME_ID_BROKER.equalsIgnoreCase(instanceGroup.getGroupName());\n+    }\n+\n     private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n-                if (value.getVolumeCount() > config.maximumNumber()) {\n+                if (isIDBrokerInstanceGroup(instanceGroup)) {\n+                    if (value.getVolumeCount() > config.maximumNumber()) {\n+                        // IDBroker does not use data volume, so its volume count should be zero\n+                        // To be backward-compatible, we only check max limit and allow the min limit to be zero for IDBroker\n+                        validationBuilder.error(String.format(\"Max allowed volume count for '%s': %s\", vmType.value(), config.maximumNumber()));\n+                    }\n+                } else if (value.getVolumeCount() > config.maximumNumber()) {\n                     validationBuilder.error(String.format(\"Max allowed volume count for '%s': %s\", vmType.value(), config.maximumNumber()));\n                 } else if (value.getVolumeCount() < config.minimumNumber()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36e6ac7bf37a172d0bbb3ea5d3fdb87e5e0e01a"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDkyODAxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0MDozNFrOH4FjNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0MDozNFrOH4FjNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3MzIzOQ==", "bodyText": "Please do not duplicate code. There is no need for this isIDBrokerInstanceGroup(instanceGroup) branch. Instead, the original validation for the max limit can be reused without changes, and the extra check for the IDBroker instance group name can be added to the min limit validation below. The comment can be also moved in front of the whole if block, or possibly inside the min limit validation branch (whichever you prefer).", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r528573239", "createdAt": "2020-11-23T09:40:34Z", "author": {"login": "lajosrodek"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -157,12 +159,22 @@ private void validateVolumeType(VolumeTemplate value, Platform platform, Validat\n         }\n     }\n \n+    private boolean isIDBrokerInstanceGroup(InstanceGroup instanceGroup) {\n+        return GROUP_NAME_ID_BROKER.equalsIgnoreCase(instanceGroup.getGroupName());\n+    }\n+\n     private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n-                if (value.getVolumeCount() > config.maximumNumber()) {\n+                if (isIDBrokerInstanceGroup(instanceGroup)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36e6ac7bf37a172d0bbb3ea5d3fdb87e5e0e01a"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDkzNzgzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0MzowNFrOH4FpGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0MzowNFrOH4FpGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3NDc0Nw==", "bodyText": "Like above, please remove the new isIDBrokerInstanceGroup(instanceGroup) branch and reuse the original max limit validation without any changes.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r528574747", "createdAt": "2020-11-23T09:43:04Z", "author": {"login": "lajosrodek"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -174,11 +186,17 @@ private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumePara\n     }\n \n     private void validateVolumeSize(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n-                if (value.getVolumeSize() > config.maximumSize()) {\n+                if (isIDBrokerInstanceGroup(instanceGroup)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36e6ac7bf37a172d0bbb3ea5d3fdb87e5e0e01a"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDk0NzM2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0NToyN1rOH4Fu1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0NToyN1rOH4Fu1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3NjIxNA==", "bodyText": "Insert !isIDBrokerInstanceGroup(instanceGroup) &&  at the beginning of condition.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r528576214", "createdAt": "2020-11-23T09:45:27Z", "author": {"login": "lajosrodek"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidator.java", "diffHunk": "@@ -174,11 +186,17 @@ private void validateVolumeCount(VolumeTemplate value, VmType vmType, VolumePara\n     }\n \n     private void validateVolumeSize(VolumeTemplate value, VmType vmType, VolumeParameterType volumeParameterType,\n-        ValidationResult.ValidationResultBuilder validationBuilder) {\n+        ValidationResult.ValidationResultBuilder validationBuilder, InstanceGroup instanceGroup) {\n         if (vmType != null && needToCheckVolume(volumeParameterType, value.getVolumeCount())) {\n             VolumeParameterConfig config = vmType.getVolumeParameterbyVolumeParameterType(volumeParameterType);\n             if (config != null) {\n-                if (value.getVolumeSize() > config.maximumSize()) {\n+                if (isIDBrokerInstanceGroup(instanceGroup)) {\n+                    if (value.getVolumeSize() > config.maximumSize()) {\n+                        // IDBroker does not use data volume, so its volume size should be zero\n+                        // To be backward-compatible, we only check max limit and allow the min limit to be zero for IDBroker\n+                        validationBuilder.error(String.format(\"Max allowed volume size for '%s': %s\", vmType.value(), config.maximumSize()));\n+                    }\n+                } else if (value.getVolumeSize() > config.maximumSize()) {\n                     validationBuilder.error(String.format(\"Max allowed volume size for '%s': %s\", vmType.value(), config.maximumSize()));\n                 } else if (value.getVolumeSize() < config.minimumSize()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36e6ac7bf37a172d0bbb3ea5d3fdb87e5e0e01a"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDk1NDcxOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidatorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0NzoyMlrOH4FzVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0NzoyMlrOH4FzVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3NzM2NQ==", "bodyText": "Please use JUnit 5 (Jupiter API) for new test classes.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r528577365", "createdAt": "2020-11-23T09:47:22Z", "author": {"login": "lajosrodek"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/template/TemplateValidatorTest.java", "diffHunk": "@@ -0,0 +1,216 @@\n+package com.sequenceiq.cloudbreak.controller.validation.template;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.isNull;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.junit.Before;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36e6ac7bf37a172d0bbb3ea5d3fdb87e5e0e01a"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDk1ODEwOnYy", "diffSide": "RIGHT", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0ODoyMVrOH4F1aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo0ODoyMVrOH4F1aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3Nzg5Nw==", "bodyText": "Please remove, this is not needed anymore.", "url": "https://github.com/hortonworks/cloudbreak/pull/9385#discussion_r528577897", "createdAt": "2020-11-23T09:48:21Z", "author": {"login": "lajosrodek"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxService.java", "diffHunk": "@@ -92,6 +92,8 @@\n @Service\n public class SdxService implements ResourceIdProvider, ResourceBasedCrnProvider {\n \n+    private static final String GROUP_NAME_ID_BROKER = \"idbroker\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36e6ac7bf37a172d0bbb3ea5d3fdb87e5e0e01a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3560, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}