{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MzczOTMw", "number": 9600, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNToxOTo0NFrOFCZ-aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjo0NjoyMVrOFC5-2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MDY3MDQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeAvailabilityService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNToxOTo0NFrOIBiwww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozMjozNFrOIBjpSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ4OTAyNw==", "bodyText": "Perhaps you could extend these branches with log messages why we are using a certain url.", "url": "https://github.com/hortonworks/cloudbreak/pull/9600#discussion_r538489027", "createdAt": "2020-12-08T15:19:44Z", "author": {"login": "keyki"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeAvailabilityService.java", "diffHunk": "@@ -180,7 +185,14 @@ private Image getCurrentImageFromCatalog(String currentImageId, CloudbreakImageC\n         return imageService.getImage(stack.getId());\n     }\n \n-    private CloudbreakImageCatalogV3 getImagesFromCatalog(String imageCatalogUrl) throws CloudbreakImageCatalogException {\n+    private CloudbreakImageCatalogV3 getImagesFromCatalog(Workspace workspace,\n+            com.sequenceiq.cloudbreak.cloud.model.Image image) throws CloudbreakImageCatalogException {\n+        String imageCatalogUrl;\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b451f2bfe48187ac02459aa663015211f2e391"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUwMzQ5Nw==", "bodyText": "+1", "url": "https://github.com/hortonworks/cloudbreak/pull/9600#discussion_r538503497", "createdAt": "2020-12-08T15:32:34Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeAvailabilityService.java", "diffHunk": "@@ -180,7 +185,14 @@ private Image getCurrentImageFromCatalog(String currentImageId, CloudbreakImageC\n         return imageService.getImage(stack.getId());\n     }\n \n-    private CloudbreakImageCatalogV3 getImagesFromCatalog(String imageCatalogUrl) throws CloudbreakImageCatalogException {\n+    private CloudbreakImageCatalogV3 getImagesFromCatalog(Workspace workspace,\n+            com.sequenceiq.cloudbreak.cloud.model.Image image) throws CloudbreakImageCatalogException {\n+        String imageCatalogUrl;\n+        try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ4OTAyNw=="}, "originalCommit": {"oid": "36b451f2bfe48187ac02459aa663015211f2e391"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MDc0MTk5OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeAvailabilityServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozMDowOFrOIBjd8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozNDoyN1rOIBjxYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUwMDU5NQ==", "bodyText": "typo: returns -> return", "url": "https://github.com/hortonworks/cloudbreak/pull/9600#discussion_r538500595", "createdAt": "2020-12-08T15:30:08Z", "author": {"login": "pdarvasi"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeAvailabilityServiceTest.java", "diffHunk": "@@ -155,18 +167,56 @@ public void testCheckForUpgradesByNameShouldReturnsImagesWhenThereAreAvailableIm\n                 currentImage.getImageCatalogName());\n     }\n \n+    @Test\n+    public void testCheckForUpgradesByNameShouldReturnsImagesFromFallbackCatalogWhenThereAreAvailableImagesButImageCatalogByNameNotFound()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b451f2bfe48187ac02459aa663015211f2e391"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUwNTU2OA==", "bodyText": "omg", "url": "https://github.com/hortonworks/cloudbreak/pull/9600#discussion_r538505568", "createdAt": "2020-12-08T15:34:27Z", "author": {"login": "keyki"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeAvailabilityServiceTest.java", "diffHunk": "@@ -155,18 +167,56 @@ public void testCheckForUpgradesByNameShouldReturnsImagesWhenThereAreAvailableIm\n                 currentImage.getImageCatalogName());\n     }\n \n+    @Test\n+    public void testCheckForUpgradesByNameShouldReturnsImagesFromFallbackCatalogWhenThereAreAvailableImagesButImageCatalogByNameNotFound()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUwMDU5NQ=="}, "originalCommit": {"oid": "36b451f2bfe48187ac02459aa663015211f2e391"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MDc1NzQxOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeAvailabilityServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozMjoxNVrOIBjnow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozMjoxNVrOIBjnow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUwMzA3NQ==", "bodyText": "could you pls have a unit test to cover \"ImageCatalogByNameFound()\"", "url": "https://github.com/hortonworks/cloudbreak/pull/9600#discussion_r538503075", "createdAt": "2020-12-08T15:32:15Z", "author": {"login": "pdarvasi"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeAvailabilityServiceTest.java", "diffHunk": "@@ -155,18 +167,56 @@ public void testCheckForUpgradesByNameShouldReturnsImagesWhenThereAreAvailableIm\n                 currentImage.getImageCatalogName());\n     }\n \n+    @Test\n+    public void testCheckForUpgradesByNameShouldReturnsImagesFromFallbackCatalogWhenThereAreAvailableImagesButImageCatalogByNameNotFound()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b451f2bfe48187ac02459aa663015211f2e391"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTkxNDQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeAvailabilityService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjo0NjoyMVrOICS3NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjo0NjoyMVrOICS3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI3NzEwOQ==", "bodyText": "if you declare imageCatalogUrl on line 191 with this as a default value, then you can omit this", "url": "https://github.com/hortonworks/cloudbreak/pull/9600#discussion_r539277109", "createdAt": "2020-12-09T12:46:21Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeAvailabilityService.java", "diffHunk": "@@ -180,7 +185,18 @@ private Image getCurrentImageFromCatalog(String currentImageId, CloudbreakImageC\n         return imageService.getImage(stack.getId());\n     }\n \n-    private CloudbreakImageCatalogV3 getImagesFromCatalog(String imageCatalogUrl) throws CloudbreakImageCatalogException {\n+    private CloudbreakImageCatalogV3 getImagesFromCatalog(Workspace workspace,\n+            com.sequenceiq.cloudbreak.cloud.model.Image image) throws CloudbreakImageCatalogException {\n+        String imageCatalogName = image.getImageCatalogName();\n+        String imageCatalogUrl;\n+        try {\n+            imageCatalogUrl = imageCatalogService.get(workspace.getId(), imageCatalogName).getImageCatalogUrl();\n+            LOGGER.info(\"Image catalog with name {} and url {} is used for image filtering.\", imageCatalogName, imageCatalogUrl);\n+        } catch (NotFoundException ex) {\n+            imageCatalogUrl = image.getImageCatalogUrl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abd27eb1ab854ed9bfadcc21753eaff970ad172e"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3438, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}