{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NjExNjI3", "number": 9020, "title": "CB-8717 Add thunderhead datalake-dr service connector", "bodyText": "Adds the datalakedr client to the datalake service so the datalake backup/restore\nflows can query the datalake-dr service for the status of the full backup. Previously\nthe datalake service was only aware of the status of the database backup, and could\nnot track the HBase and Solr backups that were happening simultaneously.\nTested with unit tests, and by running datalake locally and connecting to the\ndatalake-dr service on mow-dev.", "createdAt": "2020-09-15T22:23:38Z", "url": "https://github.com/hortonworks/cloudbreak/pull/9020", "merged": true, "mergeCommit": {"oid": "b277b6ec0e182ba23abb16a91e5b5b7f40ac3bcc"}, "closed": true, "closedAt": "2020-09-23T17:25:04Z", "author": {"login": "hreeve-cloudera"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJW4XhAFqTQ4OTMyOTEyOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLuJ3ugBqjM3OTg2NzM5Mjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzI5MTI5", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-489329129", "createdAt": "2020-09-16T07:02:02Z", "commit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjowMlrOHSi5NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjowMlrOHSi5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODExNw==", "bodyText": "I guess it should be removed", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r489208117", "createdAt": "2020-09-16T07:02:02Z", "author": {"login": "doktoric"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/DatalakeDrClient.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.sequenceiq.cloudbreak.datalakedr;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static io.grpc.internal.GrpcUtil.DEFAULT_MAX_MESSAGE_SIZE;\n+\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc.datalakeDRBlockingStub;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.BackupDatalakeStatusRequest;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.RestoreDatalakeStatusRequest;\n+import com.sequenceiq.cloudbreak.datalakedr.config.DatalakeDrConfig;\n+import com.sequenceiq.cloudbreak.datalakedr.converter.GrpcStatusResponseToDatalakeDrStatusResponseConverter;\n+import com.sequenceiq.cloudbreak.datalakedr.model.DatalakeDrStatusResponse;\n+import com.sequenceiq.cloudbreak.grpc.ManagedChannelWrapper;\n+import com.sequenceiq.cloudbreak.grpc.altus.AltusMetadataInterceptor;\n+\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+\n+import java.util.UUID;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DatalakeDrClient {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DatalakeDrClient.class);\n+\n+    private final DatalakeDrConfig datalakeDrConfig;\n+\n+    private final GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter;\n+\n+    public DatalakeDrClient(DatalakeDrConfig datalakeDrConfig, GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter) {\n+        this.datalakeDrConfig = datalakeDrConfig;\n+        this.statusConverter = statusConverter;\n+    }\n+\n+    public DatalakeDrStatusResponse getBackupStatusByBackupId(String datalakeName, String backupId, String actorCrn) {\n+        checkNotNull(datalakeName);\n+        checkNotNull(actorCrn);\n+        checkNotNull(backupId);\n+\n+        actorCrn = \"crn:altus:iam:us-west-1:9d74eee4-1cad-45d7-b645-7ccf9edbb73d:user:8d1e890c-8a2e-4cf9-96bd-d50478bc027e\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzI5MTg3", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-489329187", "createdAt": "2020-09-16T07:02:07Z", "commit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjowOFrOHSi5ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjowOFrOHSi5ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODE2NA==", "bodyText": "I guess it should be removed", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r489208164", "createdAt": "2020-09-16T07:02:08Z", "author": {"login": "doktoric"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/DatalakeDrClient.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.sequenceiq.cloudbreak.datalakedr;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static io.grpc.internal.GrpcUtil.DEFAULT_MAX_MESSAGE_SIZE;\n+\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc.datalakeDRBlockingStub;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.BackupDatalakeStatusRequest;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.RestoreDatalakeStatusRequest;\n+import com.sequenceiq.cloudbreak.datalakedr.config.DatalakeDrConfig;\n+import com.sequenceiq.cloudbreak.datalakedr.converter.GrpcStatusResponseToDatalakeDrStatusResponseConverter;\n+import com.sequenceiq.cloudbreak.datalakedr.model.DatalakeDrStatusResponse;\n+import com.sequenceiq.cloudbreak.grpc.ManagedChannelWrapper;\n+import com.sequenceiq.cloudbreak.grpc.altus.AltusMetadataInterceptor;\n+\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+\n+import java.util.UUID;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DatalakeDrClient {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DatalakeDrClient.class);\n+\n+    private final DatalakeDrConfig datalakeDrConfig;\n+\n+    private final GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter;\n+\n+    public DatalakeDrClient(DatalakeDrConfig datalakeDrConfig, GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter) {\n+        this.datalakeDrConfig = datalakeDrConfig;\n+        this.statusConverter = statusConverter;\n+    }\n+\n+    public DatalakeDrStatusResponse getBackupStatusByBackupId(String datalakeName, String backupId, String actorCrn) {\n+        checkNotNull(datalakeName);\n+        checkNotNull(actorCrn);\n+        checkNotNull(backupId);\n+\n+        actorCrn = \"crn:altus:iam:us-west-1:9d74eee4-1cad-45d7-b645-7ccf9edbb73d:user:8d1e890c-8a2e-4cf9-96bd-d50478bc027e\";\n+        datalakeName = \"biglauer-az-dr-4-dl\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzI5Mzkx", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-489329391", "createdAt": "2020-09-16T07:02:27Z", "commit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjoyN1rOHSi5-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjoyN1rOHSi5-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODMxMw==", "bodyText": "please remove if not required", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r489208313", "createdAt": "2020-09-16T07:02:27Z", "author": {"login": "doktoric"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/DatalakeDrClient.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.sequenceiq.cloudbreak.datalakedr;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static io.grpc.internal.GrpcUtil.DEFAULT_MAX_MESSAGE_SIZE;\n+\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc.datalakeDRBlockingStub;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.BackupDatalakeStatusRequest;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.RestoreDatalakeStatusRequest;\n+import com.sequenceiq.cloudbreak.datalakedr.config.DatalakeDrConfig;\n+import com.sequenceiq.cloudbreak.datalakedr.converter.GrpcStatusResponseToDatalakeDrStatusResponseConverter;\n+import com.sequenceiq.cloudbreak.datalakedr.model.DatalakeDrStatusResponse;\n+import com.sequenceiq.cloudbreak.grpc.ManagedChannelWrapper;\n+import com.sequenceiq.cloudbreak.grpc.altus.AltusMetadataInterceptor;\n+\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+\n+import java.util.UUID;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DatalakeDrClient {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DatalakeDrClient.class);\n+\n+    private final DatalakeDrConfig datalakeDrConfig;\n+\n+    private final GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter;\n+\n+    public DatalakeDrClient(DatalakeDrConfig datalakeDrConfig, GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter) {\n+        this.datalakeDrConfig = datalakeDrConfig;\n+        this.statusConverter = statusConverter;\n+    }\n+\n+    public DatalakeDrStatusResponse getBackupStatusByBackupId(String datalakeName, String backupId, String actorCrn) {\n+        checkNotNull(datalakeName);\n+        checkNotNull(actorCrn);\n+        checkNotNull(backupId);\n+\n+        actorCrn = \"crn:altus:iam:us-west-1:9d74eee4-1cad-45d7-b645-7ccf9edbb73d:user:8d1e890c-8a2e-4cf9-96bd-d50478bc027e\";\n+        datalakeName = \"biglauer-az-dr-4-dl\";\n+\n+        try (ManagedChannelWrapper channelWrapper = makeWrapper()) {\n+            BackupDatalakeStatusRequest.Builder builder = BackupDatalakeStatusRequest.newBuilder()\n+                .setDatalakeName(datalakeName);\n+//                .setBackupId(backupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzI5NDgw", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-489329480", "createdAt": "2020-09-16T07:02:34Z", "commit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjozNVrOHSi6Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjozNVrOHSi6Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODM3OQ==", "bodyText": "I guess it should be removed", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r489208379", "createdAt": "2020-09-16T07:02:35Z", "author": {"login": "doktoric"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/DatalakeDrClient.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.sequenceiq.cloudbreak.datalakedr;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static io.grpc.internal.GrpcUtil.DEFAULT_MAX_MESSAGE_SIZE;\n+\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc.datalakeDRBlockingStub;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.BackupDatalakeStatusRequest;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.RestoreDatalakeStatusRequest;\n+import com.sequenceiq.cloudbreak.datalakedr.config.DatalakeDrConfig;\n+import com.sequenceiq.cloudbreak.datalakedr.converter.GrpcStatusResponseToDatalakeDrStatusResponseConverter;\n+import com.sequenceiq.cloudbreak.datalakedr.model.DatalakeDrStatusResponse;\n+import com.sequenceiq.cloudbreak.grpc.ManagedChannelWrapper;\n+import com.sequenceiq.cloudbreak.grpc.altus.AltusMetadataInterceptor;\n+\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+\n+import java.util.UUID;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DatalakeDrClient {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DatalakeDrClient.class);\n+\n+    private final DatalakeDrConfig datalakeDrConfig;\n+\n+    private final GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter;\n+\n+    public DatalakeDrClient(DatalakeDrConfig datalakeDrConfig, GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter) {\n+        this.datalakeDrConfig = datalakeDrConfig;\n+        this.statusConverter = statusConverter;\n+    }\n+\n+    public DatalakeDrStatusResponse getBackupStatusByBackupId(String datalakeName, String backupId, String actorCrn) {\n+        checkNotNull(datalakeName);\n+        checkNotNull(actorCrn);\n+        checkNotNull(backupId);\n+\n+        actorCrn = \"crn:altus:iam:us-west-1:9d74eee4-1cad-45d7-b645-7ccf9edbb73d:user:8d1e890c-8a2e-4cf9-96bd-d50478bc027e\";\n+        datalakeName = \"biglauer-az-dr-4-dl\";\n+\n+        try (ManagedChannelWrapper channelWrapper = makeWrapper()) {\n+            BackupDatalakeStatusRequest.Builder builder = BackupDatalakeStatusRequest.newBuilder()\n+                .setDatalakeName(datalakeName);\n+//                .setBackupId(backupId);\n+\n+            return statusConverter.convert(\n+                newStub(channelWrapper.getChannel(), UUID.randomUUID().toString(), actorCrn)\n+                    .backupDatalakeStatus(builder.build())\n+            );\n+        }\n+    }\n+\n+    public DatalakeDrStatusResponse getRestoreStatusByRestoreId(String datalakeName, String restoreId, String actorCrn) {\n+        checkNotNull(datalakeName);\n+        checkNotNull(actorCrn);\n+        checkNotNull(restoreId);\n+\n+        actorCrn = \"crn:altus:iam:us-west-1:9d74eee4-1cad-45d7-b645-7ccf9edbb73d:user:8d1e890c-8a2e-4cf9-96bd-d50478bc027e\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzI5NTE5", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-489329519", "createdAt": "2020-09-16T07:02:39Z", "commit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjozOVrOHSi6WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjozOVrOHSi6WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODQwOA==", "bodyText": "I guess it should be removed", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r489208408", "createdAt": "2020-09-16T07:02:39Z", "author": {"login": "doktoric"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/DatalakeDrClient.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.sequenceiq.cloudbreak.datalakedr;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static io.grpc.internal.GrpcUtil.DEFAULT_MAX_MESSAGE_SIZE;\n+\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc.datalakeDRBlockingStub;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.BackupDatalakeStatusRequest;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.RestoreDatalakeStatusRequest;\n+import com.sequenceiq.cloudbreak.datalakedr.config.DatalakeDrConfig;\n+import com.sequenceiq.cloudbreak.datalakedr.converter.GrpcStatusResponseToDatalakeDrStatusResponseConverter;\n+import com.sequenceiq.cloudbreak.datalakedr.model.DatalakeDrStatusResponse;\n+import com.sequenceiq.cloudbreak.grpc.ManagedChannelWrapper;\n+import com.sequenceiq.cloudbreak.grpc.altus.AltusMetadataInterceptor;\n+\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+\n+import java.util.UUID;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DatalakeDrClient {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DatalakeDrClient.class);\n+\n+    private final DatalakeDrConfig datalakeDrConfig;\n+\n+    private final GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter;\n+\n+    public DatalakeDrClient(DatalakeDrConfig datalakeDrConfig, GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter) {\n+        this.datalakeDrConfig = datalakeDrConfig;\n+        this.statusConverter = statusConverter;\n+    }\n+\n+    public DatalakeDrStatusResponse getBackupStatusByBackupId(String datalakeName, String backupId, String actorCrn) {\n+        checkNotNull(datalakeName);\n+        checkNotNull(actorCrn);\n+        checkNotNull(backupId);\n+\n+        actorCrn = \"crn:altus:iam:us-west-1:9d74eee4-1cad-45d7-b645-7ccf9edbb73d:user:8d1e890c-8a2e-4cf9-96bd-d50478bc027e\";\n+        datalakeName = \"biglauer-az-dr-4-dl\";\n+\n+        try (ManagedChannelWrapper channelWrapper = makeWrapper()) {\n+            BackupDatalakeStatusRequest.Builder builder = BackupDatalakeStatusRequest.newBuilder()\n+                .setDatalakeName(datalakeName);\n+//                .setBackupId(backupId);\n+\n+            return statusConverter.convert(\n+                newStub(channelWrapper.getChannel(), UUID.randomUUID().toString(), actorCrn)\n+                    .backupDatalakeStatus(builder.build())\n+            );\n+        }\n+    }\n+\n+    public DatalakeDrStatusResponse getRestoreStatusByRestoreId(String datalakeName, String restoreId, String actorCrn) {\n+        checkNotNull(datalakeName);\n+        checkNotNull(actorCrn);\n+        checkNotNull(restoreId);\n+\n+        actorCrn = \"crn:altus:iam:us-west-1:9d74eee4-1cad-45d7-b645-7ccf9edbb73d:user:8d1e890c-8a2e-4cf9-96bd-d50478bc027e\";\n+        datalakeName = \"biglauer-az-dr-4-dl\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzI5NjMw", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-489329630", "createdAt": "2020-09-16T07:02:49Z", "commit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjo0OVrOHSi6mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMjo0OVrOHSi6mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODQ3NA==", "bodyText": "please remove if not required", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r489208474", "createdAt": "2020-09-16T07:02:49Z", "author": {"login": "doktoric"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/DatalakeDrClient.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.sequenceiq.cloudbreak.datalakedr;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static io.grpc.internal.GrpcUtil.DEFAULT_MAX_MESSAGE_SIZE;\n+\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRGrpc.datalakeDRBlockingStub;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.BackupDatalakeStatusRequest;\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto.RestoreDatalakeStatusRequest;\n+import com.sequenceiq.cloudbreak.datalakedr.config.DatalakeDrConfig;\n+import com.sequenceiq.cloudbreak.datalakedr.converter.GrpcStatusResponseToDatalakeDrStatusResponseConverter;\n+import com.sequenceiq.cloudbreak.datalakedr.model.DatalakeDrStatusResponse;\n+import com.sequenceiq.cloudbreak.grpc.ManagedChannelWrapper;\n+import com.sequenceiq.cloudbreak.grpc.altus.AltusMetadataInterceptor;\n+\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+\n+import java.util.UUID;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DatalakeDrClient {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DatalakeDrClient.class);\n+\n+    private final DatalakeDrConfig datalakeDrConfig;\n+\n+    private final GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter;\n+\n+    public DatalakeDrClient(DatalakeDrConfig datalakeDrConfig, GrpcStatusResponseToDatalakeDrStatusResponseConverter statusConverter) {\n+        this.datalakeDrConfig = datalakeDrConfig;\n+        this.statusConverter = statusConverter;\n+    }\n+\n+    public DatalakeDrStatusResponse getBackupStatusByBackupId(String datalakeName, String backupId, String actorCrn) {\n+        checkNotNull(datalakeName);\n+        checkNotNull(actorCrn);\n+        checkNotNull(backupId);\n+\n+        actorCrn = \"crn:altus:iam:us-west-1:9d74eee4-1cad-45d7-b645-7ccf9edbb73d:user:8d1e890c-8a2e-4cf9-96bd-d50478bc027e\";\n+        datalakeName = \"biglauer-az-dr-4-dl\";\n+\n+        try (ManagedChannelWrapper channelWrapper = makeWrapper()) {\n+            BackupDatalakeStatusRequest.Builder builder = BackupDatalakeStatusRequest.newBuilder()\n+                .setDatalakeName(datalakeName);\n+//                .setBackupId(backupId);\n+\n+            return statusConverter.convert(\n+                newStub(channelWrapper.getChannel(), UUID.randomUUID().toString(), actorCrn)\n+                    .backupDatalakeStatus(builder.build())\n+            );\n+        }\n+    }\n+\n+    public DatalakeDrStatusResponse getRestoreStatusByRestoreId(String datalakeName, String restoreId, String actorCrn) {\n+        checkNotNull(datalakeName);\n+        checkNotNull(actorCrn);\n+        checkNotNull(restoreId);\n+\n+        actorCrn = \"crn:altus:iam:us-west-1:9d74eee4-1cad-45d7-b645-7ccf9edbb73d:user:8d1e890c-8a2e-4cf9-96bd-d50478bc027e\";\n+        datalakeName = \"biglauer-az-dr-4-dl\";\n+\n+        try (ManagedChannelWrapper channelWrapper = makeWrapper()) {\n+            RestoreDatalakeStatusRequest.Builder builder = RestoreDatalakeStatusRequest.newBuilder()\n+                .setDatalakeName(datalakeName);\n+//                .setRestoreId(restoreId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzMyMTM5", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-489332139", "createdAt": "2020-09-16T07:06:59Z", "commit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowNjo1OVrOHSjCUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowNjo1OVrOHSjCUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxMDQ1MA==", "bodyText": "If we would like to connect one of the cp service then we need changes in dps-k8s repo", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r489210450", "createdAt": "2020-09-16T07:06:59Z", "author": {"login": "doktoric"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/config/DatalakeDrConfig.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.sequenceiq.cloudbreak.datalakedr.config;\n+\n+import javax.annotation.PostConstruct;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class DatalakeDrConfig {\n+\n+    private static final int DEFAULT_DATALAKE_DR_PORT = 80;\n+\n+    @Value(\"${altus.datalakedr.endpoint:}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NjM1NDcy", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-489635472", "createdAt": "2020-09-16T13:39:33Z", "commit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzozOTozM1rOHSxWwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzozOTozM1rOHSxWwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0NTA1OA==", "bodyText": "are you sure these dependencies are necessary? I'm not sure about you need common here", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r489445058", "createdAt": "2020-09-16T13:39:33Z", "author": {"login": "lacikaaa"}, "path": "datalake-dr-connector/build.gradle", "diffHunk": "@@ -0,0 +1,55 @@\n+apply plugin: 'com.google.protobuf'\n+\n+buildscript {\n+    repositories {\n+        mavenLocal()\n+        mavenCentral()\n+        maven { url = \"$repoUrl\" }\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'\n+    }\n+}\n+\n+dependencies {\n+    compile project(':common')\n+    compile project(':grpc-common')\n+    compile project(':auth-connector')\n+    compile project(':structuredevent-model')\n+    compile project(':flow')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/1fa10da1f38d8d63832c82c2db9dece4995dac39", "committedDate": "2020-09-15T20:42:09Z", "message": "CB-8717 Expand B/R flow to cover full backup/restore\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "3a029658a9307869a649df016c313b0874cf621e", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3a029658a9307869a649df016c313b0874cf621e", "committedDate": "2020-09-16T14:43:32Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NzE5MDU5", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-489719059", "createdAt": "2020-09-16T15:01:14Z", "commit": {"oid": "3a029658a9307869a649df016c313b0874cf621e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTowMToxNFrOHS1Lqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTowMToyMlrOHS1MCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUwNzc1NA==", "bodyText": "we can not depend on just the getOverallState. Here you need to check the internal states as well.\nIf the overall status could be failed but the internal states could be still in progress.", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r489507754", "createdAt": "2020-09-16T15:01:14Z", "author": {"login": "kkalvagadda1"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/converter/GrpcStatusResponseToDatalakeDrStatusResponseConverter.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.sequenceiq.cloudbreak.datalakedr.converter;\n+\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto;\n+import com.sequenceiq.cloudbreak.datalakedr.model.DatalakeDrStatusResponse;\n+import java.util.Optional;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class GrpcStatusResponseToDatalakeDrStatusResponseConverter {\n+\n+    public DatalakeDrStatusResponse convert(datalakeDRProto.BackupDatalakeStatusResponse response) {\n+        return new DatalakeDrStatusResponse(\n+            DatalakeDrStatusResponse.State.valueOf(response.getOverallState()),\n+            Optional.ofNullable(response.getFailureReason())\n+        );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a029658a9307869a649df016c313b0874cf621e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUwNzg0OA==", "bodyText": "we can not depend on just the getOverallState. Here you need to check the internal states as well.\nIf the overall status could be failed but the internal states could be still in progress.", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r489507848", "createdAt": "2020-09-16T15:01:22Z", "author": {"login": "kkalvagadda1"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/converter/GrpcStatusResponseToDatalakeDrStatusResponseConverter.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.sequenceiq.cloudbreak.datalakedr.converter;\n+\n+import com.cloudera.thunderhead.service.datalakedr.datalakeDRProto;\n+import com.sequenceiq.cloudbreak.datalakedr.model.DatalakeDrStatusResponse;\n+import java.util.Optional;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class GrpcStatusResponseToDatalakeDrStatusResponseConverter {\n+\n+    public DatalakeDrStatusResponse convert(datalakeDRProto.BackupDatalakeStatusResponse response) {\n+        return new DatalakeDrStatusResponse(\n+            DatalakeDrStatusResponse.State.valueOf(response.getOverallState()),\n+            Optional.ofNullable(response.getFailureReason())\n+        );\n+    }\n+\n+    public DatalakeDrStatusResponse convert(datalakeDRProto.RestoreDatalakeStatusResponse response) {\n+        return new DatalakeDrStatusResponse(\n+            DatalakeDrStatusResponse.State.valueOf(response.getOverallState()),\n+            Optional.ofNullable(response.getFailureReason())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a029658a9307869a649df016c313b0874cf621e"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a029658a9307869a649df016c313b0874cf621e", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3a029658a9307869a649df016c313b0874cf621e", "committedDate": "2020-09-16T14:43:32Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "59f1022b7394770576969bf39b26482f8f02a2ff", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/59f1022b7394770576969bf39b26482f8f02a2ff", "committedDate": "2020-09-17T16:19:35Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjgyNDYz", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-491282463", "createdAt": "2020-09-18T09:04:26Z", "commit": {"oid": "59f1022b7394770576969bf39b26482f8f02a2ff"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwOTowNDoyNlrOHUEgHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwOTowNDoyNlrOHUEgHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwNzMyNQ==", "bodyText": "I think the colon should be removed and a default value must be included in the application.yaml which points to local mock, because right now it won't start locally", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r490807325", "createdAt": "2020-09-18T09:04:26Z", "author": {"login": "lacikaaa"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/config/DatalakeDrConfig.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.sequenceiq.cloudbreak.datalakedr.config;\n+\n+import javax.annotation.PostConstruct;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class DatalakeDrConfig {\n+\n+    private static final int DEFAULT_DATALAKE_DR_PORT = 80;\n+\n+    @Value(\"${altus.datalakedr.endpoint:}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxMDQ1MA=="}, "originalCommit": {"oid": "1fa10da1f38d8d63832c82c2db9dece4995dac39"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59f1022b7394770576969bf39b26482f8f02a2ff", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/59f1022b7394770576969bf39b26482f8f02a2ff", "committedDate": "2020-09-17T16:19:35Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "9aef76d8f484676a00909f5efa7a5e61784bb83f", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9aef76d8f484676a00909f5efa7a5e61784bb83f", "committedDate": "2020-09-18T15:42:18Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzA4NTU3", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-491708557", "createdAt": "2020-09-18T18:54:37Z", "commit": {"oid": "9aef76d8f484676a00909f5efa7a5e61784bb83f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODo1NDozN1rOHUYbtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODo1NDozN1rOHUYbtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzMzg3Ng==", "bodyText": "The value should not have : as it will initialize it with an empty string. All these definitions should present in the application.yamls instead.", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r491133876", "createdAt": "2020-09-18T18:54:37Z", "author": {"login": "keyki"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/config/DatalakeDrConfig.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.sequenceiq.cloudbreak.datalakedr.config;\n+\n+import javax.annotation.PostConstruct;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class DatalakeDrConfig {\n+\n+    private static final int DEFAULT_DATALAKE_DR_PORT = 80;\n+\n+    @Value(\"${altus.datalakedr.endpoint:}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aef76d8f484676a00909f5efa7a5e61784bb83f"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzEwMjky", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-491710292", "createdAt": "2020-09-18T18:57:27Z", "commit": {"oid": "9aef76d8f484676a00909f5efa7a5e61784bb83f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODo1NzoyN1rOHUYg-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODo1NzoyN1rOHUYg-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzNTIyNQ==", "bodyText": "Does this mean that the application won't start if we're not configuring this endpoint? If that's the case we will need to introduce the datalake dr application in our dev Kubernetes cluster as well along with the local CBD. I would rather create another endpoint to enable/disable this feature so it's not a hard dependency. If it's just not configured then we're skipping some of steps that you do as part of this PR. We do similar things with Cluster Proxy, Public Endpoint Management service and with other external services as well.", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r491135225", "createdAt": "2020-09-18T18:57:27Z", "author": {"login": "keyki"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/config/DatalakeDrConfig.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.sequenceiq.cloudbreak.datalakedr.config;\n+\n+import javax.annotation.PostConstruct;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class DatalakeDrConfig {\n+\n+    private static final int DEFAULT_DATALAKE_DR_PORT = 80;\n+\n+    @Value(\"${altus.datalakedr.endpoint:}\")\n+    private String endpoint;\n+\n+    private String host;\n+\n+    private int port;\n+\n+    @PostConstruct\n+    public void init() {\n+        if (isConfigured()) {\n+            String[] parts = endpoint.split(\":\");\n+            if (parts.length < 1 || parts.length > 2) {\n+                throw new IllegalArgumentException(\"altus.datalakedr.endpoint must be in host or host:port format.\");\n+            }\n+            host = parts[0];\n+            port = parts.length == 2\n+                ? Integer.parseInt(parts[1])\n+                : DEFAULT_DATALAKE_DR_PORT;\n+        } else {\n+            throw new IllegalStateException(\"altus.datalakedr.endpoint is not configured\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aef76d8f484676a00909f5efa7a5e61784bb83f"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9aef76d8f484676a00909f5efa7a5e61784bb83f", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9aef76d8f484676a00909f5efa7a5e61784bb83f", "committedDate": "2020-09-18T15:42:18Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "7873d98458ec2f0ccfb73fe30aef1fedb3af0de0", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/7873d98458ec2f0ccfb73fe30aef1fedb3af0de0", "committedDate": "2020-09-18T20:34:47Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7873d98458ec2f0ccfb73fe30aef1fedb3af0de0", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/7873d98458ec2f0ccfb73fe30aef1fedb3af0de0", "committedDate": "2020-09-18T20:34:47Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "8eade0d6948ce8efcb727d62890fdd9fc4cce847", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8eade0d6948ce8efcb727d62890fdd9fc4cce847", "committedDate": "2020-09-18T20:41:38Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8eade0d6948ce8efcb727d62890fdd9fc4cce847", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8eade0d6948ce8efcb727d62890fdd9fc4cce847", "committedDate": "2020-09-18T20:41:38Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "686651139f8703f4f723522d9e449ed1752dc6dd", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/686651139f8703f4f723522d9e449ed1752dc6dd", "committedDate": "2020-09-18T21:00:39Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMzk1NTE5", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-492395519", "createdAt": "2020-09-21T08:56:09Z", "commit": {"oid": "686651139f8703f4f723522d9e449ed1752dc6dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODo1NjowOVrOHVGScQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODo1ODozN1rOHVGX_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg4NTE2OQ==", "bodyText": "this port doesn't seem right to me, having the same value as audit", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r491885169", "createdAt": "2020-09-21T08:56:09Z", "author": {"login": "lacikaaa"}, "path": "datalake/src/main/resources/application.yml", "diffHunk": "@@ -68,6 +68,8 @@ altus:\n   audit:\n     enabled: true\n     endpoint: localhost:8982\n+  datalakedr:\n+    endpoint: localhost:8982", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "686651139f8703f4f723522d9e449ed1752dc6dd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg4NjU5MQ==", "bodyText": "you are pointing int tests to the mock, but there is no mock implementation of this service, is there? this could be misleading", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r491886591", "createdAt": "2020-09-21T08:58:37Z", "author": {"login": "lacikaaa"}, "path": "integration-test/docker-compose_template.yml", "diffHunk": "@@ -33,6 +33,7 @@ services:\n       - INTEGRATIONTEST_SDX_SERVER=http://dev-gateway\n       - INTEGRATIONTEST_REDBEAMS_SERVER=http://dev-gateway\n       - ALTUS_AUDIT_ENDPOINT=thunderhead-mock\n+      - ALTUS_DATALAKEDR_ENDPOINT=thunderhead-mock", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "686651139f8703f4f723522d9e449ed1752dc6dd"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "686651139f8703f4f723522d9e449ed1752dc6dd", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/686651139f8703f4f723522d9e449ed1752dc6dd", "committedDate": "2020-09-18T21:00:39Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "63f9c788511dbcdf9ba8bcf24d43a792382c77fd", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/63f9c788511dbcdf9ba8bcf24d43a792382c77fd", "committedDate": "2020-09-21T18:14:33Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63f9c788511dbcdf9ba8bcf24d43a792382c77fd", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/63f9c788511dbcdf9ba8bcf24d43a792382c77fd", "committedDate": "2020-09-21T18:14:33Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "8e77c5613cb44db169aa8cdf478d9fe0f860a3d3", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8e77c5613cb44db169aa8cdf478d9fe0f860a3d3", "committedDate": "2020-09-21T19:03:13Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e77c5613cb44db169aa8cdf478d9fe0f860a3d3", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8e77c5613cb44db169aa8cdf478d9fe0f860a3d3", "committedDate": "2020-09-21T19:03:13Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "fb2b2c9b36f2fb0b57974370320e317ad5a6721d", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/fb2b2c9b36f2fb0b57974370320e317ad5a6721d", "committedDate": "2020-09-21T20:08:58Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb2b2c9b36f2fb0b57974370320e317ad5a6721d", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/fb2b2c9b36f2fb0b57974370320e317ad5a6721d", "committedDate": "2020-09-21T20:08:58Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "a8802d5b596b77601abaee98d65198491ac47619", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a8802d5b596b77601abaee98d65198491ac47619", "committedDate": "2020-09-21T22:35:27Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8802d5b596b77601abaee98d65198491ac47619", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a8802d5b596b77601abaee98d65198491ac47619", "committedDate": "2020-09-21T22:35:27Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "0489294cf968466e376a4a3bda7e44f49d7efe98", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/0489294cf968466e376a4a3bda7e44f49d7efe98", "committedDate": "2020-09-22T03:07:35Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0489294cf968466e376a4a3bda7e44f49d7efe98", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/0489294cf968466e376a4a3bda7e44f49d7efe98", "committedDate": "2020-09-22T03:07:35Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "bff9b5233efffe9c5b84e4585cac6c48bfc52150", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/bff9b5233efffe9c5b84e4585cac6c48bfc52150", "committedDate": "2020-09-22T03:16:23Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjA4Njgz", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-493208683", "createdAt": "2020-09-22T07:57:16Z", "commit": {"oid": "bff9b5233efffe9c5b84e4585cac6c48bfc52150"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzo1NzoxNlrOHVuTzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzo1NzoxNlrOHVuTzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU0MDg3Ng==", "bodyText": "Can you please move the default value to application.yaml?", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#discussion_r492540876", "createdAt": "2020-09-22T07:57:16Z", "author": {"login": "keyki"}, "path": "datalake-dr-connector/src/main/java/com/sequenceiq/cloudbreak/datalakedr/config/DatalakeDrConfig.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.sequenceiq.cloudbreak.datalakedr.config;\n+\n+import javax.annotation.PostConstruct;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class DatalakeDrConfig {\n+\n+    private static final int DEFAULT_DATALAKE_DR_PORT = 80;\n+\n+    @Value(\"${altus.datalakedr.endpoint}\")\n+    private String endpoint;\n+\n+    @Value(\"${altus.datalakedr.enabled:false}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bff9b5233efffe9c5b84e4585cac6c48bfc52150"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bff9b5233efffe9c5b84e4585cac6c48bfc52150", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/bff9b5233efffe9c5b84e4585cac6c48bfc52150", "committedDate": "2020-09-22T03:16:23Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "4cd5b8a4bcda85cee27dbf7ccb804ce8f0432db7", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/4cd5b8a4bcda85cee27dbf7ccb804ce8f0432db7", "committedDate": "2020-09-22T15:23:16Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4cd5b8a4bcda85cee27dbf7ccb804ce8f0432db7", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/4cd5b8a4bcda85cee27dbf7ccb804ce8f0432db7", "committedDate": "2020-09-22T15:23:16Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "617680f35449482ac49672f70bddfb54c7cc573c", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/617680f35449482ac49672f70bddfb54c7cc573c", "committedDate": "2020-09-22T15:31:12Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNjk3NDI4", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-493697428", "createdAt": "2020-09-22T17:36:52Z", "commit": {"oid": "617680f35449482ac49672f70bddfb54c7cc573c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0MzY1MTIw", "url": "https://github.com/hortonworks/cloudbreak/pull/9020#pullrequestreview-494365120", "createdAt": "2020-09-23T07:38:10Z", "commit": {"oid": "617680f35449482ac49672f70bddfb54c7cc573c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "402d7dc44fc4ad73f2c4bddad86a7d28e87745cc", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/402d7dc44fc4ad73f2c4bddad86a7d28e87745cc", "committedDate": "2020-09-23T15:16:17Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "617680f35449482ac49672f70bddfb54c7cc573c", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/617680f35449482ac49672f70bddfb54c7cc573c", "committedDate": "2020-09-22T15:31:12Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}, "afterCommit": {"oid": "402d7dc44fc4ad73f2c4bddad86a7d28e87745cc", "author": {"user": {"login": "hreeve-cloudera", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/402d7dc44fc4ad73f2c4bddad86a7d28e87745cc", "committedDate": "2020-09-23T15:16:17Z", "message": "CB-8717 Add thunderhead datalake-dr service connector\n\nAdds the datalakedr client to CB so the datalake backup/restore flows can query\nthe datalake-dr service for the status of the full backup. Previously CB was\nonly aware of the status of the database backup, and could not track the HBase\nand Solr backups that were happening simultaneously.\n\nTested with unit tests, and by running CB locally and connecting to the\ndatalake-dr service on mow-dev."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2339, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}