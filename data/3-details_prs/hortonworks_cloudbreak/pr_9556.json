{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwOTYzNDgx", "number": 9556, "title": "CB-10085", "bodyText": "See detailed description in the commit message.", "createdAt": "2020-12-02T11:53:17Z", "url": "https://github.com/hortonworks/cloudbreak/pull/9556", "merged": true, "mergeCommit": {"oid": "56d8f8c0cfa3c9eb92db69c01b10d8579cacfb06"}, "closed": true, "closedAt": "2020-12-03T15:31:19Z", "author": {"login": "doktoric"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiNL3NgH2gAyNTMwOTYzNDgxOjI4ZjcxMGQ3YzBkYmJiOTZiMDhiOTY0YzgwOTY1OWEzNjhkNTIyNzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdih97PAFqTU0Mzg4NjE3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "28f710d7c0dbbb96b08b964c809659a368d52278", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/28f710d7c0dbbb96b08b964c809659a368d52278", "committedDate": "2020-12-02T11:52:23Z", "message": "CB-10085 adding AccountIdAwareResource as the base class of AccountAwareResource. Secret aspect will be able to read the account information from any object with this change. Currently secret ascpect try to use AccountIdAwareResource which iswas removed eas part of the structured event effort. Vault pathes will be fixed and we will not point to undefined path. As a followup I will remove the 'undefined' logic from secret aspect because it is risky and hiding potential problems."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dccb6c7b4d8abb795f88d7feed6ddd5d5499e624", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/dccb6c7b4d8abb795f88d7feed6ddd5d5499e624", "committedDate": "2020-12-02T11:52:23Z", "message": "CB-10085 update SecretAspectService with a necessary exception to catch every object write where we dont have account id. It should not happen that an object which has secret value do not have account id."}, "afterCommit": {"oid": "ed8abaed5d7e8a5c9b5fa137f0cc1f249b0ee94a", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ed8abaed5d7e8a5c9b5fa137f0cc1f249b0ee94a", "committedDate": "2020-12-02T11:56:02Z", "message": "CB-10085 update SecretAspectService with a necessary exception to catch every object write where we dont have account id. It should not happen that an object which has secret value do not have account id."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNzc1NTQz", "url": "https://github.com/hortonworks/cloudbreak/pull/9556#pullrequestreview-542775543", "createdAt": "2020-12-02T12:13:54Z", "commit": {"oid": "ed8abaed5d7e8a5c9b5fa137f0cc1f249b0ee94a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODI4MDc2", "url": "https://github.com/hortonworks/cloudbreak/pull/9556#pullrequestreview-542828076", "createdAt": "2020-12-02T13:22:50Z", "commit": {"oid": "ed8abaed5d7e8a5c9b5fa137f0cc1f249b0ee94a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzoyMjo1MFrOH9arug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzoyMjo1MFrOH9arug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE2MjM2Mg==", "bodyText": "Nit: Perhaps replace the hardwired class name with AccountIdAwareResource.class.getSimpleName() like a few lines below in findAccountId().", "url": "https://github.com/hortonworks/cloudbreak/pull/9556#discussion_r534162362", "createdAt": "2020-12-02T13:22:50Z", "author": {"login": "lajosrodek"}, "path": "secret-engine/src/main/java/com/sequenceiq/cloudbreak/service/secret/service/SecretAspectService.java", "diffHunk": "@@ -52,7 +52,7 @@ public Object proceedSave(ProceedingJoinPoint proceedingJoinPoint) {\n                     }\n                 }\n             } catch (IllegalArgumentException e) {\n-                LOGGER.error(\"Given entity isn't instance of TenantAwareResource. Secret is not deleted!\", e);\n+                LOGGER.error(\"Given entity isn't instance of AccountIdAwareResource. Secret is not deleted!\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8abaed5d7e8a5c9b5fa137f0cc1f249b0ee94a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODI4NDMy", "url": "https://github.com/hortonworks/cloudbreak/pull/9556#pullrequestreview-542828432", "createdAt": "2020-12-02T13:23:16Z", "commit": {"oid": "ed8abaed5d7e8a5c9b5fa137f0cc1f249b0ee94a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzoyMzoxNlrOH9as0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzoyMzoxNlrOH9as0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE2MjY0Mg==", "bodyText": "Same here.", "url": "https://github.com/hortonworks/cloudbreak/pull/9556#discussion_r534162642", "createdAt": "2020-12-02T13:23:16Z", "author": {"login": "lajosrodek"}, "path": "secret-engine/src/main/java/com/sequenceiq/cloudbreak/service/secret/service/SecretAspectService.java", "diffHunk": "@@ -92,7 +92,7 @@ public Object proceedDelete(ProceedingJoinPoint proceedingJoinPoint) {\n                     }\n                 }\n             } catch (IllegalArgumentException e) {\n-                LOGGER.error(\"Given entity isn't instance of TenantAwareResource. Secret is not deleted!\", e);\n+                LOGGER.error(\"Given entity isn't instance of AccountIdAwareResource. Secret is not deleted!\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8abaed5d7e8a5c9b5fa137f0cc1f249b0ee94a"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed8abaed5d7e8a5c9b5fa137f0cc1f249b0ee94a", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ed8abaed5d7e8a5c9b5fa137f0cc1f249b0ee94a", "committedDate": "2020-12-02T11:56:02Z", "message": "CB-10085 update SecretAspectService with a necessary exception to catch every object write where we dont have account id. It should not happen that an object which has secret value do not have account id."}, "afterCommit": {"oid": "0099086670f95381377a8d7e760d9420d1bbb51b", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/0099086670f95381377a8d7e760d9420d1bbb51b", "committedDate": "2020-12-02T18:58:22Z", "message": " CB-10085 update SecretAspectService with a necessary exception to catch every object write where we dont have account id. It should not happen that an object which has secret value do not have account id."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0099086670f95381377a8d7e760d9420d1bbb51b", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/0099086670f95381377a8d7e760d9420d1bbb51b", "committedDate": "2020-12-02T18:58:22Z", "message": " CB-10085 update SecretAspectService with a necessary exception to catch every object write where we dont have account id. It should not happen that an object which has secret value do not have account id."}, "afterCommit": {"oid": "f9f8772bc36876dfbe361c426115b5b71ab671a0", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/f9f8772bc36876dfbe361c426115b5b71ab671a0", "committedDate": "2020-12-02T19:22:43Z", "message": " CB-10085 update SecretAspectService with a necessary exception to catch every object write where we dont have account id. It should not happen that an object which has secret value do not have account id."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b77619afb54390e8b495e6605dc8a069732500e", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8b77619afb54390e8b495e6605dc8a069732500e", "committedDate": "2020-12-02T20:51:22Z", "message": " CB-10085 update SecretAspectService with a necessary exception to catch every object write where we dont have account id. It should not happen that an object which has secret value do not have account id."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9f8772bc36876dfbe361c426115b5b71ab671a0", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/f9f8772bc36876dfbe361c426115b5b71ab671a0", "committedDate": "2020-12-02T19:22:43Z", "message": " CB-10085 update SecretAspectService with a necessary exception to catch every object write where we dont have account id. It should not happen that an object which has secret value do not have account id."}, "afterCommit": {"oid": "8b77619afb54390e8b495e6605dc8a069732500e", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8b77619afb54390e8b495e6605dc8a069732500e", "committedDate": "2020-12-02T20:51:22Z", "message": " CB-10085 update SecretAspectService with a necessary exception to catch every object write where we dont have account id. It should not happen that an object which has secret value do not have account id."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjg2MjA5", "url": "https://github.com/hortonworks/cloudbreak/pull/9556#pullrequestreview-543686209", "createdAt": "2020-12-03T07:57:04Z", "commit": {"oid": "8b77619afb54390e8b495e6605dc8a069732500e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODc0Nzk2", "url": "https://github.com/hortonworks/cloudbreak/pull/9556#pullrequestreview-543874796", "createdAt": "2020-12-03T11:49:27Z", "commit": {"oid": "89c6d9b330ad1a2f43184e1d72eea522fe2b4263"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTo0OToyN1rOH-XNtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTo0OToyN1rOH-XNtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE1NDEwMg==", "bodyText": "Default value shouldn't be added like this. It will block the whole table.\nSee https://dba.stackexchange.com/questions/60965/does-postgresql-optimize-adding-columns-with-non-null-defaults/216153#216153\nExample: https://github.com/hortonworks/cloudbreak/blob/master/core/src/main/resources/schema/app/20201130155647_CB-9580_new_field_on_cluster:_embedded_db_is_configured_on_attached_disk_or_not.sql\nAlso I think we should set it to null.", "url": "https://github.com/hortonworks/cloudbreak/pull/9556#discussion_r535154102", "createdAt": "2020-12-03T11:49:27Z", "author": {"login": "keyki"}, "path": "freeipa/src/main/resources/schema/app/20201203102940_CB-10140_add_accountId_to_freeipa_SaltSecurityConfig.sql", "diffHunk": "@@ -0,0 +1,11 @@\n+-- // CB-10140 add accountId to freeipa SaltSecurityConfig\n+-- Migration SQL that makes the change goes here.\n+\n+ALTER TABLE saltsecurityconfig ADD COLUMN IF NOT EXISTS accountid VARCHAR(255) DEFAULT 'undefined';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89c6d9b330ad1a2f43184e1d72eea522fe2b4263"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "89c6d9b330ad1a2f43184e1d72eea522fe2b4263", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/89c6d9b330ad1a2f43184e1d72eea522fe2b4263", "committedDate": "2020-12-03T11:05:10Z", "message": "CB-10140 adding saltsecurityconfig accountid to the current domain to be able to write into vault"}, "afterCommit": {"oid": "14b757bba995f47f55aa8ae252c93b35a2e7b49a", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/14b757bba995f47f55aa8ae252c93b35a2e7b49a", "committedDate": "2020-12-03T11:52:47Z", "message": "CB-10140 adding saltsecurityconfig accountid to the current domain to be able to write into vault"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d123c52c07ed7a5458bda91b604957aaf112b828", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d123c52c07ed7a5458bda91b604957aaf112b828", "committedDate": "2020-12-03T11:54:41Z", "message": "CB-10140 adding saltsecurityconfig accountid to the current domain to be able to write into vault"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14b757bba995f47f55aa8ae252c93b35a2e7b49a", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/14b757bba995f47f55aa8ae252c93b35a2e7b49a", "committedDate": "2020-12-03T11:52:47Z", "message": "CB-10140 adding saltsecurityconfig accountid to the current domain to be able to write into vault"}, "afterCommit": {"oid": "d123c52c07ed7a5458bda91b604957aaf112b828", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d123c52c07ed7a5458bda91b604957aaf112b828", "committedDate": "2020-12-03T11:54:41Z", "message": "CB-10140 adding saltsecurityconfig accountid to the current domain to be able to write into vault"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODg2MTc2", "url": "https://github.com/hortonworks/cloudbreak/pull/9556#pullrequestreview-543886176", "createdAt": "2020-12-03T12:05:10Z", "commit": {"oid": "d123c52c07ed7a5458bda91b604957aaf112b828"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1915, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}