{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Mzc2MjQx", "number": 8497, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzoyMzozNVrOEMEy4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODo0NTozNFrOEMZE8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDk2OTMxOnYy", "diffSide": "RIGHT", "path": "autoscale/src/main/java/com/sequenceiq/periscope/filter/CloudbreakUserConfiguratorFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzoyMzozNVrOGt-Unw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDo0MTowMVrOGuB0WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg2MDE5MQ==", "bodyText": "I'm not familiar with the UNINITIALIZED_WORKSPACE_ID and why it would have value -1.\nBut if you wish to call a CB API directly, you should always use workspaceID 0.\nThat will default to the tenant default workspace which should be already existing.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r450860191", "createdAt": "2020-07-07T13:23:35Z", "author": {"login": "lnardai"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/filter/CloudbreakUserConfiguratorFilter.java", "diffHunk": "@@ -34,16 +34,15 @@ public CloudbreakUserConfiguratorFilter(AutoscaleRestRequestThreadLocalService r\n \n     @Override\n     protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {\n-        CloudbreakUser cloudbreakUser = authenticatedUserService.getCbUser();\n+        CloudbreakUser cbUser = authenticatedUserService.getCbUser();\n         Long workspaceId = UNINITIALIZED_WORKSPACE_ID;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxNzQ2NQ==", "bodyText": "ack. as discussed will default cluster to tenant scope and remove workspace related ids.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r450917465", "createdAt": "2020-07-07T14:41:01Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/filter/CloudbreakUserConfiguratorFilter.java", "diffHunk": "@@ -34,16 +34,15 @@ public CloudbreakUserConfiguratorFilter(AutoscaleRestRequestThreadLocalService r\n \n     @Override\n     protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {\n-        CloudbreakUser cloudbreakUser = authenticatedUserService.getCbUser();\n+        CloudbreakUser cbUser = authenticatedUserService.getCbUser();\n         Long workspaceId = UNINITIALIZED_WORKSPACE_ID;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg2MDE5MQ=="}, "originalCommit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTA0NzI3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/AutoscaleV4Controller.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzo0MDoyN1rOGt_DuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDo0MDowM1rOGuBxaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg3MjI0OA==", "bodyText": "There should be no such endpoint, this controller will be soon removed.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r450872248", "createdAt": "2020-07-07T13:40:27Z", "author": {"login": "lnardai"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/AutoscaleV4Controller.java", "diffHunk": "@@ -126,6 +137,15 @@ public StackV4Response get(String crn) {\n         return stackCommonService.getByCrn(crn, Collections.emptySet());\n     }\n \n+    @Override\n+    @DisableCheckPermissions\n+    @PreAuthorize(\"hasRole('AUTOSCALE')\")\n+    public WorkspaceV4Response getDefaultWorkspaceForUser(String userId, String tenant) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg3MzQyNQ==", "bodyText": "To be more precise, Workspace related API will be removed soon, so WorkspaceResponse should not be used", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r450873425", "createdAt": "2020-07-07T13:42:08Z", "author": {"login": "horadla23"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/AutoscaleV4Controller.java", "diffHunk": "@@ -126,6 +137,15 @@ public StackV4Response get(String crn) {\n         return stackCommonService.getByCrn(crn, Collections.emptySet());\n     }\n \n+    @Override\n+    @DisableCheckPermissions\n+    @PreAuthorize(\"hasRole('AUTOSCALE')\")\n+    public WorkspaceV4Response getDefaultWorkspaceForUser(String userId, String tenant) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg3MjI0OA=="}, "originalCommit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxNjcxMg==", "bodyText": "ack will remove this change.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r450916712", "createdAt": "2020-07-07T14:40:03Z", "author": {"login": "smaniraju"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/AutoscaleV4Controller.java", "diffHunk": "@@ -126,6 +137,15 @@ public StackV4Response get(String crn) {\n         return stackCommonService.getByCrn(crn, Collections.emptySet());\n     }\n \n+    @Override\n+    @DisableCheckPermissions\n+    @PreAuthorize(\"hasRole('AUTOSCALE')\")\n+    public WorkspaceV4Response getDefaultWorkspaceForUser(String userId, String tenant) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg3MjI0OA=="}, "originalCommit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNDI3OTUzOnYy", "diffSide": "RIGHT", "path": "autoscale/src/main/java/com/sequenceiq/periscope/repository/ClusterRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODo0MjoxMlrOGueGbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODo0ODo1NFrOGueWpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4MDg0NA==", "bodyText": "Where do we use this ClusterID?\nI'm ok with using Name and Tenant since it might come handy on the CLI, but we are not really using clusterID anywhere.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r451380844", "createdAt": "2020-07-08T08:42:12Z", "author": {"login": "lnardai"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/repository/ClusterRepository.java", "diffHunk": "@@ -19,16 +19,16 @@\n     Cluster findByStackId(@Param(\"stackId\") Long stackId);\n \n     @Query(\" SELECT c FROM Cluster c LEFT JOIN FETCH c.clusterPertain \" +\n-            \" WHERE c.stackCrn = :stackCrn and c.clusterPertain.workspaceId = :workspaceId\")\n-    Optional<Cluster> findByStackCrnAndWorkspaceId(@Param(\"stackCrn\") String stackCrn, @Param(\"workspaceId\") Long workspaceId);\n+            \" WHERE c.stackCrn = :stackCrn and c.clusterPertain.tenant = :tenant\")\n+    Optional<Cluster> findByStackCrnAndTenant(@Param(\"stackCrn\") String stackCrn, @Param(\"tenant\") String tenant);\n \n     @Query(\" SELECT c FROM Cluster c LEFT JOIN FETCH c.clusterPertain \" +\n-            \" WHERE c.stackName = :stackName and c.clusterPertain.workspaceId = :workspaceId\")\n-    Optional<Cluster> findByStackNameAndWorkspaceId(@Param(\"stackName\") String stackName, @Param(\"workspaceId\") Long workspaceId);\n+            \" WHERE c.stackName = :stackName and c.clusterPertain.tenant = :tenant\")\n+    Optional<Cluster> findByStackNameAndTenant(@Param(\"stackName\") String stackName, @Param(\"tenant\") String tenant);\n \n     @Query(\" SELECT c FROM Cluster c LEFT JOIN FETCH c.clusterPertain \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NDk5OQ==", "bodyText": "This is not used now since Id based endpoints is disabled in periscope now. This was used in Id based AlertEndpoint which is disabled but not deleted.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r451384999", "createdAt": "2020-07-08T08:48:54Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/repository/ClusterRepository.java", "diffHunk": "@@ -19,16 +19,16 @@\n     Cluster findByStackId(@Param(\"stackId\") Long stackId);\n \n     @Query(\" SELECT c FROM Cluster c LEFT JOIN FETCH c.clusterPertain \" +\n-            \" WHERE c.stackCrn = :stackCrn and c.clusterPertain.workspaceId = :workspaceId\")\n-    Optional<Cluster> findByStackCrnAndWorkspaceId(@Param(\"stackCrn\") String stackCrn, @Param(\"workspaceId\") Long workspaceId);\n+            \" WHERE c.stackCrn = :stackCrn and c.clusterPertain.tenant = :tenant\")\n+    Optional<Cluster> findByStackCrnAndTenant(@Param(\"stackCrn\") String stackCrn, @Param(\"tenant\") String tenant);\n \n     @Query(\" SELECT c FROM Cluster c LEFT JOIN FETCH c.clusterPertain \" +\n-            \" WHERE c.stackName = :stackName and c.clusterPertain.workspaceId = :workspaceId\")\n-    Optional<Cluster> findByStackNameAndWorkspaceId(@Param(\"stackName\") String stackName, @Param(\"workspaceId\") Long workspaceId);\n+            \" WHERE c.stackName = :stackName and c.clusterPertain.tenant = :tenant\")\n+    Optional<Cluster> findByStackNameAndTenant(@Param(\"stackName\") String stackName, @Param(\"tenant\") String tenant);\n \n     @Query(\" SELECT c FROM Cluster c LEFT JOIN FETCH c.clusterPertain \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4MDg0NA=="}, "originalCommit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNDI5MjMyOnYy", "diffSide": "RIGHT", "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/ClusterService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODo0NTozNFrOGueOvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwOToyMzowNlrOGufnAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4Mjk3Mg==", "bodyText": "Why change userCRN to userID? userID is an old concept we should rely on userCRN as much as possible.\nAlso I don't really get the use case why I would want to get a list based on someones CRN.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r451382972", "createdAt": "2020-07-08T08:45:34Z", "author": {"login": "lnardai"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/ClusterService.java", "diffHunk": "@@ -102,7 +102,7 @@ public Cluster create(AutoscaleStackV4Response stack) {\n         ClusterPertain clusterPertain =\n                 new ClusterPertain(stack.getTenant(), stack.getWorkspaceId(), stack.getUserId(), stack.getUserCrn());\n         cluster.setClusterPertain(\n-                clusterPertainRepository.findByUserCrn(clusterPertain.getUserCrn())\n+                clusterPertainRepository.findByUserId(clusterPertain.getUserId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQwNTU2OQ==", "bodyText": "ok updated to use userCRN.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r451405569", "createdAt": "2020-07-08T09:23:06Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/ClusterService.java", "diffHunk": "@@ -102,7 +102,7 @@ public Cluster create(AutoscaleStackV4Response stack) {\n         ClusterPertain clusterPertain =\n                 new ClusterPertain(stack.getTenant(), stack.getWorkspaceId(), stack.getUserId(), stack.getUserCrn());\n         cluster.setClusterPertain(\n-                clusterPertainRepository.findByUserCrn(clusterPertain.getUserCrn())\n+                clusterPertainRepository.findByUserId(clusterPertain.getUserId())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4Mjk3Mg=="}, "originalCommit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3114, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}