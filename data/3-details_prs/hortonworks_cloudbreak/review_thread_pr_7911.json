{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMDQwODc4", "number": 7911, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjoxMToxMVrOD3KeHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjoxMToxMVrOD3KeHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTY5ODIwOnYy", "diffSide": "RIGHT", "path": "cluster-cm/src/main/java/com/sequenceiq/cloudbreak/cm/polling/task/ClouderaManagerParcelsApiListenerTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjoxMToxMVrOGNQ4kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjoxMToxMVrOGNQ4kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU2MTI5OA==", "bodyText": "Can you please extend the log message with the stacktrace?", "url": "https://github.com/hortonworks/cloudbreak/pull/7911#discussion_r416561298", "createdAt": "2020-04-28T12:11:11Z", "author": {"login": "keyki"}, "path": "cluster-cm/src/main/java/com/sequenceiq/cloudbreak/cm/polling/task/ClouderaManagerParcelsApiListenerTask.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.sequenceiq.cloudbreak.cm.polling.task;\n+\n+import java.util.Objects;\n+\n+import org.apache.commons.collections.CollectionUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.cloudera.api.swagger.CommandsResourceApi;\n+import com.cloudera.api.swagger.ParcelsResourceApi;\n+import com.cloudera.api.swagger.client.ApiException;\n+import com.cloudera.api.swagger.model.ApiParcelList;\n+import com.sequenceiq.cloudbreak.cm.ClouderaManagerOperationFailedException;\n+import com.sequenceiq.cloudbreak.cm.client.ClouderaManagerApiPojoFactory;\n+import com.sequenceiq.cloudbreak.cm.polling.ClouderaManagerPollerObject;\n+import com.sequenceiq.cloudbreak.structuredevent.event.CloudbreakEventService;\n+\n+public class ClouderaManagerParcelsApiListenerTask extends AbstractClouderaManagerCommandCheckerTask<ClouderaManagerPollerObject> {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ClouderaManagerParcelsApiListenerTask.class);\n+\n+    public ClouderaManagerParcelsApiListenerTask(ClouderaManagerApiPojoFactory clouderaManagerApiPojoFactory,\n+            CloudbreakEventService cloudbreakEventService) {\n+        super(clouderaManagerApiPojoFactory, cloudbreakEventService);\n+    }\n+\n+    @Override\n+    protected boolean doStatusCheck(ClouderaManagerPollerObject pollerObject, CommandsResourceApi commandsResourceApi) {\n+        try {\n+            boolean parcelsAvailable = pollParcels(pollerObject);\n+            LOGGER.debug(\"Polling for parcel's availability returned: {}\", parcelsAvailable);\n+            return parcelsAvailable;\n+        } catch (ApiException e) {\n+            LOGGER.debug(\"Cloudera Manager Parcels API is not available.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd697ef3e3cc4f76dff89ba92022e4f0ba20ea2c"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2503, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}