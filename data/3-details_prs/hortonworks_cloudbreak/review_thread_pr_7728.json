{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDUwODg4", "number": 7728, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDowNjowOFrODvJOvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDowODozOFrODvJTCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzYwODkyOnYy", "diffSide": "RIGHT", "path": "datalake/src/main/java/com/sequenceiq/datalake/flow/create/event/EnvWaitRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDowNjowOFrOGBZZzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDowNjowOFrOGBZZzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDExNzk2Ng==", "bodyText": "passing this response along is not necessary. If I'm not mistaken it's used in ProvisionerService#startStackProvisioning, but that info is already in SdxCluster, so I would drop it entirely if possible", "url": "https://github.com/hortonworks/cloudbreak/pull/7728#discussion_r404117966", "createdAt": "2020-04-06T14:06:08Z", "author": {"login": "lacikaaa"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/flow/create/event/EnvWaitRequest.java", "diffHunk": "@@ -2,19 +2,27 @@\n \n import com.sequenceiq.datalake.flow.SdxContext;\n import com.sequenceiq.datalake.flow.SdxEvent;\n+import com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.responses.DatabaseServerStatusV4Response;\n \n public class EnvWaitRequest extends SdxEvent {\n \n-    public EnvWaitRequest(Long sdxId, String userId) {\n+    private DatabaseServerStatusV4Response databaseServerResponse;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f728f1773226271ad8e3165a386272633f4cb38"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzYxOTk1OnYy", "diffSide": "RIGHT", "path": "datalake/src/main/java/com/sequenceiq/datalake/flow/create/SdxCreateFlowConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDowODozOFrOGBZg0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDowODozOFrOGBZg0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDExOTc2Mg==", "bodyText": "I think it's possible that we have the old version running, and it's in SDX_CREATION_WAIT_ENV_STATE. We shut it down and fire up this new version. When it's finished with the SDX_CREATION_WAIT_ENV_STATE the new version will move to SDX_CREATION_START_STATE and will skip SDX_CREATION_WAIT_RDS_STATE. Could you check?", "url": "https://github.com/hortonworks/cloudbreak/pull/7728#discussion_r404119762", "createdAt": "2020-04-06T14:08:38Z", "author": {"login": "lacikaaa"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/flow/create/SdxCreateFlowConfig.java", "diffHunk": "@@ -24,24 +24,35 @@\n \n     private static final List<Transition<SdxCreateState, SdxCreateEvent>> TRANSITIONS = new Builder<SdxCreateState, SdxCreateEvent>()\n             .defaultFailureEvent(SDX_CREATE_FAILED_EVENT)\n+\n             .from(INIT_STATE)\n-            .to(SDX_CREATION_WAIT_ENV_STATE)\n+            .to(SDX_CREATION_WAIT_RDS_STATE)\n             .event(SdxCreateEvent.ENV_WAIT_EVENT).defaultFailureEvent()\n-            .from(SDX_CREATION_WAIT_ENV_STATE)\n+\n+            .from(INIT_STATE)\n             .to(SDX_CREATION_WAIT_RDS_STATE)\n-            .event(SdxCreateEvent.ENV_WAIT_SUCCESS_EVENT).defaultFailureEvent()\n+            .event(SdxCreateEvent.RDS_WAIT_EVENT).defaultFailureEvent()\n+\n             .from(SDX_CREATION_WAIT_RDS_STATE)\n-            .to(SDX_CREATION_START_STATE)\n+            .to(SDX_CREATION_WAIT_ENV_STATE)\n             .event(SdxCreateEvent.RDS_WAIT_SUCCESS_EVENT).defaultFailureEvent()\n+\n+            .from(SDX_CREATION_WAIT_ENV_STATE)\n+            .to(SDX_CREATION_START_STATE)\n+            .event(SdxCreateEvent.ENV_WAIT_SUCCESS_EVENT).defaultFailureEvent()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f728f1773226271ad8e3165a386272633f4cb38"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2632, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}