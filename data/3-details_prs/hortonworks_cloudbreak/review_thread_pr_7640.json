{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMjE3NDY1", "number": 7640, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTowMjoxM1rODrEJYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTowMjoxM1rODrEJYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDgzMjk4OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/kerberosmgmt/v1/UserKeytabService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTowMjoxM1rOF7MPAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo1MToyMlrOF7RHjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxMDc1NQ==", "bodyText": "Maybe just say: Actor %s has not been synced into environment %s\"\nBtw, what BadRequestException translates to the user?", "url": "https://github.com/hortonworks/cloudbreak/pull/7640#discussion_r397610755", "createdAt": "2020-03-25T05:02:13Z", "author": {"login": "giladwolff"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/kerberosmgmt/v1/UserKeytabService.java", "diffHunk": "@@ -48,6 +56,21 @@ private void validateSameAccount(String userAccountId, String environmentCrn) {\n         }\n     }\n \n+    private void validateWorkloadUserInEnvironment(String workloadUsername, String environmentCrn) {\n+        String accountId = Crn.safeFromString(environmentCrn).getAccountId();\n+        FreeIpaClient freeIpaClient;\n+        try {\n+            freeIpaClient = freeIpaClientFactory.getFreeIpaClientByAccountAndEnvironment(environmentCrn, accountId);\n+            Optional<User> user = freeIpaClient.userFind(workloadUsername);\n+            if (user.isEmpty()) {\n+                throw new BadRequestException(String.format(\"Could not find workload user %s within environment %s. Ensure that the user has \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332c41498172b39fe0c240228da153d41a585f1a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1NjA1NA==", "bodyText": "yeah maybe a notfoundex would be better", "url": "https://github.com/hortonworks/cloudbreak/pull/7640#discussion_r397656054", "createdAt": "2020-03-25T07:39:39Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/kerberosmgmt/v1/UserKeytabService.java", "diffHunk": "@@ -48,6 +56,21 @@ private void validateSameAccount(String userAccountId, String environmentCrn) {\n         }\n     }\n \n+    private void validateWorkloadUserInEnvironment(String workloadUsername, String environmentCrn) {\n+        String accountId = Crn.safeFromString(environmentCrn).getAccountId();\n+        FreeIpaClient freeIpaClient;\n+        try {\n+            freeIpaClient = freeIpaClientFactory.getFreeIpaClientByAccountAndEnvironment(environmentCrn, accountId);\n+            Optional<User> user = freeIpaClient.userFind(workloadUsername);\n+            if (user.isEmpty()) {\n+                throw new BadRequestException(String.format(\"Could not find workload user %s within environment %s. Ensure that the user has \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxMDc1NQ=="}, "originalCommit": {"oid": "332c41498172b39fe0c240228da153d41a585f1a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MDc2NQ==", "bodyText": "BadRequestException is 400 bad request. I've updated the message (though I used workload user instead of actor her). And changed to NotFoundException.", "url": "https://github.com/hortonworks/cloudbreak/pull/7640#discussion_r397690765", "createdAt": "2020-03-25T08:51:22Z", "author": {"login": "aarman-cloudera"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/kerberosmgmt/v1/UserKeytabService.java", "diffHunk": "@@ -48,6 +56,21 @@ private void validateSameAccount(String userAccountId, String environmentCrn) {\n         }\n     }\n \n+    private void validateWorkloadUserInEnvironment(String workloadUsername, String environmentCrn) {\n+        String accountId = Crn.safeFromString(environmentCrn).getAccountId();\n+        FreeIpaClient freeIpaClient;\n+        try {\n+            freeIpaClient = freeIpaClientFactory.getFreeIpaClientByAccountAndEnvironment(environmentCrn, accountId);\n+            Optional<User> user = freeIpaClient.userFind(workloadUsername);\n+            if (user.isEmpty()) {\n+                throw new BadRequestException(String.format(\"Could not find workload user %s within environment %s. Ensure that the user has \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxMDc1NQ=="}, "originalCommit": {"oid": "332c41498172b39fe0c240228da153d41a585f1a"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2709, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}