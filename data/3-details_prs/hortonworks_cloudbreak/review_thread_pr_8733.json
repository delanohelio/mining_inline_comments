{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzOTQyNTE2", "number": 8733, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwODoxMTo1OFrOEWH1rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzowODoxMlrOEX7HKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjMyNTU2OnYy", "diffSide": "LEFT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwODoxMTo1OFrOG9Qv_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMzo0NDo1MlrOG-4eSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5MDc1MQ==", "bodyText": "what if every nodes are stopped?", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r466890751", "createdAt": "2020-08-07T08:11:58Z", "author": {"login": "sodre90"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "diffHunk": "@@ -206,24 +206,20 @@ private void deleteResourceIfNeeded(Stack stack, InstanceMetaData instance) {\n     }\n \n     private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> instanceStateCounts, boolean stackStatusUpdateEnabled) {\n-        Set<InstanceMetaData> instances = instanceMetaDataRepository.findNotTerminatedForStack(stack.getId());\n         if (instanceStateCounts.get(InstanceSyncState.UNKNOWN) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATUS_COULDNT_DETERMINE.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.IN_PROGRESS) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_OPERATION_IN_PROGRESS.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0 && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n+        } else if ((instanceStateCounts.get(InstanceSyncState.RUNNING) >= 0 || (instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE) >= 0))\n+                && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STOPPED_ON_PROVIDER.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0) {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.AVAILABLE, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.STOPPED).equals(instances.size())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48a03d20956d4d30c5873138e10985ae29867019"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgzODI4NQ==", "bodyText": "it will remain stopped. Did I miss something?", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r467838285", "createdAt": "2020-08-10T11:21:35Z", "author": {"login": "afarsang"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "diffHunk": "@@ -206,24 +206,20 @@ private void deleteResourceIfNeeded(Stack stack, InstanceMetaData instance) {\n     }\n \n     private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> instanceStateCounts, boolean stackStatusUpdateEnabled) {\n-        Set<InstanceMetaData> instances = instanceMetaDataRepository.findNotTerminatedForStack(stack.getId());\n         if (instanceStateCounts.get(InstanceSyncState.UNKNOWN) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATUS_COULDNT_DETERMINE.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.IN_PROGRESS) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_OPERATION_IN_PROGRESS.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0 && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n+        } else if ((instanceStateCounts.get(InstanceSyncState.RUNNING) >= 0 || (instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE) >= 0))\n+                && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STOPPED_ON_PROVIDER.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0) {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.AVAILABLE, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.STOPPED).equals(instances.size())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5MDc1MQ=="}, "originalCommit": {"oid": "48a03d20956d4d30c5873138e10985ae29867019"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1MDM2NQ==", "bodyText": "Which if clause handles that use-case? Why was the original \"else if\" deleted?", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r468450365", "createdAt": "2020-08-11T09:31:52Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "diffHunk": "@@ -206,24 +206,20 @@ private void deleteResourceIfNeeded(Stack stack, InstanceMetaData instance) {\n     }\n \n     private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> instanceStateCounts, boolean stackStatusUpdateEnabled) {\n-        Set<InstanceMetaData> instances = instanceMetaDataRepository.findNotTerminatedForStack(stack.getId());\n         if (instanceStateCounts.get(InstanceSyncState.UNKNOWN) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATUS_COULDNT_DETERMINE.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.IN_PROGRESS) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_OPERATION_IN_PROGRESS.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0 && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n+        } else if ((instanceStateCounts.get(InstanceSyncState.RUNNING) >= 0 || (instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE) >= 0))\n+                && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STOPPED_ON_PROVIDER.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0) {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.AVAILABLE, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.STOPPED).equals(instances.size())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5MDc1MQ=="}, "originalCommit": {"oid": "48a03d20956d4d30c5873138e10985ae29867019"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU5MDE1NA==", "bodyText": "I thought it will be the same as I did, I can fix that", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r468590154", "createdAt": "2020-08-11T13:44:52Z", "author": {"login": "afarsang"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "diffHunk": "@@ -206,24 +206,20 @@ private void deleteResourceIfNeeded(Stack stack, InstanceMetaData instance) {\n     }\n \n     private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> instanceStateCounts, boolean stackStatusUpdateEnabled) {\n-        Set<InstanceMetaData> instances = instanceMetaDataRepository.findNotTerminatedForStack(stack.getId());\n         if (instanceStateCounts.get(InstanceSyncState.UNKNOWN) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATUS_COULDNT_DETERMINE.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.IN_PROGRESS) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_OPERATION_IN_PROGRESS.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0 && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n+        } else if ((instanceStateCounts.get(InstanceSyncState.RUNNING) >= 0 || (instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE) >= 0))\n+                && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STOPPED_ON_PROVIDER.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0) {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.AVAILABLE, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.STOPPED).equals(instances.size())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5MDc1MQ=="}, "originalCommit": {"oid": "48a03d20956d4d30c5873138e10985ae29867019"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjkwMzg1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTozMjo0MVrOG-v-Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMzo0NDowMlrOG-4byA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1MDg3MA==", "bodyText": "I thought we agreed to put the status to STOPPED_FAILED if we find deleted instances. https://jira.cloudera.com/browse/ENGESC-3354?focusedCommentId=3950763&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-3950763\nHas this changed?", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r468450870", "createdAt": "2020-08-11T09:32:41Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "diffHunk": "@@ -206,24 +206,20 @@ private void deleteResourceIfNeeded(Stack stack, InstanceMetaData instance) {\n     }\n \n     private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> instanceStateCounts, boolean stackStatusUpdateEnabled) {\n-        Set<InstanceMetaData> instances = instanceMetaDataRepository.findNotTerminatedForStack(stack.getId());\n         if (instanceStateCounts.get(InstanceSyncState.UNKNOWN) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATUS_COULDNT_DETERMINE.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.IN_PROGRESS) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_OPERATION_IN_PROGRESS.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0 && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n+        } else if ((instanceStateCounts.get(InstanceSyncState.RUNNING) >= 0 || (instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE) >= 0))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48a03d20956d4d30c5873138e10985ae29867019"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU4OTUxMg==", "bodyText": "No, we agreed it remain STOPPED", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r468589512", "createdAt": "2020-08-11T13:44:02Z", "author": {"login": "afarsang"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "diffHunk": "@@ -206,24 +206,20 @@ private void deleteResourceIfNeeded(Stack stack, InstanceMetaData instance) {\n     }\n \n     private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> instanceStateCounts, boolean stackStatusUpdateEnabled) {\n-        Set<InstanceMetaData> instances = instanceMetaDataRepository.findNotTerminatedForStack(stack.getId());\n         if (instanceStateCounts.get(InstanceSyncState.UNKNOWN) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATUS_COULDNT_DETERMINE.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.IN_PROGRESS) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_OPERATION_IN_PROGRESS.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0 && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n+        } else if ((instanceStateCounts.get(InstanceSyncState.RUNNING) >= 0 || (instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE) >= 0))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1MDg3MA=="}, "originalCommit": {"oid": "48a03d20956d4d30c5873138e10985ae29867019"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTIxMTk1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzowODoxMlrOG_-vHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzowODoxMlrOG_-vHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc0MTM0Mw==", "bodyText": "whitespace added", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r469741343", "createdAt": "2020-08-13T07:08:12Z", "author": {"login": "sodre90"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "diffHunk": "@@ -224,7 +226,7 @@ private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> insta\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.STOPPED, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n-        } else {\n+        }  else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f66245ab00404099d4fbfd1d5ca4e693a6e431e"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3024, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}