{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNzUwODgx", "number": 9580, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDoxOToxNFrOFA9sTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDowNjoyNlrOFC1u-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTU1MDg2OnYy", "diffSide": "LEFT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDoxOToxNFrOH_gnmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjowNjozMFrOH_j87Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM1Njc2MA==", "bodyText": "I think the old way of looping outside of the updateInstanceStatus() was cleaner.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r536356760", "createdAt": "2020-12-04T20:19:14Z", "author": {"login": "jamisonbennett"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -105,23 +105,28 @@ public void syncAStack(Stack stack) {\n                     if (!checkableInstances.isEmpty()) {\n                         SyncResult syncResult = freeipaChecker.getStatus(stack, checkableInstances);\n                         if (DetailedStackStatus.AVAILABLE == syncResult.getStatus()) {\n-                            for (Map.Entry<InstanceMetaData, DetailedStackStatus> entry : syncResult.getInstanceStatusMap().entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ab6486ddff1b6c0f70c6b1cc06b9800e6320253"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQxMTM3Mw==", "bodyText": "Thanks! I changed back to the old way of looping outside now and kept the method signature.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r536411373", "createdAt": "2020-12-04T22:06:30Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -105,23 +105,28 @@ public void syncAStack(Stack stack) {\n                     if (!checkableInstances.isEmpty()) {\n                         SyncResult syncResult = freeipaChecker.getStatus(stack, checkableInstances);\n                         if (DetailedStackStatus.AVAILABLE == syncResult.getStatus()) {\n-                            for (Map.Entry<InstanceMetaData, DetailedStackStatus> entry : syncResult.getInstanceStatusMap().entrySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM1Njc2MA=="}, "originalCommit": {"oid": "5ab6486ddff1b6c0f70c6b1cc06b9800e6320253"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTU1NDEzOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDoyMDoxMVrOH_gpdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjowNzoxOVrOH_j-hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM1NzIzNg==", "bodyText": "I am not sure what log level we should have for this. If debug output is enabled in prod, then it probably should be debug level.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r536357236", "createdAt": "2020-12-04T20:20:11Z", "author": {"login": "jamisonbennett"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -105,23 +105,28 @@ public void syncAStack(Stack stack) {\n                     if (!checkableInstances.isEmpty()) {\n                         SyncResult syncResult = freeipaChecker.getStatus(stack, checkableInstances);\n                         if (DetailedStackStatus.AVAILABLE == syncResult.getStatus()) {\n-                            for (Map.Entry<InstanceMetaData, DetailedStackStatus> entry : syncResult.getInstanceStatusMap().entrySet()) {\n-                                updateInstanceStatus(entry.getKey(), entry.getValue());\n-                            }\n-                            updateStackStatus(stack, syncResult, null, alreadyDeletedCount);\n+                            String instanceStatusInfo = updateInstanceStatus(syncResult.getInstanceStatusMap());\n+                            String freeipaStatusInfo = updateStackStatus(stack, syncResult, null, alreadyDeletedCount);\n+                            LOGGER.info(\":::Auto sync::: freeipa status from healtch check: \" + freeipaStatusInfo + instanceStatusInfo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ab6486ddff1b6c0f70c6b1cc06b9800e6320253"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQxMTc4Mg==", "bodyText": "Thanks! I changed to debug level.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r536411782", "createdAt": "2020-12-04T22:07:19Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -105,23 +105,28 @@ public void syncAStack(Stack stack) {\n                     if (!checkableInstances.isEmpty()) {\n                         SyncResult syncResult = freeipaChecker.getStatus(stack, checkableInstances);\n                         if (DetailedStackStatus.AVAILABLE == syncResult.getStatus()) {\n-                            for (Map.Entry<InstanceMetaData, DetailedStackStatus> entry : syncResult.getInstanceStatusMap().entrySet()) {\n-                                updateInstanceStatus(entry.getKey(), entry.getValue());\n-                            }\n-                            updateStackStatus(stack, syncResult, null, alreadyDeletedCount);\n+                            String instanceStatusInfo = updateInstanceStatus(syncResult.getInstanceStatusMap());\n+                            String freeipaStatusInfo = updateStackStatus(stack, syncResult, null, alreadyDeletedCount);\n+                            LOGGER.info(\":::Auto sync::: freeipa status from healtch check: \" + freeipaStatusInfo + instanceStatusInfo);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM1NzIzNg=="}, "originalCommit": {"oid": "5ab6486ddff1b6c0f70c6b1cc06b9800e6320253"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODY4NjU0OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjowMjo0NVrOH_8iag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjowMjo0NVrOH_8iag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgxNDE4Ng==", "bodyText": ".toString() is not necessary", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r536814186", "createdAt": "2020-12-05T16:02:45Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -105,23 +105,31 @@ public void syncAStack(Stack stack) {\n                     if (!checkableInstances.isEmpty()) {\n                         SyncResult syncResult = freeipaChecker.getStatus(stack, checkableInstances);\n                         if (DetailedStackStatus.AVAILABLE == syncResult.getStatus()) {\n+                            StringBuilder allInstanceStatusInfo = new StringBuilder();\n                             for (Map.Entry<InstanceMetaData, DetailedStackStatus> entry : syncResult.getInstanceStatusMap().entrySet()) {\n-                                updateInstanceStatus(entry.getKey(), entry.getValue());\n+                                allInstanceStatusInfo.append(updateInstanceStatus(entry.getKey(), entry.getValue()));\n                             }\n-                            updateStackStatus(stack, syncResult, null, alreadyDeletedCount);\n+                            String freeipaStatusInfo = updateStackStatus(stack, syncResult, null, alreadyDeletedCount);\n+                            LOGGER.debug(\":::Auto sync::: freeipa status from healtch check: \" + freeipaStatusInfo + allInstanceStatusInfo.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cebc6ff05311b08c4804cc165acc2b094e4cfc0"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODY4NzAyOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjowMzoxNlrOH_8irQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjowMzoxNlrOH_8irQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgxNDI1Mw==", "bodyText": ".toString() is not necessary", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r536814253", "createdAt": "2020-12-05T16:03:16Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -131,23 +139,28 @@ public void syncAStack(Stack stack) {\n         }\n     }\n \n-    private void updateInstanceStatus(InstanceMetaData instanceMetaData, DetailedStackStatus detailedStackStatus) {\n+    private String updateInstanceStatus(InstanceMetaData instanceMetaData, DetailedStackStatus detailedStackStatus) {\n+        String instanceStatusInfo = \"\";\n         switch (detailedStackStatus) {\n             case AVAILABLE:\n                 setStatusIfNotTheSame(instanceMetaData, InstanceStatus.CREATED);\n+                instanceStatusInfo = String.format(\"instance %s is %s. \", instanceMetaData.getInstanceId(), InstanceStatus.CREATED.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cebc6ff05311b08c4804cc165acc2b094e4cfc0"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODY4NzA1OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjowMzoyMVrOH_8itg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjowMzoyMVrOH_8itg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgxNDI2Mg==", "bodyText": ".toString() is not necessary", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r536814262", "createdAt": "2020-12-05T16:03:21Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -131,23 +139,28 @@ public void syncAStack(Stack stack) {\n         }\n     }\n \n-    private void updateInstanceStatus(InstanceMetaData instanceMetaData, DetailedStackStatus detailedStackStatus) {\n+    private String updateInstanceStatus(InstanceMetaData instanceMetaData, DetailedStackStatus detailedStackStatus) {\n+        String instanceStatusInfo = \"\";\n         switch (detailedStackStatus) {\n             case AVAILABLE:\n                 setStatusIfNotTheSame(instanceMetaData, InstanceStatus.CREATED);\n+                instanceStatusInfo = String.format(\"instance %s is %s. \", instanceMetaData.getInstanceId(), InstanceStatus.CREATED.toString());\n                 break;\n             case UNHEALTHY:\n                 setStatusIfNotTheSame(instanceMetaData, InstanceStatus.UNHEALTHY);\n+                instanceStatusInfo = String.format(\"instance %s is %s. \", instanceMetaData.getInstanceId(), InstanceStatus.UNHEALTHY.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cebc6ff05311b08c4804cc165acc2b094e4cfc0"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODY4NzEwOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjowMzoyNVrOH_8iuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjowMzoyNVrOH_8iuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgxNDI2Nw==", "bodyText": ".toString() is not necessary", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r536814267", "createdAt": "2020-12-05T16:03:25Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -131,23 +139,28 @@ public void syncAStack(Stack stack) {\n         }\n     }\n \n-    private void updateInstanceStatus(InstanceMetaData instanceMetaData, DetailedStackStatus detailedStackStatus) {\n+    private String updateInstanceStatus(InstanceMetaData instanceMetaData, DetailedStackStatus detailedStackStatus) {\n+        String instanceStatusInfo = \"\";\n         switch (detailedStackStatus) {\n             case AVAILABLE:\n                 setStatusIfNotTheSame(instanceMetaData, InstanceStatus.CREATED);\n+                instanceStatusInfo = String.format(\"instance %s is %s. \", instanceMetaData.getInstanceId(), InstanceStatus.CREATED.toString());\n                 break;\n             case UNHEALTHY:\n                 setStatusIfNotTheSame(instanceMetaData, InstanceStatus.UNHEALTHY);\n+                instanceStatusInfo = String.format(\"instance %s is %s. \", instanceMetaData.getInstanceId(), InstanceStatus.UNHEALTHY.toString());\n                 break;\n             case UNREACHABLE:\n                 setStatusIfNotTheSame(instanceMetaData, InstanceStatus.UNREACHABLE);\n+                instanceStatusInfo = String.format(\"instance %s is %s. \", instanceMetaData.getInstanceId(), InstanceStatus.UNREACHABLE.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cebc6ff05311b08c4804cc165acc2b094e4cfc0"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODY4NzI2OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjowMzozMlrOH_8izA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNjowMzozMlrOH_8izA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgxNDI4NA==", "bodyText": ".toString() is not necessary", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r536814284", "createdAt": "2020-12-05T16:03:32Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -162,6 +175,7 @@ private void updateStackStatus(Stack stack, SyncResult result, List<ProviderSync\n                         stack.getStackStatus().getDetailedStackStatus(), status);\n             }\n         }\n+        return String.format(\"freeipa %s is %s. \", stack.getResourceCrn(), status.getStatus().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cebc6ff05311b08c4804cc165acc2b094e4cfc0"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTI3NTMzOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzoxODoyOFrOIAxiYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzozMzowMFrOIBr9CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY4MjUyOQ==", "bodyText": "for this to work right I think you have to fetch stack or stack status from db or you would have to modify StackStatusCheckerJob#updateStackStatus to return the modified stack and use that.\nYou could use StackStatusService#findFirstByStackIdOrderByCreatedDesc to fetch the current status.\nAlso resource crn logging shouldn't be necessary, the MDCContext should have all the filed set.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r537682529", "createdAt": "2020-12-07T17:18:28Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.sequenceiq.freeipa.sync;\n+\n+import com.sequenceiq.freeipa.entity.InstanceMetaData;\n+import com.sequenceiq.freeipa.entity.Stack;\n+import com.sequenceiq.freeipa.service.stack.instance.InstanceMetaDataService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class FreeipaStatusInfoLogger {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FreeipaStatusInfoLogger.class);\n+\n+    @Inject\n+    private InstanceMetaDataService instanceMetaDataService;\n+\n+    public void logFreeipaStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {\n+        String freeipaStatusInfo = String.format(\"freeipa %s is %s. \", stack.getResourceCrn(), stack.getStackStatus().getStatus());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe6cb09691ee64db692c7a16c025a8e7039af1c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYzOTYyNQ==", "bodyText": "Thanks! I added StackStatusService.java and StackStatusRepository.java just like those in cloudbreak-core for datalake stack. Currently we don't have StackStatusService for freeipa but it is just the same as datalake stack. Now I use findFirstByStackIdOrderByCreatedDesc to fetch stack status. Also now CRN is removed as it is already logged by MDC.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r538639625", "createdAt": "2020-12-08T17:33:00Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.sequenceiq.freeipa.sync;\n+\n+import com.sequenceiq.freeipa.entity.InstanceMetaData;\n+import com.sequenceiq.freeipa.entity.Stack;\n+import com.sequenceiq.freeipa.service.stack.instance.InstanceMetaDataService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class FreeipaStatusInfoLogger {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FreeipaStatusInfoLogger.class);\n+\n+    @Inject\n+    private InstanceMetaDataService instanceMetaDataService;\n+\n+    public void logFreeipaStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {\n+        String freeipaStatusInfo = String.format(\"freeipa %s is %s. \", stack.getResourceCrn(), stack.getStackStatus().getStatus());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY4MjUyOQ=="}, "originalCommit": {"oid": "7fe6cb09691ee64db692c7a16c025a8e7039af1c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTM1MDYxOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzozNDowNFrOIAyOmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzozNjozOFrOIBsLnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5Mzg1MA==", "bodyText": "I would suggest some refactor:\n    public void logFreeipaStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {\n        String freeipaStatusInfo = String.format(\"freeipa %s is %s.\", stack.getResourceCrn(), stack.getStackStatus().getStatus());\n        String allInstanceStatusInfo = createInstancesStatusInfo(checkableInstances);\n        LOGGER.debug(\":::Auto sync::: freeipa status from healtch check: {} {}\", freeipaStatusInfo, allInstanceStatusInfo);\n    }\n\n    private String createInstancesStatusInfo(Set<InstanceMetaData> checkableInstances) {\n        Set<InstanceMetaData> allInstanceMetaData = fetchCheckableInstancesFromDb(checkableInstances);\n        String allInstanceStatusInfo = allInstanceMetaData.stream().map(instance -> String.format(\"%s is %s\", instance.getInstanceId(),\n                instance.getInstanceStatus())).collect(Collectors.joining(\"; \"));\n        return allInstanceStatusInfo;\n    }\n\n    private Set<InstanceMetaData> fetchCheckableInstancesFromDb(Set<InstanceMetaData> checkableInstances) {\n        Set<String> checkableInstanceIds = collectCheckableInstanceIds(checkableInstances);\n        Set<InstanceMetaData> allInstanceMetaData = instanceMetaDataService\n                .getByInstanceIds(checkableInstanceIds);\n        return allInstanceMetaData;\n    }\n\n    private Set<String> collectCheckableInstanceIds(Set<InstanceMetaData> checkableInstances) {\n        return checkableInstances.stream()\n                .map(InstanceMetaData::getInstanceId)\n                .collect(Collectors.toSet());\n    }\n\nthe main just next to breaking it into smaller parts that I have switched to stream and used the built in collector instead of creating a StringBuilder. Also I modified the log line and removed the trailing space from freeipaStatusInfo. It's a bit odd to add a space there.\nFeel free to modify the delimiter in joining, I just added something.\nPlease also note I haven't added the fix for the Stack status", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r537693850", "createdAt": "2020-12-07T17:34:04Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.sequenceiq.freeipa.sync;\n+\n+import com.sequenceiq.freeipa.entity.InstanceMetaData;\n+import com.sequenceiq.freeipa.entity.Stack;\n+import com.sequenceiq.freeipa.service.stack.instance.InstanceMetaDataService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class FreeipaStatusInfoLogger {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FreeipaStatusInfoLogger.class);\n+\n+    @Inject\n+    private InstanceMetaDataService instanceMetaDataService;\n+\n+    public void logFreeipaStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe6cb09691ee64db692c7a16c025a8e7039af1c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYzNjI3Mw==", "bodyText": "Thanks a lot! I refactored and also added the fix for stack status.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r538636273", "createdAt": "2020-12-08T17:30:05Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.sequenceiq.freeipa.sync;\n+\n+import com.sequenceiq.freeipa.entity.InstanceMetaData;\n+import com.sequenceiq.freeipa.entity.Stack;\n+import com.sequenceiq.freeipa.service.stack.instance.InstanceMetaDataService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class FreeipaStatusInfoLogger {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FreeipaStatusInfoLogger.class);\n+\n+    @Inject\n+    private InstanceMetaDataService instanceMetaDataService;\n+\n+    public void logFreeipaStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5Mzg1MA=="}, "originalCommit": {"oid": "7fe6cb09691ee64db692c7a16c025a8e7039af1c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY0MzM1OQ==", "bodyText": "Post the new log message here.\n2020-12-08 11:45:59,087 [quartzScheduler_Worker-1] logFreeipaStatus:31 DEBUG c.s.f.s.FreeipaStatusInfoLogger - [type:STACK] [crn:crn:cdp:freeipa:us-west-1:default:freeipa:e09e4a42-07f6-4298-a10f-6e031ab8217f] [name:yuwang-env2-15433-freeipa] [flow:] [requestid:7df9216c-d8cd-4ec9-be2b-bc8b762fd61b] [tenant:default] [userCrn:] [environment:crn:cdp:environments:us-west-1:default:environment:6298663a-49b4-43b2-97d7-c2bd74e67f77] [traceId:] [spanId:] [operationId:] :::Auto sync::: freeipa status from healtch check: freeipa stack is AVAILABLE. instance i-09ecf6806dd902fcc is CREATED; instance i-078af5be4d2eece5d is CREATED", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r538643359", "createdAt": "2020-12-08T17:36:38Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.sequenceiq.freeipa.sync;\n+\n+import com.sequenceiq.freeipa.entity.InstanceMetaData;\n+import com.sequenceiq.freeipa.entity.Stack;\n+import com.sequenceiq.freeipa.service.stack.instance.InstanceMetaDataService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class FreeipaStatusInfoLogger {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FreeipaStatusInfoLogger.class);\n+\n+    @Inject\n+    private InstanceMetaDataService instanceMetaDataService;\n+\n+    public void logFreeipaStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5Mzg1MA=="}, "originalCommit": {"oid": "7fe6cb09691ee64db692c7a16c025a8e7039af1c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTM2ODAxOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzozNzo0OFrOIAyY3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoyOTowNlrOIBrrCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5NjQ3Ng==", "bodyText": "I think it might be saved via stack but I'm not sure. If you seen a missing status maybe it's best to save it here, but please test around with a few changes, even with HA when only one instance's status change to see if there is no issue. thanks", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r537696476", "createdAt": "2020-12-07T17:37:48Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -189,6 +197,7 @@ private void setStatusIfNotTheSame(InstanceMetaData instanceMetaData, InstanceSt\n         if (instanceMetaData.getInstanceStatus() != newStatus) {\n             if (updateStatus) {\n                 instanceMetaData.setInstanceStatus(newStatus);\n+                instanceMetaDataService.save(instanceMetaData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe6cb09691ee64db692c7a16c025a8e7039af1c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYzNTAxNw==", "bodyText": "Yes. My mistake. You are right. it is already saved via stack by cascading. The original code is working as it is. I confirmed in database and by debugging mode. I removed my change and kept it as before.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r538635017", "createdAt": "2020-12-08T17:29:06Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -189,6 +197,7 @@ private void setStatusIfNotTheSame(InstanceMetaData instanceMetaData, InstanceSt\n         if (instanceMetaData.getInstanceStatus() != newStatus) {\n             if (updateStatus) {\n                 instanceMetaData.setInstanceStatus(newStatus);\n+                instanceMetaDataService.save(instanceMetaData);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5NjQ3Ng=="}, "originalCommit": {"oid": "7fe6cb09691ee64db692c7a16c025a8e7039af1c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTIxMTYyOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDowNDo1NVrOICMcNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNToxNDowNFrOICZxcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3MTg5Mw==", "bodyText": "I think you could replace Stack stack with Long stackId as stack is only used for getting it's id", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r539171893", "createdAt": "2020-12-09T10:04:55Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.sequenceiq.freeipa.sync;\n+\n+import com.sequenceiq.freeipa.entity.InstanceMetaData;\n+import com.sequenceiq.freeipa.entity.Stack;\n+import com.sequenceiq.freeipa.entity.StackStatus;\n+import com.sequenceiq.freeipa.service.stack.StackStatusService;\n+import com.sequenceiq.freeipa.service.stack.instance.InstanceMetaDataService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class FreeipaStatusInfoLogger {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FreeipaStatusInfoLogger.class);\n+\n+    @Inject\n+    private InstanceMetaDataService instanceMetaDataService;\n+\n+    @Inject\n+    private StackStatusService stackStatusService;\n+\n+    public void logFreeipaStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e966c5044c0580810442775dacd01587e789fd"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM5MDMyMw==", "bodyText": "Thanks! Resolved.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r539390323", "createdAt": "2020-12-09T15:14:04Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.sequenceiq.freeipa.sync;\n+\n+import com.sequenceiq.freeipa.entity.InstanceMetaData;\n+import com.sequenceiq.freeipa.entity.Stack;\n+import com.sequenceiq.freeipa.entity.StackStatus;\n+import com.sequenceiq.freeipa.service.stack.StackStatusService;\n+import com.sequenceiq.freeipa.service.stack.instance.InstanceMetaDataService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class FreeipaStatusInfoLogger {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FreeipaStatusInfoLogger.class);\n+\n+    @Inject\n+    private InstanceMetaDataService instanceMetaDataService;\n+\n+    @Inject\n+    private StackStatusService stackStatusService;\n+\n+    public void logFreeipaStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3MTg5Mw=="}, "originalCommit": {"oid": "c5e966c5044c0580810442775dacd01587e789fd"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTIxNzQ5OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDowNjoxMFrOICMfow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNToxNDoyMlrOICZykQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3Mjc3MQ==", "bodyText": "it would be more readable if you break lines at stream methods, like map or/and collect instead of in the middle of String.format", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r539172771", "createdAt": "2020-12-09T10:06:10Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.sequenceiq.freeipa.sync;\n+\n+import com.sequenceiq.freeipa.entity.InstanceMetaData;\n+import com.sequenceiq.freeipa.entity.Stack;\n+import com.sequenceiq.freeipa.entity.StackStatus;\n+import com.sequenceiq.freeipa.service.stack.StackStatusService;\n+import com.sequenceiq.freeipa.service.stack.instance.InstanceMetaDataService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class FreeipaStatusInfoLogger {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FreeipaStatusInfoLogger.class);\n+\n+    @Inject\n+    private InstanceMetaDataService instanceMetaDataService;\n+\n+    @Inject\n+    private StackStatusService stackStatusService;\n+\n+    public void logFreeipaStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {\n+        StackStatus freeipaStatus = stackStatusService.findFirstByStackIdOrderByCreatedDesc(stack.getId());\n+        String freeipaStatusInfo = String.format(\"freeipa stack is %s.\", freeipaStatus.getStatus());\n+        String allInstanceStatusInfo = createInstancesStatusInfo(checkableInstances);\n+        LOGGER.debug(\":::Auto sync::: freeipa status from healtch check: {} {}\", freeipaStatusInfo, allInstanceStatusInfo);\n+    }\n+\n+    private String createInstancesStatusInfo(Set<InstanceMetaData> checkableInstances) {\n+        Set<InstanceMetaData> allInstanceMetaData = fetchCheckableInstancesFromDb(checkableInstances);\n+        String allInstanceStatusInfo = allInstanceMetaData.stream().map(instance -> String.format(\"instance %s is %s\", instance.getInstanceId(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e966c5044c0580810442775dacd01587e789fd"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM5MDYwOQ==", "bodyText": "Thanks! Resolved.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r539390609", "createdAt": "2020-12-09T15:14:22Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/FreeipaStatusInfoLogger.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.sequenceiq.freeipa.sync;\n+\n+import com.sequenceiq.freeipa.entity.InstanceMetaData;\n+import com.sequenceiq.freeipa.entity.Stack;\n+import com.sequenceiq.freeipa.entity.StackStatus;\n+import com.sequenceiq.freeipa.service.stack.StackStatusService;\n+import com.sequenceiq.freeipa.service.stack.instance.InstanceMetaDataService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class FreeipaStatusInfoLogger {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FreeipaStatusInfoLogger.class);\n+\n+    @Inject\n+    private InstanceMetaDataService instanceMetaDataService;\n+\n+    @Inject\n+    private StackStatusService stackStatusService;\n+\n+    public void logFreeipaStatus(Stack stack, Set<InstanceMetaData> checkableInstances) {\n+        StackStatus freeipaStatus = stackStatusService.findFirstByStackIdOrderByCreatedDesc(stack.getId());\n+        String freeipaStatusInfo = String.format(\"freeipa stack is %s.\", freeipaStatus.getStatus());\n+        String allInstanceStatusInfo = createInstancesStatusInfo(checkableInstances);\n+        LOGGER.debug(\":::Auto sync::: freeipa status from healtch check: {} {}\", freeipaStatusInfo, allInstanceStatusInfo);\n+    }\n+\n+    private String createInstancesStatusInfo(Set<InstanceMetaData> checkableInstances) {\n+        Set<InstanceMetaData> allInstanceMetaData = fetchCheckableInstancesFromDb(checkableInstances);\n+        String allInstanceStatusInfo = allInstanceMetaData.stream().map(instance -> String.format(\"instance %s is %s\", instance.getInstanceId(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3Mjc3MQ=="}, "originalCommit": {"oid": "c5e966c5044c0580810442775dacd01587e789fd"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTIxODUwOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDowNjoyNlrOICMgOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNToxNDoyOFrOICZy9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3MjkyMQ==", "bodyText": "unnecessary extra spaces", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r539172921", "createdAt": "2020-12-09T10:06:26Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -108,7 +115,7 @@ public void syncAStack(Stack stack) {\n                             for (Map.Entry<InstanceMetaData, DetailedStackStatus> entry : syncResult.getInstanceStatusMap().entrySet()) {\n                                 updateInstanceStatus(entry.getKey(), entry.getValue());\n                             }\n-                            updateStackStatus(stack, syncResult, null, alreadyDeletedCount);\n+                            updateStackStatus(stack, syncResult, null,   alreadyDeletedCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e966c5044c0580810442775dacd01587e789fd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM5MDcxMA==", "bodyText": "Thanks! Resolved.", "url": "https://github.com/hortonworks/cloudbreak/pull/9580#discussion_r539390710", "createdAt": "2020-12-09T15:14:28Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -108,7 +115,7 @@ public void syncAStack(Stack stack) {\n                             for (Map.Entry<InstanceMetaData, DetailedStackStatus> entry : syncResult.getInstanceStatusMap().entrySet()) {\n                                 updateInstanceStatus(entry.getKey(), entry.getValue());\n                             }\n-                            updateStackStatus(stack, syncResult, null, alreadyDeletedCount);\n+                            updateStackStatus(stack, syncResult, null,   alreadyDeletedCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3MjkyMQ=="}, "originalCommit": {"oid": "c5e966c5044c0580810442775dacd01587e789fd"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3424, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}