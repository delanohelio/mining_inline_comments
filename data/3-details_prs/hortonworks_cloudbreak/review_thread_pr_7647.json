{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTk0OTgw", "number": 7647, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxNjozNlrODrShsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxNjozNlrODrShsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE4ODk4OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/credential/service/CredentialService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxNjozNlrOF7jDZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxNjozNlrOF7jDZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4NDYxMg==", "bodyText": "I would make the sendCredentialNotification the last command here.", "url": "https://github.com/hortonworks/cloudbreak/pull/7647#discussion_r397984612", "createdAt": "2020-03-25T16:16:36Z", "author": {"login": "lnardai"}, "path": "environment/src/main/java/com/sequenceiq/environment/credential/service/CredentialService.java", "diffHunk": "@@ -170,11 +175,18 @@ public Credential create(Credential credential, @Nonnull String accountId, @Nonn\n         credential.setResourceCrn(credentialCrn);\n         credential.setCreator(creatorUserCrn);\n         credential.setAccountId(accountId);\n-        Credential created = repository.save(credentialAdapter.verify(credential, accountId).getCredential());\n-        sendCredentialNotification(credential, ResourceEvent.CREDENTIAL_CREATED);\n-        String credentialOwnerCrn = grpcUmsClient.getBuiltInCredentialOwnerResourceRoleCrn();\n-        grpcUmsClient.assignResourceRole(creatorUserCrn, credentialCrn, credentialOwnerCrn, MDCUtils.getRequestId());\n-        return created;\n+        try {\n+            return transactionService.required(() -> {\n+                Credential created = repository.save(credentialAdapter.verify(credential, accountId).getCredential());\n+                sendCredentialNotification(credential, ResourceEvent.CREDENTIAL_CREATED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b726382c8913631d1e5e2b4d27307aad64efa4d2"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2580, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}