{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMjI4NDcx", "number": 7194, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODoxNDowNVrODeXHRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzozODozM1rODfLgIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTYyNTY2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODoxNDowNVrOFnc-_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDo1OToyNlrOFnh5Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMzY2Mw==", "bodyText": "Please rename the param name to crn.", "url": "https://github.com/hortonworks/cloudbreak/pull/7194#discussion_r376913663", "createdAt": "2020-02-10T08:14:05Z", "author": {"login": "foldik"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java", "diffHunk": "@@ -207,6 +207,10 @@\n     @Query(\"SELECT s.id FROM Stack s WHERE s.name= :name AND s.workspace.id= :workspaceId AND s.terminated = null\")\n     Optional<Long> findIdByNameAndWorkspaceId(@Param(\"name\") String name, @Param(\"workspaceId\") Long workspaceId);\n \n+    @DisableCheckPermissions\n+    @Query(\"SELECT s.id FROM Stack s WHERE s.resourceCrn= :crn AND s.workspace.id= :workspaceId AND s.terminated = null\")\n+    Optional<Long> findIdByCrnAndWorkspaceId(@Param(\"crn\") String name, @Param(\"workspaceId\") Long workspaceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c0453a33d44769f6c653fa7b79562a96fa80863"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5NDE0Nw==", "bodyText": "Thanks, a nice catch! Done.", "url": "https://github.com/hortonworks/cloudbreak/pull/7194#discussion_r376994147", "createdAt": "2020-02-10T10:59:26Z", "author": {"login": "gergopapi2"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java", "diffHunk": "@@ -207,6 +207,10 @@\n     @Query(\"SELECT s.id FROM Stack s WHERE s.name= :name AND s.workspace.id= :workspaceId AND s.terminated = null\")\n     Optional<Long> findIdByNameAndWorkspaceId(@Param(\"name\") String name, @Param(\"workspaceId\") Long workspaceId);\n \n+    @DisableCheckPermissions\n+    @Query(\"SELECT s.id FROM Stack s WHERE s.resourceCrn= :crn AND s.workspace.id= :workspaceId AND s.terminated = null\")\n+    Optional<Long> findIdByCrnAndWorkspaceId(@Param(\"crn\") String name, @Param(\"workspaceId\") Long workspaceId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMzY2Mw=="}, "originalCommit": {"oid": "8c0453a33d44769f6c653fa7b79562a96fa80863"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDIwODk3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradeService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzozODozM1rOFou0kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjozNDowM1rOFp8jTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1NDQ4Mg==", "bodyText": "small thing: why are you using toString here instead of name?", "url": "https://github.com/hortonworks/cloudbreak/pull/7194#discussion_r378254482", "createdAt": "2020-02-12T13:38:33Z", "author": {"login": "horadla23"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradeService.java", "diffHunk": "@@ -74,18 +75,18 @@\n     @Inject\n     private TransactionService transactionService;\n \n-    public UpgradeOptionV4Response getUpgradeOptionByStackName(Long workspaceId, String stackName, User user) {\n+    public UpgradeOptionV4Response getUpgradeOptionByStackNameOrCrn(Long workspaceId, NameOrCrn nameOrCrn, User user) {\n         try {\n             return transactionService.required(() -> {\n-                Optional<Stack> stack = stackService.findStackByNameAndWorkspaceId(stackName, workspaceId);\n+                Optional<Stack> stack = stackService.findStackByNameOrCrnAndWorkspaceId(nameOrCrn, workspaceId);\n                 if (stack.isPresent()) {\n                     try {\n                         return getUpgradeOption(stack.get(), workspaceId, user);\n                     } catch (CloudbreakImageNotFoundException | CloudbreakImageCatalogException e) {\n                         throw new BadRequestException(e.getMessage());\n                     }\n                 } else {\n-                    throw notFoundException(\"Stack\", stackName);\n+                    throw notFoundException(\"Stack\", nameOrCrn.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7c7c6cee2609db06bf2f3fe6afb484761f65774"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2Mjg5NQ==", "bodyText": "On this very place I need to use toString as nameOrCrn can hold either name or crn, it is not known statically. NameOrCrn object is passed to the method findStackByNameOrCrnAndWorkspaceId accepting both name and crn.", "url": "https://github.com/hortonworks/cloudbreak/pull/7194#discussion_r379362895", "createdAt": "2020-02-14T10:41:18Z", "author": {"login": "gergopapi2"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradeService.java", "diffHunk": "@@ -74,18 +75,18 @@\n     @Inject\n     private TransactionService transactionService;\n \n-    public UpgradeOptionV4Response getUpgradeOptionByStackName(Long workspaceId, String stackName, User user) {\n+    public UpgradeOptionV4Response getUpgradeOptionByStackNameOrCrn(Long workspaceId, NameOrCrn nameOrCrn, User user) {\n         try {\n             return transactionService.required(() -> {\n-                Optional<Stack> stack = stackService.findStackByNameAndWorkspaceId(stackName, workspaceId);\n+                Optional<Stack> stack = stackService.findStackByNameOrCrnAndWorkspaceId(nameOrCrn, workspaceId);\n                 if (stack.isPresent()) {\n                     try {\n                         return getUpgradeOption(stack.get(), workspaceId, user);\n                     } catch (CloudbreakImageNotFoundException | CloudbreakImageCatalogException e) {\n                         throw new BadRequestException(e.getMessage());\n                     }\n                 } else {\n-                    throw notFoundException(\"Stack\", stackName);\n+                    throw notFoundException(\"Stack\", nameOrCrn.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1NDQ4Mg=="}, "originalCommit": {"oid": "d7c7c6cee2609db06bf2f3fe6afb484761f65774"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyODAxNA==", "bodyText": "@horadla23 Tests: I ran e2e aws tests locally:\ntestCreateScaleStopStartCluster\ntestSDXRepairIDBRokerWithStoppedEC2Instance", "url": "https://github.com/hortonworks/cloudbreak/pull/7194#discussion_r379528014", "createdAt": "2020-02-14T16:34:03Z", "author": {"login": "gergopapi2"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradeService.java", "diffHunk": "@@ -74,18 +75,18 @@\n     @Inject\n     private TransactionService transactionService;\n \n-    public UpgradeOptionV4Response getUpgradeOptionByStackName(Long workspaceId, String stackName, User user) {\n+    public UpgradeOptionV4Response getUpgradeOptionByStackNameOrCrn(Long workspaceId, NameOrCrn nameOrCrn, User user) {\n         try {\n             return transactionService.required(() -> {\n-                Optional<Stack> stack = stackService.findStackByNameAndWorkspaceId(stackName, workspaceId);\n+                Optional<Stack> stack = stackService.findStackByNameOrCrnAndWorkspaceId(nameOrCrn, workspaceId);\n                 if (stack.isPresent()) {\n                     try {\n                         return getUpgradeOption(stack.get(), workspaceId, user);\n                     } catch (CloudbreakImageNotFoundException | CloudbreakImageCatalogException e) {\n                         throw new BadRequestException(e.getMessage());\n                     }\n                 } else {\n-                    throw notFoundException(\"Stack\", stackName);\n+                    throw notFoundException(\"Stack\", nameOrCrn.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1NDQ4Mg=="}, "originalCommit": {"oid": "d7c7c6cee2609db06bf2f3fe6afb484761f65774"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2896, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}