{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NzU3MTE4", "number": 9416, "title": "Cb 9114 remove spark", "bodyText": "See detailed description in the commit message.", "createdAt": "2020-11-12T09:46:37Z", "url": "https://github.com/hortonworks/cloudbreak/pull/9416", "merged": true, "mergeCommit": {"oid": "add36e623364b28b79ae771a1c85c78cbdf1eff7"}, "closed": true, "closedAt": "2020-11-17T12:14:37Z", "author": {"login": "topolyai5"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbzGUXgBqjM5ODg4NDAxMzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddWX2WAFqTUzMjE4NTU2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5472172fd6374b587e02e67e734f00e78ccd576", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/b5472172fd6374b587e02e67e734f00e78ccd576", "committedDate": "2020-11-12T09:40:41Z", "message": "CB-9114 Remove Spark service, SparkServerPool, Defaulty model from IT. I cleaned up some old tests (like ambari tests)"}, "afterCommit": {"oid": "de88c220ee8526d8676eb769e783c3a0838bf142", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/de88c220ee8526d8676eb769e783c3a0838bf142", "committedDate": "2020-11-12T14:03:46Z", "message": "sfsf"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de88c220ee8526d8676eb769e783c3a0838bf142", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/de88c220ee8526d8676eb769e783c3a0838bf142", "committedDate": "2020-11-12T14:03:46Z", "message": "sfsf"}, "afterCommit": {"oid": "170ea668d10cb563d5d8a6f08bbe1263b2936a96", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/170ea668d10cb563d5d8a6f08bbe1263b2936a96", "committedDate": "2020-11-13T09:18:46Z", "message": "CB-9114 Remove Spark service, SparkServerPool, Defaulty model from IT. I cleaned up some old tests (like ambari tests)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a7cd51bf8de033b18494304502a54739aff5261", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/1a7cd51bf8de033b18494304502a54739aff5261", "committedDate": "2020-11-16T09:24:42Z", "message": "CB-9114 Remove Spark service, SparkServerPool, Defaulty model from IT. I cleaned up some old tests (like ambari tests)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "170ea668d10cb563d5d8a6f08bbe1263b2936a96", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/170ea668d10cb563d5d8a6f08bbe1263b2936a96", "committedDate": "2020-11-13T09:18:46Z", "message": "CB-9114 Remove Spark service, SparkServerPool, Defaulty model from IT. I cleaned up some old tests (like ambari tests)"}, "afterCommit": {"oid": "1a7cd51bf8de033b18494304502a54739aff5261", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/1a7cd51bf8de033b18494304502a54739aff5261", "committedDate": "2020-11-16T09:24:42Z", "message": "CB-9114 Remove Spark service, SparkServerPool, Defaulty model from IT. I cleaned up some old tests (like ambari tests)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMzk5MTI1", "url": "https://github.com/hortonworks/cloudbreak/pull/9416#pullrequestreview-531399125", "createdAt": "2020-11-16T14:57:48Z", "commit": {"oid": "1a7cd51bf8de033b18494304502a54739aff5261"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNDQ1Mzk0", "url": "https://github.com/hortonworks/cloudbreak/pull/9416#pullrequestreview-531445394", "createdAt": "2020-11-16T15:44:09Z", "commit": {"oid": "1a7cd51bf8de033b18494304502a54739aff5261"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTo0NDowOVrOH0Esig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTo0ODowMlrOH0E5Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM2NDkzOA==", "bodyText": "Wouldn't be possible to has this withGatewayPort() call in the MockCloudProvider class only? I guess other providers will work without it.", "url": "https://github.com/hortonworks/cloudbreak/pull/9416#discussion_r524364938", "createdAt": "2020-11-16T15:44:09Z", "author": {"login": "afarsang"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/dto/clustertemplate/DistroXTemplateTestDto.java", "diffHunk": "@@ -44,7 +43,8 @@ public DistroXTemplateTestDto valid() {\n         return withName(getResourcePropertyProvider().getName(getCloudPlatform()))\n                 .withEnvironmentName(getTestContext().get(EnvironmentTestDto.class).getName())\n                 .withCluster(getTestContext().init(ClusterTestDto.class).getRequest())\n-                .withInstanceGroups(getTestContext().init(InstanceGroupTestDto.class).getRequest());\n+                .withInstanceGroups(getTestContext().init(InstanceGroupTestDto.class).getRequest())\n+                .withGatewayPort(getCloudProvider().gatewayPort(this));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a7cd51bf8de033b18494304502a54739aff5261"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM2NjE1NA==", "bodyText": "This comment seems unnecessary", "url": "https://github.com/hortonworks/cloudbreak/pull/9416#discussion_r524366154", "createdAt": "2020-11-16T15:45:35Z", "author": {"login": "afarsang"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/dto/mock/answer/AbstractRequestHandler.java", "diffHunk": "@@ -54,7 +52,8 @@ public HttpMock getMock() {\n     }\n \n     public HttpMock clearDefinedResponses() {\n-        mock.getDynamicRouteStack().clear(method.getHttpMethod(), path);\n+//        mock.getDynamicRouteStack().clear(method.getHttpMethod(), path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a7cd51bf8de033b18494304502a54739aff5261"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM2NjcwNA==", "bodyText": "Do we need this?", "url": "https://github.com/hortonworks/cloudbreak/pull/9416#discussion_r524366704", "createdAt": "2020-11-16T15:46:11Z", "author": {"login": "afarsang"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/dto/mock/answer/AbstractRequestWithBodyHandler.java", "diffHunk": "@@ -25,20 +22,17 @@\n     }\n \n     public HttpMock thenReturn(GenericRequestResponse<S, T> genericResponse) {\n-        S handle = genericResponse.handle(null, null, null);\n+        S handle = genericResponse.handle(null, null);\n         executeQuery().executeConfigure(getPath(), pathVariables(), new MockResponse(handle, getMethod().getHttpMethod().name(), getPath()));\n         return getMock();\n     }\n \n-    abstract T prepareRequestInstance(spark.Request request);\n+//    abstract T prepareRequestInstance(spark.Request request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a7cd51bf8de033b18494304502a54739aff5261"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM2ODIxMA==", "bodyText": "This is commented out in many place. If it works without it I'll assume it can be deleted", "url": "https://github.com/hortonworks/cloudbreak/pull/9416#discussion_r524368210", "createdAt": "2020-11-16T15:48:02Z", "author": {"login": "afarsang"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/dto/mock/answer/JsonRequestAnswer.java", "diffHunk": "@@ -1,33 +1,27 @@\n package com.sequenceiq.it.cloudbreak.dto.mock.answer;\n \n-import java.io.IOException;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import com.fasterxml.jackson.databind.JsonNode;\n-import com.sequenceiq.cloudbreak.common.json.JsonUtil;\n import com.sequenceiq.it.cloudbreak.dto.mock.HttpMock;\n import com.sequenceiq.it.cloudbreak.dto.mock.Method;\n-import com.sequenceiq.it.cloudbreak.exception.TestFailException;\n import com.sequenceiq.it.cloudbreak.mock.ExecuteQueryToMockInfrastructure;\n \n-import spark.Request;\n-\n public class JsonRequestAnswer<S> extends AbstractRequestWithBodyHandler<S, JsonNode, JsonRequestAnswer<S>> {\n     private static final Logger LOGGER = LoggerFactory.getLogger(JsonRequestAnswer.class);\n \n     public JsonRequestAnswer(Method method, String path, Class<String> requestType, HttpMock mock, ExecuteQueryToMockInfrastructure executeQuery) {\n         super(method, path, JsonNode.class, mock, executeQuery);\n     }\n \n-    @Override\n-    JsonNode prepareRequestInstance(Request request) {\n-        try {\n-            return JsonUtil.readTree(request.body());\n-        } catch (IOException e) {\n-            LOGGER.error(\"Could not parse json from request body\", e);\n-            throw new TestFailException(\"Could not parse json from request body\", e);\n-        }\n-    }\n+//    @Override\n+//    JsonNode prepareRequestInstance(Request request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a7cd51bf8de033b18494304502a54739aff5261"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMTg1NTY3", "url": "https://github.com/hortonworks/cloudbreak/pull/9416#pullrequestreview-532185567", "createdAt": "2020-11-17T09:45:00Z", "commit": {"oid": "1a7cd51bf8de033b18494304502a54739aff5261"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2109, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}