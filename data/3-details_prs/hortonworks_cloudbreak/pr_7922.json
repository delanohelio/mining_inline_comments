{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMzczOTAz", "number": 7922, "title": "Add backup and restore scripts for DL postgres db.", "bodyText": "Create bash scripts to run PostgreSQL dump and restore against hive and ranger databases.\n\nAdd backup_db.sh\nAdd restore_db.sh\n\nScripts accept:\n\nCloud Provider (azure | aws)\nPostgreSQL host name.\nPostgreSQL port.\nObject Storage Service url to save backups.\nPostgreSQL user name.\nPostgreSQL password.\n\nThe backup script stores backups in the Cloud Object storage under a Date String prefix, e.g. s3://backup-bucket/2020-04-28T18:12:53Z.\nStorage service URLs are different when doing backup versus restore. The parent folder is specified for backup, while the particular date folder should be specified for restore.\n\nBackup to s3://backup-bucket\nRestore from s3://backup-bucket/2020-04-28T18:12:53Z\n\nThe backup script:\n\nRuns pg_dump, outputting to a local file\nCopies the dump to Cloud Storage\n\nRestore does the reverse:\n\nCopies a dump from Cloud storage to the master instance.\nModifies the list file to remove some DB objects from restoration.\nRuns pg_restore using the local dump file.", "createdAt": "2020-04-28T21:34:23Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7922", "merged": true, "mergeCommit": {"oid": "3e2002341a4ccc1b736c3c7d5bc3e09d3ef7def9"}, "closed": true, "closedAt": "2020-05-14T13:58:06Z", "author": {"login": "brycederriso"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccKmbPgH2gAyNDEwMzczOTAzOjk3ZmQ0ZDI0NTE1MDRjOGRiNzdhMmY3ZGM2ZmFiMDFjZTU5OGFiY2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcglZHpgH2gAyNDEwMzczOTAzOjdlNzljM2E2NDVkMmM1OTU2ZWI4NWNlMzdiYjMwN2Y4OWM0YmI1Nzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/97fd4d2451504c8db77a2f7dc6fab01ce598abce", "committedDate": "2020-04-28T21:16:59Z", "message": "Add backup and restore scripts for DL postgres db."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjA5Mzcy", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#pullrequestreview-404209372", "createdAt": "2020-05-01T15:04:31Z", "commit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTowNDozMVrOGPMLpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTowNDozMVrOGPMLpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4MTQxMg==", "bodyText": "The date directory part of the backup location will be coming from the datalake DR service calls, since we need to sync that across the different backup types. So you don't need to generate it dynamically in the the scripts.", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418581412", "createdAt": "2020-05-01T15:04:31Z", "author": {"login": "hreeve-cloudera"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"\n+  echo \"  1. Cloud Provider (azure | aws)\"\n+  echo \"  2. PostgreSQL host name.\"\n+  echo \"  3. PostgreSQL port.\"\n+  echo \"  4. Object Storage Service url to place backups.\"\n+  echo \"  5. PostgreSQL user name.\"\n+  echo \"  6. PostgreSQL password.\"\n+  exit 1\n+fi\n+\n+CLOUD_PROVIDER=\"$1\"\n+HOST=\"$2\"\n+PORT=\"$3\"\n+BACKUP_LOCATION=\"$4\"\n+USERNAME=\"$5\"\n+export PGPASSWORD=\"$6\" # We can provide the password to pg_dump through this variable, or in ~/.pgpass\n+\n+BACKUP_DATE=$(date '+%Y-%m-%dT%H:%M:%SZ')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjEwNTM5", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#pullrequestreview-404210539", "createdAt": "2020-05-01T15:06:34Z", "commit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTowNjozNFrOGPMPIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTowNjozNFrOGPMPIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4MjMwNA==", "bodyText": "If you're exporting this, you might want to unset it at the end of the script. I don't actually think it'll live outside the script's context, but just in case.", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418582304", "createdAt": "2020-05-01T15:06:34Z", "author": {"login": "hreeve-cloudera"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"\n+  echo \"  1. Cloud Provider (azure | aws)\"\n+  echo \"  2. PostgreSQL host name.\"\n+  echo \"  3. PostgreSQL port.\"\n+  echo \"  4. Object Storage Service url to place backups.\"\n+  echo \"  5. PostgreSQL user name.\"\n+  echo \"  6. PostgreSQL password.\"\n+  exit 1\n+fi\n+\n+CLOUD_PROVIDER=\"$1\"\n+HOST=\"$2\"\n+PORT=\"$3\"\n+BACKUP_LOCATION=\"$4\"\n+USERNAME=\"$5\"\n+export PGPASSWORD=\"$6\" # We can provide the password to pg_dump through this variable, or in ~/.pgpass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjExMTUw", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#pullrequestreview-404211150", "createdAt": "2020-05-01T15:07:39Z", "commit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTowNzozOVrOGPMRAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTowNzozOVrOGPMRAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4Mjc4Ng==", "bodyText": "\"Script accepts six inputs:\"", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418582786", "createdAt": "2020-05-01T15:07:39Z", "author": {"login": "hreeve-cloudera"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjExMjY0", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#pullrequestreview-404211264", "createdAt": "2020-05-01T15:07:51Z", "commit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTowNzo1MlrOGPMRTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTowNzo1MlrOGPMRTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4Mjg2Mw==", "bodyText": "\"Script accepts six inputs:\"", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418582863", "createdAt": "2020-05-01T15:07:52Z", "author": {"login": "hreeve-cloudera"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/restore_db.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjU4MDY1", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#pullrequestreview-404258065", "createdAt": "2020-05-01T16:30:57Z", "commit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjozMDo1N1rOGPOj2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjozMDo1N1rOGPOj2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyMDM3OQ==", "bodyText": "If the S3 location is created here, How will the Caller provide an appropriate location for restore?", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418620379", "createdAt": "2020-05-01T16:30:57Z", "author": {"login": "kkalvagadda1"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"\n+  echo \"  1. Cloud Provider (azure | aws)\"\n+  echo \"  2. PostgreSQL host name.\"\n+  echo \"  3. PostgreSQL port.\"\n+  echo \"  4. Object Storage Service url to place backups.\"\n+  echo \"  5. PostgreSQL user name.\"\n+  echo \"  6. PostgreSQL password.\"\n+  exit 1\n+fi\n+\n+CLOUD_PROVIDER=\"$1\"\n+HOST=\"$2\"\n+PORT=\"$3\"\n+BACKUP_LOCATION=\"$4\"\n+USERNAME=\"$5\"\n+export PGPASSWORD=\"$6\" # We can provide the password to pg_dump through this variable, or in ~/.pgpass\n+\n+BACKUP_DATE=$(date '+%Y-%m-%dT%H:%M:%SZ')\n+LOGFILE=/var/log/dl_postgres_backup.log\n+\n+echo \"Logs at ${LOGFILE}\"\n+\n+doLog() {\n+  type_of_msg=$(echo $* | cut -d\" \" -f1)\n+  msg=$(echo \"$*\" | cut -d\" \" -f2-)\n+  [[ $type_of_msg == INFO ]] && type_of_msg=\"INFO \" # one space for aligning\n+  [[ $type_of_msg == WARN ]] && type_of_msg=\"WARN \" # as well\n+\n+  # print to the terminal if we have one\n+  test -t 1 && echo \"$(date \"+%Y-%m-%dT%H:%M:%SZ\") $type_of_msg \"\"$msg\"\n+  echo \"$(date \"+%Y-%m-%dT%H:%M:%SZ\") $type_of_msg \"\"$msg\" >>$LOGFILE\n+}\n+\n+errorExit() {\n+  doLog \"ERROR $1\"\n+  exit 1\n+}\n+\n+dump_to_azure() {\n+  SERVICE=\"$1\"\n+  doLog \"INFO Dumping ${SERVICE}\"\n+  LOCAL_BACKUP=${DATE_DIR}/${SERVICE}_backup\n+  pg_dump --host=\"$HOST\" --port=\"$PORT\" --username=\"$USERNAME\" --dbname=\"$SERVICE\" --format=custom --file=\"$LOCAL_BACKUP\" >>$LOGFILE 2>&1 || errorExit \"Unable to dump ${SERVICE}\"\n+\n+  doLog \"INFO Uploading to ${BACKUP_LOCATION}\"\n+  # todo: strip trailing slash from BACKUP_LOCATION if it's there\n+  AZURE_LOCATION=\"${BACKUP_LOCATION}/${BACKUP_DATE}/${SERVICE}_backup\"\n+  azcopy copy \"$LOCAL_BACKUP\" \"$AZURE_LOCATION\" >>$LOGFILE 2>&1 || errorExit \"Unable to upload $SERVICE backup\"\n+  doLog \"INFO Completed upload to ${BACKUP_LOCATION}\"\n+\n+  rm -v \"$LOCAL_BACKUP\" >>$LOGFILE 2>&1\n+\n+  doLog \"INFO ${SERVICE} dumped to \"\n+}\n+run_azure_backup () {\n+  BACKUPS_DIR=\"/var/tmp/\" # Is this appropriate for keeping backups that are staged before uploading to Azure Blob Storage?\n+  DATE_DIR=${BACKUPS_DIR}/${BACKUP_DATE}\n+  mkdir -p \"$DATE_DIR\" || error_exit \"Could not create local directory for backups.\"\n+\n+  azcopy login --identity || errorExit \"Could not login to Azure\"\n+  dump_to_azure \"hive\"\n+  dump_to_azure \"ranger\"\n+\n+  rmdir -v \"$DATE_DIR\" >>$LOGFILE 2>&1\n+}\n+\n+dump_to_s3() {\n+  SERVICE=$1\n+  # todo: strip trailing slash from BACKUP_LOCATION if it's there\n+  S3_LOCATION=\"${BACKUP_LOCATION}/${BACKUP_DATE}/${SERVICE}_backup\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjYxNDg5", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#pullrequestreview-404261489", "createdAt": "2020-05-01T16:37:10Z", "commit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjozNzoxMVrOGPOusg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjozNzoxMVrOGPOusg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyMzE1NA==", "bodyText": "Re-order the inputs to be in-order. Move Object store URL to the end so that all the database configurations will be together.", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418623154", "createdAt": "2020-05-01T16:37:11Z", "author": {"login": "kkalvagadda1"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"\n+  echo \"  1. Cloud Provider (azure | aws)\"\n+  echo \"  2. PostgreSQL host name.\"\n+  echo \"  3. PostgreSQL port.\"\n+  echo \"  4. Object Storage Service url to place backups.\"\n+  echo \"  5. PostgreSQL user name.\"\n+  echo \"  6. PostgreSQL password.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f848377bfe27543f74dae755d35bd5e00ba8398", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9f848377bfe27543f74dae755d35bd5e00ba8398", "committedDate": "2020-05-01T18:30:21Z", "message": "Rearrange script inputs. Correct inputs prompt."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "308802a0d11506617e888e620e57895cecbe9ccb", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/308802a0d11506617e888e620e57895cecbe9ccb", "committedDate": "2020-05-01T18:47:49Z", "message": "Remove intermediate Date folder in Cloud Object Storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecb82e19f858e1982de23273693dfe5f8500f17f", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ecb82e19f858e1982de23273693dfe5f8500f17f", "committedDate": "2020-05-04T12:58:28Z", "message": "Change number of expected script inputs to 5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d43cb7986796d3b459105b43011c4153167aaa91", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d43cb7986796d3b459105b43011c4153167aaa91", "committedDate": "2020-05-04T13:13:37Z", "message": "Remove BACKUP_DATE from pgsql backup usage."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b919811c59f9d0e99b463af48e9a377ef15beb91", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/b919811c59f9d0e99b463af48e9a377ef15beb91", "committedDate": "2020-05-04T13:14:29Z", "message": "Remove comment questioning backup staging location."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1da293df25e739262b0bf74b795d883b7d8f7f60", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/1da293df25e739262b0bf74b795d883b7d8f7f60", "committedDate": "2020-05-04T13:27:40Z", "message": "Remove trailing slash from cloud storage urls.\n\nURLs don't like doubling up on slashes, so I need to strip them, if\npresent, when receiving cloud backup locations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05cdbbe6d9d4524ed315f4eb3f6290c74a47ce8e", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/05cdbbe6d9d4524ed315f4eb3f6290c74a47ce8e", "committedDate": "2020-05-04T14:42:32Z", "message": "Add space to fix test command typo."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31e83c9c857ce0b8aad72fa85e396d2b8f64a964", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/31e83c9c857ce0b8aad72fa85e396d2b8f64a964", "committedDate": "2020-05-04T17:59:42Z", "message": "Fix bugs.\n\n* Fix argument order\n* Fix or to and for argument numbers.\n* Fix variable substitution errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef4b05ca2098405a7a64db4bff92b2514d3c45b9", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ef4b05ca2098405a7a64db4bff92b2514d3c45b9", "committedDate": "2020-05-04T18:41:35Z", "message": "Do a refactor of postgresql restore script."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "538769a89de7d6774c3f74dd08a52662a35c8b32", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/538769a89de7d6774c3f74dd08a52662a35c8b32", "committedDate": "2020-05-07T18:17:00Z", "message": "Use plain format from pg_dump.\n\n* Change `--format` to be plain.\n* Read backup sql into the `psql` cli tool."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a4484537b54884700151bb2871f6dac14f2b10f", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8a4484537b54884700151bb2871f6dac14f2b10f", "committedDate": "2020-05-07T19:02:04Z", "message": "Reformat drop+create statment to heredoc.\n\nAlso, tell psql to return an non-zero exit status if sql commands fail."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "083e2eaa5110c21796585b3cf33081a517937fbc", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/083e2eaa5110c21796585b3cf33081a517937fbc", "committedDate": "2020-05-07T19:51:33Z", "message": "Remove dead comment about splitting psql commands"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d09d266742261a0fd6ba34df0fa172f04119b1a3", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d09d266742261a0fd6ba34df0fa172f04119b1a3", "committedDate": "2020-05-08T17:29:19Z", "message": "Update postgres backup/restore scripts."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MDk2MjM2", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#pullrequestreview-409096236", "createdAt": "2020-05-11T11:44:05Z", "commit": {"oid": "d09d266742261a0fd6ba34df0fa172f04119b1a3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTA0OTcw", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#pullrequestreview-409104970", "createdAt": "2020-05-11T11:58:40Z", "commit": {"oid": "d09d266742261a0fd6ba34df0fa172f04119b1a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTo1ODo0MFrOGTZIww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTo1ODo0MFrOGTZIww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4Nzk3MQ==", "bodyText": "I would not export the password as it will be part of the logs. In Salt we can simply pass passwords to the script without exposing it. Example: \n  \n    \n      cloudbreak/freeipa/src/main/resources/freeipa-salt/salt/freeipa/common-install.sls\n    \n    \n         Line 5\n      in\n      bb5ebdf\n    \n    \n    \n    \n\n        \n          \n           - FPW: {{salt['pillar.get']('freeipa:password')}}", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r422987971", "createdAt": "2020-05-11T11:58:40Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,96 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 5 ] && [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts 5 inputs:\"\n+  echo \"  1. Cloud Provider (azure | aws)\"\n+  echo \"  2. Object Storage Service url to retrieve backups.\"\n+  echo \"  3. PostgreSQL host name.\"\n+  echo \"  4. PostgreSQL port.\"\n+  echo \"  5. PostgreSQL user name.\"\n+  echo\n+  echo \"  Optional: PostgreSQL password.\"\n+  exit 1\n+fi\n+\n+CLOUD_PROVIDER=\"$1\"\n+BACKUP_LOCATION=$(echo \"$2\"| sed 's/\\/\\+$//g') # Clear trailng '/' (if present) for later path joining.\n+HOST=\"$3\"\n+PORT=\"$4\"\n+USERNAME=\"$5\"\n+export PGPASSWORD=\"$6\" # We can provide the password to pg_dump through this variable, or in ~/.pgpass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d09d266742261a0fd6ba34df0fa172f04119b1a3"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41c1ea6027fdb7d2e13e08f649af98edce066c26", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/41c1ea6027fdb7d2e13e08f649af98edce066c26", "committedDate": "2020-05-11T20:57:49Z", "message": "Add header comments. Fix some spacing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e79c3a645d2c5956eb85ce37bb307f89c4bb577", "author": {"user": {"login": "brycederriso", "name": "Bryce"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/7e79c3a645d2c5956eb85ce37bb307f89c4bb577", "committedDate": "2020-05-12T14:45:35Z", "message": "Remove optinal PGPASSWORD export from postgresql backup/restore scripts."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2264, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}