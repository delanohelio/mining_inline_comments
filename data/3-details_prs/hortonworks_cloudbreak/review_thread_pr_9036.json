{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MTM4NzY5", "number": 9036, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjoxNTowNFrOEl75qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjoxNTowNFrOEl75qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjE0MTg2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/sequenceiq/cloudbreak/certificate/PkiUtil.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjoxNTowNFrOHVrc8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjoyNjozNVrOHVrsKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NDA2NA==", "bodyText": "little bit looks weird. The map is static final but modifies the content of the map. Why is it static final?", "url": "https://github.com/hortonworks/cloudbreak/pull/9036#discussion_r492494064", "createdAt": "2020-09-22T06:15:04Z", "author": {"login": "topolyai5"}, "path": "common/src/main/java/com/sequenceiq/cloudbreak/certificate/PkiUtil.java", "diffHunk": "@@ -118,15 +137,22 @@ public static String generateSignature(String privateKeyPem, byte[] data) {\n                 RSAPrivateKeySpec privKeySpec = factory.getKeySpec(kp.getPrivate(), RSAPrivateKeySpec.class);\n                 rsaKeyParameters = new RSAKeyParameters(true, privKeySpec.getModulus(), privKeySpec.getPrivateExponent());\n \n-                CACHE.put(privateKeyPem, rsaKeyParameters);\n+                RSA_KEY_PARAMS_CACHE.put(privateKeyPem, rsaKeyParameters);\n             } catch (NoSuchAlgorithmException | IOException | InvalidKeySpecException e) {\n                 throw new SecurityException(e);\n             }\n         }\n \n-        Signer signer = new PSSSigner(new RSAEngine(), new SHA256Digest(), SALT_LENGTH);\n-        signer.init(true, rsaKeyParameters);\n-        signer.update(data, 0, data.length);\n+        Signer signer = PSS_SIGNER_CACHE.get(rsaKeyParameters);\n+\n+        if (signer == null) {\n+            signer = new PSSSigner(new RSAEngine(), new SHA256Digest(), SALT_LENGTH);\n+            signer.init(true, rsaKeyParameters);\n+            signer.update(data, 0, data.length);\n+\n+            PSS_SIGNER_CACHE.put(rsaKeyParameters, signer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "854f02cd5fdedb7976660328f269d7ace57df790"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NTk5NQ==", "bodyText": "the reference is final and I can initialize it in static initializer block", "url": "https://github.com/hortonworks/cloudbreak/pull/9036#discussion_r492495995", "createdAt": "2020-09-22T06:20:41Z", "author": {"login": "sodre90"}, "path": "common/src/main/java/com/sequenceiq/cloudbreak/certificate/PkiUtil.java", "diffHunk": "@@ -118,15 +137,22 @@ public static String generateSignature(String privateKeyPem, byte[] data) {\n                 RSAPrivateKeySpec privKeySpec = factory.getKeySpec(kp.getPrivate(), RSAPrivateKeySpec.class);\n                 rsaKeyParameters = new RSAKeyParameters(true, privKeySpec.getModulus(), privKeySpec.getPrivateExponent());\n \n-                CACHE.put(privateKeyPem, rsaKeyParameters);\n+                RSA_KEY_PARAMS_CACHE.put(privateKeyPem, rsaKeyParameters);\n             } catch (NoSuchAlgorithmException | IOException | InvalidKeySpecException e) {\n                 throw new SecurityException(e);\n             }\n         }\n \n-        Signer signer = new PSSSigner(new RSAEngine(), new SHA256Digest(), SALT_LENGTH);\n-        signer.init(true, rsaKeyParameters);\n-        signer.update(data, 0, data.length);\n+        Signer signer = PSS_SIGNER_CACHE.get(rsaKeyParameters);\n+\n+        if (signer == null) {\n+            signer = new PSSSigner(new RSAEngine(), new SHA256Digest(), SALT_LENGTH);\n+            signer.init(true, rsaKeyParameters);\n+            signer.update(data, 0, data.length);\n+\n+            PSS_SIGNER_CACHE.put(rsaKeyParameters, signer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NDA2NA=="}, "originalCommit": {"oid": "854f02cd5fdedb7976660328f269d7ace57df790"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NjQ5NA==", "bodyText": "I understand that, but why do you create the map as static final?", "url": "https://github.com/hortonworks/cloudbreak/pull/9036#discussion_r492496494", "createdAt": "2020-09-22T06:22:16Z", "author": {"login": "topolyai5"}, "path": "common/src/main/java/com/sequenceiq/cloudbreak/certificate/PkiUtil.java", "diffHunk": "@@ -118,15 +137,22 @@ public static String generateSignature(String privateKeyPem, byte[] data) {\n                 RSAPrivateKeySpec privKeySpec = factory.getKeySpec(kp.getPrivate(), RSAPrivateKeySpec.class);\n                 rsaKeyParameters = new RSAKeyParameters(true, privKeySpec.getModulus(), privKeySpec.getPrivateExponent());\n \n-                CACHE.put(privateKeyPem, rsaKeyParameters);\n+                RSA_KEY_PARAMS_CACHE.put(privateKeyPem, rsaKeyParameters);\n             } catch (NoSuchAlgorithmException | IOException | InvalidKeySpecException e) {\n                 throw new SecurityException(e);\n             }\n         }\n \n-        Signer signer = new PSSSigner(new RSAEngine(), new SHA256Digest(), SALT_LENGTH);\n-        signer.init(true, rsaKeyParameters);\n-        signer.update(data, 0, data.length);\n+        Signer signer = PSS_SIGNER_CACHE.get(rsaKeyParameters);\n+\n+        if (signer == null) {\n+            signer = new PSSSigner(new RSAEngine(), new SHA256Digest(), SALT_LENGTH);\n+            signer.init(true, rsaKeyParameters);\n+            signer.update(data, 0, data.length);\n+\n+            PSS_SIGNER_CACHE.put(rsaKeyParameters, signer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NDA2NA=="}, "originalCommit": {"oid": "854f02cd5fdedb7976660328f269d7ace57df790"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5Nzk2Mw==", "bodyText": "because if it is not static then I can not initialize it in static block\nIt is static because I wanted one instance per JVM\nI followed the previous CACHE solution :)", "url": "https://github.com/hortonworks/cloudbreak/pull/9036#discussion_r492497963", "createdAt": "2020-09-22T06:26:35Z", "author": {"login": "sodre90"}, "path": "common/src/main/java/com/sequenceiq/cloudbreak/certificate/PkiUtil.java", "diffHunk": "@@ -118,15 +137,22 @@ public static String generateSignature(String privateKeyPem, byte[] data) {\n                 RSAPrivateKeySpec privKeySpec = factory.getKeySpec(kp.getPrivate(), RSAPrivateKeySpec.class);\n                 rsaKeyParameters = new RSAKeyParameters(true, privKeySpec.getModulus(), privKeySpec.getPrivateExponent());\n \n-                CACHE.put(privateKeyPem, rsaKeyParameters);\n+                RSA_KEY_PARAMS_CACHE.put(privateKeyPem, rsaKeyParameters);\n             } catch (NoSuchAlgorithmException | IOException | InvalidKeySpecException e) {\n                 throw new SecurityException(e);\n             }\n         }\n \n-        Signer signer = new PSSSigner(new RSAEngine(), new SHA256Digest(), SALT_LENGTH);\n-        signer.init(true, rsaKeyParameters);\n-        signer.update(data, 0, data.length);\n+        Signer signer = PSS_SIGNER_CACHE.get(rsaKeyParameters);\n+\n+        if (signer == null) {\n+            signer = new PSSSigner(new RSAEngine(), new SHA256Digest(), SALT_LENGTH);\n+            signer.init(true, rsaKeyParameters);\n+            signer.update(data, 0, data.length);\n+\n+            PSS_SIGNER_CACHE.put(rsaKeyParameters, signer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NDA2NA=="}, "originalCommit": {"oid": "854f02cd5fdedb7976660328f269d7ace57df790"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2297, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}