{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2ODY1MzEz", "number": 7547, "title": "CB-6035: FMS should relogin on failures", "bodyText": "This change adds an automatic retry on the FreeIpaClientFactory\ngetFreeIpaClient* methods.  These methods perform a login.\nManually verified by blocking http/https ports.  This is necessary\nin FreeIPA HA environments where there might be a failover and\nthe client should retry.", "createdAt": "2020-03-11T18:56:23Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7547", "merged": true, "mergeCommit": {"oid": "fc6106fd3014918669aa5ab19ec4f56e0d527072"}, "closed": true, "closedAt": "2020-03-24T14:01:13Z", "author": {"login": "holleyism"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM2O4VABqjMxMjE2MzE0NjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQuo2DgFqTM4MDA4Nzk4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3dcde211417b01437ef4ca8e7e86fc679d32533a", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3dcde211417b01437ef4ca8e7e86fc679d32533a", "committedDate": "2020-03-11T18:36:04Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds an automatic retry on the FreeIpaClientFactory\ngetFreeIpaClient* methods.  These methods perform a login.\nManually verified by blocking http/https ports."}, "afterCommit": {"oid": "5bb042f8aa0078c9921d338d072541cbfab70755", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/5bb042f8aa0078c9921d338d072541cbfab70755", "committedDate": "2020-03-12T06:56:19Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNDg0Mzg2", "url": "https://github.com/hortonworks/cloudbreak/pull/7547#pullrequestreview-373484386", "createdAt": "2020-03-12T11:44:21Z", "commit": {"oid": "5bb042f8aa0078c9921d338d072541cbfab70755"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMTo1MzowMlrOF1bhKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMjowMDowMFrOF1btuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU2OTcwNA==", "bodyText": "line 124-128 is repeated from 91-98. Should it be a function? See FreeIpaClientExceptionUtils.java for similar functions.", "url": "https://github.com/hortonworks/cloudbreak/pull/7547#discussion_r391569704", "createdAt": "2020-03-12T11:53:02Z", "author": {"login": "jamisonbennett"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "diffHunk": "@@ -97,11 +114,25 @@ public FreeIpaClient getFreeIpaClientForStackWithPing(Stack stack) throws Except\n                 if (clusterProxyService.isCreateConfigForClusterProxy(stack)) {\n                     return getFreeIpaClientBuilderForClusterProxy(stack).buildWithPing();\n                 } else {\n-                    return getFreeIpaClientBuilder(stack).buildWithPing();\n+                    Exception lastException = new FreeIpaClientException(\"No instances exist in the stack.\");\n+                    for (InstanceMetaData instanceMetaData: stack.getInstanceGroups().stream().flatMap(\n+                            instanceGroup -> instanceGroup.getInstanceMetaData().stream()).collect(Collectors.toList())) {\n+                        try {\n+                            return getFreeIpaClientBuilder(stack, instanceMetaData).buildWithPing();\n+                        } catch (FreeIpaClientException | IOException e) {\n+                            lastException = e;\n+                            if (e instanceof FreeIpaClientException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb042f8aa0078c9921d338d072541cbfab70755"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU3MjkyMQ==", "bodyText": "I think the statusCode should be OptionalInt since its not always present.", "url": "https://github.com/hortonworks/cloudbreak/pull/7547#discussion_r391572921", "createdAt": "2020-03-12T12:00:00Z", "author": {"login": "jamisonbennett"}, "path": "freeipa-client/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientException.java", "diffHunk": "@@ -1,19 +1,25 @@\n package com.sequenceiq.freeipa.client;\n \n public class FreeIpaClientException extends Exception {\n+\n+    private final int statusCode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb042f8aa0078c9921d338d072541cbfab70755"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5bb042f8aa0078c9921d338d072541cbfab70755", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/5bb042f8aa0078c9921d338d072541cbfab70755", "committedDate": "2020-03-12T06:56:19Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}, "afterCommit": {"oid": "35cbb5b1bc155aa78eef11177edbe4aedf76b636", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/35cbb5b1bc155aa78eef11177edbe4aedf76b636", "committedDate": "2020-03-12T19:50:25Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "35cbb5b1bc155aa78eef11177edbe4aedf76b636", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/35cbb5b1bc155aa78eef11177edbe4aedf76b636", "committedDate": "2020-03-12T19:50:25Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}, "afterCommit": {"oid": "51eefdf4e7ac980d95ea2b6a4ac7fadde86047fd", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/51eefdf4e7ac980d95ea2b6a4ac7fadde86047fd", "committedDate": "2020-03-13T01:47:25Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MTEzNTkx", "url": "https://github.com/hortonworks/cloudbreak/pull/7547#pullrequestreview-375113591", "createdAt": "2020-03-16T11:12:39Z", "commit": {"oid": "51eefdf4e7ac980d95ea2b6a4ac7fadde86047fd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMToxMjo0MFrOF2vaEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMTozMDozMlrOF2v2-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0NDE0Nw==", "bodyText": "I don't think this response.getStatusLine().getStatusCode() is necessary", "url": "https://github.com/hortonworks/cloudbreak/pull/7547#discussion_r392944147", "createdAt": "2020-03-16T11:12:40Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientBuilder.java", "diffHunk": "@@ -193,21 +187,14 @@ private String connect(String user, String pass, String apiAddress, int port)\n                 throw new FreeIpaClientException(String.format(\"Encountered unexpected response from \"\n                         + \"FreeIPA; details:%n%n\"\n                         + \"code: %s%n\"\n-                        + \"headers: %s\", response.getStatusLine().getStatusCode(), response.getAllHeaders()));\n+                        + \"headers: %s\", response.getStatusLine().getStatusCode(), response.getAllHeaders()),\n+                        response.getStatusLine().getStatusCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51eefdf4e7ac980d95ea2b6a4ac7fadde86047fd"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0NDk1Nw==", "bodyText": "if we get stack here instead of id we can omit the gw port from parameters as it's in the stack already", "url": "https://github.com/hortonworks/cloudbreak/pull/7547#discussion_r392944957", "createdAt": "2020-03-16T11:15:07Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/TlsSecurityService.java", "diffHunk": "@@ -103,9 +103,8 @@ private void generateSaltPassword(SaltSecurityConfig saltSecurityConfig) {\n         saltSecurityConfig.setSaltPasswordVault(saltPassword);\n     }\n \n-    public GatewayConfig buildGatewayConfig(Long stackId, InstanceMetaData gatewayInstance, Integer gatewayPort,\n+    public GatewayConfig buildGatewayConfig(Stack stack, InstanceMetaData gatewayInstance, Integer gatewayPort,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51eefdf4e7ac980d95ea2b6a4ac7fadde86047fd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0NzYxNw==", "bodyText": "this wouldn't be necessary if there is 2 catch for the 2 exception", "url": "https://github.com/hortonworks/cloudbreak/pull/7547#discussion_r392947617", "createdAt": "2020-03-16T11:22:46Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "diffHunk": "@@ -70,42 +73,48 @@ private String toClusterProxyBasepath(String freeIpaClusterCrn) {\n         return String.format(\"%s%s\", clusterProxyService.getProxyPath(freeIpaClusterCrn), FreeIpaClientBuilder.DEFAULT_BASE_PATH);\n     }\n \n-    public FreeIpaClient getFreeIpaClientForStack(Stack stack) throws FreeIpaClientException {\n-        LOGGER.debug(\"Creating FreeIpaClient for stack {}\", stack.getResourceCrn());\n+    private FreeIpaClient getFreeIpaClient(Stack stack, boolean withPing) throws FreeIpaClientException {\n+        stack = stackService.getByIdWithListsInTransaction(stack.getId());\n         Status stackStatus = stack.getStackStatus().getStatus();\n         if (!stackStatus.isFreeIpaUnreachableStatus()) {\n             try {\n                 if (clusterProxyService.isCreateConfigForClusterProxy(stack)) {\n-                    return getFreeIpaClientBuilderForClusterProxy(stack).build();\n+                    return getFreeIpaClientBuilderForClusterProxy(stack).build(withPing);\n                 } else {\n-                    return getFreeIpaClientBuilder(stack).build();\n+                    Exception lastException = new FreeIpaClientException(\"No instances exist in the stack.\");\n+                    for (InstanceMetaData instanceMetaData: stack.getInstanceGroups().stream().flatMap(\n+                            instanceGroup -> instanceGroup.getInstanceMetaData().stream()).collect(Collectors.toList())) {\n+                        try {\n+                            return getFreeIpaClientBuilder(stack, instanceMetaData).build(withPing);\n+                        } catch (FreeIpaClientException | IOException e) {\n+                            lastException = e;\n+                            if (e instanceof FreeIpaClientException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51eefdf4e7ac980d95ea2b6a4ac7fadde86047fd"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1MDE2Nw==", "bodyText": "please move out the stream into a variable and/or to a method", "url": "https://github.com/hortonworks/cloudbreak/pull/7547#discussion_r392950167", "createdAt": "2020-03-16T11:27:49Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "diffHunk": "@@ -70,42 +73,48 @@ private String toClusterProxyBasepath(String freeIpaClusterCrn) {\n         return String.format(\"%s%s\", clusterProxyService.getProxyPath(freeIpaClusterCrn), FreeIpaClientBuilder.DEFAULT_BASE_PATH);\n     }\n \n-    public FreeIpaClient getFreeIpaClientForStack(Stack stack) throws FreeIpaClientException {\n-        LOGGER.debug(\"Creating FreeIpaClient for stack {}\", stack.getResourceCrn());\n+    private FreeIpaClient getFreeIpaClient(Stack stack, boolean withPing) throws FreeIpaClientException {\n+        stack = stackService.getByIdWithListsInTransaction(stack.getId());\n         Status stackStatus = stack.getStackStatus().getStatus();\n         if (!stackStatus.isFreeIpaUnreachableStatus()) {\n             try {\n                 if (clusterProxyService.isCreateConfigForClusterProxy(stack)) {\n-                    return getFreeIpaClientBuilderForClusterProxy(stack).build();\n+                    return getFreeIpaClientBuilderForClusterProxy(stack).build(withPing);\n                 } else {\n-                    return getFreeIpaClientBuilder(stack).build();\n+                    Exception lastException = new FreeIpaClientException(\"No instances exist in the stack.\");\n+                    for (InstanceMetaData instanceMetaData: stack.getInstanceGroups().stream().flatMap(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51eefdf4e7ac980d95ea2b6a4ac7fadde86047fd"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1MTU0Ng==", "bodyText": "this exception driven logic and return inside the for loop makes the code hard to read.\nI think it would be more readable if you do something like have an Optional<FreeIpaClient> client = Optional.empty() and iterate through the instances while it's empty and you have more instances. In the end you could return with the client or throw an exception", "url": "https://github.com/hortonworks/cloudbreak/pull/7547#discussion_r392951546", "createdAt": "2020-03-16T11:30:32Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "diffHunk": "@@ -70,42 +73,48 @@ private String toClusterProxyBasepath(String freeIpaClusterCrn) {\n         return String.format(\"%s%s\", clusterProxyService.getProxyPath(freeIpaClusterCrn), FreeIpaClientBuilder.DEFAULT_BASE_PATH);\n     }\n \n-    public FreeIpaClient getFreeIpaClientForStack(Stack stack) throws FreeIpaClientException {\n-        LOGGER.debug(\"Creating FreeIpaClient for stack {}\", stack.getResourceCrn());\n+    private FreeIpaClient getFreeIpaClient(Stack stack, boolean withPing) throws FreeIpaClientException {\n+        stack = stackService.getByIdWithListsInTransaction(stack.getId());\n         Status stackStatus = stack.getStackStatus().getStatus();\n         if (!stackStatus.isFreeIpaUnreachableStatus()) {\n             try {\n                 if (clusterProxyService.isCreateConfigForClusterProxy(stack)) {\n-                    return getFreeIpaClientBuilderForClusterProxy(stack).build();\n+                    return getFreeIpaClientBuilderForClusterProxy(stack).build(withPing);\n                 } else {\n-                    return getFreeIpaClientBuilder(stack).build();\n+                    Exception lastException = new FreeIpaClientException(\"No instances exist in the stack.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51eefdf4e7ac980d95ea2b6a4ac7fadde86047fd"}, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51eefdf4e7ac980d95ea2b6a4ac7fadde86047fd", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/51eefdf4e7ac980d95ea2b6a4ac7fadde86047fd", "committedDate": "2020-03-13T01:47:25Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}, "afterCommit": {"oid": "78a17bd5e99ad5a357c4a232ac9e210e461e120a", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/78a17bd5e99ad5a357c4a232ac9e210e461e120a", "committedDate": "2020-03-16T17:29:17Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78a17bd5e99ad5a357c4a232ac9e210e461e120a", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/78a17bd5e99ad5a357c4a232ac9e210e461e120a", "committedDate": "2020-03-16T17:29:17Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}, "afterCommit": {"oid": "dfe4656d226c585b2bc338c04cfc3764a2c7467a", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/dfe4656d226c585b2bc338c04cfc3764a2c7467a", "committedDate": "2020-03-16T18:20:30Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dfe4656d226c585b2bc338c04cfc3764a2c7467a", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/dfe4656d226c585b2bc338c04cfc3764a2c7467a", "committedDate": "2020-03-16T18:20:30Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}, "afterCommit": {"oid": "9d8ee503a3cbafcd41ca0a3a6ed0e48b2193a65a", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9d8ee503a3cbafcd41ca0a3a6ed0e48b2193a65a", "committedDate": "2020-03-19T18:41:29Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d8ee503a3cbafcd41ca0a3a6ed0e48b2193a65a", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9d8ee503a3cbafcd41ca0a3a6ed0e48b2193a65a", "committedDate": "2020-03-19T18:41:29Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect."}, "afterCommit": {"oid": "eb83897f52d65a798fd994ce9847ea7a792dae80", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/eb83897f52d65a798fd994ce9847ea7a792dae80", "committedDate": "2020-03-20T19:32:00Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect.\n\nCo-authored-by: Jamison Bennett <jamison.bennnett@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb83897f52d65a798fd994ce9847ea7a792dae80", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/eb83897f52d65a798fd994ce9847ea7a792dae80", "committedDate": "2020-03-20T19:32:00Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect.\n\nCo-authored-by: Jamison Bennett <jamison.bennnett@gmail.com>"}, "afterCommit": {"oid": "d4951328aefac081af353fd358e7b5426cf58f53", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d4951328aefac081af353fd358e7b5426cf58f53", "committedDate": "2020-03-20T20:03:13Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect.\n\nCo-authored-by: Jamison Bennett <jamison.bennnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "780d505d179b0c0b6b979b9cf1678b823bc3f537", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/780d505d179b0c0b6b979b9cf1678b823bc3f537", "committedDate": "2020-03-24T08:27:23Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect.\n\nCo-authored-by: Jamison Bennett <jamison.bennnett@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4951328aefac081af353fd358e7b5426cf58f53", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d4951328aefac081af353fd358e7b5426cf58f53", "committedDate": "2020-03-20T20:03:13Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect.\n\nCo-authored-by: Jamison Bennett <jamison.bennnett@gmail.com>"}, "afterCommit": {"oid": "780d505d179b0c0b6b979b9cf1678b823bc3f537", "author": {"user": {"login": "holleyism", "name": "Adam Holley"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/780d505d179b0c0b6b979b9cf1678b823bc3f537", "committedDate": "2020-03-24T08:27:23Z", "message": "CB-6035: FMS should relogin on failures\n\nThis change adds goes through all instances in the\nstack when trying to get a FreeIPA client unless the\nloging is incorrect.\n\nCo-authored-by: Jamison Bennett <jamison.bennnett@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDg3OTg5", "url": "https://github.com/hortonworks/cloudbreak/pull/7547#pullrequestreview-380087989", "createdAt": "2020-03-24T08:29:07Z", "commit": {"oid": "780d505d179b0c0b6b979b9cf1678b823bc3f537"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2425, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}