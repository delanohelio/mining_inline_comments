{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTgyMTU0", "number": 9027, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoxNzoyN1rOEk6B5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDozMDozN1rOEk6TwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTM0OTUxOnYy", "diffSide": "RIGHT", "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoxNzoyN1rOHUG-GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjo1OTozOVrOHUVAWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0Nzc2OA==", "bodyText": "bit strange that the variable name is different from the value. would this mean CDP_CM_ADMIN_CREDENTIALS has the right to use/create custom templates?", "url": "https://github.com/hortonworks/cloudbreak/pull/9027#discussion_r490847768", "createdAt": "2020-09-18T10:17:27Z", "author": {"login": "lacikaaa"}, "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -210,6 +212,9 @@\n \n     private static final String CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE = \"CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE\";\n \n+    // See com.cloudera.thunderhead.service.common.entitlements.CdpEntitlements.CDP_CP_CUSTOM_DL_TEMPLATE\n+    private static final String CDP_CP_CUSTOM_DL_TEMPLATE = \"CDP_CM_ADMIN_CREDENTIALS\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9ce7f08e41a32905ce918bd385d3675c096870d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1NTk1Mg==", "bodyText": "Yes. The name is indeed totally confusing. I am not sure what the originally intended name was supposed to be, but wanted to keep the thunderhead constant name here for \"consistency\". For reference, the check in DatalakeApi svc is made here.", "url": "https://github.com/hortonworks/cloudbreak/pull/9027#discussion_r490855952", "createdAt": "2020-09-18T10:33:52Z", "author": {"login": "lajosrodek"}, "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -210,6 +212,9 @@\n \n     private static final String CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE = \"CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE\";\n \n+    // See com.cloudera.thunderhead.service.common.entitlements.CdpEntitlements.CDP_CP_CUSTOM_DL_TEMPLATE\n+    private static final String CDP_CP_CUSTOM_DL_TEMPLATE = \"CDP_CM_ADMIN_CREDENTIALS\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0Nzc2OA=="}, "originalCommit": {"oid": "b9ce7f08e41a32905ce918bd385d3675c096870d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkxNjYzNg==", "bodyText": "Shall I rather rename the constant to match the actual entitlement name?", "url": "https://github.com/hortonworks/cloudbreak/pull/9027#discussion_r490916636", "createdAt": "2020-09-18T12:32:38Z", "author": {"login": "lajosrodek"}, "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -210,6 +212,9 @@\n \n     private static final String CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE = \"CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE\";\n \n+    // See com.cloudera.thunderhead.service.common.entitlements.CdpEntitlements.CDP_CP_CUSTOM_DL_TEMPLATE\n+    private static final String CDP_CP_CUSTOM_DL_TEMPLATE = \"CDP_CM_ADMIN_CREDENTIALS\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0Nzc2OA=="}, "originalCommit": {"oid": "b9ce7f08e41a32905ce918bd385d3675c096870d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAzMTc0NA==", "bodyText": "I'm  fine with it, it just seemed interesting and could indicate some error. but @keyki should check this", "url": "https://github.com/hortonworks/cloudbreak/pull/9027#discussion_r491031744", "createdAt": "2020-09-18T15:37:03Z", "author": {"login": "lacikaaa"}, "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -210,6 +212,9 @@\n \n     private static final String CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE = \"CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE\";\n \n+    // See com.cloudera.thunderhead.service.common.entitlements.CdpEntitlements.CDP_CP_CUSTOM_DL_TEMPLATE\n+    private static final String CDP_CP_CUSTOM_DL_TEMPLATE = \"CDP_CM_ADMIN_CREDENTIALS\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0Nzc2OA=="}, "originalCommit": {"oid": "b9ce7f08e41a32905ce918bd385d3675c096870d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA0MDQxOQ==", "bodyText": "It's fine with me. If we would rename it to CDP_CM_ADMIN_CREDENTIALS probably it would be totally misleading what is it supposed to guard. But, indeed I'm not sure what this entitlement supposed to do.  Seems like a bad copy-paste error: https://github.infra.cloudera.com/thunderhead/thunderhead/blob/4cf3cae30759e47df352b2b41bc8b9c30b2c43b8/services/libs/common/src/main/java/com/cloudera/thunderhead/service/common/entitlements/CdpEntitlements.java#L510.", "url": "https://github.com/hortonworks/cloudbreak/pull/9027#discussion_r491040419", "createdAt": "2020-09-18T15:51:40Z", "author": {"login": "keyki"}, "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -210,6 +212,9 @@\n \n     private static final String CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE = \"CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE\";\n \n+    // See com.cloudera.thunderhead.service.common.entitlements.CdpEntitlements.CDP_CP_CUSTOM_DL_TEMPLATE\n+    private static final String CDP_CP_CUSTOM_DL_TEMPLATE = \"CDP_CM_ADMIN_CREDENTIALS\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0Nzc2OA=="}, "originalCommit": {"oid": "b9ce7f08e41a32905ce918bd385d3675c096870d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA3NzcyMg==", "bodyText": "Yeah. I fear it is too late to \"rename\" the entitlement as it might be already in use in several tenants. \ud83d\ude03", "url": "https://github.com/hortonworks/cloudbreak/pull/9027#discussion_r491077722", "createdAt": "2020-09-18T16:59:39Z", "author": {"login": "lajosrodek"}, "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -210,6 +212,9 @@\n \n     private static final String CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE = \"CDP_ALLOW_INTERNAL_REPOSITORY_FOR_UPGRADE\";\n \n+    // See com.cloudera.thunderhead.service.common.entitlements.CdpEntitlements.CDP_CP_CUSTOM_DL_TEMPLATE\n+    private static final String CDP_CP_CUSTOM_DL_TEMPLATE = \"CDP_CM_ADMIN_CREDENTIALS\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0Nzc2OA=="}, "originalCommit": {"oid": "b9ce7f08e41a32905ce918bd385d3675c096870d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTM5MDU5OnYy", "diffSide": "RIGHT", "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoyOTowOFrOHUHWFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMjozMTo0MlrOHULJXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1MzkwOQ==", "bodyText": "is this ok to using a fixed external name here?", "url": "https://github.com/hortonworks/cloudbreak/pull/9027#discussion_r490853909", "createdAt": "2020-09-18T10:29:08Z", "author": {"login": "doktoric"}, "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -590,7 +595,10 @@ public void getAccount(GetAccountRequest request, StreamObserver<GetAccountRespo\n                                 .addEntitlements(createEntitlement(DATAHUB_AZURE_AUTOSCALING))\n                                 .addEntitlements(createEntitlement(DATAHUB_AWS_AUTOSCALING))\n                                 .addEntitlements(createEntitlement(LOCAL_DEV))\n+                                .addEntitlements(createEntitlement(CDP_CP_CUSTOM_DL_TEMPLATE))\n                                 .setPasswordPolicy(workloadPasswordPolicy)\n+                                .setAccountId(request.getAccountId())\n+                                .setExternalAccountId(\"external-\" + request.getAccountId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9ce7f08e41a32905ce918bd385d3675c096870d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkxNjE5MA==", "bodyText": "Honestly I do not know what this is supposed to be like. For most of the real UMS tenants, the externalAccountId is derived from the corresponding SalesForce (SFDC) account ID. For instance, mow-dev (accountId=9d74eee4-1cad-45d7-b645-7ccf9edbb73d) has externalAccountId=0018000000ik5epAAA. As far as I can tell, the 001 is a fixed prefix, while the last 3 characters are a sort-of checksum calculated from the rest of the string.\nThe relevant code in DatalakeApi svc making the check is located here. The underlying implementation currently only asserts that the account response contains both accountId and externalAccountId and they are non-empty.\nI could find a Java implementation for the calculation logic of \"real\" externalAccountId's based on the SFDC ID in thunderhead (SFDCUtils.java and SFDC.java), but did not feel it justified to duplicate the same behavior here until it is crucial. What is your preference?", "url": "https://github.com/hortonworks/cloudbreak/pull/9027#discussion_r490916190", "createdAt": "2020-09-18T12:31:42Z", "author": {"login": "lajosrodek"}, "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -590,7 +595,10 @@ public void getAccount(GetAccountRequest request, StreamObserver<GetAccountRespo\n                                 .addEntitlements(createEntitlement(DATAHUB_AZURE_AUTOSCALING))\n                                 .addEntitlements(createEntitlement(DATAHUB_AWS_AUTOSCALING))\n                                 .addEntitlements(createEntitlement(LOCAL_DEV))\n+                                .addEntitlements(createEntitlement(CDP_CP_CUSTOM_DL_TEMPLATE))\n                                 .setPasswordPolicy(workloadPasswordPolicy)\n+                                .setAccountId(request.getAccountId())\n+                                .setExternalAccountId(\"external-\" + request.getAccountId())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1MzkwOQ=="}, "originalCommit": {"oid": "b9ce7f08e41a32905ce918bd385d3675c096870d"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTM5NTIwOnYy", "diffSide": "RIGHT", "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDozMDozN1rOHUHY3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMjozODozMlrOHULXDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1NDYyMA==", "bodyText": "the import order in your intellij is somehow different that ours please check", "url": "https://github.com/hortonworks/cloudbreak/pull/9027#discussion_r490854620", "createdAt": "2020-09-18T10:30:37Z", "author": {"login": "doktoric"}, "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -85,10 +85,12 @@\n import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListMachineUsersResponse;\n import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListResourceAssigneesRequest;\n import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListResourceAssigneesResponse;\n-import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListServicePrincipalCloudIdentitiesRequest;\n-import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListServicePrincipalCloudIdentitiesResponse;\n import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListRolesRequest;\n import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListRolesResponse;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListServicePrincipalCloudIdentitiesRequest;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9ce7f08e41a32905ce918bd385d3675c096870d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkxOTY5Mg==", "bodyText": "Pardon me but my ordering seems alright. All the imports are now in the correct lexicographical order. Why would ListServicePrincipalCloudIdentitiesResponse come before ListRolesRequest? Same below, com.sequenceiq.thunderhead.* seems to be greater than com.sequenceiq.cloudbreak.*, so the former ones shall probably come later in the import list. Could you please clarify what this should look like?", "url": "https://github.com/hortonworks/cloudbreak/pull/9027#discussion_r490919692", "createdAt": "2020-09-18T12:38:32Z", "author": {"login": "lajosrodek"}, "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -85,10 +85,12 @@\n import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListMachineUsersResponse;\n import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListResourceAssigneesRequest;\n import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListResourceAssigneesResponse;\n-import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListServicePrincipalCloudIdentitiesRequest;\n-import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListServicePrincipalCloudIdentitiesResponse;\n import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListRolesRequest;\n import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListRolesResponse;\n+import com.cloudera.thunderhead.service.usermanagement.UserManagementProto.ListServicePrincipalCloudIdentitiesRequest;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1NDYyMA=="}, "originalCommit": {"oid": "b9ce7f08e41a32905ce918bd385d3675c096870d"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2292, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}