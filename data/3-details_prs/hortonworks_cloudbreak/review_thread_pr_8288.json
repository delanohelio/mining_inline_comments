{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDYxMDg2", "number": 8288, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDo1NToxNVrOEHm9pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDo1NToxNVrOEHm9pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDEzODYwOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDo1NToxNVrOGnEbmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTowMzoxNFrOGnEyuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyMDI1MA==", "bodyText": "I don't think we need the environmentCrnFilter here because we've already gotten the relevant stacks.", "url": "https://github.com/hortonworks/cloudbreak/pull/8288#discussion_r443620250", "createdAt": "2020-06-22T14:55:15Z", "author": {"login": "handavid"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -102,15 +104,25 @@\n     @Inject\n     private WorkloadCredentialService workloadCredentialService;\n \n+    @Inject\n+    private CommonPermissionCheckingUtils commonPermissionCheckingUtils;\n+\n     public Operation synchronizeUsers(String accountId, String actorCrn, Set<String> environmentCrnFilter,\n             Set<String> userCrnFilter, Set<String> machineUserCrnFilter) {\n+        List<Stack> stacks = getStacksForSync(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+        return performSyncForStacks(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter, stacks);\n+    }\n \n-        validateParameters(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n-        LOGGER.debug(\"Synchronizing users in account {} for environmentCrns {}, userCrns {}, and machineUserCrns {}\",\n-                accountId, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+    public Operation synchronizeUsersWithCustomPermissionCheck(String accountId, String actorCrn, Set<String> environmentCrnFilter,\n+            Set<String> userCrnFilter, Set<String> machineUserCrnFilter, AuthorizationResourceAction action) {\n+        List<Stack> stacks = getStacksForSync(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+        List<String> relatedEnvironmentCrns = stacks.stream().map(stack -> stack.getEnvironmentCrn()).collect(Collectors.toList());\n+        commonPermissionCheckingUtils.checkPermissionForUserOnResources(action, actorCrn, relatedEnvironmentCrns);\n+        return performSyncForStacks(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter, stacks);\n+    }\n \n-        List<Stack> stacks = stackService.getMultipleByEnvironmentCrnOrChildEnvironmantCrnAndAccountId(environmentCrnFilter, accountId);\n-        LOGGER.debug(\"Found {} stacks\", stacks.size());\n+    private Operation performSyncForStacks(String accountId, String actorCrn, Set<String> environmentCrnFilter,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5e7315a7e2e5b7c89bcc349394a3491248dbad9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyNDAwMQ==", "bodyText": "ok!", "url": "https://github.com/hortonworks/cloudbreak/pull/8288#discussion_r443624001", "createdAt": "2020-06-22T15:00:16Z", "author": {"login": "horadla23"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -102,15 +104,25 @@\n     @Inject\n     private WorkloadCredentialService workloadCredentialService;\n \n+    @Inject\n+    private CommonPermissionCheckingUtils commonPermissionCheckingUtils;\n+\n     public Operation synchronizeUsers(String accountId, String actorCrn, Set<String> environmentCrnFilter,\n             Set<String> userCrnFilter, Set<String> machineUserCrnFilter) {\n+        List<Stack> stacks = getStacksForSync(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+        return performSyncForStacks(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter, stacks);\n+    }\n \n-        validateParameters(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n-        LOGGER.debug(\"Synchronizing users in account {} for environmentCrns {}, userCrns {}, and machineUserCrns {}\",\n-                accountId, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+    public Operation synchronizeUsersWithCustomPermissionCheck(String accountId, String actorCrn, Set<String> environmentCrnFilter,\n+            Set<String> userCrnFilter, Set<String> machineUserCrnFilter, AuthorizationResourceAction action) {\n+        List<Stack> stacks = getStacksForSync(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+        List<String> relatedEnvironmentCrns = stacks.stream().map(stack -> stack.getEnvironmentCrn()).collect(Collectors.toList());\n+        commonPermissionCheckingUtils.checkPermissionForUserOnResources(action, actorCrn, relatedEnvironmentCrns);\n+        return performSyncForStacks(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter, stacks);\n+    }\n \n-        List<Stack> stacks = stackService.getMultipleByEnvironmentCrnOrChildEnvironmantCrnAndAccountId(environmentCrnFilter, accountId);\n-        LOGGER.debug(\"Found {} stacks\", stacks.size());\n+    private Operation performSyncForStacks(String accountId, String actorCrn, Set<String> environmentCrnFilter,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyMDI1MA=="}, "originalCommit": {"oid": "a5e7315a7e2e5b7c89bcc349394a3491248dbad9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyNjE2OA==", "bodyText": "fixed", "url": "https://github.com/hortonworks/cloudbreak/pull/8288#discussion_r443626168", "createdAt": "2020-06-22T15:03:14Z", "author": {"login": "horadla23"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -102,15 +104,25 @@\n     @Inject\n     private WorkloadCredentialService workloadCredentialService;\n \n+    @Inject\n+    private CommonPermissionCheckingUtils commonPermissionCheckingUtils;\n+\n     public Operation synchronizeUsers(String accountId, String actorCrn, Set<String> environmentCrnFilter,\n             Set<String> userCrnFilter, Set<String> machineUserCrnFilter) {\n+        List<Stack> stacks = getStacksForSync(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+        return performSyncForStacks(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter, stacks);\n+    }\n \n-        validateParameters(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n-        LOGGER.debug(\"Synchronizing users in account {} for environmentCrns {}, userCrns {}, and machineUserCrns {}\",\n-                accountId, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+    public Operation synchronizeUsersWithCustomPermissionCheck(String accountId, String actorCrn, Set<String> environmentCrnFilter,\n+            Set<String> userCrnFilter, Set<String> machineUserCrnFilter, AuthorizationResourceAction action) {\n+        List<Stack> stacks = getStacksForSync(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter);\n+        List<String> relatedEnvironmentCrns = stacks.stream().map(stack -> stack.getEnvironmentCrn()).collect(Collectors.toList());\n+        commonPermissionCheckingUtils.checkPermissionForUserOnResources(action, actorCrn, relatedEnvironmentCrns);\n+        return performSyncForStacks(accountId, actorCrn, environmentCrnFilter, userCrnFilter, machineUserCrnFilter, stacks);\n+    }\n \n-        List<Stack> stacks = stackService.getMultipleByEnvironmentCrnOrChildEnvironmantCrnAndAccountId(environmentCrnFilter, accountId);\n-        LOGGER.debug(\"Found {} stacks\", stacks.size());\n+    private Operation performSyncForStacks(String accountId, String actorCrn, Set<String> environmentCrnFilter,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyMDI1MA=="}, "originalCommit": {"oid": "a5e7315a7e2e5b7c89bcc349394a3491248dbad9"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3224, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}