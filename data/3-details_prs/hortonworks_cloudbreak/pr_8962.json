{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMDAwMDYw", "number": 8962, "title": "CB-8536 added redbeams support to gcp", "bodyText": "See detailed description in the commit message.", "createdAt": "2020-09-09T17:05:36Z", "url": "https://github.com/hortonworks/cloudbreak/pull/8962", "merged": true, "mergeCommit": {"oid": "5a7a1701c20c3dcdae4da47df4667eb24fc467c8"}, "closed": true, "closedAt": "2020-09-10T19:24:41Z", "author": {"login": "doktoric"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHPURAgH2gAyNDgzMDAwMDYwOjNlZGRkOTg2OTk1NTU3MjRhNDA3MTAxN2IzM2MxNGU5OTMxYWIyOWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHT6ryAFqTQ4NTQ0NTUzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3eddd98699555724a4071017b33c14e9931ab29e", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3eddd98699555724a4071017b33c14e9931ab29e", "committedDate": "2020-09-09T17:05:25Z", "message": "CB-8536 added redbeams support to gcp"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "148340644e3714d1d8a7b466354192b3a5908333", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/148340644e3714d1d8a7b466354192b3a5908333", "committedDate": "2020-09-09T17:02:36Z", "message": "CB-8536 added redbeams support to gcp"}, "afterCommit": {"oid": "3eddd98699555724a4071017b33c14e9931ab29e", "author": {"user": {"login": "doktoric", "name": "Richard Doktorics"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3eddd98699555724a4071017b33c14e9931ab29e", "committedDate": "2020-09-09T17:05:25Z", "message": "CB-8536 added redbeams support to gcp"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDQ1NTMy", "url": "https://github.com/hortonworks/cloudbreak/pull/8962#pullrequestreview-485445532", "createdAt": "2020-09-09T22:26:59Z", "commit": {"oid": "3eddd98699555724a4071017b33c14e9931ab29e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMjoyNzowMFrOHPcaMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMjoyNzowMFrOHPcaMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk1NjE0Ng==", "bodyText": "Not pressing and also a thing to consider for other cloud vendors too...\n       // GCP VPCs are global. Subnets have a global scope in region. So picking the first availability zone in the region for subnet. String zone = compute.regions().get(projectId, region.value()).execute().getZones().stream().findFirst().orElse(null);\nWe chose the first AZs in the region list to host the compute resources. If they talk to the database hosted in multiple AZs and if the traffic goes to a different AZ then the customer incurs a cost of 1 US cent per GB. Is it possible to pick AZs for database is in such a way that it is co-located with compute for the primary and the secondary can be any other AZ?", "url": "https://github.com/hortonworks/cloudbreak/pull/8962#discussion_r485956146", "createdAt": "2020-09-09T22:27:00Z", "author": {"login": "cegganesh84"}, "path": "redbeams/src/main/java/com/sequenceiq/redbeams/service/network/NetworkParameterAdder.java", "diffHunk": "@@ -27,16 +27,21 @@\n     @VisibleForTesting\n     static final String SUBNET_ID = \"subnetId\";\n \n+    @VisibleForTesting\n+    static final String AVAILABILITY_ZONE = \"availabilityZone\";\n+\n     // These constants must match those in AzureNetworkView\n \n     @VisibleForTesting\n     static final String SUBNETS = \"subnets\";\n \n-    public Map<String, Object> addSubnetIds(Map<String, Object> parameters, List<String> subnetIds, CloudPlatform cloudPlatform) {\n+    public Map<String, Object> addSubnetIds(Map<String, Object> parameters, List<String> subnetIds, List<String> azs, CloudPlatform cloudPlatform) {\n         switch (cloudPlatform) {\n             case AWS:\n+            case GCP:\n             case MOCK:\n                 parameters.put(SUBNET_ID, String.join(\",\", subnetIds));\n+                parameters.put(AVAILABILITY_ZONE, String.join(\",\", azs));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eddd98699555724a4071017b33c14e9931ab29e"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2286, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}