{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MDMwNjIz", "number": 9108, "title": "CB-7419 adding in Service Principals to Ranger User Sync", "bodyText": "This adds a call to get Service Principals from Thunderhead during template\npreparation that will be passed into the RangerUserSyncRoleConfigProvider\nto sync OID before the datalake starts up.", "createdAt": "2020-09-29T18:50:48Z", "url": "https://github.com/hortonworks/cloudbreak/pull/9108", "merged": true, "mergeCommit": {"oid": "7533f02867a39e902b16060e38d7282b36016591"}, "closed": true, "closedAt": "2020-10-01T01:34:53Z", "author": {"login": "frozenwizard"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNtnqXABqjM4MjEzODc0OTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdODE3IAFqTQ5OTc5ODg2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8bcc19ab1837022057c385f1624cb1d73aed840d", "author": {"user": null}, "url": "https://github.com/hortonworks/cloudbreak/commit/8bcc19ab1837022057c385f1624cb1d73aed840d", "committedDate": "2020-09-29T18:49:40Z", "message": "CB-7419 adding in Service Principals to Ranger User Sync\n\nThis adds a call to get Service Principals from Thunderhead during template\npreparation that will be passed into the RangerUserSyncRoleConfigProvider\nto sync OID before the datalake starts up."}, "afterCommit": {"oid": "8d99ac8acacfdebdab01a1f10bd83b8826918d66", "author": {"user": null}, "url": "https://github.com/hortonworks/cloudbreak/commit/8d99ac8acacfdebdab01a1f10bd83b8826918d66", "committedDate": "2020-09-29T19:32:14Z", "message": "CB-7419 adding in Service Principals to Ranger User Sync\n\nThis adds a call to get Service Principals from Thunderhead during template\npreparation that will be passed into the RangerUserSyncRoleConfigProvider\nto sync OID before the datalake starts up."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NjE4ODMx", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#pullrequestreview-499618831", "createdAt": "2020-09-30T16:38:19Z", "commit": {"oid": "8d99ac8acacfdebdab01a1f10bd83b8826918d66"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDAzOTEx", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#pullrequestreview-499003911", "createdAt": "2020-09-30T00:01:50Z", "commit": {"oid": "8d99ac8acacfdebdab01a1f10bd83b8826918d66"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDowMTo1MFrOHaITRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDoyNjowMVrOHaJTwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MTAzMQ==", "bodyText": "nit: So this is account id? It's not that obvious to me. Can we pull it out as an accountId variable.", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#discussion_r497161031", "createdAt": "2020-09-30T00:01:50Z", "author": {"login": "aarman-cloudera"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/converter/StackToTemplatePreparationObjectConverter.java", "diffHunk": "@@ -194,7 +204,11 @@ public TemplatePreparationObject convert(Stack source) {\n             cluster.setIdBroker(idbroker);\n             String envCrnForVirtualGroups = getEnvironmentCrnForVirtualGroups(environment);\n             VirtualGroupRequest virtualGroupRequest = new VirtualGroupRequest(envCrnForVirtualGroups, ldapView.map(LdapView::getAdminGroup).orElse(\"\"));\n-\n+            List<UserManagementProto.ServicePrincipalCloudIdentities> servicePrincipalCloudIdentities =\n+                    grpcUmsClient.listServicePrincipalCloudIdentities(INTERNAL_ACTOR_CRN,\n+                            source.getCreator().getTenant().getName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d99ac8acacfdebdab01a1f10bd83b8826918d66"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MjE4MQ==", "bodyText": "Looks like this would would be filled in with azure service principles even on non Azure environments. Can we instead just fill this in for Azure RAZ enabled clusters?", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#discussion_r497162181", "createdAt": "2020-09-30T00:03:33Z", "author": {"login": "aarman-cloudera"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/converter/StackToTemplatePreparationObjectConverter.java", "diffHunk": "@@ -350,4 +365,30 @@ private GeneralClusterConfigs calculateGeneralClusterConfigs(Stack source, Clust\n         return generalClusterConfigs;\n     }\n \n+    private void decorateBuilderWithServicePrincipals(Builder builder,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d99ac8acacfdebdab01a1f10bd83b8826918d66"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3NjY2OQ==", "bodyText": "I should have mentioned, we only want to do this if the accountId has the necessary entitlement (CDP_CLOUD_IDENTITY_MAPPING). Can you add a check for that. You can use EntitlementService.cloudIdentityMappingEnabled to do it.", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#discussion_r497176669", "createdAt": "2020-09-30T00:24:42Z", "author": {"login": "aarman-cloudera"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerUserSyncRoleConfigProvider.java", "diffHunk": "@@ -35,9 +39,28 @@\n     @Override\n     public List<ApiClusterTemplateConfig> getRoleConfigs(String roleType, TemplatePreparationObject source) {\n         String adminGroup = virtualGroupService.getVirtualGroup(source.getVirtualGroupRequest(), UmsRight.RANGER_ADMIN.getRight());\n-        return List.of(\n-                config(ROLE_SAFETY_VALVE, ConfigUtils.getSafetyValveProperty(RANGER_USERSYNC_UNIX_BACKEND, \"nss\")),\n-                config(ROLE_ASSIGNMENT_RULES, \"&ROLE_SYS_ADMIN:g:\" + adminGroup));\n+\n+        if (CloudPlatform.AZURE.equals(source.getCloudPlatform()) && source.getGeneralClusterConfigs().isEnableRangerRaz()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d99ac8acacfdebdab01a1f10bd83b8826918d66"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3NzUzNw==", "bodyText": "And also add an entitlement check as per other comment.", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#discussion_r497177537", "createdAt": "2020-09-30T00:26:01Z", "author": {"login": "aarman-cloudera"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/converter/StackToTemplatePreparationObjectConverter.java", "diffHunk": "@@ -350,4 +365,30 @@ private GeneralClusterConfigs calculateGeneralClusterConfigs(Stack source, Clust\n         return generalClusterConfigs;\n     }\n \n+    private void decorateBuilderWithServicePrincipals(Builder builder,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MjE4MQ=="}, "originalCommit": {"oid": "8d99ac8acacfdebdab01a1f10bd83b8826918d66"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b70cda917ead76891ce80e172c1c752f7d2940cf", "author": {"user": null}, "url": "https://github.com/hortonworks/cloudbreak/commit/b70cda917ead76891ce80e172c1c752f7d2940cf", "committedDate": "2020-09-30T20:35:02Z", "message": "CB-7419 adding in Service Principals to Ranger User Sync\n\nThis adds a call to get Service Principals from Thunderhead during template\npreparation that will be passed into the RangerUserSyncRoleConfigProvider\nto sync OID before the datalake starts up."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d99ac8acacfdebdab01a1f10bd83b8826918d66", "author": {"user": null}, "url": "https://github.com/hortonworks/cloudbreak/commit/8d99ac8acacfdebdab01a1f10bd83b8826918d66", "committedDate": "2020-09-29T19:32:14Z", "message": "CB-7419 adding in Service Principals to Ranger User Sync\n\nThis adds a call to get Service Principals from Thunderhead during template\npreparation that will be passed into the RangerUserSyncRoleConfigProvider\nto sync OID before the datalake starts up."}, "afterCommit": {"oid": "b70cda917ead76891ce80e172c1c752f7d2940cf", "author": {"user": null}, "url": "https://github.com/hortonworks/cloudbreak/commit/b70cda917ead76891ce80e172c1c752f7d2940cf", "committedDate": "2020-09-30T20:35:02Z", "message": "CB-7419 adding in Service Principals to Ranger User Sync\n\nThis adds a call to get Service Principals from Thunderhead during template\npreparation that will be passed into the RangerUserSyncRoleConfigProvider\nto sync OID before the datalake starts up."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5Nzk4ODY4", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#pullrequestreview-499798868", "createdAt": "2020-09-30T20:47:12Z", "commit": {"oid": "b70cda917ead76891ce80e172c1c752f7d2940cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2256, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}