{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMTkzOTMx", "number": 8097, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTo1OTo0NlrOD93XFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMDoyM1rOD-UCfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTk2NzU3OnYy", "diffSide": "RIGHT", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTo1OTo0NlrOGXnbjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTo1OTo0NlrOGXnbjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQxNjQ2Mg==", "bodyText": "razEntitlementEnabled", "url": "https://github.com/hortonworks/cloudbreak/pull/8097#discussion_r427416462", "createdAt": "2020-05-19T15:59:46Z", "author": {"login": "doktoric"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxService.java", "diffHunk": "@@ -413,6 +421,23 @@ private void validateCloudStorageRequest(SdxCloudStorageRequest cloudStorage, De\n         }\n     }\n \n+    private void validateRazEnablement(SdxClusterRequest sdxClusterRequest, DetailedEnvironmentResponse environment) {\n+        ValidationResultBuilder validationBuilder = new ValidationResultBuilder();\n+        boolean razEntitlement = entitlementService.razEnabled(environment.getCreator(), Crn.safeFromString(environment.getCreator()).getAccountId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2e8b3ce70433c5aefe530c30ae6f6e63af92f1"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTk4MTk0OnYy", "diffSide": "RIGHT", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CMRepositoryVersionUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjowMjo1NlrOGXnkgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjowMjo1NlrOGXnkgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQxODc1NA==", "bodyText": "should we check this in case of sdx app as well ? I mean based on the runtime we should not enable the raz configuration if runtime < 7.2.0", "url": "https://github.com/hortonworks/cloudbreak/pull/8097#discussion_r427418754", "createdAt": "2020-05-19T16:02:56Z", "author": {"login": "doktoric"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CMRepositoryVersionUtil.java", "diffHunk": "@@ -64,6 +64,11 @@ public static boolean isTagsResourceSupportedViaBlueprint(ClouderaManagerRepo cl\n         return isVersionNewerOrEqualThanLimited(clouderaManagerRepoDetails::getVersion, CLOUDERAMANAGER_VERSION_7_1_0);\n     }\n \n+    public static boolean isRazConfigurationSupported(ClouderaManagerRepo clouderaManagerRepoDetails) {\n+        LOGGER.info(\"ClouderaManagerRepo is compared for Raz Ranger support\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2e8b3ce70433c5aefe530c30ae6f6e63af92f1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjExOTA4OnYy", "diffSide": "RIGHT", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTowMDozMFrOGYQKXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTowMDozMFrOGYQKXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA4MzgwNw==", "bodyText": "if runtime not empty. In case of sdx-internal this field is missing", "url": "https://github.com/hortonworks/cloudbreak/pull/8097#discussion_r428083807", "createdAt": "2020-05-20T15:00:30Z", "author": {"login": "doktoric"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxService.java", "diffHunk": "@@ -413,6 +424,31 @@ private void validateCloudStorageRequest(SdxCloudStorageRequest cloudStorage, De\n         }\n     }\n \n+    private void validateRazEnablement(SdxClusterRequest sdxClusterRequest, DetailedEnvironmentResponse environment) {\n+        ValidationResultBuilder validationBuilder = new ValidationResultBuilder();\n+        if (sdxClusterRequest.isEnableRangerRaz())  {\n+            boolean razEntitlementEnabled = entitlementService.razEnabled(environment.getCreator(), Crn.safeFromString(environment.getCreator()).getAccountId());\n+            if (!razEntitlementEnabled) {\n+                validationBuilder.error(\"Provisioning Ranger Raz is not enabled for this account.\");\n+            }\n+            if (!AZURE.name().equalsIgnoreCase(environment.getCloudPlatform())) {\n+                validationBuilder.error(\"Provisioning Ranger Raz is only valid for Microsft Azure.\");\n+            }\n+            if (!isRazSupported(sdxClusterRequest.getRuntime())) {\n+                validationBuilder.error(\"Provisioning Ranger Raz is only valid for CM version > 7.2.0 and not \" + sdxClusterRequest.getRuntime());\n+            }\n+        }\n+        ValidationResult validationResult = validationBuilder.build();\n+        if (validationResult.hasError()) {\n+            throw new BadRequestException(validationResult.getFormattedErrors());\n+        }\n+    }\n+\n+    private boolean isRazSupported(String runtime) {\n+        Comparator<Versioned> versionComparator = new VersionComparator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e504d5adfba0750b3b7d3850212cb41d94f9732"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY2NjIwOnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/schema/app/20200518154332_CB-6236_enable_Ranger_Raz_service.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMDoyM1rOGYVtBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjoxNVrOGYVxSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NDU5OA==", "bodyText": "The default value should be added separately as it will lock the table. See:\nhttps://github.com/hortonworks/cloudbreak/blob/master/core/src/main/resources/schema/app/20200504164000_CB-6897_improve_instance_metadata_with_instance_lifecycle.sql", "url": "https://github.com/hortonworks/cloudbreak/pull/8097#discussion_r428174598", "createdAt": "2020-05-20T17:10:23Z", "author": {"login": "keyki"}, "path": "core/src/main/resources/schema/app/20200518154332_CB-6236_enable_Ranger_Raz_service.sql", "diffHunk": "@@ -0,0 +1,11 @@\n+-- // CB-6236 enable Ranger Raz service.\n+-- Migration SQL that makes the change goes here.\n+\n+ALTER TABLE cluster ADD COLUMN IF NOT EXISTS ranger_raz_enabled boolean NOT NULL DEFAULT false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8502fdc7d901b23b64b9da3af0b2d660d174c6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NTY4OQ==", "bodyText": "https://www.citusdata.com/blog/2018/02/22/seven-tips-for-dealing-with-postgres-locks/", "url": "https://github.com/hortonworks/cloudbreak/pull/8097#discussion_r428175689", "createdAt": "2020-05-20T17:12:15Z", "author": {"login": "keyki"}, "path": "core/src/main/resources/schema/app/20200518154332_CB-6236_enable_Ranger_Raz_service.sql", "diffHunk": "@@ -0,0 +1,11 @@\n+-- // CB-6236 enable Ranger Raz service.\n+-- Migration SQL that makes the change goes here.\n+\n+ALTER TABLE cluster ADD COLUMN IF NOT EXISTS ranger_raz_enabled boolean NOT NULL DEFAULT false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NDU5OA=="}, "originalCommit": {"oid": "df8502fdc7d901b23b64b9da3af0b2d660d174c6"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3333, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}