{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjEyNDM1", "number": 7228, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjoyMDo0MVrODdgH2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjoyMDo0MVrODdgH2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjYxNTkyOnYy", "diffSide": "RIGHT", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/scheduler/AwsBackoffSyncPollingScheduler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjoyMDo0MVrOFmJMlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMToyNzowNVrOFmqx8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU0MDg4NA==", "bodyText": "Why secure random? Why not threadlocalrandom?", "url": "https://github.com/hortonworks/cloudbreak/pull/7228#discussion_r375540884", "createdAt": "2020-02-05T22:20:41Z", "author": {"login": "risdenk"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/scheduler/AwsBackoffSyncPollingScheduler.java", "diffHunk": "@@ -20,14 +22,16 @@\n \n     private static final int POLLING_INTERVAL = 5;\n \n-    private static final int MAX_POLLING_INTERVAL = 10;\n+    private static final int MAX_POLLING_INTERVAL = 50;\n \n     private static final int MAX_POLLING_ATTEMPT = 1000;\n \n-    private static final int FAILURE_TOLERANT_ATTEMPT = 3;\n+    private static final int FAILURE_TOLERANT_ATTEMPT = 10;\n \n     private static final String THROTTLING_ERROR_CODE = \"Throttling\";\n \n+    private static final Random RANDOM = new SecureRandom();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac773967af01542fefbd37c4a22479770394f00f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU0NDk2MQ==", "bodyText": "I just looked at what is the general practice in this codebase. All the places I saw it was secure random. No strong takes here. Happy to change it.", "url": "https://github.com/hortonworks/cloudbreak/pull/7228#discussion_r375544961", "createdAt": "2020-02-05T22:30:49Z", "author": {"login": "cegganesh84"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/scheduler/AwsBackoffSyncPollingScheduler.java", "diffHunk": "@@ -20,14 +22,16 @@\n \n     private static final int POLLING_INTERVAL = 5;\n \n-    private static final int MAX_POLLING_INTERVAL = 10;\n+    private static final int MAX_POLLING_INTERVAL = 50;\n \n     private static final int MAX_POLLING_ATTEMPT = 1000;\n \n-    private static final int FAILURE_TOLERANT_ATTEMPT = 3;\n+    private static final int FAILURE_TOLERANT_ATTEMPT = 10;\n \n     private static final String THROTTLING_ERROR_CODE = \"Throttling\";\n \n+    private static final Random RANDOM = new SecureRandom();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU0MDg4NA=="}, "originalCommit": {"oid": "ac773967af01542fefbd37c4a22479770394f00f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5MTEyMA==", "bodyText": "Fixed it! Thanks!", "url": "https://github.com/hortonworks/cloudbreak/pull/7228#discussion_r376091120", "createdAt": "2020-02-06T21:27:05Z", "author": {"login": "cegganesh84"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/scheduler/AwsBackoffSyncPollingScheduler.java", "diffHunk": "@@ -20,14 +22,16 @@\n \n     private static final int POLLING_INTERVAL = 5;\n \n-    private static final int MAX_POLLING_INTERVAL = 10;\n+    private static final int MAX_POLLING_INTERVAL = 50;\n \n     private static final int MAX_POLLING_ATTEMPT = 1000;\n \n-    private static final int FAILURE_TOLERANT_ATTEMPT = 3;\n+    private static final int FAILURE_TOLERANT_ATTEMPT = 10;\n \n     private static final String THROTTLING_ERROR_CODE = \"Throttling\";\n \n+    private static final Random RANDOM = new SecureRandom();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU0MDg4NA=="}, "originalCommit": {"oid": "ac773967af01542fefbd37c4a22479770394f00f"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2906, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}