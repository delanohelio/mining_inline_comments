{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NjY1MjU3", "number": 9401, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODoyMzozNFrOE3WqFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODoyMzozNFrOE3WqFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDc4MzU2OnYy", "diffSide": "RIGHT", "path": "core-api/src/test/java/com/sequenceiq/distrox/api/v1/distrox/model/DistroXV1RequestTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODoyMzozNFrOHwpn1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODozNTo1NFrOHwqDHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc3NTYzOA==", "bodyText": "Shouldn't we verify that the result is an empty set?", "url": "https://github.com/hortonworks/cloudbreak/pull/9401#discussion_r520775638", "createdAt": "2020-11-10T18:23:34Z", "author": {"login": "keyki"}, "path": "core-api/src/test/java/com/sequenceiq/distrox/api/v1/distrox/model/DistroXV1RequestTest.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.sequenceiq.distrox.api.v1.distrox.model;\n+\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.sequenceiq.distrox.api.v1.distrox.model.instancegroup.InstanceGroupV1Request;\n+\n+class DistroXV1RequestTest {\n+\n+    @Test\n+    public void getAllRecipesIfRecipeNamesAreNullTest() {\n+        DistroXV1Request distroXV1Request = new DistroXV1Request();\n+        InstanceGroupV1Request instanceGroupV1Request = new InstanceGroupV1Request();\n+        instanceGroupV1Request.setRecipeNames(null);\n+        distroXV1Request.setInstanceGroups(Collections.singleton(instanceGroupV1Request));\n+        distroXV1Request.getAllRecipes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4052c47a1b636733c9d847dd21fccb1cc2c0a734"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4MjYyMw==", "bodyText": "We can verify, I just wanted to create as minimal unit test as I can to test this use case :D anyway, assert is added", "url": "https://github.com/hortonworks/cloudbreak/pull/9401#discussion_r520782623", "createdAt": "2020-11-10T18:35:54Z", "author": {"login": "sodre90"}, "path": "core-api/src/test/java/com/sequenceiq/distrox/api/v1/distrox/model/DistroXV1RequestTest.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.sequenceiq.distrox.api.v1.distrox.model;\n+\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.sequenceiq.distrox.api.v1.distrox.model.instancegroup.InstanceGroupV1Request;\n+\n+class DistroXV1RequestTest {\n+\n+    @Test\n+    public void getAllRecipesIfRecipeNamesAreNullTest() {\n+        DistroXV1Request distroXV1Request = new DistroXV1Request();\n+        InstanceGroupV1Request instanceGroupV1Request = new InstanceGroupV1Request();\n+        instanceGroupV1Request.setRecipeNames(null);\n+        distroXV1Request.setInstanceGroups(Collections.singleton(instanceGroupV1Request));\n+        distroXV1Request.getAllRecipes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc3NTYzOA=="}, "originalCommit": {"oid": "4052c47a1b636733c9d847dd21fccb1cc2c0a734"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3573, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}