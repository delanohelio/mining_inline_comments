{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNDkyMzk0", "number": 7645, "title": "CB-5660 Respect declared Role Config Groups in Data Hub template gene\u2026", "bodyText": "I made some simple refactor. The new logic is here:\nhttps://github.com/hortonworks/cloudbreak/compare/cb5660-unify-component-by-blacklist?expand=1#diff-34a9a5ca63de6b681c8d82d9af485f9bR91", "createdAt": "2020-03-25T10:02:25Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7645", "merged": true, "mergeCommit": {"oid": "ce8d35a110de54db33e06b6034057ad1981909f8"}, "closed": true, "closedAt": "2020-03-26T08:56:55Z", "author": {"login": "topolyai5"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRIqxMgFqTM4MTIyMTgxMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRXYOIABqjMxNjcwNzkyNTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjIxODEw", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#pullrequestreview-381221810", "createdAt": "2020-03-25T14:48:44Z", "commit": {"oid": "5ef067f442c6beb8e5f965c4ba0b122fd7755183"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo0ODo0NFrOF7ewKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo0ODo0NFrOF7ewKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNDE1NQ==", "bodyText": "I think it would be nice to see somewhere what are the configs", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397914155", "createdAt": "2020-03-25T14:48:44Z", "author": {"login": "doktoric"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -35,6 +38,23 @@\n     @Inject\n     private List<CmHostGroupRoleConfigProvider> providers;\n \n+    @Value(\"#{'${cb.cm.sharedComponents:}'.split(';')}\")\n+    private List<String> sharedComponentsList;\n+\n+    private Map<String, String> sharedComponents = new HashMap<>();\n+\n+    @PostConstruct\n+    private void parseSharedComponents() {\n+        sharedComponentsList.forEach(s -> {\n+            try {\n+                String[] split = s.split(\"=\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ef067f442c6beb8e5f965c4ba0b122fd7755183"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjIyMjM5", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#pullrequestreview-381222239", "createdAt": "2020-03-25T14:49:11Z", "commit": {"oid": "5ef067f442c6beb8e5f965c4ba0b122fd7755183"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo0OToxMVrOF7exgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo0OToxMVrOF7exgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNDQ5OQ==", "bodyText": "Just a question butmaybe we should use a config json ?", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397914499", "createdAt": "2020-03-25T14:49:11Z", "author": {"login": "doktoric"}, "path": "core/src/main/resources/application.yml", "diffHunk": "@@ -323,6 +323,8 @@ cb:\n     user.role: \"ROLE_USER\"\n     heartbeat.interval: 3\n     missed.heartbeat.interval: 30\n+    sharedComponents: >\n+      HDFS=JOURNALNODE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ef067f442c6beb8e5f965c4ba0b122fd7755183"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjI0Mjc2", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#pullrequestreview-381224276", "createdAt": "2020-03-25T14:51:08Z", "commit": {"oid": "5ef067f442c6beb8e5f965c4ba0b122fd7755183"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo1MTowOFrOF7e3fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo1MTowOFrOF7e3fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNjAzMA==", "bodyText": "maybe isEqual ?", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397916030", "createdAt": "2020-03-25T14:51:08Z", "author": {"login": "doktoric"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -45,35 +65,40 @@ public void process(CmTemplateProcessor templateProcessor, TemplatePreparationOb\n         return ofNullable(templateProcessor.getTemplate().getHostTemplates()).orElseGet(List::of);\n     }\n \n-    private Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n+    @VisibleForTesting\n+    Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n         Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup = new HashMap<>();\n-\n-        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream()\n-                .collect(toMap(HostgroupView::getName, Function.identity()));\n+        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream().collect(toMap(HostgroupView::getName, Function.identity()));\n         List<ApiClusterTemplateHostTemplate> hostTemplates = getHostTemplates(templateProcessor);\n         Map<String, ServiceComponent> serviceComponents = templateProcessor.mapRoleRefsToServiceComponents();\n \n         for (ApiClusterTemplateHostTemplate hostTemplate : hostTemplates) {\n             String hostGroupName = hostTemplate.getRefName();\n             List<String> roleConfigGroups = ofNullable(hostTemplate.getRoleConfigGroupsRefNames()).orElseGet(List::of);\n             HostgroupView hostgroupView = hostGroups.get(hostGroupName);\n+            groupByHostGroupName(source, configsByRoleConfigGroup, serviceComponents, hostGroupName, roleConfigGroups, hostgroupView);\n+        }\n+        return configsByRoleConfigGroup;\n+    }\n \n-            for (String roleConfigGroup : roleConfigGroups) {\n-                for (CmHostGroupRoleConfigProvider provider : providers) {\n-                    ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n-\n-                    if (serviceComponent != null\n-                            && Objects.equals(provider.getServiceType(), serviceComponent.getService())\n-                            && provider.getRoleTypes().contains(serviceComponent.getComponent())) {\n-\n-                        configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>())\n-                                .computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n-                                .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n-                    }\n+    private void groupByHostGroupName(TemplatePreparationObject source, Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup,\n+            Map<String, ServiceComponent> serviceComponents, String hostGroupName, List<String> roleConfigGroups, HostgroupView hostgroupView) {\n+        for (String roleConfigGroup : roleConfigGroups) {\n+            for (CmHostGroupRoleConfigProvider provider : providers) {\n+                ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n+                if (serviceComponent != null\n+                        && isSameByServiceTypeAndRoleType(provider, serviceComponent)\n+                        && !serviceComponent.getComponent().equals(sharedComponents.get(serviceComponent.getService()))) {\n+                    Map<String, List<ApiClusterTemplateConfig>> configs = configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>());\n+                    configs.computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n+                            .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n                 }\n             }\n         }\n-        return configsByRoleConfigGroup;\n+    }\n+\n+    private boolean isSameByServiceTypeAndRoleType(CmHostGroupRoleConfigProvider provider, ServiceComponent serviceComponent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ef067f442c6beb8e5f965c4ba0b122fd7755183"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjI1NTMw", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#pullrequestreview-381225530", "createdAt": "2020-03-25T14:52:22Z", "commit": {"oid": "5ef067f442c6beb8e5f965c4ba0b122fd7755183"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo1MjoyMlrOF7e7hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo1MjoyMlrOF7e7hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNzA2MQ==", "bodyText": "Very large if condition. Can you please extract it?", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397917061", "createdAt": "2020-03-25T14:52:22Z", "author": {"login": "attilapalfi92"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -45,35 +65,40 @@ public void process(CmTemplateProcessor templateProcessor, TemplatePreparationOb\n         return ofNullable(templateProcessor.getTemplate().getHostTemplates()).orElseGet(List::of);\n     }\n \n-    private Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n+    @VisibleForTesting\n+    Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n         Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup = new HashMap<>();\n-\n-        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream()\n-                .collect(toMap(HostgroupView::getName, Function.identity()));\n+        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream().collect(toMap(HostgroupView::getName, Function.identity()));\n         List<ApiClusterTemplateHostTemplate> hostTemplates = getHostTemplates(templateProcessor);\n         Map<String, ServiceComponent> serviceComponents = templateProcessor.mapRoleRefsToServiceComponents();\n \n         for (ApiClusterTemplateHostTemplate hostTemplate : hostTemplates) {\n             String hostGroupName = hostTemplate.getRefName();\n             List<String> roleConfigGroups = ofNullable(hostTemplate.getRoleConfigGroupsRefNames()).orElseGet(List::of);\n             HostgroupView hostgroupView = hostGroups.get(hostGroupName);\n+            groupByHostGroupName(source, configsByRoleConfigGroup, serviceComponents, hostGroupName, roleConfigGroups, hostgroupView);\n+        }\n+        return configsByRoleConfigGroup;\n+    }\n \n-            for (String roleConfigGroup : roleConfigGroups) {\n-                for (CmHostGroupRoleConfigProvider provider : providers) {\n-                    ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n-\n-                    if (serviceComponent != null\n-                            && Objects.equals(provider.getServiceType(), serviceComponent.getService())\n-                            && provider.getRoleTypes().contains(serviceComponent.getComponent())) {\n-\n-                        configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>())\n-                                .computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n-                                .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n-                    }\n+    private void groupByHostGroupName(TemplatePreparationObject source, Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup,\n+            Map<String, ServiceComponent> serviceComponents, String hostGroupName, List<String> roleConfigGroups, HostgroupView hostgroupView) {\n+        for (String roleConfigGroup : roleConfigGroups) {\n+            for (CmHostGroupRoleConfigProvider provider : providers) {\n+                ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n+                if (serviceComponent != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ef067f442c6beb8e5f965c4ba0b122fd7755183"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNDM5NTI2", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#pullrequestreview-381439526", "createdAt": "2020-03-25T18:47:14Z", "commit": {"oid": "5ef067f442c6beb8e5f965c4ba0b122fd7755183"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ef067f442c6beb8e5f965c4ba0b122fd7755183", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/5ef067f442c6beb8e5f965c4ba0b122fd7755183", "committedDate": "2020-03-25T09:47:39Z", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation"}, "afterCommit": {"oid": "32b5e54b14f2895f8ae6d07ebf3d749b463ef658", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/32b5e54b14f2895f8ae6d07ebf3d749b463ef658", "committedDate": "2020-03-25T19:21:32Z", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32b5e54b14f2895f8ae6d07ebf3d749b463ef658", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/32b5e54b14f2895f8ae6d07ebf3d749b463ef658", "committedDate": "2020-03-25T19:21:32Z", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation"}, "afterCommit": {"oid": "df710f2c0e6beab2e756ca4aa916b6293f5b65d5", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/df710f2c0e6beab2e756ca4aa916b6293f5b65d5", "committedDate": "2020-03-25T19:25:27Z", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNDc4OTU5", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#pullrequestreview-381478959", "createdAt": "2020-03-25T19:42:44Z", "commit": {"oid": "df710f2c0e6beab2e756ca4aa916b6293f5b65d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNzQzNjg5", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#pullrequestreview-381743689", "createdAt": "2020-03-26T07:05:35Z", "commit": {"oid": "df710f2c0e6beab2e756ca4aa916b6293f5b65d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzowNTozNVrOF75nFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzowNTozNVrOF75nFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NDE5Ng==", "bodyText": "can we remove this?", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r398354196", "createdAt": "2020-03-26T07:05:35Z", "author": {"login": "doktoric"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -45,35 +64,50 @@ public void process(CmTemplateProcessor templateProcessor, TemplatePreparationOb\n         return ofNullable(templateProcessor.getTemplate().getHostTemplates()).orElseGet(List::of);\n     }\n \n-    private Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n+    @VisibleForTesting\n+    Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n         Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup = new HashMap<>();\n-\n-        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream()\n-                .collect(toMap(HostgroupView::getName, Function.identity()));\n+        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream().collect(toMap(HostgroupView::getName, Function.identity()));\n         List<ApiClusterTemplateHostTemplate> hostTemplates = getHostTemplates(templateProcessor);\n         Map<String, ServiceComponent> serviceComponents = templateProcessor.mapRoleRefsToServiceComponents();\n \n         for (ApiClusterTemplateHostTemplate hostTemplate : hostTemplates) {\n             String hostGroupName = hostTemplate.getRefName();\n             List<String> roleConfigGroups = ofNullable(hostTemplate.getRoleConfigGroupsRefNames()).orElseGet(List::of);\n             HostgroupView hostgroupView = hostGroups.get(hostGroupName);\n+            groupByHostGroupName(source, configsByRoleConfigGroup, serviceComponents, hostGroupName, roleConfigGroups, hostgroupView);\n+        }\n+        return configsByRoleConfigGroup;\n+    }\n \n-            for (String roleConfigGroup : roleConfigGroups) {\n-                for (CmHostGroupRoleConfigProvider provider : providers) {\n-                    ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n-\n-                    if (serviceComponent != null\n-                            && Objects.equals(provider.getServiceType(), serviceComponent.getService())\n-                            && provider.getRoleTypes().contains(serviceComponent.getComponent())) {\n-\n-                        configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>())\n-                                .computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n-                                .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n-                    }\n+    private void groupByHostGroupName(TemplatePreparationObject source, Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup,\n+            Map<String, ServiceComponent> serviceComponents, String hostGroupName, List<String> roleConfigGroups, HostgroupView hostgroupView) {\n+        for (String roleConfigGroup : roleConfigGroups) {\n+            for (CmHostGroupRoleConfigProvider provider : providers) {\n+                ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n+                if (isEqualsAndNotSharedComponent(provider, serviceComponent)) {\n+                    Map<String, List<ApiClusterTemplateConfig>> configs = configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>());\n+                    configs.computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n+                            .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n                 }\n             }\n         }\n-        return configsByRoleConfigGroup;\n+    }\n+\n+    private boolean isEqualsAndNotSharedComponent(CmHostGroupRoleConfigProvider provider, ServiceComponent serviceComponent) {\n+        return serviceComponent != null\n+                && isEqualsByServiceTypeAndRoleType(provider, serviceComponent)\n+                && !isSharedComponent(serviceComponent);\n+    }\n+\n+    private boolean isSharedComponent(ServiceComponent serviceComponent) {\n+        return sharedComponents.stream().anyMatch(s -> s.getComponentName().equals(serviceComponent.getComponent())\n+                && s.getServiceType().equals(serviceComponent.getService()));\n+//        return serviceComponent.getComponent().equals(sharedComponents.get(serviceComponent.getService()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df710f2c0e6beab2e756ca4aa916b6293f5b65d5"}, "originalPosition": 106}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8632c316f9e7af37273d374ae30a8ce48cf0fe38", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8632c316f9e7af37273d374ae30a8ce48cf0fe38", "committedDate": "2020-03-26T07:56:46Z", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df710f2c0e6beab2e756ca4aa916b6293f5b65d5", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/df710f2c0e6beab2e756ca4aa916b6293f5b65d5", "committedDate": "2020-03-25T19:25:27Z", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation"}, "afterCommit": {"oid": "8632c316f9e7af37273d374ae30a8ce48cf0fe38", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8632c316f9e7af37273d374ae30a8ce48cf0fe38", "committedDate": "2020-03-26T07:56:46Z", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2354, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}