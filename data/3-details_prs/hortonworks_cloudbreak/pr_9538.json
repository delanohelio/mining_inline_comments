{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NTk3MTc1", "number": 9538, "title": "CB-10013 - added validation to ssh public key registration in environment service", "bodyText": "Validating for all the supported algorithm for SSH public key and replacing the comment part with the login user name which has the default value: \"cloudbreak\".\nWe had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232", "createdAt": "2020-11-30T14:45:20Z", "url": "https://github.com/hortonworks/cloudbreak/pull/9538", "merged": true, "mergeCommit": {"oid": "3dce33a9dea9e9cf1bb15edd31acf70775118982"}, "closed": true, "closedAt": "2020-12-01T17:28:14Z", "author": {"login": "attilapalfi92"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhme7xgBqjQwNTIzMDMxMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh9YQDAFqTU0MjEzMjk0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b94f2a5060180f4e9d277952dfd113ef8455c155", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/b94f2a5060180f4e9d277952dfd113ef8455c155", "committedDate": "2020-11-30T14:44:12Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}, "afterCommit": {"oid": "94abfd86c02a58436a7049edbcdd2a753d4beb72", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/94abfd86c02a58436a7049edbcdd2a753d4beb72", "committedDate": "2020-11-30T14:46:37Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94abfd86c02a58436a7049edbcdd2a753d4beb72", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/94abfd86c02a58436a7049edbcdd2a753d4beb72", "committedDate": "2020-11-30T14:46:37Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}, "afterCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/326f5ad2f486cdfe29d85e1178db7d116ce273d6", "committedDate": "2020-11-30T17:34:28Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc0MTI3", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541274127", "createdAt": "2020-11-30T20:36:13Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNjoxM1rOH8M3Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNjoxM1rOH8M3Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4NzM1OQ==", "bodyText": "I would like to see more use case here based on the regex", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532887359", "createdAt": "2020-11-30T20:36:13Z", "author": {"login": "doktoric"}, "path": "environment/src/test/java/com/sequenceiq/environment/environment/dto/AuthenticationDtoConverterTest.java", "diffHunk": "@@ -59,4 +67,19 @@ void authenticationToDto() {\n                 .matches(m -> Objects.equals(m.getPublicKeyId(), environment.getPublicKeyId()))\n                 .matches(m -> Objects.equals(m.isManagedKey(), environment.isManagedKey()));\n     }\n+\n+    @Test\n+    void testSshKeyCreation() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc0NDQ5", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541274449", "createdAt": "2020-11-30T20:36:42Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNjo0MlrOH8M4UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNjo0MlrOH8M4UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4NzYzMw==", "bodyText": "verify would be great", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532887633", "createdAt": "2020-11-30T20:36:42Z", "author": {"login": "doktoric"}, "path": "environment/src/test/java/com/sequenceiq/environment/environment/dto/AuthenticationDtoConverterTest.java", "diffHunk": "@@ -59,4 +67,19 @@ void authenticationToDto() {\n                 .matches(m -> Objects.equals(m.getPublicKeyId(), environment.getPublicKeyId()))\n                 .matches(m -> Objects.equals(m.isManagedKey(), environment.isManagedKey()));\n     }\n+\n+    @Test\n+    void testSshKeyCreation() {\n+        String testKey = \"ssh-rsa AAAASASFAS3532== banana@apple.com\";\n+        AuthenticationDto dto = AuthenticationDto.builder()\n+                .withLoginUserName(LOGIN)\n+                .withPublicKey(testKey)\n+                .withPublicKeyId(PUBLIC_KEY_ID)\n+                .withManagedKey(true)\n+                .build();\n+\n+        EnvironmentAuthentication environmentAuthentication = underTest.dtoToAuthentication(dto);\n+\n+        assertEquals(\"ssh-rsa AAAASASFAS3532== cloudbreak\", environmentAuthentication.getPublicKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc0NjI0", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541274624", "createdAt": "2020-11-30T20:36:56Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNjo1NlrOH8M4_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNjo1NlrOH8M4_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4NzgwNg==", "bodyText": "please add verify as well", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532887806", "createdAt": "2020-11-30T20:36:56Z", "author": {"login": "doktoric"}, "path": "environment/src/test/java/com/sequenceiq/environment/environment/service/EnvironmentCreationServiceTest.java", "diffHunk": "@@ -94,6 +95,11 @@\n     @Inject\n     private EnvironmentCreationService environmentCreationServiceUnderTest;\n \n+    @BeforeEach\n+    void setup() {\n+        when(validatorService.validatePublicKey(any())).thenReturn(ValidationResult.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc1MDkw", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541275090", "createdAt": "2020-11-30T20:37:43Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNzo0M1rOH8M6nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNzo0M1rOH8M6nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4ODIyMQ==", "bodyText": "would be nice to see the result in test name", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532888221", "createdAt": "2020-11-30T20:37:43Z", "author": {"login": "doktoric"}, "path": "environment/src/test/java/com/sequenceiq/environment/environment/validation/validators/PublicKeyValidatorTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.sequenceiq.environment.environment.validation.validators;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.sequenceiq.cloudbreak.validation.ValidationResult;\n+\n+class PublicKeyValidatorTest {\n+\n+    private final PublicKeyValidator underTest = new PublicKeyValidator();\n+\n+    @Test\n+    void testPublicKeyValidationWithValidKeyAndComment() {\n+        String validKey = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDXF9paZtj6ibDgRGtw2jTls1fysxETxG/rbCN9vYlpDw6ROK90rjXnC0qi43kXbs5Z/Ny\" +\n+                \"FDDcYW4U1nUmJCIhQqNJv00ukTbS4McfeNYrZF78KNLtbUP57SfKzjcH1Txz9Zr3ILEADqMyNRzgSB2gw5XnfbbLUFQYcF3hT11gjEw99Qi9eCQ6nC\" +\n+                \"M37iy9tCIfMyB5CI24LECv+8UMFdYw+X9JQXgkAlcPi1zmVNckD6dDGGC2nY9mK7jw0dqZ2W/Q2HvGVgP7iSxnKIFIylifPMz0jmtzpjPi4czgr34\" +\n+                \"d4PFlQsv8LgwWEQMyTJGQmtF3GGa1o/qT07gePY2tl1sAzOLszfglmkBZS+POYi65fxYGepF5C0Rmc3427dLp+HPl8QSAuq0j92/3LGLOKTjn1qC2\" +\n+                \"MjBNhbkhFhDKnv0VQslmN/nkgDKUSHfQqfMwo4HXFIIydUWxT+5PxFCaS4axzGQ2HYylxqonnU3P0DJkh/omegI36HyxxlMNlpf/zn3/zrwSFvKN\" +\n+                \"CFvbQezJg8jdqq7VEHx4DH6WhYQ02TLsjmcA0EFp1HxTCbJojD/Ixev/Wc5duHotOBiS0CXdJwyzKSQttQS9NGn+/LvUyiD/Z/Rz2r3B0LpQsQu4\" +\n+                \"tI/8F5Jq+QiRgS9cQRnuLZuvAwbSNYI+g+zPdhaZq8fvumWarcQ== apalfi@hortonworks.com\\n\" +\n+                \"\\n\";\n+\n+        ValidationResult validationResult = underTest.validatePublicKey(validKey);\n+        assertFalse(validationResult.hasError());\n+    }\n+\n+    @Test\n+    void testPublicKeyValidationWithBackSlashesInComment() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc1MjYw", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541275260", "createdAt": "2020-11-30T20:37:58Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNzo1OFrOH8M7Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNzo1OFrOH8M7Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4ODM1MA==", "bodyText": "would be nice to see the result in test name", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532888350", "createdAt": "2020-11-30T20:37:58Z", "author": {"login": "doktoric"}, "path": "environment/src/test/java/com/sequenceiq/environment/environment/validation/validators/PublicKeyValidatorTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.sequenceiq.environment.environment.validation.validators;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.sequenceiq.cloudbreak.validation.ValidationResult;\n+\n+class PublicKeyValidatorTest {\n+\n+    private final PublicKeyValidator underTest = new PublicKeyValidator();\n+\n+    @Test\n+    void testPublicKeyValidationWithValidKeyAndComment() {\n+        String validKey = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDXF9paZtj6ibDgRGtw2jTls1fysxETxG/rbCN9vYlpDw6ROK90rjXnC0qi43kXbs5Z/Ny\" +\n+                \"FDDcYW4U1nUmJCIhQqNJv00ukTbS4McfeNYrZF78KNLtbUP57SfKzjcH1Txz9Zr3ILEADqMyNRzgSB2gw5XnfbbLUFQYcF3hT11gjEw99Qi9eCQ6nC\" +\n+                \"M37iy9tCIfMyB5CI24LECv+8UMFdYw+X9JQXgkAlcPi1zmVNckD6dDGGC2nY9mK7jw0dqZ2W/Q2HvGVgP7iSxnKIFIylifPMz0jmtzpjPi4czgr34\" +\n+                \"d4PFlQsv8LgwWEQMyTJGQmtF3GGa1o/qT07gePY2tl1sAzOLszfglmkBZS+POYi65fxYGepF5C0Rmc3427dLp+HPl8QSAuq0j92/3LGLOKTjn1qC2\" +\n+                \"MjBNhbkhFhDKnv0VQslmN/nkgDKUSHfQqfMwo4HXFIIydUWxT+5PxFCaS4axzGQ2HYylxqonnU3P0DJkh/omegI36HyxxlMNlpf/zn3/zrwSFvKN\" +\n+                \"CFvbQezJg8jdqq7VEHx4DH6WhYQ02TLsjmcA0EFp1HxTCbJojD/Ixev/Wc5duHotOBiS0CXdJwyzKSQttQS9NGn+/LvUyiD/Z/Rz2r3B0LpQsQu4\" +\n+                \"tI/8F5Jq+QiRgS9cQRnuLZuvAwbSNYI+g+zPdhaZq8fvumWarcQ== apalfi@hortonworks.com\\n\" +\n+                \"\\n\";\n+\n+        ValidationResult validationResult = underTest.validatePublicKey(validKey);\n+        assertFalse(validationResult.hasError());\n+    }\n+\n+    @Test\n+    void testPublicKeyValidationWithBackSlashesInComment() {\n+        String validKey = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDXF9paZtj6ibDgRGtw2jTls1fysxETxG/rbCN9vYlpDw6ROK90rjXnC0qi43kXbs5Z/Ny\" +\n+                \"FDDcYW4U1nUmJCIhQqNJv00ukTbS4McfeNYrZF78KNLtbUP57SfKzjcH1Txz9Zr3ILEADqMyNRzgSB2gw5XnfbbLUFQYcF3hT11gjEw99Qi9eCQ6nC\" +\n+                \"M37iy9tCIfMyB5CI24LECv+8UMFdYw+X9JQXgkAlcPi1zmVNckD6dDGGC2nY9mK7jw0dqZ2W/Q2HvGVgP7iSxnKIFIylifPMz0jmtzpjPi4czgr34\" +\n+                \"d4PFlQsv8LgwWEQMyTJGQmtF3GGa1o/qT07gePY2tl1sAzOLszfglmkBZS+POYi65fxYGepF5C0Rmc3427dLp+HPl8QSAuq0j92/3LGLOKTjn1qC2\" +\n+                \"MjBNhbkhFhDKnv0VQslmN/nkgDKUSHfQqfMwo4HXFIIydUWxT+5PxFCaS4axzGQ2HYylxqonnU3P0DJkh/omegI36HyxxlMNlpf/zn3/zrwSFvKN\" +\n+                \"CFvbQezJg8jdqq7VEHx4DH6WhYQ02TLsjmcA0EFp1HxTCbJojD/Ixev/Wc5duHotOBiS0CXdJwyzKSQttQS9NGn+/LvUyiD/Z/Rz2r3B0LpQsQu4\" +\n+                \"tI/8F5Jq+QiRgS9cQRnuLZuvAwbSNYI+g+zPdhaZq8fvumWarcQ== office01\\\\\\\\en10022@PCL15925\\n\" +\n+                \"\\n\";\n+\n+        ValidationResult validationResult = underTest.validatePublicKey(validKey);\n+        assertFalse(validationResult.hasError());\n+    }\n+\n+    @Test\n+    void testPublicKeyValidationWithNoComment() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc1MzE0", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541275314", "createdAt": "2020-11-30T20:38:02Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozODowMlrOH8M7RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozODowMlrOH8M7RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4ODM4OA==", "bodyText": "would be nice to see the result in test name", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532888388", "createdAt": "2020-11-30T20:38:02Z", "author": {"login": "doktoric"}, "path": "environment/src/test/java/com/sequenceiq/environment/environment/validation/validators/PublicKeyValidatorTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.sequenceiq.environment.environment.validation.validators;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.sequenceiq.cloudbreak.validation.ValidationResult;\n+\n+class PublicKeyValidatorTest {\n+\n+    private final PublicKeyValidator underTest = new PublicKeyValidator();\n+\n+    @Test\n+    void testPublicKeyValidationWithValidKeyAndComment() {\n+        String validKey = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDXF9paZtj6ibDgRGtw2jTls1fysxETxG/rbCN9vYlpDw6ROK90rjXnC0qi43kXbs5Z/Ny\" +\n+                \"FDDcYW4U1nUmJCIhQqNJv00ukTbS4McfeNYrZF78KNLtbUP57SfKzjcH1Txz9Zr3ILEADqMyNRzgSB2gw5XnfbbLUFQYcF3hT11gjEw99Qi9eCQ6nC\" +\n+                \"M37iy9tCIfMyB5CI24LECv+8UMFdYw+X9JQXgkAlcPi1zmVNckD6dDGGC2nY9mK7jw0dqZ2W/Q2HvGVgP7iSxnKIFIylifPMz0jmtzpjPi4czgr34\" +\n+                \"d4PFlQsv8LgwWEQMyTJGQmtF3GGa1o/qT07gePY2tl1sAzOLszfglmkBZS+POYi65fxYGepF5C0Rmc3427dLp+HPl8QSAuq0j92/3LGLOKTjn1qC2\" +\n+                \"MjBNhbkhFhDKnv0VQslmN/nkgDKUSHfQqfMwo4HXFIIydUWxT+5PxFCaS4axzGQ2HYylxqonnU3P0DJkh/omegI36HyxxlMNlpf/zn3/zrwSFvKN\" +\n+                \"CFvbQezJg8jdqq7VEHx4DH6WhYQ02TLsjmcA0EFp1HxTCbJojD/Ixev/Wc5duHotOBiS0CXdJwyzKSQttQS9NGn+/LvUyiD/Z/Rz2r3B0LpQsQu4\" +\n+                \"tI/8F5Jq+QiRgS9cQRnuLZuvAwbSNYI+g+zPdhaZq8fvumWarcQ== apalfi@hortonworks.com\\n\" +\n+                \"\\n\";\n+\n+        ValidationResult validationResult = underTest.validatePublicKey(validKey);\n+        assertFalse(validationResult.hasError());\n+    }\n+\n+    @Test\n+    void testPublicKeyValidationWithBackSlashesInComment() {\n+        String validKey = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDXF9paZtj6ibDgRGtw2jTls1fysxETxG/rbCN9vYlpDw6ROK90rjXnC0qi43kXbs5Z/Ny\" +\n+                \"FDDcYW4U1nUmJCIhQqNJv00ukTbS4McfeNYrZF78KNLtbUP57SfKzjcH1Txz9Zr3ILEADqMyNRzgSB2gw5XnfbbLUFQYcF3hT11gjEw99Qi9eCQ6nC\" +\n+                \"M37iy9tCIfMyB5CI24LECv+8UMFdYw+X9JQXgkAlcPi1zmVNckD6dDGGC2nY9mK7jw0dqZ2W/Q2HvGVgP7iSxnKIFIylifPMz0jmtzpjPi4czgr34\" +\n+                \"d4PFlQsv8LgwWEQMyTJGQmtF3GGa1o/qT07gePY2tl1sAzOLszfglmkBZS+POYi65fxYGepF5C0Rmc3427dLp+HPl8QSAuq0j92/3LGLOKTjn1qC2\" +\n+                \"MjBNhbkhFhDKnv0VQslmN/nkgDKUSHfQqfMwo4HXFIIydUWxT+5PxFCaS4axzGQ2HYylxqonnU3P0DJkh/omegI36HyxxlMNlpf/zn3/zrwSFvKN\" +\n+                \"CFvbQezJg8jdqq7VEHx4DH6WhYQ02TLsjmcA0EFp1HxTCbJojD/Ixev/Wc5duHotOBiS0CXdJwyzKSQttQS9NGn+/LvUyiD/Z/Rz2r3B0LpQsQu4\" +\n+                \"tI/8F5Jq+QiRgS9cQRnuLZuvAwbSNYI+g+zPdhaZq8fvumWarcQ== office01\\\\\\\\en10022@PCL15925\\n\" +\n+                \"\\n\";\n+\n+        ValidationResult validationResult = underTest.validatePublicKey(validKey);\n+        assertFalse(validationResult.hasError());\n+    }\n+\n+    @Test\n+    void testPublicKeyValidationWithNoComment() {\n+        String validKey = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDXF9paZtj6ibDgRGtw2jTls1fysxETxG/rbCN9vYlpDw6ROK90rjXnC0qi43kXbs5Z/Ny\" +\n+                \"FDDcYW4U1nUmJCIhQqNJv00ukTbS4McfeNYrZF78KNLtbUP57SfKzjcH1Txz9Zr3ILEADqMyNRzgSB2gw5XnfbbLUFQYcF3hT11gjEw99Qi9eCQ6nC\" +\n+                \"M37iy9tCIfMyB5CI24LECv+8UMFdYw+X9JQXgkAlcPi1zmVNckD6dDGGC2nY9mK7jw0dqZ2W/Q2HvGVgP7iSxnKIFIylifPMz0jmtzpjPi4czgr34\" +\n+                \"d4PFlQsv8LgwWEQMyTJGQmtF3GGa1o/qT07gePY2tl1sAzOLszfglmkBZS+POYi65fxYGepF5C0Rmc3427dLp+HPl8QSAuq0j92/3LGLOKTjn1qC2\" +\n+                \"MjBNhbkhFhDKnv0VQslmN/nkgDKUSHfQqfMwo4HXFIIydUWxT+5PxFCaS4axzGQ2HYylxqonnU3P0DJkh/omegI36HyxxlMNlpf/zn3/zrwSFvKN\" +\n+                \"CFvbQezJg8jdqq7VEHx4DH6WhYQ02TLsjmcA0EFp1HxTCbJojD/Ixev/Wc5duHotOBiS0CXdJwyzKSQttQS9NGn+/LvUyiD/Z/Rz2r3B0LpQsQu4\" +\n+                \"tI/8F5Jq+QiRgS9cQRnuLZuvAwbSNYI+g+zPdhaZq8fvumWarcQ==\";\n+\n+        ValidationResult validationResult = underTest.validatePublicKey(validKey);\n+        assertFalse(validationResult.hasError());\n+    }\n+\n+    @Test\n+    void testPublicKeyValidationWith45Parts() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc1NTk4", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541275598", "createdAt": "2020-11-30T20:38:30Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozODozMFrOH8M8Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozODozMFrOH8M8Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4ODU5MA==", "bodyText": "based on the regex we should cover more scenario", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532888590", "createdAt": "2020-11-30T20:38:30Z", "author": {"login": "doktoric"}, "path": "environment/src/test/java/com/sequenceiq/environment/environment/validation/validators/PublicKeyValidatorTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.sequenceiq.environment.environment.validation.validators;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.sequenceiq.cloudbreak.validation.ValidationResult;\n+\n+class PublicKeyValidatorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc1OTEz", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541275913", "createdAt": "2020-11-30T20:39:00Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozOTowMFrOH8M89g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozOTowMFrOH8M89g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4ODgyMg==", "bodyText": "why space is here ?", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532888822", "createdAt": "2020-11-30T20:39:00Z", "author": {"login": "doktoric"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/testcase/mock/EnvironmentEditTest.java", "diffHunk": "@@ -66,7 +73,7 @@ public void authenticationEditWhenSetExistingKeyAndDeleteManagedSuccessfully(Moc\n                 .then((tc, t, c) -> {\n                     String publicKeyId = t.getResponse().getAuthentication().getPublicKeyId();\n                     String publicKey = t.getResponse().getAuthentication().getPublicKey();\n-                    if (!\"existing-public-key\".equals(publicKeyId)) {\n+                    if (!\"existing-public-key\" .equals(publicKeyId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc2MTQ0", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541276144", "createdAt": "2020-11-30T20:39:19Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozOToyMFrOH8M9qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozOToyMFrOH8M9qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4OTAwMQ==", "bodyText": "do we need space here ?", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532889001", "createdAt": "2020-11-30T20:39:20Z", "author": {"login": "doktoric"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/testcase/mock/EnvironmentEditTest.java", "diffHunk": "@@ -110,7 +117,7 @@ public void authenticationEditWhenSetManagedKeyAndNotDeleteExisted(MockedTestCon\n                 .then((tc, t, c) -> {\n                     String publicKeyId = t.getResponse().getAuthentication().getPublicKeyId();\n                     String publicKey = t.getResponse().getAuthentication().getPublicKey();\n-                    if (\"existing-public-key\".equals(publicKeyId)) {\n+                    if (\"existing-public-key\" .equals(publicKeyId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc2Nzcw", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541276770", "createdAt": "2020-11-30T20:40:13Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo0MDoxNFrOH8M_sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo0MDoxNFrOH8M_sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4OTUyMg==", "bodyText": "do we need this?", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532889522", "createdAt": "2020-11-30T20:40:14Z", "author": {"login": "doktoric"}, "path": "usage-collection/src/generated/main/java/com/cloudera/thunderhead/service/common/usage/UsageProto.java", "diffHunk": "@@ -42919,7 +42919,7 @@ private CDPEnvironmentsEnvironmentType(\n       YARN(4),\n       /**\n        * <pre>\n-       * YCloud", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjc4Mjcy", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541278272", "createdAt": "2020-11-30T20:42:33Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo0MjozM1rOH8NEVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo0MjozM1rOH8NEVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5MDcxMA==", "bodyText": "why cloudbreak at the end?", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r532890710", "createdAt": "2020-11-30T20:42:33Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/dto/AuthenticationDtoConverter.java", "diffHunk": "@@ -1,16 +1,34 @@\n package com.sequenceiq.environment.environment.dto;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n import org.springframework.stereotype.Component;\n \n+import com.sequenceiq.cloudbreak.validation.ValidationResult;\n import com.sequenceiq.environment.environment.domain.EnvironmentAuthentication;\n+import com.sequenceiq.environment.environment.validation.validators.PublicKeyValidator;\n \n @Component\n public class AuthenticationDtoConverter {\n \n+    private final PublicKeyValidator publicKeyValidator;\n+\n+    public AuthenticationDtoConverter(PublicKeyValidator publicKeyValidator) {\n+        this.publicKeyValidator = publicKeyValidator;\n+    }\n+\n     public EnvironmentAuthentication dtoToAuthentication(AuthenticationDto authenticationDto) {\n         EnvironmentAuthentication environmentAuthentication = new EnvironmentAuthentication();\n+        if (StringUtils.isNotEmpty(authenticationDto.getPublicKey())) {\n+            ValidationResult validationResult = publicKeyValidator.validatePublicKey(authenticationDto.getPublicKey());\n+            if (!validationResult.hasError()) {\n+                List<String> parts = Arrays.asList(StringUtils.split(authenticationDto.getPublicKey(), \" \"));\n+                environmentAuthentication.setPublicKey(String.format(\"%s %s %s\", parts.get(0), parts.get(1), \"cloudbreak\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/326f5ad2f486cdfe29d85e1178db7d116ce273d6", "committedDate": "2020-11-30T17:34:28Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}, "afterCommit": {"oid": "01cacb51a78fb092b3aee35508d255643ec63ab9", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/01cacb51a78fb092b3aee35508d255643ec63ab9", "committedDate": "2020-12-01T11:38:08Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with the login user name which has the default value: \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzk5NjYy", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541799662", "createdAt": "2020-12-01T11:21:36Z", "commit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMToyMTozNlrOH8oGvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMToyMTozNlrOH8oGvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMzMzY5Mg==", "bodyText": "what if we determine the non-matching character with e.g end() and give it back in the validation result? The methods start() and end() will give the indexes into the text where the found match starts and ends. Actually end() returns the index of the character just after the end of the matching section.", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#discussion_r533333692", "createdAt": "2020-12-01T11:21:36Z", "author": {"login": "pdarvasi"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/PublicKeyValidator.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.sequenceiq.environment.environment.validation.validators;\n+\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.validation.ValidationResult;\n+\n+@Component\n+public class PublicKeyValidator {\n+\n+    private static final Set<String> SUPPORTED_ALGORITHMS\n+            = Set.of(\"ssh-rsa\", \"ecdsa-sha2-nistp256\", \"ecdsa-sha2-nistp384\", \"ecdsa-sha2-nistp521\", \"ssh-ed25519\", \"ssh-dss\");\n+\n+    private static final String ALGORITHM_TEXT_LIST = String.join(\", \", SUPPORTED_ALGORITHMS);\n+\n+    private static final Pattern SSH_PUBLIC_KEY_PATTERN = Pattern.compile(\"^(ssh-rsa AAAAB3NzaC1yc2|ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNT|\"\n+            + \"ecdsa-sha2-nistp384 AAAAE2VjZHNhLXNoYTItbmlzdHAzODQAAAAIbmlzdHAzOD|ecdsa-sha2-nistp521 AAAAE2VjZHNhLXNoYTItbmlzdHA1MjEAAAAIbmlzdHA1Mj|\"\n+            + \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5|ssh-dss AAAAB3NzaC1kc3)[0-9A-Za-z+\\\\/]+[=]{0,3}( .*)?$\");\n+\n+    public ValidationResult validatePublicKey(String publicKey) {\n+        ValidationResult.ValidationResultBuilder validationResultBuilder = ValidationResult.builder();\n+        if (StringUtils.isNotEmpty(publicKey)) {\n+            if (!SSH_PUBLIC_KEY_PATTERN.matcher(publicKey.trim()).matches()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5ad2f486cdfe29d85e1178db7d116ce273d6"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01cacb51a78fb092b3aee35508d255643ec63ab9", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/01cacb51a78fb092b3aee35508d255643ec63ab9", "committedDate": "2020-12-01T11:38:08Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with the login user name which has the default value: \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}, "afterCommit": {"oid": "8ac33e98d6a3cfe03f78ae561d25ccc33765ad34", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8ac33e98d6a3cfe03f78ae561d25ccc33765ad34", "committedDate": "2020-12-01T13:05:18Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with the login user name which has the default value: \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxOTgxMTQw", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-541981140", "createdAt": "2020-12-01T14:55:25Z", "commit": {"oid": "8ac33e98d6a3cfe03f78ae561d25ccc33765ad34"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "337e0c8834e2f1f2de722c449a9d7ba65ea47441", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/337e0c8834e2f1f2de722c449a9d7ba65ea47441", "committedDate": "2020-12-01T15:22:10Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with the login user name which has the default value: \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ac33e98d6a3cfe03f78ae561d25ccc33765ad34", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8ac33e98d6a3cfe03f78ae561d25ccc33765ad34", "committedDate": "2020-12-01T13:05:18Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with the login user name which has the default value: \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}, "afterCommit": {"oid": "337e0c8834e2f1f2de722c449a9d7ba65ea47441", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/337e0c8834e2f1f2de722c449a9d7ba65ea47441", "committedDate": "2020-12-01T15:22:10Z", "message": "CB-10013 - added validation to ssh public key registration in environment service\n- Validating for all the supported algorithm for SSH public key and replacing the comment part with the login user name which has the default value: \"cloudbreak\".\n- We had multiple issues with invalid public keys, one particular customer had backslashes in the comment section\nwhich rendered the Azure ARM template invalid. This change will mitigate such errors.\n\nThe regex is based on this: https://gist.github.com/paranoiq/1932126#gistcomment-3211232"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMTMyOTQ3", "url": "https://github.com/hortonworks/cloudbreak/pull/9538#pullrequestreview-542132947", "createdAt": "2020-12-01T17:27:26Z", "commit": {"oid": "337e0c8834e2f1f2de722c449a9d7ba65ea47441"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2065, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}