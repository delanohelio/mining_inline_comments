{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxOTMyOTc2", "number": 9443, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoxODozNlrOE7iWpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoyOTozMVrOE7imSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODY0MjkyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/image/ImageFilterParams.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoxODozNlrOH3PS9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoxODozNlrOH3PS9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4NDM0Mw==", "bodyText": "all of these could be final", "url": "https://github.com/hortonworks/cloudbreak/pull/9443#discussion_r527684343", "createdAt": "2020-11-20T13:18:36Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/image/ImageFilterParams.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.sequenceiq.cloudbreak.service.upgrade.image;\n+\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import com.sequenceiq.cloudbreak.cloud.model.catalog.Image;\n+\n+public class ImageFilterParams {\n+    private Image currentImage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf855287992b672f84f3047f655b7377e9efbb71"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODY2NDYwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoyNDo0MFrOH3PgRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoyNDo0MFrOH3PgRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4Nzc0OQ==", "bodyText": "!checkUpgradeMatrix is not part of the permit logic hence I would extract it to the containing method:\npermitByComponentVersion(currentVersion, newVersion) && (!checkUpgradeMatrix || permitByUpgradeMatrix(currentVersion, newVersion, checkUpgradeMatrix) );", "url": "https://github.com/hortonworks/cloudbreak/pull/9443#discussion_r527687749", "createdAt": "2020-11-20T13:24:40Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java", "diffHunk": "@@ -44,15 +45,15 @@ private boolean permitCmAndStackUpgradeByBuildNumber(Image currentImage, Image i\n         return componentBuildNumberComparator.compare(currentImage, image, buildNumberKey);\n     }\n \n-    boolean permitCmAndStackUpgradeByComponentVersion(String currentVersion, String newVersion) {\n-        return permitByComponentVersion(currentVersion, newVersion) && permitByUpgradeMatrix(currentVersion, newVersion);\n+    boolean permitCmAndStackUpgradeByComponentVersion(String currentVersion, String newVersion, boolean checkUpgradeMatrix) {\n+        return permitByComponentVersion(currentVersion, newVersion) && permitByUpgradeMatrix(currentVersion, newVersion, checkUpgradeMatrix);\n     }\n \n     private boolean permitByComponentVersion(String currentVersion, String newVersion) {\n         return componentVersionComparator.permitCmAndStackUpgradeByComponentVersion(currentVersion, newVersion);\n     }\n \n-    private boolean permitByUpgradeMatrix(String currentVersion, String newVersion) {\n-        return upgradeMatrixService.permitByUpgradeMatrix(currentVersion, newVersion);\n+    private boolean permitByUpgradeMatrix(String currentVersion, String newVersion, boolean checkUpgradeMatrix) {\n+        return !checkUpgradeMatrix || upgradeMatrixService.permitByUpgradeMatrix(currentVersion, newVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf855287992b672f84f3047f655b7377e9efbb71"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODY4Mjk2OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProviderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoyOTozMVrOH3PrUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoyOTozMVrOH3PrUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY5MDU3Ng==", "bodyText": "Could you pls add a test covering checkUpgradeMatrix=false here?", "url": "https://github.com/hortonworks/cloudbreak/pull/9443#discussion_r527690576", "createdAt": "2020-11-20T13:29:31Z", "author": {"login": "pdarvasi"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProviderTest.java", "diffHunk": "@@ -107,11 +112,12 @@ public void testPermitUpgradeShouldReturnFalseWhenTheUpgradeNotPermittedByTheUpg\n         String targetVersion = \"7.2.2\";\n         Image currentImage = createImage(currentVersion, \"2002\");\n         Image candidateImage = createImage(targetVersion, \"2001\");\n+        ImageFilterParams imageFilterParams = new ImageFilterParams(currentImage, true, Map.of(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf855287992b672f84f3047f655b7377e9efbb71"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3600, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}