{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MjkyMTgw", "number": 8804, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDozMjowNlrOEX_pyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjo1Nzo1OFrOEYUWQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTk1NTk0OnYy", "diffSide": "RIGHT", "path": "autoscale/src/main/java/com/sequenceiq/periscope/init/DefaultSubscriptionService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDozMjowNlrOHAFwEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDo1MDo0NFrOHAGTpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg1NjI3Mg==", "bodyText": "Defaulting to the same naming convention as in CB .", "url": "https://github.com/hortonworks/cloudbreak/pull/8804#discussion_r469856272", "createdAt": "2020-08-13T10:32:06Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/init/DefaultSubscriptionService.java", "diffHunk": "@@ -19,7 +19,7 @@\n \n     private static final String DEFAULT_CLIENT_ID = \"default\";\n \n-    @Value(\"${cb.default.subscription.address:}\")\n+    @Value(\"${cb.notification.endpoint:}\")\n     private String defaultSubscriptionAddress;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b1e6135231493c39eb106c7edc2e21b3b69fce"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg2NTM4Mw==", "bodyText": "This will also be initialized with pod specific environment value in dps-k8s repository as done in CB.", "url": "https://github.com/hortonworks/cloudbreak/pull/8804#discussion_r469865383", "createdAt": "2020-08-13T10:50:44Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/init/DefaultSubscriptionService.java", "diffHunk": "@@ -19,7 +19,7 @@\n \n     private static final String DEFAULT_CLIENT_ID = \"default\";\n \n-    @Value(\"${cb.default.subscription.address:}\")\n+    @Value(\"${cb.notification.endpoint:}\")\n     private String defaultSubscriptionAddress;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg1NjI3Mg=="}, "originalCommit": {"oid": "91b1e6135231493c39eb106c7edc2e21b3b69fce"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjY3Njg5OnYy", "diffSide": "RIGHT", "path": "autoscale/src/main/resources/application.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo1Mjo1MFrOHAMjGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo1Mjo1MFrOHAMjGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2NzY0MQ==", "bodyText": "Defaulting to same naming convention as in CB i.e periscope.notification.endpoint.\nThis will also be initialized with pod specific environment value in dps-k8s repository as done in CB.", "url": "https://github.com/hortonworks/cloudbreak/pull/8804#discussion_r469967641", "createdAt": "2020-08-13T13:52:50Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/resources/application.yml", "diffHunk": "@@ -44,6 +44,8 @@ periscope:\n       addr: localhost\n       port: 5432\n   cloudbreak.url: http://localhost:9091\n+  notification:\n+    endpoint: http://localhost:3000/notifications\n   entitlementCheckEnabled: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "281daf11dcfddf3c4af2d8c03248f9a26edc36d2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTM0NjU5OnYy", "diffSide": "RIGHT", "path": "autoscale/src/main/java/com/sequenceiq/periscope/notification/HttpNotificationSender.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjo1Nzo1OFrOHAl3zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNzoyNTo0OFrOHAqVgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4MjU0MA==", "bodyText": "How will this be rendered on the UI?\ni.e. Will the UI show the eventMessage, or the eventPayload?, and if the eventPayload - is AutoScaleClusterResponse too much information?\nSimilarly for sendConfigUpdateNotification", "url": "https://github.com/hortonworks/cloudbreak/pull/8804#discussion_r470382540", "createdAt": "2020-08-14T02:57:58Z", "author": {"login": "sidseth"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/notification/HttpNotificationSender.java", "diffHunk": "@@ -26,19 +32,43 @@\n     @Inject\n     private SubscriptionRepository subscriptionRepository;\n \n+    @Inject\n+    private CloudbreakMessagesService messagesService;\n+\n+    @Inject\n+    private HistoryConverter historyConverter;\n+\n+    @Inject\n+    private DistroXAutoscaleClusterResponseConverter autoscaleClusterResponseConverter;\n+\n     private final Client restClient = RestClientUtil.get(new ConfigKey(false, false, false));\n \n-    public void send(Cluster cluster, History history) {\n-        send(convertHistory(cluster, history));\n+    public void sendHistoryUpdateNotification(History historyUpdate, Cluster cluster) {\n+        Notification historyNotification = new Notification();\n+        historyNotification.setTenantName(cluster.getClusterPertain().getTenant());\n+        historyNotification.setEventType(NotificationType.AUTOSCALE_HISTORY_UPDATE.name());\n+        historyNotification.setEventTimestamp(historyUpdate.getTimestamp());\n+        historyNotification.setEventMessage(\n+                messagesService.getMessage(MessageCode.NOTIFICATION_HISTORY_UPDATE));\n+\n+        AutoscaleClusterHistoryResponse historyResponse = historyConverter.convert(historyUpdate);\n+        historyNotification.setPayload(historyResponse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "281daf11dcfddf3c4af2d8c03248f9a26edc36d2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ0NDgxNw==", "bodyText": "the eventPayload will be used by the UI to update the tab, so to update the Autoscaling Configuration : AutoScaleClusterResponse would be required. Like if CLI updates config, UI updates config without page refresh.", "url": "https://github.com/hortonworks/cloudbreak/pull/8804#discussion_r470444817", "createdAt": "2020-08-14T06:58:15Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/notification/HttpNotificationSender.java", "diffHunk": "@@ -26,19 +32,43 @@\n     @Inject\n     private SubscriptionRepository subscriptionRepository;\n \n+    @Inject\n+    private CloudbreakMessagesService messagesService;\n+\n+    @Inject\n+    private HistoryConverter historyConverter;\n+\n+    @Inject\n+    private DistroXAutoscaleClusterResponseConverter autoscaleClusterResponseConverter;\n+\n     private final Client restClient = RestClientUtil.get(new ConfigKey(false, false, false));\n \n-    public void send(Cluster cluster, History history) {\n-        send(convertHistory(cluster, history));\n+    public void sendHistoryUpdateNotification(History historyUpdate, Cluster cluster) {\n+        Notification historyNotification = new Notification();\n+        historyNotification.setTenantName(cluster.getClusterPertain().getTenant());\n+        historyNotification.setEventType(NotificationType.AUTOSCALE_HISTORY_UPDATE.name());\n+        historyNotification.setEventTimestamp(historyUpdate.getTimestamp());\n+        historyNotification.setEventMessage(\n+                messagesService.getMessage(MessageCode.NOTIFICATION_HISTORY_UPDATE));\n+\n+        AutoscaleClusterHistoryResponse historyResponse = historyConverter.convert(historyUpdate);\n+        historyNotification.setPayload(historyResponse);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4MjU0MA=="}, "originalCommit": {"oid": "281daf11dcfddf3c4af2d8c03248f9a26edc36d2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1MDU2MA==", "bodyText": "What will the UI display? You had simplified the status message previously so that it could be the one line which is shown on the UI/CLI.", "url": "https://github.com/hortonworks/cloudbreak/pull/8804#discussion_r470450560", "createdAt": "2020-08-14T07:13:21Z", "author": {"login": "sidseth"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/notification/HttpNotificationSender.java", "diffHunk": "@@ -26,19 +32,43 @@\n     @Inject\n     private SubscriptionRepository subscriptionRepository;\n \n+    @Inject\n+    private CloudbreakMessagesService messagesService;\n+\n+    @Inject\n+    private HistoryConverter historyConverter;\n+\n+    @Inject\n+    private DistroXAutoscaleClusterResponseConverter autoscaleClusterResponseConverter;\n+\n     private final Client restClient = RestClientUtil.get(new ConfigKey(false, false, false));\n \n-    public void send(Cluster cluster, History history) {\n-        send(convertHistory(cluster, history));\n+    public void sendHistoryUpdateNotification(History historyUpdate, Cluster cluster) {\n+        Notification historyNotification = new Notification();\n+        historyNotification.setTenantName(cluster.getClusterPertain().getTenant());\n+        historyNotification.setEventType(NotificationType.AUTOSCALE_HISTORY_UPDATE.name());\n+        historyNotification.setEventTimestamp(historyUpdate.getTimestamp());\n+        historyNotification.setEventMessage(\n+                messagesService.getMessage(MessageCode.NOTIFICATION_HISTORY_UPDATE));\n+\n+        AutoscaleClusterHistoryResponse historyResponse = historyConverter.convert(historyUpdate);\n+        historyNotification.setPayload(historyResponse);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4MjU0MA=="}, "originalCommit": {"oid": "281daf11dcfddf3c4af2d8c03248f9a26edc36d2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1NTY4Mg==", "bodyText": "There are two use-cases here. One is Autoscaling-History Update, one is Autoscaling-Config Update. The payload for both of these notifications is same as DistroxAutoscaler API Response i.e (DistroXAutoscaleClusterResponse and AutoscaleClusterHistoryResponse) as suggested by UI team.", "url": "https://github.com/hortonworks/cloudbreak/pull/8804#discussion_r470455682", "createdAt": "2020-08-14T07:25:48Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/notification/HttpNotificationSender.java", "diffHunk": "@@ -26,19 +32,43 @@\n     @Inject\n     private SubscriptionRepository subscriptionRepository;\n \n+    @Inject\n+    private CloudbreakMessagesService messagesService;\n+\n+    @Inject\n+    private HistoryConverter historyConverter;\n+\n+    @Inject\n+    private DistroXAutoscaleClusterResponseConverter autoscaleClusterResponseConverter;\n+\n     private final Client restClient = RestClientUtil.get(new ConfigKey(false, false, false));\n \n-    public void send(Cluster cluster, History history) {\n-        send(convertHistory(cluster, history));\n+    public void sendHistoryUpdateNotification(History historyUpdate, Cluster cluster) {\n+        Notification historyNotification = new Notification();\n+        historyNotification.setTenantName(cluster.getClusterPertain().getTenant());\n+        historyNotification.setEventType(NotificationType.AUTOSCALE_HISTORY_UPDATE.name());\n+        historyNotification.setEventTimestamp(historyUpdate.getTimestamp());\n+        historyNotification.setEventMessage(\n+                messagesService.getMessage(MessageCode.NOTIFICATION_HISTORY_UPDATE));\n+\n+        AutoscaleClusterHistoryResponse historyResponse = historyConverter.convert(historyUpdate);\n+        historyNotification.setPayload(historyResponse);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4MjU0MA=="}, "originalCommit": {"oid": "281daf11dcfddf3c4af2d8c03248f9a26edc36d2"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2389, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}