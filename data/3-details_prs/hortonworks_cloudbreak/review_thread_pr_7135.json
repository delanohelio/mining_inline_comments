{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDY4NDMy", "number": 7135, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxOToyOVrODaP_2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoyMDo0MFrODaQBOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODUxNjczOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxOToyOVrOFhGTGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxOToyOVrOFhGTGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1MDUyMQ==", "bodyText": "please move this condition into the status as a method, so you don't have the implementation twice", "url": "https://github.com/hortonworks/cloudbreak/pull/7135#discussion_r370250521", "createdAt": "2020-01-23T17:19:29Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "diffHunk": "@@ -71,25 +72,43 @@ private String toClusterProxyBasepath(String freeIpaClusterCrn) {\n \n     public FreeIpaClient getFreeIpaClientForStack(Stack stack) throws FreeIpaClientException {\n         LOGGER.debug(\"Creating FreeIpaClient for stack {}\", stack.getResourceCrn());\n-\n-        try {\n-            if (clusterProxyService.isCreateConfigForClusterProxy(stack)) {\n-                return getFreeIpaClientBuilderForClusterProxy(stack).build();\n-            } else {\n-                return getFreeIpaClientBuilder(stack).build();\n+        Status stackStatus = stack.getStackStatus().getStatus();\n+        if (!Status.FREEIPA_UNREACHABLE_STATUSES.contains(stackStatus)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f3ae446512af6bdf7ed56695ff0471e795f232"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODUyMDI2OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoyMDo0MFrOFhGVRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoyMDo0MFrOFhGVRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1MTA3Ng==", "bodyText": "this else branch can be moved into a separate method", "url": "https://github.com/hortonworks/cloudbreak/pull/7135#discussion_r370251076", "createdAt": "2020-01-23T17:20:40Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "diffHunk": "@@ -71,25 +72,43 @@ private String toClusterProxyBasepath(String freeIpaClusterCrn) {\n \n     public FreeIpaClient getFreeIpaClientForStack(Stack stack) throws FreeIpaClientException {\n         LOGGER.debug(\"Creating FreeIpaClient for stack {}\", stack.getResourceCrn());\n-\n-        try {\n-            if (clusterProxyService.isCreateConfigForClusterProxy(stack)) {\n-                return getFreeIpaClientBuilderForClusterProxy(stack).build();\n-            } else {\n-                return getFreeIpaClientBuilder(stack).build();\n+        Status stackStatus = stack.getStackStatus().getStatus();\n+        if (!Status.FREEIPA_UNREACHABLE_STATUSES.contains(stackStatus)) {\n+            try {\n+                if (clusterProxyService.isCreateConfigForClusterProxy(stack)) {\n+                    return getFreeIpaClientBuilderForClusterProxy(stack).build();\n+                } else {\n+                    return getFreeIpaClientBuilder(stack).build();\n+                }\n+            } catch (Exception e) {\n+                throw new FreeIpaClientException(\"Couldn't build FreeIPA client. \"\n+                        + \"Check if the FreeIPA security rules have not changed and the instance is in running state. \" + e.getLocalizedMessage(), e);\n             }\n-        } catch (Exception e) {\n-            throw new FreeIpaClientException(\"Couldn't build FreeIPA client. \"\n-                    + \"Check if the FreeIPA security rules have not changed and the instance is in running state. \" + e.getLocalizedMessage(), e);\n+        } else {\n+            String message = String.format(\"Couldn't build FreeIPA client. Because FreeIPA is in invalid state: '%s'\", stackStatus);\n+            LOGGER.warn(message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f3ae446512af6bdf7ed56695ff0471e795f232"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2875, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}