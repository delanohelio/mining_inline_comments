{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NTYxNjY0", "number": 8653, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToyNjoyMFrOEUkWgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToyNjoyMFrOEUkWgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDAyNTYwOnYy", "diffSide": "RIGHT", "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/platformresource/EnvironmentPlatformResourceEndpoint.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToyNjoyMFrOG615Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMTozMTowNlrOG62BIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1MzU1NA==", "bodyText": "Aren't these (region, platformVariant, availabilityZone) redundant from environment perspective?", "url": "https://github.com/hortonworks/cloudbreak/pull/8653#discussion_r464353554", "createdAt": "2020-08-03T11:26:20Z", "author": {"login": "lnardai"}, "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/platformresource/EnvironmentPlatformResourceEndpoint.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package com.sequenceiq.environment.api.v1.platformresource;\n+\n+import static com.sequenceiq.environment.api.doc.ModelDescriptions.CONNECTOR_NOTES;\n+\n+import javax.validation.constraints.NotEmpty;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DefaultValue;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.MediaType;\n+\n+import com.sequenceiq.cloudbreak.jerseyclient.RetryAndMetrics;\n+import com.sequenceiq.common.api.type.CdpResourceType;\n+import com.sequenceiq.environment.api.v1.platformresource.PlatformResourceModelDescription.OpEnvDescription;\n+import com.sequenceiq.environment.api.v1.platformresource.model.AccessConfigTypeQueryParam;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformAccessConfigsResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformEncryptionKeysResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformGatewaysResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformIpPoolsResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformNetworksResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformNoSqlTablesResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformResourceGroupsResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformSecurityGroupsResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformSshKeysResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformVmtypesResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.RegionResponse;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+\n+@RetryAndMetrics\n+@Path(\"/v1/env/platform_resources\")\n+@Consumes(MediaType.APPLICATION_JSON)\n+@Api(value = \"/v1/env/platform_resources\", description = PlatformResourceModelDescription.CONNECTOR_V1_DESCRIPTION, protocols = \"http,https\",\n+        consumes = MediaType.APPLICATION_JSON)\n+public interface EnvironmentPlatformResourceEndpoint {\n+\n+    @GET\n+    @Path(\"machine_types\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = OpEnvDescription.GET_VMTYPES_BY_CREDENTIAL, produces = MediaType.APPLICATION_JSON, notes = CONNECTOR_NOTES,\n+            nickname = \"getVmTypesByCredentialByEnv\")\n+    PlatformVmtypesResponse getVmTypesByCredential(\n+            @QueryParam(\"environmentCrn\") @NotEmpty String environmentCrn,\n+            @QueryParam(\"region\") String region,\n+            @QueryParam(\"platformVariant\") String platformVariant,\n+            @QueryParam(\"availabilityZone\") String availabilityZone,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8f8f3a0577bc0fe74fafb394059c52147d1007"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1NTYxNw==", "bodyText": "Possibly, to be honest, I didn't checked, only duplicated the API with environment CRN change, we can spend more time to check it and make it easier to use", "url": "https://github.com/hortonworks/cloudbreak/pull/8653#discussion_r464355617", "createdAt": "2020-08-03T11:31:06Z", "author": {"login": "horadla23"}, "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/platformresource/EnvironmentPlatformResourceEndpoint.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package com.sequenceiq.environment.api.v1.platformresource;\n+\n+import static com.sequenceiq.environment.api.doc.ModelDescriptions.CONNECTOR_NOTES;\n+\n+import javax.validation.constraints.NotEmpty;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DefaultValue;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.MediaType;\n+\n+import com.sequenceiq.cloudbreak.jerseyclient.RetryAndMetrics;\n+import com.sequenceiq.common.api.type.CdpResourceType;\n+import com.sequenceiq.environment.api.v1.platformresource.PlatformResourceModelDescription.OpEnvDescription;\n+import com.sequenceiq.environment.api.v1.platformresource.model.AccessConfigTypeQueryParam;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformAccessConfigsResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformEncryptionKeysResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformGatewaysResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformIpPoolsResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformNetworksResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformNoSqlTablesResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformResourceGroupsResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformSecurityGroupsResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformSshKeysResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.PlatformVmtypesResponse;\n+import com.sequenceiq.environment.api.v1.platformresource.model.RegionResponse;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+\n+@RetryAndMetrics\n+@Path(\"/v1/env/platform_resources\")\n+@Consumes(MediaType.APPLICATION_JSON)\n+@Api(value = \"/v1/env/platform_resources\", description = PlatformResourceModelDescription.CONNECTOR_V1_DESCRIPTION, protocols = \"http,https\",\n+        consumes = MediaType.APPLICATION_JSON)\n+public interface EnvironmentPlatformResourceEndpoint {\n+\n+    @GET\n+    @Path(\"machine_types\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = OpEnvDescription.GET_VMTYPES_BY_CREDENTIAL, produces = MediaType.APPLICATION_JSON, notes = CONNECTOR_NOTES,\n+            nickname = \"getVmTypesByCredentialByEnv\")\n+    PlatformVmtypesResponse getVmTypesByCredential(\n+            @QueryParam(\"environmentCrn\") @NotEmpty String environmentCrn,\n+            @QueryParam(\"region\") String region,\n+            @QueryParam(\"platformVariant\") String platformVariant,\n+            @QueryParam(\"availabilityZone\") String availabilityZone,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1MzU1NA=="}, "originalCommit": {"oid": "4e8f8f3a0577bc0fe74fafb394059c52147d1007"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2971, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}