{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNzkwOTY3", "number": 9190, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToxNjoxOFrOEsMw9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNzozMDowMlrOEvLh1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzgxOTQxOnYy", "diffSide": "RIGHT", "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToxNjoxOFrOHfY1bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzowMToyMVrOHhR06w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDc5Ng==", "bodyText": "shouldn't the stack be available if it has the UPSCALE_COMPLETED, DOWNSCALE_COMPLETED, or REPAIR_COMPLETED status? There are places we check whether a stack is available before performing an operation on it.", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r502674796", "createdAt": "2020-10-09T21:16:18Z", "author": {"login": "handavid"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -33,10 +41,10 @@\n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0abee58dc4e10d75b310a4ac11ce7869ec568850"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE3NDQ0Nw==", "bodyText": "I would stick with AVAILABLE and won't introduce new states representing the same. What's the benefit of this?", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r503174447", "createdAt": "2020-10-12T09:47:24Z", "author": {"login": "lacikaaa"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -33,10 +41,10 @@\n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDc5Ng=="}, "originalCommit": {"oid": "0abee58dc4e10d75b310a4ac11ce7869ec568850"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4NzY4NQ==", "bodyText": "Hi @handavid and @lacikaaa , thanks for the review!\nThe reason we are changing the finishing status of a repair operation is because an operation will always change the status to running/available even operation failed or freeipa is unhealthy. So we will have a period where the available status is falsely reported.\n\nOne example,\nIssue a reboot/repair operation\n\nThen instances are terminated so reboot/repair operation failed. But the operation will update status to running.\n\nAfter 3 minutes, the actually health check find out freeipa is not running.\n\nWith this fix, the false running status will not be reported before a health check.", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r503387685", "createdAt": "2020-10-12T15:54:20Z", "author": {"login": "christmasferret"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -33,10 +41,10 @@\n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDc5Ng=="}, "originalCommit": {"oid": "0abee58dc4e10d75b310a4ac11ce7869ec568850"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc0ODc1MA==", "bodyText": "ok so we would let the statuschecker to determine the status? in case of failed this seems right to me. Although it's a bit strange if we run repair/upscale/downscale and the flow finishes successfully and we can't expect the cluster is in a healthy state. It means the flow exit criteria isn't checking if it's job is done well. This just seems like a workaround to me, instead of fixing the flow (if it needs fixing)\ncc @jamisonbennett", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r503748750", "createdAt": "2020-10-13T08:06:25Z", "author": {"login": "lacikaaa"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -33,10 +41,10 @@\n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDc5Ng=="}, "originalCommit": {"oid": "0abee58dc4e10d75b310a4ac11ce7869ec568850"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NzEzMQ==", "bodyText": "hi @lacikaaa,\nThanks a lot for the suggestion! I have removed the \"repair completed\" status, at the end of a successful repair flow, I added statuschecker to determine the status. I've verified both reboot and repair as below.\nIssue a reboot\n\nat the end of the reboot flow, the statuschecker update it to available.\n\n\nIssue a repair,\n\nat the end of repair flow, status checker update it to available", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r504657131", "createdAt": "2020-10-14T13:01:21Z", "author": {"login": "christmasferret"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -33,10 +41,10 @@\n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDc5Ng=="}, "originalCommit": {"oid": "0abee58dc4e10d75b310a4ac11ce7869ec568850"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzgyMTM0OnYy", "diffSide": "RIGHT", "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToxNzowMlrOHfY2jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMTozMDoxMlrOHknUQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NTA4Nw==", "bodyText": "should UPSCALE_COMPLETED, DOWNSCALE_COMPLETED, and REPAIR_COMPLETED also be removable? I'm not sure what isRemovable is used for.", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r502675087", "createdAt": "2020-10-09T21:17:02Z", "author": {"login": "handavid"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -33,10 +41,10 @@\n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);\n \n     public static final Collection<Status> REMOVABLE_STATUSES = List.of(AVAILABLE, UPDATE_FAILED, CREATE_FAILED, DELETE_FAILED,\n-            DELETE_COMPLETED, STOPPED, START_FAILED, STOP_FAILED);\n+            DELETE_COMPLETED, STOPPED, START_FAILED, STOP_FAILED, REPAIR_FAILED, UPSCALE_FAILED, DOWNSCALE_FAILED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0abee58dc4e10d75b310a4ac11ce7869ec568850"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2MDQ0OQ==", "bodyText": "If it is removable status, we will delete the freeipa stack from in memory cache. I am reverting this part of code change as in the repair case we can leave it in cache.\n    if (newStatus.isRemovableStatus()) {\n        InMemoryStateStore.deleteStack(stack.getId());\n    }", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r503560449", "createdAt": "2020-10-12T22:13:37Z", "author": {"login": "christmasferret"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -33,10 +41,10 @@\n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);\n \n     public static final Collection<Status> REMOVABLE_STATUSES = List.of(AVAILABLE, UPDATE_FAILED, CREATE_FAILED, DELETE_FAILED,\n-            DELETE_COMPLETED, STOPPED, START_FAILED, STOP_FAILED);\n+            DELETE_COMPLETED, STOPPED, START_FAILED, STOP_FAILED, REPAIR_FAILED, UPSCALE_FAILED, DOWNSCALE_FAILED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NTA4Nw=="}, "originalCommit": {"oid": "0abee58dc4e10d75b310a4ac11ce7869ec568850"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc0MzIzNA==", "bodyText": "All new FAILED, COMPLETED statuses should be added to REMOVABLE_STATUSES as this indicates these are final states, no flow should be running for these stack and they can be removed from the InMemoryStateStore.", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r503743234", "createdAt": "2020-10-13T07:57:18Z", "author": {"login": "lacikaaa"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -33,10 +41,10 @@\n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);\n \n     public static final Collection<Status> REMOVABLE_STATUSES = List.of(AVAILABLE, UPDATE_FAILED, CREATE_FAILED, DELETE_FAILED,\n-            DELETE_COMPLETED, STOPPED, START_FAILED, STOP_FAILED);\n+            DELETE_COMPLETED, STOPPED, START_FAILED, STOP_FAILED, REPAIR_FAILED, UPSCALE_FAILED, DOWNSCALE_FAILED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NTA4Nw=="}, "originalCommit": {"oid": "0abee58dc4e10d75b310a4ac11ce7869ec568850"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1OTY0Mg==", "bodyText": "Thanks for the suggestion! Now I added all the status to REMOVABLE_STATUSES. Since I have removed \"repair completed\", I use statuschecker to update it to available status.", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r504659642", "createdAt": "2020-10-14T13:05:04Z", "author": {"login": "christmasferret"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -33,10 +41,10 @@\n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);\n \n     public static final Collection<Status> REMOVABLE_STATUSES = List.of(AVAILABLE, UPDATE_FAILED, CREATE_FAILED, DELETE_FAILED,\n-            DELETE_COMPLETED, STOPPED, START_FAILED, STOP_FAILED);\n+            DELETE_COMPLETED, STOPPED, START_FAILED, STOP_FAILED, REPAIR_FAILED, UPSCALE_FAILED, DOWNSCALE_FAILED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NTA4Nw=="}, "originalCommit": {"oid": "0abee58dc4e10d75b310a4ac11ce7869ec568850"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1NDk0NQ==", "bodyText": "I added the newly added failed states (REPAIR_FAILED, UPSCALE_FAILED, DOWNSCALE_FAILED) to removable states now. Thanks!", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r508154945", "createdAt": "2020-10-20T01:30:12Z", "author": {"login": "christmasferret"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -33,10 +41,10 @@\n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);\n \n     public static final Collection<Status> REMOVABLE_STATUSES = List.of(AVAILABLE, UPDATE_FAILED, CREATE_FAILED, DELETE_FAILED,\n-            DELETE_COMPLETED, STOPPED, START_FAILED, STOP_FAILED);\n+            DELETE_COMPLETED, STOPPED, START_FAILED, STOP_FAILED, REPAIR_FAILED, UPSCALE_FAILED, DOWNSCALE_FAILED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NTA4Nw=="}, "originalCommit": {"oid": "0abee58dc4e10d75b310a4ac11ce7869ec568850"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2Mjk5NzkzOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/flow/freeipa/repair/changeprimarygw/action/ChangePrimaryGatewayActions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMDoxOTowMFrOHhjkbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMTozMjozMlrOHknWpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk0NzgyMQ==", "bodyText": "this if can be combined with the if starting on line 162.", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r504947821", "createdAt": "2020-10-14T20:19:00Z", "author": {"login": "handavid"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/flow/freeipa/repair/changeprimarygw/action/ChangePrimaryGatewayActions.java", "diffHunk": "@@ -150,7 +154,11 @@ protected void doExecute(ChangePrimaryGatewayContext context, StackEvent payload\n                 Stack stack = context.getStack();\n                 SuccessDetails successDetails = new SuccessDetails(stack.getEnvironmentCrn());\n \n-                stackUpdater.updateStackStatus(stack.getId(), getChangePrimaryGatewayCompleteStatus(variables), \"Finished changing the primary gateway\");\n+                if (isFinalChain(variables)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f49d3dd48b3a51c62287dcda4a0ea598260b937"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1NTU1Ng==", "bodyText": "Thanks a lot for the suggestion. I've combined the two \"if\"s and tested the flow again.\nAfter repair, the status check updates it to available.", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r508155556", "createdAt": "2020-10-20T01:32:32Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/flow/freeipa/repair/changeprimarygw/action/ChangePrimaryGatewayActions.java", "diffHunk": "@@ -150,7 +154,11 @@ protected void doExecute(ChangePrimaryGatewayContext context, StackEvent payload\n                 Stack stack = context.getStack();\n                 SuccessDetails successDetails = new SuccessDetails(stack.getEnvironmentCrn());\n \n-                stackUpdater.updateStackStatus(stack.getId(), getChangePrimaryGatewayCompleteStatus(variables), \"Finished changing the primary gateway\");\n+                if (isFinalChain(variables)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk0NzgyMQ=="}, "originalCommit": {"oid": "5f49d3dd48b3a51c62287dcda4a0ea598260b937"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTA1OTM5OnYy", "diffSide": "RIGHT", "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNzoyNTo0OFrOHkA_mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMTozODo1MFrOHknc1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyNzA2NQ==", "bodyText": "still missing the failure states from here", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r507527065", "createdAt": "2020-10-19T07:25:48Z", "author": {"login": "lacikaaa"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -32,11 +37,11 @@\n \n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);\n \n-    public static final Collection<Status> REMOVABLE_STATUSES = List.of(AVAILABLE, UPDATE_FAILED, CREATE_FAILED, DELETE_FAILED,\n+    public static final Collection<Status>  REMOVABLE_STATUSES = List.of(AVAILABLE, UPDATE_FAILED, CREATE_FAILED, DELETE_FAILED,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f49d3dd48b3a51c62287dcda4a0ea598260b937"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1NzE0MQ==", "bodyText": "I added the newly added failed states (REPAIR_FAILED, UPSCALE_FAILED, DOWNSCALE_FAILED) to removable states now. Thanks!", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r508157141", "createdAt": "2020-10-20T01:38:50Z", "author": {"login": "christmasferret"}, "path": "freeipa-api/src/main/java/com/sequenceiq/freeipa/api/v1/freeipa/stack/model/common/Status.java", "diffHunk": "@@ -32,11 +37,11 @@\n \n     public static final Collection<Status> AVAILABLE_STATUSES = List.of(AVAILABLE, MAINTENANCE_MODE_ENABLED);\n \n-    public static final Collection<Status> REMOVABLE_STATUSES = List.of(AVAILABLE, UPDATE_FAILED, CREATE_FAILED, DELETE_FAILED,\n+    public static final Collection<Status>  REMOVABLE_STATUSES = List.of(AVAILABLE, UPDATE_FAILED, CREATE_FAILED, DELETE_FAILED,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyNzA2NQ=="}, "originalCommit": {"oid": "5f49d3dd48b3a51c62287dcda4a0ea598260b937"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTA3NDEyOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/flow/freeipa/repair/changeprimarygw/action/ChangePrimaryGatewayActions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNzozMDowMlrOHkBINw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMTozOTozMlrOHkndpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyOTI3MQ==", "bodyText": "getChangePrimaryGatewayCompleteStatus implementation also checks isFinalChain(variables) which doesn't make too much sense after this change. most probably you should replace the method call with DetailedStackStatus.REPAIR_IN_PROGRESS", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r507529271", "createdAt": "2020-10-19T07:30:02Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/flow/freeipa/repair/changeprimarygw/action/ChangePrimaryGatewayActions.java", "diffHunk": "@@ -150,7 +154,11 @@ protected void doExecute(ChangePrimaryGatewayContext context, StackEvent payload\n                 Stack stack = context.getStack();\n                 SuccessDetails successDetails = new SuccessDetails(stack.getEnvironmentCrn());\n \n-                stackUpdater.updateStackStatus(stack.getId(), getChangePrimaryGatewayCompleteStatus(variables), \"Finished changing the primary gateway\");\n+                if (isFinalChain(variables)) {\n+                    stackStatusCheckerJob.syncAStack(stack);\n+                } else {\n+                    stackUpdater.updateStackStatus(stack.getId(), getChangePrimaryGatewayCompleteStatus(variables), \"Finished changing the primary gateway\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f49d3dd48b3a51c62287dcda4a0ea598260b937"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1NzM1MA==", "bodyText": "Thanks! I removed the method getChangePrimaryGatewayCompleteStatus() since it is not necessary and I use DetailedStackStatus.REPAIR_IN_PROGRESS directly. I tested the repair flow again and attached evidence below.", "url": "https://github.com/hortonworks/cloudbreak/pull/9190#discussion_r508157350", "createdAt": "2020-10-20T01:39:32Z", "author": {"login": "christmasferret"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/flow/freeipa/repair/changeprimarygw/action/ChangePrimaryGatewayActions.java", "diffHunk": "@@ -150,7 +154,11 @@ protected void doExecute(ChangePrimaryGatewayContext context, StackEvent payload\n                 Stack stack = context.getStack();\n                 SuccessDetails successDetails = new SuccessDetails(stack.getEnvironmentCrn());\n \n-                stackUpdater.updateStackStatus(stack.getId(), getChangePrimaryGatewayCompleteStatus(variables), \"Finished changing the primary gateway\");\n+                if (isFinalChain(variables)) {\n+                    stackStatusCheckerJob.syncAStack(stack);\n+                } else {\n+                    stackUpdater.updateStackStatus(stack.getId(), getChangePrimaryGatewayCompleteStatus(variables), \"Finished changing the primary gateway\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyOTI3MQ=="}, "originalCommit": {"oid": "5f49d3dd48b3a51c62287dcda4a0ea598260b937"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2126, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}