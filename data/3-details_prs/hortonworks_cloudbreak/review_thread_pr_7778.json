{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNDEyMjY5", "number": 7778, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNToyMjoyMlrODxfA5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNToyMjoyMlrODxfA5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMjE0OTQ5OnYy", "diffSide": "LEFT", "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNToyMjoyMlrOGE-ojQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMToxNjozNlrOGGRDbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg3MzY3Nw==", "bodyText": "Can you please remove these 2 types from RecipeExecutionPhase as well?", "url": "https://github.com/hortonworks/cloudbreak/pull/7778#discussion_r407873677", "createdAt": "2020-04-14T05:22:22Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java", "diffHunk": "@@ -841,50 +841,28 @@ private void runNewService(SaltConnector sc, BaseSaltJobRunner baseSaltJobRunner\n     @SuppressFBWarnings(\"REC_CATCH_EXCEPTION\")\n     private void executeRecipes(GatewayConfig gatewayConfig, Set<Node> allNodes, ExitCriteriaModel exitCriteriaModel, RecipeExecutionPhase phase, boolean forced)\n             throws CloudbreakOrchestratorFailedException, CloudbreakOrchestratorTimeoutException {\n-        boolean postRecipe = phase.isPostRecipe();\n         int maxRetry = forced ? maxRetryRecipeForced : maxRetryRecipe;\n         try (SaltConnector sc = createSaltConnector(gatewayConfig)) {\n             // add 'recipe' grain to all nodes\n             Set<String> targetHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n             saltCommandRunner.runSaltCommand(sc, new GrainAddRunner(targetHostnames, allNodes, \"recipes\", phase.value()), exitCriteriaModel, maxRetry,\n                     exitCriteria);\n-\n-            // Add Deprecated 'PRE/POST' recipe execution for backward compatibility (since version 2.2.0)\n-            if (postRecipe) {\n-                saltCommandRunner.runSaltCommand(sc, new GrainAddRunner(targetHostnames, allNodes, \"recipes\", RecipeExecutionPhase.POST.value()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43a3c6667a111ac3daed9ceaca0c3c82f0d4107a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIyNDA0Nw==", "bodyText": "Thanks, done.", "url": "https://github.com/hortonworks/cloudbreak/pull/7778#discussion_r409224047", "createdAt": "2020-04-16T01:16:36Z", "author": {"login": "cegganesh84"}, "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java", "diffHunk": "@@ -841,50 +841,28 @@ private void runNewService(SaltConnector sc, BaseSaltJobRunner baseSaltJobRunner\n     @SuppressFBWarnings(\"REC_CATCH_EXCEPTION\")\n     private void executeRecipes(GatewayConfig gatewayConfig, Set<Node> allNodes, ExitCriteriaModel exitCriteriaModel, RecipeExecutionPhase phase, boolean forced)\n             throws CloudbreakOrchestratorFailedException, CloudbreakOrchestratorTimeoutException {\n-        boolean postRecipe = phase.isPostRecipe();\n         int maxRetry = forced ? maxRetryRecipeForced : maxRetryRecipe;\n         try (SaltConnector sc = createSaltConnector(gatewayConfig)) {\n             // add 'recipe' grain to all nodes\n             Set<String> targetHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n             saltCommandRunner.runSaltCommand(sc, new GrainAddRunner(targetHostnames, allNodes, \"recipes\", phase.value()), exitCriteriaModel, maxRetry,\n                     exitCriteria);\n-\n-            // Add Deprecated 'PRE/POST' recipe execution for backward compatibility (since version 2.2.0)\n-            if (postRecipe) {\n-                saltCommandRunner.runSaltCommand(sc, new GrainAddRunner(targetHostnames, allNodes, \"recipes\", RecipeExecutionPhase.POST.value()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg3MzY3Nw=="}, "originalCommit": {"oid": "43a3c6667a111ac3daed9ceaca0c3c82f0d4107a"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2542, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}