{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNDUzNjg0", "number": 9427, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOTo1MDo0MlrOE5XGyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOTo1MDo0MlrOE5XGyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTgyODU4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/metrics/CloudbreakMetricService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOTo1MDo0MlrOHzxPlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDo0NDoxNFrOHz04hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA0NjIzMA==", "bodyText": "The above line is exactly the same calculation.", "url": "https://github.com/hortonworks/cloudbreak/pull/9427#discussion_r524046230", "createdAt": "2020-11-16T09:50:42Z", "author": {"login": "keyki"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/metrics/CloudbreakMetricService.java", "diffHunk": "@@ -77,6 +81,7 @@ public void recordImageCopyTime(Stack stack, long startMillis) {\n                 MetricTag.REGION.name(), Optional.ofNullable(stack.getRegion()).orElse(\"NA\")};\n \n         long millispassed = System.currentTimeMillis() - startMillis;\n+        LOGGER.debug(\"Image copy duration report: {} ms\", System.currentTimeMillis() - startMillis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30612f93f8eb73a4c92322958e53017e679af30d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEwNTg2MA==", "bodyText": "Thank you (move error ...).", "url": "https://github.com/hortonworks/cloudbreak/pull/9427#discussion_r524105860", "createdAt": "2020-11-16T10:44:14Z", "author": {"login": "gergopapi2"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/metrics/CloudbreakMetricService.java", "diffHunk": "@@ -77,6 +81,7 @@ public void recordImageCopyTime(Stack stack, long startMillis) {\n                 MetricTag.REGION.name(), Optional.ofNullable(stack.getRegion()).orElse(\"NA\")};\n \n         long millispassed = System.currentTimeMillis() - startMillis;\n+        LOGGER.debug(\"Image copy duration report: {} ms\", System.currentTimeMillis() - startMillis);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA0NjIzMA=="}, "originalCommit": {"oid": "30612f93f8eb73a4c92322958e53017e679af30d"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3589, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}