{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NDM5Nzgx", "number": 9359, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzoyMzozOFrOE0zeGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzoyNTozNlrOE0zhSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODA0Njk5OnYy", "diffSide": "RIGHT", "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/compute/GcpInstanceResourceBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzoyMzozOFrOHsui2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMDoxNjoyOVrOHs--Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY2MTk3Ng==", "bodyText": "getHostName(Group group, int privateId) ?", "url": "https://github.com/hortonworks/cloudbreak/pull/9359#discussion_r516661976", "createdAt": "2020-11-03T13:23:38Z", "author": {"login": "doktoric"}, "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/compute/GcpInstanceResourceBuilder.java", "diffHunk": "@@ -213,10 +217,15 @@ String getPublicKey(String groupPublicKey, String groupLoginUserName) {\n         return publicKey;\n     }\n \n-    private String getHostname(CloudStack cloudStack, List<CloudResource> buildableResource) {\n+    private String getHostname(CloudStack cloudStack, int privateId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54ba088f8430f0a7970a76fdda70471227e37b0e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkzMTE0Mw==", "bodyText": "Nice suggestion! It simplified the code a lot. Thank you!", "url": "https://github.com/hortonworks/cloudbreak/pull/9359#discussion_r516931143", "createdAt": "2020-11-03T20:16:29Z", "author": {"login": "cegganesh84"}, "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/compute/GcpInstanceResourceBuilder.java", "diffHunk": "@@ -213,10 +217,15 @@ String getPublicKey(String groupPublicKey, String groupLoginUserName) {\n         return publicKey;\n     }\n \n-    private String getHostname(CloudStack cloudStack, List<CloudResource> buildableResource) {\n+    private String getHostname(CloudStack cloudStack, int privateId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY2MTk3Ng=="}, "originalCommit": {"oid": "54ba088f8430f0a7970a76fdda70471227e37b0e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODA1NTE1OnYy", "diffSide": "RIGHT", "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/compute/GcpInstanceResourceBuilder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzoyNTozNlrOHsuntQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMjoyNDozM1rOHtCoeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY2MzIyMQ==", "bodyText": "I think we should implement a cloudStack.type parameter which can get FREEIPA, STACK  values", "url": "https://github.com/hortonworks/cloudbreak/pull/9359#discussion_r516663221", "createdAt": "2020-11-03T13:25:36Z", "author": {"login": "doktoric"}, "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/compute/GcpInstanceResourceBuilder.java", "diffHunk": "@@ -213,10 +217,15 @@ String getPublicKey(String groupPublicKey, String groupLoginUserName) {\n         return publicKey;\n     }\n \n-    private String getHostname(CloudStack cloudStack, List<CloudResource> buildableResource) {\n+    private String getHostname(CloudStack cloudStack, int privateId) {\n         String hostname = null;\n-        if (!cloudStack.getGroups().isEmpty() && !cloudStack.getGroups().get(0).getInstances().isEmpty()) {\n-            hostname = cloudStack.getGroups().get(0).getInstances().get(0).getStringParameter(CloudInstance.DISCOVERY_NAME);\n+        if (!cloudStack.getGroups().isEmpty() && !cloudStack.getGroups().get(0).getInstances().isEmpty()\n+                && cloudStack.getGroups().get(0).getInstances().get(privateId) != null) {\n+            hostname = cloudStack.getGroups().get(0).getInstances().get(privateId).getStringParameter(CloudInstance.DISCOVERY_NAME);\n+            // Setting hostnames for only FreeIPA hosts\n+            if (hostname == null || !hostname.startsWith(\"ipaserver\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54ba088f8430f0a7970a76fdda70471227e37b0e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkzMTk0NQ==", "bodyText": "This is a great suggestion. Could you please help me with how the stack name for freeipa got FreeIPA in it? Looks like that is the last place the information is dealt with as an Enum, beyond that they are blended as a string in names. I tried to track that yesterday, but got lost and implemented this simple solution.", "url": "https://github.com/hortonworks/cloudbreak/pull/9359#discussion_r516931945", "createdAt": "2020-11-03T20:18:15Z", "author": {"login": "cegganesh84"}, "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/compute/GcpInstanceResourceBuilder.java", "diffHunk": "@@ -213,10 +217,15 @@ String getPublicKey(String groupPublicKey, String groupLoginUserName) {\n         return publicKey;\n     }\n \n-    private String getHostname(CloudStack cloudStack, List<CloudResource> buildableResource) {\n+    private String getHostname(CloudStack cloudStack, int privateId) {\n         String hostname = null;\n-        if (!cloudStack.getGroups().isEmpty() && !cloudStack.getGroups().get(0).getInstances().isEmpty()) {\n-            hostname = cloudStack.getGroups().get(0).getInstances().get(0).getStringParameter(CloudInstance.DISCOVERY_NAME);\n+        if (!cloudStack.getGroups().isEmpty() && !cloudStack.getGroups().get(0).getInstances().isEmpty()\n+                && cloudStack.getGroups().get(0).getInstances().get(privateId) != null) {\n+            hostname = cloudStack.getGroups().get(0).getInstances().get(privateId).getStringParameter(CloudInstance.DISCOVERY_NAME);\n+            // Setting hostnames for only FreeIPA hosts\n+            if (hostname == null || !hostname.startsWith(\"ipaserver\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY2MzIyMQ=="}, "originalCommit": {"oid": "54ba088f8430f0a7970a76fdda70471227e37b0e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5MTA5OA==", "bodyText": "Hi @doktoric, I tried what seems simple and gets the job done with respect to stack type parameter suggestion. Please review.", "url": "https://github.com/hortonworks/cloudbreak/pull/9359#discussion_r516991098", "createdAt": "2020-11-03T22:24:33Z", "author": {"login": "cegganesh84"}, "path": "cloud-gcp/src/main/java/com/sequenceiq/cloudbreak/cloud/gcp/compute/GcpInstanceResourceBuilder.java", "diffHunk": "@@ -213,10 +217,15 @@ String getPublicKey(String groupPublicKey, String groupLoginUserName) {\n         return publicKey;\n     }\n \n-    private String getHostname(CloudStack cloudStack, List<CloudResource> buildableResource) {\n+    private String getHostname(CloudStack cloudStack, int privateId) {\n         String hostname = null;\n-        if (!cloudStack.getGroups().isEmpty() && !cloudStack.getGroups().get(0).getInstances().isEmpty()) {\n-            hostname = cloudStack.getGroups().get(0).getInstances().get(0).getStringParameter(CloudInstance.DISCOVERY_NAME);\n+        if (!cloudStack.getGroups().isEmpty() && !cloudStack.getGroups().get(0).getInstances().isEmpty()\n+                && cloudStack.getGroups().get(0).getInstances().get(privateId) != null) {\n+            hostname = cloudStack.getGroups().get(0).getInstances().get(privateId).getStringParameter(CloudInstance.DISCOVERY_NAME);\n+            // Setting hostnames for only FreeIPA hosts\n+            if (hostname == null || !hostname.startsWith(\"ipaserver\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY2MzIyMQ=="}, "originalCommit": {"oid": "54ba088f8430f0a7970a76fdda70471227e37b0e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3546, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}