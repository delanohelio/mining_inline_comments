{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NzQ2MDUy", "number": 7516, "title": "CB-5339 - Adding automated cloud backups to FreeIPA", "bodyText": "This adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\nCloses #CB-5339\nCloses #CB-5336\nCloses #CB-5095\nCo-authored-by: holleyism git@holleyism.com", "createdAt": "2020-03-09T18:24:55Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7516", "merged": true, "mergeCommit": {"oid": "66b60f024638d5a1670c405facdf05533e6a343c"}, "closed": true, "closedAt": "2020-03-24T07:42:38Z", "author": {"login": "wonderslug"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMC7nbABqjMxMTIwNjQzMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPoENmgFqTM3ODg0MDc2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6239485b5d18682dbbff0ee339b5e2594b85cf8", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a6239485b5d18682dbbff0ee339b5e2594b85cf8", "committedDate": "2020-03-09T18:21:52Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}, "afterCommit": {"oid": "d986dcc432bc0d4ff640a79de43b9be30111cadb", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d986dcc432bc0d4ff640a79de43b9be30111cadb", "committedDate": "2020-03-09T19:17:21Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d986dcc432bc0d4ff640a79de43b9be30111cadb", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d986dcc432bc0d4ff640a79de43b9be30111cadb", "committedDate": "2020-03-09T19:17:21Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}, "afterCommit": {"oid": "532ceec6428c5a3cd13c04d6304324c5b03759ca", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/532ceec6428c5a3cd13c04d6304324c5b03759ca", "committedDate": "2020-03-10T03:08:41Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "532ceec6428c5a3cd13c04d6304324c5b03759ca", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/532ceec6428c5a3cd13c04d6304324c5b03759ca", "committedDate": "2020-03-10T03:08:41Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}, "afterCommit": {"oid": "2c91b59a59bb4831559d774d84ded4c1dd62b78e", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/2c91b59a59bb4831559d774d84ded4c1dd62b78e", "committedDate": "2020-03-10T14:07:14Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c91b59a59bb4831559d774d84ded4c1dd62b78e", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/2c91b59a59bb4831559d774d84ded4c1dd62b78e", "committedDate": "2020-03-10T14:07:14Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}, "afterCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8cd05133035205cc7d1437f6e4ab99dab91020de", "committedDate": "2020-03-10T14:40:14Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTA1NzY5", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#pullrequestreview-372105769", "createdAt": "2020-03-10T16:13:42Z", "commit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjoxMzo0M1rOF0WRjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzozNDozM1rOF0ZqMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQzNTIxNA==", "bodyText": "these backup states should be moved to a different state file", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390435214", "createdAt": "2020-03-10T16:13:43Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/resources/freeipa-salt/salt/freeipa/common-install.sls", "diffHunk": "@@ -39,4 +39,53 @@ restart_krb5kdc:\n   service.running:\n     - name: krb5kdc\n     - watch:\n-      - file: /etc/sysconfig/krb5kdc\n\\ No newline at end of file\n+      - file: /etc/sysconfig/krb5kdc\n+\n+/usr/local/bin/freeipa_backup:\n+  file.managed:\n+    - source: salt://freeipa/scripts/freeipa_backup\n+    - user: root\n+    - group: root\n+    - mode: 750\n+\n+{% if salt['pillar.get']('freeipa:backup_enabled') %}\n+/etc/freeipa_backup.conf:\n+  file.managed:\n+    - source: salt://freeipa/templates/freeipa_backup.conf.j2\n+    - template: jinja\n+    - user: root\n+    - group: root\n+    - mode: 640\n+\n+{% if salt['pillar.get']('freeipa:monthly_full_backup_enabled') %}\n+/etc/cron.monthly/freeipa_backup_monthly:\n+  file.managed:\n+    - source: salt://freeipa/templates/freeipa_backup_monthly.j2\n+    - template: jinja\n+    - user: root\n+    - group: root\n+    - mode: 750\n+{% endif %}\n+\n+{% if salt['pillar.get']('freeipa:hourly_backup_enabled') %}\n+/etc/cron.hourly/freeipa_backup_hourly:\n+  file.managed:\n+    - source: salt://freeipa/templates/freeipa_backup_hourly.j2\n+    - template: jinja\n+    - user: root\n+    - group: root\n+    - mode: 750\n+{% endif %}\n+\n+{% if salt['pillar.get']('freeipa:initial_full_backup_enabled') %}\n+freeipa_initial_full_backup:\n+  cmd.run:\n+    - name: /usr/local/bin/freeipa_backup -t FULL -f \"{{salt['grains.get']('fqdn')}}/full\" && echo $(date +%Y-%m-%d:%H:%M:%S) >> /var/log/freeipa_initial_backup-executed\n+    - failhard: False\n+    - unless: test -f /var/log/freeipa_initial_backup-executed\n+    - require:\n+        - file: /usr/local/bin/freeipa_backup\n+        - file: /etc/freeipa_backup.conf\n+{% endif %}\n+{% endif %}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQzNjEzOQ==", "bodyText": "could you use cron states instead of file.managed?", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390436139", "createdAt": "2020-03-10T16:15:03Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/resources/freeipa-salt/salt/freeipa/common-install.sls", "diffHunk": "@@ -39,4 +39,53 @@ restart_krb5kdc:\n   service.running:\n     - name: krb5kdc\n     - watch:\n-      - file: /etc/sysconfig/krb5kdc\n\\ No newline at end of file\n+      - file: /etc/sysconfig/krb5kdc\n+\n+/usr/local/bin/freeipa_backup:\n+  file.managed:\n+    - source: salt://freeipa/scripts/freeipa_backup\n+    - user: root\n+    - group: root\n+    - mode: 750\n+\n+{% if salt['pillar.get']('freeipa:backup_enabled') %}\n+/etc/freeipa_backup.conf:\n+  file.managed:\n+    - source: salt://freeipa/templates/freeipa_backup.conf.j2\n+    - template: jinja\n+    - user: root\n+    - group: root\n+    - mode: 640\n+\n+{% if salt['pillar.get']('freeipa:monthly_full_backup_enabled') %}\n+/etc/cron.monthly/freeipa_backup_monthly:\n+  file.managed:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQzNzEwMg==", "bodyText": "where this file would come from? why do we need it?", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390437102", "createdAt": "2020-03-10T16:16:22Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/resources/freeipa-salt/salt/freeipa/templates/freeipa_backup_hourly.j2", "diffHunk": "@@ -0,0 +1,6 @@\n+{%- from 'freeipa/settings.sls' import freeipa with context -%}\n+#!/bin/bash\n+if [ ! -f /tmp/freeipa_backup_hourly_bypass ]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQzNzQyNQ==", "bodyText": "same question like for the hourly one", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390437425", "createdAt": "2020-03-10T16:16:48Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/resources/freeipa-salt/salt/freeipa/templates/freeipa_backup_monthly.j2", "diffHunk": "@@ -0,0 +1,5 @@\n+{%- from 'freeipa/settings.sls' import freeipa with context -%}\n+#!/bin/bash\n+if [ ! -f /tmp/freeipa_backup_monthly_bypass ]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ1NTY2Mg==", "bodyText": "remove empty line please", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390455662", "createdAt": "2020-03-10T16:42:56Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaCreationService.java", "diffHunk": "@@ -115,8 +120,15 @@ public DescribeFreeIpaResponse launchFreeIpa(CreateFreeIpaRequest request, Strin\n         Telemetry telemetry = stack.getTelemetry();\n         cloudStorageFolderResolverService.updateStorageLocation(telemetry,\n                 FluentClusterType.FREEIPA.value(), stack.getName(), stack.getResourceCrn());\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3ODI4Mw==", "bodyText": "could you change it to a more meaningful name?", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390478283", "createdAt": "2020-03-10T17:15:52Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/backup/cloud/AdlsGen2BackupConfigGenerator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.sequenceiq.freeipa.service.freeipa.backup.cloud;\n+\n+import java.nio.file.Paths;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.common.exception.CloudbreakServiceException;\n+import com.sequenceiq.cloudbreak.telemetry.fluent.cloud.AdlsGen2Config;\n+\n+@Component\n+public class AdlsGen2BackupConfigGenerator extends CloudBackupConfigGenerator<AdlsGen2Config> {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AdlsGen2BackupConfigGenerator.class);\n+\n+    private static final String[] ADLS_GEN2_SCHEME_PREFIXES = {\"abfs://\", \"abfss://\"};\n+\n+    private static final String AZURE_DFS_DOMAIN_SUFFIX = \".dfs.core.windows.net\";\n+\n+    private static final String AZURE_BLOB_STORAGE_SUFFIX = \"blob.core.windows.net\";\n+\n+    private static final String AZURE_BLOB_STORAGE_SCHEMA = \"https://\";\n+\n+    @Override\n+    public String generateBackupLocation(String location, String clusterType,\n+            String clusterName, String clusterId) {\n+        AdlsGen2Config adlsGen2Config = generateBackupConfig(location);\n+        String logFolder = resolveBackupFolder(adlsGen2Config, clusterType, clusterName, clusterId);\n+        String hostPart = String.format(\"%s.%s\", adlsGen2Config.getAccount(), AZURE_BLOB_STORAGE_SUFFIX);\n+        String generatedLocation = String.format(\"%s%s\", AZURE_BLOB_STORAGE_SCHEMA,\n+                Paths.get(hostPart, adlsGen2Config.getFileSystem(), logFolder));\n+        LOGGER.info(\"The following ADLS Gen2 base folder location is generated: {} (from {})\",\n+                generatedLocation, location);\n+        return generatedLocation;\n+    }\n+\n+    private AdlsGen2Config generateBackupConfig(String location) {\n+        if (StringUtils.isNotEmpty(location)) {\n+            boolean secure = location.startsWith(ADLS_GEN2_SCHEME_PREFIXES[1]);\n+            String locationWithoutScheme = getLocationWithoutSchemePrefixes(location, ADLS_GEN2_SCHEME_PREFIXES);\n+            String[] split = locationWithoutScheme.split(\"@\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4MDI4Ng==", "bodyText": "so many magic numbers. why 2?", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390480286", "createdAt": "2020-03-10T17:18:48Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/backup/cloud/AdlsGen2BackupConfigGenerator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.sequenceiq.freeipa.service.freeipa.backup.cloud;\n+\n+import java.nio.file.Paths;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.common.exception.CloudbreakServiceException;\n+import com.sequenceiq.cloudbreak.telemetry.fluent.cloud.AdlsGen2Config;\n+\n+@Component\n+public class AdlsGen2BackupConfigGenerator extends CloudBackupConfigGenerator<AdlsGen2Config> {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AdlsGen2BackupConfigGenerator.class);\n+\n+    private static final String[] ADLS_GEN2_SCHEME_PREFIXES = {\"abfs://\", \"abfss://\"};\n+\n+    private static final String AZURE_DFS_DOMAIN_SUFFIX = \".dfs.core.windows.net\";\n+\n+    private static final String AZURE_BLOB_STORAGE_SUFFIX = \"blob.core.windows.net\";\n+\n+    private static final String AZURE_BLOB_STORAGE_SCHEMA = \"https://\";\n+\n+    @Override\n+    public String generateBackupLocation(String location, String clusterType,\n+            String clusterName, String clusterId) {\n+        AdlsGen2Config adlsGen2Config = generateBackupConfig(location);\n+        String logFolder = resolveBackupFolder(adlsGen2Config, clusterType, clusterName, clusterId);\n+        String hostPart = String.format(\"%s.%s\", adlsGen2Config.getAccount(), AZURE_BLOB_STORAGE_SUFFIX);\n+        String generatedLocation = String.format(\"%s%s\", AZURE_BLOB_STORAGE_SCHEMA,\n+                Paths.get(hostPart, adlsGen2Config.getFileSystem(), logFolder));\n+        LOGGER.info(\"The following ADLS Gen2 base folder location is generated: {} (from {})\",\n+                generatedLocation, location);\n+        return generatedLocation;\n+    }\n+\n+    private AdlsGen2Config generateBackupConfig(String location) {\n+        if (StringUtils.isNotEmpty(location)) {\n+            boolean secure = location.startsWith(ADLS_GEN2_SCHEME_PREFIXES[1]);\n+            String locationWithoutScheme = getLocationWithoutSchemePrefixes(location, ADLS_GEN2_SCHEME_PREFIXES);\n+            String[] split = locationWithoutScheme.split(\"@\");\n+            String[] storageWithSuffix = split[0].split(\"/\", 2);\n+            String folderPrefix = storageWithSuffix.length < 2 ? \"\" :  \"/\" + storageWithSuffix[1];\n+            if (split.length < 2) {\n+                return new AdlsGen2Config(folderPrefix, storageWithSuffix[0], null, secure);\n+            } else {\n+                String[] splitByDomain = split[1].split(AZURE_DFS_DOMAIN_SUFFIX);\n+                String account = splitByDomain[0];\n+                if (splitByDomain.length > 1) {\n+                    String folderPrefixAfterDomain = splitByDomain[1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4NTk2NQ==", "bodyText": "backup related stuff could be under backup as they logically stick together", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390485965", "createdAt": "2020-03-10T17:27:24Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/config/FreeIpaConfigView.java", "diffHunk": "@@ -0,0 +1,248 @@\n+package com.sequenceiq.freeipa.service.freeipa.config;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.collections.CollectionUtils;\n+import org.apache.commons.lang3.ObjectUtils;\n+\n+import com.sequenceiq.cloudbreak.orchestrator.model.Node;\n+\n+public class FreeIpaConfigView {\n+\n+    private static final String EMPTY_CONFIG_DEFAULT = \"\";\n+\n+    private final boolean backupEnabled;\n+\n+    private final boolean monthlyFullBackUpEnabled;\n+\n+    private final boolean hourlyBackUpEnabled;\n+\n+    private final boolean initialFullBackupEnabled;\n+\n+    private final String backupPlatform;\n+\n+    private final String backupLocation;\n+\n+    private final String realm;\n+\n+    private final String domain;\n+\n+    private final String password;\n+\n+    private final String reverseZones;\n+\n+    private final String adminUser;\n+\n+    private final String freeipaToReplicate;\n+\n+    private final Set<Object> hosts;\n+\n+    private final String azureInstanceMsi;\n+\n+    @SuppressWarnings(\"ExecutableStatementCount\")\n+    private FreeIpaConfigView(Builder builder) {\n+        this.backupEnabled = builder.backupEnabled;\n+        this.monthlyFullBackUpEnabled = builder.monthlyFullBackUpEnabled;\n+        this.hourlyBackUpEnabled = builder.hourlyBackUpEnabled;\n+        this.initialFullBackupEnabled = builder.initialFullBackupEnabled;\n+        this.backupLocation = builder.backupLocation;\n+        this.backupPlatform = builder.backupPlatform;\n+        this.realm = builder.realm;\n+        this.domain = builder.domain;\n+        this.password = builder.password;\n+        this.reverseZones = builder.reverseZones;\n+        this.adminUser = builder.adminUser;\n+        this.freeipaToReplicate = builder.freeipaToReplicate;\n+        this.hosts = builder.hosts;\n+        this.azureInstanceMsi = builder.azureInstanceMsi;\n+    }\n+\n+    public String getBackupLocation() {\n+        return backupLocation;\n+    }\n+\n+    public String getRealm() {\n+        return realm;\n+    }\n+\n+    public String getDomain() {\n+        return domain;\n+    }\n+\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+    public String getReverseZones() {\n+        return reverseZones;\n+    }\n+\n+    public String getAdminUser() {\n+        return adminUser;\n+    }\n+\n+    public String getFreeipaToReplicate() {\n+        return freeipaToReplicate;\n+    }\n+\n+    public Set<Object> getHosts() {\n+        return hosts;\n+    }\n+\n+    public boolean isBackupEnabled() {\n+        return backupEnabled;\n+    }\n+\n+    public boolean isMonthlyFullBackUpEnabled() {\n+        return monthlyFullBackUpEnabled;\n+    }\n+\n+    public boolean isHourlyBackUpEnabled() {\n+        return hourlyBackUpEnabled;\n+    }\n+\n+    public boolean isInitialFullBackupEnabled() {\n+        return initialFullBackupEnabled;\n+    }\n+\n+    public String getBackupPlatform() {\n+        return backupPlatform;\n+    }\n+\n+    public String getAzureInstanceMsi() {\n+        return azureInstanceMsi;\n+    }\n+\n+    @SuppressWarnings(\"ExecutableStatementCount\")\n+    public Map<String, Object> toMap() {\n+        Map<String, Object> map = new HashMap<>();\n+        map.put(\"backup_enabled\", this.backupEnabled);\n+        map.put(\"backup_location\", ObjectUtils.defaultIfNull(this.backupLocation, EMPTY_CONFIG_DEFAULT));\n+        map.put(\"monthly_full_backup_enabled\", this.monthlyFullBackUpEnabled);\n+        map.put(\"hourly_backup_enabled\", this.hourlyBackUpEnabled);\n+        map.put(\"initial_full_backup_enabled\", this.initialFullBackupEnabled);\n+        map.put(\"backup_platform\", ObjectUtils.defaultIfNull(this.backupPlatform, EMPTY_CONFIG_DEFAULT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4OTAwMA==", "bodyText": "I think S3BackupConfigGenerator and AdlsGen2BackupConfigGenerator should be tested in different test, and here you should test the logic related to CloudBackupFolderResolverService. I have a feeling that not all the cases are covered here, and it would be too complex to test it through this class", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390489000", "createdAt": "2020-03-10T17:32:03Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/test/java/com/sequenceiq/freeipa/service/freeipa/backup/cloud/CloudBackupFolderResolverServiceTest.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package com.sequenceiq.freeipa.service.freeipa.backup.cloud;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import com.sequenceiq.cloudbreak.auth.altus.CrnParseException;\n+import com.sequenceiq.cloudbreak.telemetry.fluent.FluentClusterType;\n+import com.sequenceiq.common.api.cloudstorage.old.AdlsGen2CloudStorageV1Parameters;\n+import com.sequenceiq.common.api.cloudstorage.old.S3CloudStorageV1Parameters;\n+import com.sequenceiq.freeipa.api.model.Backup;\n+\n+public class CloudBackupFolderResolverServiceTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5MDY3NQ==", "bodyText": "it's a bit strange that we use the telemetry settings for backup. Is it really a good idea?", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390490675", "createdAt": "2020-03-10T17:34:33Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/converter/backup/BackupConverter.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.sequenceiq.freeipa.converter.backup;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.common.api.cloudstorage.old.AdlsGen2CloudStorageV1Parameters;\n+import com.sequenceiq.common.api.cloudstorage.old.S3CloudStorageV1Parameters;\n+import com.sequenceiq.common.api.telemetry.request.LoggingRequest;\n+import com.sequenceiq.common.api.telemetry.request.TelemetryRequest;\n+import com.sequenceiq.freeipa.api.model.Backup;\n+import com.sequenceiq.freeipa.configuration.BackupConfiguration;\n+\n+@Component\n+public class BackupConverter {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(BackupConverter.class);\n+\n+    private final boolean freeIpaBackupEnabled;\n+\n+    private final BackupConfiguration backupConfiguration;\n+\n+    public BackupConverter(BackupConfiguration backupConfiguration,\n+            @Value(\"${freeipa.backup.enabled:true}\") boolean freeIpaBackupEnabled) {\n+        this.backupConfiguration = backupConfiguration;\n+        this.freeIpaBackupEnabled = freeIpaBackupEnabled;\n+    }\n+\n+    public Backup convert(TelemetryRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8cd05133035205cc7d1437f6e4ab99dab91020de", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/8cd05133035205cc7d1437f6e4ab99dab91020de", "committedDate": "2020-03-10T14:40:14Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}, "afterCommit": {"oid": "97ace46c88be40a9d6f918d596bf8fddf0aa3657", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/97ace46c88be40a9d6f918d596bf8fddf0aa3657", "committedDate": "2020-03-10T19:27:46Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzM1OTE5", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#pullrequestreview-372735919", "createdAt": "2020-03-11T13:03:16Z", "commit": {"oid": "97ace46c88be40a9d6f918d596bf8fddf0aa3657"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzowMzoxNlrOF017FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzowMzoxNlrOF017FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1Mzc0OA==", "bodyText": "why duplicate this kind of classes/implementations from common ? most of the code looks duplication", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r390953748", "createdAt": "2020-03-11T13:03:16Z", "author": {"login": "oleewere"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/backup/cloud/AdlsGen2BackupConfigGenerator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.sequenceiq.freeipa.service.freeipa.backup.cloud;\n+\n+import java.nio.file.Paths;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.common.exception.CloudbreakServiceException;\n+import com.sequenceiq.cloudbreak.telemetry.fluent.cloud.AdlsGen2Config;\n+\n+@Component\n+public class AdlsGen2BackupConfigGenerator extends CloudBackupConfigGenerator<AdlsGen2Config> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ace46c88be40a9d6f918d596bf8fddf0aa3657"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97ace46c88be40a9d6f918d596bf8fddf0aa3657", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/97ace46c88be40a9d6f918d596bf8fddf0aa3657", "committedDate": "2020-03-10T19:27:46Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}, "afterCommit": {"oid": "2776c4000487fd3c3d0fde4ccedc20507ebc20ad", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/2776c4000487fd3c3d0fde4ccedc20507ebc20ad", "committedDate": "2020-03-11T16:14:56Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2776c4000487fd3c3d0fde4ccedc20507ebc20ad", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/2776c4000487fd3c3d0fde4ccedc20507ebc20ad", "committedDate": "2020-03-11T16:14:56Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}, "afterCommit": {"oid": "341338dc07933eb05f08e51dc60c29b103e013b6", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/341338dc07933eb05f08e51dc60c29b103e013b6", "committedDate": "2020-03-12T01:37:45Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjY4NDcw", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#pullrequestreview-373668470", "createdAt": "2020-03-12T15:38:06Z", "commit": {"oid": "341338dc07933eb05f08e51dc60c29b103e013b6"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTozODowNlrOF1j8BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTozODowNlrOF1j8BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcwNzY1Mw==", "bodyText": "im wondering why is this needed here. I had to split and store different parts of the storage location parts (scheme + host + path) because of fluentd configuration requirements, i think in your case the path will work as is as you are using s3 tool for the upload (probably same is true for azure)...so probably most of these path generator code are not required at all...just pass the storage location as is (with appending the cluster-backup and cluster name/id prefixes)", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r391707653", "createdAt": "2020-03-12T15:38:06Z", "author": {"login": "oleewere"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/backup/cloud/CloudBackupConfigGenerator.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.sequenceiq.freeipa.service.freeipa.backup.cloud;\n+\n+import java.nio.file.Paths;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public abstract class CloudBackupConfigGenerator<T extends CloudBackupStorageConfig> {\n+\n+    protected static final String CLUSTER_BACKUP_PREFIX = \"cluster-backups\";\n+\n+    public abstract String generateBackupLocation(String location, String clusterType,\n+            String clusterName, String clusterId);\n+\n+    String getLocationWithoutSchemePrefixes(String input, String... schemePrefixes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "341338dc07933eb05f08e51dc60c29b103e013b6"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "341338dc07933eb05f08e51dc60c29b103e013b6", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/341338dc07933eb05f08e51dc60c29b103e013b6", "committedDate": "2020-03-12T01:37:45Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained."}, "afterCommit": {"oid": "c8ecac723c43033a53dcc65829f1f3fe25254a18", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/c8ecac723c43033a53dcc65829f1f3fe25254a18", "committedDate": "2020-03-12T17:10:37Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nCo-authored-by: holleyism <git@holleyism.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8ecac723c43033a53dcc65829f1f3fe25254a18", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/c8ecac723c43033a53dcc65829f1f3fe25254a18", "committedDate": "2020-03-12T17:10:37Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nCo-authored-by: holleyism <git@holleyism.com>"}, "afterCommit": {"oid": "544c24bdb5546e57df82e511e50b649309a7531a", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/544c24bdb5546e57df82e511e50b649309a7531a", "committedDate": "2020-03-12T19:23:50Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nCo-authored-by: holleyism <git@holleyism.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "544c24bdb5546e57df82e511e50b649309a7531a", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/544c24bdb5546e57df82e511e50b649309a7531a", "committedDate": "2020-03-12T19:23:50Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nCo-authored-by: holleyism <git@holleyism.com>"}, "afterCommit": {"oid": "bf22afbf1f350900a914b2a8095e7d569cc7f82a", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/bf22afbf1f350900a914b2a8095e7d569cc7f82a", "committedDate": "2020-03-12T20:16:58Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nCo-authored-by: holleyism <git@holleyism.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf22afbf1f350900a914b2a8095e7d569cc7f82a", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/bf22afbf1f350900a914b2a8095e7d569cc7f82a", "committedDate": "2020-03-12T20:16:58Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nCo-authored-by: holleyism <git@holleyism.com>"}, "afterCommit": {"oid": "a8bf4af5ccdd434b027601cf6a18e3b74bdbb425", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a8bf4af5ccdd434b027601cf6a18e3b74bdbb425", "committedDate": "2020-03-13T14:22:06Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nTest line for push test.\n\nCo-authored-by: holleyism <git@holleyism.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MTA5MDgw", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#pullrequestreview-375109080", "createdAt": "2020-03-16T11:05:00Z", "commit": {"oid": "a8bf4af5ccdd434b027601cf6a18e3b74bdbb425"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMTowNTowMFrOF2vLoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMTowNTozN1rOF2vM6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0MDQ0OA==", "bodyText": "I would set it here to false, and override it from java if enabled", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r392940448", "createdAt": "2020-03-16T11:05:00Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/resources/freeipa-salt/pillar/freeipa/init.sls", "diffHunk": "@@ -4,3 +4,11 @@ freeipa:\n   realm: testrealm\n   admin_user: admin\n   freeipa_to_replicate:\n+  backup:\n+    enabled: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8bf4af5ccdd434b027601cf6a18e3b74bdbb425"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0MDc3OQ==", "bodyText": "this option is not needed, by default it's false", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#discussion_r392940779", "createdAt": "2020-03-16T11:05:37Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/resources/freeipa-salt/salt/freeipa/backups.sls", "diffHunk": "@@ -0,0 +1,47 @@\n+/usr/local/bin/freeipa_backup:\n+  file.managed:\n+    - source: salt://freeipa/scripts/freeipa_backup\n+    - user: root\n+    - group: root\n+    - mode: 750\n+\n+{% if salt['pillar.get']('freeipa:backup:enabled') %}\n+/etc/freeipa_backup.conf:\n+  file.managed:\n+    - source: salt://freeipa/templates/freeipa_backup.conf.j2\n+    - template: jinja\n+    - user: root\n+    - group: root\n+    - mode: 640\n+\n+{% if salt['pillar.get']('freeipa:backup:monthly_full_enabled') %}\n+/etc/cron.monthly/freeipa_backup_monthly:\n+  file.managed:\n+    - source: salt://freeipa/templates/freeipa_backup_monthly.j2\n+    - template: jinja\n+    - user: root\n+    - group: root\n+    - mode: 750\n+{% endif %}\n+\n+{% if salt['pillar.get']('freeipa:backup:hourly_enabled') %}\n+/etc/cron.hourly/freeipa_backup_hourly:\n+  file.managed:\n+    - source: salt://freeipa/templates/freeipa_backup_hourly.j2\n+    - template: jinja\n+    - user: root\n+    - group: root\n+    - mode: 750\n+{% endif %}\n+\n+{% if salt['pillar.get']('freeipa:backup:initial_full_enabled') %}\n+freeipa_initial_full_backup:\n+  cmd.run:\n+    - name: /usr/local/bin/freeipa_backup -t FULL -f \"{{salt['grains.get']('fqdn')}}/full\" && echo $(date +%Y-%m-%d:%H:%M:%S) >> /var/log/freeipa_initial_backup-executed\n+    - failhard: False", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8bf4af5ccdd434b027601cf6a18e3b74bdbb425"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8bf4af5ccdd434b027601cf6a18e3b74bdbb425", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a8bf4af5ccdd434b027601cf6a18e3b74bdbb425", "committedDate": "2020-03-13T14:22:06Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nTest line for push test.\n\nCo-authored-by: holleyism <git@holleyism.com>"}, "afterCommit": {"oid": "fe30f7387502d5c5d41b67ec262a4e02f95d115e", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/fe30f7387502d5c5d41b67ec262a4e02f95d115e", "committedDate": "2020-03-17T04:08:27Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nTest line for push test.\n\nCo-authored-by: holleyism <git@holleyism.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MjkyNDc0", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#pullrequestreview-376292474", "createdAt": "2020-03-17T18:19:24Z", "commit": {"oid": "fe30f7387502d5c5d41b67ec262a4e02f95d115e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe30f7387502d5c5d41b67ec262a4e02f95d115e", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/fe30f7387502d5c5d41b67ec262a4e02f95d115e", "committedDate": "2020-03-17T04:08:27Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nTest line for push test.\n\nCo-authored-by: holleyism <git@holleyism.com>"}, "afterCommit": {"oid": "3084202e3010c1bf70d344365f9796c0984636e7", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3084202e3010c1bf70d344365f9796c0984636e7", "committedDate": "2020-03-17T20:34:39Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nCo-authored-by: holleyism <git@holleyism.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a25845513c1f0fc4126624cc09a5be04e96b3cf", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/7a25845513c1f0fc4126624cc09a5be04e96b3cf", "committedDate": "2020-03-20T21:33:33Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nCo-authored-by: holleyism <git@holleyism.com>\nCo-authored-by: Jamison Bennett <jamison.bennett@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3084202e3010c1bf70d344365f9796c0984636e7", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3084202e3010c1bf70d344365f9796c0984636e7", "committedDate": "2020-03-17T20:34:39Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nCo-authored-by: holleyism <git@holleyism.com>"}, "afterCommit": {"oid": "7a25845513c1f0fc4126624cc09a5be04e96b3cf", "author": {"user": {"login": "wonderslug", "name": "Brian Towles"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/7a25845513c1f0fc4126624cc09a5be04e96b3cf", "committedDate": "2020-03-20T21:33:33Z", "message": "CB-5339 - Adding automated cloud backups to FreeIPA\n\nThis adds support for automated backup of the FreeIPA\nservice.  It backups up to the cloud provider defined\nby the telemetry and uses the same logging bucket or\ncontainer as well as the Identity.\n\nIt will determine the backup directory root pathing\nsimilarly to the way telemetry does.\n\nIt stores the backup configuration with the stack so\nthat as we add its own bucket later on, backward\ncompatibility can be maintained.\n\nCo-authored-by: holleyism <git@holleyism.com>\nCo-authored-by: Jamison Bennett <jamison.bennett@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODQwNzYy", "url": "https://github.com/hortonworks/cloudbreak/pull/7516#pullrequestreview-378840762", "createdAt": "2020-03-20T22:15:45Z", "commit": {"oid": "7a25845513c1f0fc4126624cc09a5be04e96b3cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2549, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}