{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMzEwMDY2", "number": 9051, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTozMTozOVrOEl7Ziw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTozNjowN1rOEl7cfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjA1OTYzOnYy", "diffSide": "RIGHT", "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/client/AzureClientCredentials.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTozMTozOVrOHVqu5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTozMTozOVrOHVqu5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4MjI3Nw==", "bodyText": "I think these magic strings like component, http.method, error should come from TracingUtil or similar class, so when you add support to another sdk, etc we won't duplicate those.", "url": "https://github.com/hortonworks/cloudbreak/pull/9051#discussion_r492482277", "createdAt": "2020-09-22T05:31:39Z", "author": {"login": "lacikaaa"}, "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/client/AzureClientCredentials.java", "diffHunk": "@@ -32,24 +40,53 @@\n \n     private final AuthenticationContextProvider authenticationContextProvider;\n \n+    private final Tracer tracer;\n+\n     public AzureClientCredentials(AzureCredentialView credentialView, LogLevel logLevel, CBRefreshTokenClientProvider cbRefreshTokenClientProvider,\n-                    AuthenticationContextProvider authenticationContextProvider) {\n+            AuthenticationContextProvider authenticationContextProvider, Tracer tracer) {\n         this.authenticationContextProvider = authenticationContextProvider;\n         this.cbRefreshTokenClientProvider = cbRefreshTokenClientProvider;\n         this.credentialView = credentialView;\n         this.logLevel = logLevel;\n+        this.tracer = tracer;\n         azureClientCredentials = getAzureCredentials();\n     }\n \n     public Azure getAzure() {\n         return Azure\n                 .configure()\n+                .withInterceptor(getTracingInterceptor())\n                 .withProxyAuthenticator(new JavaNetAuthenticator())\n                 .withLogLevel(logLevel)\n                 .authenticate(azureClientCredentials)\n                 .withSubscription(credentialView.getSubscriptionId());\n     }\n \n+    private Interceptor getTracingInterceptor() {\n+        return chain -> {\n+            Request request = chain.request();\n+            String loggingContext = request.header(\"x-ms-logging-context\").split(\" \")[0];\n+            Span span = tracer.buildSpan(\"[\" + request.method() + \"] \" + loggingContext)\n+                    .addReference(References.FOLLOWS_FROM, tracer.activeSpan() != null ? tracer.activeSpan().context() : null)\n+                    .start();\n+            span.setTag(\"component\", \"java-azure-sdk\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d457bd1a7121d758849fc0ce00faa259f9c31c"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjA2NzE4OnYy", "diffSide": "RIGHT", "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/client/AzureClientService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTozNjowN1rOHVqzOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjoxMDoyNFrOHVrXSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4MzM4NQ==", "bodyText": "I think it would be nice if you would inject a new class here, like AzureTracer and it would have the public Interceptor getTracingInterceptor() method and you could pass that along. So it would have the responsibility creating the interceptor instead of AzureClientCredentials. What do you think?", "url": "https://github.com/hortonworks/cloudbreak/pull/9051#discussion_r492483385", "createdAt": "2020-09-22T05:36:07Z", "author": {"login": "lacikaaa"}, "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/client/AzureClientService.java", "diffHunk": "@@ -23,6 +25,9 @@\n     @Inject\n     private AuthenticationContextProvider authenticationContextProvider;\n \n+    @Inject\n+    private Tracer tracer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d457bd1a7121d758849fc0ce00faa259f9c31c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5MjYxNg==", "bodyText": "Im going to create TracingInterceptor as a separate class and inject it directly instead", "url": "https://github.com/hortonworks/cloudbreak/pull/9051#discussion_r492492616", "createdAt": "2020-09-22T06:10:24Z", "author": {"login": "attilapalfi92"}, "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/client/AzureClientService.java", "diffHunk": "@@ -23,6 +25,9 @@\n     @Inject\n     private AuthenticationContextProvider authenticationContextProvider;\n \n+    @Inject\n+    private Tracer tracer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4MzM4NQ=="}, "originalCommit": {"oid": "08d457bd1a7121d758849fc0ce00faa259f9c31c"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2183, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}