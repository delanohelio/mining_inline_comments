{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyOTMzNzAz", "number": 7448, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOToyNDoyMFrODlWJ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMTo1NToxN1rODlZQog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDg2ODc4OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOToyNDoyMFrOFyL6oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDowODo0M1rOFyNdKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODM1Mw==", "bodyText": "why do you set the network here?", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388168353", "createdAt": "2020-03-05T09:24:20Z", "author": {"login": "topolyai5"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java", "diffHunk": "@@ -57,20 +73,36 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                                 validationResult = validationResult.merge(validatorService.validateNetworkWithProvider(environmentDto));\n                                 if (validationResult.hasError()) {\n                                     goToFailedState(environmentDtoEvent, validationResult.getFormattedErrors());\n+                                } else {\n+                                    setChildEnvironmentNetworkIfItHasParent(environmentDto);\n+                                    environmentDto.getNetwork().setSubnetMetas(cloudNetworkService.retrieveSubnetMetadata(environmentDto,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5MzU3Nw==", "bodyText": "see below", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388193577", "createdAt": "2020-03-05T10:08:43Z", "author": {"login": "gregito"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java", "diffHunk": "@@ -57,20 +73,36 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                                 validationResult = validationResult.merge(validatorService.validateNetworkWithProvider(environmentDto));\n                                 if (validationResult.hasError()) {\n                                     goToFailedState(environmentDtoEvent, validationResult.getFormattedErrors());\n+                                } else {\n+                                    setChildEnvironmentNetworkIfItHasParent(environmentDto);\n+                                    environmentDto.getNetwork().setSubnetMetas(cloudNetworkService.retrieveSubnetMetadata(environmentDto,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODM1Mw=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDg3MTg3OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOToyNTowOVrOFyL8hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDoxODoxNFrOFyNxkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODgzOQ==", "bodyText": "why do you set the parent env here?", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388168839", "createdAt": "2020-03-05T09:25:09Z", "author": {"login": "topolyai5"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java", "diffHunk": "@@ -57,20 +73,36 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                                 validationResult = validationResult.merge(validatorService.validateNetworkWithProvider(environmentDto));\n                                 if (validationResult.hasError()) {\n                                     goToFailedState(environmentDtoEvent, validationResult.getFormattedErrors());\n+                                } else {\n+                                    setChildEnvironmentNetworkIfItHasParent(environmentDto);\n+                                    environmentDto.getNetwork().setSubnetMetas(cloudNetworkService.retrieveSubnetMetadata(environmentDto,\n+                                            environmentDto.getNetwork()));\n+                                    environmentResourceService.createAndSetNetwork(environment, environmentDto.getNetwork(), environment.getAccountId(),\n+                                            environmentDto.getNetwork().getSubnetMetas());\n+                                    environmentService.save(environment);\n+                                    goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                                 }\n-                                goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                             } catch (WebApplicationException e) {\n                                 String responseMessage = webApplicationExceptionMessageExtractor.getErrorMessage(e);\n                                 goToFailedState(environmentDtoEvent, e.getMessage() + \". \" + responseMessage);\n                             } catch (Exception e) {\n                                 goToFailedState(environmentDtoEvent, e.getMessage());\n                             }\n-                        }, () -> {\n-                            goToFailedState(environmentDtoEvent, String.format(\"Environment was not found with id '%s'.\", environmentDto.getId()));\n-                        }\n+                        }, () -> goToFailedState(environmentDtoEvent, String.format(\"Environment was not found with id '%s'.\", environmentDto.getId()))\n                 );\n     }\n \n+    private void setChildEnvironmentNetworkIfItHasParent(EnvironmentDto currentEnvDto) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5MzM4Ng==", "bodyText": "since from now, we're not setting all the network params (e.g. subnet metas) until this step, and the child env's network has to be the same as far as I know as the parent", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388193386", "createdAt": "2020-03-05T10:08:23Z", "author": {"login": "gregito"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java", "diffHunk": "@@ -57,20 +73,36 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                                 validationResult = validationResult.merge(validatorService.validateNetworkWithProvider(environmentDto));\n                                 if (validationResult.hasError()) {\n                                     goToFailedState(environmentDtoEvent, validationResult.getFormattedErrors());\n+                                } else {\n+                                    setChildEnvironmentNetworkIfItHasParent(environmentDto);\n+                                    environmentDto.getNetwork().setSubnetMetas(cloudNetworkService.retrieveSubnetMetadata(environmentDto,\n+                                            environmentDto.getNetwork()));\n+                                    environmentResourceService.createAndSetNetwork(environment, environmentDto.getNetwork(), environment.getAccountId(),\n+                                            environmentDto.getNetwork().getSubnetMetas());\n+                                    environmentService.save(environment);\n+                                    goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                                 }\n-                                goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                             } catch (WebApplicationException e) {\n                                 String responseMessage = webApplicationExceptionMessageExtractor.getErrorMessage(e);\n                                 goToFailedState(environmentDtoEvent, e.getMessage() + \". \" + responseMessage);\n                             } catch (Exception e) {\n                                 goToFailedState(environmentDtoEvent, e.getMessage());\n                             }\n-                        }, () -> {\n-                            goToFailedState(environmentDtoEvent, String.format(\"Environment was not found with id '%s'.\", environmentDto.getId()));\n-                        }\n+                        }, () -> goToFailedState(environmentDtoEvent, String.format(\"Environment was not found with id '%s'.\", environmentDto.getId()))\n                 );\n     }\n \n+    private void setChildEnvironmentNetworkIfItHasParent(EnvironmentDto currentEnvDto) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODgzOQ=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5NTMxMQ==", "bodyText": "it is not a proper solution, it is a validator, the validator should validate smgt and does not set other things. hard to find later", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388195311", "createdAt": "2020-03-05T10:11:51Z", "author": {"login": "topolyai5"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java", "diffHunk": "@@ -57,20 +73,36 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                                 validationResult = validationResult.merge(validatorService.validateNetworkWithProvider(environmentDto));\n                                 if (validationResult.hasError()) {\n                                     goToFailedState(environmentDtoEvent, validationResult.getFormattedErrors());\n+                                } else {\n+                                    setChildEnvironmentNetworkIfItHasParent(environmentDto);\n+                                    environmentDto.getNetwork().setSubnetMetas(cloudNetworkService.retrieveSubnetMetadata(environmentDto,\n+                                            environmentDto.getNetwork()));\n+                                    environmentResourceService.createAndSetNetwork(environment, environmentDto.getNetwork(), environment.getAccountId(),\n+                                            environmentDto.getNetwork().getSubnetMetas());\n+                                    environmentService.save(environment);\n+                                    goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                                 }\n-                                goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                             } catch (WebApplicationException e) {\n                                 String responseMessage = webApplicationExceptionMessageExtractor.getErrorMessage(e);\n                                 goToFailedState(environmentDtoEvent, e.getMessage() + \". \" + responseMessage);\n                             } catch (Exception e) {\n                                 goToFailedState(environmentDtoEvent, e.getMessage());\n                             }\n-                        }, () -> {\n-                            goToFailedState(environmentDtoEvent, String.format(\"Environment was not found with id '%s'.\", environmentDto.getId()));\n-                        }\n+                        }, () -> goToFailedState(environmentDtoEvent, String.format(\"Environment was not found with id '%s'.\", environmentDto.getId()))\n                 );\n     }\n \n+    private void setChildEnvironmentNetworkIfItHasParent(EnvironmentDto currentEnvDto) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODgzOQ=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5ODgwMw==", "bodyText": "make sense, I'll look for some other approach for this state change stuff", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388198803", "createdAt": "2020-03-05T10:18:14Z", "author": {"login": "gregito"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java", "diffHunk": "@@ -57,20 +73,36 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                                 validationResult = validationResult.merge(validatorService.validateNetworkWithProvider(environmentDto));\n                                 if (validationResult.hasError()) {\n                                     goToFailedState(environmentDtoEvent, validationResult.getFormattedErrors());\n+                                } else {\n+                                    setChildEnvironmentNetworkIfItHasParent(environmentDto);\n+                                    environmentDto.getNetwork().setSubnetMetas(cloudNetworkService.retrieveSubnetMetadata(environmentDto,\n+                                            environmentDto.getNetwork()));\n+                                    environmentResourceService.createAndSetNetwork(environment, environmentDto.getNetwork(), environment.getAccountId(),\n+                                            environmentDto.getNetwork().getSubnetMetas());\n+                                    environmentService.save(environment);\n+                                    goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                                 }\n-                                goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                             } catch (WebApplicationException e) {\n                                 String responseMessage = webApplicationExceptionMessageExtractor.getErrorMessage(e);\n                                 goToFailedState(environmentDtoEvent, e.getMessage() + \". \" + responseMessage);\n                             } catch (Exception e) {\n                                 goToFailedState(environmentDtoEvent, e.getMessage());\n                             }\n-                        }, () -> {\n-                            goToFailedState(environmentDtoEvent, String.format(\"Environment was not found with id '%s'.\", environmentDto.getId()));\n-                        }\n+                        }, () -> goToFailedState(environmentDtoEvent, String.format(\"Environment was not found with id '%s'.\", environmentDto.getId()))\n                 );\n     }\n \n+    private void setChildEnvironmentNetworkIfItHasParent(EnvironmentDto currentEnvDto) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODgzOQ=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDg3ODYxOnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOToyNjo1MFrOFyMAZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDoxNDo0NFrOFyNp7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2OTgzMA==", "bodyText": "I do not see any difference from getIfNotNull", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388169830", "createdAt": "2020-03-05T09:26:50Z", "author": {"login": "topolyai5"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java", "diffHunk": "@@ -106,11 +107,11 @@ public EnvironmentDto create(EnvironmentCreationDto creationDto) {\n             environmentService.setAdminGroupName(environment, creationDto.getAdminGroupName());\n         }\n         CloudRegions cloudRegions = setLocationAndRegions(creationDto, environment);\n-        Map<String, CloudSubnet> subnetMetas = networkService.retrieveSubnetMetadata(environment, creationDto.getNetwork());\n-        validateCreation(creationDto, environment, cloudRegions, subnetMetas);\n+        validateCreation(creationDto, environment, cloudRegions);\n         try {\n             environment = environmentService.save(environment);\n-            environmentResourceService.createAndSetNetwork(environment, creationDto.getNetwork(), creationDto.getAccountId(), subnetMetas);\n+            environmentResourceService.createAndSetNetwork(environment, creationDto.getNetwork(), creationDto.getAccountId(),\n+                    getIfNotNullOtherwise(creationDto.getNetwork(), NetworkDto::getSubnetMetas, null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5NDY2OQ==", "bodyText": "does it make any issue?", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388194669", "createdAt": "2020-03-05T10:10:46Z", "author": {"login": "gregito"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java", "diffHunk": "@@ -106,11 +107,11 @@ public EnvironmentDto create(EnvironmentCreationDto creationDto) {\n             environmentService.setAdminGroupName(environment, creationDto.getAdminGroupName());\n         }\n         CloudRegions cloudRegions = setLocationAndRegions(creationDto, environment);\n-        Map<String, CloudSubnet> subnetMetas = networkService.retrieveSubnetMetadata(environment, creationDto.getNetwork());\n-        validateCreation(creationDto, environment, cloudRegions, subnetMetas);\n+        validateCreation(creationDto, environment, cloudRegions);\n         try {\n             environment = environmentService.save(environment);\n-            environmentResourceService.createAndSetNetwork(environment, creationDto.getNetwork(), creationDto.getAccountId(), subnetMetas);\n+            environmentResourceService.createAndSetNetwork(environment, creationDto.getNetwork(), creationDto.getAccountId(),\n+                    getIfNotNullOtherwise(creationDto.getNetwork(), NetworkDto::getSubnetMetas, null));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2OTgzMA=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5Njg0Ng==", "bodyText": "no, but you should reuse the existing code.", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388196846", "createdAt": "2020-03-05T10:14:44Z", "author": {"login": "topolyai5"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java", "diffHunk": "@@ -106,11 +107,11 @@ public EnvironmentDto create(EnvironmentCreationDto creationDto) {\n             environmentService.setAdminGroupName(environment, creationDto.getAdminGroupName());\n         }\n         CloudRegions cloudRegions = setLocationAndRegions(creationDto, environment);\n-        Map<String, CloudSubnet> subnetMetas = networkService.retrieveSubnetMetadata(environment, creationDto.getNetwork());\n-        validateCreation(creationDto, environment, cloudRegions, subnetMetas);\n+        validateCreation(creationDto, environment, cloudRegions);\n         try {\n             environment = environmentService.save(environment);\n-            environmentResourceService.createAndSetNetwork(environment, creationDto.getNetwork(), creationDto.getAccountId(), subnetMetas);\n+            environmentResourceService.createAndSetNetwork(environment, creationDto.getNetwork(), creationDto.getAccountId(),\n+                    getIfNotNullOtherwise(creationDto.getNetwork(), NetworkDto::getSubnetMetas, null));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2OTgzMA=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDg4NDE0OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOToyODoyNlrOFyMDzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOToyODoyNlrOFyMDzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3MDcwMg==", "bodyText": "unnecessary line break", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388170702", "createdAt": "2020-03-05T09:28:26Z", "author": {"login": "topolyai5"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentService.java", "diffHunk": "@@ -293,4 +293,5 @@ public AuthorizationResourceType getResourceType() {\n     public List<Environment> findAllByAccountIdAndParentEnvIdAndArchivedIsFalse(String accountId, Long parentEnvironmentId) {\n         return environmentRepository.findAllByAccountIdAndParentEnvIdAndArchivedIsFalse(accountId, parentEnvironmentId);\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDk5NDk2OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOTo1ODo0MFrOFyNH0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDoxOToxMlrOFyNzmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4ODExNA==", "bodyText": "the env edit will not work correctly, please test that function as well", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388188114", "createdAt": "2020-03-05T09:58:40Z", "author": {"login": "topolyai5"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java", "diffHunk": "@@ -71,18 +63,22 @@ public void validateDuringRequest(\n         }\n     }\n \n+    @Override\n+    public void validateDuringRequest(NetworkDto networkDto, ValidationResultBuilder resultBuilder) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5Mzk0Mg==", "bodyText": "why not? how should this edit feature work in this context?", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388193942", "createdAt": "2020-03-05T10:09:24Z", "author": {"login": "gregito"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java", "diffHunk": "@@ -71,18 +63,22 @@ public void validateDuringRequest(\n         }\n     }\n \n+    @Override\n+    public void validateDuringRequest(NetworkDto networkDto, ValidationResultBuilder resultBuilder) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4ODExNA=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5NTkxMw==", "bodyText": "The network edit uses the same validation process without flow. We validated the network edit in request time", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388195913", "createdAt": "2020-03-05T10:13:01Z", "author": {"login": "topolyai5"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java", "diffHunk": "@@ -71,18 +63,22 @@ public void validateDuringRequest(\n         }\n     }\n \n+    @Override\n+    public void validateDuringRequest(NetworkDto networkDto, ValidationResultBuilder resultBuilder) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4ODExNA=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5NzI1Mw==", "bodyText": "does it have any step which requires provider side communication? if yes, I have to say then the edit function was implemented improperly and it has to be fixed. if not, then it should do its job", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388197253", "createdAt": "2020-03-05T10:15:34Z", "author": {"login": "gregito"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java", "diffHunk": "@@ -71,18 +63,22 @@ public void validateDuringRequest(\n         }\n     }\n \n+    @Override\n+    public void validateDuringRequest(NetworkDto networkDto, ValidationResultBuilder resultBuilder) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4ODExNA=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5OTMyMw==", "bodyText": "The edit function does not use flow even if it has any provider side communications. If you want this functionality, talk with Ricsi.", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388199323", "createdAt": "2020-03-05T10:19:12Z", "author": {"login": "topolyai5"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java", "diffHunk": "@@ -71,18 +63,22 @@ public void validateDuringRequest(\n         }\n     }\n \n+    @Override\n+    public void validateDuringRequest(NetworkDto networkDto, ValidationResultBuilder resultBuilder) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4ODExNA=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTM2ODgyOnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/NetworkCreationValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMTo1MjowOVrOFyQp_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMzozNzowNVrOFyTuzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0NjAxMg==", "bodyText": "this is the same code as the overloaded method below", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388246012", "createdAt": "2020-03-05T11:52:09Z", "author": {"login": "bergerdenes"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/NetworkCreationValidator.java", "diffHunk": "@@ -43,12 +41,22 @@ public ValidationResultBuilder validateNetworkEdit(Environment environment, Netw\n         return resultBuilder;\n     }\n \n+    private void validateNetwork(Environment environment, NetworkDto network, ValidationResultBuilder resultBuilder) {\n+        if (network != null) {\n+            EnvironmentNetworkValidator environmentNetworkValidator =\n+                    environmentNetworkValidatorsByCloudPlatform.get(CloudPlatform.valueOf(environment.getCloudPlatform().toUpperCase()));\n+            if (environmentNetworkValidator != null) {\n+                environmentNetworkValidator.validateDuringRequest(network, resultBuilder);\n+            }\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI5NjM5OQ==", "bodyText": "it's about to change due to gtopolyai's request", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388296399", "createdAt": "2020-03-05T13:37:05Z", "author": {"login": "gregito"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/NetworkCreationValidator.java", "diffHunk": "@@ -43,12 +41,22 @@ public ValidationResultBuilder validateNetworkEdit(Environment environment, Netw\n         return resultBuilder;\n     }\n \n+    private void validateNetwork(Environment environment, NetworkDto network, ValidationResultBuilder resultBuilder) {\n+        if (network != null) {\n+            EnvironmentNetworkValidator environmentNetworkValidator =\n+                    environmentNetworkValidatorsByCloudPlatform.get(CloudPlatform.valueOf(environment.getCloudPlatform().toUpperCase()));\n+            if (environmentNetworkValidator != null) {\n+                environmentNetworkValidator.validateDuringRequest(network, resultBuilder);\n+            }\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0NjAxMg=="}, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTM3NzYyOnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMTo1NToxN1rOFyQvZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMTo1NToxN1rOFyQvZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0NzM5OQ==", "bodyText": "you could return after Line# 95", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388247399", "createdAt": "2020-03-05T11:55:17Z", "author": {"login": "bergerdenes"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java", "diffHunk": "@@ -88,14 +88,20 @@ private void evaluateProviderNetworkRelation(boolean networkParamExists, String\n         return Optional.ofNullable(o);\n     }\n \n-    private void validateNetwork(NetworkDto networkDto, String cloudPlatform, ValidationResultBuilder resultBuilder) {\n-        if (networkDto != null && Strings.isNullOrEmpty(networkDto.getNetworkCidr())) {\n-            EnvironmentNetworkValidator environmentNetworkValidator = environmentNetworkValidatorsByCloudPlatform.get(valueOf(cloudPlatform));\n-            if (networkDto.getNetworkCidr() != null && isInvalidNetworkMask(networkDto.getNetworkCidr())) {\n-                resultBuilder.error(String.format(\"The netmask must be /%s.\", EXPECTED_NETWORK_MASK));\n+    private void validateNetwork(NetworkDto networkDto, String cloudPlatform, ValidationResultBuilder resultBuilder, EnvironmentDto environmentDto) {\n+        if (networkDto != null) {\n+            if (Strings.isNullOrEmpty(networkDto.getNetworkCidr())) {\n+                if (networkDto.getNetworkCidr() != null && isInvalidNetworkMask(networkDto.getNetworkCidr())) {\n+                    resultBuilder.error(String.format(\"The netmask must be /%s.\", EXPECTED_NETWORK_MASK));\n+                }\n+            }\n+            if (resultBuilder.build().hasError()) {\n+                return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2722, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}