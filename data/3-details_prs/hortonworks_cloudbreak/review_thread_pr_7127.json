{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDE2OTQw", "number": 7127, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozNTo0NFrODa67sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozNjowNVrODa68TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTU1MTIzOnYy", "diffSide": "RIGHT", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/nifi/NifiConfigProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozNTo0NFrOFiHC1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozNTo0NFrOFiHC1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxMTMxOQ==", "bodyText": "Let's make it 7.1.0", "url": "https://github.com/hortonworks/cloudbreak/pull/7127#discussion_r371311319", "createdAt": "2020-01-27T15:35:44Z", "author": {"login": "keyki"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/nifi/NifiConfigProvider.java", "diffHunk": "@@ -1,19 +1,40 @@\n package com.sequenceiq.cloudbreak.cmtemplate.configproviders.nifi;\n \n+import static com.sequenceiq.cloudbreak.cmtemplate.CMRepositoryVersionUtil.CLOUDERAMANAGER_VERSION_7_0_1;\n+import static com.sequenceiq.cloudbreak.cmtemplate.CMRepositoryVersionUtil.isVersionNewerOrEqualThanLimited;\n+import static com.sequenceiq.cloudbreak.cmtemplate.configproviders.ConfigUtils.config;\n+\n+import java.util.ArrayList;\n import java.util.List;\n \n+import javax.inject.Inject;\n+\n import org.springframework.stereotype.Component;\n \n import com.cloudera.api.swagger.model.ApiClusterTemplateConfig;\n-import com.sequenceiq.cloudbreak.cmtemplate.configproviders.AbstractRoleConfigProvider;\n+import com.sequenceiq.cloudbreak.auth.altus.UmsRight;\n+import com.sequenceiq.cloudbreak.auth.altus.VirtualGroupRequest;\n+import com.sequenceiq.cloudbreak.auth.altus.VirtualGroupService;\n+import com.sequenceiq.cloudbreak.cmtemplate.CmTemplateComponentConfigProvider;\n+import com.sequenceiq.cloudbreak.cmtemplate.CmTemplateProcessor;\n import com.sequenceiq.cloudbreak.template.TemplatePreparationObject;\n \n @Component\n-public class NifiConfigProvider extends AbstractRoleConfigProvider {\n+public class NifiConfigProvider implements CmTemplateComponentConfigProvider {\n+    @Inject\n+    private VirtualGroupService virtualGroupService;\n \n     @Override\n-    public List<ApiClusterTemplateConfig> getRoleConfigs(String roleType, TemplatePreparationObject source) {\n-        return List.of();\n+    public List<ApiClusterTemplateConfig> getServiceConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n+        List<ApiClusterTemplateConfig> configList = new ArrayList<>();\n+        String cdhVersion = source.getBlueprintView().getProcessor().getStackVersion() == null ?\n+                \"\" : source.getBlueprintView().getProcessor().getStackVersion();\n+        if (isVersionNewerOrEqualThanLimited(cdhVersion, CLOUDERAMANAGER_VERSION_7_0_1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e3010371934739db257feb16d3b03a7a4db243"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTU1Mjc2OnYy", "diffSide": "RIGHT", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/nifi/NifiRegistryConfigProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozNjowNlrOFiHDxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozNjowNlrOFiHDxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxMTU1OQ==", "bodyText": "Same here.", "url": "https://github.com/hortonworks/cloudbreak/pull/7127#discussion_r371311559", "createdAt": "2020-01-27T15:36:06Z", "author": {"login": "keyki"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/nifi/NifiRegistryConfigProvider.java", "diffHunk": "@@ -1,19 +1,40 @@\n package com.sequenceiq.cloudbreak.cmtemplate.configproviders.nifi;\n \n+import static com.sequenceiq.cloudbreak.cmtemplate.CMRepositoryVersionUtil.CLOUDERAMANAGER_VERSION_7_0_1;\n+import static com.sequenceiq.cloudbreak.cmtemplate.CMRepositoryVersionUtil.isVersionNewerOrEqualThanLimited;\n+import static com.sequenceiq.cloudbreak.cmtemplate.configproviders.ConfigUtils.config;\n+\n+import java.util.ArrayList;\n import java.util.List;\n \n+import javax.inject.Inject;\n+\n import org.springframework.stereotype.Component;\n \n import com.cloudera.api.swagger.model.ApiClusterTemplateConfig;\n-import com.sequenceiq.cloudbreak.cmtemplate.configproviders.AbstractRoleConfigProvider;\n+import com.sequenceiq.cloudbreak.auth.altus.UmsRight;\n+import com.sequenceiq.cloudbreak.auth.altus.VirtualGroupRequest;\n+import com.sequenceiq.cloudbreak.auth.altus.VirtualGroupService;\n+import com.sequenceiq.cloudbreak.cmtemplate.CmTemplateComponentConfigProvider;\n+import com.sequenceiq.cloudbreak.cmtemplate.CmTemplateProcessor;\n import com.sequenceiq.cloudbreak.template.TemplatePreparationObject;\n \n @Component\n-public class NifiRegistryConfigProvider extends AbstractRoleConfigProvider {\n+public class NifiRegistryConfigProvider implements CmTemplateComponentConfigProvider {\n+    @Inject\n+    private VirtualGroupService virtualGroupService;\n \n     @Override\n-    public List<ApiClusterTemplateConfig> getRoleConfigs(String roleType, TemplatePreparationObject source) {\n-        return List.of();\n+    public List<ApiClusterTemplateConfig> getServiceConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n+        List<ApiClusterTemplateConfig> configList = new ArrayList<>();\n+        String cdhVersion = source.getBlueprintView().getProcessor().getStackVersion() == null ?\n+                \"\" : source.getBlueprintView().getProcessor().getStackVersion();\n+        if (isVersionNewerOrEqualThanLimited(cdhVersion, CLOUDERAMANAGER_VERSION_7_0_1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e3010371934739db257feb16d3b03a7a4db243"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2940, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}