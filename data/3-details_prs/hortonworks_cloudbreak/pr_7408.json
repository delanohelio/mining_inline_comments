{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwOTE5OTky", "number": 7408, "title": "Subnets", "bodyText": "", "createdAt": "2020-02-27T15:37:17Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7408", "merged": true, "mergeCommit": {"oid": "e89d22bfcc4c861df92a8531ef6f8ca4955727b8"}, "closed": true, "closedAt": "2020-03-04T16:21:20Z", "author": {"login": "topolyai5"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIdOTogBqjMwNzgzMjI1NzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKXRMHgBqjMwOTY1OTAzNzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0f0ca6ee7218d3725628962ea8bf252f5f51e8a", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a0f0ca6ee7218d3725628962ea8bf252f5f51e8a", "committedDate": "2020-02-27T14:59:33Z", "message": "asd"}, "afterCommit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/21e1a6c2a8024f33191b0e8e27b0baf665095078", "committedDate": "2020-02-27T15:35:47Z", "message": "CB-5079 - separating subnet types in network response"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Nzk0NDIz", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#pullrequestreview-365794423", "createdAt": "2020-02-27T16:15:30Z", "commit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNTozMFrOFvXiww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNTozMFrOFvXiww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxMzEyMw==", "bodyText": "I think this should be the count of subnets", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#discussion_r385213123", "createdAt": "2020-02-27T16:15:30Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/network/service/extended/MlxSubnetConstants.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.sequenceiq.environment.network.service.extended;\n+\n+public class MlxSubnetConstants {\n+\n+    public static final String MLX_SUBNET_MASK = \"24\";\n+\n+    public static final int MLX_SUBNET_STARTING_IP = 3;\n+\n+    public static final int MLX_SUBNET_FINAL_IP = 34;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Nzk0NjM4", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#pullrequestreview-365794638", "createdAt": "2020-02-27T16:15:46Z", "commit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNTo0NlrOFvXjew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNTo0NlrOFvXjew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxMzMwNw==", "bodyText": "we dont need this if we are using count", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#discussion_r385213307", "createdAt": "2020-02-27T16:15:46Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/network/service/extended/MlxSubnetConstants.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.sequenceiq.environment.network.service.extended;\n+\n+public class MlxSubnetConstants {\n+\n+    public static final String MLX_SUBNET_MASK = \"24\";\n+\n+    public static final int MLX_SUBNET_STARTING_IP = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Nzk0Nzk1", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#pullrequestreview-365794795", "createdAt": "2020-02-27T16:15:56Z", "commit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNTo1N1rOFvXj7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNTo1N1rOFvXj7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxMzQyMQ==", "bodyText": "should be count", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#discussion_r385213421", "createdAt": "2020-02-27T16:15:57Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/network/service/extended/PublicSubnetConstants.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.sequenceiq.environment.network.service.extended;\n+\n+public class PublicSubnetConstants {\n+\n+    public static final String PUBLIC_SUBNET_MASK = \"24\";\n+\n+    public static final int PUBLIC_SUBNET_STARTING_IP = 0;\n+\n+    public static final int PUBLIC_SUBNET_FINAL_IP = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Nzk0OTE4", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#pullrequestreview-365794918", "createdAt": "2020-02-27T16:16:05Z", "commit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNjowNVrOFvXkTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNjowNVrOFvXkTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxMzUxNg==", "bodyText": "we dont need this I guess", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#discussion_r385213516", "createdAt": "2020-02-27T16:16:05Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/network/service/extended/PublicSubnetConstants.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.sequenceiq.environment.network.service.extended;\n+\n+public class PublicSubnetConstants {\n+\n+    public static final String PUBLIC_SUBNET_MASK = \"24\";\n+\n+    public static final int PUBLIC_SUBNET_STARTING_IP = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Nzk1NzU3", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#pullrequestreview-365795757", "createdAt": "2020-02-27T16:17:03Z", "commit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNzowNFrOFvXmvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNzowNFrOFvXmvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxNDE0MQ==", "bodyText": "3 more private for cb's", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#discussion_r385214141", "createdAt": "2020-02-27T16:17:04Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/network/service/extended/AzureSubnetCidrProvider.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.sequenceiq.environment.network.service.extended;\n+\n+import static com.sequenceiq.environment.network.service.Cidrs.cidrs;\n+import static com.sequenceiq.environment.network.service.extended.DwxSubnetConstants.DWX_SUBNET_FINAL_IP;\n+import static com.sequenceiq.environment.network.service.extended.DwxSubnetConstants.DWX_SUBNET_MASK;\n+import static com.sequenceiq.environment.network.service.extended.DwxSubnetConstants.DWX_SUBNET_STARTING_IP;\n+import static com.sequenceiq.environment.network.service.extended.ExtendedSubnetTypeProvider.PLUS_BITS_FOR_19_MASK;\n+import static com.sequenceiq.environment.network.service.extended.ExtendedSubnetTypeProvider.PLUS_BITS_FOR_24_MASK;\n+import static com.sequenceiq.environment.network.service.extended.MlxSubnetConstants.MLX_SUBNET_FINAL_IP;\n+import static com.sequenceiq.environment.network.service.extended.MlxSubnetConstants.MLX_SUBNET_MASK;\n+import static com.sequenceiq.environment.network.service.extended.MlxSubnetConstants.MLX_SUBNET_STARTING_IP;\n+import static com.sequenceiq.environment.network.service.extended.PublicSubnetConstants.PUBLIC_SUBNET_FINAL_IP;\n+import static com.sequenceiq.environment.network.service.extended.PublicSubnetConstants.PUBLIC_SUBNET_MASK;\n+import static com.sequenceiq.environment.network.service.extended.PublicSubnetConstants.PUBLIC_SUBNET_STARTING_IP;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.cloud.model.network.NetworkSubnetRequest;\n+import com.sequenceiq.environment.network.service.Cidrs;\n+import com.sequenceiq.environment.network.service.SubnetCidrProvider;\n+\n+@Component\n+public class AzureSubnetCidrProvider implements SubnetCidrProvider {\n+\n+    private final ExtendedSubnetTypeProvider extendedSubnetTypeProvider;\n+\n+    public AzureSubnetCidrProvider(ExtendedSubnetTypeProvider extendedSubnetTypeProvider) {\n+        this.extendedSubnetTypeProvider = extendedSubnetTypeProvider;\n+    }\n+\n+    @Override\n+    public Cidrs provide(String networkCidr) {\n+        String[] ip = extendedSubnetTypeProvider.getIp(networkCidr);\n+        Set<NetworkSubnetRequest> publicSubnets = new HashSet<>();\n+        Set<NetworkSubnetRequest> privateSubnets = new HashSet<>();\n+\n+        for (int i = PUBLIC_SUBNET_STARTING_IP; i <= PUBLIC_SUBNET_FINAL_IP; i += PLUS_BITS_FOR_24_MASK) {\n+            ip[2] = String.valueOf(i);\n+            String cidr = String.join(\".\", ip) + \"/\" + PUBLIC_SUBNET_MASK;\n+            publicSubnets.add(new NetworkSubnetRequest(cidr, SubnetType.PUBLIC.name()));\n+        }\n+        for (int i = MLX_SUBNET_STARTING_IP; i <= MLX_SUBNET_FINAL_IP; i += PLUS_BITS_FOR_24_MASK) {\n+            ip[2] = String.valueOf(i);\n+            String cidr = String.join(\".\", ip) + \"/\" + MLX_SUBNET_MASK;\n+            privateSubnets.add(new NetworkSubnetRequest(cidr, SubnetType.MLX.name()));\n+        }\n+        // we need to increase this because of the masking and on Azure we need to start from .64\n+        for (int i = DWX_SUBNET_STARTING_IP; i <= DWX_SUBNET_FINAL_IP; i += PLUS_BITS_FOR_19_MASK) {\n+            ip[2] = String.valueOf(i);\n+            String cidr = String.join(\".\", ip) + \"/\" + DWX_SUBNET_MASK;\n+            privateSubnets.add(new NetworkSubnetRequest(cidr, SubnetType.DWX.name()));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Nzk2MjUy", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#pullrequestreview-365796252", "createdAt": "2020-02-27T16:17:37Z", "commit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNzozN1rOFvXoPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxNzozN1rOFvXoPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxNDUyNw==", "bodyText": "CB", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#discussion_r385214527", "createdAt": "2020-02-27T16:17:37Z", "author": {"login": "doktoric"}, "path": "environment/src/main/java/com/sequenceiq/environment/network/service/extended/SubnetType.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package com.sequenceiq.environment.network.service.extended;\n+\n+public enum SubnetType {\n+    PUBLIC, MLX, DWX", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTU1Njcx", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#pullrequestreview-365955671", "createdAt": "2020-02-27T19:56:27Z", "commit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTo1NjoyN1rOFvfMGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTo1NjoyN1rOFvfMGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzODM5Mw==", "bodyText": "is it ok to reffer here as a string?", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#discussion_r385338393", "createdAt": "2020-02-27T19:56:27Z", "author": {"login": "doktoric"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsPlatformResources.java", "diffHunk": "@@ -397,7 +397,8 @@ private DescribeVpcsRequest getDescribeVpcsRequestWIthFilters(Map<String, String\n                             subnet.getCidrBlock(),\n                             !hasInternetGateway,\n                             subnet.getMapPublicIpOnLaunch(),\n-                            hasInternetGateway)\n+                            hasInternetGateway,\n+                            \"PUBLIC\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MzM1ODk2", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#pullrequestreview-366335896", "createdAt": "2020-02-28T11:35:28Z", "commit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21e1a6c2a8024f33191b0e8e27b0baf665095078", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/21e1a6c2a8024f33191b0e8e27b0baf665095078", "committedDate": "2020-02-27T15:35:47Z", "message": "CB-5079 - separating subnet types in network response"}, "afterCommit": {"oid": "9f77584b042d4bc7dd726992f081b4bcdfc21e1b", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9f77584b042d4bc7dd726992f081b4bcdfc21e1b", "committedDate": "2020-02-29T13:37:34Z", "message": "CB-5079 - separating subnet types in network response"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODIzNzE3", "url": "https://github.com/hortonworks/cloudbreak/pull/7408#pullrequestreview-367823717", "createdAt": "2020-03-03T09:35:08Z", "commit": {"oid": "9f77584b042d4bc7dd726992f081b4bcdfc21e1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f77584b042d4bc7dd726992f081b4bcdfc21e1b", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9f77584b042d4bc7dd726992f081b4bcdfc21e1b", "committedDate": "2020-02-29T13:37:34Z", "message": "CB-5079 - separating subnet types in network response"}, "afterCommit": {"oid": "6eee1d189d8ef069b992f0804a23c7b449296558", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/6eee1d189d8ef069b992f0804a23c7b449296558", "committedDate": "2020-03-04T07:17:56Z", "message": "CB-5079 - separating subnet types in network response"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6eee1d189d8ef069b992f0804a23c7b449296558", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/6eee1d189d8ef069b992f0804a23c7b449296558", "committedDate": "2020-03-04T07:17:56Z", "message": "CB-5079 - separating subnet types in network response"}, "afterCommit": {"oid": "40d3bddb2fd90682e48d5c5f4eead6ea71b791ca", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/40d3bddb2fd90682e48d5c5f4eead6ea71b791ca", "committedDate": "2020-03-04T10:06:23Z", "message": "CB-5079 - separating subnet types in network response"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40d3bddb2fd90682e48d5c5f4eead6ea71b791ca", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/40d3bddb2fd90682e48d5c5f4eead6ea71b791ca", "committedDate": "2020-03-04T10:06:23Z", "message": "CB-5079 - separating subnet types in network response"}, "afterCommit": {"oid": "a11d59dfc948eb274bf5eb66bd886da6b17a9ba3", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a11d59dfc948eb274bf5eb66bd886da6b17a9ba3", "committedDate": "2020-03-04T10:19:45Z", "message": "CB-5079 - separating subnet types in network response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09d515df9b25d5ebe199941b79262acd0c8cf825", "author": {"user": {"login": "attilapalfi92", "name": "Attila P\u00e1lfi"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/09d515df9b25d5ebe199941b79262acd0c8cf825", "committedDate": "2020-03-04T13:22:52Z", "message": "original author: Richard Doktorics - Revert \"Revert \"CB-5076 subnet configurations for experiences\"\""}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a11d59dfc948eb274bf5eb66bd886da6b17a9ba3", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a11d59dfc948eb274bf5eb66bd886da6b17a9ba3", "committedDate": "2020-03-04T10:19:45Z", "message": "CB-5079 - separating subnet types in network response"}, "afterCommit": {"oid": "64163fea3469da8417c12475aacdbec636cd35a5", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/64163fea3469da8417c12475aacdbec636cd35a5", "committedDate": "2020-03-04T13:24:35Z", "message": "CB-5079 - separating subnet types in network response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7640e6419c9b76e1b16225c483a0562fdabb639", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a7640e6419c9b76e1b16225c483a0562fdabb639", "committedDate": "2020-03-04T13:51:41Z", "message": "CB-5079 - separating subnet types in network response"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64163fea3469da8417c12475aacdbec636cd35a5", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/64163fea3469da8417c12475aacdbec636cd35a5", "committedDate": "2020-03-04T13:24:35Z", "message": "CB-5079 - separating subnet types in network response"}, "afterCommit": {"oid": "a7640e6419c9b76e1b16225c483a0562fdabb639", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a7640e6419c9b76e1b16225c483a0562fdabb639", "committedDate": "2020-03-04T13:51:41Z", "message": "CB-5079 - separating subnet types in network response"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2612, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}