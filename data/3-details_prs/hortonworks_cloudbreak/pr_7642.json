{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMjk5MTE3", "number": 7642, "title": "CB-6122 Introduce environment level http proxy config, which will be used on the freeipa, sdx and distrox clusters automatically", "bodyText": "@keyki or @lacikaaa pls review", "createdAt": "2020-03-24T23:06:41Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7642", "merged": true, "mergeCommit": {"oid": "8d126db9f0237bb8e75b308d88533a1070163b9c"}, "closed": true, "closedAt": "2020-04-06T08:46:28Z", "author": {"login": "schfeca75"}, "timelineItems": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ7v1XgBqjMxNjE5NTQyOTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcU5_uvAFqTM4ODAxMjY5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c75daa1479a00a7006d3d745b6a28fc2f97d20b", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3c75daa1479a00a7006d3d745b6a28fc2f97d20b", "committedDate": "2020-03-24T23:00:56Z", "message": "proxy support"}, "afterCommit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/2f838f95f861db960d5aa2a0c2dc37fdd7414c95", "committedDate": "2020-03-24T23:45:02Z", "message": "proxy support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTM5NTIz", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-380939523", "createdAt": "2020-03-25T08:31:44Z", "commit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODozMTo0NFrOF7QeCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODozMTo0NFrOF7QeCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4MDEzNg==", "bodyText": "so I feel some inconsistency here\nYou have an optional and call get without checking if it's present and then do a null check in userdatabuilder. I suggest to pass the optional as param and replace the null check with isPresent", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r397680136", "createdAt": "2020-03-25T08:31:44Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/image/userdata/UserDataService.java", "diffHunk": "@@ -84,8 +89,9 @@ public void createUserData(Long stackId) throws CloudbreakImageNotFoundException\n         try {\n             PlatformParameters platformParameters = platformParametersFuture.get();\n             CcmParameters ccmParameters = fetchCcmParameters(stack);\n+            Optional<ProxyConfig> proxyConfig = proxyConfigDtoService.getByEnvironmentCrn(stack.getEnvironmentCrn());\n             Map<InstanceGroupType, String> userData = userDataBuilder.buildUserData(Platform.platform(stack.getCloudPlatform()), cbSshKeyDer,\n-                    sshUser, platformParameters, saltBootPassword, cbCert, ccmParameters);\n+                    sshUser, platformParameters, saltBootPassword, cbCert, ccmParameters, proxyConfig.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTQwMTMw", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-380940130", "createdAt": "2020-03-25T08:32:38Z", "commit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODozMjozOFrOF7Qf2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODozMjozOFrOF7Qf2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4MDYwMg==", "bodyText": "if this can be null please use Optional.ofNullable", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r397680602", "createdAt": "2020-03-25T08:32:38Z", "author": {"login": "lacikaaa"}, "path": "environment-support/src/main/java/com/sequenceiq/cloudbreak/service/proxy/ProxyConfigDtoService.java", "diffHunk": "@@ -37,6 +38,14 @@ public ProxyConfig getByCrn(String resourceCrn) {\n         return convert(getProxyConfig(resourceCrn, proxyEndpoint::getByResourceCrn));\n     }\n \n+    public Optional<ProxyConfig> getByEnvironmentCrn(String environmentCrn) {\n+        try {\n+            return Optional.of(convert(proxyEndpoint.getByEnvironmentCrn(environmentCrn)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTQ0ODE5", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-380944819", "createdAt": "2020-03-25T08:39:59Z", "commit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTQ4Mjg0", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-380948284", "createdAt": "2020-03-25T08:45:18Z", "commit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0NToxOVrOF7Q6Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0NToxOVrOF7Q6Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NzMyNg==", "bodyText": "if we add the id to proxyconfig we won't increase the env table size, and we could move easily to assign multiple proxy to one env if needed", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r397687326", "createdAt": "2020-03-25T08:45:19Z", "author": {"login": "lacikaaa"}, "path": "environment/src/main/resources/schema/app/20200324204731_CB-6122_Environment_level_http_proxy_config.sql", "diffHunk": "@@ -0,0 +1,14 @@\n+-- // CB-6122 Environment level http proxy config\n+-- Migration SQL that makes the change goes here.\n+\n+ALTER TABLE environment ADD COLUMN IF NOT EXISTS proxyconfig_id BIGINT NULL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTQ5MDM4", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-380949038", "createdAt": "2020-03-25T08:46:26Z", "commit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0NjoyNlrOF7Q8nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0NjoyNlrOF7Q8nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4Nzk2NA==", "bodyText": "I don't know if it's a valid case where we have password and no user, so maybe it would make sense to move the password if into the user if", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r397687964", "createdAt": "2020-03-25T08:46:26Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/resources/init/init.ftl", "diffHunk": "@@ -15,6 +15,19 @@ export SSH_USER=${sshUser}\n export SALT_BOOT_PASSWORD=${saltBootPassword}\n export SALT_BOOT_SIGN_KEY=${signaturePublicKey}\n export CB_CERT=${cbCert}\n+<#if proxyEnabled!false>\n+export IS_PROXY_ENABLED=true\n+export PROXY_HOST=${proxyHost}\n+export PROXY_PORT=${proxyPort}\n+<#if proxyUser??>\n+export PROXY_USER=\"${proxyUser}\"\n+</#if>\n+<#if proxyPassword??>\n+export PROXY_PASSWORD=\"${proxyPassword}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f838f95f861db960d5aa2a0c2dc37fdd7414c95", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/2f838f95f861db960d5aa2a0c2dc37fdd7414c95", "committedDate": "2020-03-24T23:45:02Z", "message": "proxy support"}, "afterCommit": {"oid": "32484ce3c07a4b36c17a3dd927e1936f774c3daa", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/32484ce3c07a4b36c17a3dd927e1936f774c3daa", "committedDate": "2020-03-26T14:25:11Z", "message": "proxy support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32484ce3c07a4b36c17a3dd927e1936f774c3daa", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/32484ce3c07a4b36c17a3dd927e1936f774c3daa", "committedDate": "2020-03-26T14:25:11Z", "message": "proxy support"}, "afterCommit": {"oid": "9db760a5a5abf71898724000895b61539f4e03ca", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9db760a5a5abf71898724000895b61539f4e03ca", "committedDate": "2020-03-28T20:37:46Z", "message": "proxy support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9db760a5a5abf71898724000895b61539f4e03ca", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9db760a5a5abf71898724000895b61539f4e03ca", "committedDate": "2020-03-28T20:37:46Z", "message": "proxy support"}, "afterCommit": {"oid": "f88dfdb5fef4da361907b302c1adfe094d5bbc4b", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/f88dfdb5fef4da361907b302c1adfe094d5bbc4b", "committedDate": "2020-03-28T21:43:13Z", "message": "proxy support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f88dfdb5fef4da361907b302c1adfe094d5bbc4b", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/f88dfdb5fef4da361907b302c1adfe094d5bbc4b", "committedDate": "2020-03-28T21:43:13Z", "message": "proxy support"}, "afterCommit": {"oid": "abc7555d140bb898e6e6dd77e962263a09020cb5", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/abc7555d140bb898e6e6dd77e962263a09020cb5", "committedDate": "2020-03-31T11:12:46Z", "message": "proxy support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abc7555d140bb898e6e6dd77e962263a09020cb5", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/abc7555d140bb898e6e6dd77e962263a09020cb5", "committedDate": "2020-03-31T11:12:46Z", "message": "proxy support"}, "afterCommit": {"oid": "73de350fe5edb39ec2856b772a245d2e6c9002fd", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/73de350fe5edb39ec2856b772a245d2e6c9002fd", "committedDate": "2020-04-01T12:15:58Z", "message": "proxy support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73de350fe5edb39ec2856b772a245d2e6c9002fd", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/73de350fe5edb39ec2856b772a245d2e6c9002fd", "committedDate": "2020-04-01T12:15:58Z", "message": "proxy support"}, "afterCommit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3a040566f00f5f9d494507e494c37044f27a46fb", "committedDate": "2020-04-01T13:08:04Z", "message": "proxy support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTk0MTIw", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-385594120", "createdAt": "2020-04-01T13:39:21Z", "commit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzozOToyMVrOF_BFJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzozOToyMVrOF_BFJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyMjMwOA==", "bodyText": "move this into a method please", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r401622308", "createdAt": "2020-04-01T13:39:21Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/cluster/ClusterBuilderService.java", "diffHunk": "@@ -134,15 +134,13 @@ public void buildCluster(Long stackId) throws CloudbreakException {\n         clusterService.updateCluster(cluster);\n         final Telemetry telemetry = componentConfigProviderService.getTelemetry(stackId);\n \n-        if (cluster.getProxyConfigCrn() != null) {\n-            ProxyConfig proxyConfig = proxyConfigDtoService.getByCrn(cluster.getProxyConfigCrn());\n-            if (proxyConfig != null) {\n-                LOGGER.info(\"proxyConfig is not null, setup proxy for cluster\");\n-                connector.clusterSetupService().setupProxy(proxyConfig);\n-            } else {\n-                LOGGER.info(\"proxyConfig was not found by proxyConfigCrn\");\n-            }\n-        }\n+        Optional<ProxyConfig> proxyConfig = proxyConfigDtoService.getByCrnWithEnvironmentFallback(cluster.getProxyConfigCrn(), cluster.getEnvironmentCrn());\n+        proxyConfig.ifPresentOrElse(\n+                pc -> {\n+                    LOGGER.info(\"proxyConfig is not null, setup proxy for cluster\");\n+                    connector.clusterSetupService().setupProxy(pc);\n+                },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTk2Mzg4", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-385596388", "createdAt": "2020-04-01T13:41:45Z", "commit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0MTo0NlrOF_BMFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0MTo0NlrOF_BMFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNDA4NQ==", "bodyText": "you should add if all has value, so you could use StringUtils#isNoneBlank here", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r401624085", "createdAt": "2020-04-01T13:41:46Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/image/userdata/UserDataBuilder.java", "diffHunk": "@@ -62,9 +64,26 @@ private String build(InstanceGroupType type, Platform cloudPlatform, byte[] cbSs\n         model.put(\"saltBootPassword\", saltBootPassword);\n         model.put(\"cbCert\", cbCert);\n         CcmParameters.addToTemplateModel(ccmParameters, model);\n+        extendModelWithProxyParams(type, proxyConfig, model);\n         return build(model);\n     }\n \n+    private void extendModelWithProxyParams(InstanceGroupType type, ProxyConfig proxyConfig, Map<String, Object> model) {\n+        if (type == InstanceGroupType.GATEWAY && proxyConfig != null) {\n+            model.put(\"proxyEnabled\", Boolean.TRUE);\n+            model.put(\"proxyHost\", proxyConfig.getServerHost());\n+            model.put(\"proxyPort\", proxyConfig.getServerPort().toString());\n+            if (!StringUtils.isEmpty(proxyConfig.getUserName())) {\n+                model.put(\"proxyUser\", proxyConfig.getUserName());\n+            }\n+            if (!StringUtils.isEmpty(proxyConfig.getPassword())) {\n+                model.put(\"proxyPassword\", proxyConfig.getPassword());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTk4Nzc4", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-385598778", "createdAt": "2020-04-01T13:44:20Z", "commit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0NDoyMFrOF_BTjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0NDoyMFrOF_BTjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNTk5Ng==", "bodyText": "are we sure we need it in the Simple one?", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r401625996", "createdAt": "2020-04-01T13:44:20Z", "author": {"login": "lacikaaa"}, "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/environment/model/response/SimpleEnvironmentResponse.java", "diffHunk": "@@ -14,6 +15,8 @@\n \n     private CredentialViewResponse credential;\n \n+    private ProxyViewResponse proxyConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjAyNjkx", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-385602691", "createdAt": "2020-04-01T13:48:27Z", "commit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0ODoyN1rOF_BfjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0ODoyN1rOF_BfjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyOTA2OA==", "bodyText": "don't forget about this", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r401629068", "createdAt": "2020-04-01T13:48:27Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/config/FreeIpaConfigService.java", "diffHunk": "@@ -72,6 +76,7 @@ private FreeIpaBackupConfigView determineAndSetBackup(Stack stack) {\n         final FreeIpaBackupConfigView.Builder builder = new FreeIpaBackupConfigView.Builder();\n         if (backup != null) {\n             builder.withEnabled(true)\n+//            builder.withEnabled(!proxyConfigDtoService.isProxyConfiguredForEnvironment(stack.getEnvironmentCrn()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjAzNTU4", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-385603558", "createdAt": "2020-04-01T13:49:21Z", "commit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0OToyMVrOF_BibA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0OToyMVrOF_BibA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyOTgwNA==", "bodyText": "same as above, both or neither of them, maybe it worth adding validation on proxy config creation if doesn't exist", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r401629804", "createdAt": "2020-04-01T13:49:21Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/image/userdata/UserDataBuilder.java", "diffHunk": "@@ -55,9 +57,26 @@ private String build(Platform cloudPlatform, byte[] cbSshKeyDer, String sshUser,\n         model.put(\"saltBootPassword\", saltBootPassword);\n         model.put(\"cbCert\", cbCert);\n         CcmParameters.addToTemplateModel(ccmParameters, model);\n+        extendModelWithProxyParams(proxyConfig, model);\n         return build(model);\n     }\n \n+    private void extendModelWithProxyParams(ProxyConfig proxyConfig, Map<String, Object> model) {\n+        if (proxyConfig != null) {\n+            model.put(\"proxyEnabled\", Boolean.TRUE);\n+            model.put(\"proxyHost\", proxyConfig.getServerHost());\n+            model.put(\"proxyPort\", proxyConfig.getServerPort().toString());\n+            if (!StringUtils.isEmpty(proxyConfig.getUserName())) {\n+                model.put(\"proxyUser\", proxyConfig.getUserName());\n+            }\n+            if (!StringUtils.isEmpty(proxyConfig.getPassword())) {\n+                model.put(\"proxyPassword\", proxyConfig.getPassword());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjA0OTgx", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-385604981", "createdAt": "2020-04-01T13:50:47Z", "commit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo1MDo0OFrOF_BmrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo1MDo0OFrOF_BmrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzMDg5Mw==", "bodyText": "could you add a test for proxy configuration?", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r401630893", "createdAt": "2020-04-01T13:50:48Z", "author": {"login": "lacikaaa"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/image/userdata/UserDataBuilderTest.java", "diffHunk": "@@ -66,7 +66,7 @@ public void testBuildUserDataAzure() throws IOException {\n         String expectedCoreScript = FileReaderUtils.readFileFromClasspath(\"azure-core-init.sh\");\n         // JSA todo add test for CCM parameters\n         Map<InstanceGroupType, String> userdata = underTest.buildUserData(Platform.platform(\"AZURE\"), \"priv-key\".getBytes(),\n-            \"cloudbreak\", getPlatformParameters(), \"pass\", \"cert\", null);\n+            \"cloudbreak\", getPlatformParameters(), \"pass\", \"cert\", null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjA3MjEz", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-385607213", "createdAt": "2020-04-01T13:53:12Z", "commit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo1MzoxMlrOF_BtXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo1MzoxMlrOF_BtXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzMjYwNA==", "bodyText": "drop these if not necessary", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r401632604", "createdAt": "2020-04-01T13:53:12Z", "author": {"login": "lacikaaa"}, "path": "environment-support/build.gradle", "diffHunk": "@@ -0,0 +1,23 @@\n+plugins {\n+  id \"java\"\n+}\n+\n+repositories {\n+  mavenCentral()\n+}\n+\n+configurations.all {\n+  resolutionStrategy {\n+    force group: \"org.ow2.asm\", name: \"asm\", version: asmVersion\n+  }\n+}\n+\n+dependencies {\n+  implementation project(\":authorization-common\")\n+  implementation project(\":environment-api\")\n+  implementation project(\":secret-engine\")\n+\n+//  implementation group: 'javax.inject', name: 'javax.inject', version: '1'\n+ // implementation group: \"org.springframework.boot\", name: \"spring-boot-starter\", version: springBootVersion\n+//  implementation group: \"org.springframework.boot\", name: \"spring-boot-starter-web\", version: springBootVersion", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjA5ODA2", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-385609806", "createdAt": "2020-04-01T13:55:50Z", "commit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo1NTo1MFrOF_B1aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo1NTo1MFrOF_B1aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzNDY2NA==", "bodyText": "call it maybe environment-common or similar if we would like to put more env related stuff here. if it's just proxy related it should be reflected in its name", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r401634664", "createdAt": "2020-04-01T13:55:50Z", "author": {"login": "lacikaaa"}, "path": "settings.gradle", "diffHunk": "@@ -58,4 +58,5 @@ include 'status-checker'\n include 'flow-api'\n include 'template-manager-tag'\n include 'common-handlebar'\n+include 'environment-support'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a040566f00f5f9d494507e494c37044f27a46fb", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3a040566f00f5f9d494507e494c37044f27a46fb", "committedDate": "2020-04-01T13:08:04Z", "message": "proxy support"}, "afterCommit": {"oid": "65ed7578b15d2d5b0ba77da88c90c3b2ad572f5d", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/65ed7578b15d2d5b0ba77da88c90c3b2ad572f5d", "committedDate": "2020-04-02T17:29:23Z", "message": "proxy support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65ed7578b15d2d5b0ba77da88c90c3b2ad572f5d", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/65ed7578b15d2d5b0ba77da88c90c3b2ad572f5d", "committedDate": "2020-04-02T17:29:23Z", "message": "proxy support"}, "afterCommit": {"oid": "d5a6ce4202c3f91c0e0be9542a7cd8632fb2059b", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d5a6ce4202c3f91c0e0be9542a7cd8632fb2059b", "committedDate": "2020-04-03T10:35:00Z", "message": "proxy support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5a6ce4202c3f91c0e0be9542a7cd8632fb2059b", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d5a6ce4202c3f91c0e0be9542a7cd8632fb2059b", "committedDate": "2020-04-03T10:35:00Z", "message": "proxy support"}, "afterCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9bd3cfad030e0e2e7696de1bf24510561da75930", "committedDate": "2020-04-03T11:01:16Z", "message": "proxy support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjMzMzY5", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387233369", "createdAt": "2020-04-03T13:01:38Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMTozOFrOGAUc5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMTozOFrOGAUc5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4ODI2Mw==", "bodyText": "please add logging to both branches here, you could log the config too", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r402988263", "createdAt": "2020-04-03T13:01:38Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/image/userdata/UserDataBuilder.java", "diffHunk": "@@ -62,9 +63,24 @@ private String build(InstanceGroupType type, Platform cloudPlatform, byte[] cbSs\n         model.put(\"saltBootPassword\", saltBootPassword);\n         model.put(\"cbCert\", cbCert);\n         CcmParameters.addToTemplateModel(ccmParameters, model);\n+        extendModelWithProxyParams(type, proxyConfig, model);\n         return build(model);\n     }\n \n+    private void extendModelWithProxyParams(InstanceGroupType type, ProxyConfig proxyConfig, Map<String, Object> model) {\n+        if (type == InstanceGroupType.GATEWAY && proxyConfig != null) {\n+            model.put(\"proxyEnabled\", Boolean.TRUE);\n+            model.put(\"proxyHost\", proxyConfig.getServerHost());\n+            model.put(\"proxyPort\", proxyConfig.getServerPort().toString());\n+            proxyConfig.getProxyAuthentication().ifPresent(auth -> {\n+                model.put(\"proxyUser\", auth.getUserName());\n+                model.put(\"proxyPassword\", auth.getPassword());\n+            });\n+        } else {\n+            model.put(\"proxyEnabled\", Boolean.FALSE);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjMzNzE4", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387233718", "createdAt": "2020-04-03T13:02:05Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMjowNlrOGAUd6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMjowNlrOGAUd6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4ODUyMQ==", "bodyText": "we could log the config here", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r402988521", "createdAt": "2020-04-03T13:02:06Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/cluster/ClusterBuilderService.java", "diffHunk": "@@ -197,6 +188,16 @@ public void buildCluster(Long stackId) throws CloudbreakException {\n         }\n     }\n \n+    private void setupProxy(ClusterApi connector, Cluster cluster) {\n+        Optional<ProxyConfig> proxyConfig = proxyConfigDtoService.getByCrnWithEnvironmentFallback(cluster.getProxyConfigCrn(), cluster.getEnvironmentCrn());\n+        proxyConfig.ifPresentOrElse(\n+                pc -> {\n+                    LOGGER.info(\"proxyConfig is not null, setup proxy for cluster\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjM0MDgw", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387234080", "createdAt": "2020-04-03T13:02:32Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMjozMlrOGAUfEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMjozMlrOGAUfEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4ODgxOQ==", "bodyText": "we should just pass the optional here and not null", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r402988819", "createdAt": "2020-04-03T13:02:32Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/image/userdata/UserDataService.java", "diffHunk": "@@ -84,8 +89,9 @@ public void createUserData(Long stackId) throws CloudbreakImageNotFoundException\n         try {\n             PlatformParameters platformParameters = platformParametersFuture.get();\n             CcmParameters ccmParameters = fetchCcmParameters(stack);\n+            Optional<ProxyConfig> proxyConfig = proxyConfigDtoService.getByEnvironmentCrn(stack.getEnvironmentCrn());\n             Map<InstanceGroupType, String> userData = userDataBuilder.buildUserData(Platform.platform(stack.getCloudPlatform()), cbSshKeyDer,\n-                    sshUser, platformParameters, saltBootPassword, cbCert, ccmParameters);\n+                    sshUser, platformParameters, saltBootPassword, cbCert, ccmParameters, proxyConfig.orElse(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjM0Mzgz", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387234383", "createdAt": "2020-04-03T13:02:59Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMzowMFrOGAUgCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMzowMFrOGAUgCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4OTA2Ng==", "bodyText": "add some log here too", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r402989066", "createdAt": "2020-04-03T13:03:00Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/proxy/ProxyConfigProvider.java", "diffHunk": "@@ -25,18 +25,17 @@\n     private ProxyConfigDtoService proxyConfigDtoService;\n \n     public void decoratePillarWithProxyDataIfNeeded(Map<String, SaltPillarProperties> servicePillar, Cluster cluster) {\n-        String proxyConfigCrn = cluster.getProxyConfigCrn();\n-        if (StringUtils.isNotEmpty(proxyConfigCrn)) {\n-            ProxyConfig proxyConfig = proxyConfigDtoService.getByCrn(proxyConfigCrn);\n+        Optional<ProxyConfig> proxyConfig = proxyConfigDtoService.getByCrnWithEnvironmentFallback(cluster.getProxyConfigCrn(), cluster.getEnvironmentCrn());\n+        proxyConfig.ifPresent(pc -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjM5NTcz", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387239573", "createdAt": "2020-04-03T13:09:48Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowOTo0OFrOGAUveA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowOTo0OFrOGAUveA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5MzAxNg==", "bodyText": "with org.apache.commons.lang3\nStringUtils.isAllEmpty(user,password) || StringUtils.isNoneBlank(user,password)", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r402993016", "createdAt": "2020-04-03T13:09:48Z", "author": {"login": "lacikaaa"}, "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/proxy/validation/ProxyConfigAuthValidator.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.sequenceiq.environment.api.v1.proxy.validation;\n+\n+import javax.validation.ConstraintValidator;\n+import javax.validation.ConstraintValidatorContext;\n+\n+import org.springframework.util.StringUtils;\n+\n+import com.sequenceiq.environment.api.v1.proxy.model.request.ProxyRequest;\n+\n+public class ProxyConfigAuthValidator implements ConstraintValidator<ValidProxyConfigAuthRequest, ProxyRequest> {\n+    @Override\n+    public boolean isValid(ProxyRequest proxyRequest, ConstraintValidatorContext constraintValidatorContext) {\n+        String user = proxyRequest.getUserName();\n+        String password = proxyRequest.getPassword();\n+        return (StringUtils.isEmpty(user) && StringUtils.isEmpty(password)) || (StringUtils.hasLength(user) && StringUtils.hasLength(password));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjQwMjk1", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387240295", "createdAt": "2020-04-03T13:10:43Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoxMDo0NFrOGAUxgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoxMDo0NFrOGAUxgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5MzUzNw==", "bodyText": "test?", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r402993537", "createdAt": "2020-04-03T13:10:44Z", "author": {"login": "lacikaaa"}, "path": "environment-api/src/main/java/com/sequenceiq/environment/api/v1/proxy/validation/ProxyConfigAuthValidator.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.sequenceiq.environment.api.v1.proxy.validation;\n+\n+import javax.validation.ConstraintValidator;\n+import javax.validation.ConstraintValidatorContext;\n+\n+import org.springframework.util.StringUtils;\n+\n+import com.sequenceiq.environment.api.v1.proxy.model.request.ProxyRequest;\n+\n+public class ProxyConfigAuthValidator implements ConstraintValidator<ValidProxyConfigAuthRequest, ProxyRequest> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjQ0Njc5", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387244679", "createdAt": "2020-04-03T13:16:17Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoxNjoxN1rOGAU_Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoxNjoxN1rOGAU_Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5NzAxMA==", "bodyText": "StringUtils#noneBlank as I think if there is faulty config (eg username is some space) in the DB from earlier or whatever, we should not use it as valid", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r402997010", "createdAt": "2020-04-03T13:16:17Z", "author": {"login": "lacikaaa"}, "path": "environment-common/src/main/java/com/sequenceiq/cloudbreak/service/proxy/ProxyConfigDtoService.java", "diffHunk": "@@ -37,16 +42,43 @@ public ProxyConfig getByCrn(String resourceCrn) {\n         return convert(getProxyConfig(resourceCrn, proxyEndpoint::getByResourceCrn));\n     }\n \n+    public Optional<ProxyConfig> getByCrnWithEnvironmentFallback(String resourceCrn, @Nonnull String environmentCrn) {\n+        if (!StringUtils.isEmpty(resourceCrn)) {\n+            return Optional.ofNullable(getByCrn(resourceCrn));\n+        } else {\n+            return getByEnvironmentCrn(environmentCrn);\n+        }\n+    }\n+\n+    public Optional<ProxyConfig> getByEnvironmentCrn(String environmentCrn) {\n+        try {\n+            return Optional.ofNullable(convert(proxyEndpoint.getByEnvironmentCrn(environmentCrn)));\n+        } catch (NotFoundException ex) {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    public boolean isProxyConfiguredForEnvironment(String environmentCrn) {\n+        try {\n+            return proxyEndpoint.getByEnvironmentCrn(environmentCrn) != null;\n+        } catch (NotFoundException ex) {\n+            return false;\n+        }\n+    }\n+\n     private ProxyConfig convert(ProxyResponse proxyResponse) {\n-        return ProxyConfig.builder()\n+        ProxyConfig.ProxyConfigBuilder proxyConfigBuilder = ProxyConfig.builder()\n                 .withName(proxyResponse.getName())\n                 .withCrn(proxyResponse.getCrn())\n                 .withProtocol(proxyResponse.getProtocol())\n                 .withServerHost(proxyResponse.getHost())\n-                .withServerPort(proxyResponse.getPort())\n-                .withUserName(getSecret(proxyResponse.getUserName()))\n-                .withPassword(getSecret(proxyResponse.getPassword()))\n-                .build();\n+                .withServerPort(proxyResponse.getPort());\n+        if (proxyResponse.getUserName() != null && proxyResponse.getPassword() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjQ3NzQ4", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387247748", "createdAt": "2020-04-03T13:20:04Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyMDowNFrOGAVISw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyMDowNFrOGAVISw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5OTM3MQ==", "bodyText": "creator?", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r402999371", "createdAt": "2020-04-03T13:20:04Z", "author": {"login": "lacikaaa"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentResourceService.java", "diffHunk": "@@ -72,6 +77,18 @@ public Credential getCredentialFromRequest(CredentialAwareEnvRequest request, St\n         return credential;\n     }\n \n+    public Optional<ProxyConfig> getProxyConfig(String proxyConfigName, String accountId, String creator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjQ4NTg2", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387248586", "createdAt": "2020-04-03T13:21:01Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyMTowMVrOGAVKtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyMTowMVrOGAVKtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5OTk4OQ==", "bodyText": "move down one line", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r402999989", "createdAt": "2020-04-03T13:21:01Z", "author": {"login": "lacikaaa"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java", "diffHunk": "@@ -127,7 +128,10 @@ private Environment initializeEnvironment(EnvironmentCreationDto creationDto) {\n         environment.setResourceCrn(creationDto.getCrn());\n         Credential credential = environmentResourceService\n                 .getCredentialFromRequest(creationDto.getCredential(), creationDto.getAccountId(), creationDto.getCreator());\n+        Optional<ProxyConfig> proxyConfig = environmentResourceService.getProxyConfig(creationDto.getProxyConfigName(), creationDto.getAccountId(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjU0Mjc1", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387254275", "createdAt": "2020-04-03T13:27:43Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyNzo0M1rOGAVbuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyNzo0M1rOGAVbuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNDM0NQ==", "bodyText": "it looks like to it's not used", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r403004345", "createdAt": "2020-04-03T13:27:43Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/config/FreeIpaConfigService.java", "diffHunk": "@@ -48,6 +49,9 @@\n     @Inject\n     private FreeIpaClientFactory freeIpaClientFactory;\n \n+    @Inject\n+    private ProxyConfigDtoService proxyConfigDtoService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjU0Njkw", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387254690", "createdAt": "2020-04-03T13:28:09Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyODowOVrOGAVc8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyODowOVrOGAVc8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNDY1Ng==", "bodyText": "some logging here too please", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r403004656", "createdAt": "2020-04-03T13:28:09Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/image/userdata/UserDataBuilder.java", "diffHunk": "@@ -55,9 +56,24 @@ private String build(Platform cloudPlatform, byte[] cbSshKeyDer, String sshUser,\n         model.put(\"saltBootPassword\", saltBootPassword);\n         model.put(\"cbCert\", cbCert);\n         CcmParameters.addToTemplateModel(ccmParameters, model);\n+        extendModelWithProxyParams(proxyConfig, model);\n         return build(model);\n     }\n \n+    private void extendModelWithProxyParams(ProxyConfig proxyConfig, Map<String, Object> model) {\n+        if (proxyConfig != null) {\n+            model.put(\"proxyEnabled\", Boolean.TRUE);\n+            model.put(\"proxyHost\", proxyConfig.getServerHost());\n+            model.put(\"proxyPort\", proxyConfig.getServerPort().toString());\n+            proxyConfig.getProxyAuthentication().ifPresent(auth -> {\n+                model.put(\"proxyUser\", auth.getUserName());\n+                model.put(\"proxyPassword\", auth.getPassword());\n+            });\n+        } else {\n+            model.put(\"proxyEnabled\", Boolean.FALSE);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjU1MTA3", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387255107", "createdAt": "2020-04-03T13:28:37Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyODozN1rOGAVeRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyODozN1rOGAVeRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNDk5Ng==", "bodyText": "pass on optional instead of null here too", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r403004996", "createdAt": "2020-04-03T13:28:37Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/image/userdata/UserDataService.java", "diffHunk": "@@ -84,8 +89,9 @@ public void createUserData(Long stackId) {\n         try {\n             PlatformParameters platformParameters = platformParametersFuture.get();\n             CcmParameters ccmParameters = fetchCcmParameters(stack);\n+            Optional<ProxyConfig> proxyConfig = proxyConfigDtoService.getByEnvironmentCrn(stack.getEnvironmentCrn());\n             String userData = userDataBuilder.buildUserData(Platform.platform(stack.getCloudPlatform()), cbSshKeyDer, sshUser, platformParameters,\n-                    saltBootPassword, cbCert, ccmParameters);\n+                    saltBootPassword, cbCert, ccmParameters, proxyConfig.orElse(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjU1NTYy", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-387255562", "createdAt": "2020-04-03T13:29:12Z", "commit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyOToxMlrOGAVfvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyOToxMlrOGAVfvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNTM3NQ==", "bodyText": "and it's not necessary here neither", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#discussion_r403005375", "createdAt": "2020-04-03T13:29:12Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/test/java/com/sequenceiq/freeipa/service/freeipa/config/FreeIpaConfigServiceTest.java", "diffHunk": "@@ -69,6 +70,9 @@\n     @Mock\n     private FreeIpaClientFactory freeIpaClientFactory;\n \n+    @Mock\n+    private ProxyConfigDtoService proxyConfigDtoService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bd3cfad030e0e2e7696de1bf24510561da75930", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9bd3cfad030e0e2e7696de1bf24510561da75930", "committedDate": "2020-04-03T11:01:16Z", "message": "proxy support"}, "afterCommit": {"oid": "7c44534de44a8dc76e44d383502f6b473645fe62", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/7c44534de44a8dc76e44d383502f6b473645fe62", "committedDate": "2020-04-03T15:37:05Z", "message": "proxy support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c44534de44a8dc76e44d383502f6b473645fe62", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/7c44534de44a8dc76e44d383502f6b473645fe62", "committedDate": "2020-04-03T15:37:05Z", "message": "proxy support"}, "afterCommit": {"oid": "9ca1b72ecca7dcce44b1baafa453b3dee00dd56f", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9ca1b72ecca7dcce44b1baafa453b3dee00dd56f", "committedDate": "2020-04-03T15:45:47Z", "message": "proxy support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ca1b72ecca7dcce44b1baafa453b3dee00dd56f", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9ca1b72ecca7dcce44b1baafa453b3dee00dd56f", "committedDate": "2020-04-03T15:45:47Z", "message": "proxy support"}, "afterCommit": {"oid": "9c001e3e5c6dc4a19c95488204bfba5099db2b3f", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9c001e3e5c6dc4a19c95488204bfba5099db2b3f", "committedDate": "2020-04-03T16:20:05Z", "message": "proxy support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c001e3e5c6dc4a19c95488204bfba5099db2b3f", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9c001e3e5c6dc4a19c95488204bfba5099db2b3f", "committedDate": "2020-04-03T16:20:05Z", "message": "proxy support"}, "afterCommit": {"oid": "f688a618489a5f0871236493f9b42df835d005a4", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/f688a618489a5f0871236493f9b42df835d005a4", "committedDate": "2020-04-03T18:03:08Z", "message": "CB-6122 Introduce environment level http proxy config, which will be used on the freeipa, sdx and distrox clusters automatically"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9890fe69f55f1380b2b7c47175ea38c2b18ceb16", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9890fe69f55f1380b2b7c47175ea38c2b18ceb16", "committedDate": "2020-04-06T07:56:13Z", "message": "CB-6122 Introduce environment level http proxy config, which will be used on the freeipa, sdx and distrox clusters automatically"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f688a618489a5f0871236493f9b42df835d005a4", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/f688a618489a5f0871236493f9b42df835d005a4", "committedDate": "2020-04-03T18:03:08Z", "message": "CB-6122 Introduce environment level http proxy config, which will be used on the freeipa, sdx and distrox clusters automatically"}, "afterCommit": {"oid": "9890fe69f55f1380b2b7c47175ea38c2b18ceb16", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9890fe69f55f1380b2b7c47175ea38c2b18ceb16", "committedDate": "2020-04-06T07:56:13Z", "message": "CB-6122 Introduce environment level http proxy config, which will be used on the freeipa, sdx and distrox clusters automatically"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDEyNjky", "url": "https://github.com/hortonworks/cloudbreak/pull/7642#pullrequestreview-388012692", "createdAt": "2020-04-06T07:58:46Z", "commit": {"oid": "9890fe69f55f1380b2b7c47175ea38c2b18ceb16"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2508, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}