{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDcwMTkz", "number": 8639, "title": "CB-8144: Fix Cloudbreak Core DNS registration and TTL", "bodyText": "Fix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\nMore Details:\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n\nThe flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n\nThe actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\nWhat was tested:\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale.\nSee detailed description in the commit message.", "createdAt": "2020-07-24T20:12:12Z", "url": "https://github.com/hortonworks/cloudbreak/pull/8639", "merged": true, "mergeCommit": {"oid": "f66ccc039e0e098a8f4bf0fab8043f6923053a4e"}, "closed": true, "closedAt": "2020-07-30T08:17:34Z", "author": {"login": "jamisonbennett"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4Kk-sgFqTQ1NTE4NTE0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5z7xwgBqjM2MDEzNTY0OTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTg1MTQ3", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#pullrequestreview-455185147", "createdAt": "2020-07-24T21:05:17Z", "commit": {"oid": "d96f489c74e51336fc9a9b4d16f7b9f5e857ba5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d96f489c74e51336fc9a9b4d16f7b9f5e857ba5c", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d96f489c74e51336fc9a9b4d16f7b9f5e857ba5c", "committedDate": "2020-07-24T20:01:12Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale."}, "afterCommit": {"oid": "9051e484b9dde8e0009673a569b3876b0d022457", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9051e484b9dde8e0009673a569b3876b0d022457", "committedDate": "2020-07-25T00:38:16Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NTA5NTM2", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#pullrequestreview-455509536", "createdAt": "2020-07-27T06:46:02Z", "commit": {"oid": "9051e484b9dde8e0009673a569b3876b0d022457"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjo0NjowMlrOG3VlQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjo0NjowMlrOG3VlQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY3ODQ2NQ==", "bodyText": "I think you should grep for .in-addr.arpa. here", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r460678465", "createdAt": "2020-07-27T06:46:02Z", "author": {"login": "lacikaaa"}, "path": "orchestrator-salt/src/main/resources/salt/salt/sssd/template/add_dns_record.j2", "diffHunk": "@@ -0,0 +1,43 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+\n+echo \"$PW\" | kinit {{ pillar['sssd-ipa']['principal'] }}\n+\n+set -x\n+\n+HOSTNAME=$(hostname)\n+FQDN=$(hostname -f)\n+IPADDR=$(hostname -i)\n+REVERSE_IP=$(hostname -i | awk -F. '{print $4\".\"$3\".\" $2\".\"$1}')\n+\n+# dnsrecord-add must either add the record or modify it\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  ipa dnsrecord-add {{ pillar['sssd-ipa']['domain'] }}. \"${HOSTNAME}\" \"--a-rec=${IPADDR}\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}\n+fi\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  echo \"Failed to set DNS A-record for ${HOSTNAME}\"\n+  false\n+fi\n+\n+for zone in $(ipa dnszone-find --raw | grep idnsname | cut -d':' -f2 | xargs)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9051e484b9dde8e0009673a569b3876b0d022457"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9051e484b9dde8e0009673a569b3876b0d022457", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9051e484b9dde8e0009673a569b3876b0d022457", "committedDate": "2020-07-25T00:38:16Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale."}, "afterCommit": {"oid": "968ec77ef054470cf9e84564057498f65ffc6bad", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/968ec77ef054470cf9e84564057498f65ffc6bad", "committedDate": "2020-07-27T18:43:08Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "968ec77ef054470cf9e84564057498f65ffc6bad", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/968ec77ef054470cf9e84564057498f65ffc6bad", "committedDate": "2020-07-27T18:43:08Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale."}, "afterCommit": {"oid": "5423f3b7cc542897814b46777c5e1a4f6f91530a", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/5423f3b7cc542897814b46777c5e1a4f6f91530a", "committedDate": "2020-07-27T18:50:50Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzcyNzE0", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#pullrequestreview-456372714", "createdAt": "2020-07-28T07:32:28Z", "commit": {"oid": "5423f3b7cc542897814b46777c5e1a4f6f91530a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzozMjoyOVrOG4AMcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzozMjoyOVrOG4AMcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3NjYyNg==", "bodyText": "if this if is false, shouldn't we exit the loop? I mean in case we find the record, so it's successfully added we shouldn't iterate any more", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r461376626", "createdAt": "2020-07-28T07:32:29Z", "author": {"login": "lacikaaa"}, "path": "orchestrator-salt/src/main/resources/salt/salt/sssd/template/add_dns_record.j2", "diffHunk": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+\n+echo \"$PW\" | kinit {{ pillar['sssd-ipa']['principal'] }}\n+\n+set -x\n+\n+HOSTNAME=$(hostname)\n+FQDN=$(hostname -f)\n+IPADDR=$(hostname -i)\n+REVERSE_IP=$(hostname -i | awk -F. '{print $4\".\"$3\".\" $2\".\"$1}')\n+\n+# dnsrecord-add must either add the record or modify it\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  ipa dnsrecord-add {{ pillar['sssd-ipa']['domain'] }}. \"${HOSTNAME}\" \"--a-rec=${IPADDR}\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}\n+fi\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  echo \"Failed to set DNS A-record for ${HOSTNAME}\"\n+  false\n+fi\n+\n+LONGEST_MATCHING_ZONE_FOUND=0\n+for zone in $(ipa dnszone-find --raw | grep \"idnsname:.*\\.in-addr\\.arpa\\.\" | cut -d':' -f2 | awk '{ print length, $0 }' | sort -n -r | awk '{ print $2 }' | xargs)\n+do\n+    ZONE_NET=${zone//.in-addr.arpa./}\n+    if [[ $LONGEST_MATCHING_ZONE_FOUND -eq 0 ]] && echo \"$REVERSE_IP\" | grep -qE \"$ZONE_NET$\"; then\n+        LONGEST_MATCHING_ZONE_FOUND=1\n+        REVERSE_RECORD_NAME=$(echo \"$REVERSE_IP\" | sed \"s/.$ZONE_NET$//g\")\n+        # dnsrecord-add must either add the record or modify it\n+        if ! ipa dnsrecord-find \"$zone\" \"--name=$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}; then\n+          ipa dnsrecord-add \"$zone\" \"$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}\n+        fi\n+        if ! ipa dnsrecord-find \"$zone\" \"--name=$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5423f3b7cc542897814b46777c5e1a4f6f91530a"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzczODQz", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#pullrequestreview-456373843", "createdAt": "2020-07-28T07:34:13Z", "commit": {"oid": "5423f3b7cc542897814b46777c5e1a4f6f91530a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzozNDoxM1rOG4AP7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzozNDoxM1rOG4AP7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3NzUxOQ==", "bodyText": "due to set -e this won't run in case of failure. If we really want to destroy it we should use trap for this", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r461377519", "createdAt": "2020-07-28T07:34:13Z", "author": {"login": "lacikaaa"}, "path": "orchestrator-salt/src/main/resources/salt/salt/sssd/template/add_dns_record.j2", "diffHunk": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+\n+echo \"$PW\" | kinit {{ pillar['sssd-ipa']['principal'] }}\n+\n+set -x\n+\n+HOSTNAME=$(hostname)\n+FQDN=$(hostname -f)\n+IPADDR=$(hostname -i)\n+REVERSE_IP=$(hostname -i | awk -F. '{print $4\".\"$3\".\" $2\".\"$1}')\n+\n+# dnsrecord-add must either add the record or modify it\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  ipa dnsrecord-add {{ pillar['sssd-ipa']['domain'] }}. \"${HOSTNAME}\" \"--a-rec=${IPADDR}\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}\n+fi\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  echo \"Failed to set DNS A-record for ${HOSTNAME}\"\n+  false\n+fi\n+\n+LONGEST_MATCHING_ZONE_FOUND=0\n+for zone in $(ipa dnszone-find --raw | grep \"idnsname:.*\\.in-addr\\.arpa\\.\" | cut -d':' -f2 | awk '{ print length, $0 }' | sort -n -r | awk '{ print $2 }' | xargs)\n+do\n+    ZONE_NET=${zone//.in-addr.arpa./}\n+    if [[ $LONGEST_MATCHING_ZONE_FOUND -eq 0 ]] && echo \"$REVERSE_IP\" | grep -qE \"$ZONE_NET$\"; then\n+        LONGEST_MATCHING_ZONE_FOUND=1\n+        REVERSE_RECORD_NAME=$(echo \"$REVERSE_IP\" | sed \"s/.$ZONE_NET$//g\")\n+        # dnsrecord-add must either add the record or modify it\n+        if ! ipa dnsrecord-find \"$zone\" \"--name=$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}; then\n+          ipa dnsrecord-add \"$zone\" \"$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}\n+        fi\n+        if ! ipa dnsrecord-find \"$zone\" \"--name=$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}; then\n+          echo \"Failed to set Reverse DNS PTR-record for ${FQDN}\"\n+          false\n+        fi\n+    fi\n+done\n+\n+# Destroy the krbtgt\n+kdestroy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5423f3b7cc542897814b46777c5e1a4f6f91530a"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5423f3b7cc542897814b46777c5e1a4f6f91530a", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/5423f3b7cc542897814b46777c5e1a4f6f91530a", "committedDate": "2020-07-27T18:50:50Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale."}, "afterCommit": {"oid": "9d45b411f92f725d56fdcd168ecf3c1f19105e4b", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9d45b411f92f725d56fdcd168ecf3c1f19105e4b", "committedDate": "2020-07-28T18:59:08Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MzYxODg0", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#pullrequestreview-457361884", "createdAt": "2020-07-29T09:44:10Z", "commit": {"oid": "9d45b411f92f725d56fdcd168ecf3c1f19105e4b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwOTo0NDoxMFrOG4w4Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwOTo0NDoxMFrOG4w4Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE3NDI1MA==", "bodyText": "it looks like you have some extra character here", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r462174250", "createdAt": "2020-07-29T09:44:10Z", "author": {"login": "lacikaaa"}, "path": "orchestrator-salt/src/main/resources/salt/salt/sssd/ipa.sls", "diffHunk": "@@ -12,30 +12,27 @@ ipa_packages_install:\n     - unless:\n       - rpm -q ipa-client openldap openldap-clients\n \n+/opt/salt/scripts/join_ipa.sh:\n+  file.managed:\n+    - makedirs: True\n+    - user: root\n+    - group: root\n+    - mode: 700\n+    - source: salt://sssd/template/join_ipa.j2\n+    - template: jinja\n+\n join_ipa:\n   cmd.run:\n {% if metadata.platform != 'YARN' %}\n-    - name: |\n-        ipa-client-install --unattended --uninstall\n-        ipa-client-install --realm={{salt['pillar.get']('sssd-ipa:realm')}} \\\n-          --domain={{salt['pillar.get']('sssd-ipa:domain')}} --mkhomedir --principal={{salt['pillar.get']('sssd-ipa:principal')}} \\\n-          {%- if \"ID_BROKER_CLOUD_IDENTITY_ROLE\" in grains.get('roles', []) %}\n-          --no-sshd --no-ssh \\\n-          {%- endif %}\n-          --password $PW --unattended --force-join --ssh-trust-dns --no-ntp && echo $(date +%Y-%m-%d:%H:%M:%S) >> /var/log/ipa-join-executed\n+    - name: /opt/salt/scripts/join_ipa.sh && echo $(date +%Y-%m-%d:%H:%M:%S) >> /var/log/ipa-join-executed\n {% else %}\n-    - name: |\n-        runuser -l root -c 'ipa-client-install --unattended --uninstall\n-        runuser -l root -c 'ipa-client-install --realm={{salt['pillar.get']('sssd-ipa:realm')}} \\\n-          --domain={{salt['pillar.get']('sssd-ipa:domain')}} --mkhomedir --principal={{salt['pillar.get']('sssd-ipa:principal')}} \\\n-          {%- if \"ID_BROKER_CLOUD_IDENTITY_ROLE\" in grains.get('roles', []) %}\n-          --no-sshd --no-ssh \\\n-          {%- endif %}\n-          --password \"{{salt['pillar.get']('sssd-ipa:password')}}\" --unattended --force-join --ssh-trust-dns --no-ntp && echo $(date +%Y-%m-%d:%H:%M:%S) >> /var/log/ipa-join-executed'\n+    - name: runuser -l root -c '/opt/salt/scripts/join_ipa.sh && echo $(date +%Y-%m-%d:%H:%M:%S) >> /var/log/ipa-join-executed'\n {% endif %}\n-    - unless: test -f /var/log/ipa-join-executed || { echo $PW | kinit {{salt['pillar.get']('sssd-ipa:principal')}} && ipa env; }\n+    - unless: test -f /var/log/ipa-join-executed\n     - runas: root\n-    - failhard: True\n+    - failhard: True:$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d45b411f92f725d56fdcd168ecf3c1f19105e4b"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d45b411f92f725d56fdcd168ecf3c1f19105e4b", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9d45b411f92f725d56fdcd168ecf3c1f19105e4b", "committedDate": "2020-07-28T18:59:08Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale."}, "afterCommit": {"oid": "51bb111937f224a3ccd0bd1a7a320ea476413d34", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/51bb111937f224a3ccd0bd1a7a320ea476413d34", "committedDate": "2020-07-29T12:52:38Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NDkyNjY2", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#pullrequestreview-457492666", "createdAt": "2020-07-29T12:56:47Z", "commit": {"oid": "51bb111937f224a3ccd0bd1a7a320ea476413d34"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51bb111937f224a3ccd0bd1a7a320ea476413d34", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/51bb111937f224a3ccd0bd1a7a320ea476413d34", "committedDate": "2020-07-29T12:52:38Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale."}, "afterCommit": {"oid": "07ce97c44bc4e1907d159018782c76b0b44313f7", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/07ce97c44bc4e1907d159018782c76b0b44313f7", "committedDate": "2020-07-29T12:56:31Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07ce97c44bc4e1907d159018782c76b0b44313f7", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/07ce97c44bc4e1907d159018782c76b0b44313f7", "committedDate": "2020-07-29T12:56:31Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale."}, "afterCommit": {"oid": "d19094af8239e091d17e8d933c1c06f784dc1846", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d19094af8239e091d17e8d933c1c06f784dc1846", "committedDate": "2020-07-29T22:29:53Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "071250e95eb70a407fe5badc0a2a9cd977446593", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/071250e95eb70a407fe5badc0a2a9cd977446593", "committedDate": "2020-07-29T23:49:55Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d19094af8239e091d17e8d933c1c06f784dc1846", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/d19094af8239e091d17e8d933c1c06f784dc1846", "committedDate": "2020-07-29T22:29:53Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale."}, "afterCommit": {"oid": "071250e95eb70a407fe5badc0a2a9cd977446593", "author": {"user": {"login": "jamisonbennett", "name": "Jamison Bennett"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/071250e95eb70a407fe5badc0a2a9cd977446593", "committedDate": "2020-07-29T23:49:55Z", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2637, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}