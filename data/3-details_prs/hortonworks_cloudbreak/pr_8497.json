{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Mzc2MjQx", "number": 8497, "title": "CB-7829-CB User Sync in periscope", "bodyText": "Periscope cluster entities are scoped at tenant level.\nPeriscope workspaceId related cluster retrieval is replaced with tenant level retrieval.\nThis change ensures Users belonging to same tenant can configure autoscaling rules as long as they have UMS permissions.\nCloses #CB-7829", "createdAt": "2020-07-07T12:20:44Z", "url": "https://github.com/hortonworks/cloudbreak/pull/8497", "merged": true, "mergeCommit": {"oid": "1a4c6c9144ec7c401363b5297ebbe8b7300b1ff9"}, "closed": true, "closedAt": "2020-07-08T10:43:59Z", "author": {"login": "smaniraju"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcymA-OgFqTQ0Mzg4NTAxNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy34b3gFqTQ0NDYxNDk4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzODg1MDE3", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#pullrequestreview-443885017", "createdAt": "2020-07-07T13:23:35Z", "commit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzoyMzozNVrOGt-Unw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzoyMzozNVrOGt-Unw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg2MDE5MQ==", "bodyText": "I'm not familiar with the UNINITIALIZED_WORKSPACE_ID and why it would have value -1.\nBut if you wish to call a CB API directly, you should always use workspaceID 0.\nThat will default to the tenant default workspace which should be already existing.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r450860191", "createdAt": "2020-07-07T13:23:35Z", "author": {"login": "lnardai"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/filter/CloudbreakUserConfiguratorFilter.java", "diffHunk": "@@ -34,16 +34,15 @@ public CloudbreakUserConfiguratorFilter(AutoscaleRestRequestThreadLocalService r\n \n     @Override\n     protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {\n-        CloudbreakUser cloudbreakUser = authenticatedUserService.getCbUser();\n+        CloudbreakUser cbUser = authenticatedUserService.getCbUser();\n         Long workspaceId = UNINITIALIZED_WORKSPACE_ID;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzOTAwMjEw", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#pullrequestreview-443900210", "createdAt": "2020-07-07T13:40:27Z", "commit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzo0MDoyN1rOGt_DuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzo0MDoyN1rOGt_DuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg3MjI0OA==", "bodyText": "There should be no such endpoint, this controller will be soon removed.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r450872248", "createdAt": "2020-07-07T13:40:27Z", "author": {"login": "lnardai"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/AutoscaleV4Controller.java", "diffHunk": "@@ -126,6 +137,15 @@ public StackV4Response get(String crn) {\n         return stackCommonService.getByCrn(crn, Collections.emptySet());\n     }\n \n+    @Override\n+    @DisableCheckPermissions\n+    @PreAuthorize(\"hasRole('AUTOSCALE')\")\n+    public WorkspaceV4Response getDefaultWorkspaceForUser(String userId, String tenant) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzOTAyMTI4", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#pullrequestreview-443902128", "createdAt": "2020-07-07T13:42:31Z", "commit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68f502b361196357cd20c6503a8c7a29b06af5db", "author": {"user": {"login": "smaniraju", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/68f502b361196357cd20c6503a8c7a29b06af5db", "committedDate": "2020-07-07T12:16:47Z", "message": "CB-7829-CB User Sync in periscope\n\nUser sync from CB to periscope was only done as part of Cluster sync.(Cluster Creator). This causes issue if a user who has not created any DH cluster but tries to configure autoscaling for cluster created by another user in the same workspace.\nHence added support to sync CB User on demand in periscope even any associated user has not created any DH cluster."}, "afterCommit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57", "author": {"user": {"login": "smaniraju", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/77155c69be652adfe1e75f053286e6beafd02a57", "committedDate": "2020-07-07T15:36:56Z", "message": "CB-7829\n\n1. Scope periscope cluster entities at tenant level and not workspace level, since workspace concept is deprecated.\n2. Cluster within same tenant can be configured for autoscaling by tenant user as long as the authenticated user has appropriate UMS Authorization permission."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTMzNzkw", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#pullrequestreview-444533790", "createdAt": "2020-07-08T08:42:12Z", "commit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODo0MjoxMlrOGueGbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODo0MjoxMlrOGueGbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4MDg0NA==", "bodyText": "Where do we use this ClusterID?\nI'm ok with using Name and Tenant since it might come handy on the CLI, but we are not really using clusterID anywhere.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r451380844", "createdAt": "2020-07-08T08:42:12Z", "author": {"login": "lnardai"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/repository/ClusterRepository.java", "diffHunk": "@@ -19,16 +19,16 @@\n     Cluster findByStackId(@Param(\"stackId\") Long stackId);\n \n     @Query(\" SELECT c FROM Cluster c LEFT JOIN FETCH c.clusterPertain \" +\n-            \" WHERE c.stackCrn = :stackCrn and c.clusterPertain.workspaceId = :workspaceId\")\n-    Optional<Cluster> findByStackCrnAndWorkspaceId(@Param(\"stackCrn\") String stackCrn, @Param(\"workspaceId\") Long workspaceId);\n+            \" WHERE c.stackCrn = :stackCrn and c.clusterPertain.tenant = :tenant\")\n+    Optional<Cluster> findByStackCrnAndTenant(@Param(\"stackCrn\") String stackCrn, @Param(\"tenant\") String tenant);\n \n     @Query(\" SELECT c FROM Cluster c LEFT JOIN FETCH c.clusterPertain \" +\n-            \" WHERE c.stackName = :stackName and c.clusterPertain.workspaceId = :workspaceId\")\n-    Optional<Cluster> findByStackNameAndWorkspaceId(@Param(\"stackName\") String stackName, @Param(\"workspaceId\") Long workspaceId);\n+            \" WHERE c.stackName = :stackName and c.clusterPertain.tenant = :tenant\")\n+    Optional<Cluster> findByStackNameAndTenant(@Param(\"stackName\") String stackName, @Param(\"tenant\") String tenant);\n \n     @Query(\" SELECT c FROM Cluster c LEFT JOIN FETCH c.clusterPertain \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTM2NDAw", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#pullrequestreview-444536400", "createdAt": "2020-07-08T08:45:34Z", "commit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODo0NTozNFrOGueOvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODo0NTozNFrOGueOvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4Mjk3Mg==", "bodyText": "Why change userCRN to userID? userID is an old concept we should rely on userCRN as much as possible.\nAlso I don't really get the use case why I would want to get a list based on someones CRN.", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#discussion_r451382972", "createdAt": "2020-07-08T08:45:34Z", "author": {"login": "lnardai"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/ClusterService.java", "diffHunk": "@@ -102,7 +102,7 @@ public Cluster create(AutoscaleStackV4Response stack) {\n         ClusterPertain clusterPertain =\n                 new ClusterPertain(stack.getTenant(), stack.getWorkspaceId(), stack.getUserId(), stack.getUserCrn());\n         cluster.setClusterPertain(\n-                clusterPertainRepository.findByUserCrn(clusterPertain.getUserCrn())\n+                clusterPertainRepository.findByUserId(clusterPertain.getUserId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTUzMjU3", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#pullrequestreview-444553257", "createdAt": "2020-07-08T09:06:52Z", "commit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bc4ea8e8914a91dbef5231fc2d7cf927b603eb2", "author": {"user": {"login": "smaniraju", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3bc4ea8e8914a91dbef5231fc2d7cf927b603eb2", "committedDate": "2020-07-08T09:18:57Z", "message": "CB-7829\n\n1. Scope periscope cluster entities at tenant level and not workspace level, since workspace concept is deprecated.\n2. Cluster within same tenant can be configured for autoscaling by tenant user as long as the authenticated user has appropriate UMS Authorization permission."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77155c69be652adfe1e75f053286e6beafd02a57", "author": {"user": {"login": "smaniraju", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/77155c69be652adfe1e75f053286e6beafd02a57", "committedDate": "2020-07-07T15:36:56Z", "message": "CB-7829\n\n1. Scope periscope cluster entities at tenant level and not workspace level, since workspace concept is deprecated.\n2. Cluster within same tenant can be configured for autoscaling by tenant user as long as the authenticated user has appropriate UMS Authorization permission."}, "afterCommit": {"oid": "3bc4ea8e8914a91dbef5231fc2d7cf927b603eb2", "author": {"user": {"login": "smaniraju", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3bc4ea8e8914a91dbef5231fc2d7cf927b603eb2", "committedDate": "2020-07-08T09:18:57Z", "message": "CB-7829\n\n1. Scope periscope cluster entities at tenant level and not workspace level, since workspace concept is deprecated.\n2. Cluster within same tenant can be configured for autoscaling by tenant user as long as the authenticated user has appropriate UMS Authorization permission."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTc3NzAy", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#pullrequestreview-444577702", "createdAt": "2020-07-08T09:38:28Z", "commit": {"oid": "3bc4ea8e8914a91dbef5231fc2d7cf927b603eb2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NjE0OTg2", "url": "https://github.com/hortonworks/cloudbreak/pull/8497#pullrequestreview-444614986", "createdAt": "2020-07-08T10:28:43Z", "commit": {"oid": "3bc4ea8e8914a91dbef5231fc2d7cf927b603eb2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2676, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}