{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNTAxNjU0", "number": 7030, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODo0OTo1OVrODW81uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODo1NDoxOFrODW86Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MzkyMDU5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODo0OTo1OVrOFb_-HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODo0OTo1OVrOFb_-HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkwMzk2NQ==", "bodyText": "This log message might not be correct.", "url": "https://github.com/hortonworks/cloudbreak/pull/7030#discussion_r364903965", "createdAt": "2020-01-09T18:49:59Z", "author": {"login": "keyki"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java", "diffHunk": "@@ -386,14 +392,20 @@ private Blueprint determineBlueprint(StackV4Request stackRequest, Workspace work\n         if (clusterRequest == null) {\n             return null;\n         }\n+        boolean shouldUseBaseCMImage = shouldUseBaseCMImage(clusterRequest);\n+        boolean baseImageEnabled = imageCatalogService.baseImageEnabled();\n         return executorService.submit(() -> {\n-            try {\n-                boolean base = shouldUseBaseCMImage(clusterRequest);\n-                LOGGER.info(\"The stack with name {} will use base image: {}\", stackName, base);\n-                return imageService.determineImageFromCatalog(workspace.getId(), stackRequest.getImage(), platformString, blueprint, base, user, image -> true);\n-            } catch (CloudbreakImageNotFoundException | CloudbreakImageCatalogException e) {\n-                throw new BadRequestException(e.getMessage(), e);\n-            }\n+\n+            LOGGER.info(\"The stack with name {} will use base image: {}\", stackName, shouldUseBaseCMImage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MzkyNDAzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/image/ImageCatalogService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODo1MToxNVrOFcAAVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODo1MToxNVrOFcAAVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkwNDUzMg==", "bodyText": "exiting typo", "url": "https://github.com/hortonworks/cloudbreak/pull/7030#discussion_r364904532", "createdAt": "2020-01-09T18:51:15Z", "author": {"login": "keyki"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/image/ImageCatalogService.java", "diffHunk": "@@ -146,14 +149,14 @@ public ImageCatalog findByResourceCrn(String resourceCrn) {\n \n     public Images getImagesByCatalogName(Long workspaceId, String catalogName, String stackName, String platform) throws CloudbreakImageCatalogException {\n         if (isNotEmpty(platform) && isNotEmpty(stackName)) {\n-            throw new BadRequestException(\"Platform or stackName cannot be filled in the same request.\");\n+            throw new BadRequestException(\"Both platform and exiting stack name could not be present in the request.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MzkzMjEwOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/image/ImageCatalogServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODo1NDoxOFrOFcAFmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODo1NDoxOFrOFcAFmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkwNTg4MQ==", "bodyText": "fix or delete", "url": "https://github.com/hortonworks/cloudbreak/pull/7030#discussion_r364905881", "createdAt": "2020-01-09T18:54:18Z", "author": {"login": "keyki"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/image/ImageCatalogServiceTest.java", "diffHunk": "@@ -631,7 +639,7 @@ public void testGetByWorkspaceIfDtoIsNullThenIllegalArgumentExceptionComes() {\n     public void testPopulateCrnCorrectly() {\n         ImageCatalog imageCatalog = getImageCatalog();\n \n-        when(userService.getOrCreate(any(CloudbreakUser.class))).thenReturn(user);\n+        //when(userService.getOrCreate(any(CloudbreakUser.class))).thenReturn(user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2961, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}