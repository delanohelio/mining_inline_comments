{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3OTU0Nzgz", "number": 8053, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjoxNDo0OVrOD8c3ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjoxNDo0OVrOD8c3ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzE0MTQyOnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/credential/service/CredentialService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjoxNDo1MFrOGVZZ-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjoxOToxOVrOGVZj5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA4OTUzMA==", "bodyText": "please put this into the transaction block", "url": "https://github.com/hortonworks/cloudbreak/pull/8053#discussion_r425089530", "createdAt": "2020-05-14T12:14:50Z", "author": {"login": "horadla23"}, "path": "environment/src/main/java/com/sequenceiq/environment/credential/service/CredentialService.java", "diffHunk": "@@ -176,6 +176,7 @@ public Credential create(Credential credential, @Nonnull String accountId, @Nonn\n         credential.setResourceCrn(credentialCrn);\n         credential.setCreator(creatorUserCrn);\n         credential.setAccountId(accountId);\n+        grpcUmsClient.assignResourceOwnerRoleIfEntitled(creatorUserCrn, credentialCrn, accountId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c600dde8ceb4643b7ed65df58ac4d01e7d1bde17"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5MjA2OQ==", "bodyText": "okay", "url": "https://github.com/hortonworks/cloudbreak/pull/8053#discussion_r425092069", "createdAt": "2020-05-14T12:19:19Z", "author": {"login": "foldik"}, "path": "environment/src/main/java/com/sequenceiq/environment/credential/service/CredentialService.java", "diffHunk": "@@ -176,6 +176,7 @@ public Credential create(Credential credential, @Nonnull String accountId, @Nonn\n         credential.setResourceCrn(credentialCrn);\n         credential.setCreator(creatorUserCrn);\n         credential.setAccountId(accountId);\n+        grpcUmsClient.assignResourceOwnerRoleIfEntitled(creatorUserCrn, credentialCrn, accountId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA4OTUzMA=="}, "originalCommit": {"oid": "c600dde8ceb4643b7ed65df58ac4d01e7d1bde17"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3318, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}