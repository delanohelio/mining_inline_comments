{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NDgxMDg3", "number": 8676, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDowMDo1N1rOEULSBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDowNDo1MVrOEULaWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTkxODE1OnYy", "diffSide": "RIGHT", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDowMDo1N1rOG6Uf-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDowMDo1N1rOG6Uf-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwNjQ1OA==", "bodyText": "typo: environmentCrn", "url": "https://github.com/hortonworks/cloudbreak/pull/8676#discussion_r463806458", "createdAt": "2020-07-31T20:00:57Z", "author": {"login": "handavid"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java", "diffHunk": "@@ -272,6 +273,26 @@ public void deleteMachineUser(String machineUserName, String userCrn, Optional<S\n         }\n     }\n \n+    /**\n+     * Retrieves list of an environments service principal cloud identities from UMS.\n+     *\n+     * @param accountId       the account Id\n+     * @param envrionmentCrn  the envrionment crn\n+     * @param requestId       an optional request Id\n+     * @return list of service principal cloud identities\n+     */\n+    public List<ServicePrincipalCloudIdentities> listServicePrincipalCloudIdentities(String actorCrn, String accountId, String envrionmentCrn,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e546ed674dd398abccb980e7e3c5dce0fd39a183"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTkzMjM3OnYy", "diffSide": "RIGHT", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDowMzozM1rOG6Uneg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNzoxNToxNlrOG6ulHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwODM3OA==", "bodyText": "I recently added paging to the listWorkloadAdministrationGroupsForMember API. I put the paging support in the GrpcUmsClient class instead of the UmsClient class because it was pretty much impossible to unit test in the UmsClient. I suggest moving the paging code to GrpcUmsClient", "url": "https://github.com/hortonworks/cloudbreak/pull/8676#discussion_r463808378", "createdAt": "2020-07-31T20:03:33Z", "author": {"login": "handavid"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java", "diffHunk": "@@ -329,6 +332,33 @@ public void deleteMachineUser(String requestId, String userCrn, String machineUs\n         }\n     }\n \n+    /**\n+     * Wraps calls to ListServicePrincipalCloudIdentities with an Account ID.\n+     *\n+     * @param requestId       the request ID for the request\n+     * @param accountId       the account ID\n+     * @param environmentCrn  the crn of the environment to list service prinnciples for\n+     * @return the list of service principal cloud identities\n+     */\n+    public List<ServicePrincipalCloudIdentities> listServicePrincipalCloudIdentities(String requestId, String accountId, String environmentCrn) {\n+        checkNotNull(requestId);\n+        checkNotNull(accountId);\n+\n+        List<ServicePrincipalCloudIdentities> servicePrincipalCloudIdentities = new ArrayList<>();\n+\n+        ListServicePrincipalCloudIdentitiesRequest.Builder requestBuilder = ListServicePrincipalCloudIdentitiesRequest.newBuilder()\n+                .setAccountId(accountId)\n+                .setEnvironmentCrn(environmentCrn);\n+\n+        UserManagementProto.ListServicePrincipalCloudIdentitiesResponse response;\n+        do {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e546ed674dd398abccb980e7e3c5dce0fd39a183"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIzMzc1Ng==", "bodyText": "Ahh I see. I've moved it there and added a unit test.", "url": "https://github.com/hortonworks/cloudbreak/pull/8676#discussion_r464233756", "createdAt": "2020-08-03T07:15:16Z", "author": {"login": "aarman-cloudera"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java", "diffHunk": "@@ -329,6 +332,33 @@ public void deleteMachineUser(String requestId, String userCrn, String machineUs\n         }\n     }\n \n+    /**\n+     * Wraps calls to ListServicePrincipalCloudIdentities with an Account ID.\n+     *\n+     * @param requestId       the request ID for the request\n+     * @param accountId       the account ID\n+     * @param environmentCrn  the crn of the environment to list service prinnciples for\n+     * @return the list of service principal cloud identities\n+     */\n+    public List<ServicePrincipalCloudIdentities> listServicePrincipalCloudIdentities(String requestId, String accountId, String environmentCrn) {\n+        checkNotNull(requestId);\n+        checkNotNull(accountId);\n+\n+        List<ServicePrincipalCloudIdentities> servicePrincipalCloudIdentities = new ArrayList<>();\n+\n+        ListServicePrincipalCloudIdentitiesRequest.Builder requestBuilder = ListServicePrincipalCloudIdentitiesRequest.newBuilder()\n+                .setAccountId(accountId)\n+                .setEnvironmentCrn(environmentCrn);\n+\n+        UserManagementProto.ListServicePrincipalCloudIdentitiesResponse response;\n+        do {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwODM3OA=="}, "originalCommit": {"oid": "e546ed674dd398abccb980e7e3c5dce0fd39a183"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTkzOTQ0OnYy", "diffSide": "RIGHT", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDowNDo1MVrOG6UrKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNzoxNTozNFrOG6ullg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwOTMyMw==", "bodyText": "what's this method for?", "url": "https://github.com/hortonworks/cloudbreak/pull/8676#discussion_r463809323", "createdAt": "2020-07-31T20:04:51Z", "author": {"login": "handavid"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java", "diffHunk": "@@ -685,6 +715,14 @@ public String getIdentityProviderMetadataXml(String requestId, String accountId)\n                 .build());\n     }\n \n+    public ListServicePrincipalCloudIdentitiesResponse listServicePrincipalCloudIdentities2(String requestId, String accountId, String environmentCrn) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e546ed674dd398abccb980e7e3c5dce0fd39a183"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIzMzg3OA==", "bodyText": "Good catch, I meant to delete that one.", "url": "https://github.com/hortonworks/cloudbreak/pull/8676#discussion_r464233878", "createdAt": "2020-08-03T07:15:34Z", "author": {"login": "aarman-cloudera"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java", "diffHunk": "@@ -685,6 +715,14 @@ public String getIdentityProviderMetadataXml(String requestId, String accountId)\n                 .build());\n     }\n \n+    public ListServicePrincipalCloudIdentitiesResponse listServicePrincipalCloudIdentities2(String requestId, String accountId, String environmentCrn) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwOTMyMw=="}, "originalCommit": {"oid": "e546ed674dd398abccb980e7e3c5dce0fd39a183"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2990, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}