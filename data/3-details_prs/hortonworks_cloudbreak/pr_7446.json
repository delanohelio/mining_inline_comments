{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyODU3ODMx", "number": 7446, "title": "CB-5868 No suitable subnet found as there were neither private nor an\u2026", "bodyText": "", "createdAt": "2020-03-03T10:12:48Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7446", "merged": true, "mergeCommit": {"oid": "dc9a32811004d2fcc5e62f9d196d6dbc88d66d8f"}, "closed": true, "closedAt": "2020-03-03T12:20:17Z", "author": {"login": "gergopapi2"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJ_segAFqTM2Nzg1OTAzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKAORlgFqTM2Nzg4NDg5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODU5MDM1", "url": "https://github.com/hortonworks/cloudbreak/pull/7446#pullrequestreview-367859035", "createdAt": "2020-03-03T10:24:00Z", "commit": {"oid": "e9968d13a80041ecca36057393c6ca244a1d5787"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDoyNDowMFrOFxAAFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDoyNDowMFrOFxAAFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkyNDU2NA==", "bodyText": "else is missing", "url": "https://github.com/hortonworks/cloudbreak/pull/7446#discussion_r386924564", "createdAt": "2020-03-03T10:24:00Z", "author": {"login": "lacikaaa"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/service/subnetselector/SubnetSelectorStrategy.java", "diffHunk": "@@ -1,55 +1,61 @@\n package com.sequenceiq.cloudbreak.cloud.aws.service.subnetselector;\n \n import java.util.List;\n+import java.util.Optional;\n import java.util.stream.Collectors;\n \n-import javax.ws.rs.BadRequestException;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import com.sequenceiq.cloudbreak.cloud.model.CloudSubnet;\n+import com.sequenceiq.cloudbreak.cloud.model.SubnetSelectionResult;\n \n public abstract class SubnetSelectorStrategy {\n \n+    static final String NOT_ENOUGH_AZ = \"Acceptable subnets are in %d different AZs, but subnets in %d different AZs required.\";\n+\n     private static final Logger LOGGER = LoggerFactory.getLogger(SubnetSelectorStrategy.class);\n \n-    public List<CloudSubnet> select(List<CloudSubnet> subnetMetas) {\n+    public SubnetSelectionResult select(List<CloudSubnet> subnetMetas) {\n         LOGGER.debug(\"Subnet selection with strategy '{}'\", getType());\n-        quickValidate(subnetMetas);\n-        List<CloudSubnet> selectedNetworks = selectInternal(subnetMetas);\n-        LOGGER.debug(\"Selected subnets: {}\", String.join(\", \", selectedNetworks.stream().toString()));\n-        return selectedNetworks;\n-    }\n-\n-    private void quickValidate(List<CloudSubnet> subnetMetas) {\n-        if (subnetMetas == null || subnetMetas.isEmpty()) {\n-            error(\"There are no subnets in this network.\");\n-        }\n-        if (subnetMetas.size() < getMinimumNumberOfSubnets()) {\n-            error(String.format(\"There are not enough subnets in this network, found: %d, expected: %d.\", subnetMetas.size(), getMinimumNumberOfSubnets()));\n+        Optional<String> errorMessage = quickValidate(subnetMetas);\n+        if (errorMessage.isPresent()) {\n+            return new SubnetSelectionResult(errorMessage.get());\n         }\n+        SubnetSelectionResult selectionResult = selectInternal(subnetMetas);\n+        logResult(selectionResult);\n+        return selectionResult;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9968d13a80041ecca36057393c6ca244a1d5787"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "930ee68bd8a2b183df111f2c7f4f3b4c8632edee", "author": {"user": {"login": "gergopapi2", "name": "Gergely Papp"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/930ee68bd8a2b183df111f2c7f4f3b4c8632edee", "committedDate": "2020-03-03T10:39:45Z", "message": "CB-5868 No suitable subnet found as there were neither private nor any suitable public subnets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9968d13a80041ecca36057393c6ca244a1d5787", "author": {"user": {"login": "gergopapi2", "name": "Gergely Papp"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/e9968d13a80041ecca36057393c6ca244a1d5787", "committedDate": "2020-03-03T10:11:35Z", "message": "CB-5868 No suitable subnet found as there were neither private nor any suitable public subnets"}, "afterCommit": {"oid": "930ee68bd8a2b183df111f2c7f4f3b4c8632edee", "author": {"user": {"login": "gergopapi2", "name": "Gergely Papp"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/930ee68bd8a2b183df111f2c7f4f3b4c8632edee", "committedDate": "2020-03-03T10:39:45Z", "message": "CB-5868 No suitable subnet found as there were neither private nor any suitable public subnets"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODc2MjQx", "url": "https://github.com/hortonworks/cloudbreak/pull/7446#pullrequestreview-367876241", "createdAt": "2020-03-03T10:48:37Z", "commit": {"oid": "930ee68bd8a2b183df111f2c7f4f3b4c8632edee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDo0ODozN1rOFxA2Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDo0ODozN1rOFxA2Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkzODQxMQ==", "bodyText": "a bit strange that logresult returns", "url": "https://github.com/hortonworks/cloudbreak/pull/7446#discussion_r386938411", "createdAt": "2020-03-03T10:48:37Z", "author": {"login": "lacikaaa"}, "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/subnet/selector/AzureSubnetSelectorService.java", "diffHunk": "@@ -3,34 +3,38 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-import javax.ws.rs.BadRequestException;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Service;\n \n import com.sequenceiq.cloudbreak.cloud.model.CloudSubnet;\n import com.sequenceiq.cloudbreak.cloud.model.SubnetSelectionParameters;\n+import com.sequenceiq.cloudbreak.cloud.model.SubnetSelectionResult;\n \n @Service\n public class AzureSubnetSelectorService {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AzureSubnetSelectorService.class);\n \n-    public List<CloudSubnet> select(List<CloudSubnet> subnetMetas, SubnetSelectionParameters subnetSelectionParameters) {\n+    public SubnetSelectionResult select(List<CloudSubnet> subnetMetas, SubnetSelectionParameters subnetSelectionParameters) {\n         if (subnetMetas == null || subnetMetas.isEmpty()) {\n-            return logAndThrow(\"Azure subnet selection: there are no subnets to choose from.\");\n+            return logResult(new SubnetSelectionResult(\"Azure subnet selection: there are no subnets to choose from.\"));\n         }\n         if (subnetSelectionParameters == null) {\n-            return logAndThrow(\"Azure subnet selection: parameters were not specified.\");\n+            return logResult(new SubnetSelectionResult(\"Azure subnet selection: parameters were not specified.\"));\n         }\n-        return subnetSelectionParameters.isForDatabase()\n+        List<CloudSubnet> selectedSubnets = subnetSelectionParameters.isForDatabase()\n                 ? new ArrayList<>(subnetMetas)\n                 : List.of(subnetMetas.get(0));\n+        return logResult(new SubnetSelectionResult(selectedSubnets));\n     }\n \n-    private List<CloudSubnet> logAndThrow(String message) {\n-        LOGGER.debug(message);\n-        throw new BadRequestException(message);\n+    private SubnetSelectionResult logResult(SubnetSelectionResult subnetSelectionResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "930ee68bd8a2b183df111f2c7f4f3b4c8632edee"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODc3NDg5", "url": "https://github.com/hortonworks/cloudbreak/pull/7446#pullrequestreview-367877489", "createdAt": "2020-03-03T10:50:29Z", "commit": {"oid": "930ee68bd8a2b183df111f2c7f4f3b4c8632edee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDo1MDoyOVrOFxA5_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDo1MDoyOVrOFxA5_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkzOTM5MQ==", "bodyText": "add a log here please", "url": "https://github.com/hortonworks/cloudbreak/pull/7446#discussion_r386939391", "createdAt": "2020-03-03T10:50:29Z", "author": {"login": "lacikaaa"}, "path": "environment/src/main/java/com/sequenceiq/environment/network/service/SubnetIdProvider.java", "diffHunk": "@@ -30,9 +30,16 @@ public String provide(NetworkDto network, Tunnel tunnel, CloudPlatform cloudPlat\n             LOGGER.debug(\"Check failed, returning null\");\n             return null;\n         }\n-        List<CloudSubnet> selectedSubnets = cloudPlatformConnectors.get(new CloudPlatformVariant(cloudPlatform.name(), cloudPlatform.name()))\n+        SubnetSelectionResult subnetSelectionResult = cloudPlatformConnectors.get(new CloudPlatformVariant(cloudPlatform.name(), cloudPlatform.name()))\n                 .networkConnector()\n                 .selectSubnets(new ArrayList<>(network.getSubnetMetas().values()), SubnetSelectionParameters.builder().withTunnel(tunnel).build());\n-        return selectedSubnets.get(0).getId();\n+        CloudSubnet selectedSubnet = subnetSelectionResult.hasResult()\n+                ? subnetSelectionResult.getResult().get(0)\n+                : fallback(network);\n+        return selectedSubnet.getId();\n+    }\n+\n+    private CloudSubnet fallback(NetworkDto network) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "930ee68bd8a2b183df111f2c7f4f3b4c8632edee"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODg0ODk4", "url": "https://github.com/hortonworks/cloudbreak/pull/7446#pullrequestreview-367884898", "createdAt": "2020-03-03T11:00:56Z", "commit": {"oid": "930ee68bd8a2b183df111f2c7f4f3b4c8632edee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2517, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}