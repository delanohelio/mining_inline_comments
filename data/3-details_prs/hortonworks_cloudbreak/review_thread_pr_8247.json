{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxODk4ODIw", "number": 8247, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMjozMjoyMFrOEERe9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzoyMzoxNlrOEEfaug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTE2MjE0OnYy", "diffSide": "RIGHT", "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/security/TlsHttpClientConfigurationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMjozMjoyMFrOGhyk_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzowNjo1MVrOGhz5ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA4NDg2Mw==", "bodyText": "is it unnecessary?", "url": "https://github.com/hortonworks/cloudbreak/pull/8247#discussion_r438084863", "createdAt": "2020-06-10T12:32:20Z", "author": {"login": "topolyai5"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/security/TlsHttpClientConfigurationService.java", "diffHunk": "@@ -35,7 +35,7 @@ public HttpClientConfig buildTLSClientConfig(String stackCrn, String host, Tunne\n         Optional<String> clusterProxyUrl = clusterProxyConfigurationService.getClusterProxyUrl();\n         HttpClientConfig httpClientConfig =\n                 new HttpClientConfig(host, tlsConfiguration.getServerCert(), tlsConfiguration.getClientCert(), tlsConfiguration.getClientKey());\n-        if (clusterProxyUrl.isPresent() && tunnel.useClusterProxy()) {\n+        if (clusterProxyUrl.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a89725d3a7c9d03daa8828be27e31509040cb8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwNjUyNg==", "bodyText": "Yes clusterProxy registration always happens even if tunnel is direct and even Cluster Yarn Metrics are always queried through clusterProxy since Cluster via IP is not always reachable.", "url": "https://github.com/hortonworks/cloudbreak/pull/8247#discussion_r438106526", "createdAt": "2020-06-10T13:06:51Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/security/TlsHttpClientConfigurationService.java", "diffHunk": "@@ -35,7 +35,7 @@ public HttpClientConfig buildTLSClientConfig(String stackCrn, String host, Tunne\n         Optional<String> clusterProxyUrl = clusterProxyConfigurationService.getClusterProxyUrl();\n         HttpClientConfig httpClientConfig =\n                 new HttpClientConfig(host, tlsConfiguration.getServerCert(), tlsConfiguration.getClientCert(), tlsConfiguration.getClientKey());\n-        if (clusterProxyUrl.isPresent() && tunnel.useClusterProxy()) {\n+        if (clusterProxyUrl.isPresent()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA4NDg2Mw=="}, "originalCommit": {"oid": "03a89725d3a7c9d03daa8828be27e31509040cb8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTQ0NTA2OnYy", "diffSide": "LEFT", "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/ha/LeaderElectionService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzoyMzoxNlrOGiJdyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyOTozOFrOGiTmoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTg0OA==", "bodyText": "Nit: Remove the reference and import since the stackCollectorService isn't used here.", "url": "https://github.com/hortonworks/cloudbreak/pull/8247#discussion_r438459848", "createdAt": "2020-06-10T23:23:16Z", "author": {"login": "sidseth"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/ha/LeaderElectionService.java", "diffHunk": "@@ -126,7 +114,6 @@ public void leaderElection() {\n                     @Override\n                     public void run() {\n                         try {\n-                            stackCollectorService.collectStackDetails();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a89725d3a7c9d03daa8828be27e31509040cb8"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2Mjc2MQ==", "bodyText": "Maybe also remove the entire StackCollectorService class if it is not used elsewhere.", "url": "https://github.com/hortonworks/cloudbreak/pull/8247#discussion_r438462761", "createdAt": "2020-06-10T23:33:18Z", "author": {"login": "sidseth"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/ha/LeaderElectionService.java", "diffHunk": "@@ -126,7 +114,6 @@ public void leaderElection() {\n                     @Override\n                     public void run() {\n                         try {\n-                            stackCollectorService.collectStackDetails();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTg0OA=="}, "originalCommit": {"oid": "03a89725d3a7c9d03daa8828be27e31509040cb8"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyNTk1Mw==", "bodyText": "Removed the unused inject.\nStackCollectorService and few other unused classes I will remove in a different PR.", "url": "https://github.com/hortonworks/cloudbreak/pull/8247#discussion_r438625953", "createdAt": "2020-06-11T08:29:38Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/service/ha/LeaderElectionService.java", "diffHunk": "@@ -126,7 +114,6 @@ public void leaderElection() {\n                     @Override\n                     public void run() {\n                         try {\n-                            stackCollectorService.collectStackDetails();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTg0OA=="}, "originalCommit": {"oid": "03a89725d3a7c9d03daa8828be27e31509040cb8"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3181, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}