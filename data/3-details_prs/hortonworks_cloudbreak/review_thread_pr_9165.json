{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTI3NjE3", "number": 9165, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1NDozM1rOErg1lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoxODo1NlrOEsC19g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDYyMjI5OnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/context/TestContext.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1NDozM1rOHeUgdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOTo1OToyMVrOHeXBng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NTMxOQ==", "bodyText": "What does status 2 mean? Why 2 exactly?", "url": "https://github.com/hortonworks/cloudbreak/pull/9165#discussion_r501555319", "createdAt": "2020-10-08T08:54:33Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/context/TestContext.java", "diffHunk": "@@ -1133,6 +1139,29 @@ public void handleExceptionsDuringTest(TestErrorLog testErrorLog) {\n             String errorMessage = errorLogMessageProvider.getMessage(exceptionMap, clues);\n             testErrorLog.report(LOGGER, errorMessage);\n \n+            ITestResult testResult = Reporter.getCurrentTestResult();\n+            Throwable testFailException = errorLogMessageProvider.getException(exceptionMap);\n+\n+            if (testFailException != null) {\n+                testResult.setThrowable(testFailException);\n+                testResult.setTestName(getTestMethodName().get());\n+                testResult.setStatus(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d656bb71165734ab703a500372467544e0e338a6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3Mjc2MA==", "bodyText": "This means ITestResult.FAILURE\nHere we have to set the correct test results (status, throwable, type) for test, because of our TestContext is not ITestContext indeed. So our project generates all the errors and related messages as Reporter Output.", "url": "https://github.com/hortonworks/cloudbreak/pull/9165#discussion_r501572760", "createdAt": "2020-10-08T09:21:44Z", "author": {"login": "aszegedi"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/context/TestContext.java", "diffHunk": "@@ -1133,6 +1139,29 @@ public void handleExceptionsDuringTest(TestErrorLog testErrorLog) {\n             String errorMessage = errorLogMessageProvider.getMessage(exceptionMap, clues);\n             testErrorLog.report(LOGGER, errorMessage);\n \n+            ITestResult testResult = Reporter.getCurrentTestResult();\n+            Throwable testFailException = errorLogMessageProvider.getException(exceptionMap);\n+\n+            if (testFailException != null) {\n+                testResult.setThrowable(testFailException);\n+                testResult.setTestName(getTestMethodName().get());\n+                testResult.setStatus(2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NTMxOQ=="}, "originalCommit": {"oid": "d656bb71165734ab703a500372467544e0e338a6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5NjU3NA==", "bodyText": "So, can we use the Enum from there, or not a variable that is more descriptive?", "url": "https://github.com/hortonworks/cloudbreak/pull/9165#discussion_r501596574", "createdAt": "2020-10-08T09:59:21Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/context/TestContext.java", "diffHunk": "@@ -1133,6 +1139,29 @@ public void handleExceptionsDuringTest(TestErrorLog testErrorLog) {\n             String errorMessage = errorLogMessageProvider.getMessage(exceptionMap, clues);\n             testErrorLog.report(LOGGER, errorMessage);\n \n+            ITestResult testResult = Reporter.getCurrentTestResult();\n+            Throwable testFailException = errorLogMessageProvider.getException(exceptionMap);\n+\n+            if (testFailException != null) {\n+                testResult.setThrowable(testFailException);\n+                testResult.setTestName(getTestMethodName().get());\n+                testResult.setStatus(2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NTMxOQ=="}, "originalCommit": {"oid": "d656bb71165734ab703a500372467544e0e338a6"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDg5Mjg1OnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMDowMTowNlrOHeXGEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMTo1NTozMFrOHexxIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5NzcxNA==", "bodyText": "Just asking, would this work correctly with parallel runs since it's static?", "url": "https://github.com/hortonworks/cloudbreak/pull/9165#discussion_r501597714", "createdAt": "2020-10-08T10:01:06Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java", "diffHunk": "@@ -24,23 +23,31 @@\n \n     public static final String MEASUREMENTS = \"measurements\";\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(ReportListener.class);\n-\n     @Override\n     public void onTestFailure(ITestResult tr) {\n-        super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n         log(tr);\n+        Reporter.setCurrentTestResult(tr);\n+        super.onTestFailure(tr);\n     }\n \n     @Override\n     public void onTestSuccess(ITestResult tr) {\n         logUrl(tr);\n         logMeasurements(tr);\n+        Reporter.setCurrentTestResult(tr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d656bb71165734ab703a500372467544e0e338a6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5ODQzNg==", "bodyText": "Just checked in the code, it uses ThreadLocal internally.", "url": "https://github.com/hortonworks/cloudbreak/pull/9165#discussion_r501598436", "createdAt": "2020-10-08T10:02:15Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java", "diffHunk": "@@ -24,23 +23,31 @@\n \n     public static final String MEASUREMENTS = \"measurements\";\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(ReportListener.class);\n-\n     @Override\n     public void onTestFailure(ITestResult tr) {\n-        super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n         log(tr);\n+        Reporter.setCurrentTestResult(tr);\n+        super.onTestFailure(tr);\n     }\n \n     @Override\n     public void onTestSuccess(ITestResult tr) {\n         logUrl(tr);\n         logMeasurements(tr);\n+        Reporter.setCurrentTestResult(tr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5NzcxNA=="}, "originalCommit": {"oid": "d656bb71165734ab703a500372467544e0e338a6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwNTg5Mw==", "bodyText": "Each test method and its respective before and after method is executed in a different thread. This is identified by the ID of the thread that is printed on the console.\nYou can find some additional details, for example: TestNG parallel execution of tests, classes and suites", "url": "https://github.com/hortonworks/cloudbreak/pull/9165#discussion_r501605893", "createdAt": "2020-10-08T10:14:23Z", "author": {"login": "aszegedi"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java", "diffHunk": "@@ -24,23 +23,31 @@\n \n     public static final String MEASUREMENTS = \"measurements\";\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(ReportListener.class);\n-\n     @Override\n     public void onTestFailure(ITestResult tr) {\n-        super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n         log(tr);\n+        Reporter.setCurrentTestResult(tr);\n+        super.onTestFailure(tr);\n     }\n \n     @Override\n     public void onTestSuccess(ITestResult tr) {\n         logUrl(tr);\n         logMeasurements(tr);\n+        Reporter.setCurrentTestResult(tr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5NzcxNA=="}, "originalCommit": {"oid": "d656bb71165734ab703a500372467544e0e338a6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAyNzQ0OQ==", "bodyText": "You were scratcing the ugly truth: After I've tested this out with several threads, I had to realised the original solution wasn't able to get the correct throwable to the given test case. So I've applied the same prefixing as we already have for searchUrl.\nSo finally not the Reporter caused the issue as rather than custom.results.xml template.", "url": "https://github.com/hortonworks/cloudbreak/pull/9165#discussion_r502027449", "createdAt": "2020-10-08T21:38:21Z", "author": {"login": "aszegedi"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java", "diffHunk": "@@ -24,23 +23,31 @@\n \n     public static final String MEASUREMENTS = \"measurements\";\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(ReportListener.class);\n-\n     @Override\n     public void onTestFailure(ITestResult tr) {\n-        super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n         log(tr);\n+        Reporter.setCurrentTestResult(tr);\n+        super.onTestFailure(tr);\n     }\n \n     @Override\n     public void onTestSuccess(ITestResult tr) {\n         logUrl(tr);\n         logMeasurements(tr);\n+        Reporter.setCurrentTestResult(tr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5NzcxNA=="}, "originalCommit": {"oid": "d656bb71165734ab703a500372467544e0e338a6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDcyMA==", "bodyText": "Here is the test upload for Quanta: https://quanta.infra.cloudera.com/?#/runDetails?gtn=6369877", "url": "https://github.com/hortonworks/cloudbreak/pull/9165#discussion_r502034720", "createdAt": "2020-10-08T21:55:30Z", "author": {"login": "aszegedi"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java", "diffHunk": "@@ -24,23 +23,31 @@\n \n     public static final String MEASUREMENTS = \"measurements\";\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(ReportListener.class);\n-\n     @Override\n     public void onTestFailure(ITestResult tr) {\n-        super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n         log(tr);\n+        Reporter.setCurrentTestResult(tr);\n+        super.onTestFailure(tr);\n     }\n \n     @Override\n     public void onTestSuccess(ITestResult tr) {\n         logUrl(tr);\n         logMeasurements(tr);\n+        Reporter.setCurrentTestResult(tr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5NzcxNA=="}, "originalCommit": {"oid": "d656bb71165734ab703a500372467544e0e338a6"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjE5MTI1OnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/ErrorLogMessageProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoxODowOFrOHfJUVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoxODowOFrOHfJUVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQyMDU2Ng==", "bodyText": "This will only show the first exception that we encounter in the test, is that correct?\nOr we are specifically looking for this type of exceptions among them?\nIf so this method should be rather, findFirstTestFailException.", "url": "https://github.com/hortonworks/cloudbreak/pull/9165#discussion_r502420566", "createdAt": "2020-10-09T13:18:08Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/ErrorLogMessageProvider.java", "diffHunk": "@@ -22,6 +23,13 @@\n \n     private static final ObjectWriter OBJECT_WRITER = new ObjectMapper().writerWithDefaultPrettyPrinter();\n \n+    public Throwable getException(Map<String, Exception> exceptionsDuringTest) {\n+        return exceptionsDuringTest.values().stream()\n+                .filter(exception -> exception.getCause() instanceof TestFailException)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb8d958c45f194fa0e5f4a129c3d21dbc310360b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjE5MzgyOnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/resources/testsuites/e2e/aws-distrox-baseimage-tests.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoxODo1NlrOHfJWAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoxODo1NlrOHfJWAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQyMDk5NA==", "bodyText": "I think this will require changes in jenkins for all jobs right? or we only use the top level suite name?", "url": "https://github.com/hortonworks/cloudbreak/pull/9165#discussion_r502420994", "createdAt": "2020-10-09T13:18:56Z", "author": {"login": "lnardai"}, "path": "integration-test/src/main/resources/testsuites/e2e/aws-distrox-baseimage-tests.yaml", "diffHunk": "@@ -1,5 +1,5 @@\n name: \"aws-distrox-baseimage-tests\"\n tests:\n-  - name: \"aws distrox e2e base image tests\"\n+  - name: \"aws_distrox_e2e_base_image_tests\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb8d958c45f194fa0e5f4a129c3d21dbc310360b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2098, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}