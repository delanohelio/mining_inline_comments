{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NzU5MzE0", "number": 8924, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0NDo1MlrOEhH2yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0OTo1N1rOEhH98Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTY3MTc4OnYy", "diffSide": "RIGHT", "path": "authorization-common-api/src/main/java/com/sequenceiq/authorization/resource/AuthorizationResourceAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0NDo1MlrOHOQxYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo0MTowMFrOHOXJwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxNjg5OA==", "bodyText": "Can you please use a constant map instead to be more performant?\n    private static final Map<String, AuthorizationResourceAction> BY_NAME = Stream.of(AuthorizationResourceAction.values())\n            .collect(Collectors.toUnmodifiableMap(AuthorizationResourceAction::getRight, Function.identity()));\n\n    public static AuthorizationResourceAction getByRight(String right) {\n        AuthorizationResourceAction result = BY_NAME.get(right);\n        if (result == null) {\n            throw new NotFoundException(String.format(\"Action not found by right %s\", right));\n        }\n        return result;\n    }", "url": "https://github.com/hortonworks/cloudbreak/pull/8924#discussion_r484716898", "createdAt": "2020-09-08T07:44:52Z", "author": {"login": "foldik"}, "path": "authorization-common-api/src/main/java/com/sequenceiq/authorization/resource/AuthorizationResourceAction.java", "diffHunk": "@@ -93,4 +99,9 @@ public String getRight() {\n     public AuthorizationResourceType getAuthorizationResourceType() {\n         return authorizationResourceType;\n     }\n+\n+    public static AuthorizationResourceAction getByRight(String right) {\n+        return Arrays.stream(AuthorizationResourceAction.values()).filter(action -> StringUtils.equals(action.getRight(), right))\n+                .findFirst().orElseThrow(() -> new NotFoundException(String.format(\"Action not found by right %s\", right)));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3743cd3fb8f801289d6fea4a92f4733c8c275536"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMTQ0MA==", "bodyText": "fixed", "url": "https://github.com/hortonworks/cloudbreak/pull/8924#discussion_r484821440", "createdAt": "2020-09-08T10:41:00Z", "author": {"login": "horadla23"}, "path": "authorization-common-api/src/main/java/com/sequenceiq/authorization/resource/AuthorizationResourceAction.java", "diffHunk": "@@ -93,4 +99,9 @@ public String getRight() {\n     public AuthorizationResourceType getAuthorizationResourceType() {\n         return authorizationResourceType;\n     }\n+\n+    public static AuthorizationResourceAction getByRight(String right) {\n+        return Arrays.stream(AuthorizationResourceAction.values()).filter(action -> StringUtils.equals(action.getRight(), right))\n+                .findFirst().orElseThrow(() -> new NotFoundException(String.format(\"Action not found by right %s\", right)));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxNjg5OA=="}, "originalCommit": {"oid": "3743cd3fb8f801289d6fea4a92f4733c8c275536"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTY5MDA5OnYy", "diffSide": "RIGHT", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/util/base/RightV4.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0OTo1N1rOHOQ8dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo0MDo1NlrOHOXJmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxOTczNA==", "bodyText": "Can you please use a static final enum map for the lookup?", "url": "https://github.com/hortonworks/cloudbreak/pull/8924#discussion_r484719734", "createdAt": "2020-09-08T07:49:57Z", "author": {"login": "foldik"}, "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/util/base/RightV4.java", "diffHunk": "@@ -19,4 +31,9 @@\n     public AuthorizationResourceAction getAction() {\n         return action;\n     }\n+\n+    public static RightV4 getByAction(AuthorizationResourceAction authorizationResourceAction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3743cd3fb8f801289d6fea4a92f4733c8c275536"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMTQwMA==", "bodyText": "fixed", "url": "https://github.com/hortonworks/cloudbreak/pull/8924#discussion_r484821400", "createdAt": "2020-09-08T10:40:56Z", "author": {"login": "horadla23"}, "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/util/base/RightV4.java", "diffHunk": "@@ -19,4 +31,9 @@\n     public AuthorizationResourceAction getAction() {\n         return action;\n     }\n+\n+    public static RightV4 getByAction(AuthorizationResourceAction authorizationResourceAction) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxOTczNA=="}, "originalCommit": {"oid": "3743cd3fb8f801289d6fea4a92f4733c8c275536"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2339, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}