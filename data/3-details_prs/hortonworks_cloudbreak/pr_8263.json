{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMzA5ODQy", "number": 8263, "title": "CB-7246 - Prevent favicon.ico requests for unauthenticated UIs", "bodyText": "Describe the change you are making here!\nThe changes are to nginx component.\nWith this change unauthenticated favicon.ico requests (automatic requests by browser) to UIs will be denied (with 403 response). Favicon requests will only be allowed when the UI is authenticated i.e. hadoop-jwt cookie is present. This only affects requests going in via Knox and does not affect CM requests.\nWhy is this change needed\nMore details can be found in CB-7246. In a nutshell this is what is happening (in Chrome browser):\n\nRequest is made to a UI page (Atlas, CM, Ranger etc.) from CP.\nIn case where there is no authentication KnoxSSO flow is triggered.\nBefore the previous KnoxSSO flow is completed Chrome requests favicon.ico at the root of the server (this is the nginx host).\nThis favicon.ico request rewrite the originalURL parameter in Pac4j cookie causing the UI page to land on favicon icon.\nThis only happens the first time later requests work as expected.\n\nWhat the patch does:\nThis patch looks for hadoop-jwt cookie in the request, if the cookie is found there is no change to the request flow. If hadoop-jwt cookie is not found and the request is for favicon.ico then the request is blocked by the nginx and 403 response code is returned.\nSide effects:\nSo far local testing has not uncovered any side effects. After successful authentication all UIs (Ranger, Atlas, CM etc.) will display their favicons like they used to.\nThis screenshot demonstrates the initial favicon.ico request is denied but after the UI is authenticated a new request is issues and favicon is displayed properly.\n\nPlease include a short description. Check out these examples:\nPrevent unauthenticated favicon.ico requests by browsers.", "createdAt": "2020-06-11T20:13:35Z", "url": "https://github.com/hortonworks/cloudbreak/pull/8263", "merged": true, "mergeCommit": {"oid": "6bc8cb5cdf1d54670647652e41ae8abaf8f0f917"}, "closed": true, "closedAt": "2020-07-06T07:40:35Z", "author": {"login": "moresandeep"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcql0k6gFqTQyOTg5Njc5MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyMRDbgFqTQ0Mjg0MDI5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5ODk2Nzkw", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#pullrequestreview-429896790", "createdAt": "2020-06-12T16:54:26Z", "commit": {"oid": "c48049a4b68e92848f3dc1fbe8b086294f60e5db"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo1NDoyNlrOGjLGBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo1NDoyNlrOGjLGBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzNTExMQ==", "bodyText": "So cookies MAY have the SameSite set. In that case you should not overwrite it or add it.", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r439535111", "createdAt": "2020-06-12T16:54:26Z", "author": {"login": "giladwolff"}, "path": "orchestrator-salt/src/main/resources/salt/salt/nginx/conf/clouderamanager-ssl-user-facing.conf", "diffHunk": "@@ -38,6 +38,8 @@ server {\n         proxy_set_header   Upgrade $http_upgrade;\n         proxy_set_header   Connection $connection_upgrade;\n         proxy_set_header   Referer {{ protocol }}://$host/$1;\n+        # Add Security cookie flags\n+        proxy_cookie_path ~(.*) \"$1; SameSite=none; secure; httponly\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48049a4b68e92848f3dc1fbe8b086294f60e5db"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19715b530e5ee6ad9a682524281cd775233523c1", "author": {"user": {"login": "moresandeep", "name": "Sandeep Mor\u00e9"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/19715b530e5ee6ad9a682524281cd775233523c1", "committedDate": "2020-06-25T16:38:47Z", "message": "CB-7246 - Prevent favicon.ico requests for unauthenticated UIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c48049a4b68e92848f3dc1fbe8b086294f60e5db", "author": {"user": {"login": "moresandeep", "name": "Sandeep Mor\u00e9"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/c48049a4b68e92848f3dc1fbe8b086294f60e5db", "committedDate": "2020-06-11T20:06:33Z", "message": "CB-7246 Add SameSite=none to all cookies going through Knox using nginx"}, "afterCommit": {"oid": "19715b530e5ee6ad9a682524281cd775233523c1", "author": {"user": {"login": "moresandeep", "name": "Sandeep Mor\u00e9"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/19715b530e5ee6ad9a682524281cd775233523c1", "committedDate": "2020-06-25T16:38:47Z", "message": "CB-7246 - Prevent favicon.ico requests for unauthenticated UIs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NzU3OTU4", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#pullrequestreview-437757958", "createdAt": "2020-06-25T18:36:13Z", "commit": {"oid": "19715b530e5ee6ad9a682524281cd775233523c1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODozNjoxNFrOGpG-lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODozODozMFrOGpHDOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc1OTEyNQ==", "bodyText": "So let me see if I understand what this change is doing. Before this change, the browser made two requests to knox that is fronted by this nginx, one for the actual resource and right afterwards for the favicon.ico. When google changed the default SameSite default the pac4j cookie was not sent by the browser so knox did not know where to redirect the browser to. And then when the second request came it just returned the favicon and that is what you got.\nWhat this change is doing is returning a 403 for the second request. This means that the user will see a 403 UNAUTHORIZED error message on the screen instead of the favicon, right?", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r445759125", "createdAt": "2020-06-25T18:36:14Z", "author": {"login": "giladwolff"}, "path": "orchestrator-salt/src/main/resources/salt/salt/nginx/conf/clouderamanager-ssl-user-facing.conf", "diffHunk": "@@ -28,6 +28,14 @@ server {\n         rewrite ^([/](?!clouderamanager/).*$) /clouderamanager$1;\n     }\n \n+    # If hadoop-jwt cookie not set and favicon is requested return 403.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19715b530e5ee6ad9a682524281cd775233523c1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2MDMxNA==", "bodyText": "Why not just add the location to the first if statement?\nif ($cookie_hadoop-jwt .. && location favicon.ico) return 403?", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r445760314", "createdAt": "2020-06-25T18:38:30Z", "author": {"login": "giladwolff"}, "path": "orchestrator-salt/src/main/resources/salt/salt/nginx/conf/clouderamanager-ssl-user-facing.conf", "diffHunk": "@@ -28,6 +28,14 @@ server {\n         rewrite ^([/](?!clouderamanager/).*$) /clouderamanager$1;\n     }\n \n+    # If hadoop-jwt cookie not set and favicon is requested return 403.\n+    if ($cookie_hadoop-jwt !~ .+) {\n+        rewrite ^/favicon.ico$ /favicon.403;\n+    }\n+    location ~ ^/favicon.403$ {\n+        return 403;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19715b530e5ee6ad9a682524281cd775233523c1"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzA4MzEw", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#pullrequestreview-440308310", "createdAt": "2020-06-30T19:08:33Z", "commit": {"oid": "19715b530e5ee6ad9a682524281cd775233523c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTY1NzQz", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#pullrequestreview-441165743", "createdAt": "2020-07-01T20:11:54Z", "commit": {"oid": "19715b530e5ee6ad9a682524281cd775233523c1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDoxMTo1NFrOGrz23A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDoxMTo1NFrOGrz23A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MTU4MA==", "bodyText": "I suspect this rule will be applied when CM is reached directly and not through Knox.\nCould you please test this behaviour when NGiNX proxies the request directly to CM?\nhttps://github.com/hortonworks/cloudbreak#how-to-reach-cm-ui-directlynot-through-knox\nThe mentioned scenario is mainly for debugging when the cluster could not be installed and may Knox is not running.\nOtherwise the PR looks good to me.", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r448591580", "createdAt": "2020-07-01T20:11:54Z", "author": {"login": "biharitomi"}, "path": "orchestrator-salt/src/main/resources/salt/salt/nginx/conf/clouderamanager-ssl-user-facing.conf", "diffHunk": "@@ -28,6 +28,14 @@ server {\n         rewrite ^([/](?!clouderamanager/).*$) /clouderamanager$1;\n     }\n \n+    # If hadoop-jwt cookie not set and favicon is requested return 403.\n+    if ($cookie_hadoop-jwt !~ .+) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19715b530e5ee6ad9a682524281cd775233523c1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODQwMjk5", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#pullrequestreview-442840299", "createdAt": "2020-07-06T07:39:47Z", "commit": {"oid": "19715b530e5ee6ad9a682524281cd775233523c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1696, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}