{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NTI2NzQz", "number": 8768, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODowMjo1MVrOEXGWZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODowMzo0MFrOEXGXVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjU2NzQxOnYy", "diffSide": "RIGHT", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/encryption/EncryptedSnapshotService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODowMjo1MVrOG-sxnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODowMjo1MVrOG-sxnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM5ODQ5NQ==", "bodyText": "Can we mention the snapshot id or any relevant info ?", "url": "https://github.com/hortonworks/cloudbreak/pull/8768#discussion_r468398495", "createdAt": "2020-08-11T08:02:51Z", "author": {"login": "doktoric"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/encryption/EncryptedSnapshotService.java", "diffHunk": "@@ -142,14 +142,14 @@ private void checkSnapshotReadiness(AuthenticatedContext ac, AmazonEC2Client cli\n         Waiter<DescribeSnapshotsRequest> snapshotWaiter = client.waiters().snapshotCompleted();\n         DescribeSnapshotsRequest describeSnapshotsRequest = new DescribeSnapshotsRequest().withSnapshotIds(snapshotResult.getSnapshot().getSnapshotId());\n         StackCancellationCheck stackCancellationCheck = new StackCancellationCheck(ac.getCloudContext().getId());\n-        run(snapshotWaiter, describeSnapshotsRequest, stackCancellationCheck);\n+        run(snapshotWaiter, describeSnapshotsRequest, stackCancellationCheck, \"Snapshot creation failed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3c267acffdb4ddb8676a3eafd0c1e9cee6d1ea8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjU2NzgwOnYy", "diffSide": "RIGHT", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/encryption/EncryptedSnapshotService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODowMjo1OVrOG-sx3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODowMjo1OVrOG-sx3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM5ODU1Ng==", "bodyText": "Can we mention the volume id or any relevant info ?", "url": "https://github.com/hortonworks/cloudbreak/pull/8768#discussion_r468398556", "createdAt": "2020-08-11T08:02:59Z", "author": {"login": "doktoric"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/encryption/EncryptedSnapshotService.java", "diffHunk": "@@ -142,14 +142,14 @@ private void checkSnapshotReadiness(AuthenticatedContext ac, AmazonEC2Client cli\n         Waiter<DescribeSnapshotsRequest> snapshotWaiter = client.waiters().snapshotCompleted();\n         DescribeSnapshotsRequest describeSnapshotsRequest = new DescribeSnapshotsRequest().withSnapshotIds(snapshotResult.getSnapshot().getSnapshotId());\n         StackCancellationCheck stackCancellationCheck = new StackCancellationCheck(ac.getCloudContext().getId());\n-        run(snapshotWaiter, describeSnapshotsRequest, stackCancellationCheck);\n+        run(snapshotWaiter, describeSnapshotsRequest, stackCancellationCheck, \"Snapshot creation failed\");\n     }\n \n     private void checkEbsVolumeStatus(AuthenticatedContext ac, AmazonEC2Client client, String volumeId) {\n         Waiter<DescribeVolumesRequest> volumeChecker = client.waiters().volumeAvailable();\n         DescribeVolumesRequest describeVolumesRequest = new DescribeVolumesRequest().withVolumeIds(volumeId);\n         StackCancellationCheck stackCancellationCheck = new StackCancellationCheck(ac.getCloudContext().getId());\n-        run(volumeChecker, describeVolumesRequest, stackCancellationCheck);\n+        run(volumeChecker, describeVolumesRequest, stackCancellationCheck, \"Volume creation failed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3c267acffdb4ddb8676a3eafd0c1e9cee6d1ea8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjU2OTgxOnYy", "diffSide": "RIGHT", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsDownscaleService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODowMzo0MFrOG-szHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODowMzo0MFrOG-szHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM5ODg3OA==", "bodyText": "Can we mention the instance id or any relevant info ?", "url": "https://github.com/hortonworks/cloudbreak/pull/8768#discussion_r468398878", "createdAt": "2020-08-11T08:03:40Z", "author": {"login": "doktoric"}, "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsDownscaleService.java", "diffHunk": "@@ -166,6 +166,6 @@ private void waitForTerminateInstances(Long stackId, List<String> instanceIds, A\n         Waiter<DescribeInstancesRequest> instanceTerminatedWaiter = amazonEC2Client.waiters().instanceTerminated();\n         DescribeInstancesRequest describeInstancesRequest = new DescribeInstancesRequest().withInstanceIds(instanceIds);\n         StackCancellationCheck stackCancellationCheck = new StackCancellationCheck(stackId);\n-        run(instanceTerminatedWaiter, describeInstancesRequest, stackCancellationCheck);\n+        run(instanceTerminatedWaiter, describeInstancesRequest, stackCancellationCheck, \"Instances termination failed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3c267acffdb4ddb8676a3eafd0c1e9cee6d1ea8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2373, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}