{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0ODIxNjAw", "number": 8286, "title": "CB-7477: Define API's for datalake and CB services to fasten the integration.", "bodyText": "There is no functional change in this patch. It just defines the interface API's to request database backup/restore in datalake and CB services.", "createdAt": "2020-06-15T21:40:00Z", "url": "https://github.com/hortonworks/cloudbreak/pull/8286", "merged": true, "mergeCommit": {"oid": "1bd1f1f0aa51edbe2bfbfa2af9a2263bd410b59c"}, "closed": true, "closedAt": "2020-06-17T11:47:44Z", "author": {"login": "kkalvagadda1"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrnv7AAFqTQzMTAxNDY0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsEoU2gFqTQzMjEyNDY0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDE0NjQw", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#pullrequestreview-431014640", "createdAt": "2020-06-15T21:43:28Z", "commit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDE4OTI4", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#pullrequestreview-431018928", "createdAt": "2020-06-15T21:51:26Z", "commit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTo1MToyNlrOGkD_gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTo1MToyNlrOGkD_gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2NzMyOA==", "bodyText": "Is the \"name\" in this context the Data Lake CRN?", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440467328", "createdAt": "2020-06-15T21:51:26Z", "author": {"login": "brycederriso"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/endpoint/SdxEndpoint.java", "diffHunk": "@@ -165,4 +169,27 @@ SdxClusterResponse create(@ValidStackNameFormat @ValidStackNameLength @PathParam\n     @ApiOperation(value = \"list advertised datalake versions\", produces = MediaType.APPLICATION_JSON, nickname = \"advertisedruntimes\")\n     List<AdvertisedRuntime> advertisedRuntimes();\n \n+    @POST\n+    @Path(\"{name}/backupDatabase\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = \"backup the database backing datalake \", produces = MediaType.APPLICATION_JSON, nickname = \"backupDatabase\")\n+    SdxDatabaseBackupResponse backupDatabaseByName(@PathParam(\"name\") String name, @QueryParam(\"backupId\") String backupId, @QueryParam(\"backupLocation\") String backupLocation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMzQxODQ3", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#pullrequestreview-431341847", "createdAt": "2020-06-16T09:51:23Z", "commit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwOTo1MToyM1rOGkT6BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDozMToyMFrOGkVRaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyODA2OQ==", "bodyText": "backupId is the UUID or the name of the backup? I assume \"name\" parameter is the stack's name and was expecting a \"backupName\" param here.\nOr is this id generated by the DR Service?", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440728069", "createdAt": "2020-06-16T09:51:23Z", "author": {"login": "pdarvasi"}, "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/stacks/StackV4Endpoint.java", "diffHunk": "@@ -269,4 +273,17 @@ FlowIdentifier setClusterMaintenanceMode(@PathParam(\"workspaceId\") Long workspac\n     @ApiOperation(value = UPDATE_SALT, nickname = \"updateSaltByName\")\n     FlowIdentifier updateSaltByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name);\n \n+    @POST\n+    @Path(\"{name}/database_backup\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = DATABASE_BACKUP, nickname = \"databaseBackup\")\n+    BackupV4Response backupDatabaseByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name,\n+            @QueryParam(\"backupLocation\") String backupLocation, @QueryParam(\"backupId\") String backupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0MDk1OA==", "bodyText": "the same here.. is it uuid or name?", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440740958", "createdAt": "2020-06-16T10:13:46Z", "author": {"login": "pdarvasi"}, "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/stacks/StackV4Endpoint.java", "diffHunk": "@@ -269,4 +273,17 @@ FlowIdentifier setClusterMaintenanceMode(@PathParam(\"workspaceId\") Long workspac\n     @ApiOperation(value = UPDATE_SALT, nickname = \"updateSaltByName\")\n     FlowIdentifier updateSaltByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name);\n \n+    @POST\n+    @Path(\"{name}/database_backup\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = DATABASE_BACKUP, nickname = \"databaseBackup\")\n+    BackupV4Response backupDatabaseByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name,\n+            @QueryParam(\"backupLocation\") String backupLocation, @QueryParam(\"backupId\") String backupId);\n+\n+    @POST\n+    @Path(\"{name}/database_restore\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = DATABASE_RESTORE, nickname = \"databaseRestore\")\n+    RestoreV4Response restoreDatabaseByName(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"name\") String name,\n+            @QueryParam(\"backupLocation\") String backupLocation, @QueryParam(\"backupId\") String backupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0NTU1MA==", "bodyText": "the same here.. is it uuid or name?", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440745550", "createdAt": "2020-06-16T10:21:58Z", "author": {"login": "pdarvasi"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/endpoint/SdxEndpoint.java", "diffHunk": "@@ -165,4 +169,27 @@ SdxClusterResponse create(@ValidStackNameFormat @ValidStackNameLength @PathParam\n     @ApiOperation(value = \"list advertised datalake versions\", produces = MediaType.APPLICATION_JSON, nickname = \"advertisedruntimes\")\n     List<AdvertisedRuntime> advertisedRuntimes();\n \n+    @POST\n+    @Path(\"{name}/backupDatabase\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = \"backup the database backing datalake \", produces = MediaType.APPLICATION_JSON, nickname = \"backupDatabase\")\n+    SdxDatabaseBackupResponse backupDatabaseByName(@PathParam(\"name\") String name, @QueryParam(\"backupId\") String backupId, @QueryParam(\"backupLocation\") String backupLocation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0ODM0OQ==", "bodyText": "what is the value set? If it is fixed then I would prefer using an enum, if not then it is fine.", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440748349", "createdAt": "2020-06-16T10:27:21Z", "author": {"login": "pdarvasi"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/model/SdxDatabaseBackupStatusResponse.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.sequenceiq.sdx.api.model;\n+\n+public class SdxDatabaseBackupStatusResponse {\n+    private String status;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0ODQxNQ==", "bodyText": "what is the value set? If it is fixed then I would prefer using an enum, if not then it is fine.", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440748415", "createdAt": "2020-06-16T10:27:29Z", "author": {"login": "pdarvasi"}, "path": "datalake-api/src/main/java/com/sequenceiq/sdx/api/model/SdxDatabaseRestoreStatusResponse.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.sequenceiq.sdx.api.model;\n+\n+public class SdxDatabaseRestoreStatusResponse {\n+    private String status;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc1MDQ0MQ==", "bodyText": "Pls. introduce new AuthorizationResourceAction regarding backup/restore", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#discussion_r440750441", "createdAt": "2020-06-16T10:31:20Z", "author": {"login": "pdarvasi"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/controller/sdx/SdxController.java", "diffHunk": "@@ -239,4 +243,27 @@ public FlowIdentifier stopByCrn(@ResourceCrn String crn) {\n         return cdpConfigService.getAdvertisedRuntimes();\n     }\n \n+    @Override\n+    @CheckPermissionByAccount(action = AuthorizationResourceAction.DATALAKE_READ)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365b229e118da2e5e997de46a30409480ffc0022"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae718a9cfcecd12303ffd6d13f12852a16d973be", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ae718a9cfcecd12303ffd6d13f12852a16d973be", "committedDate": "2020-06-16T14:27:18Z", "message": "Update actions.json"}, "afterCommit": {"oid": "3205dc9e1a83b2de3d4ab6d2c6912728b3467870", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3205dc9e1a83b2de3d4ab6d2c6912728b3467870", "committedDate": "2020-06-16T15:15:39Z", "message": "CB-7477: Define API's for datalake and CB services to fasten the integration.\nAddressed review comments. Updated the actions.json with appropriate rights."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14582b75214a424f754f6543447538b0001b02c0", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/14582b75214a424f754f6543447538b0001b02c0", "committedDate": "2020-06-16T15:17:35Z", "message": "Merge branch 'master' into CB-7477"}, "afterCommit": {"oid": "a876ae2ee2998c5eee6dbff91a2887013b61ed8a", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/a876ae2ee2998c5eee6dbff91a2887013b61ed8a", "committedDate": "2020-06-16T16:27:35Z", "message": "CB-7477: Define API's for datalake and CB services to fasten the integration.\nAddressed review comments. Updated the actions.json with appropriate rights."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7ac820f5c39b201ad8c1964228cb664d9b3472d", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/b7ac820f5c39b201ad8c1964228cb664d9b3472d", "committedDate": "2020-06-16T16:44:36Z", "message": "CB-7477: Define API's for datalake and CB services to fasten the integration.\nAddressed review comments. Updated the actions.json with appropriate rights."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac91954be003c77834beb43c1ee97e1d42b688ef", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ac91954be003c77834beb43c1ee97e1d42b688ef", "committedDate": "2020-06-16T16:42:53Z", "message": "Merge branch 'master' into CB-7477"}, "afterCommit": {"oid": "b7ac820f5c39b201ad8c1964228cb664d9b3472d", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/b7ac820f5c39b201ad8c1964228cb664d9b3472d", "committedDate": "2020-06-16T16:44:36Z", "message": "CB-7477: Define API's for datalake and CB services to fasten the integration.\nAddressed review comments. Updated the actions.json with appropriate rights."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "591677307f8ee138d705ba5e47cea83cb7ae19f1", "author": {"user": {"login": "kkalvagadda1", "name": "kalyan kumar kalvagadda"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/591677307f8ee138d705ba5e47cea83cb7ae19f1", "committedDate": "2020-06-16T17:27:56Z", "message": "CB-7477: Define API's for datalake and CB services to fasten the integration.\nfixed unit test failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMTI0NjQx", "url": "https://github.com/hortonworks/cloudbreak/pull/8286#pullrequestreview-432124641", "createdAt": "2020-06-17T07:22:26Z", "commit": {"oid": "591677307f8ee138d705ba5e47cea83cb7ae19f1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1719, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}