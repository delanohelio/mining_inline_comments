{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MDIzODgy", "number": 8340, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNToyOToxMlrOEHboaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNToyOToxMlrOEHboaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjI4MjAxOnYy", "diffSide": "RIGHT", "path": "cloud-api/src/main/java/com/sequenceiq/cloudbreak/cloud/model/instance/AwsInstanceTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNToyOToxM1rOGmyXJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDoyODoxMVrOGnDKeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyNDE5OQ==", "bodyText": "As it is used in case of GCP we could move this constant one layer upper to the provider generic InstanceTemplate class.", "url": "https://github.com/hortonworks/cloudbreak/pull/8340#discussion_r443324199", "createdAt": "2020-06-22T05:29:13Z", "author": {"login": "biharitomi"}, "path": "cloud-api/src/main/java/com/sequenceiq/cloudbreak/cloud/model/instance/AwsInstanceTemplate.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.sequenceiq.cloudbreak.cloud.model.instance;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+\n+import com.sequenceiq.cloudbreak.cloud.model.InstanceStatus;\n+import com.sequenceiq.cloudbreak.cloud.model.InstanceTemplate;\n+import com.sequenceiq.cloudbreak.cloud.model.Volume;\n+import com.sequenceiq.common.api.type.EncryptionType;\n+\n+public class AwsInstanceTemplate extends InstanceTemplate {\n+\n+    /**\n+     * Key of the optional dynamic parameter denoting whether EBS encryption is enabled or not. This applies to both root & attached (data) volumes.\n+     *\n+     * <p>\n+     *     Permitted values:\n+     *     <ul>\n+     *         <li>{@code Boolean.TRUE} instance, {@code \"true\"} (ignoring case): Encryption is enabled.</li>\n+     *         <li>{@code Boolean.FALSE} instance, {@code \"false\"} (or any other {@code String} not equal to {@code \"true\"} ignoring case), {@code null}:\n+     *         Encryption is disabled.</li>\n+     *     </ul>\n+     * </p>\n+     *\n+     * @see #putParameter(String, Object)\n+     * @see Boolean#parseBoolean(String)\n+     */\n+    public static final String EBS_ENCRYPTION_ENABLED = \"encrypted\";\n+\n+    /**\n+     * Key of the optional dynamic parameter denoting the type of AWS KMS encryption key to use for EBS encryption. Relevant only when encryption has been\n+     * enabled via parameter {@link #EBS_ENCRYPTION_ENABLED}.\n+     *\n+     * <p>\n+     *     Permitted values are the names of enum constants in {@link EncryptionType}:\n+     *     <ul>\n+     *         <li>{@code \"NONE\"}, {@code null}: No KMS key. Since EBS encryption always needs some KMS key, this setting essentially disables encryption.</li>\n+     *         <li>{@code \"DEFAULT\"}: Use the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_key_mgmt\">default\n+     *         key for EBS encryption</a> in the target Region. This can actually point to the AWS-managed KMS key with alias {@code alias/aws/ebs}, or\n+     *         some customer-managed symmetric KMS key.</li>\n+     *         <li>{@code \"CUSTOM\"}: Use the customer-managed symmetric KMS key specified in {@link #EBS_ENCRYPTION_KMS_KEY_ARN}.</li>\n+     *     </ul>\n+     * </p>\n+     *\n+     * @see #EBS_ENCRYPTION_ENABLED\n+     * @see #EBS_ENCRYPTION_KMS_KEY_ARN\n+     * @see #putParameter(String, Object)\n+     * @see EncryptionType\n+     */\n+    public static final String EBS_ENCRYPTION_KMS_KEY_TYPE = \"type\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27e40e8db17b425e50b26dc5a4422b135084bc9d"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5OTQ4MQ==", "bodyText": "Done. Also moved the similarly common \"key\" constant.", "url": "https://github.com/hortonworks/cloudbreak/pull/8340#discussion_r443599481", "createdAt": "2020-06-22T14:28:11Z", "author": {"login": "lajosrodek"}, "path": "cloud-api/src/main/java/com/sequenceiq/cloudbreak/cloud/model/instance/AwsInstanceTemplate.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.sequenceiq.cloudbreak.cloud.model.instance;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+\n+import com.sequenceiq.cloudbreak.cloud.model.InstanceStatus;\n+import com.sequenceiq.cloudbreak.cloud.model.InstanceTemplate;\n+import com.sequenceiq.cloudbreak.cloud.model.Volume;\n+import com.sequenceiq.common.api.type.EncryptionType;\n+\n+public class AwsInstanceTemplate extends InstanceTemplate {\n+\n+    /**\n+     * Key of the optional dynamic parameter denoting whether EBS encryption is enabled or not. This applies to both root & attached (data) volumes.\n+     *\n+     * <p>\n+     *     Permitted values:\n+     *     <ul>\n+     *         <li>{@code Boolean.TRUE} instance, {@code \"true\"} (ignoring case): Encryption is enabled.</li>\n+     *         <li>{@code Boolean.FALSE} instance, {@code \"false\"} (or any other {@code String} not equal to {@code \"true\"} ignoring case), {@code null}:\n+     *         Encryption is disabled.</li>\n+     *     </ul>\n+     * </p>\n+     *\n+     * @see #putParameter(String, Object)\n+     * @see Boolean#parseBoolean(String)\n+     */\n+    public static final String EBS_ENCRYPTION_ENABLED = \"encrypted\";\n+\n+    /**\n+     * Key of the optional dynamic parameter denoting the type of AWS KMS encryption key to use for EBS encryption. Relevant only when encryption has been\n+     * enabled via parameter {@link #EBS_ENCRYPTION_ENABLED}.\n+     *\n+     * <p>\n+     *     Permitted values are the names of enum constants in {@link EncryptionType}:\n+     *     <ul>\n+     *         <li>{@code \"NONE\"}, {@code null}: No KMS key. Since EBS encryption always needs some KMS key, this setting essentially disables encryption.</li>\n+     *         <li>{@code \"DEFAULT\"}: Use the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_key_mgmt\">default\n+     *         key for EBS encryption</a> in the target Region. This can actually point to the AWS-managed KMS key with alias {@code alias/aws/ebs}, or\n+     *         some customer-managed symmetric KMS key.</li>\n+     *         <li>{@code \"CUSTOM\"}: Use the customer-managed symmetric KMS key specified in {@link #EBS_ENCRYPTION_KMS_KEY_ARN}.</li>\n+     *     </ul>\n+     * </p>\n+     *\n+     * @see #EBS_ENCRYPTION_ENABLED\n+     * @see #EBS_ENCRYPTION_KMS_KEY_ARN\n+     * @see #putParameter(String, Object)\n+     * @see EncryptionType\n+     */\n+    public static final String EBS_ENCRYPTION_KMS_KEY_TYPE = \"type\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyNDE5OQ=="}, "originalCommit": {"oid": "27e40e8db17b425e50b26dc5a4422b135084bc9d"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3241, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}