{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNDY1MTc5", "number": 8596, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDowMzo0NVrOEQMzKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDowMzo0NVrOEQMzKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDIyMzc5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/stack/downscale/StackDownscaleService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDowMzo0NVrOG0OZKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDoxOTozMlrOG0PQ_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQxNDk1Mg==", "bodyText": "I am wondering if it might be possible for getDiscoveryFQDN to return null some error cases. I think this might be called for cleanup of a cluster that might have a node that didn't successfully complete the registration. A filter(Objects:nonNull) might be helpful here.\nI know later in the case there is Objects.requireNonNull(hostNames, \"Hostnames must be set\"); so it will throw an exception. But I wonder if this validation is called for the cluster deletion if it will prevent a cleanup from completing without the \"force\".", "url": "https://github.com/hortonworks/cloudbreak/pull/8596#discussion_r457414952", "createdAt": "2020-07-20T14:03:45Z", "author": {"login": "jamisonbennett"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/stack/downscale/StackDownscaleService.java", "diffHunk": "@@ -92,15 +86,14 @@ public void finishStackDownscale(StackScalingFlowContext context, String instanc\n         flowMessageService.fireEventAndLog(stack.getId(), AVAILABLE.name(), STACK_DOWNSCALE_SUCCESS, String.join(\",\", deletedInstanceIds));\n     }\n \n-    private void cleanupDnsRecords(Stack stack, List<String> fqdns) {\n+    private void cleanupDnsRecords(Stack stack, Collection<InstanceMetaData> instanceMetaDatas) {\n+        Set<String> fqdns = instanceMetaDatas.stream().map(InstanceMetaData::getDiscoveryFQDN).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8acfa311da1552e7f16582dca3a46de9e35d4e18"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQyOTI0NQ==", "bodyText": "we are ignoring cleanup error, but sure, I can add the filter", "url": "https://github.com/hortonworks/cloudbreak/pull/8596#discussion_r457429245", "createdAt": "2020-07-20T14:19:32Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/stack/downscale/StackDownscaleService.java", "diffHunk": "@@ -92,15 +86,14 @@ public void finishStackDownscale(StackScalingFlowContext context, String instanc\n         flowMessageService.fireEventAndLog(stack.getId(), AVAILABLE.name(), STACK_DOWNSCALE_SUCCESS, String.join(\",\", deletedInstanceIds));\n     }\n \n-    private void cleanupDnsRecords(Stack stack, List<String> fqdns) {\n+    private void cleanupDnsRecords(Stack stack, Collection<InstanceMetaData> instanceMetaDatas) {\n+        Set<String> fqdns = instanceMetaDatas.stream().map(InstanceMetaData::getDiscoveryFQDN).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQxNDk1Mg=="}, "originalCommit": {"oid": "8acfa311da1552e7f16582dca3a46de9e35d4e18"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3058, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}