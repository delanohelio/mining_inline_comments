{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MDMyOTIw", "number": 7008, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDoxMjoxN1rODWjbRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDoxMjoxN1rODWjbRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTc1Njg1OnYy", "diffSide": "RIGHT", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/dto/distrox/instancegroup/DistroXInstanceGroupsBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDoxMjoxN1rOFbYCjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDoxMjoxN1rOFbYCjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI0OTc0MQ==", "bodyText": "would not be nicer to implement in CloudProvider a getInstanceTemplateV1Request which decorate  the request, instead of a switch case?", "url": "https://github.com/hortonworks/cloudbreak/pull/7008#discussion_r364249741", "createdAt": "2020-01-08T14:12:17Z", "author": {"login": "afarsang"}, "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/dto/distrox/instancegroup/DistroXInstanceGroupsBuilder.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package com.sequenceiq.it.cloudbreak.dto.distrox.instancegroup;\n+\n+import static com.sequenceiq.it.cloudbreak.cloud.HostGroupType.COMPUTE;\n+import static com.sequenceiq.it.cloudbreak.cloud.HostGroupType.MASTER;\n+import static com.sequenceiq.it.cloudbreak.cloud.HostGroupType.WORKER;\n+import static com.sequenceiq.it.cloudbreak.dto.distrox.instancegroup.DistroXInstanceGroupTestDto.withHostGroup;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.NotImplementedException;\n+\n+import com.sequenceiq.cloudbreak.common.mappable.CloudPlatform;\n+import com.sequenceiq.common.api.type.EncryptionType;\n+import com.sequenceiq.distrox.api.v1.distrox.model.instancegroup.template.AwsEncryptionV1Parameters;\n+import com.sequenceiq.distrox.api.v1.distrox.model.instancegroup.template.AwsInstanceTemplateV1Parameters;\n+import com.sequenceiq.distrox.api.v1.distrox.model.instancegroup.template.InstanceTemplateV1Request;\n+import com.sequenceiq.it.cloudbreak.context.TestContext;\n+\n+public class DistroXInstanceGroupsBuilder {\n+\n+    private final TestContext testContext;\n+\n+    private List<DistroXInstanceGroupTestDto> distroXInstanceGroupTestDtoList;\n+\n+    public DistroXInstanceGroupsBuilder(TestContext testContext) {\n+        this.testContext = testContext;\n+    }\n+\n+    public DistroXInstanceGroupsBuilder defaultHostGroup() {\n+        distroXInstanceGroupTestDtoList = withHostGroup(testContext, MASTER, COMPUTE, WORKER);\n+        return this;\n+    }\n+\n+    public DistroXInstanceGroupsBuilder withDiskEncryption() {\n+        getInstanceTemplates().forEach(this::setInstanceTemplateV1Parameters);\n+        return this;\n+    }\n+\n+    public List<DistroXInstanceGroupTestDto> build() {\n+        return distroXInstanceGroupTestDtoList;\n+    }\n+\n+    private List<InstanceTemplateV1Request> getInstanceTemplates() {\n+        return distroXInstanceGroupTestDtoList.stream()\n+                .map(this::getInstanceTemplate)\n+                .collect(Collectors.toList());\n+    }\n+\n+    private InstanceTemplateV1Request getInstanceTemplate(DistroXInstanceGroupTestDto distroXInstanceGroupTestDto) {\n+        return distroXInstanceGroupTestDto.getRequest().getTemplate();\n+    }\n+\n+    private void setInstanceTemplateV1Parameters(InstanceTemplateV1Request instanceTemplateV1Request) {\n+        CloudPlatform cloudPlatform = testContext.getCloudProvider().getCloudPlatform();\n+        switch (cloudPlatform) {\n+            case AWS:\n+                instanceTemplateV1Request.setAws(getAwsInstanceTemplateV1Parameters());\n+                break;\n+            default:\n+                throw new NotImplementedException(String.format(\"Not implemented on cloudPlatform %s\", cloudPlatform));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfde262ab339d391dc203ac0365d202a43226c0c"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2951, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}