{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NDQ3ODkw", "number": 8375, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDoyNjoyMFrOEIY99Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDoyNjoyMFrOEIY99Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjMzMTQxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/RecipesV4Controller.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDoyNjoyMFrOGoUm8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDo0MTo1OFrOGoVWYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzMzg3NQ==", "bodyText": "We should remove this endpoint?\nCan we do a lookup in kibana if it's still used or not? There should be a controller interceptor for it.", "url": "https://github.com/hortonworks/cloudbreak/pull/8375#discussion_r444933875", "createdAt": "2020-06-24T14:26:20Z", "author": {"login": "lnardai"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/RecipesV4Controller.java", "diffHunk": "@@ -67,33 +81,38 @@ public RecipeV4Response post(Long workspaceId, RecipeV4Request request) {\n     }\n \n     @Override\n-    public RecipeV4Response deleteByName(Long workspaceId, String name) {\n+    @CheckPermissionByResourceName(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Response deleteByName(Long workspaceId, @ResourceName String name) {\n         Recipe deleted = recipeService.delete(NameOrCrn.ofName(name), workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return converterUtil.convert(deleted, RecipeV4Response.class);\n     }\n \n     @Override\n-    public RecipeV4Response deleteByCrn(Long workspaceId, @NotNull String crn) {\n+    @CheckPermissionByResourceCrn(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Response deleteByCrn(Long workspaceId, @NotNull @ResourceCrn String crn) {\n         Recipe deleted = recipeService.delete(NameOrCrn.ofCrn(crn), workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return converterUtil.convert(deleted, RecipeV4Response.class);\n     }\n \n     @Override\n-    public RecipeV4Responses deleteMultiple(Long workspaceId, Set<String> names) {\n+    @CheckPermissionByResourceNameList(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Responses deleteMultiple(Long workspaceId, @ResourceNameList Set<String> names) {\n         Set<Recipe> deleted = recipeService.deleteMultipleByNameFromWorkspace(names, workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return new RecipeV4Responses(converterUtil.convertAllAsSet(deleted, RecipeV4Response.class));\n     }\n \n     @Override\n+    @DisableCheckPermissions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9963383d63dcbc3e20777ea4d8c2de27f1c5fbd6"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzNjM5MQ==", "bodyText": "I am not sure, I haven't checked, I just think that this endpoint is not a security risk anyway", "url": "https://github.com/hortonworks/cloudbreak/pull/8375#discussion_r444936391", "createdAt": "2020-06-24T14:29:32Z", "author": {"login": "horadla23"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/RecipesV4Controller.java", "diffHunk": "@@ -67,33 +81,38 @@ public RecipeV4Response post(Long workspaceId, RecipeV4Request request) {\n     }\n \n     @Override\n-    public RecipeV4Response deleteByName(Long workspaceId, String name) {\n+    @CheckPermissionByResourceName(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Response deleteByName(Long workspaceId, @ResourceName String name) {\n         Recipe deleted = recipeService.delete(NameOrCrn.ofName(name), workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return converterUtil.convert(deleted, RecipeV4Response.class);\n     }\n \n     @Override\n-    public RecipeV4Response deleteByCrn(Long workspaceId, @NotNull String crn) {\n+    @CheckPermissionByResourceCrn(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Response deleteByCrn(Long workspaceId, @NotNull @ResourceCrn String crn) {\n         Recipe deleted = recipeService.delete(NameOrCrn.ofCrn(crn), workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return converterUtil.convert(deleted, RecipeV4Response.class);\n     }\n \n     @Override\n-    public RecipeV4Responses deleteMultiple(Long workspaceId, Set<String> names) {\n+    @CheckPermissionByResourceNameList(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Responses deleteMultiple(Long workspaceId, @ResourceNameList Set<String> names) {\n         Set<Recipe> deleted = recipeService.deleteMultipleByNameFromWorkspace(names, workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return new RecipeV4Responses(converterUtil.convertAllAsSet(deleted, RecipeV4Response.class));\n     }\n \n     @Override\n+    @DisableCheckPermissions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzMzg3NQ=="}, "originalCommit": {"oid": "9963383d63dcbc3e20777ea4d8c2de27f1c5fbd6"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk0MDEwOQ==", "bodyText": "Well, you can read anybody's recipe and it can contain sensitive information.", "url": "https://github.com/hortonworks/cloudbreak/pull/8375#discussion_r444940109", "createdAt": "2020-06-24T14:34:10Z", "author": {"login": "lnardai"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/RecipesV4Controller.java", "diffHunk": "@@ -67,33 +81,38 @@ public RecipeV4Response post(Long workspaceId, RecipeV4Request request) {\n     }\n \n     @Override\n-    public RecipeV4Response deleteByName(Long workspaceId, String name) {\n+    @CheckPermissionByResourceName(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Response deleteByName(Long workspaceId, @ResourceName String name) {\n         Recipe deleted = recipeService.delete(NameOrCrn.ofName(name), workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return converterUtil.convert(deleted, RecipeV4Response.class);\n     }\n \n     @Override\n-    public RecipeV4Response deleteByCrn(Long workspaceId, @NotNull String crn) {\n+    @CheckPermissionByResourceCrn(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Response deleteByCrn(Long workspaceId, @NotNull @ResourceCrn String crn) {\n         Recipe deleted = recipeService.delete(NameOrCrn.ofCrn(crn), workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return converterUtil.convert(deleted, RecipeV4Response.class);\n     }\n \n     @Override\n-    public RecipeV4Responses deleteMultiple(Long workspaceId, Set<String> names) {\n+    @CheckPermissionByResourceNameList(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Responses deleteMultiple(Long workspaceId, @ResourceNameList Set<String> names) {\n         Set<Recipe> deleted = recipeService.deleteMultipleByNameFromWorkspace(names, workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return new RecipeV4Responses(converterUtil.convertAllAsSet(deleted, RecipeV4Response.class));\n     }\n \n     @Override\n+    @DisableCheckPermissions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzMzg3NQ=="}, "originalCommit": {"oid": "9963383d63dcbc3e20777ea4d8c2de27f1c5fbd6"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk0NjAxOA==", "bodyText": "yes, you're right, fixed", "url": "https://github.com/hortonworks/cloudbreak/pull/8375#discussion_r444946018", "createdAt": "2020-06-24T14:41:58Z", "author": {"login": "horadla23"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/RecipesV4Controller.java", "diffHunk": "@@ -67,33 +81,38 @@ public RecipeV4Response post(Long workspaceId, RecipeV4Request request) {\n     }\n \n     @Override\n-    public RecipeV4Response deleteByName(Long workspaceId, String name) {\n+    @CheckPermissionByResourceName(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Response deleteByName(Long workspaceId, @ResourceName String name) {\n         Recipe deleted = recipeService.delete(NameOrCrn.ofName(name), workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return converterUtil.convert(deleted, RecipeV4Response.class);\n     }\n \n     @Override\n-    public RecipeV4Response deleteByCrn(Long workspaceId, @NotNull String crn) {\n+    @CheckPermissionByResourceCrn(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Response deleteByCrn(Long workspaceId, @NotNull @ResourceCrn String crn) {\n         Recipe deleted = recipeService.delete(NameOrCrn.ofCrn(crn), workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return converterUtil.convert(deleted, RecipeV4Response.class);\n     }\n \n     @Override\n-    public RecipeV4Responses deleteMultiple(Long workspaceId, Set<String> names) {\n+    @CheckPermissionByResourceNameList(action = AuthorizationResourceAction.DELETE_RECIPE)\n+    public RecipeV4Responses deleteMultiple(Long workspaceId, @ResourceNameList Set<String> names) {\n         Set<Recipe> deleted = recipeService.deleteMultipleByNameFromWorkspace(names, workspaceId);\n         notify(ResourceEvent.RECIPE_DELETED);\n         return new RecipeV4Responses(converterUtil.convertAllAsSet(deleted, RecipeV4Response.class));\n     }\n \n     @Override\n+    @DisableCheckPermissions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzMzg3NQ=="}, "originalCommit": {"oid": "9963383d63dcbc3e20777ea4d8c2de27f1c5fbd6"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3161, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}