{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTU5NDI5", "number": 7842, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjozMDoxMlrOD0N7Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjozMzoyMFrOD0OAwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDgwNzAyOnYy", "diffSide": "RIGHT", "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/task/networkinterface/NetworkInterfaceDetachChecker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjozMDoxMlrOGJDHfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjozMDoxMlrOGJDHfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0MTQzNg==", "bodyText": "typo", "url": "https://github.com/hortonworks/cloudbreak/pull/7842#discussion_r412141436", "createdAt": "2020-04-21T12:30:12Z", "author": {"login": "pdarvasi"}, "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/task/networkinterface/NetworkInterfaceDetachChecker.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.sequenceiq.cloudbreak.cloud.azure.task.networkinterface;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import com.microsoft.azure.management.network.NetworkInterface;\n+import com.sequenceiq.cloudbreak.cloud.context.AuthenticatedContext;\n+import com.sequenceiq.cloudbreak.cloud.task.PollBooleanStateTask;\n+import com.sequenceiq.cloudbreak.service.CloudbreakServiceException;\n+\n+import rx.Completable;\n+import rx.schedulers.Schedulers;\n+\n+@Component(NetworkInterfaceDetachChecker.NAME)\n+@Scope(\"prototype\")\n+public class NetworkInterfaceDetachChecker extends PollBooleanStateTask {\n+    public static final String NAME = \"NetworkInterfaceDetachChecker\";\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(NetworkInterfaceDetachChecker.class);\n+\n+    private NetworkInterfaceDetachCheckerContext context;\n+\n+    private Collection<String> attachedNetworkInterfaces;\n+\n+    public NetworkInterfaceDetachChecker(AuthenticatedContext authenticatedContext, NetworkInterfaceDetachCheckerContext context) {\n+        super(authenticatedContext, false);\n+        this.context = context;\n+        this.attachedNetworkInterfaces = context.getNetworkInterfacesNames();\n+    }\n+\n+    @Override\n+    protected Boolean doCall() {\n+        LOGGER.info(\"Waiting for network interfaces to be detached: {}\", attachedNetworkInterfaces);\n+        List<Completable> networkInterfacesCompletables = new ArrayList<>();\n+        List<NetworkInterface> networkInterfaces = new ArrayList<>();\n+        List<String> failedToRetriveNetworkInterfaces = new ArrayList<>();\n+        for (String networkInterfaceName : attachedNetworkInterfaces) {\n+            networkInterfacesCompletables.add(Completable.fromObservable(\n+                    context.getAzureClient().getNetworkInterfaceAsync(context.getResourceGroupName(), networkInterfaceName)\n+                            .doOnError(throwable -> {\n+                                LOGGER.error(\"Error happend on azure network interface retrieval: {}\", networkInterfaceName, throwable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "612f0e89cc388158803cb27785bafed416f5938f"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDgwODY1OnYy", "diffSide": "RIGHT", "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/task/networkinterface/NetworkInterfaceDetachChecker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjozMDozNlrOGJDIgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjozMDozNlrOGJDIgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0MTY5Ng==", "bodyText": "typo", "url": "https://github.com/hortonworks/cloudbreak/pull/7842#discussion_r412141696", "createdAt": "2020-04-21T12:30:36Z", "author": {"login": "pdarvasi"}, "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/task/networkinterface/NetworkInterfaceDetachChecker.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.sequenceiq.cloudbreak.cloud.azure.task.networkinterface;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import com.microsoft.azure.management.network.NetworkInterface;\n+import com.sequenceiq.cloudbreak.cloud.context.AuthenticatedContext;\n+import com.sequenceiq.cloudbreak.cloud.task.PollBooleanStateTask;\n+import com.sequenceiq.cloudbreak.service.CloudbreakServiceException;\n+\n+import rx.Completable;\n+import rx.schedulers.Schedulers;\n+\n+@Component(NetworkInterfaceDetachChecker.NAME)\n+@Scope(\"prototype\")\n+public class NetworkInterfaceDetachChecker extends PollBooleanStateTask {\n+    public static final String NAME = \"NetworkInterfaceDetachChecker\";\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(NetworkInterfaceDetachChecker.class);\n+\n+    private NetworkInterfaceDetachCheckerContext context;\n+\n+    private Collection<String> attachedNetworkInterfaces;\n+\n+    public NetworkInterfaceDetachChecker(AuthenticatedContext authenticatedContext, NetworkInterfaceDetachCheckerContext context) {\n+        super(authenticatedContext, false);\n+        this.context = context;\n+        this.attachedNetworkInterfaces = context.getNetworkInterfacesNames();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "612f0e89cc388158803cb27785bafed416f5938f"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDgyMTEzOnYy", "diffSide": "RIGHT", "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/task/networkinterface/NetworkInterfaceDetachCheckerContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjozMzoyMFrOGJDPyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjozMzoyMFrOGJDPyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0MzU2Mw==", "bodyText": "typo", "url": "https://github.com/hortonworks/cloudbreak/pull/7842#discussion_r412143563", "createdAt": "2020-04-21T12:33:20Z", "author": {"login": "pdarvasi"}, "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/task/networkinterface/NetworkInterfaceDetachCheckerContext.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.sequenceiq.cloudbreak.cloud.azure.task.networkinterface;\n+\n+import java.util.Collection;\n+\n+import com.sequenceiq.cloudbreak.cloud.azure.client.AzureClient;\n+\n+public class NetworkInterfaceDetachCheckerContext {\n+    private AzureClient azureClient;\n+\n+    private String resourceGroupName;\n+\n+    private Collection<String> networkInterfacesNames;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "612f0e89cc388158803cb27785bafed416f5938f"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2566, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}