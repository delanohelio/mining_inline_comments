{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5Nzc0NjIx", "number": 9169, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMTozNDo1NFrOErkjEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo0NjowMFrOErmLLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTIzMDI1OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMTozNDo1NFrOHeaSzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMTozNDo1NFrOHeaSzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MDEyNQ==", "bodyText": "please use isEmpty()", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501650125", "createdAt": "2020-10-08T11:34:54Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -99,7 +99,9 @@ private void syncAStack(Stack stack) {\n                     if (!checkableInstances.isEmpty()) {\n                         SyncResult syncResult = freeipaChecker.getStatus(stack, checkableInstances);\n                         List<ProviderSyncResult> results = providerChecker.updateAndGetStatuses(stack, checkableInstances);\n-                        updateStackStatus(stack, syncResult, results, alreadyDeletedCount);\n+                        if (results.size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2ffe4cb25480c277128e186036aa1ee46050a2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTIzODQ2OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMTozNzoxN1rOHeaXrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzowNToxN1rOHedjmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTM3NQ==", "bodyText": "it's strange we need this. I think StackStatusCheckerJob already checks", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501651375", "createdAt": "2020-10-08T11:37:17Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -53,17 +57,23 @@\n             });\n             checkableInstances.forEach(instanceMetaData -> {\n                 if (statuses.stream().noneMatch(s -> s.getCloudInstance().getInstanceId().equals(instanceMetaData.getInstanceId()))) {\n-                    if (updateStatus) {\n-                        setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_ON_PROVIDER_SIDE);\n-                        instanceMetaDataService.save(instanceMetaData);\n+                    if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2ffe4cb25480c277128e186036aa1ee46050a2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1NjMyNg==", "bodyText": "It can take long seconds to fetch provider side information. Meanwhile, flow can start in the background.", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501656326", "createdAt": "2020-10-08T11:46:41Z", "author": {"login": "sodre90"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -53,17 +57,23 @@\n             });\n             checkableInstances.forEach(instanceMetaData -> {\n                 if (statuses.stream().noneMatch(s -> s.getCloudInstance().getInstanceId().equals(instanceMetaData.getInstanceId()))) {\n-                    if (updateStatus) {\n-                        setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_ON_PROVIDER_SIDE);\n-                        instanceMetaDataService.save(instanceMetaData);\n+                    if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTM3NQ=="}, "originalCommit": {"oid": "9c2ffe4cb25480c277128e186036aa1ee46050a2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY2NzUzMA==", "bodyText": "in that case it would make sense to throw an exception or similar to stop the whole sync. right now we will continue the sync just log an error.", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501667530", "createdAt": "2020-10-08T12:07:01Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -53,17 +57,23 @@\n             });\n             checkableInstances.forEach(instanceMetaData -> {\n                 if (statuses.stream().noneMatch(s -> s.getCloudInstance().getInstanceId().equals(instanceMetaData.getInstanceId()))) {\n-                    if (updateStatus) {\n-                        setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_ON_PROVIDER_SIDE);\n-                        instanceMetaDataService.save(instanceMetaData);\n+                    if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTM3NQ=="}, "originalCommit": {"oid": "9c2ffe4cb25480c277128e186036aa1ee46050a2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY2OTUxMw==", "bodyText": "also I don't know if it's a good idea to have this check in a loop. freeipa won't have many instances but I would move these checks out from loops to ease the load on the database", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501669513", "createdAt": "2020-10-08T12:10:28Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -53,17 +57,23 @@\n             });\n             checkableInstances.forEach(instanceMetaData -> {\n                 if (statuses.stream().noneMatch(s -> s.getCloudInstance().getInstanceId().equals(instanceMetaData.getInstanceId()))) {\n-                    if (updateStatus) {\n-                        setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_ON_PROVIDER_SIDE);\n-                        instanceMetaDataService.save(instanceMetaData);\n+                    if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTM3NQ=="}, "originalCommit": {"oid": "9c2ffe4cb25480c277128e186036aa1ee46050a2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4MzgyNw==", "bodyText": "you are right:\n\nI created a new exception (InterruptSyncingException)\ncheck is moved before loops but after provider query operation", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501683827", "createdAt": "2020-10-08T12:34:20Z", "author": {"login": "sodre90"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -53,17 +57,23 @@\n             });\n             checkableInstances.forEach(instanceMetaData -> {\n                 if (statuses.stream().noneMatch(s -> s.getCloudInstance().getInstanceId().equals(instanceMetaData.getInstanceId()))) {\n-                    if (updateStatus) {\n-                        setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_ON_PROVIDER_SIDE);\n-                        instanceMetaDataService.save(instanceMetaData);\n+                    if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTM3NQ=="}, "originalCommit": {"oid": "9c2ffe4cb25480c277128e186036aa1ee46050a2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4OTY3OA==", "bodyText": "thanks for the changes!\nplease consider catching InterruptSyncingException in executeInternal method instead of letting it propagate to quartz. There is a try-finally block already", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501689678", "createdAt": "2020-10-08T12:43:42Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -53,17 +57,23 @@\n             });\n             checkableInstances.forEach(instanceMetaData -> {\n                 if (statuses.stream().noneMatch(s -> s.getCloudInstance().getInstanceId().equals(instanceMetaData.getInstanceId()))) {\n-                    if (updateStatus) {\n-                        setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_ON_PROVIDER_SIDE);\n-                        instanceMetaDataService.save(instanceMetaData);\n+                    if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTM3NQ=="}, "originalCommit": {"oid": "9c2ffe4cb25480c277128e186036aa1ee46050a2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcwMzU3Nw==", "bodyText": "good idea!", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501703577", "createdAt": "2020-10-08T13:05:17Z", "author": {"login": "sodre90"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -53,17 +57,23 @@\n             });\n             checkableInstances.forEach(instanceMetaData -> {\n                 if (statuses.stream().noneMatch(s -> s.getCloudInstance().getInstanceId().equals(instanceMetaData.getInstanceId()))) {\n-                    if (updateStatus) {\n-                        setStatusIfNotTheSame(instanceMetaData, InstanceStatus.DELETED_ON_PROVIDER_SIDE);\n-                        instanceMetaDataService.save(instanceMetaData);\n+                    if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTM3NQ=="}, "originalCommit": {"oid": "9c2ffe4cb25480c277128e186036aa1ee46050a2"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTI0MTcyOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMTozODoxNlrOHeaZoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMTo0Njo1OFrOHearjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTg3Mg==", "bodyText": "same here, code shouldn't reach this part if flow is running", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501651872", "createdAt": "2020-10-08T11:38:16Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -113,7 +115,11 @@ private void updateStackStatus(Stack stack, SyncResult result, List<ProviderSync\n         DetailedStackStatus status = getStackStatus(providerSyncResults, result, alreadyDeletedCount);\n         if (status != stack.getStackStatus().getDetailedStackStatus()) {\n             if (autoSyncConfig.isUpdateStatus()) {\n-                stackUpdater.updateStackStatus(stack, status, result.getMessage());\n+                if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2ffe4cb25480c277128e186036aa1ee46050a2"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1NjQ2Mw==", "bodyText": "same answer as previous", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501656463", "createdAt": "2020-10-08T11:46:58Z", "author": {"login": "sodre90"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -113,7 +115,11 @@ private void updateStackStatus(Stack stack, SyncResult result, List<ProviderSync\n         DetailedStackStatus status = getStackStatus(providerSyncResults, result, alreadyDeletedCount);\n         if (status != stack.getStackStatus().getDetailedStackStatus()) {\n             if (autoSyncConfig.isUpdateStatus()) {\n-                stackUpdater.updateStackStatus(stack, status, result.getMessage());\n+                if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTg3Mg=="}, "originalCommit": {"oid": "9c2ffe4cb25480c277128e186036aa1ee46050a2"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTQ3NzQyOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo0MToxMVrOHecnXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo1MjoxMFrOHedCFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4ODE1Ng==", "bodyText": "Don't need this here, we check this at the start", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501688156", "createdAt": "2020-10-08T12:41:11Z", "author": {"login": "topolyai5"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -31,39 +32,48 @@\n     @Inject\n     private StackInstanceProviderChecker stackInstanceProviderChecker;\n \n+    @Inject\n+    private FlowLogService flowLogService;\n+\n     @Value(\"${freeipa.autosync.update.status:true}\")\n     private boolean updateStatus;\n \n     public List<ProviderSyncResult> updateAndGetStatuses(Stack stack, Set<InstanceMetaData> checkableInstances) {\n         return checkedMeasure(() -> {\n             List<ProviderSyncResult> results = new ArrayList<>();\n             List<CloudVmInstanceStatus> statuses = stackInstanceProviderChecker.checkStatus(stack, checkableInstances);\n-            statuses.forEach(s -> {\n-                Optional<InstanceMetaData> instanceMetaData = checkableInstances.stream()\n-                        .filter(i -> s.getCloudInstance().getInstanceId().equals(i.getInstanceId()))\n-                        .findFirst();\n-                if (instanceMetaData.isPresent()) {\n-                    InstanceStatus instanceStatus = updateStatuses(s, instanceMetaData.get());\n-                    if (instanceStatus != null) {\n-                        results.add(new ProviderSyncResult(\"\", instanceStatus, false, s.getCloudInstance().getInstanceId()));\n+            if (flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27fd973b10741e5d17eb16c6cf086b28f8eaeb6a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5NDk5Nw==", "bodyText": "please see the above comments", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501694997", "createdAt": "2020-10-08T12:52:10Z", "author": {"login": "sodre90"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -31,39 +32,48 @@\n     @Inject\n     private StackInstanceProviderChecker stackInstanceProviderChecker;\n \n+    @Inject\n+    private FlowLogService flowLogService;\n+\n     @Value(\"${freeipa.autosync.update.status:true}\")\n     private boolean updateStatus;\n \n     public List<ProviderSyncResult> updateAndGetStatuses(Stack stack, Set<InstanceMetaData> checkableInstances) {\n         return checkedMeasure(() -> {\n             List<ProviderSyncResult> results = new ArrayList<>();\n             List<CloudVmInstanceStatus> statuses = stackInstanceProviderChecker.checkStatus(stack, checkableInstances);\n-            statuses.forEach(s -> {\n-                Optional<InstanceMetaData> instanceMetaData = checkableInstances.stream()\n-                        .filter(i -> s.getCloudInstance().getInstanceId().equals(i.getInstanceId()))\n-                        .findFirst();\n-                if (instanceMetaData.isPresent()) {\n-                    InstanceStatus instanceStatus = updateStatuses(s, instanceMetaData.get());\n-                    if (instanceStatus != null) {\n-                        results.add(new ProviderSyncResult(\"\", instanceStatus, false, s.getCloudInstance().getInstanceId()));\n+            if (flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4ODE1Ng=="}, "originalCommit": {"oid": "27fd973b10741e5d17eb16c6cf086b28f8eaeb6a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTQ3NzU4OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo0MToxNFrOHecndA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo0MzoxN1rOHecsVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4ODE4MA==", "bodyText": "this check has been removed: instanceMetaData.getInstanceStatus() != newStatus\nis it on purpose? I mean we will log here even no change happens in this case", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501688180", "createdAt": "2020-10-08T12:41:14Z", "author": {"login": "lacikaaa"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -91,21 +101,25 @@ private InstanceStatus updateStatuses(CloudVmInstanceStatus vmInstanceStatus, In\n             default:\n                 LOGGER.info(\":::Auto sync::: the '{}' status is not converted\", vmInstanceStatus.getStatus());\n         }\n-        if (updateStatus) {\n-            instanceMetaDataService.save(instanceMetaData);\n+        if (!flowLogService.isOtherFlowRunning(stack.getId())) {\n+            if (updateStatus) {\n+                instanceMetaDataService.save(instanceMetaData);\n+            } else {\n+                LOGGER.debug(\"updateStatus flag is false, don't update status\");\n+            }\n+        } else {\n+            LOGGER.debug(\":::Auto sync::: do not update instance status to {} because flow is running for stack: {}\", status, stack.getName());\n         }\n         return status;\n     }\n \n     private void setStatusIfNotTheSame(InstanceMetaData instanceMetaData, InstanceStatus newStatus) {\n-        if (instanceMetaData.getInstanceStatus() != newStatus) {\n-            if (updateStatus) {\n-                instanceMetaData.setInstanceStatus(newStatus);\n-                LOGGER.info(\":::Auto sync::: The instance status updated from {} to {}\", instanceMetaData.getInstanceStatus(), newStatus);\n-            } else {\n-                LOGGER.info(\":::Auto sync::: The instance status would be had to update from {} to {}\",\n-                        instanceMetaData.getInstanceStatus(), newStatus);\n-            }\n+        if (updateStatus) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27fd973b10741e5d17eb16c6cf086b28f8eaeb6a"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4OTQyOA==", "bodyText": "thanks! it was a mistake :)", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501689428", "createdAt": "2020-10-08T12:43:17Z", "author": {"login": "sodre90"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -91,21 +101,25 @@ private InstanceStatus updateStatuses(CloudVmInstanceStatus vmInstanceStatus, In\n             default:\n                 LOGGER.info(\":::Auto sync::: the '{}' status is not converted\", vmInstanceStatus.getStatus());\n         }\n-        if (updateStatus) {\n-            instanceMetaDataService.save(instanceMetaData);\n+        if (!flowLogService.isOtherFlowRunning(stack.getId())) {\n+            if (updateStatus) {\n+                instanceMetaDataService.save(instanceMetaData);\n+            } else {\n+                LOGGER.debug(\"updateStatus flag is false, don't update status\");\n+            }\n+        } else {\n+            LOGGER.debug(\":::Auto sync::: do not update instance status to {} because flow is running for stack: {}\", status, stack.getName());\n         }\n         return status;\n     }\n \n     private void setStatusIfNotTheSame(InstanceMetaData instanceMetaData, InstanceStatus newStatus) {\n-        if (instanceMetaData.getInstanceStatus() != newStatus) {\n-            if (updateStatus) {\n-                instanceMetaData.setInstanceStatus(newStatus);\n-                LOGGER.info(\":::Auto sync::: The instance status updated from {} to {}\", instanceMetaData.getInstanceStatus(), newStatus);\n-            } else {\n-                LOGGER.info(\":::Auto sync::: The instance status would be had to update from {} to {}\",\n-                        instanceMetaData.getInstanceStatus(), newStatus);\n-            }\n+        if (updateStatus) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4ODE4MA=="}, "originalCommit": {"oid": "27fd973b10741e5d17eb16c6cf086b28f8eaeb6a"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTQ4NjkxOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo0MzozOFrOHectIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo1Mjo0M1rOHedDYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4OTYzNQ==", "bodyText": "could you please add a more accurate message? where did happened or stuff like this", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501689635", "createdAt": "2020-10-08T12:43:38Z", "author": {"login": "topolyai5"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -113,7 +115,11 @@ private void updateStackStatus(Stack stack, SyncResult result, List<ProviderSync\n         DetailedStackStatus status = getStackStatus(providerSyncResults, result, alreadyDeletedCount);\n         if (status != stack.getStackStatus().getDetailedStackStatus()) {\n             if (autoSyncConfig.isUpdateStatus()) {\n-                stackUpdater.updateStackStatus(stack, status, result.getMessage());\n+                if (flowLogService.isOtherFlowRunning(stack.getId())) {\n+                    throw new InterruptSyncingException(\":::Auto sync::: interrupt syncing, flow is running on freeipa stack \" + stack.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ff0917545061a2d7615aaf5a4c5d03a4ce21256"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5NTMyOQ==", "bodyText": "you will see it from stack trace ;) but I will add some custom thing here", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501695329", "createdAt": "2020-10-08T12:52:43Z", "author": {"login": "sodre90"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -113,7 +115,11 @@ private void updateStackStatus(Stack stack, SyncResult result, List<ProviderSync\n         DetailedStackStatus status = getStackStatus(providerSyncResults, result, alreadyDeletedCount);\n         if (status != stack.getStackStatus().getDetailedStackStatus()) {\n             if (autoSyncConfig.isUpdateStatus()) {\n-                stackUpdater.updateStackStatus(stack, status, result.getMessage());\n+                if (flowLogService.isOtherFlowRunning(stack.getId())) {\n+                    throw new InterruptSyncingException(\":::Auto sync::: interrupt syncing, flow is running on freeipa stack \" + stack.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4OTYzNQ=="}, "originalCommit": {"oid": "0ff0917545061a2d7615aaf5a4c5d03a4ce21256"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTQ4OTczOnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo0NDoyM1rOHecu5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo0NDoyM1rOHecu5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5MDA4NQ==", "bodyText": "please add a log message, why you skip the update", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501690085", "createdAt": "2020-10-08T12:44:23Z", "author": {"login": "topolyai5"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/StackStatusCheckerJob.java", "diffHunk": "@@ -99,7 +99,9 @@ private void syncAStack(Stack stack) {\n                     if (!checkableInstances.isEmpty()) {\n                         SyncResult syncResult = freeipaChecker.getStatus(stack, checkableInstances);\n                         List<ProviderSyncResult> results = providerChecker.updateAndGetStatuses(stack, checkableInstances);\n-                        updateStackStatus(stack, syncResult, results, alreadyDeletedCount);\n+                        if (!results.isEmpty()) {\n+                            updateStackStatus(stack, syncResult, results, alreadyDeletedCount);\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ff0917545061a2d7615aaf5a4c5d03a4ce21256"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTQ5Njc2OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo0NjowMFrOHeczNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzowMjoyNFrOHedcPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5MTE4OA==", "bodyText": "if the flow is finished while you iterate over the list, what will happen?", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501691188", "createdAt": "2020-10-08T12:46:00Z", "author": {"login": "topolyai5"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -91,8 +101,14 @@ private InstanceStatus updateStatuses(CloudVmInstanceStatus vmInstanceStatus, In\n             default:\n                 LOGGER.info(\":::Auto sync::: the '{}' status is not converted\", vmInstanceStatus.getStatus());\n         }\n-        if (updateStatus) {\n-            instanceMetaDataService.save(instanceMetaData);\n+        if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ff0917545061a2d7615aaf5a4c5d03a4ce21256"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcwMTY5Mw==", "bodyText": "true!", "url": "https://github.com/hortonworks/cloudbreak/pull/9169#discussion_r501701693", "createdAt": "2020-10-08T13:02:24Z", "author": {"login": "sodre90"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/sync/ProviderChecker.java", "diffHunk": "@@ -91,8 +101,14 @@ private InstanceStatus updateStatuses(CloudVmInstanceStatus vmInstanceStatus, In\n             default:\n                 LOGGER.info(\":::Auto sync::: the '{}' status is not converted\", vmInstanceStatus.getStatus());\n         }\n-        if (updateStatus) {\n-            instanceMetaDataService.save(instanceMetaData);\n+        if (!flowLogService.isOtherFlowRunning(stack.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5MTE4OA=="}, "originalCommit": {"oid": "0ff0917545061a2d7615aaf5a4c5d03a4ce21256"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2106, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}