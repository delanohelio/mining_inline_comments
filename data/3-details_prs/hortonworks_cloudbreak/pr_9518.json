{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NTA4MDMx", "number": 9518, "title": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk", "bodyText": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n\nintroduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\nsalt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\nsalt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server.\nEnable gateway repair if the embedded database data is stored on attached disk\n\nExtend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\nGateway repair will be enabled if embedded database stores its data on attached disk\nIf entitlement will change it won't affect the existing clusters' behaviour.", "createdAt": "2020-11-25T15:01:17Z", "url": "https://github.com/hortonworks/cloudbreak/pull/9518", "merged": true, "mergeCommit": {"oid": "8185bc2d1614cd5c54fa292d40a2b5c5bf67972f"}, "closed": true, "closedAt": "2020-12-01T18:42:47Z", "author": {"login": "schfeca75"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgAGOugBqjQwMzg2NDk0NDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh81gagBqjQwNTgyMDQyNjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "111c58669c9d5ab9a851facf5634b4c66cbeac20", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/111c58669c9d5ab9a851facf5634b4c66cbeac20", "committedDate": "2020-11-25T15:00:09Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk"}, "afterCommit": {"oid": "9a6d68245657427530f13958afa8228615c4f0a0", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9a6d68245657427530f13958afa8228615c4f0a0", "committedDate": "2020-11-25T15:29:10Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a6d68245657427530f13958afa8228615c4f0a0", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9a6d68245657427530f13958afa8228615c4f0a0", "committedDate": "2020-11-25T15:29:10Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk"}, "afterCommit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/1092d602d82f6d17cb50328b4d127cb2fa90cbf6", "committedDate": "2020-11-25T17:12:36Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MTQ2Mjgw", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-539146280", "createdAt": "2020-11-26T09:41:02Z", "commit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTo0MTowMlrOH6TTcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTo0MTowMlrOH6TTcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg5NTczMA==", "bodyText": "My recommendation is to make it false by default. We'll enable it once we have a reserved disk for it.", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r530895730", "createdAt": "2020-11-26T09:41:02Z", "author": {"login": "keyki"}, "path": "mock-thunderhead/src/main/resources/application.yml", "diffHunk": "@@ -33,3 +33,4 @@ auth:\n     differentdatahubversionthandatalake.enabled: true\n     database.wire.encryption.enable: true\n     datahub.runtime.upgrade.enable: true\n+    embedded.database.on.attached.disk.enable: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MTQ4MDYz", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-539148063", "createdAt": "2020-11-26T09:43:15Z", "commit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTo0MzoxNVrOH6TZBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTo0MzoxNVrOH6TZBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg5NzE1Ng==", "bodyText": "Will it work for None? None is considered false?", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r530897156", "createdAt": "2020-11-26T09:43:15Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/init.sls", "diffHunk": "@@ -24,14 +26,29 @@ init-services-db-remote:\n \n init-db-with-utf8:\n   cmd.run:\n-    - name: rm -rf /var/lib/pgsql/data && runuser -l postgres sh -c 'initdb --locale=en_US.UTF-8 /var/lib/pgsql/data > /var/lib/pgsql/initdb.log' && rm /var/log/pgsql_listen_address_configured\n+    - name: rm -rf {{ postgres_data_directory }} && runuser -l postgres sh -c 'initdb --locale=en_US.UTF-8 {{ postgres_data_directory }} > /var/lib/pgsql/initdb.log' && rm /var/log/pgsql_listen_address_configured\n     - unless: grep -q UTF-8 /var/lib/pgsql/initdb.log\n \n+{%- if postgres_data_on_attached_disk %}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MTUwMzM2", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-539150336", "createdAt": "2020-11-26T09:45:48Z", "commit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTo0NTo0OFrOH6Tf0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTo0NTo0OFrOH6Tf0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg5ODg5OQ==", "bodyText": "Take a look at https://github.com/hortonworks/cloudbreak/blob/master/freeipa/src/main/resources/freeipa-salt/salt/freeipa/services.sls on how you can figure out service unit files.", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r530898899", "createdAt": "2020-11-26T09:45:48Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/init.sls", "diffHunk": "@@ -24,14 +26,29 @@ init-services-db-remote:\n \n init-db-with-utf8:\n   cmd.run:\n-    - name: rm -rf /var/lib/pgsql/data && runuser -l postgres sh -c 'initdb --locale=en_US.UTF-8 /var/lib/pgsql/data > /var/lib/pgsql/initdb.log' && rm /var/log/pgsql_listen_address_configured\n+    - name: rm -rf {{ postgres_data_directory }} && runuser -l postgres sh -c 'initdb --locale=en_US.UTF-8 {{ postgres_data_directory }} > /var/lib/pgsql/initdb.log' && rm /var/log/pgsql_listen_address_configured\n     - unless: grep -q UTF-8 /var/lib/pgsql/initdb.log\n \n+{%- if postgres_data_on_attached_disk %}\n+\n+change-db-location:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MTkyMDM1", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-539192035", "createdAt": "2020-11-26T10:35:54Z", "commit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDozNTo1NFrOH6Vftw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDozNTo1NFrOH6Vftw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkzMTYzOQ==", "bodyText": "On Ycloud we don't have any disks at all. In that case our generation will result in /hadoopfs/root1 instead of /hadoopfs/fs1 so assuming 1 might not going to work. What I'm trying to say is that the location should also come from pillar so when we introduce a reserved disk we don't have to change the salt files just the pillar location will be different.", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r530931639", "createdAt": "2020-11-26T10:35:54Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/init.sls", "diffHunk": "@@ -24,14 +26,29 @@ init-services-db-remote:\n \n init-db-with-utf8:\n   cmd.run:\n-    - name: rm -rf /var/lib/pgsql/data && runuser -l postgres sh -c 'initdb --locale=en_US.UTF-8 /var/lib/pgsql/data > /var/lib/pgsql/initdb.log' && rm /var/log/pgsql_listen_address_configured\n+    - name: rm -rf {{ postgres_data_directory }} && runuser -l postgres sh -c 'initdb --locale=en_US.UTF-8 {{ postgres_data_directory }} > /var/lib/pgsql/initdb.log' && rm /var/log/pgsql_listen_address_configured\n     - unless: grep -q UTF-8 /var/lib/pgsql/initdb.log\n \n+{%- if postgres_data_on_attached_disk %}\n+\n+change-db-location:\n+  file.replace:\n+    - name: /usr/lib/systemd/system/postgresql-10.service\n+    - pattern: \"Environment=PGDATA=.*\"\n+    - repl: Environment=PGDATA=/hadoopfs/fs1/pgsql/data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjA2ODU2", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-539206856", "createdAt": "2020-11-26T10:55:05Z", "commit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo1NTowNlrOH6WOUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo1NTowNlrOH6WOUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0MzU3MQ==", "bodyText": "I made some suggestion on slack for refactoring this method", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r530943571", "createdAt": "2020-11-26T10:55:06Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/container/postgres/PostgresConfigService.java", "diffHunk": "@@ -56,10 +64,25 @@ public void decorateServicePillarWithPostgresIfNeeded(Map<String, SaltPillarProp\n         Map<String, Object> postgresConfig = new HashMap<>();\n         if (dbServerConfigurer.isRemoteDatabaseNeeded(cluster)) {\n             postgresConfig.put(\"configure_remote_db\", \"true\");\n+        } else {\n+            collectEmbeddedDatabaseConfigs(stack, postgresConfig);\n         }\n         rdsConfigProviderFactory.getAllSupportedRdsConfigProviders().forEach(provider ->\n                 postgresConfig.putAll(provider.createServicePillarConfigMapIfNeeded(stack, cluster)));\n         return postgresConfig;\n     }\n \n+    private void collectEmbeddedDatabaseConfigs(Stack stack, Map<String, Object> postgresConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjA4MzE4", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-539208318", "createdAt": "2020-11-26T10:56:59Z", "commit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo1Njo1OVrOH6WS8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo1Njo1OVrOH6WS8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0NDc1Mg==", "bodyText": "default should be false and not None, shouldn't it?", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r530944752", "createdAt": "2020-11-26T10:56:59Z", "author": {"login": "lacikaaa"}, "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/init.sls", "diffHunk": "@@ -1,6 +1,8 @@\n {%- from 'metadata/settings.sls' import metadata with context %}\n \n {% set configure_remote_db = salt['pillar.get']('postgres:configure_remote_db', 'None') %}\n+{% set postgres_data_directory = salt['pillar.get']('postgres:postgres_data_directory') %}\n+{% set postgres_data_on_attached_disk = salt['pillar.get']('postgres:postgres_data_on_attached_disk', 'None') %}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjA5NDM0", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-539209434", "createdAt": "2020-11-26T10:58:26Z", "commit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo1ODoyNlrOH6WWSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo1ODoyNlrOH6WWSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0NTYxMA==", "bodyText": "to reflect on this: https://github.com/hortonworks/cloudbreak/pull/9518/files#r530931639\nI think this condition should be false on YCloud and only enable this for real cloud providers", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r530945610", "createdAt": "2020-11-26T10:58:26Z", "author": {"login": "lacikaaa"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/container/postgres/PostgresConfigService.java", "diffHunk": "@@ -56,10 +64,25 @@ public void decorateServicePillarWithPostgresIfNeeded(Map<String, SaltPillarProp\n         Map<String, Object> postgresConfig = new HashMap<>();\n         if (dbServerConfigurer.isRemoteDatabaseNeeded(cluster)) {\n             postgresConfig.put(\"configure_remote_db\", \"true\");\n+        } else {\n+            collectEmbeddedDatabaseConfigs(stack, postgresConfig);\n         }\n         rdsConfigProviderFactory.getAllSupportedRdsConfigProviders().forEach(provider ->\n                 postgresConfig.putAll(provider.createServicePillarConfigMapIfNeeded(stack, cluster)));\n         return postgresConfig;\n     }\n \n+    private void collectEmbeddedDatabaseConfigs(Stack stack, Map<String, Object> postgresConfig) {\n+        String databaseDirectory = \"/var/lib/pgsql/data\";\n+        boolean databaseDirectoryOnAttachedDisk = false;\n+        if (entitlementService.embeddedDatabaseOnAttachedDiskEnabled(INTERNAL_ACTOR_CRN, ThreadBasedUserCrnProvider.getAccountId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/1092d602d82f6d17cb50328b4d127cb2fa90cbf6", "committedDate": "2020-11-25T17:12:36Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk"}, "afterCommit": {"oid": "009295dfa92053ca1714ed988228dcb7b454447d", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/009295dfa92053ca1714ed988228dcb7b454447d", "committedDate": "2020-11-26T18:57:34Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "009295dfa92053ca1714ed988228dcb7b454447d", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/009295dfa92053ca1714ed988228dcb7b454447d", "committedDate": "2020-11-26T18:57:34Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk"}, "afterCommit": {"oid": "298a2818712503c8f21d017df7b21f5a3fa7df72", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/298a2818712503c8f21d017df7b21f5a3fa7df72", "committedDate": "2020-11-28T13:14:19Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "298a2818712503c8f21d017df7b21f5a3fa7df72", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/298a2818712503c8f21d017df7b21f5a3fa7df72", "committedDate": "2020-11-28T13:14:19Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk"}, "afterCommit": {"oid": "e42e77961b285fbed816a58b34a4cd1a12607324", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/e42e77961b285fbed816a58b34a4cd1a12607324", "committedDate": "2020-11-28T13:20:21Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n- introduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\n- salt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\n- salt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e42e77961b285fbed816a58b34a4cd1a12607324", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/e42e77961b285fbed816a58b34a4cd1a12607324", "committedDate": "2020-11-28T13:20:21Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n- introduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\n- salt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\n- salt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server."}, "afterCommit": {"oid": "67113bbe1b4c1281c2eaad8c1322259178808fc0", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/67113bbe1b4c1281c2eaad8c1322259178808fc0", "committedDate": "2020-11-28T15:44:51Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n- introduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\n- salt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\n- salt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDEzOTMx", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-540413931", "createdAt": "2020-11-28T19:54:39Z", "commit": {"oid": "67113bbe1b4c1281c2eaad8c1322259178808fc0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxOTo1NDozOVrOH7cy_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxOTo1NDozOVrOH7cy_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5OTgzNw==", "bodyText": "On YCloud it is going to be 0, right? And will be resolved as /hadoopfs/root1 ?", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r532099837", "createdAt": "2020-11-28T19:54:39Z", "author": {"login": "keyki"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/container/postgres/EmbeddedDatabaseConfigProvider.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.sequenceiq.cloudbreak.core.bootstrap.service.container.postgres;\n+\n+import static com.sequenceiq.cloudbreak.auth.ThreadBasedUserCrnProvider.INTERNAL_ACTOR_CRN;\n+\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.auth.ThreadBasedUserCrnProvider;\n+import com.sequenceiq.cloudbreak.auth.altus.EntitlementService;\n+import com.sequenceiq.cloudbreak.auth.altus.model.Entitlement;\n+import com.sequenceiq.cloudbreak.domain.Template;\n+import com.sequenceiq.cloudbreak.domain.stack.Stack;\n+import com.sequenceiq.cloudbreak.template.VolumeUtils;\n+\n+@Component\n+public class EmbeddedDatabaseConfigProvider {\n+    public static final String POSTGRES_DIRECTORY_KEY = \"postgres_directory\";\n+\n+    public static final String POSTGRES_LOG_DIRECTORY_KEY = \"postgres_log_directory\";\n+\n+    public static final String POSTGRES_DATA_ON_ATTACHED_DISK_KEY = \"postgres_data_on_attached_disk\";\n+\n+    public static final String POSTGRES_SUBDIRECTORY_ON_ATTACHED_DISK = \"pgsql\";\n+\n+    public static final String POSTGRES_LOG_SUBDIRECTORY_ON_ATTACHED_DISK = \"pgsql/log\";\n+\n+    public static final String POSTGRES_DEFAULT_DIRECTORY = \"/var/lib/pgsql\";\n+\n+    public static final String POSTGRES_DEFAULT_LOG_DIRECTORY = \"/var/log\";\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(EmbeddedDatabaseConfigProvider.class);\n+\n+    @Inject\n+    private EntitlementService entitlementService;\n+\n+    public Map<String, Object> collectEmbeddedDatabaseConfigs(Stack stack) {\n+        Map<String, Object> result;\n+        if (entitlementService.embeddedDatabaseOnAttachedDiskEnabled(INTERNAL_ACTOR_CRN, ThreadBasedUserCrnProvider.getAccountId())) {\n+            LOGGER.info(\"Attached disk will be used to store data for postgres sql server, as '{}' entitlement is enabled\",\n+                    Entitlement.CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK);\n+            result = createEmbeddedDbOnAttachedDiskConfig(stack);\n+        } else {\n+            LOGGER.info(\"Default settings for data storage will be used for postgres sql server, as '{}' entitlement is disabled\",\n+                    Entitlement.CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK);\n+            result = Map.of(\n+                    POSTGRES_DIRECTORY_KEY, POSTGRES_DEFAULT_DIRECTORY,\n+                    POSTGRES_LOG_DIRECTORY_KEY, POSTGRES_DEFAULT_LOG_DIRECTORY,\n+                    POSTGRES_DATA_ON_ATTACHED_DISK_KEY, false);\n+        }\n+        LOGGER.debug(\"Embedded Postgres sql server pillar parameters: {}\", result);\n+        return result;\n+    }\n+\n+    private Map<String, Object> createEmbeddedDbOnAttachedDiskConfig(Stack stack) {\n+        Template template = stack.getPrimaryGatewayInstance().getInstanceGroup().getTemplate();\n+        int volumeCount = template == null ? 1 : template.getVolumeTemplates().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67113bbe1b4c1281c2eaad8c1322259178808fc0"}, "originalPosition": 61}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67113bbe1b4c1281c2eaad8c1322259178808fc0", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/67113bbe1b4c1281c2eaad8c1322259178808fc0", "committedDate": "2020-11-28T15:44:51Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n- introduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\n- salt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\n- salt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server."}, "afterCommit": {"oid": "071b6e15fd756a6d528525728f434f89710ba430", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/071b6e15fd756a6d528525728f434f89710ba430", "committedDate": "2020-11-30T14:54:05Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n- introduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\n- salt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\n- salt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd257636f75de1f68a3c01162bdbe0a13960bd68", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/bd257636f75de1f68a3c01162bdbe0a13960bd68", "committedDate": "2020-11-30T19:11:16Z", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n- introduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\n- salt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\n- salt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75b5f46604df560731af9c236396f9ad6ee8947d", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/75b5f46604df560731af9c236396f9ad6ee8947d", "committedDate": "2020-11-30T18:57:14Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}, "afterCommit": {"oid": "67e643a275db40ad31df070f92e58c1671bad9dc", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/67e643a275db40ad31df070f92e58c1671bad9dc", "committedDate": "2020-11-30T19:11:17Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67e643a275db40ad31df070f92e58c1671bad9dc", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/67e643a275db40ad31df070f92e58c1671bad9dc", "committedDate": "2020-11-30T19:11:17Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}, "afterCommit": {"oid": "4c42dad0bb701110ba29ab6e7bd8ec09db4fc020", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/4c42dad0bb701110ba29ab6e7bd8ec09db4fc020", "committedDate": "2020-11-30T19:38:37Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzQ0NjAx", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-541744601", "createdAt": "2020-12-01T10:11:12Z", "commit": {"oid": "4c42dad0bb701110ba29ab6e7bd8ec09db4fc020"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDoxMToxMlrOH8kTGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDoxMToxMlrOH8kTGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI3MTMyMQ==", "bodyText": "This could be simplified by passing the volume count only and calculate the true/false in the constructor. This would reduce the code duplication as well.", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r533271321", "createdAt": "2020-12-01T10:11:12Z", "author": {"login": "keyki"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/cluster/EmbeddedDatabaseService.java", "diffHunk": "@@ -1,26 +1,48 @@\n package com.sequenceiq.cloudbreak.service.cluster;\n \n+import java.util.Optional;\n+\n import javax.inject.Inject;\n \n+import org.apache.commons.lang3.ObjectUtils;\n import org.springframework.stereotype.Component;\n \n+import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.database.DatabaseAvailabilityType;\n import com.sequenceiq.cloudbreak.auth.altus.EntitlementService;\n import com.sequenceiq.cloudbreak.domain.Template;\n import com.sequenceiq.cloudbreak.domain.stack.Stack;\n+import com.sequenceiq.cloudbreak.domain.stack.instance.InstanceGroup;\n+import com.sequenceiq.common.api.type.InstanceGroupType;\n \n @Component\n public class EmbeddedDatabaseService {\n     @Inject\n     private EntitlementService entitlementService;\n \n     public EmbeddedDatabaseInfo getEmbeddedDatabaseInfo(String actorCrn, String accountId, Stack stack) {\n-        if (entitlementService.embeddedDatabaseOnAttachedDiskEnabled(actorCrn, accountId)) {\n-            Template template = stack.getPrimaryGatewayInstance().getInstanceGroup().getTemplate();\n-            int volumeCount = template == null ? 0 : template.getVolumeTemplates().stream()\n-                    .mapToInt(volume -> volume.getVolumeCount()).sum();\n+        DatabaseAvailabilityType externalDatabase = ObjectUtils.defaultIfNull(stack.getExternalDatabaseCreationType(), DatabaseAvailabilityType.NONE);\n+        if (DatabaseAvailabilityType.NONE == externalDatabase && entitlementService.embeddedDatabaseOnAttachedDiskEnabled(actorCrn, accountId)) {\n+            int volumeCount = calculateVolumeCountOnGatewayGroup(stack);\n             return new EmbeddedDatabaseInfo(volumeCount > 0, volumeCount);\n         } else {\n             return new EmbeddedDatabaseInfo(false, 0);\n         }\n     }\n+\n+    public EmbeddedDatabaseInfo getEmbeddedDatabaseInfo(Stack stack) {\n+        if (stack.getCluster().getEmbeddedDatabaseOnAttachedDisk()) {\n+            int volumeCount = calculateVolumeCountOnGatewayGroup(stack);\n+            return new EmbeddedDatabaseInfo(volumeCount > 0, volumeCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c42dad0bb701110ba29ab6e7bd8ec09db4fc020"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzU1OTcx", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-541755971", "createdAt": "2020-12-01T10:25:16Z", "commit": {"oid": "4c42dad0bb701110ba29ab6e7bd8ec09db4fc020"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDoyNToxNlrOH8lUSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDoyNToxNlrOH8lUSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI4ODAwOA==", "bodyText": "This is the way to add a new column with a default value: https://dba.stackexchange.com/questions/60965/does-postgresql-optimize-adding-columns-with-non-null-defaults/216153#216153", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r533288008", "createdAt": "2020-12-01T10:25:16Z", "author": {"login": "keyki"}, "path": "core/src/main/resources/schema/app/20201130155647_CB-9580_new_field_on_cluster:_embedded_db_is_configured_on_attached_disk_or_not.sql", "diffHunk": "@@ -0,0 +1,9 @@\n+-- // CB-9580 new field on cluster: embedded db is configured on attached disk or not\n+-- Migration SQL that makes the change goes here.\n+\n+ALTER TABLE cluster ADD COLUMN IF NOT EXISTS embeddeddatabaseonattacheddisk boolean NOT NULL DEFAULT FALSE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c42dad0bb701110ba29ab6e7bd8ec09db4fc020"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c42dad0bb701110ba29ab6e7bd8ec09db4fc020", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/4c42dad0bb701110ba29ab6e7bd8ec09db4fc020", "committedDate": "2020-11-30T19:38:37Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}, "afterCommit": {"oid": "26d6616be3bf075009c5cc4aaca2729e47c7519a", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/26d6616be3bf075009c5cc4aaca2729e47c7519a", "committedDate": "2020-12-01T10:57:12Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26d6616be3bf075009c5cc4aaca2729e47c7519a", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/26d6616be3bf075009c5cc4aaca2729e47c7519a", "committedDate": "2020-12-01T10:57:12Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}, "afterCommit": {"oid": "ebcbb2123fdbc9ce5dff928299973b0489a7feea", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ebcbb2123fdbc9ce5dff928299973b0489a7feea", "committedDate": "2020-12-01T12:17:04Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxOTY3MjE5", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#pullrequestreview-541967219", "createdAt": "2020-12-01T14:42:18Z", "commit": {"oid": "ebcbb2123fdbc9ce5dff928299973b0489a7feea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bb50ab02edd2a981f91a1ff0e2cde9e3c5bdf7c", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3bb50ab02edd2a981f91a1ff0e2cde9e3c5bdf7c", "committedDate": "2020-12-01T16:48:36Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebcbb2123fdbc9ce5dff928299973b0489a7feea", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ebcbb2123fdbc9ce5dff928299973b0489a7feea", "committedDate": "2020-12-01T12:17:04Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}, "afterCommit": {"oid": "3bb50ab02edd2a981f91a1ff0e2cde9e3c5bdf7c", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/3bb50ab02edd2a981f91a1ff0e2cde9e3c5bdf7c", "committedDate": "2020-12-01T16:48:36Z", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2056, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}