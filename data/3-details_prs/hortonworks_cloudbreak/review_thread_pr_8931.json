{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NTI1Mjk0", "number": 8931, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTo1ODozMlrOEgUnUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTo1ODozMlrOEgUnUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzI3NjM1OnYy", "diffSide": "RIGHT", "path": "autoscale/src/main/java/com/sequenceiq/periscope/monitor/AbstractMonitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTo1ODozMlrOHNHj0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjoxMzo0N1rOHNT7Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUxNzM5Mw==", "bodyText": "The returned object is unused and avoids additional DB Hit in ClusterMonitor.", "url": "https://github.com/hortonworks/cloudbreak/pull/8931#discussion_r483517393", "createdAt": "2020-09-04T09:58:32Z", "author": {"login": "smaniraju"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/monitor/AbstractMonitor.java", "diffHunk": "@@ -64,7 +64,7 @@ protected EvaluatorExecutor getEvaluatorExecutorBean(M monitored) {\n \n     protected abstract List<M> getMonitored();\n \n-    protected abstract M save(M monitored);\n+    protected abstract void save(M monitored);\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a6c8af527772785b811b74876a5c98f0a75522"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyMDAzOQ==", "bodyText": "Will this change affect HA deployments, and failover?", "url": "https://github.com/hortonworks/cloudbreak/pull/8931#discussion_r483720039", "createdAt": "2020-09-04T16:13:47Z", "author": {"login": "sidseth"}, "path": "autoscale/src/main/java/com/sequenceiq/periscope/monitor/AbstractMonitor.java", "diffHunk": "@@ -64,7 +64,7 @@ protected EvaluatorExecutor getEvaluatorExecutorBean(M monitored) {\n \n     protected abstract List<M> getMonitored();\n \n-    protected abstract M save(M monitored);\n+    protected abstract void save(M monitored);\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUxNzM5Mw=="}, "originalCommit": {"oid": "72a6c8af527772785b811b74876a5c98f0a75522"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2344, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}