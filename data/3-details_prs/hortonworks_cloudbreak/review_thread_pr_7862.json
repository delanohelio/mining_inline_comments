{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MTEzNTA2", "number": 7862, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODowMDowM1rOD0nlzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODowMDowM1rOD0nlzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTAxMTk3OnYy", "diffSide": "RIGHT", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODowMDowM1rOGJo3VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODowNzo1OVrOGJpMTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc1OTg5Mw==", "bodyText": "An empty list is fine? I'm not sure what does the caller check. Does this mean it will allow or deny?", "url": "https://github.com/hortonworks/cloudbreak/pull/7862#discussion_r412759893", "createdAt": "2020-04-22T08:00:03Z", "author": {"login": "keyki"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java", "diffHunk": "@@ -370,10 +371,13 @@ public boolean checkRight(String actorCrn, String userCrn, String right, Optiona\n             return Arrays.asList(values);\n         }\n         try (ManagedChannelWrapper channelWrapper = makeWrapper()) {\n-            AuthorizationClient client = new AuthorizationClient(channelWrapper.getChannel(), actorCrn);\n-            List<Boolean> retVal = client.hasRights(requestId.orElse(UUID.randomUUID().toString()), memberCrn, rightChecks);\n-            LOGGER.info(\"member {} has rights {}\", memberCrn, retVal);\n-            return retVal;\n+            if (!rightChecks.isEmpty()) {\n+                AuthorizationClient client = new AuthorizationClient(channelWrapper.getChannel(), actorCrn);\n+                List<Boolean> retVal = client.hasRights(requestId.orElse(UUID.randomUUID().toString()), memberCrn, rightChecks);\n+                LOGGER.info(\"member {} has rights {}\", memberCrn, retVal);\n+                return retVal;\n+            }\n+            return Collections.emptyList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a50a4191c333af48f3d14ba44fda7fbe4777ee"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc2NTI2MQ==", "bodyText": "from authorization point of view, if the input is empty then there is nothing to check, so we can return without exception, callers can handle emtpy list as far as i have seen", "url": "https://github.com/hortonworks/cloudbreak/pull/7862#discussion_r412765261", "createdAt": "2020-04-22T08:07:59Z", "author": {"login": "horadla23"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java", "diffHunk": "@@ -370,10 +371,13 @@ public boolean checkRight(String actorCrn, String userCrn, String right, Optiona\n             return Arrays.asList(values);\n         }\n         try (ManagedChannelWrapper channelWrapper = makeWrapper()) {\n-            AuthorizationClient client = new AuthorizationClient(channelWrapper.getChannel(), actorCrn);\n-            List<Boolean> retVal = client.hasRights(requestId.orElse(UUID.randomUUID().toString()), memberCrn, rightChecks);\n-            LOGGER.info(\"member {} has rights {}\", memberCrn, retVal);\n-            return retVal;\n+            if (!rightChecks.isEmpty()) {\n+                AuthorizationClient client = new AuthorizationClient(channelWrapper.getChannel(), actorCrn);\n+                List<Boolean> retVal = client.hasRights(requestId.orElse(UUID.randomUUID().toString()), memberCrn, rightChecks);\n+                LOGGER.info(\"member {} has rights {}\", memberCrn, retVal);\n+                return retVal;\n+            }\n+            return Collections.emptyList();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc1OTg5Mw=="}, "originalCommit": {"oid": "88a50a4191c333af48f3d14ba44fda7fbe4777ee"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2475, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}