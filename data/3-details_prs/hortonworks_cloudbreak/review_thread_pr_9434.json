{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNzI3Mjc2", "number": 9434, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo0NDoxMFrOE57sgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo1MzozNVrOE579Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTgyMzM5OnYy", "diffSide": "RIGHT", "path": "flow/src/main/java/com/sequenceiq/flow/service/flowlog/FlowLogDBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo0NDoxMFrOH0sebg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo0NDoxMFrOH0sebg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAxNjY4Ng==", "bodyText": "isEmpty() please", "url": "https://github.com/hortonworks/cloudbreak/pull/9434#discussion_r525016686", "createdAt": "2020-11-17T09:44:10Z", "author": {"login": "lacikaaa"}, "path": "flow/src/main/java/com/sequenceiq/flow/service/flowlog/FlowLogDBService.java", "diffHunk": "@@ -267,7 +268,11 @@ public FlowLog getLastFlowLogByResourceCrnOrName(String resource) {\n \n     public List<FlowLog> getFlowLogsByFlowIdsCreatedDesc(Set<String> flowIds) {\n         LOGGER.info(\"Getting flow logs by these flow ids: {}\", Joiner.on(\",\").join(flowIds));\n-        return flowLogRepository.findAllByFlowIdsCreatedDesc(flowIds);\n+        if (flowIds.size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc7d01718418a0d6123dba1278918e76c28bcc94"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTg2MjU3OnYy", "diffSide": "RIGHT", "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/states/SaltStates.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo1Mjo0NFrOH0s1xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo1Mjo0NFrOH0s1xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyMjY2MQ==", "bodyText": "this seems to be ambiguous to me. I think it would be better to use pattern matching here to get the number, which should be a number if I remember it well.\nAlso there is no unit tests for this.\nthis branch the if could be moved to a method called sth like extractRunningHighstateJid or similar", "url": "https://github.com/hortonworks/cloudbreak/pull/9434#discussion_r525022661", "createdAt": "2020-11-17T09:52:44Z", "author": {"login": "lacikaaa"}, "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/states/SaltStates.java", "diffHunk": "@@ -99,7 +99,18 @@ public static ApplyFullResponse showState(SaltConnector sc, String state) {\n \n     public static Multimap<String, Map<String, String>> jidInfo(SaltConnector sc, String jid, Target<String> target, StateType stateType) {\n         if (StateType.HIGH.equals(stateType)) {\n-            return highStateJidInfo(sc, jid);\n+            try {\n+                return highStateJidInfo(sc, jid);\n+            } catch (SaltExecutionWentWrongException e) {\n+                String errorMessage = e.getMessage();\n+                if (errorMessage != null && errorMessage.contains(\"The function \\\"state.highstate\\\" is running as PID\")) {\n+                    String runningHighStateJid = errorMessage.replaceAll(\".*The function \\\"state\\\\.highstate\\\" is running as PID.*with jid \", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc7d01718418a0d6123dba1278918e76c28bcc94"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTg2NjE0OnYy", "diffSide": "RIGHT", "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/states/SaltStates.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo1MzozNVrOH0s4AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTo1MzozNVrOH0s4AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyMzIzMw==", "bodyText": "Unit test is missing for this logic.", "url": "https://github.com/hortonworks/cloudbreak/pull/9434#discussion_r525023233", "createdAt": "2020-11-17T09:53:35Z", "author": {"login": "lnardai"}, "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/states/SaltStates.java", "diffHunk": "@@ -99,7 +99,18 @@ public static ApplyFullResponse showState(SaltConnector sc, String state) {\n \n     public static Multimap<String, Map<String, String>> jidInfo(SaltConnector sc, String jid, Target<String> target, StateType stateType) {\n         if (StateType.HIGH.equals(stateType)) {\n-            return highStateJidInfo(sc, jid);\n+            try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc7d01718418a0d6123dba1278918e76c28bcc94"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3591, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}