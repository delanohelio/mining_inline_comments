{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMjUwMDE4", "number": 8465, "title": "CB-6681 Handle cases when [only CM/only CDH/ neither] changes properly", "bodyText": "@keyki or @pdarvasi pls review", "createdAt": "2020-06-30T19:33:49Z", "url": "https://github.com/hortonworks/cloudbreak/pull/8465", "merged": true, "mergeCommit": {"oid": "742d0a89668f51ba91eb7553398593d373df6f37"}, "closed": true, "closedAt": "2020-07-06T07:45:12Z", "author": {"login": "schfeca75"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwbuhhABqjM0OTk1MjUwMjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyMFVbgFqTQ0MjgzMjYzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e56b31bc3e4fb273c5323d344aca3df83b4c5aaa", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/e56b31bc3e4fb273c5323d344aca3df83b4c5aaa", "committedDate": "2020-06-30T19:28:03Z", "message": "CB-6681 Handle cases when [only CM/only CDH/ neither] changes properly"}, "afterCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9fe9de0466464fd58d38e26133cc5ca90126ce4d", "committedDate": "2020-06-30T20:32:14Z", "message": "CB-6681 Handle cases when [only CM/only CDH/ neither] changes properly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjM0Mzc2", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#pullrequestreview-440634376", "createdAt": "2020-07-01T08:00:03Z", "commit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowMDowNFrOGrbH-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToyOTowNVrOGreP1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4NjM2Mg==", "bodyText": "Pls. ensure this is NPE safe", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448186362", "createdAt": "2020-07-01T08:00:04Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNjU2OQ==", "bodyText": "Pls. ensure this is NPE safe", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448226569", "createdAt": "2020-07-01T09:09:48Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMDQ4Mw==", "bodyText": "Pls. ensure this is NPE safe", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448230483", "createdAt": "2020-07-01T09:16:34Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentIm.getCmBuildNumber().equals(targetIm.getCmBuildNumber());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMDY3OA==", "bodyText": "Pls. ensure this is NPE safe", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448230678", "createdAt": "2020-07-01T09:16:57Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentIm.getCmBuildNumber().equals(targetIm.getCmBuildNumber());\n+        boolean clusterRuntimeUpgradeNeeded = !currentRuntimeBuildNumber.equals(targetIm.getStackDetails().getStackBuildNumber());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMjMxNw==", "bodyText": "could you pls add some extra logging here for the different clauses?", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448232317", "createdAt": "2020-07-01T09:19:47Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentIm.getCmBuildNumber().equals(targetIm.getCmBuildNumber());\n+        boolean clusterRuntimeUpgradeNeeded = !currentRuntimeBuildNumber.equals(targetIm.getStackDetails().getStackBuildNumber());\n \n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_FINISHED, clusterManagerVersion);\n+        if (clusterManagerUpdateNeeded) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMzg0NA==", "bodyText": "clusterManagerUpdateNeeded and clusterRuntimeUpgradeNeeded are used twice, could you pls extract those to separate methods?", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448233844", "createdAt": "2020-07-01T09:22:27Z", "author": {"login": "pdarvasi"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzNzUyNA==", "bodyText": "Nice coverage, well done!", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448237524", "createdAt": "2020-07-01T09:29:05Z", "author": {"login": "pdarvasi"}, "path": "core/src/test/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeServiceTest.java", "diffHunk": "@@ -43,6 +78,124 @@ public void setUp() {\n         MockitoAnnotations.initMocks(this);\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "committedDate": "2020-07-01T14:54:51Z", "message": "CB-6681 Handle cases when [only CM/only CDH/ neither] changes properly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/9fe9de0466464fd58d38e26133cc5ca90126ce4d", "committedDate": "2020-06-30T20:32:14Z", "message": "CB-6681 Handle cases when [only CM/only CDH/ neither] changes properly"}, "afterCommit": {"oid": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "author": {"user": {"login": "schfeca75", "name": null}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "committedDate": "2020-07-01T14:54:51Z", "message": "CB-6681 Handle cases when [only CM/only CDH/ neither] changes properly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODMyNjM0", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#pullrequestreview-442832634", "createdAt": "2020-07-06T07:26:59Z", "commit": {"oid": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2667, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}