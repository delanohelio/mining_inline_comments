{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MTYzMTY5", "number": 7160, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNToyMzo1MlrODbdJ8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNToyMzo1MlrODbdJ8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTE1ODI3OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/operation/OperationService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNToyMzo1MlrOFi86zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTozNzo1MVrOFj3dBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5Mzk5Nw==", "bodyText": "So was this functionality was always there but you just didn't use it? What are the use cases for using getOperationForOperationID? should that be removed?", "url": "https://github.com/hortonworks/cloudbreak/pull/7160#discussion_r372193997", "createdAt": "2020-01-29T05:23:52Z", "author": {"login": "giladwolff"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/operation/OperationService.java", "diffHunk": "@@ -97,12 +87,13 @@ public Operation failOperation(String operationId, String failureMessage) {\n         return failOperation(operationId, failureMessage, Collections.emptyList(), Collections.emptyList());\n     }\n \n-    public SyncOperationStatus getSyncOperationStatus(String operationId) {\n-        return operationToSyncOperationStatus.convert(getOperationForOperationId(operationId));\n-    }\n-\n-    public OperationStatus getOperationStatus(String operationId, String accountId) {\n-        return operationToOperationStatusConverter.convert(getOperationForOperationId(operationId));\n+    public Operation getOperationForAccountIdAndOperationId(String accountId, String operationId) {\n+        Optional<Operation> operationOptional = operationRepository.findByOperationIdAndAccountId(operationId, accountId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec32cf2b3c05f16a82d83e14952d9fa7e907827a"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MzAzMQ==", "bodyText": "yeah. this code was there but not used.\nThe getter by operation id only is used internally for the \"complete\" and \"fail\" methods that transition the operation to either the COMPLETED or FAILED state. These are used internally to the FMS. I didn't want to change the behavior of the callers in this PR. We would have to update the flow CleanupEvent to either hold the account id or retrieve the account id from the Stack prior to completing or failing an operation.\nI can do that in a follow-on commit.", "url": "https://github.com/hortonworks/cloudbreak/pull/7160#discussion_r373153031", "createdAt": "2020-01-30T19:37:51Z", "author": {"login": "handavid"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/operation/OperationService.java", "diffHunk": "@@ -97,12 +87,13 @@ public Operation failOperation(String operationId, String failureMessage) {\n         return failOperation(operationId, failureMessage, Collections.emptyList(), Collections.emptyList());\n     }\n \n-    public SyncOperationStatus getSyncOperationStatus(String operationId) {\n-        return operationToSyncOperationStatus.convert(getOperationForOperationId(operationId));\n-    }\n-\n-    public OperationStatus getOperationStatus(String operationId, String accountId) {\n-        return operationToOperationStatusConverter.convert(getOperationForOperationId(operationId));\n+    public Operation getOperationForAccountIdAndOperationId(String accountId, String operationId) {\n+        Optional<Operation> operationOptional = operationRepository.findByOperationIdAndAccountId(operationId, accountId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5Mzk5Nw=="}, "originalCommit": {"oid": "ec32cf2b3c05f16a82d83e14952d9fa7e907827a"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2882, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}