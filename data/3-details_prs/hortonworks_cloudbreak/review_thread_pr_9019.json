{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NTM4MzAz", "number": 9019, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDowMjo0MlrOEkdj5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDowMjo0MlrOEkdj5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjY4NTE4OnYy", "diffSide": "RIGHT", "path": "datalake/src/main/java/com/sequenceiq/datalake/flow/delete/SdxDeleteActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDowMjo0MlrOHTa0FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDowMjo0MlrOHTa0FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEyNDMwOQ==", "bodyText": "I think it is not a good idea to check \"forced\" flag here. It would be a better approach if we handle it separately in stack deletion and rds deletion phase. With this implementation, it can hide many error which is not related to stack or rds delete. For example there is a nullpointer exception somewhere, then it will set sdx to delete status but it should not happen. We can move a logic like this into StackDeletionHandler and RdsDeletionHandler.", "url": "https://github.com/hortonworks/cloudbreak/pull/9019#discussion_r490124309", "createdAt": "2020-09-17T10:02:42Z", "author": {"login": "sodre90"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/flow/delete/SdxDeleteActions.java", "diffHunk": "@@ -169,14 +169,24 @@ protected void doExecute(SdxContext context, SdxDeletionFailedEvent payload, Map\n                 if (exception.getMessage() != null) {\n                     statusReason = exception.getMessage();\n                 }\n-                try {\n-                    SdxCluster sdxCluster = sdxStatusService.setStatusForDatalakeAndNotify(DatalakeStatusEnum.DELETE_FAILED, statusReason,\n-                            payload.getResourceId());\n-                    metricService.incrementMetricCounter(MetricType.SDX_DELETION_FAILED, sdxCluster);\n-                } catch (NotFoundException notFoundException) {\n-                    LOGGER.info(\"Can not set status to SDX_DELETION_FAILED because data lake was not found\");\n+                if (payload.isForced()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8422d923dc55cb7293e63c83949a5de9e9490eda"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2285, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}