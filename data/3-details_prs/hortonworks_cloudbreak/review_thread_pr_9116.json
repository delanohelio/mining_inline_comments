{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NjI5ODc4", "number": 9116, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozMTozNFrOEpJ3eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNToxOFrOEpJ8tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTg4NzI5OnYy", "diffSide": "RIGHT", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/hbase/HbaseCloudStorageServiceConfigProvider.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozMTozNFrOHaqSmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMTozMDozMlrOHawCjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxNzkxMw==", "bodyText": "I don't think the EntitlementService can be null.", "url": "https://github.com/hortonworks/cloudbreak/pull/9116#discussion_r497717913", "createdAt": "2020-09-30T18:31:34Z", "author": {"login": "keyki"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/hbase/HbaseCloudStorageServiceConfigProvider.java", "diffHunk": "@@ -48,9 +55,12 @@ public boolean isConfigurationNeeded(CmTemplateProcessor cmTemplateProcessor, Te\n                 .orElse(false);\n         String cdhVersion = getCdhVersion(source);\n         boolean is722OrNewer = isVersionNewerOrEqualThanLimited(cdhVersion, CLOUDERAMANAGER_VERSION_7_2_2);\n+        GeneralClusterConfigs generalClusterConfigs = source.getGeneralClusterConfigs();\n+        boolean sdxHbaseCloudStorageEnabled = entitlementService == null ? true :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e00ad53fb5b66c175c7233dd1f5377f3af1ff66"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc1NjQ2NQ==", "bodyText": "In the test CentralCmTemplateUpdaterTest, I debug into the code, and it is null. That is why I put the condition there to let the test pass. I suspect in real end-to-end test, EntitlementService will not be null.\nWhat is alternative for CentralCmTemplateUpdaterTest to pass without allowing EntitlementService to be null?", "url": "https://github.com/hortonworks/cloudbreak/pull/9116#discussion_r497756465", "createdAt": "2020-09-30T19:41:50Z", "author": {"login": "LinaAtAustin"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/hbase/HbaseCloudStorageServiceConfigProvider.java", "diffHunk": "@@ -48,9 +55,12 @@ public boolean isConfigurationNeeded(CmTemplateProcessor cmTemplateProcessor, Te\n                 .orElse(false);\n         String cdhVersion = getCdhVersion(source);\n         boolean is722OrNewer = isVersionNewerOrEqualThanLimited(cdhVersion, CLOUDERAMANAGER_VERSION_7_2_2);\n+        GeneralClusterConfigs generalClusterConfigs = source.getGeneralClusterConfigs();\n+        boolean sdxHbaseCloudStorageEnabled = entitlementService == null ? true :", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxNzkxMw=="}, "originalCommit": {"oid": "7e00ad53fb5b66c175c7233dd1f5377f3af1ff66"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc1NzUzNA==", "bodyText": "You need to include the service in the test as well\n@Mock\nprivate EntitlementService entitlementService;\n\nand it won't be null", "url": "https://github.com/hortonworks/cloudbreak/pull/9116#discussion_r497757534", "createdAt": "2020-09-30T19:43:54Z", "author": {"login": "keyki"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/hbase/HbaseCloudStorageServiceConfigProvider.java", "diffHunk": "@@ -48,9 +55,12 @@ public boolean isConfigurationNeeded(CmTemplateProcessor cmTemplateProcessor, Te\n                 .orElse(false);\n         String cdhVersion = getCdhVersion(source);\n         boolean is722OrNewer = isVersionNewerOrEqualThanLimited(cdhVersion, CLOUDERAMANAGER_VERSION_7_2_2);\n+        GeneralClusterConfigs generalClusterConfigs = source.getGeneralClusterConfigs();\n+        boolean sdxHbaseCloudStorageEnabled = entitlementService == null ? true :", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxNzkxMw=="}, "originalCommit": {"oid": "7e00ad53fb5b66c175c7233dd1f5377f3af1ff66"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxMjExMQ==", "bodyText": "The code is updated based on your suggestion.", "url": "https://github.com/hortonworks/cloudbreak/pull/9116#discussion_r497812111", "createdAt": "2020-09-30T21:30:32Z", "author": {"login": "LinaAtAustin"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/hbase/HbaseCloudStorageServiceConfigProvider.java", "diffHunk": "@@ -48,9 +55,12 @@ public boolean isConfigurationNeeded(CmTemplateProcessor cmTemplateProcessor, Te\n                 .orElse(false);\n         String cdhVersion = getCdhVersion(source);\n         boolean is722OrNewer = isVersionNewerOrEqualThanLimited(cdhVersion, CLOUDERAMANAGER_VERSION_7_2_2);\n+        GeneralClusterConfigs generalClusterConfigs = source.getGeneralClusterConfigs();\n+        boolean sdxHbaseCloudStorageEnabled = entitlementService == null ? true :", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxNzkxMw=="}, "originalCommit": {"oid": "7e00ad53fb5b66c175c7233dd1f5377f3af1ff66"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTkwMDcwOnYy", "diffSide": "RIGHT", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/general/GeneralClusterConfigsProvider.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNToxOFrOHaqa9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODo1MzoyNlrOHbAypw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDA1NQ==", "bodyText": "I don't think it will work with the environment crn. The stack has a creator crn instead, but I still recommend to use the com.sequenceiq.cloudbreak.auth.ThreadBasedUserCrnProvider.INTERNAL_ACTOR_CRN here and we don't need the usercrn then.", "url": "https://github.com/hortonworks/cloudbreak/pull/9116#discussion_r497720055", "createdAt": "2020-09-30T18:35:18Z", "author": {"login": "keyki"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/general/GeneralClusterConfigsProvider.java", "diffHunk": "@@ -53,6 +54,9 @@ public GeneralClusterConfigs generalClusterConfigs(Stack stack, Cluster cluster)\n         generalClusterConfigs.setKnoxUserFacingCertConfigured(userFacingCertHasBeenGenerated);\n         generalClusterConfigs.setExternalFQDN(cluster.getFqdn());\n         generalClusterConfigs.setEnableRangerRaz(cluster.isRangerRazEnabled());\n+        generalClusterConfigs.setUserCrn(stack.getEnvironmentCrn());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e00ad53fb5b66c175c7233dd1f5377f3af1ff66"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxNDEzNg==", "bodyText": "Now, I am using INTERNAL_ACTOR_CRN as crn and ThreadBasedUserCrnProvider.getAccountId() as account ID. This is how entitlement is checked at\nhttps://github.com/hortonworks/cloudbreak/blob/master/core/src/main/java/com/sequenceiq/cloudbreak/converter/v4/stacks/instancegroup/template/InstanceTemplateV4RequestToTemplateConverter.java#L66", "url": "https://github.com/hortonworks/cloudbreak/pull/9116#discussion_r497814136", "createdAt": "2020-09-30T21:34:52Z", "author": {"login": "LinaAtAustin"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/general/GeneralClusterConfigsProvider.java", "diffHunk": "@@ -53,6 +54,9 @@ public GeneralClusterConfigs generalClusterConfigs(Stack stack, Cluster cluster)\n         generalClusterConfigs.setKnoxUserFacingCertConfigured(userFacingCertHasBeenGenerated);\n         generalClusterConfigs.setExternalFQDN(cluster.getFqdn());\n         generalClusterConfigs.setEnableRangerRaz(cluster.isRangerRazEnabled());\n+        generalClusterConfigs.setUserCrn(stack.getEnvironmentCrn());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDA1NQ=="}, "originalCommit": {"oid": "7e00ad53fb5b66c175c7233dd1f5377f3af1ff66"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA4MTA2Mg==", "bodyText": "Hmm, nice trick! I was not aware of ThreadBasedUserCrnProvider.getAccountId(), but it is definitely smarter this way. \ud83d\ude03", "url": "https://github.com/hortonworks/cloudbreak/pull/9116#discussion_r498081062", "createdAt": "2020-10-01T08:44:19Z", "author": {"login": "lajosrodek"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/general/GeneralClusterConfigsProvider.java", "diffHunk": "@@ -53,6 +54,9 @@ public GeneralClusterConfigs generalClusterConfigs(Stack stack, Cluster cluster)\n         generalClusterConfigs.setKnoxUserFacingCertConfigured(userFacingCertHasBeenGenerated);\n         generalClusterConfigs.setExternalFQDN(cluster.getFqdn());\n         generalClusterConfigs.setEnableRangerRaz(cluster.isRangerRazEnabled());\n+        generalClusterConfigs.setUserCrn(stack.getEnvironmentCrn());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDA1NQ=="}, "originalCommit": {"oid": "7e00ad53fb5b66c175c7233dd1f5377f3af1ff66"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA4NjU2Nw==", "bodyText": "unless there is an issue and it contains the wrong account id :D", "url": "https://github.com/hortonworks/cloudbreak/pull/9116#discussion_r498086567", "createdAt": "2020-10-01T08:53:26Z", "author": {"login": "keyki"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/general/GeneralClusterConfigsProvider.java", "diffHunk": "@@ -53,6 +54,9 @@ public GeneralClusterConfigs generalClusterConfigs(Stack stack, Cluster cluster)\n         generalClusterConfigs.setKnoxUserFacingCertConfigured(userFacingCertHasBeenGenerated);\n         generalClusterConfigs.setExternalFQDN(cluster.getFqdn());\n         generalClusterConfigs.setEnableRangerRaz(cluster.isRangerRazEnabled());\n+        generalClusterConfigs.setUserCrn(stack.getEnvironmentCrn());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDA1NQ=="}, "originalCommit": {"oid": "7e00ad53fb5b66c175c7233dd1f5377f3af1ff66"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2226, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}