{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MjE2OTEy", "number": 8541, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjozODo1M1rOEOqlow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODowNDo0MVrOEPA9Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODEzMjgzOnYy", "diffSide": "RIGHT", "path": "orchestrator-salt/src/main/resources/salt-common/salt/filecollector/init.sls", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjozODo1M1rOGx8Jcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjo0MTo1MFrOGx8QDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxODg2Ng==", "bodyText": "We need new images with these packages otherwise the no-internet test will fail and it will be a blocker for promotion.", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455018866", "createdAt": "2020-07-15T12:38:53Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/filecollector/init.sls", "diffHunk": "@@ -0,0 +1,88 @@\n+{%- from 'telemetry/settings.sls' import telemetry with context %}\n+{%- from 'filecollector/settings.sls' import filecollector with context %}\n+{%- from 'fluent/settings.sls' import fluent with context %}\n+\n+install_fluent_logger:\n+  cmd.run:\n+    - name: pip install fluent-logger>=0.9.6 --ignore-installed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyMDU1Ng==", "bodyText": "these are not in highstate (you need to trigger this tasks by API) + already inside the images (see: hortonworks/cloudbreak-images@67bec33), will be removed later", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455020556", "createdAt": "2020-07-15T12:41:50Z", "author": {"login": "oleewere"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/filecollector/init.sls", "diffHunk": "@@ -0,0 +1,88 @@\n+{%- from 'telemetry/settings.sls' import telemetry with context %}\n+{%- from 'filecollector/settings.sls' import filecollector with context %}\n+{%- from 'fluent/settings.sls' import fluent with context %}\n+\n+install_fluent_logger:\n+  cmd.run:\n+    - name: pip install fluent-logger>=0.9.6 --ignore-installed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxODg2Ng=="}, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTQxODQ4OnYy", "diffSide": "RIGHT", "path": "orchestrator-salt/src/main/resources/salt-common/salt/filecollector/template/cloud_storage_upload.sh.j2", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoyMTo1MVrOGybrBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTo1NToyNVrOGyjxmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNTM2Nw==", "bodyText": "We will need to deal with encryption + the region must be a parameter otherwise it won't work with S3 VPC endpoint.\nBoth of them are handled in the freeipa_backup script.", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455535367", "createdAt": "2020-07-16T06:21:51Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/filecollector/template/cloud_storage_upload.sh.j2", "diffHunk": "@@ -0,0 +1,56 @@\n+#!/bin/sh\n+{%- from 'filecollector/settings.sls' import filecollector with context %}\n+{%- from 'telemetry/settings.sls' import telemetry with context %}\n+\n+function log() {\n+  echo \"$1\"\n+}\n+\n+function error_exit() {\n+  log \"ERROR $1\"\n+  exit 1\n+}\n+\n+function upload_file() {\n+   local platform=\"$2\"\n+   if [[ \"$platform\" == \"AWS\" ]]; then\n+      upload_to_s3 \"$1\"\n+   elif [[ \"$platform\" == \"AZURE\" ]]; then\n+      upload_to_azure_storage \"$1\"\n+   else\n+     log \"Upload file to cloud storage is not supported from platform '${platform}'\"\n+   fi\n+}\n+\n+function upload_to_s3() {\n+  local filename=$1\n+  s3_filename=\"$(basename -- $filename)\"\n+  s3_file_path=\"{{ filecollector.s3BaseUrl }}/${s3_filename}\"\n+  # --sse AES256\n+  /usr/bin/aws s3 cp --no-progress \"${filename}\" \"${s3_file_path}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxNTY0Mg==", "bodyText": "i have mentioned in the PR, encryption is not yet handled. will be done later, no UI or tests around that so that can be done later. btw, I will work on a binary lib that contains these commands with enhanced options, so that won't be final anyway (as we will have a lot of different scripts, it's better to put/use them together)", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455615642", "createdAt": "2020-07-16T08:29:45Z", "author": {"login": "oleewere"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/filecollector/template/cloud_storage_upload.sh.j2", "diffHunk": "@@ -0,0 +1,56 @@\n+#!/bin/sh\n+{%- from 'filecollector/settings.sls' import filecollector with context %}\n+{%- from 'telemetry/settings.sls' import telemetry with context %}\n+\n+function log() {\n+  echo \"$1\"\n+}\n+\n+function error_exit() {\n+  log \"ERROR $1\"\n+  exit 1\n+}\n+\n+function upload_file() {\n+   local platform=\"$2\"\n+   if [[ \"$platform\" == \"AWS\" ]]; then\n+      upload_to_s3 \"$1\"\n+   elif [[ \"$platform\" == \"AZURE\" ]]; then\n+      upload_to_azure_storage \"$1\"\n+   else\n+     log \"Upload file to cloud storage is not supported from platform '${platform}'\"\n+   fi\n+}\n+\n+function upload_to_s3() {\n+  local filename=$1\n+  s3_filename=\"$(basename -- $filename)\"\n+  s3_file_path=\"{{ filecollector.s3BaseUrl }}/${s3_filename}\"\n+  # --sse AES256\n+  /usr/bin/aws s3 cp --no-progress \"${filename}\" \"${s3_file_path}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNTM2Nw=="}, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY2ODEyMA==", "bodyText": "What about VPC endpoints? Do we have a jira for that as well? I'm fine if we address that later, but let's have a jira so we don't forget.", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455668120", "createdAt": "2020-07-16T09:55:25Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/filecollector/template/cloud_storage_upload.sh.j2", "diffHunk": "@@ -0,0 +1,56 @@\n+#!/bin/sh\n+{%- from 'filecollector/settings.sls' import filecollector with context %}\n+{%- from 'telemetry/settings.sls' import telemetry with context %}\n+\n+function log() {\n+  echo \"$1\"\n+}\n+\n+function error_exit() {\n+  log \"ERROR $1\"\n+  exit 1\n+}\n+\n+function upload_file() {\n+   local platform=\"$2\"\n+   if [[ \"$platform\" == \"AWS\" ]]; then\n+      upload_to_s3 \"$1\"\n+   elif [[ \"$platform\" == \"AZURE\" ]]; then\n+      upload_to_azure_storage \"$1\"\n+   else\n+     log \"Upload file to cloud storage is not supported from platform '${platform}'\"\n+   fi\n+}\n+\n+function upload_to_s3() {\n+  local filename=$1\n+  s3_filename=\"$(basename -- $filename)\"\n+  s3_file_path=\"{{ filecollector.s3BaseUrl }}/${s3_filename}\"\n+  # --sse AES256\n+  /usr/bin/aws s3 cp --no-progress \"${filename}\" \"${s3_file_path}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNTM2Nw=="}, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTQyMzczOnYy", "diffSide": "RIGHT", "path": "orchestrator-salt/src/main/resources/salt-common/salt/fluent/settings.sls", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoyMzo1NVrOGybuEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODoyMjo0NlrOGygTuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNjE0NQ==", "bodyText": "Can this port change?", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455536145", "createdAt": "2020-07-16T06:23:55Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/fluent/settings.sls", "diffHunk": "@@ -140,6 +140,8 @@\n   {% set proxy_full_url = None %}\n {% endif %}\n \n+{% set forward_port = 24224 %}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxMTMyMQ==", "bodyText": "that's typically fluentd port, only needs to be changed if some reason someone setup a fluentd with recipes and using that port", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455611321", "createdAt": "2020-07-16T08:22:46Z", "author": {"login": "oleewere"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/fluent/settings.sls", "diffHunk": "@@ -140,6 +140,8 @@\n   {% set proxy_full_url = None %}\n {% endif %}\n \n+{% set forward_port = 24224 %}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNjE0NQ=="}, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTQyODUzOnYy", "diffSide": "RIGHT", "path": "orchestrator-salt/src/main/resources/salt-common/salt/filecollector/init.sls", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoyNToyOVrOGybwqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODozNzoyNVrOGyg24w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNjgxMQ==", "bodyText": "There are lots of files being managed and have 740 and 750 mode. Do any of these files contain sensitive data or should we use 700 and 600 regardless? Why would a regular user need to read these files?", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455536811", "createdAt": "2020-07-16T06:25:29Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/filecollector/init.sls", "diffHunk": "@@ -0,0 +1,88 @@\n+{%- from 'telemetry/settings.sls' import telemetry with context %}\n+{%- from 'filecollector/settings.sls' import filecollector with context %}\n+{%- from 'fluent/settings.sls' import fluent with context %}\n+\n+install_fluent_logger:\n+  cmd.run:\n+    - name: pip install fluent-logger>=0.9.6 --ignore-installed\n+    - unless: pip list --no-index | grep -E 'fluent-logger'\n+\n+install_yaml:\n+  cmd.run:\n+    - name: pip install PyYAML --ignore-installed\n+    - unless: pip list --no-index | grep -E 'PyYAML'\n+\n+install_pid:\n+  cmd.run:\n+    - name: pip install pid --ignore-installed\n+    - unless: pip list --no-index | grep -E 'pid'\n+\n+/opt/filecollector:\n+  file.directory:\n+    - name: /opt/filecollector\n+    - user: \"root\"\n+    - group: \"root\"\n+    - mode: 740", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYyMDMyMw==", "bodyText": "yes it should be 640, will fix that in a fix commit, but I will wait until Lajos's review, in oder to fix his opened issues together with this", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455620323", "createdAt": "2020-07-16T08:37:25Z", "author": {"login": "oleewere"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/filecollector/init.sls", "diffHunk": "@@ -0,0 +1,88 @@\n+{%- from 'telemetry/settings.sls' import telemetry with context %}\n+{%- from 'filecollector/settings.sls' import filecollector with context %}\n+{%- from 'fluent/settings.sls' import fluent with context %}\n+\n+install_fluent_logger:\n+  cmd.run:\n+    - name: pip install fluent-logger>=0.9.6 --ignore-installed\n+    - unless: pip list --no-index | grep -E 'fluent-logger'\n+\n+install_yaml:\n+  cmd.run:\n+    - name: pip install PyYAML --ignore-installed\n+    - unless: pip list --no-index | grep -E 'PyYAML'\n+\n+install_pid:\n+  cmd.run:\n+    - name: pip install pid --ignore-installed\n+    - unless: pip list --no-index | grep -E 'pid'\n+\n+/opt/filecollector:\n+  file.directory:\n+    - name: /opt/filecollector\n+    - user: \"root\"\n+    - group: \"root\"\n+    - mode: 740", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNjgxMQ=="}, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTc5Nzc5OnYy", "diffSide": "RIGHT", "path": "orchestrator-salt/src/main/resources/salt-common/salt/fluent/settings.sls", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODowNDo0MVrOGyfUuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODoyNjoxNlrOGygcMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU5NTE5Mg==", "bodyText": "For this we will need a new image or it will break the no-internet test again. This will run on a regular highstate.", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455595192", "createdAt": "2020-07-16T08:04:41Z", "author": {"login": "keyki"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/fluent/settings.sls", "diffHunk": "@@ -84,7 +84,7 @@\n {% set cloudera_public_gem_repo = 'https://repository.cloudera.com/cloudera/api/gems/cloudera-gems/' %}\n {% set cloudera_azure_plugin_version = '1.0.1' %}\n {% set cloudera_azure_gen2_plugin_version = '0.3.1' %}\n-{% set cloudera_databus_plugin_version = '1.0.4' %}\n+{% set cloudera_databus_plugin_version = '1.0.5' %}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxMzQ4OA==", "bodyText": "yes we will need new images for 2.26", "url": "https://github.com/hortonworks/cloudbreak/pull/8541#discussion_r455613488", "createdAt": "2020-07-16T08:26:16Z", "author": {"login": "oleewere"}, "path": "orchestrator-salt/src/main/resources/salt-common/salt/fluent/settings.sls", "diffHunk": "@@ -84,7 +84,7 @@\n {% set cloudera_public_gem_repo = 'https://repository.cloudera.com/cloudera/api/gems/cloudera-gems/' %}\n {% set cloudera_azure_plugin_version = '1.0.1' %}\n {% set cloudera_azure_gen2_plugin_version = '0.3.1' %}\n-{% set cloudera_databus_plugin_version = '1.0.4' %}\n+{% set cloudera_databus_plugin_version = '1.0.5' %}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU5NTE5Mg=="}, "originalCommit": {"oid": "ea7c16df4859e8626d096b2bc40c778a8a11780c"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3137, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}