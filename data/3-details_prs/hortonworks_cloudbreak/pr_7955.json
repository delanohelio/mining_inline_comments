{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMDY2MTQ0", "number": 7955, "title": "CB-6862 Zookeeper is not configured with external volume", "bodyText": "Generated template:\n\"services\": [\n  {\n    \"refName\": \"zookeeper\",\n    \"serviceType\": \"ZOOKEEPER\",\n    \"roleConfigGroups\": [\n      {\n        \"refName\": \"zookeeper-SERVER-BASE\",\n        \"roleType\": \"SERVER\",\n        \"base\": true,\n        \"configs\": [\n          {\n            \"name\": \"dataDir\",\n            \"value\": \"/hadoopfs/fs1/zookeeper\"\n          },\n          {\n            \"name\": \"dataLogDir\",\n            \"value\": \"/hadoopfs/fs1/zookeeper\"\n          }\n        ]\n      }\n    ]\n  },..\n\nI have tested with bp of https://jira.cloudera.com/browse/CB-5660 and here is the template part:\n    {\n      \"refName\": \"zookeeper\",\n      \"serviceType\": \"ZOOKEEPER\",\n      \"serviceConfigs\": null,\n      \"roleConfigGroups\": [\n        {\n          \"refName\": \"zookeeper-SERVER-BASE\",\n          \"roleType\": \"SERVER\",\n          \"base\": true,\n          \"displayName\": null,\n          \"configs\": [\n            {\n              \"name\": \"dataDir\",\n              \"value\": \"/hadoopfs/fs1/zookeeper\",\n              \"ref\": null,\n              \"variable\": null,\n              \"autoConfig\": null\n            },\n            {\n              \"name\": \"dataLogDir\",\n              \"value\": \"/hadoopfs/fs1/zookeeper\",\n              \"ref\": null,\n              \"variable\": null,\n              \"autoConfig\": null\n            }\n          ]\n        }\n      ],\n      \"roles\": null,\n      \"displayName\": null,\n      \"tags\": null\n    }", "createdAt": "2020-05-01T09:43:08Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7955", "merged": true, "mergeCommit": {"oid": "ba9251c5895d3440c48119b5a988cfaeedc98958"}, "closed": true, "closedAt": "2020-05-04T07:27:40Z", "author": {"login": "topolyai5"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdSelZgFqTQwNDUxMjY2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcd5vVzgFqTQwNDczODE5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTEyNjY4", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#pullrequestreview-404512668", "createdAt": "2020-05-02T09:01:34Z", "commit": {"oid": "377e5a8741a1cd3cd24668c285c19509678817fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOTowMTozNVrOGPhsTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOTowMTozNVrOGPhsTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzgzNg==", "bodyText": "This is a complex method, I think we shall increase the test coverage", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#discussion_r418933836", "createdAt": "2020-05-02T09:01:35Z", "author": {"login": "akanto"}, "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -124,54 +122,48 @@ private void updateConfigsInTemplate(CmTemplateProcessor templateProcessor, Map<\n         for (Map.Entry<String, Map<String, List<ApiClusterTemplateConfig>>> entry : newConfigsByRCG.entrySet()) {\n             String configGroupName = entry.getKey();\n             ApiClusterTemplateRoleConfigGroup configGroup = roleConfigGroupByName.get(configGroupName);\n+            ApiClusterTemplateService templateService = serviceByRCG.get(configGroupName);\n             Map<String, List<ApiClusterTemplateConfig>> configsByHostGroup = entry.getValue();\n             int groupCount = configsByHostGroup.size();\n-            switch (groupCount) {\n-                case 1:\n-                    templateProcessor.mergeRoleConfigs(configGroup, configsByHostGroup.values().iterator().next());\n-                    break;\n-                case 0:\n-                    // noop\n-                    break;\n-                default:\n-                    LOGGER.debug(\"Cloning config group {} into {} host groups: {}\", configGroupName, groupCount, configsByHostGroup.keySet());\n-\n-                    // \"clone\" config group for each host group\n-                    Map<String, ApiClusterTemplateRoleConfigGroup> clonesByHostGroup = configsByHostGroup.keySet().stream()\n-                            .map(hostGroupName -> Pair.of(hostGroupName, copyForHostGroup(configGroup, hostGroupName)))\n-                            .collect(toMap(Pair::getKey, Pair::getValue));\n-\n-                    // add host group-specific configs to clones\n-                    configsByHostGroup.forEach((hostGroupName, newConfigs) ->\n-                            templateProcessor.mergeRoleConfigs(clonesByHostGroup.get(hostGroupName), newConfigs));\n-\n-                    // remove original from service\n-                    ApiClusterTemplateService service = serviceByRCG.get(configGroupName);\n-                    service.getRoleConfigGroups().removeIf(group -> Objects.equals(group.getRefName(), configGroupName));\n-\n-                    // remove original from instantiator\n-                    if (instantiatorRoleConfigGroups != null) {\n-                        instantiatorRoleConfigGroups.removeIf(groupInfo -> Objects.equals(groupInfo.getRcgRefName(), configGroupName));\n-                    }\n+            if (groupCount == 1 || isSharedComponent(templateService.getServiceType(), configGroup.getRoleType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377e5a8741a1cd3cd24668c285c19509678817fc"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTEyNzMw", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#pullrequestreview-404512730", "createdAt": "2020-05-02T09:02:33Z", "commit": {"oid": "377e5a8741a1cd3cd24668c285c19509678817fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOTowMjozM1rOGPhsrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOTowMjozM1rOGPhsrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzkzMw==", "bodyText": "I do not see such test which especially covers the ZK case", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#discussion_r418933933", "createdAt": "2020-05-02T09:02:33Z", "author": {"login": "akanto"}, "path": "template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessorTest.java", "diffHunk": "@@ -226,22 +226,25 @@ public void testGenerateConfigsWhenHdfsJournalNodeNotNull() {\n         setup(\"input/cb5660.bp\", Builder.builder().withHostgroupViews(Set.of(master1, master2, worker, compute, quorum)));\n \n         Map<String, Map<String, List<ApiClusterTemplateConfig>>> actual = underTest.generateConfigs(templateProcessor, templatePreparator);\n-        assertNull(actual.get(\"hdfs-JOURNALNODE-BASE\"));\n+        assertNotNull(actual.get(\"hdfs-JOURNALNODE-BASE\"));\n     }\n \n     @Test\n-    public void testGenerateConfigsWhenHdfsJournalNodeIsNotNull() {\n-        List<SharedComponent> sharedComponents = List.of();\n+    public void testProcessWhenSharedConfigThenAddVolumeConfig() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377e5a8741a1cd3cd24668c285c19509678817fc"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71bee22e66ab230de8446a611c6818829bb863d6", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/71bee22e66ab230de8446a611c6818829bb863d6", "committedDate": "2020-05-04T05:31:31Z", "message": "CB-6862 Zookeeper is not configured with external volume"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "377e5a8741a1cd3cd24668c285c19509678817fc", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/377e5a8741a1cd3cd24668c285c19509678817fc", "committedDate": "2020-05-01T09:40:00Z", "message": "CB-6862 Zookeeper is not configured with external volume"}, "afterCommit": {"oid": "71bee22e66ab230de8446a611c6818829bb863d6", "author": {"user": {"login": "topolyai5", "name": "Gergely Topolyai"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/71bee22e66ab230de8446a611c6818829bb863d6", "committedDate": "2020-05-04T05:31:31Z", "message": "CB-6862 Zookeeper is not configured with external volume"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NzIxNDI0", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#pullrequestreview-404721424", "createdAt": "2020-05-04T05:54:52Z", "commit": {"oid": "71bee22e66ab230de8446a611c6818829bb863d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NzM4MTk3", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#pullrequestreview-404738197", "createdAt": "2020-05-04T06:46:11Z", "commit": {"oid": "71bee22e66ab230de8446a611c6818829bb863d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2153, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}