{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMzU2MDc2", "number": 7609, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDo0OTozOFrODpDvKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMTowMDoyM1rODpD-Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Mzc5NDMyOnYy", "diffSide": "RIGHT", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/VirtualGroupService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDo0OTozOFrOF3_hZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDo1NzoyMVrOF3_y2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1Njc0Mw==", "bodyText": "I don't think that we should make the provisioning fail here. Simply logging the error would do.", "url": "https://github.com/hortonworks/cloudbreak/pull/7609#discussion_r394256743", "createdAt": "2020-03-18T10:49:38Z", "author": {"login": "keyki"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/VirtualGroupService.java", "diffHunk": "@@ -59,6 +59,19 @@ public void cleanupVirtualGroups(String accountId, String environmentCrn) {\n         }\n     }\n \n+    public void assignEnvironmentAdminRole(String userCrn, String environmentCrn) {\n+        try {\n+            grpcUmsClient.assignResourceRole(userCrn, environmentCrn, grpcUmsClient.getBuiltInEnvironmentAdminResourceRoleCrn(), MDCUtils.getRequestId());\n+            LOGGER.debug(\"EnvironmentAdmin role of {} environemnt is assigned to the {} user\", environmentCrn, userCrn);\n+        } catch (StatusRuntimeException ex) {\n+            if (Code.ALREADY_EXISTS.equals(ex.getStatus().getCode())) {\n+                LOGGER.debug(\"EnvironmentAdmin role of {} environemnt is already assigned to the {} user\", environmentCrn, userCrn);\n+            } else {\n+                throw ex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "275b17f3729c3b1dcf950a62ea439cd72502e453"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI2MTIwOQ==", "bodyText": "I am not sure what would be the best use case here. If there is a PowerUser who can assign that resource role to the owner for the new environment later, then no exception needed, otherwise we should make the provision into failed state.", "url": "https://github.com/hortonworks/cloudbreak/pull/7609#discussion_r394261209", "createdAt": "2020-03-18T10:57:21Z", "author": {"login": "horadla23"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/VirtualGroupService.java", "diffHunk": "@@ -59,6 +59,19 @@ public void cleanupVirtualGroups(String accountId, String environmentCrn) {\n         }\n     }\n \n+    public void assignEnvironmentAdminRole(String userCrn, String environmentCrn) {\n+        try {\n+            grpcUmsClient.assignResourceRole(userCrn, environmentCrn, grpcUmsClient.getBuiltInEnvironmentAdminResourceRoleCrn(), MDCUtils.getRequestId());\n+            LOGGER.debug(\"EnvironmentAdmin role of {} environemnt is assigned to the {} user\", environmentCrn, userCrn);\n+        } catch (StatusRuntimeException ex) {\n+            if (Code.ALREADY_EXISTS.equals(ex.getStatus().getCode())) {\n+                LOGGER.debug(\"EnvironmentAdmin role of {} environemnt is already assigned to the {} user\", environmentCrn, userCrn);\n+            } else {\n+                throw ex;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1Njc0Mw=="}, "originalCommit": {"oid": "275b17f3729c3b1dcf950a62ea439cd72502e453"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Mzc5Njg1OnYy", "diffSide": "RIGHT", "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDo1MDoxOVrOF3_i_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMTo0NToxM1rOF4BU_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1NzE0OQ==", "bodyText": "This is not related to virtual group at all. It should be moved to some other proper place.", "url": "https://github.com/hortonworks/cloudbreak/pull/7609#discussion_r394257149", "createdAt": "2020-03-18T10:50:19Z", "author": {"login": "keyki"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java", "diffHunk": "@@ -106,6 +106,8 @@ public EnvironmentDto create(EnvironmentCreationDto creationDto) {\n             // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n             environmentService.setAdminGroupName(environment, creationDto.getAdminGroupName());\n         }\n+        virtualGroupService.assignEnvironmentAdminRole(creationDto.getCreator(), environmentCrnForVirtualGroups);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "275b17f3729c3b1dcf950a62ea439cd72502e453"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI2MzE3MQ==", "bodyText": "I agree, assignment logic should be in the service of the resource, in this case in some EnvironmentService class I assume", "url": "https://github.com/hortonworks/cloudbreak/pull/7609#discussion_r394263171", "createdAt": "2020-03-18T11:00:50Z", "author": {"login": "horadla23"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java", "diffHunk": "@@ -106,6 +106,8 @@ public EnvironmentDto create(EnvironmentCreationDto creationDto) {\n             // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n             environmentService.setAdminGroupName(environment, creationDto.getAdminGroupName());\n         }\n+        virtualGroupService.assignEnvironmentAdminRole(creationDto.getCreator(), environmentCrnForVirtualGroups);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1NzE0OQ=="}, "originalCommit": {"oid": "275b17f3729c3b1dcf950a62ea439cd72502e453"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI4NjMzNQ==", "bodyText": "Moved to the environmentService", "url": "https://github.com/hortonworks/cloudbreak/pull/7609#discussion_r394286335", "createdAt": "2020-03-18T11:45:13Z", "author": {"login": "schfeca75"}, "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java", "diffHunk": "@@ -106,6 +106,8 @@ public EnvironmentDto create(EnvironmentCreationDto creationDto) {\n             // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n             environmentService.setAdminGroupName(environment, creationDto.getAdminGroupName());\n         }\n+        virtualGroupService.assignEnvironmentAdminRole(creationDto.getCreator(), environmentCrnForVirtualGroups);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1NzE0OQ=="}, "originalCommit": {"oid": "275b17f3729c3b1dcf950a62ea439cd72502e453"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzgzMjQyOnYy", "diffSide": "RIGHT", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/VirtualGroupService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMTowMDoyM1rOF3_5lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMTo1NDo0MlrOF4BoCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI2MjkzNQ==", "bodyText": "I didn't know about this code, I would move this exception handling into GrpcUmsClient assignResourceRole method", "url": "https://github.com/hortonworks/cloudbreak/pull/7609#discussion_r394262935", "createdAt": "2020-03-18T11:00:23Z", "author": {"login": "horadla23"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/VirtualGroupService.java", "diffHunk": "@@ -59,6 +59,19 @@ public void cleanupVirtualGroups(String accountId, String environmentCrn) {\n         }\n     }\n \n+    public void assignEnvironmentAdminRole(String userCrn, String environmentCrn) {\n+        try {\n+            grpcUmsClient.assignResourceRole(userCrn, environmentCrn, grpcUmsClient.getBuiltInEnvironmentAdminResourceRoleCrn(), MDCUtils.getRequestId());\n+            LOGGER.debug(\"EnvironmentAdmin role of {} environemnt is assigned to the {} user\", environmentCrn, userCrn);\n+        } catch (StatusRuntimeException ex) {\n+            if (Code.ALREADY_EXISTS.equals(ex.getStatus().getCode())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "275b17f3729c3b1dcf950a62ea439cd72502e453"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI4NzUxMA==", "bodyText": "I would  left this code here as it is specific during environment creation, maybe later for other resources it could be an error case.", "url": "https://github.com/hortonworks/cloudbreak/pull/7609#discussion_r394287510", "createdAt": "2020-03-18T11:47:37Z", "author": {"login": "schfeca75"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/VirtualGroupService.java", "diffHunk": "@@ -59,6 +59,19 @@ public void cleanupVirtualGroups(String accountId, String environmentCrn) {\n         }\n     }\n \n+    public void assignEnvironmentAdminRole(String userCrn, String environmentCrn) {\n+        try {\n+            grpcUmsClient.assignResourceRole(userCrn, environmentCrn, grpcUmsClient.getBuiltInEnvironmentAdminResourceRoleCrn(), MDCUtils.getRequestId());\n+            LOGGER.debug(\"EnvironmentAdmin role of {} environemnt is assigned to the {} user\", environmentCrn, userCrn);\n+        } catch (StatusRuntimeException ex) {\n+            if (Code.ALREADY_EXISTS.equals(ex.getStatus().getCode())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI2MjkzNQ=="}, "originalCommit": {"oid": "275b17f3729c3b1dcf950a62ea439cd72502e453"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5MTIxMA==", "bodyText": "ok, it is fine for me", "url": "https://github.com/hortonworks/cloudbreak/pull/7609#discussion_r394291210", "createdAt": "2020-03-18T11:54:42Z", "author": {"login": "horadla23"}, "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/VirtualGroupService.java", "diffHunk": "@@ -59,6 +59,19 @@ public void cleanupVirtualGroups(String accountId, String environmentCrn) {\n         }\n     }\n \n+    public void assignEnvironmentAdminRole(String userCrn, String environmentCrn) {\n+        try {\n+            grpcUmsClient.assignResourceRole(userCrn, environmentCrn, grpcUmsClient.getBuiltInEnvironmentAdminResourceRoleCrn(), MDCUtils.getRequestId());\n+            LOGGER.debug(\"EnvironmentAdmin role of {} environemnt is assigned to the {} user\", environmentCrn, userCrn);\n+        } catch (StatusRuntimeException ex) {\n+            if (Code.ALREADY_EXISTS.equals(ex.getStatus().getCode())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI2MjkzNQ=="}, "originalCommit": {"oid": "275b17f3729c3b1dcf950a62ea439cd72502e453"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2687, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}