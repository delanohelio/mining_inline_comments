{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNDMzODkx", "number": 9426, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDozNTozMlrOE6-jZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDo0OToxM1rOE6-6Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjc3NzMyOnYy", "diffSide": "RIGHT", "path": "authorization-common/src/main/java/com/sequenceiq/authorization/service/model/And.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDozNTozMlrOH2WsbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjowNjoyNFrOH2aWRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1Njk3Mg==", "bodyText": "Maybe you should consider to rename these classes. They make sense for devs who is in the development of this feature, but other devs won't understand it at first. These names And, Or, etc. are very general. The same applies for Authorization interface.", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526756972", "createdAt": "2020-11-19T10:35:32Z", "author": {"login": "horadla23"}, "path": "authorization-common/src/main/java/com/sequenceiq/authorization/service/model/And.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package com.sequenceiq.authorization.service.model;\n+\n+import static java.util.stream.Collectors.joining;\n+import static java.util.stream.Collectors.toList;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.BiConsumer;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+import com.sequenceiq.authorization.resource.AuthorizationResourceAction;\n+\n+public class And implements Authorization {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgxNjgzOA==", "bodyText": "Okay I will rename those to AuthorizationRule, AllMatch and AnyMatch, although I would not give them thirty letters long names just to make it clear (actually more frustrating to read) every time, in every cases that this is about authorization.", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526816838", "createdAt": "2020-11-19T12:06:24Z", "author": {"login": "foldik"}, "path": "authorization-common/src/main/java/com/sequenceiq/authorization/service/model/And.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package com.sequenceiq.authorization.service.model;\n+\n+import static java.util.stream.Collectors.joining;\n+import static java.util.stream.Collectors.toList;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.BiConsumer;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+import com.sequenceiq.authorization.resource.AuthorizationResourceAction;\n+\n+public class And implements Authorization {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1Njk3Mg=="}, "originalCommit": {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjc4NzU4OnYy", "diffSide": "RIGHT", "path": "core-model/src/main/java/com/sequenceiq/cloudbreak/domain/projection/StackCrnView.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDozODowM1rOH2Wyaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMToyMjo0NlrOH2YrlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODUwNw==", "bodyText": "I am not sure if this is needed, we have StackView and StackApiView also.", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526758507", "createdAt": "2020-11-19T10:38:03Z", "author": {"login": "horadla23"}, "path": "core-model/src/main/java/com/sequenceiq/cloudbreak/domain/projection/StackCrnView.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.sequenceiq.cloudbreak.domain.projection;\n+\n+public interface StackCrnView {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3MTcxMA==", "bodyText": "The intention was to return the least amount of data from the database. Those views contain way more than we need here.", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526771710", "createdAt": "2020-11-19T10:58:28Z", "author": {"login": "foldik"}, "path": "core-model/src/main/java/com/sequenceiq/cloudbreak/domain/projection/StackCrnView.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.sequenceiq.cloudbreak.domain.projection;\n+\n+public interface StackCrnView {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODUwNw=="}, "originalCommit": {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3NDU2Ng==", "bodyText": "It is clear, I am just not sure if there is significant difference between performances of querying these views. If it is, then it is reasonable.", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526774566", "createdAt": "2020-11-19T11:03:05Z", "author": {"login": "horadla23"}, "path": "core-model/src/main/java/com/sequenceiq/cloudbreak/domain/projection/StackCrnView.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.sequenceiq.cloudbreak.domain.projection;\n+\n+public interface StackCrnView {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODUwNw=="}, "originalCommit": {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc4NjA3Nw==", "bodyText": "I think this interface can be easily refactored, deleted if we would need more data for this feature.", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526786077", "createdAt": "2020-11-19T11:20:07Z", "author": {"login": "foldik"}, "path": "core-model/src/main/java/com/sequenceiq/cloudbreak/domain/projection/StackCrnView.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.sequenceiq.cloudbreak.domain.projection;\n+\n+public interface StackCrnView {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODUwNw=="}, "originalCommit": {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc4OTUyNA==", "bodyText": "alright", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526789524", "createdAt": "2020-11-19T11:22:46Z", "author": {"login": "horadla23"}, "path": "core-model/src/main/java/com/sequenceiq/cloudbreak/domain/projection/StackCrnView.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.sequenceiq.cloudbreak.domain.projection;\n+\n+public interface StackCrnView {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODUwNw=="}, "originalCommit": {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjc4OTA0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDozODoyM1rOH2WzRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDozODoyM1rOH2WzRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODcyNg==", "bodyText": "same here, maybe we should move this into StackViewRepository", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526758726", "createdAt": "2020-11-19T10:38:23Z", "author": {"login": "horadla23"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java", "diffHunk": "@@ -198,6 +199,12 @@\n     @Query(\"SELECT s FROM Stack s WHERE s.resourceCrn = :crn\")\n     Optional<Stack> findByResourceCrn(@Param(\"crn\") String crn);\n \n+    @Query(\"SELECT s.environmentCrn FROM Stack s WHERE s.resourceCrn = :crn\")\n+    Optional<String> findEnvCrnByResourceCrn(@Param(\"crn\") String crn);\n+\n+    @Query(\"SELECT s.resourceCrn as resourceCrn, s.environmentCrn as environmentCrn FROM Stack s WHERE s.resourceCrn IN (:crns)\")\n+    List<StackCrnView> findAllByResourceCrn(@Param(\"crns\") Set<String> crn);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjgzNTUwOnYy", "diffSide": "RIGHT", "path": "authorization-common/src/main/java/com/sequenceiq/authorization/service/ResourceBasedCrnProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDo0OToxM1rOH2XO7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTowMDoyNFrOH2Xq2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2NTgwNw==", "bodyText": "'with' not needed in the method name i guess", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526765807", "createdAt": "2020-11-19T10:49:13Z", "author": {"login": "horadla23"}, "path": "authorization-common/src/main/java/com/sequenceiq/authorization/service/ResourceBasedCrnProvider.java", "diffHunk": "@@ -25,5 +27,9 @@ default String getResourceCrnByResourceName(String resourceName) {\n         return Optional.empty();\n     }\n \n+    default Map<String, Optional<String>> getWithEnvironmentCrnsByResourceCrns(Collection<String> resourceCrns) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3Mjk1NQ==", "bodyText": "thanks", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526772955", "createdAt": "2020-11-19T11:00:24Z", "author": {"login": "foldik"}, "path": "authorization-common/src/main/java/com/sequenceiq/authorization/service/ResourceBasedCrnProvider.java", "diffHunk": "@@ -25,5 +27,9 @@ default String getResourceCrnByResourceName(String resourceName) {\n         return Optional.empty();\n     }\n \n+    default Map<String, Optional<String>> getWithEnvironmentCrnsByResourceCrns(Collection<String> resourceCrns) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2NTgwNw=="}, "originalCommit": {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3586, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}