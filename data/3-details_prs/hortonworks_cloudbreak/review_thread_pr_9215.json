{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyODQ2MTM4", "number": 9215, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDowMzozN1rOEtaRIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjo1NjozMlrOEv4xPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDUxNzQ0OnYy", "diffSide": "RIGHT", "path": "redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDowMzozN1rOHhLrAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDowMzozN1rOHhLrAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1NjI4OA==", "bodyText": "I suggest renaming this to sslCertificateType along with the getter/setter.", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504556288", "createdAt": "2020-10-14T10:03:37Z", "author": {"login": "lajosrodek"}, "path": "redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.sequenceiq.redbeams.domain.stack;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Convert;\n+import javax.persistence.ElementCollection;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.SequenceGenerator;\n+import javax.persistence.Table;\n+\n+import com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.responses.SslCertificateType;\n+import com.sequenceiq.redbeams.repository.converter.SslCertificateTypeConverter;\n+\n+@Entity\n+@Table\n+public class SslConfig {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO, generator = \"sslconfig_generator\")\n+    @SequenceGenerator(name = \"sslconfig_generator\", sequenceName = \"sslconfig_id_seq\", allocationSize = 1)\n+    private Long id;\n+\n+    @ElementCollection(fetch = FetchType.EAGER)\n+    @Column(name = \"sslcertificate_value\")\n+    private Set<String> sslCertificates = new HashSet<>();\n+\n+    @Convert(converter = SslCertificateTypeConverter.class)\n+    private SslCertificateType type = SslCertificateType.NONE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDUyNjcxOnYy", "diffSide": "RIGHT", "path": "redbeams/src/main/java/com/sequenceiq/redbeams/converter/stack/AllocateDatabaseServerV4RequestToDBStackConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDowNjoxMlrOHhLw7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDo1MTozOVrOHhNSZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1NzgwNQ==", "bodyText": "So we are storing the whole certificate text in the DB? Would not it be better to just store some internal cert ID for CLOUD_PROVIDER_OWNED certs to save storage space?", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504557805", "createdAt": "2020-10-14T10:06:12Z", "author": {"login": "lajosrodek"}, "path": "redbeams/src/main/java/com/sequenceiq/redbeams/converter/stack/AllocateDatabaseServerV4RequestToDBStackConverter.java", "diffHunk": "@@ -160,9 +170,19 @@ public DBStack convert(AllocateDatabaseServerV4Request source, String ownerCrnSt\n         dbStack.setDBStackStatus(new DBStackStatus(dbStack, DetailedDBStackStatus.PROVISION_REQUESTED, now.toEpochMilli()));\n         dbStack.setResourceCrn(crnService.createCrn(dbStack));\n         dbStack.setTags(getTags(dbStack, source.getClusterCrn(), environment));\n+        dbStack.setSslConfig(getSslConfig(source, dbStack));\n         return dbStack;\n     }\n \n+    public SslConfig getSslConfig(AllocateDatabaseServerV4Request source, DBStack dbStack) {\n+        SslConfig sslConfig = new SslConfig();\n+        if (sslEnabled && source.getSslConfiguration() != null && SslMode.isEnabled(source.getSslConfiguration().getMode())) {\n+            sslConfig.setSslCertificates(databaseServerSSlCertificateConfig.getCertsByPlatform(dbStack.getCloudPlatform()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU4Mjc1OA==", "bodyText": "we do the same in CB codebase as well", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504582758", "createdAt": "2020-10-14T10:51:39Z", "author": {"login": "doktoric"}, "path": "redbeams/src/main/java/com/sequenceiq/redbeams/converter/stack/AllocateDatabaseServerV4RequestToDBStackConverter.java", "diffHunk": "@@ -160,9 +170,19 @@ public DBStack convert(AllocateDatabaseServerV4Request source, String ownerCrnSt\n         dbStack.setDBStackStatus(new DBStackStatus(dbStack, DetailedDBStackStatus.PROVISION_REQUESTED, now.toEpochMilli()));\n         dbStack.setResourceCrn(crnService.createCrn(dbStack));\n         dbStack.setTags(getTags(dbStack, source.getClusterCrn(), environment));\n+        dbStack.setSslConfig(getSslConfig(source, dbStack));\n         return dbStack;\n     }\n \n+    public SslConfig getSslConfig(AllocateDatabaseServerV4Request source, DBStack dbStack) {\n+        SslConfig sslConfig = new SslConfig();\n+        if (sslEnabled && source.getSslConfiguration() != null && SslMode.isEnabled(source.getSslConfiguration().getMode())) {\n+            sslConfig.setSslCertificates(databaseServerSSlCertificateConfig.getCertsByPlatform(dbStack.getCloudPlatform()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1NzgwNQ=="}, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDU1NDgwOnYy", "diffSide": "RIGHT", "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxMzo1MVrOHhMCbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxMzo1MVrOHhMCbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MjI4Nw==", "bodyText": "I suggest renaming this to SslConfigurationV4Request to be consistent with other request classes.", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504562287", "createdAt": "2020-10-14T10:13:51Z", "author": {"login": "lajosrodek"}, "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.requests;\n+\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.sequenceiq.redbeams.doc.ModelDescriptions;\n+\n+import io.swagger.annotations.ApiModel;\n+\n+@ApiModel(description = ModelDescriptions.SSL_CONFIGURATION_REQUEST)\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class SslConfigurationRequest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDU1NzE1OnYy", "diffSide": "RIGHT", "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxNDozNVrOHhMEAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxNDozNVrOHhMEAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MjY5MA==", "bodyText": "Please rename this to sslMode, along with the getter/setter.", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504562690", "createdAt": "2020-10-14T10:14:35Z", "author": {"login": "lajosrodek"}, "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.requests;\n+\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.sequenceiq.redbeams.doc.ModelDescriptions;\n+\n+import io.swagger.annotations.ApiModel;\n+\n+@ApiModel(description = ModelDescriptions.SSL_CONFIGURATION_REQUEST)\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class SslConfigurationRequest {\n+\n+    private SslMode mode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDU3MDE4OnYy", "diffSide": "RIGHT", "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/responses/SslConfigResponse.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxODoxMVrOHhML2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxODoxMVrOHhML2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2NDY5Nw==", "bodyText": "I suggest renaming this to SslConfigV4Response to be consistent with other request/response classes.", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504564697", "createdAt": "2020-10-14T10:18:11Z", "author": {"login": "lajosrodek"}, "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/responses/SslConfigResponse.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.responses;\n+\n+import java.util.Set;\n+\n+import com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.requests.SslMode;\n+import com.sequenceiq.redbeams.doc.ModelDescriptions;\n+\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+\n+@ApiModel(description = ModelDescriptions.SSL_CONFIG_RESPONSE)\n+public class SslConfigResponse {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDU3MzgwOnYy", "diffSide": "RIGHT", "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxOTowOFrOHhMODw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxOTowOFrOHhMODw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2NTI2Mw==", "bodyText": "SSL.", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504565263", "createdAt": "2020-10-14T10:19:08Z", "author": {"login": "lajosrodek"}, "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java", "diffHunk": "@@ -3,6 +3,7 @@\n public final class ModelDescriptions {\n \n     public static final String ALLOCATE_DATABASE_SERVER_REQUEST = \"Request for allocating a new database server in a provider\";\n+    public static final String SSL_CONFIGURATION_REQUEST = \"Request for ssl configuration\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDU3NDQwOnYy", "diffSide": "RIGHT", "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxOToxOFrOHhMOZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxOToxOFrOHhMOZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2NTM0OQ==", "bodyText": "SSL.", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504565349", "createdAt": "2020-10-14T10:19:18Z", "author": {"login": "lajosrodek"}, "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java", "diffHunk": "@@ -13,6 +14,7 @@\n     public static final String DATABASE_SERVER_RESPONSE = \"Response containing information about a database server that was acted upon, e.g., retrieved, \"\n         + \"deleted, listed\";\n     public static final String DATABASE_SERVER_RESPONSES = \"A set of multiple database server responses\";\n+    public static final String SSL_CONFIG_RESPONSE = \"Ssl Config response\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDYwNzk4OnYy", "diffSide": "RIGHT", "path": "redbeams/src/main/resources/schema/app/20201013110628_CB-9289_ssl_certificate_added_to_db_stack.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoyOToxOVrOHhMjRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoyOToxOVrOHhMjRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3MDY5Mg==", "bodyText": "I think this column is part of the sslconfig table;  please move it there.\nPlease rename it to sslcertificatetype.\nWhy not restrict it to NOT NULL (and then DEFAULT would not be necessary)?", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504570692", "createdAt": "2020-10-14T10:29:19Z", "author": {"login": "lajosrodek"}, "path": "redbeams/src/main/resources/schema/app/20201013110628_CB-9289_ssl_certificate_added_to_db_stack.sql", "diffHunk": "@@ -0,0 +1,30 @@\n+-- // CB-9289 ssl certificate added to db stack\n+-- Migration SQL that makes the change goes here.\n+\n+CREATE TABLE sslconfig\n+(\n+    id BIGINT NOT NULL,\n+    PRIMARY KEY (id)\n+);\n+\n+CREATE SEQUENCE sslconfig_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\n+\n+CREATE UNIQUE INDEX IF NOT EXISTS sslconfig_id_idx ON sslconfig(id);\n+\n+CREATE TABLE sslconfig_sslcertificates (\n+    sslconfig_id bigint NOT NULL REFERENCES sslconfig (id),\n+    sslcertificate_value text,\n+    type VARCHAR(255) DEFAULT 'CLOUD_PROVIDER_OWNED'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDYxNzYwOnYy", "diffSide": "RIGHT", "path": "redbeams/src/main/java/com/sequenceiq/redbeams/repository/converter/SslCertificateTypeConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDozMjowMlrOHhMpWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDozMjowMlrOHhMpWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3MjI1MA==", "bodyText": "Not sure this is a safe default for unknown DB values. Would not NONE be a better choice?", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504572250", "createdAt": "2020-10-14T10:32:02Z", "author": {"login": "lajosrodek"}, "path": "redbeams/src/main/java/com/sequenceiq/redbeams/repository/converter/SslCertificateTypeConverter.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package com.sequenceiq.redbeams.repository.converter;\n+\n+import com.sequenceiq.cloudbreak.converter.DefaultEnumConverter;\n+import com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.responses.SslCertificateType;\n+\n+public class SslCertificateTypeConverter extends DefaultEnumConverter<SslCertificateType> {\n+\n+    @Override\n+    public SslCertificateType getDefault() {\n+        return SslCertificateType.CLOUD_PROVIDER_OWNED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDYyNzQ5OnYy", "diffSide": "RIGHT", "path": "redbeams/src/main/resources/schema/app/20201013110628_CB-9289_ssl_certificate_added_to_db_stack.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDozNDo0MFrOHhMvGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDozNDo0MFrOHhMvGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3MzcyMQ==", "bodyText": "Nit: ADD COLUMN IF NOT EXISTS.", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504573721", "createdAt": "2020-10-14T10:34:40Z", "author": {"login": "lajosrodek"}, "path": "redbeams/src/main/resources/schema/app/20201013110628_CB-9289_ssl_certificate_added_to_db_stack.sql", "diffHunk": "@@ -0,0 +1,30 @@\n+-- // CB-9289 ssl certificate added to db stack\n+-- Migration SQL that makes the change goes here.\n+\n+CREATE TABLE sslconfig\n+(\n+    id BIGINT NOT NULL,\n+    PRIMARY KEY (id)\n+);\n+\n+CREATE SEQUENCE sslconfig_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\n+\n+CREATE UNIQUE INDEX IF NOT EXISTS sslconfig_id_idx ON sslconfig(id);\n+\n+CREATE TABLE sslconfig_sslcertificates (\n+    sslconfig_id bigint NOT NULL REFERENCES sslconfig (id),\n+    sslcertificate_value text,\n+    type VARCHAR(255) DEFAULT 'CLOUD_PROVIDER_OWNED'\n+);\n+\n+ALTER TABLE dbstack ADD COLUMN sslconfig_id BIGINT REFERENCES sslconfig(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDYzNjA1OnYy", "diffSide": "RIGHT", "path": "redbeams/src/main/resources/schema/app/20201013110628_CB-9289_ssl_certificate_added_to_db_stack.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDozNzowN1rOHhM0Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDozNzowN1rOHhM0Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3NTA3NA==", "bodyText": "Add: ALTER TABLE dbstack DROP COLUMN IF EXISTS sslconfig_id;.", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504575074", "createdAt": "2020-10-14T10:37:07Z", "author": {"login": "lajosrodek"}, "path": "redbeams/src/main/resources/schema/app/20201013110628_CB-9289_ssl_certificate_added_to_db_stack.sql", "diffHunk": "@@ -0,0 +1,30 @@\n+-- // CB-9289 ssl certificate added to db stack\n+-- Migration SQL that makes the change goes here.\n+\n+CREATE TABLE sslconfig\n+(\n+    id BIGINT NOT NULL,\n+    PRIMARY KEY (id)\n+);\n+\n+CREATE SEQUENCE sslconfig_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\n+\n+CREATE UNIQUE INDEX IF NOT EXISTS sslconfig_id_idx ON sslconfig(id);\n+\n+CREATE TABLE sslconfig_sslcertificates (\n+    sslconfig_id bigint NOT NULL REFERENCES sslconfig (id),\n+    sslcertificate_value text,\n+    type VARCHAR(255) DEFAULT 'CLOUD_PROVIDER_OWNED'\n+);\n+\n+ALTER TABLE dbstack ADD COLUMN sslconfig_id BIGINT REFERENCES sslconfig(id);\n+\n+-- //@UNDO\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDY1NTQ2OnYy", "diffSide": "RIGHT", "path": "redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDo0Mjo1MlrOHhNANQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDo0Mjo1MlrOHhNANQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3ODEwMQ==", "bodyText": "In accordance with the DB schema change, if you agree, this should be extended with @Column(nullable = false).", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504578101", "createdAt": "2020-10-14T10:42:52Z", "author": {"login": "lajosrodek"}, "path": "redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.sequenceiq.redbeams.domain.stack;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Convert;\n+import javax.persistence.ElementCollection;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.SequenceGenerator;\n+import javax.persistence.Table;\n+\n+import com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.responses.SslCertificateType;\n+import com.sequenceiq.redbeams.repository.converter.SslCertificateTypeConverter;\n+\n+@Entity\n+@Table\n+public class SslConfig {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO, generator = \"sslconfig_generator\")\n+    @SequenceGenerator(name = \"sslconfig_generator\", sequenceName = \"sslconfig_id_seq\", allocationSize = 1)\n+    private Long id;\n+\n+    @ElementCollection(fetch = FetchType.EAGER)\n+    @Column(name = \"sslcertificate_value\")\n+    private Set<String> sslCertificates = new HashSet<>();\n+\n+    @Convert(converter = SslCertificateTypeConverter.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjQ4NjM4OnYy", "diffSide": "RIGHT", "path": "common-model/src/main/java/com/sequenceiq/common/model/EndpointType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjo1NjozMlrOHlH_FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjo1NjozMlrOHlH_FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5MDE5Nw==", "bodyText": "@gergopapi2  I have also catch null pointers here as @lajosrodek's tests triggered them here:\nhttps://github.com/hortonworks/cloudbreak/pull/9215/files#diff-e423493453802c8a45d0f78a802ad3b997f9905f5a473ea9641185d1e17e3ea6R93-R103", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r508690197", "createdAt": "2020-10-20T16:56:32Z", "author": {"login": "biharitomi"}, "path": "common-model/src/main/java/com/sequenceiq/common/model/EndpointType.java", "diffHunk": "@@ -22,7 +22,7 @@\n     public static EndpointType safeValueOf(String value) {\n         try {\n             return valueOf(value);\n-        } catch (IllegalArgumentException e) {\n+        } catch (IllegalArgumentException | NullPointerException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f7173b38675ff676574920ec9728afeae0ce3f9"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2146, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}