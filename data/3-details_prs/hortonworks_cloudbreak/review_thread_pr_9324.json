{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExODkwMDk1", "number": 9324, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoxOToxMFrOEzUdqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoxOToxMFrOEzUdqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjQ4MTA3OnYy", "diffSide": "LEFT", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SecurityAccessManifester.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoxOToxMFrOHqeDQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTo1MDoxMFrOHrVPJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI5NDU5NA==", "bodyText": "@doktoric What was the original intention of applying this only on the first node for a given instance type?", "url": "https://github.com/hortonworks/cloudbreak/pull/9324#discussion_r514294594", "createdAt": "2020-10-29T14:19:10Z", "author": {"login": "kmanamcheri"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SecurityAccessManifester.java", "diffHunk": "@@ -26,8 +26,7 @@\n     public void overrideSecurityAccess(InstanceGroupType instanceGroupType, List<InstanceGroupV4Request> instanceGroups, String securityGroupId, String cidrs) {\n         instanceGroups.stream()\n                 .filter(ig -> ig.getType() == instanceGroupType)\n-                .findFirst()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74b493db2dca333879a04ccd29e8f7a9408f6b73"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwNzc5NA==", "bodyText": "if was not the first node but the instancegroup where the type equals", "url": "https://github.com/hortonworks/cloudbreak/pull/9324#discussion_r514407794", "createdAt": "2020-10-29T16:43:44Z", "author": {"login": "doktoric"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SecurityAccessManifester.java", "diffHunk": "@@ -26,8 +26,7 @@\n     public void overrideSecurityAccess(InstanceGroupType instanceGroupType, List<InstanceGroupV4Request> instanceGroups, String securityGroupId, String cidrs) {\n         instanceGroups.stream()\n                 .filter(ig -> ig.getType() == instanceGroupType)\n-                .findFirst()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI5NDU5NA=="}, "originalCommit": {"oid": "74b493db2dca333879a04ccd29e8f7a9408f6b73"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE5ODc1Nw==", "bodyText": "Ah sorry my bad. What was the original intention of applying this only on the first instancegroup. This assumes that there could be only one set of nodes for a given instancegroup, no?", "url": "https://github.com/hortonworks/cloudbreak/pull/9324#discussion_r515198757", "createdAt": "2020-10-30T15:50:10Z", "author": {"login": "kmanamcheri"}, "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SecurityAccessManifester.java", "diffHunk": "@@ -26,8 +26,7 @@\n     public void overrideSecurityAccess(InstanceGroupType instanceGroupType, List<InstanceGroupV4Request> instanceGroups, String securityGroupId, String cidrs) {\n         instanceGroups.stream()\n                 .filter(ig -> ig.getType() == instanceGroupType)\n-                .findFirst()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI5NDU5NA=="}, "originalCommit": {"oid": "74b493db2dca333879a04ccd29e8f7a9408f6b73"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2070, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}