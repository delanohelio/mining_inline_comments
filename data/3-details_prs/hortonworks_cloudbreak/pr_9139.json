{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MDAyOTkz", "number": 9139, "title": "CB-9060 Check if certificates on cluster are about to expire", "bodyText": "We are setting up clusters with autotls, which means every host has it's own certificate.\nThese certificates expiry every year and we must detect it and notify the customer before expiration date.\nIn this commit StackStatusCheckerJob has been enriched with checking the result from Cloudera Manager for\nhost certificate expiration related health info. Although these are not stored per host, they are aggregated\nand if there is at least one which is expiring we are setting a new field in Cluster entity, certExpirationState\nfrom VALID to HOST_CERT_EXPIRING.\nThis field is an enum to allow further expansion if we later would like to indicate eg CMCA expiration.\nThe value of this field is available on DistroX API in ClusterV4Response and on SDX API in SdxClusterDetailResponse.", "createdAt": "2020-10-02T16:10:44Z", "url": "https://github.com/hortonworks/cloudbreak/pull/9139", "merged": true, "mergeCommit": {"oid": "d3a87fc3ef3eedf710ec9973d1f6b555e0698f99"}, "closed": true, "closedAt": "2020-10-05T14:40:56Z", "author": {"login": "lacikaaa"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPQXq1AFqTUwMTYzMDU2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPhUrQgBqjM4Mzk3MzM1MzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjMwNTYw", "url": "https://github.com/hortonworks/cloudbreak/pull/9139#pullrequestreview-501630560", "createdAt": "2020-10-04T14:50:25Z", "commit": {"oid": "7630cc77a896b64d91d38f03936c0369a83650d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNDo1MDoyNlrOHcIFmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNDo1MDoyNlrOHcIFmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDY4MA==", "bodyText": "Can you please add a few log lines here?", "url": "https://github.com/hortonworks/cloudbreak/pull/9139#discussion_r499254680", "createdAt": "2020-10-04T14:50:26Z", "author": {"login": "keyki"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/job/StackStatusCheckerJob.java", "diffHunk": "@@ -185,20 +189,24 @@ private void buildMdcContext(Stack stack) {\n     }\n \n     private void reportHealthAndSyncInstances(Stack stack, Collection<InstanceMetaData> runningInstances, Collection<InstanceMetaData> failedInstances,\n-            Set<String> newHealtyHostNames, InstanceSyncState defaultState) {\n+            Set<String> newHealtyHostNames, boolean hostCertExpiring) {\n         Set<String> newFailedNodeNames = failedInstances.stream()\n                 .filter(i -> !Set.of(SERVICES_UNHEALTHY, STOPPED).contains(i.getInstanceStatus()))\n                 .map(InstanceMetaData::getDiscoveryFQDN)\n                 .collect(toSet());\n-        ifFlowNotRunning(() -> clusterOperationService.reportHealthChange(stack.getResourceCrn(), newFailedNodeNames, newHealtyHostNames));\n-        ifFlowNotRunning(() -> {\n-            if (!failedInstances.isEmpty()) {\n-                clusterService.updateClusterStatusByStackId(stack.getId(), Status.AMBIGUOUS);\n-            } else if (statesFromAvailabeAllowed().contains(stack.getCluster().getStatus())) {\n-                clusterService.updateClusterStatusByStackId(stack.getId(), Status.AVAILABLE);\n-            }\n-        });\n-        syncInstances(stack, runningInstances, failedInstances, defaultState);\n+        ifFlowNotRunning(() -> updateStates(stack, failedInstances, newFailedNodeNames, newHealtyHostNames, hostCertExpiring));\n+        syncInstances(stack, runningInstances, failedInstances, InstanceSyncState.RUNNING);\n+    }\n+\n+    private void updateStates(Stack stack, Collection<InstanceMetaData> failedInstances, Set<String> newFailedNodeNames, Set<String> newHealtyHostNames,\n+            boolean hostCertExpiring) {\n+        clusterService.updateClusterCertExpirationState(stack.getCluster(), hostCertExpiring);\n+        clusterOperationService.reportHealthChange(stack.getResourceCrn(), newFailedNodeNames, newHealtyHostNames);\n+        if (!failedInstances.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7630cc77a896b64d91d38f03936c0369a83650d4"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjMwNjMw", "url": "https://github.com/hortonworks/cloudbreak/pull/9139#pullrequestreview-501630630", "createdAt": "2020-10-04T14:51:11Z", "commit": {"oid": "7630cc77a896b64d91d38f03936c0369a83650d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNDo1MToxMlrOHcIF3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNDo1MToxMlrOHcIF3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDc1MQ==", "bodyText": "Can you please add a few log lines to these methods?", "url": "https://github.com/hortonworks/cloudbreak/pull/9139#discussion_r499254751", "createdAt": "2020-10-04T14:51:12Z", "author": {"login": "keyki"}, "path": "cluster-cm/src/main/java/com/sequenceiq/cloudbreak/cm/ClouderaManagerClusterStatusService.java", "diffHunk": "@@ -215,16 +223,37 @@ public ClusterStatusResult getStatus(boolean blueprintPresent) {\n     }\n \n     @Override\n-    public Map<HostName, ClusterManagerState> getExtendedHostStatuses() {\n-        Map<HostName, ClusterManagerState> result = new HashMap<>();\n-        getHostHealth().forEach((hostname, health) ->\n-                result.put(hostname, new ClusterManagerState(healthSummaryToState(health.getSummary()),\n-                        getHostHealthMessage(health.getSummary(), health.getExplanation()))));\n-        return result;\n+    public ExtendedHostStatuses getExtendedHostStatuses() {\n+        Map<HostName, Collection<ApiHealthCheck>> hostHealth = getHostHealth();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7630cc77a896b64d91d38f03936c0369a83650d4"}, "originalPosition": 67}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7630cc77a896b64d91d38f03936c0369a83650d4", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/7630cc77a896b64d91d38f03936c0369a83650d4", "committedDate": "2020-10-02T16:08:40Z", "message": "CB-9060 Check if certificates on cluster are about to expire\n\nWe are setting up clusters with autotls, which means every host has it's own certificate.\nThese certificates expiry every year and we must detect it and notify the customer before expiration date.\nIn this commit `StackStatusCheckerJob` has been enriched with checking the result from Cloudera Manager for\nhost certificate expiration related health info. Although these are not stored per host, they are aggregated\nand if there is at least one which is expiring we are setting a new field in `Cluster` entity, `certExpirationState`\nfrom `VALID` to `HOST_CERT_EXPIRING`.\nThis field is an enum to allow further expansion if we later would like to indicate eg CMCA expiration.\nThe value of this field is available on DistroX API in `ClusterV4Response` and on SDX API in `SdxClusterDetailResponse`."}, "afterCommit": {"oid": "e3217e7d233a63b3b2b26f9d86db11d521290ab7", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/e3217e7d233a63b3b2b26f9d86db11d521290ab7", "committedDate": "2020-10-05T07:16:39Z", "message": "CB-9060 Check if certificates on cluster are about to expire\n\nWe are setting up clusters with autotls, which means every host has it's own certificate.\nThese certificates expiry every year and we must detect it and notify the customer before expiration date.\nIn this commit `StackStatusCheckerJob` has been enriched with checking the result from Cloudera Manager for\nhost certificate expiration related health info. Although these are not stored per host, they are aggregated\nand if there is at least one which is expiring we are setting a new field in `Cluster` entity, `certExpirationState`\nfrom `VALID` to `HOST_CERT_EXPIRING`.\nThis field is an enum to allow further expansion if we later would like to indicate eg CMCA expiration.\nThe value of this field is available on DistroX API in `ClusterV4Response` and on SDX API in `SdxClusterDetailResponse`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3217e7d233a63b3b2b26f9d86db11d521290ab7", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/e3217e7d233a63b3b2b26f9d86db11d521290ab7", "committedDate": "2020-10-05T07:16:39Z", "message": "CB-9060 Check if certificates on cluster are about to expire\n\nWe are setting up clusters with autotls, which means every host has it's own certificate.\nThese certificates expiry every year and we must detect it and notify the customer before expiration date.\nIn this commit `StackStatusCheckerJob` has been enriched with checking the result from Cloudera Manager for\nhost certificate expiration related health info. Although these are not stored per host, they are aggregated\nand if there is at least one which is expiring we are setting a new field in `Cluster` entity, `certExpirationState`\nfrom `VALID` to `HOST_CERT_EXPIRING`.\nThis field is an enum to allow further expansion if we later would like to indicate eg CMCA expiration.\nThe value of this field is available on DistroX API in `ClusterV4Response` and on SDX API in `SdxClusterDetailResponse`."}, "afterCommit": {"oid": "44745ff14b5e4e2ff62b90c19d27a60add016345", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/44745ff14b5e4e2ff62b90c19d27a60add016345", "committedDate": "2020-10-05T09:19:25Z", "message": "CB-9060 Check if certificates on cluster are about to expire\n\nWe are setting up clusters with autotls, which means every host has it's own certificate.\nThese certificates expiry every year and we must detect it and notify the customer before expiration date.\nIn this commit `StackStatusCheckerJob` has been enriched with checking the result from Cloudera Manager for\nhost certificate expiration related health info. Although these are not stored per host, they are aggregated\nand if there is at least one which is expiring we are setting a new field in `Cluster` entity, `certExpirationState`\nfrom `VALID` to `HOST_CERT_EXPIRING`.\nThis field is an enum to allow further expansion if we later would like to indicate eg CMCA expiration.\nThe value of this field is available on DistroX API in `ClusterV4Response` and on SDX API in `SdxClusterDetailResponse`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44745ff14b5e4e2ff62b90c19d27a60add016345", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/44745ff14b5e4e2ff62b90c19d27a60add016345", "committedDate": "2020-10-05T09:19:25Z", "message": "CB-9060 Check if certificates on cluster are about to expire\n\nWe are setting up clusters with autotls, which means every host has it's own certificate.\nThese certificates expiry every year and we must detect it and notify the customer before expiration date.\nIn this commit `StackStatusCheckerJob` has been enriched with checking the result from Cloudera Manager for\nhost certificate expiration related health info. Although these are not stored per host, they are aggregated\nand if there is at least one which is expiring we are setting a new field in `Cluster` entity, `certExpirationState`\nfrom `VALID` to `HOST_CERT_EXPIRING`.\nThis field is an enum to allow further expansion if we later would like to indicate eg CMCA expiration.\nThe value of this field is available on DistroX API in `ClusterV4Response` and on SDX API in `SdxClusterDetailResponse`."}, "afterCommit": {"oid": "ebbb6460cd658dd0aaf4917fdeb1698148fe9a4f", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ebbb6460cd658dd0aaf4917fdeb1698148fe9a4f", "committedDate": "2020-10-05T09:36:03Z", "message": "CB-9060 Check if certificates on cluster are about to expire\n\nWe are setting up clusters with autotls, which means every host has it's own certificate.\nThese certificates expiry every year and we must detect it and notify the customer before expiration date.\nIn this commit `StackStatusCheckerJob` has been enriched with checking the result from Cloudera Manager for\nhost certificate expiration related health info. Although these are not stored per host, they are aggregated\nand if there is at least one which is expiring we are setting a new field in `Cluster` entity, `certExpirationState`\nfrom `VALID` to `HOST_CERT_EXPIRING`.\nThis field is an enum to allow further expansion if we later would like to indicate eg CMCA expiration.\nThe value of this field is available on DistroX API in `ClusterV4Response` and on SDX API in `SdxClusterDetailResponse`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61d7d5ab2c8228640a8654ad5cdf831f34851f17", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/61d7d5ab2c8228640a8654ad5cdf831f34851f17", "committedDate": "2020-10-05T10:34:58Z", "message": "CB-9060 Check if certificates on cluster are about to expire\n\nWe are setting up clusters with autotls, which means every host has it's own certificate.\nThese certificates expiry every year and we must detect it and notify the customer before expiration date.\nIn this commit `StackStatusCheckerJob` has been enriched with checking the result from Cloudera Manager for\nhost certificate expiration related health info. Although these are not stored per host, they are aggregated\nand if there is at least one which is expiring we are setting a new field in `Cluster` entity, `certExpirationState`\nfrom `VALID` to `HOST_CERT_EXPIRING`.\nThis field is an enum to allow further expansion if we later would like to indicate eg CMCA expiration.\nThe value of this field is available on DistroX API in `ClusterV4Response` and on SDX API in `SdxClusterDetailResponse`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebbb6460cd658dd0aaf4917fdeb1698148fe9a4f", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/ebbb6460cd658dd0aaf4917fdeb1698148fe9a4f", "committedDate": "2020-10-05T09:36:03Z", "message": "CB-9060 Check if certificates on cluster are about to expire\n\nWe are setting up clusters with autotls, which means every host has it's own certificate.\nThese certificates expiry every year and we must detect it and notify the customer before expiration date.\nIn this commit `StackStatusCheckerJob` has been enriched with checking the result from Cloudera Manager for\nhost certificate expiration related health info. Although these are not stored per host, they are aggregated\nand if there is at least one which is expiring we are setting a new field in `Cluster` entity, `certExpirationState`\nfrom `VALID` to `HOST_CERT_EXPIRING`.\nThis field is an enum to allow further expansion if we later would like to indicate eg CMCA expiration.\nThe value of this field is available on DistroX API in `ClusterV4Response` and on SDX API in `SdxClusterDetailResponse`."}, "afterCommit": {"oid": "61d7d5ab2c8228640a8654ad5cdf831f34851f17", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/61d7d5ab2c8228640a8654ad5cdf831f34851f17", "committedDate": "2020-10-05T10:34:58Z", "message": "CB-9060 Check if certificates on cluster are about to expire\n\nWe are setting up clusters with autotls, which means every host has it's own certificate.\nThese certificates expiry every year and we must detect it and notify the customer before expiration date.\nIn this commit `StackStatusCheckerJob` has been enriched with checking the result from Cloudera Manager for\nhost certificate expiration related health info. Although these are not stored per host, they are aggregated\nand if there is at least one which is expiring we are setting a new field in `Cluster` entity, `certExpirationState`\nfrom `VALID` to `HOST_CERT_EXPIRING`.\nThis field is an enum to allow further expansion if we later would like to indicate eg CMCA expiration.\nThe value of this field is available on DistroX API in `ClusterV4Response` and on SDX API in `SdxClusterDetailResponse`."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2098, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}