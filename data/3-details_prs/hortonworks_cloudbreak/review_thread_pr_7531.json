{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDA2NjQ5", "number": 7531, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzoxMToxNVrODm9Xpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOToyNToxMlrODm_snQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTc3OTU4OnYy", "diffSide": "RIGHT", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UmsUsersStateProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzoxMToxNVrOF0rRSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzoxMToxNVrOF0rRSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3OTIxMA==", "bodyText": "This request can only be made with an internal actor CRN.", "url": "https://github.com/hortonworks/cloudbreak/pull/7531#discussion_r390779210", "createdAt": "2020-03-11T07:11:15Z", "author": {"login": "keyki"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UmsUsersStateProvider.java", "diffHunk": "@@ -60,11 +60,16 @@\n             Map<String, FmsGroup> crnToFmsGroup = grpcUmsClient.listGroups(actorCrn, accountId, List.of(), requestIdOptional).stream()\n                     .collect(Collectors.toMap(Group::getCrn, this::umsGroupToGroup));\n \n+            Set<FmsGroup> wags = grpcUmsClient.listWorkloadAdministrationGroups(actorCrn, accountId, requestIdOptional).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2d3a3161acf2cc885c8b93ade43d88f8dcc6b22"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjE2MDkzOnYy", "diffSide": "RIGHT", "path": "mock-caas/src/main/java/com/sequenceiq/caas/grpc/service/MockUserManagementService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOToyNToxMlrOF0u6MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOToyNToxMlrOF0u6MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgzODgzMg==", "bodyText": "We can add mockCrnService.ensureInternalActor(); here", "url": "https://github.com/hortonworks/cloudbreak/pull/7531#discussion_r390838832", "createdAt": "2020-03-11T09:25:12Z", "author": {"login": "keyki"}, "path": "mock-caas/src/main/java/com/sequenceiq/caas/grpc/service/MockUserManagementService.java", "diffHunk": "@@ -629,6 +631,21 @@ public void deleteWorkloadAdministrationGroupName(UserManagementProto.DeleteWork\n         mockGroupManagementService.deleteWorkloadAdministrationGroupName(request, responseObserver);\n     }\n \n+    @Override\n+    public void listWorkloadAdministrationGroups(UserManagementProto.ListWorkloadAdministrationGroupsRequest request,\n+            StreamObserver<UserManagementProto.ListWorkloadAdministrationGroupsResponse> responseObserver) {\n+        responseObserver.onNext(UserManagementProto.ListWorkloadAdministrationGroupsResponse.newBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2d3a3161acf2cc885c8b93ade43d88f8dcc6b22"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2754, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}