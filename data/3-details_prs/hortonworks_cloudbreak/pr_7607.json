{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMjg5NzQ2", "number": 7607, "title": "CB-6127 Improve FreeIPA service termination trigger", "bodyText": "", "createdAt": "2020-03-18T08:25:12Z", "url": "https://github.com/hortonworks/cloudbreak/pull/7607", "merged": true, "mergeCommit": {"oid": "3a225ea48ca133dfe401704c01578d1f31357b99"}, "closed": true, "closedAt": "2020-03-18T15:31:54Z", "author": {"login": "lacikaaa"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOzBlvgFqTM3NjY0ODgyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO36LmgBqjMxNDE2MjAyMDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NjQ4ODI2", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#pullrequestreview-376648826", "createdAt": "2020-03-18T08:27:55Z", "commit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODoyNzo1NVrOF36h4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODoyNzo1NVrOF36h4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE3NDk0NQ==", "bodyText": "typo in flowCancelServicel -> flowCancelService", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394174945", "createdAt": "2020-03-18T08:27:55Z", "author": {"login": "topolyai5"}, "path": "datalake/src/test/java/com/sequenceiq/datalake/service/sdx/SdxServiceTest.java", "diffHunk": "@@ -124,6 +125,9 @@\n     @Mock\n     private CDPConfigService cdpConfigService;\n \n+    @Mock\n+    private FlowCancelService flowCancelServicel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NjUyNDI4", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#pullrequestreview-376652428", "createdAt": "2020-03-18T08:33:42Z", "commit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODozMzo0MlrOF36tig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODozMzo0MlrOF36tig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE3NzkzMA==", "bodyText": "You should not remove the LOGGER, you should improve the logging in this class", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394177930", "createdAt": "2020-03-18T08:33:42Z", "author": {"login": "topolyai5"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/flow/FreeIpaFlowManager.java", "diffHunk": "@@ -7,29 +7,22 @@\n import javax.inject.Inject;\n \n import org.apache.commons.lang3.StringUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Component;\n \n import com.sequenceiq.cloudbreak.auth.ThreadBasedUserCrnProvider;\n import com.sequenceiq.cloudbreak.common.event.Acceptable;\n import com.sequenceiq.cloudbreak.common.event.Selectable;\n-import com.sequenceiq.flow.core.Flow2Handler;\n import com.sequenceiq.flow.core.FlowConstants;\n import com.sequenceiq.flow.core.model.FlowAcceptResult;\n import com.sequenceiq.flow.core.model.ResultType;\n import com.sequenceiq.flow.reactor.ErrorHandlerAwareReactorEventFactory;\n-import com.sequenceiq.freeipa.flow.stack.StackEvent;\n-import com.sequenceiq.freeipa.service.stack.StackService;\n \n import reactor.bus.Event;\n import reactor.bus.EventBus;\n \n @Component\n public class FreeIpaFlowManager {\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(FreeIpaFlowManager.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NjU1MTA4", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#pullrequestreview-376655108", "createdAt": "2020-03-18T08:38:06Z", "commit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODozODowN1rOF3616Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODozODowN1rOF3616Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4MDA3Mw==", "bodyText": "it is not informative. In the logs, we cannot find easily what flow does not have INIT_STATE", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394180073", "createdAt": "2020-03-18T08:38:07Z", "author": {"login": "topolyai5"}, "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/service/TerminationTriggerService.java", "diffHunk": "@@ -58,7 +59,7 @@ private void handleIfStackIsNotTerminated(Stack stack, boolean forced) {\n             LOGGER.debug(\"Found termination flowlog with id [{}] and payload [{}]\", flowLog.getFlowId(), flowLog.getPayload());\n             handleIfFlowLogExistsForTermination(stack, forced, flowLog);\n         } else {\n-            LOGGER.warn(\"Couldn't find FlowLog with 'PRE_TERMINATION_STATE'. Triggering termination\");\n+            LOGGER.warn(\"Couldn't find FlowLog with 'INIT_STATE'. Triggering termination\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NjU1NDM3", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#pullrequestreview-376655437", "createdAt": "2020-03-18T08:38:40Z", "commit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODozODo0MFrOF362_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODozODo0MFrOF362_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4MDM0OA==", "bodyText": "it is not informative. In the logs, we cannot find easily what flow does not have INIT_STATE", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394180348", "createdAt": "2020-03-18T08:38:40Z", "author": {"login": "topolyai5"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaDeletionService.java", "diffHunk": "@@ -42,9 +61,39 @@ public void delete(String environmentCrn, String accountId) {\n     }\n \n     private void unscheduleAndTriggerTerminate(Stack stack) {\n+        flowCancelService.cancelTooOldTerminationFlowForResource(stack.getId(), stack.getName());\n         freeipaJobService.unschedule(stack);\n+        if (!stack.isDeleteCompleted()) {\n+            handleIfStackIsNotTerminated(stack);\n+        } else {\n+            LOGGER.debug(\"Stack is already deleted.\");\n+        }\n+    }\n+\n+    private void handleIfStackIsNotTerminated(Stack stack) {\n+        LOGGER.info(\"stack {} in environment {} is not deleted.\", stack.getName(), stack.getEnvironmentCrn());\n+        Optional<FlowLog> optionalFlowLog = findLatestTerminationFlowLogWithInitState(stack);\n+        if (optionalFlowLog.isPresent()) {\n+            FlowLog flowLog = optionalFlowLog.get();\n+            LOGGER.debug(\"Found termination flowlog with id [{}] and payload [{}]\", flowLog.getFlowId(), flowLog.getPayload());\n+        } else {\n+            fireTerminationEvent(stack);\n+        }\n+    }\n+\n+    private void fireTerminationEvent(Stack stack) {\n+        LOGGER.warn(\"Couldn't find FlowLog with 'INIT_STATE'. Triggering termination\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NzE0ODEw", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#pullrequestreview-376714810", "createdAt": "2020-03-18T10:00:15Z", "commit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDowMDoxNVrOF39waA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDowMDoxNVrOF39waA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIyNzgxNg==", "bodyText": "Minor, capital S", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394227816", "createdAt": "2020-03-18T10:00:15Z", "author": {"login": "keyki"}, "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaDeletionService.java", "diffHunk": "@@ -42,9 +61,39 @@ public void delete(String environmentCrn, String accountId) {\n     }\n \n     private void unscheduleAndTriggerTerminate(Stack stack) {\n+        flowCancelService.cancelTooOldTerminationFlowForResource(stack.getId(), stack.getName());\n         freeipaJobService.unschedule(stack);\n+        if (!stack.isDeleteCompleted()) {\n+            handleIfStackIsNotTerminated(stack);\n+        } else {\n+            LOGGER.debug(\"Stack is already deleted.\");\n+        }\n+    }\n+\n+    private void handleIfStackIsNotTerminated(Stack stack) {\n+        LOGGER.info(\"stack {} in environment {} is not deleted.\", stack.getName(), stack.getEnvironmentCrn());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NzE1OTA3", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#pullrequestreview-376715907", "createdAt": "2020-03-18T10:01:41Z", "commit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f1328d8521667a29d91c623285aa3a89131dfa4", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/5f1328d8521667a29d91c623285aa3a89131dfa4", "committedDate": "2020-03-18T14:09:00Z", "message": "CB-6127 Improve FreeIPA service termination trigger"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "afb8db51231bb0564405256e47f25ff3b9cd124f", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/afb8db51231bb0564405256e47f25ff3b9cd124f", "committedDate": "2020-03-18T08:23:04Z", "message": "CB-6127 Improve FreeIPA service termination trigger"}, "afterCommit": {"oid": "5f1328d8521667a29d91c623285aa3a89131dfa4", "author": {"user": {"login": "lacikaaa", "name": "Mihaly Laszlo Molnar"}}, "url": "https://github.com/hortonworks/cloudbreak/commit/5f1328d8521667a29d91c623285aa3a89131dfa4", "committedDate": "2020-03-18T14:09:00Z", "message": "CB-6127 Improve FreeIPA service termination trigger"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2477, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}