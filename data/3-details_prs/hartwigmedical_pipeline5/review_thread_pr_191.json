{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MTM1Njkw", "number": 191, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzoyMDo1NlrOEfwO4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzozNTowMVrOEfwerw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzMxNTUyOnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/com/hartwig/pipeline/Arguments.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzoyMDo1NlrOHMPK-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzoyMDo1NlrOHMPK-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU5MzUyOQ==", "bodyText": "Feels to me like run is a bit overloaded already. Could we use another verb? Like begin or start or restart?", "url": "https://github.com/hartwigmedical/pipeline5/pull/191#discussion_r482593529", "createdAt": "2020-09-02T23:20:56Z", "author": {"login": "nedleitch"}, "path": "cluster/src/main/java/com/hartwig/pipeline/Arguments.java", "diffHunk": "@@ -11,6 +11,8 @@\n \n     String EMPTY = \"\";\n \n+    Optional<String> runFrom();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ee1038842e7e7c00bca9cd8269fe124e69f5d67"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzM1NTk5OnYy", "diffSide": "RIGHT", "path": "cluster/src/test/java/com/hartwig/pipeline/SingleSamplePipelineTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzozNTowMVrOHMPkWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzozNTowMVrOHMPkWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwMDAyNQ==", "bodyText": "Could we have found a case where a TODO annotation would actually be worthwhile?", "url": "https://github.com/hartwigmedical/pipeline5/pull/191#discussion_r482600025", "createdAt": "2020-09-02T23:35:01Z", "author": {"login": "nedleitch"}, "path": "cluster/src/test/java/com/hartwig/pipeline/SingleSamplePipelineTest.java", "diffHunk": "@@ -1,62 +1,18 @@\n package com.hartwig.pipeline;\n \n-import static com.hartwig.pipeline.testsupport.TestInputs.cramOutput;\n-import static com.hartwig.pipeline.testsupport.TestInputs.flagstatOutput;\n-import static com.hartwig.pipeline.testsupport.TestInputs.germlineCallerOutput;\n-import static com.hartwig.pipeline.testsupport.TestInputs.referenceAlignmentOutput;\n-import static com.hartwig.pipeline.testsupport.TestInputs.referenceMetricsOutput;\n-import static com.hartwig.pipeline.testsupport.TestInputs.referenceRunMetadata;\n-import static com.hartwig.pipeline.testsupport.TestInputs.referenceSample;\n-import static com.hartwig.pipeline.testsupport.TestInputs.snpGenotypeOutput;\n-import static com.hartwig.pipeline.testsupport.TestInputs.tumorAlignmentOutput;\n-import static com.hartwig.pipeline.testsupport.TestInputs.tumorMetricsOutput;\n-import static com.hartwig.pipeline.testsupport.TestInputs.tumorRunMetadata;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.ArgumentMatchers.any;\n-import static org.mockito.Mockito.eq;\n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.never;\n-import static org.mockito.Mockito.times;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.Mockito.when;\n-\n-import java.util.concurrent.Executors;\n-\n-import com.google.cloud.storage.Bucket;\n-import com.google.cloud.storage.Storage;\n-import com.hartwig.pipeline.alignment.AlignmentOutput;\n-import com.hartwig.pipeline.alignment.vm.VmAligner;\n-import com.hartwig.pipeline.calling.germline.GermlineCallerOutput;\n-import com.hartwig.pipeline.cram.CramOutput;\n-import com.hartwig.pipeline.execution.PipelineStatus;\n-import com.hartwig.pipeline.flagstat.FlagstatOutput;\n-import com.hartwig.pipeline.metadata.SingleSampleEventListener;\n-import com.hartwig.pipeline.metadata.SingleSampleRunMetadata;\n-import com.hartwig.pipeline.metrics.BamMetricsOutput;\n-import com.hartwig.pipeline.report.PipelineResults;\n-import com.hartwig.pipeline.report.PipelineResultsProvider;\n-import com.hartwig.pipeline.report.ReportComponent;\n-import com.hartwig.pipeline.snpgenotype.SnpGenotypeOutput;\n-import com.hartwig.pipeline.stages.StageRunner;\n-\n-import org.junit.Before;\n-import org.junit.Test;\n-import org.mockito.ArgumentCaptor;\n-\n public class SingleSamplePipelineTest {\n \n-    private static final Arguments ARGUMENTS = Arguments.testDefaults();\n+/*    private static final Arguments ARGUMENTS = Arguments.testDefaults();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ee1038842e7e7c00bca9cd8269fe124e69f5d67"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1685, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}