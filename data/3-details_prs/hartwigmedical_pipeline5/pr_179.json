{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NjI1MDEx", "number": 179, "title": "DEV-1428 Wrap all list operations in a backoff retry", "bodyText": "Now all interactions in the Lifecycle manager are retried with a backoff.", "createdAt": "2020-07-30T21:51:27Z", "url": "https://github.com/hartwigmedical/pipeline5/pull/179", "merged": true, "mergeCommit": {"oid": "597f78966239763cded90beb67a13c7c11919c07"}, "closed": true, "closedAt": "2020-07-31T17:43:29Z", "author": {"login": "pauldwolfe"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6G09dAH2gAyNDU5NjI1MDExOjIxY2Q1YjkwYzcyOWQ5YTA0YmMzYTUwZTlhNjc2OTc1Njk3YzQ3OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6XmQ3AH2gAyNDU5NjI1MDExOjhiNjQyOWVmOTRmNjM5ZjQ1NGZlZGY2ZDc5MzJjM2RmM2NiYjcwYjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "21cd5b90c729d9a04bc3a50e9a676975697c4793", "author": {"user": null}, "url": "https://github.com/hartwigmedical/pipeline5/commit/21cd5b90c729d9a04bc3a50e9a676975697c4793", "committedDate": "2020-07-30T21:50:58Z", "message": "DEV-1428 Wrap all list operations in a backoff retry\n\nNow all interactions in the Lifecycle manager are retried with a backoff."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODg2NTAz", "url": "https://github.com/hartwigmedical/pipeline5/pull/179#pullrequestreview-458886503", "createdAt": "2020-07-31T02:50:35Z", "commit": {"oid": "21cd5b90c729d9a04bc3a50e9a676975697c4793"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMjo1MDozNVrOG56YHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMjo1MDo1NFrOG56YcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM3ODQ2MQ==", "bodyText": "I wonder in retrospect whether the three-argument version of withDelay might be more appropriate (provide a min and max delay and it will choose a random time between them). I think it's more readable too (and you could do without the constant - just use 5 and specify minutes instead of seconds).", "url": "https://github.com/hartwigmedical/pipeline5/pull/179#discussion_r463378461", "createdAt": "2020-07-31T02:50:35Z", "author": {"login": "nedleitch"}, "path": "cluster/src/main/java/com/hartwig/pipeline/execution/vm/InstanceLifecycleManager.java", "diffHunk": "@@ -128,21 +131,23 @@ private Operation executeSynchronously(ComputeRequest<Operation> request, String\n                 Thread.currentThread().interrupt();\n             }\n         }\n-        return executeWithRetries(() -> compute.zoneOperations().get(projectName, zoneName, asyncOp.getName()).execute());\n+        return executeWithRetries(() -> compute.zoneOperations().get(projectName, zoneName, asyncOp.getName()).execute(),\n+                IOException.class);\n     }\n \n-    private Operation executeWithRetries(final CheckedSupplier<Operation> operationCheckedSupplier) {\n-        return Failsafe.with(new RetryPolicy<>().handle(IOException.class).withDelay(Duration.ofSeconds(pollInterval)).withMaxRetries(5))\n+    private <T> T executeWithRetries(final CheckedSupplier<T> operationCheckedSupplier, final Class<? extends Exception> exception) {\n+        return Failsafe.with(new RetryPolicy<>().handle(exception)\n+                .withBackoff(pollInterval, FIVE_MINUTES, ChronoUnit.SECONDS, new Random().nextInt(pollInterval)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21cd5b90c729d9a04bc3a50e9a676975697c4793"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM3ODU0NA==", "bodyText": "This is 10 minutes :)", "url": "https://github.com/hartwigmedical/pipeline5/pull/179#discussion_r463378544", "createdAt": "2020-07-31T02:50:54Z", "author": {"login": "nedleitch"}, "path": "cluster/src/main/java/com/hartwig/pipeline/execution/vm/InstanceLifecycleManager.java", "diffHunk": "@@ -28,6 +30,7 @@\n class InstanceLifecycleManager {\n     private static final String RUNNING_STATUS = \"RUNNING\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(InstanceLifecycleManager.class);\n+    public static final int FIVE_MINUTES = 600;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21cd5b90c729d9a04bc3a50e9a676975697c4793"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fd5c8f6f1857526d69188bb263e97255ed22f84", "author": {"user": null}, "url": "https://github.com/hartwigmedical/pipeline5/commit/7fd5c8f6f1857526d69188bb263e97255ed22f84", "committedDate": "2020-07-31T15:06:49Z", "message": "DEV-1428 Wrap stage runner compute engine submit in backoff retry\n\nAnd extract a common class to avoid duplication with lifecycle manager."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MjUxMzEw", "url": "https://github.com/hartwigmedical/pipeline5/pull/179#pullrequestreview-459251310", "createdAt": "2020-07-31T15:10:55Z", "commit": {"oid": "7fd5c8f6f1857526d69188bb263e97255ed22f84"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMDo1NVrOG6MGGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMDo1NVrOG6MGGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2ODc2Mw==", "bodyText": "Repeated op name, maybe put in a constant?", "url": "https://github.com/hartwigmedical/pipeline5/pull/179#discussion_r463668763", "createdAt": "2020-07-31T15:10:55Z", "author": {"login": "nedleitch"}, "path": "cluster/src/main/java/com/hartwig/pipeline/execution/vm/InstanceLifecycleManager.java", "diffHunk": "@@ -73,22 +75,22 @@ Operation deleteOldInstancesAndStart(Instance instance, String zone, String vmNa\n             }\n         });\n         try {\n-            return executeSynchronously(compute.instances().insert(project, zone, instance), project, zone);\n+            return executeSynchronously(compute.instances().insert(project, zone, instance), project, zone, \"insertVm\");\n         } catch (IOException ioe) {\n             throw new RuntimeException(\"Could not initialise insert operation!\", ioe);\n         }\n     }\n \n     void delete(String zone, String vm) {\n-        executeSynchronously(getWithRetries(() -> compute.instances().delete(project, zone, vm)), project, zone);\n+        executeSynchronously(getWithRetries(() -> compute.instances().delete(project, zone, vm)), project, zone, \"deleteVm\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd5c8f6f1857526d69188bb263e97255ed22f84"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7788daedb1eb99ae6758d6e2b12aa08d0692b1cc", "author": {"user": null}, "url": "https://github.com/hartwigmedical/pipeline5/commit/7788daedb1eb99ae6758d6e2b12aa08d0692b1cc", "committedDate": "2020-07-31T17:11:50Z", "message": "DEV-1428 Add test and infinite backoff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b6429ef94f639f454fedf6d7932c3df3cbb70b1", "author": {"user": null}, "url": "https://github.com/hartwigmedical/pipeline5/commit/8b6429ef94f639f454fedf6d7932c3df3cbb70b1", "committedDate": "2020-07-31T17:23:18Z", "message": "DEV-1428 Error in minutes to second conversion"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3731, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}