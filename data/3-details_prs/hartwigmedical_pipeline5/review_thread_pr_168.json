{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyMTEzODEw", "number": 168, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMDoxODowMlrOEPyY-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjo0MjoxNVrOERIVRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTg5Njg5OnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/com/hartwig/pipeline/transfer/SbpFileApiUpdate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMDoxODowMlrOGzqVZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMDoxODowMlrOGzqVZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgyNDE2Nw==", "bodyText": "As neither implementation of ApiFileOperation implement equals/hashcode this is only ensuring that the same reference isn't in the collection twice, which feels like masking another bug. I think we should keep going until we find where that is happening.\nStill fine to keep idea but maybe then better we check for duplicates and log something before removing them?", "url": "https://github.com/hartwigmedical/pipeline5/pull/168#discussion_r456824167", "createdAt": "2020-07-18T20:18:02Z", "author": {"login": "pauldwolfe"}, "path": "cluster/src/main/java/com/hartwig/pipeline/transfer/SbpFileApiUpdate.java", "diffHunk": "@@ -30,14 +30,15 @@\n     private final SbpRun sbpRun;\n     private final Bucket sourceBucket;\n     private final SbpRestApi sbpApi;\n-    private final List<ApiFileOperation> fileOperations = new ArrayList<>();\n+    private final Set<ApiFileOperation> fileOperations;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db376bb357ce621aa4dcab1231df91b43b2c13db"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTg3NDcxOnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/com/hartwig/pipeline/transfer/SbpFileApiUpdate.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODowNzozOVrOG1D5Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo1NDo1MFrOG1tx5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5MTU1OQ==", "bodyText": "I would suggest reverting all this to get back to a place where you can duplicate the bug. I don't see a possible concurrency issue as the new code only processes the list which should already contain the duplicate. If you can't duplicate it after that, it suggests we still don't quite understand the problem.", "url": "https://github.com/hartwigmedical/pipeline5/pull/168#discussion_r458291559", "createdAt": "2020-07-21T18:07:39Z", "author": {"login": "pauldwolfe"}, "path": "cluster/src/main/java/com/hartwig/pipeline/transfer/SbpFileApiUpdate.java", "diffHunk": "@@ -59,14 +62,26 @@ public void accept(final Blob blob) {\n \n                 for (ApiFileOperation fileOperation : fileOperations) {\n                     if (fileOperation.path().equals(blob.getName().substring(blob.getName().indexOf(\"/\") + 1))) {\n-                        LOGGER.info(\"Applying: {}\", fileOperation);\n+                        LOGGER.info(\"Applying [{}] for [{}]\", fileOperation, blob.getName());\n                         fileOperation.apply(sbpApi, fileResponse);\n                     }\n                 }\n             }\n         }\n     }\n \n+    private void storeOperations(List<StageOutput> stageOutputs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca685be9080aeca417f357e2744226bd3ce3157c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3Nzc2NA==", "bodyText": "I don't think we should keep this code, its a little confusing when you don't have the full context of why its here. If we do keep, the second info statement should probably be a WARN.", "url": "https://github.com/hartwigmedical/pipeline5/pull/168#discussion_r458977764", "createdAt": "2020-07-22T17:54:50Z", "author": {"login": "pauldwolfe"}, "path": "cluster/src/main/java/com/hartwig/pipeline/transfer/SbpFileApiUpdate.java", "diffHunk": "@@ -59,14 +62,26 @@ public void accept(final Blob blob) {\n \n                 for (ApiFileOperation fileOperation : fileOperations) {\n                     if (fileOperation.path().equals(blob.getName().substring(blob.getName().indexOf(\"/\") + 1))) {\n-                        LOGGER.info(\"Applying: {}\", fileOperation);\n+                        LOGGER.info(\"Applying [{}] for [{}]\", fileOperation, blob.getName());\n                         fileOperation.apply(sbpApi, fileResponse);\n                     }\n                 }\n             }\n         }\n     }\n \n+    private void storeOperations(List<StageOutput> stageOutputs) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5MTU1OQ=="}, "originalCommit": {"oid": "ca685be9080aeca417f357e2744226bd3ce3157c"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzk3NzY0OnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/com/hartwig/pipeline/PipelineState.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjo0MjoxNVrOG1rF8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjo0MjoxNVrOG1rF8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkzMzc0NQ==", "bodyText": "[Package?] private?", "url": "https://github.com/hartwigmedical/pipeline5/pull/168#discussion_r458933745", "createdAt": "2020-07-22T16:42:15Z", "author": {"login": "nedleitch"}, "path": "cluster/src/main/java/com/hartwig/pipeline/PipelineState.java", "diffHunk": "@@ -13,7 +13,15 @@\n public class PipelineState {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(PipelineState.class);\n-    private final List<StageOutput> stageOutputs = Lists.newArrayList();\n+    private final List<StageOutput> stageOutputs;\n+\n+    public PipelineState() {\n+        this.stageOutputs = new ArrayList<>();\n+    }\n+\n+    public PipelineState(final List<StageOutput> stageOutputs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23baa8cfe9628f33137de77405f432ea0bcf50cf"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1672, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}