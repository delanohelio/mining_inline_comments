{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMDc4MzQx", "number": 112, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTozODoxN1rODXqifA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTo0NDoyMVrODXqowQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTQwNzk2OnYy", "diffSide": "RIGHT", "path": "bcl2fastq/src/main/java/com/hartwig/bcl2fastq/metadata/SbpFastqMetadataApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTozODoxN1rOFdFb1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzo1NTo1MFrOFdIb8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0MjA3MA==", "bodyText": "Response.Status.CREATED or something similar?", "url": "https://github.com/hartwigmedical/pipeline5/pull/112#discussion_r366042070", "createdAt": "2020-01-13T21:38:17Z", "author": {"login": "nedleitch"}, "path": "bcl2fastq/src/main/java/com/hartwig/bcl2fastq/metadata/SbpFastqMetadataApi.java", "diffHunk": "@@ -55,7 +55,7 @@ public SbpSample findOrCreate(String barcode, String submission) {\n                 try {\n                     Response response = samples().request()\n                             .post(Entity.entity(objectMapper.writeValueAsString(sample), MediaType.APPLICATION_JSON_TYPE));\n-                    if (response.getStatus() == 200) {\n+                    if (response.getStatus() == 201) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c8141c3058d915bac4618a4855a4cc66423361"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MTI0OQ==", "bodyText": "Good suggestion", "url": "https://github.com/hartwigmedical/pipeline5/pull/112#discussion_r366091249", "createdAt": "2020-01-13T23:55:50Z", "author": {"login": "pauldwolfe"}, "path": "bcl2fastq/src/main/java/com/hartwig/bcl2fastq/metadata/SbpFastqMetadataApi.java", "diffHunk": "@@ -55,7 +55,7 @@ public SbpSample findOrCreate(String barcode, String submission) {\n                 try {\n                     Response response = samples().request()\n                             .post(Entity.entity(objectMapper.writeValueAsString(sample), MediaType.APPLICATION_JSON_TYPE));\n-                    if (response.getStatus() == 200) {\n+                    if (response.getStatus() == 201) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0MjA3MA=="}, "originalCommit": {"oid": "e9c8141c3058d915bac4618a4855a4cc66423361"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTQxMjE4OnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/com/hartwig/pipeline/execution/vm/VirtualMachinePerformanceProfile.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTozOTo1N1rOFdFekQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTozOTo1N1rOFdFekQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0Mjc2OQ==", "bodyText": "Much better.", "url": "https://github.com/hartwigmedical/pipeline5/pull/112#discussion_r366042769", "createdAt": "2020-01-13T21:39:57Z", "author": {"login": "nedleitch"}, "path": "cluster/src/main/java/com/hartwig/pipeline/execution/vm/VirtualMachinePerformanceProfile.java", "diffHunk": "@@ -1,24 +1,26 @@\n package com.hartwig.pipeline.execution.vm;\n \n-import static java.lang.String.format;\n-\n import com.hartwig.pipeline.execution.MachineType;\n import com.hartwig.pipeline.execution.PerformanceProfile;\n \n import org.immutables.value.Value;\n \n @Value.Immutable\n-public interface VirtualMachinePerformanceProfile extends PerformanceProfile{\n+public interface VirtualMachinePerformanceProfile extends PerformanceProfile {\n+\n+    @Value.Default\n+    default String uri() {\n+        return machineType().uri();\n+    }\n \n-    String uri();\n+    MachineType machineType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c8141c3058d915bac4618a4855a4cc66423361"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTQyNDAxOnYy", "diffSide": "RIGHT", "path": "bcl2fastq/src/main/java/com/hartwig/bcl2fastq/conversion/ResultAggregation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTo0NDoyMVrOFdFl_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzo1NjozOVrOFdIcyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0NDY3MA==", "bodyText": "We have had surprises in the past, would it be wise to check the filename conforms to expectations?", "url": "https://github.com/hartwigmedical/pipeline5/pull/112#discussion_r366044670", "createdAt": "2020-01-13T21:44:21Z", "author": {"login": "nedleitch"}, "path": "bcl2fastq/src/main/java/com/hartwig/bcl2fastq/conversion/ResultAggregation.java", "diffHunk": "@@ -95,7 +95,15 @@ static ConvertedFastq fastq(IlluminaSample sample, Map.Entry<String, List<Blob>>\n     }\n \n     private static String outputPath(final IlluminaSample sample, final Stats stats, final Blob blobR1) {\n-        return stats.flowcell() + \"/\" + sample.barcode() + \"/\" + new File(blobR1.getName()).getName();\n+        String[] fileNameSplit = new File(blobR1.getName()).getName().split(\"_\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c8141c3058d915bac4618a4855a4cc66423361"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MTQ2NA==", "bodyText": "hmm, as this file convention is produced by the version of bcl2fastq also in this codebase I think its fine to have this implicit dependency on the filename.", "url": "https://github.com/hartwigmedical/pipeline5/pull/112#discussion_r366091464", "createdAt": "2020-01-13T23:56:39Z", "author": {"login": "pauldwolfe"}, "path": "bcl2fastq/src/main/java/com/hartwig/bcl2fastq/conversion/ResultAggregation.java", "diffHunk": "@@ -95,7 +95,15 @@ static ConvertedFastq fastq(IlluminaSample sample, Map.Entry<String, List<Blob>>\n     }\n \n     private static String outputPath(final IlluminaSample sample, final Stats stats, final Blob blobR1) {\n-        return stats.flowcell() + \"/\" + sample.barcode() + \"/\" + new File(blobR1.getName()).getName();\n+        String[] fileNameSplit = new File(blobR1.getName()).getName().split(\"_\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0NDY3MA=="}, "originalCommit": {"oid": "e9c8141c3058d915bac4618a4855a4cc66423361"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1705, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}