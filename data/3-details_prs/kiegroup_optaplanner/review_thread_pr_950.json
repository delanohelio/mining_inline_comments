{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NTgzMDIw", "number": 950, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDozNDoxOVrOEp1k_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDo1NDo1MFrOEp2DRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzA0ODkyOnYy", "diffSide": "RIGHT", "path": "optaplanner-benchmark/src/main/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmark.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDozNDoxOVrOHbwBmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDozNDoxOVrOHbwBmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg2MDQ0Mg==", "bodyText": "Nice one that this is cleaned up!", "url": "https://github.com/kiegroup/optaplanner/pull/950#discussion_r498860442", "createdAt": "2020-10-02T14:34:19Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-benchmark/src/main/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmark.java", "diffHunk": "@@ -140,14 +140,7 @@ private void warmUp() {\n         long timeLeftTotal = plannerBenchmarkResult.getWarmUpTimeMillisSpentLimit();\n         int parallelBenchmarkCount = plannerBenchmarkResult.getParallelBenchmarkCount();\n         int solverBenchmarkResultCount = plannerBenchmarkResult.getSolverBenchmarkResultList().size();\n-        /*\n-         * cyclesCount needs to be long, as opposed to its natural int,\n-         * otherwise JDK 11 compiler uses Math.floorDiv(long, int), which is only available on JDK 9+.\n-         * When such compiled code is then used on Java 8, there is a NoSuchMethodError.\n-         * All is fine When the code is compiled on JDK 8, the compiler will use the good old Math.floorDiv(long, long).\n-         * TODO Remove when JDK 8 is no longer supported.\n-         */\n-        long cyclesCount = ConfigUtils.ceilDivide(solverBenchmarkResultCount, parallelBenchmarkCount);\n+        int cyclesCount = ConfigUtils.ceilDivide(solverBenchmarkResultCount, parallelBenchmarkCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0430772d587484edc1c9e1cbf437e97aaf5b0e03"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzA1MzQ1OnYy", "diffSide": "RIGHT", "path": "optaplanner-build-parent/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDozNTozOVrOHbwEZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTowODowNVrOHcT_iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg2MTE1OQ==", "bodyText": "Overwrite property <version.dependency.plugin> instead, just like we have this property:\n<version.surefire.plugin>2.22.2</version.surefire.plugin>", "url": "https://github.com/kiegroup/optaplanner/pull/950#discussion_r498861159", "createdAt": "2020-10-02T14:35:39Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-build-parent/pom.xml", "diffHunk": "@@ -356,6 +357,12 @@\n   <build>\n     <pluginManagement>\n       <plugins>\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-dependency-plugin</artifactId>\n+          <!-- The first version that supports analysis of classes compiled by Java 11. -->\n+          <version>3.1.2</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0430772d587484edc1c9e1cbf437e97aaf5b0e03"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0OTczNg==", "bodyText": "Good catch, thanks!", "url": "https://github.com/kiegroup/optaplanner/pull/950#discussion_r499449736", "createdAt": "2020-10-05T09:08:05Z", "author": {"login": "rsynek"}, "path": "optaplanner-build-parent/pom.xml", "diffHunk": "@@ -356,6 +357,12 @@\n   <build>\n     <pluginManagement>\n       <plugins>\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-dependency-plugin</artifactId>\n+          <!-- The first version that supports analysis of classes compiled by Java 11. -->\n+          <version>3.1.2</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg2MTE1OQ=="}, "originalCommit": {"oid": "0430772d587484edc1c9e1cbf437e97aaf5b0e03"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzEyNjQ1OnYy", "diffSide": "LEFT", "path": ".github/workflows/jpa_integration_ci.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDo1NDo1MFrOHbwyTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODo1OTo1OFrOHcTtFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3MjkxMQ==", "bodyText": "How does this work?\nShould the master branch's file mention all branches?\nOr should each branch's file mention its own branch?", "url": "https://github.com/kiegroup/optaplanner/pull/950#discussion_r498872911", "createdAt": "2020-10-02T14:54:50Z", "author": {"login": "ge0ffrey"}, "path": ".github/workflows/jpa_integration_ci.yml", "diffHunk": "@@ -6,11 +6,9 @@ on:\n   push:\n     branches:\n       - master\n-      - 7.x", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0430772d587484edc1c9e1cbf437e97aaf5b0e03"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0NTAxNQ==", "bodyText": "Each branch should have its own .yaml file(s) with a filter for that particular branch. I think the multiple branches mentioned in the .yaml file on the master branch is a shortcut if you want to build multiple branches using the same workflow.\nI would rather keep the branches separated. This test repo proves that triggering the CI on branches with different workflow definitions works: https://github.com/rsynek/github-actions-test/actions", "url": "https://github.com/kiegroup/optaplanner/pull/950#discussion_r499445015", "createdAt": "2020-10-05T08:59:58Z", "author": {"login": "rsynek"}, "path": ".github/workflows/jpa_integration_ci.yml", "diffHunk": "@@ -6,11 +6,9 @@ on:\n   push:\n     branches:\n       - master\n-      - 7.x", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3MjkxMQ=="}, "originalCommit": {"oid": "0430772d587484edc1c9e1cbf437e97aaf5b0e03"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4265, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}