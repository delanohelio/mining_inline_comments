{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMzE1OTQ4", "number": 675, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMToxOToyNFrODdS-Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMToxOToyNFrODdS-Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDQ2MTQ3OnYy", "diffSide": "RIGHT", "path": "optaplanner-examples/src/main/resources/org/optaplanner/examples/travelingtournament/solver/travelingTournamentScoreRules.drl", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMToxOToyNFrOFl0Q7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMTo0MDozMlrOFl0z-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE5NzkzMg==", "bodyText": "Does this change have any impact on the DRL performance?", "url": "https://github.com/kiegroup/optaplanner/pull/675#discussion_r375197932", "createdAt": "2020-02-05T11:19:24Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-examples/src/main/resources/org/optaplanner/examples/travelingtournament/solver/travelingTournamentScoreRules.drl", "diffHunk": "@@ -35,19 +35,19 @@ global HardSoftScoreHolder scoreHolder;\n rule \"fourConsecutiveHomeMatches\"\n     when\n         Match($homeTeam : homeTeam, $firstDayIndex : day.getIndex())\n-        Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 1)\n-        Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 2)\n-        Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 3)\n+        exists Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 1)\n+        exists Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 2)\n+        exists Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 3)\n     then\n         scoreHolder.addHardConstraintMatch(kcontext, -1);\n end\n \n rule \"fourConsecutiveAwayMatches\"\n     when\n         Match($awayTeam : awayTeam, $firstDayIndex : day.getIndex())\n-        Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 1)\n-        Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 2)\n-        Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 3)\n+        exists Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 1)\n+        exists Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 2)\n+        exists Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 3)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46528319759625bd6024dbc732dbaca057659bc"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIwNjkwNw==", "bodyText": "I actually did that to make sure that CS-D and DRL are really 1:1.\nIt did improve the DRL performance, but CS-D is still better. This is curious.", "url": "https://github.com/kiegroup/optaplanner/pull/675#discussion_r375206907", "createdAt": "2020-02-05T11:40:32Z", "author": {"login": "triceo"}, "path": "optaplanner-examples/src/main/resources/org/optaplanner/examples/travelingtournament/solver/travelingTournamentScoreRules.drl", "diffHunk": "@@ -35,19 +35,19 @@ global HardSoftScoreHolder scoreHolder;\n rule \"fourConsecutiveHomeMatches\"\n     when\n         Match($homeTeam : homeTeam, $firstDayIndex : day.getIndex())\n-        Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 1)\n-        Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 2)\n-        Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 3)\n+        exists Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 1)\n+        exists Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 2)\n+        exists Match(homeTeam == $homeTeam, day.getIndex() == $firstDayIndex + 3)\n     then\n         scoreHolder.addHardConstraintMatch(kcontext, -1);\n end\n \n rule \"fourConsecutiveAwayMatches\"\n     when\n         Match($awayTeam : awayTeam, $firstDayIndex : day.getIndex())\n-        Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 1)\n-        Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 2)\n-        Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 3)\n+        exists Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 1)\n+        exists Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 2)\n+        exists Match(awayTeam == $awayTeam, day.getIndex() == $firstDayIndex + 3)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE5NzkzMg=="}, "originalCommit": {"oid": "e46528319759625bd6024dbc732dbaca057659bc"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4603, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}