{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMjUyMjIw", "number": 674, "title": "PLANNER-1825 Add constraint provider for TSP", "bodyText": "Example verified with assertion score director.\nCS-D performance on par with DRL.", "createdAt": "2020-02-05T08:53:51Z", "url": "https://github.com/kiegroup/optaplanner/pull/674", "merged": true, "mergeCommit": {"oid": "a3008a68adacc12f83b8c4b89d3fd814f4be2291"}, "closed": true, "closedAt": "2020-02-05T09:32:00Z", "author": {"login": "triceo"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBSNSugH2gAyMzcxMjUyMjIwOjYyZjIxYzZmNjNkYzE4NDFlZTc3YzkwYzI0ZDhmYTQ4Mjk0YmZkNmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBSq_HgH2gAyMzcxMjUyMjIwOmU5MmFjYjk2ZWFhYjJlZjBkZDAxZTIwM2MzMzBhODU4ODMzNmUxY2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "62f21c6f63dc1841ee77c90c24d8fa48294bfd6f", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/62f21c6f63dc1841ee77c90c24d8fa48294bfd6f", "committedDate": "2020-02-05T08:52:49Z", "message": "Implement the TSP example"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce4e8f3a4169894224d11645b68697870c144452", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/ce4e8f3a4169894224d11645b68697870c144452", "committedDate": "2020-02-05T08:53:02Z", "message": "Solution IO"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTUxMTcw", "url": "https://github.com/kiegroup/optaplanner/pull/674#pullrequestreview-353551170", "createdAt": "2020-02-05T08:57:52Z", "commit": {"oid": "ce4e8f3a4169894224d11645b68697870c144452"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwODo1Nzo1MlrOFlwAkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwODo1Nzo1MlrOFlwAkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyODIxMA==", "bodyText": "Why extract that in a separate file? The more files in an example, the harder it is to understand for our users.", "url": "https://github.com/kiegroup/optaplanner/pull/674#discussion_r375128210", "createdAt": "2020-02-05T08:57:52Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/tsp/app/TspApp.java", "diffHunk": "@@ -55,7 +55,7 @@ protected TspPanel createSolutionPanel() {\n \n     @Override\n     public SolutionFileIO<TspSolution> createSolutionFileIO() {\n-        return new XStreamSolutionFileIO<>(TspSolution.class);\n+        return new TspXStreamSolutionFileIO();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce4e8f3a4169894224d11645b68697870c144452"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTUxMzM3", "url": "https://github.com/kiegroup/optaplanner/pull/674#pullrequestreview-353551337", "createdAt": "2020-02-05T08:58:07Z", "commit": {"oid": "ce4e8f3a4169894224d11645b68697870c144452"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwODo1ODowN1rOFlwBDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwODo1ODowN1rOFlwBDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyODMzMw==", "bodyText": "Use SimpleLongScore.ONE", "url": "https://github.com/kiegroup/optaplanner/pull/674#discussion_r375128333", "createdAt": "2020-02-05T08:58:07Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/tsp/optional/score/TspConstraintProvider.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.examples.tsp.optional.score;\n+\n+import org.optaplanner.core.api.score.buildin.simplelong.SimpleLongScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.api.score.stream.Joiners;\n+import org.optaplanner.examples.tsp.domain.Domicile;\n+import org.optaplanner.examples.tsp.domain.Visit;\n+\n+public final class TspConstraintProvider implements ConstraintProvider {\n+\n+    @Override\n+    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n+        return new Constraint[]{\n+                distanceToPreviousStandstill(constraintFactory),\n+                distanceFromLastVisitToDomicile(constraintFactory)\n+        };\n+    }\n+\n+    private Constraint distanceToPreviousStandstill(ConstraintFactory constraintFactory) {\n+        return constraintFactory.from(Visit.class)\n+                .penalizeLong(\"Distance to previous standstill\",\n+                        SimpleLongScore.of(1),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce4e8f3a4169894224d11645b68697870c144452"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbea8d9a8987e70e48352050aec9c03c02841dd2", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/dbea8d9a8987e70e48352050aec9c03c02841dd2", "committedDate": "2020-02-05T09:02:44Z", "message": "SimpleLongScore.ONE"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTU0Mjk0", "url": "https://github.com/kiegroup/optaplanner/pull/674#pullrequestreview-353554294", "createdAt": "2020-02-05T09:02:58Z", "commit": {"oid": "ce4e8f3a4169894224d11645b68697870c144452"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTowMjo1OFrOFlwJ1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTowMjo1OFrOFlwJ1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEzMDU4MQ==", "bodyText": "I guess \"visit -> visit\" is better than \"Function.identity()\"?\nShould we experiment with thisEqual() or equalToThat() ? I guess that's overkill...", "url": "https://github.com/kiegroup/optaplanner/pull/674#discussion_r375130581", "createdAt": "2020-02-05T09:02:58Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/tsp/optional/score/TspConstraintProvider.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.examples.tsp.optional.score;\n+\n+import org.optaplanner.core.api.score.buildin.simplelong.SimpleLongScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.api.score.stream.Joiners;\n+import org.optaplanner.examples.tsp.domain.Domicile;\n+import org.optaplanner.examples.tsp.domain.Visit;\n+\n+public final class TspConstraintProvider implements ConstraintProvider {\n+\n+    @Override\n+    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n+        return new Constraint[]{\n+                distanceToPreviousStandstill(constraintFactory),\n+                distanceFromLastVisitToDomicile(constraintFactory)\n+        };\n+    }\n+\n+    private Constraint distanceToPreviousStandstill(ConstraintFactory constraintFactory) {\n+        return constraintFactory.from(Visit.class)\n+                .penalizeLong(\"Distance to previous standstill\",\n+                        SimpleLongScore.of(1),\n+                        Visit::getDistanceFromPreviousStandstill);\n+    }\n+\n+    private Constraint distanceFromLastVisitToDomicile(ConstraintFactory constraintFactory) {\n+        return constraintFactory.from(Visit.class)\n+                .ifNotExists(Visit.class, Joiners.equal(visit -> visit, Visit::getPreviousStandstill))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce4e8f3a4169894224d11645b68697870c144452"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTU0NDcw", "url": "https://github.com/kiegroup/optaplanner/pull/674#pullrequestreview-353554470", "createdAt": "2020-02-05T09:03:17Z", "commit": {"oid": "ce4e8f3a4169894224d11645b68697870c144452"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTU1MzY3", "url": "https://github.com/kiegroup/optaplanner/pull/674#pullrequestreview-353555367", "createdAt": "2020-02-05T09:04:46Z", "commit": {"oid": "dbea8d9a8987e70e48352050aec9c03c02841dd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6b7a0071c4f7b9bd0f70d77d81df9c41ae08890", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/d6b7a0071c4f7b9bd0f70d77d81df9c41ae08890", "committedDate": "2020-02-05T09:16:55Z", "message": "Revert \"Solution IO\"\n\nThis reverts commit ce4e8f3a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e70d9a2356f943893ed806db4ebc571c5fb65226", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e70d9a2356f943893ed806db4ebc571c5fb65226", "committedDate": "2020-02-05T09:23:51Z", "message": "No copyright in XML"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e92acb96eaab2ef0dd01e203c330a8588336e1cb", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e92acb96eaab2ef0dd01e203c330a8588336e1cb", "committedDate": "2020-02-05T09:25:15Z", "message": "Revert \"Solution IO\"\n\nThis reverts commit ce4e8f3a"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3068, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}