{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyOTcwMTkw", "number": 998, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxMzo1M1rOEzyWFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzoxOTowOVrOE1OEpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzM3Njg0OnYy", "diffSide": "RIGHT", "path": "build/release/upload_distribution.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxMzo1M1rOHrOZLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoyMjo0NFrOHrRShA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4NjYzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              echo \"Make sure the OptaPlanner project has been build with the full profile enabled before calling this script.\"\n          \n          \n            \n              echo \"Make sure the OptaPlanner project has been built with the full profile enabled before calling this script.\"", "url": "https://github.com/kiegroup/optaplanner/pull/998#discussion_r515086638", "createdAt": "2020-10-30T13:13:53Z", "author": {"login": "triceo"}, "path": "build/release/upload_distribution.sh", "diffHunk": "@@ -0,0 +1,78 @@\n+#!/bin/bash\n+\n+function display_help() {\n+  readonly script_name=\"./$(basename \"$0\")\"\n+\n+  echo \"This script uploads the documentation, javadocs and distribution.zip to the filemgmt.jboss.org.\"\n+  echo \"Make sure the OptaPlanner project has been build with the full profile enabled before calling this script.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41a730bfeb4fe8ac3d8454aa49c589caeb126fe"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNDA4NA==", "bodyText": "Good catch, thanks!", "url": "https://github.com/kiegroup/optaplanner/pull/998#discussion_r515134084", "createdAt": "2020-10-30T14:22:44Z", "author": {"login": "rsynek"}, "path": "build/release/upload_distribution.sh", "diffHunk": "@@ -0,0 +1,78 @@\n+#!/bin/bash\n+\n+function display_help() {\n+  readonly script_name=\"./$(basename \"$0\")\"\n+\n+  echo \"This script uploads the documentation, javadocs and distribution.zip to the filemgmt.jboss.org.\"\n+  echo \"Make sure the OptaPlanner project has been build with the full profile enabled before calling this script.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4NjYzOA=="}, "originalCommit": {"oid": "c41a730bfeb4fe8ac3d8454aa49c589caeb126fe"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjQwMjM3OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.promote", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzoxODoxNlrOHtXpuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzoxMjowNVrOHthxjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzNTQ4Mw==", "bodyText": "-8.xsd suffixes are for version 8.x explicitly ?", "url": "https://github.com/kiegroup/optaplanner/pull/998#discussion_r517335483", "createdAt": "2020-11-04T13:18:16Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -92,6 +92,53 @@ pipeline {\n             }\n         }\n \n+        stage('Upload documentation and distribution') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    mavenCleanInstall('optaplanner', true, ['full'])\n+                    dir('optaplanner') {\n+                        withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n+                                             keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n+                            // For testing, simulate connection via SSH:\n+                            // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n+                            sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        stage('Update OptaPlanner website') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    final String websiteRepository = 'optaplanner-website'\n+                    dir(websiteRepository) {\n+                        String prBranchName = createWebsitePrBranch(websiteRepository)\n+\n+                        // Update versions in links on the website.\n+                        String nextMinorSnapshot = util.getNextVersion(getProjectVersion(), 'minor')\n+                        sh \"./build/update-versions.sh ${getProjectVersion()} $nextMinorSnapshot\"\n+\n+                        // Update the XSDs. OptaPlanner must be cloned and build with the full profile before.\n+                        String optaplannerRoot = \"$WORKSPACE/optaplanner\"\n+                        sh \"cp $optaplannerRoot/optaplanner-core/target/classes/solver.xsd xsd/solver/solver-8.xsd\"\n+                        sh \"cp $optaplannerRoot/optaplanner-benchmark/target/classes/benchmark.xsd xsd/benchmark/benchmark-8.xsd\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e98f508452c3bc16399729691143e91fbbabc5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0MjQ0MA==", "bodyText": "Yep, and there is a symlink solver.xsd pointing to the solver-8.xsd. The point is to have XSDs for the entire 8.x, so that once we head towards 9.x, users staying on 8.x have compatible XSD already available.", "url": "https://github.com/kiegroup/optaplanner/pull/998#discussion_r517342440", "createdAt": "2020-11-04T13:29:45Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -92,6 +92,53 @@ pipeline {\n             }\n         }\n \n+        stage('Upload documentation and distribution') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    mavenCleanInstall('optaplanner', true, ['full'])\n+                    dir('optaplanner') {\n+                        withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n+                                             keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n+                            // For testing, simulate connection via SSH:\n+                            // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n+                            sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        stage('Update OptaPlanner website') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    final String websiteRepository = 'optaplanner-website'\n+                    dir(websiteRepository) {\n+                        String prBranchName = createWebsitePrBranch(websiteRepository)\n+\n+                        // Update versions in links on the website.\n+                        String nextMinorSnapshot = util.getNextVersion(getProjectVersion(), 'minor')\n+                        sh \"./build/update-versions.sh ${getProjectVersion()} $nextMinorSnapshot\"\n+\n+                        // Update the XSDs. OptaPlanner must be cloned and build with the full profile before.\n+                        String optaplannerRoot = \"$WORKSPACE/optaplanner\"\n+                        sh \"cp $optaplannerRoot/optaplanner-core/target/classes/solver.xsd xsd/solver/solver-8.xsd\"\n+                        sh \"cp $optaplannerRoot/optaplanner-benchmark/target/classes/benchmark.xsd xsd/benchmark/benchmark-8.xsd\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzNTQ4Mw=="}, "originalCommit": {"oid": "a9e98f508452c3bc16399729691143e91fbbabc5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUwMTMyNQ==", "bodyText": "Maybe we could set this dynamic then, with the version number. Because once we change to version 9, we may forget to update that part (if still there)", "url": "https://github.com/kiegroup/optaplanner/pull/998#discussion_r517501325", "createdAt": "2020-11-04T17:12:05Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -92,6 +92,53 @@ pipeline {\n             }\n         }\n \n+        stage('Upload documentation and distribution') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    mavenCleanInstall('optaplanner', true, ['full'])\n+                    dir('optaplanner') {\n+                        withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n+                                             keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n+                            // For testing, simulate connection via SSH:\n+                            // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n+                            sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        stage('Update OptaPlanner website') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    final String websiteRepository = 'optaplanner-website'\n+                    dir(websiteRepository) {\n+                        String prBranchName = createWebsitePrBranch(websiteRepository)\n+\n+                        // Update versions in links on the website.\n+                        String nextMinorSnapshot = util.getNextVersion(getProjectVersion(), 'minor')\n+                        sh \"./build/update-versions.sh ${getProjectVersion()} $nextMinorSnapshot\"\n+\n+                        // Update the XSDs. OptaPlanner must be cloned and build with the full profile before.\n+                        String optaplannerRoot = \"$WORKSPACE/optaplanner\"\n+                        sh \"cp $optaplannerRoot/optaplanner-core/target/classes/solver.xsd xsd/solver/solver-8.xsd\"\n+                        sh \"cp $optaplannerRoot/optaplanner-benchmark/target/classes/benchmark.xsd xsd/benchmark/benchmark-8.xsd\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzNTQ4Mw=="}, "originalCommit": {"oid": "a9e98f508452c3bc16399729691143e91fbbabc5"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjQwNTQ5OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.promote", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzoxOTowOVrOHtXruA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNToxNzoyMVrOHtcxJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzNTk5Mg==", "bodyText": "why not using getNextSnapshot method ?", "url": "https://github.com/kiegroup/optaplanner/pull/998#discussion_r517335992", "createdAt": "2020-11-04T13:19:09Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -92,6 +92,53 @@ pipeline {\n             }\n         }\n \n+        stage('Upload documentation and distribution') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    mavenCleanInstall('optaplanner', true, ['full'])\n+                    dir('optaplanner') {\n+                        withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n+                                             keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n+                            // For testing, simulate connection via SSH:\n+                            // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n+                            sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        stage('Update OptaPlanner website') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    final String websiteRepository = 'optaplanner-website'\n+                    dir(websiteRepository) {\n+                        String prBranchName = createWebsitePrBranch(websiteRepository)\n+\n+                        // Update versions in links on the website.\n+                        String nextMinorSnapshot = util.getNextVersion(getProjectVersion(), 'minor')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e98f508452c3bc16399729691143e91fbbabc5"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NDM4MQ==", "bodyText": "'minor' vs. 'micro'. But let me do a small change.", "url": "https://github.com/kiegroup/optaplanner/pull/998#discussion_r517344381", "createdAt": "2020-11-04T13:32:56Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -92,6 +92,53 @@ pipeline {\n             }\n         }\n \n+        stage('Upload documentation and distribution') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    mavenCleanInstall('optaplanner', true, ['full'])\n+                    dir('optaplanner') {\n+                        withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n+                                             keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n+                            // For testing, simulate connection via SSH:\n+                            // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n+                            sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        stage('Update OptaPlanner website') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    final String websiteRepository = 'optaplanner-website'\n+                    dir(websiteRepository) {\n+                        String prBranchName = createWebsitePrBranch(websiteRepository)\n+\n+                        // Update versions in links on the website.\n+                        String nextMinorSnapshot = util.getNextVersion(getProjectVersion(), 'minor')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzNTk5Mg=="}, "originalCommit": {"oid": "a9e98f508452c3bc16399729691143e91fbbabc5"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQxOTMwMw==", "bodyText": "Created separate methods getNextMicroSnapshotVersion and getNextMinorSnapshotVersion.", "url": "https://github.com/kiegroup/optaplanner/pull/998#discussion_r517419303", "createdAt": "2020-11-04T15:17:21Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -92,6 +92,53 @@ pipeline {\n             }\n         }\n \n+        stage('Upload documentation and distribution') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    mavenCleanInstall('optaplanner', true, ['full'])\n+                    dir('optaplanner') {\n+                        withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n+                                             keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n+                            // For testing, simulate connection via SSH:\n+                            // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n+                            sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        stage('Update OptaPlanner website') {\n+            when {\n+                expression { return isRelease() }\n+            }\n+            steps {\n+                script {\n+                    final String websiteRepository = 'optaplanner-website'\n+                    dir(websiteRepository) {\n+                        String prBranchName = createWebsitePrBranch(websiteRepository)\n+\n+                        // Update versions in links on the website.\n+                        String nextMinorSnapshot = util.getNextVersion(getProjectVersion(), 'minor')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzNTk5Mg=="}, "originalCommit": {"oid": "a9e98f508452c3bc16399729691143e91fbbabc5"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4124, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}