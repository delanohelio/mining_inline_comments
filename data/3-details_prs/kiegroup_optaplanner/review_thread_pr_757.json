{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4ODgzNDIz", "number": 757, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDoyODo1MlrOD2FzMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDozMjowOFrOD2F1Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDQ0NzIyOnYy", "diffSide": "RIGHT", "path": "optaplanner-benchmark/src/main/resources/org/optaplanner/benchmark/impl/report/benchmarkReport.html.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDoyODo1MlrOGLzo1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDoyODo1MlrOGLzo1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzMzU1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                Useful for comparing different score calculators and/or constraints implementations\n          \n          \n            \n                                                Useful for comparing different score calculators and/or constraint implementations", "url": "https://github.com/kiegroup/optaplanner/pull/757#discussion_r415033559", "createdAt": "2020-04-25T10:28:52Z", "author": {"login": "triceo"}, "path": "optaplanner-benchmark/src/main/resources/org/optaplanner/benchmark/impl/report/benchmarkReport.html.ftl", "diffHunk": "@@ -346,7 +346,7 @@\n                             <div class=\"tab-pane active\" id=\"summary_scoreCalculationSpeed\">\n                                 <h3>Score calculation speed summary</h3>\n                                 <p>\n-                                    Useful for comparing different score calculators and/or score rule implementations\n+                                    Useful for comparing different score calculators and/or constraints implementations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d3c506df165c9ecdbf717868184fabfe66c152"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDQ0NzQzOnYy", "diffSide": "RIGHT", "path": "optaplanner-benchmark/src/main/resources/org/optaplanner/benchmark/impl/report/benchmarkReport.html.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDoyOTowMFrOGLzo7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDoyOTowMFrOGLzo7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzMzU4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                Useful for comparing different score calculators and/or constraints implementations\n          \n          \n            \n                                                Useful for comparing different score calculators and/or constraint implementations", "url": "https://github.com/kiegroup/optaplanner/pull/757#discussion_r415033581", "createdAt": "2020-04-25T10:29:00Z", "author": {"login": "triceo"}, "path": "optaplanner-benchmark/src/main/resources/org/optaplanner/benchmark/impl/report/benchmarkReport.html.ftl", "diffHunk": "@@ -411,7 +411,7 @@\n                             <div class=\"tab-pane\" id=\"summary_worstScoreCalculationSpeedDifferencePercentage\">\n                                 <h3>Worst score calculation speed difference percentage</h3>\n                                 <p>\n-                                    Useful for comparing different score calculators and/or score rule implementations\n+                                    Useful for comparing different score calculators and/or constraints implementations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d3c506df165c9ecdbf717868184fabfe66c152"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDQ0OTcxOnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/domain/solution/drools/ProblemFactCollectionProperty.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDozMDozNFrOGLzp5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNzowNDozNFrOGMADOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzMzgzMA==", "bodyText": "This is not ideal either way. The original Javadoc assumed that we always use DRL, this one assumes we always use Constraint Streams. Maybe it should be more generic?", "url": "https://github.com/kiegroup/optaplanner/pull/757#discussion_r415033830", "createdAt": "2020-04-25T10:30:34Z", "author": {"login": "triceo"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/domain/solution/drools/ProblemFactCollectionProperty.java", "diffHunk": "@@ -20,24 +20,25 @@\n import java.lang.annotation.Target;\n import java.util.Collection;\n \n-import org.kie.api.runtime.KieSession;\n import org.optaplanner.core.api.domain.entity.PlanningEntity;\n import org.optaplanner.core.api.domain.solution.PlanningSolution;\n-import org.optaplanner.core.impl.score.director.drools.DroolsScoreDirector;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n import org.optaplanner.core.impl.solver.ProblemFactChange;\n \n-import static java.lang.annotation.ElementType.*;\n-import static java.lang.annotation.RetentionPolicy.*;\n+import static java.lang.annotation.ElementType.FIELD;\n+import static java.lang.annotation.ElementType.METHOD;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n \n /**\n  * Specifies that a property (or a field) on a {@link PlanningSolution} class is a {@link Collection} of problem facts.\n- * A problem fact must not change during solving (except through {@link ProblemFactChange} event).\n+ * A problem fact must not change during solving (except through a {@link ProblemFactChange} event).\n  * <p>\n- * The problem facts will be added as facts in the {@link KieSession} of the {@link DroolsScoreDirector},\n- * so the score rules can use them.\n+ * A {@link ConstraintProvider} builds constraints from such problem facts\n+ * with {@link ConstraintFactory#from(Class)}.\n  * <p>\n  * Do not annotate {@link PlanningEntity planning entities} as problem facts:\n- * they are automatically inserted into the {@link KieSession}.\n+ * they are automatically available as facts with {@link ConstraintFactory#from(Class)}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d3c506df165c9ecdbf717868184fabfe66c152"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzNjg0Ng==", "bodyText": "Given the philosophy \"ConstraintStreams First, Score DRL Second\", we can only skip Score DRL if it's not crucial. This is indeed a crucial concept - you're right. Let me see what I can make of it.", "url": "https://github.com/kiegroup/optaplanner/pull/757#discussion_r415236846", "createdAt": "2020-04-26T07:04:09Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/domain/solution/drools/ProblemFactCollectionProperty.java", "diffHunk": "@@ -20,24 +20,25 @@\n import java.lang.annotation.Target;\n import java.util.Collection;\n \n-import org.kie.api.runtime.KieSession;\n import org.optaplanner.core.api.domain.entity.PlanningEntity;\n import org.optaplanner.core.api.domain.solution.PlanningSolution;\n-import org.optaplanner.core.impl.score.director.drools.DroolsScoreDirector;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n import org.optaplanner.core.impl.solver.ProblemFactChange;\n \n-import static java.lang.annotation.ElementType.*;\n-import static java.lang.annotation.RetentionPolicy.*;\n+import static java.lang.annotation.ElementType.FIELD;\n+import static java.lang.annotation.ElementType.METHOD;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n \n /**\n  * Specifies that a property (or a field) on a {@link PlanningSolution} class is a {@link Collection} of problem facts.\n- * A problem fact must not change during solving (except through {@link ProblemFactChange} event).\n+ * A problem fact must not change during solving (except through a {@link ProblemFactChange} event).\n  * <p>\n- * The problem facts will be added as facts in the {@link KieSession} of the {@link DroolsScoreDirector},\n- * so the score rules can use them.\n+ * A {@link ConstraintProvider} builds constraints from such problem facts\n+ * with {@link ConstraintFactory#from(Class)}.\n  * <p>\n  * Do not annotate {@link PlanningEntity planning entities} as problem facts:\n- * they are automatically inserted into the {@link KieSession}.\n+ * they are automatically available as facts with {@link ConstraintFactory#from(Class)}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzMzgzMA=="}, "originalCommit": {"oid": "48d3c506df165c9ecdbf717868184fabfe66c152"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzNjkyMQ==", "bodyText": "I just hate importing KieSession here. I want to avoid that.", "url": "https://github.com/kiegroup/optaplanner/pull/757#discussion_r415236921", "createdAt": "2020-04-26T07:04:34Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/domain/solution/drools/ProblemFactCollectionProperty.java", "diffHunk": "@@ -20,24 +20,25 @@\n import java.lang.annotation.Target;\n import java.util.Collection;\n \n-import org.kie.api.runtime.KieSession;\n import org.optaplanner.core.api.domain.entity.PlanningEntity;\n import org.optaplanner.core.api.domain.solution.PlanningSolution;\n-import org.optaplanner.core.impl.score.director.drools.DroolsScoreDirector;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n import org.optaplanner.core.impl.solver.ProblemFactChange;\n \n-import static java.lang.annotation.ElementType.*;\n-import static java.lang.annotation.RetentionPolicy.*;\n+import static java.lang.annotation.ElementType.FIELD;\n+import static java.lang.annotation.ElementType.METHOD;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n \n /**\n  * Specifies that a property (or a field) on a {@link PlanningSolution} class is a {@link Collection} of problem facts.\n- * A problem fact must not change during solving (except through {@link ProblemFactChange} event).\n+ * A problem fact must not change during solving (except through a {@link ProblemFactChange} event).\n  * <p>\n- * The problem facts will be added as facts in the {@link KieSession} of the {@link DroolsScoreDirector},\n- * so the score rules can use them.\n+ * A {@link ConstraintProvider} builds constraints from such problem facts\n+ * with {@link ConstraintFactory#from(Class)}.\n  * <p>\n  * Do not annotate {@link PlanningEntity planning entities} as problem facts:\n- * they are automatically inserted into the {@link KieSession}.\n+ * they are automatically available as facts with {@link ConstraintFactory#from(Class)}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzMzgzMA=="}, "originalCommit": {"oid": "48d3c506df165c9ecdbf717868184fabfe66c152"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDQ1MDQ1OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/domain/solution/drools/ProblemFactProperty.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDozMTowMlrOGLzqOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDozMTowMlrOGLzqOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzMzkxMw==", "bodyText": "Dtto.", "url": "https://github.com/kiegroup/optaplanner/pull/757#discussion_r415033913", "createdAt": "2020-04-25T10:31:02Z", "author": {"login": "triceo"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/domain/solution/drools/ProblemFactProperty.java", "diffHunk": "@@ -19,25 +19,26 @@\n import java.lang.annotation.Retention;\n import java.lang.annotation.Target;\n \n-import org.kie.api.runtime.KieSession;\n import org.optaplanner.core.api.domain.constraintweight.ConstraintConfiguration;\n import org.optaplanner.core.api.domain.entity.PlanningEntity;\n import org.optaplanner.core.api.domain.solution.PlanningSolution;\n-import org.optaplanner.core.impl.score.director.drools.DroolsScoreDirector;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n import org.optaplanner.core.impl.solver.ProblemFactChange;\n \n-import static java.lang.annotation.ElementType.*;\n-import static java.lang.annotation.RetentionPolicy.*;\n+import static java.lang.annotation.ElementType.FIELD;\n+import static java.lang.annotation.ElementType.METHOD;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n \n /**\n  * Specifies that a property (or a field) on a {@link PlanningSolution} class is a problem fact.\n- * A problem fact must not change during solving (except through {@link ProblemFactChange} event).\n+ * A problem fact must not change during solving (except through a {@link ProblemFactChange} event).\n  * <p>\n- * The problem fact will be added as a fact in the {@link KieSession} of the {@link DroolsScoreDirector},\n- * so the score rules can use it.\n+ * A {@link ConstraintProvider} builds constraints from such a problem fact\n+ * with {@link ConstraintFactory#from(Class)}.\n  * <p>\n- * Do not annotate {@link PlanningEntity planning entities} or a {@link ConstraintConfiguration planning paramerization}\n- * as problem facts: they are automatically inserted into the {@link KieSession}.\n+ * Do not annotate a {@link PlanningEntity planning entity} or a {@link ConstraintConfiguration planning paramerization}\n+ * as a problem fact: they are automatically available as facts with {@link ConstraintFactory#from(Class)}.\n  * @see ProblemFactCollectionProperty\n  */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d3c506df165c9ecdbf717868184fabfe66c152"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDQ1MjQzOnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/solver/EnvironmentMode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDozMjowOFrOGLzrDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDozMjowOFrOGLzrDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzNDEyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * to fail-fast on a bug in a {@link Move} implementation, a constraint, the engine itself or something else\n          \n          \n            \n                 * at a horrible performance cost.\n          \n          \n            \n                 * to fail-fast on a bug in a {@link Move} implementation, a constraint, the engine itself or something else\n          \n          \n            \n                 * at an overwhelming performance cost.\n          \n      \n    \n    \n  \n\nSomehow appears more professional to me.", "url": "https://github.com/kiegroup/optaplanner/pull/757#discussion_r415034125", "createdAt": "2020-04-25T10:32:08Z", "author": {"login": "triceo"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/solver/EnvironmentMode.java", "diffHunk": "@@ -47,7 +47,7 @@\n     FULL_ASSERT,\n     /**\n      * This mode turns on several assertions (but not all of them)\n-     * to fail-fast on a bug in a {@link Move} implementation, a score rule, the rule engine itself or something else\n+     * to fail-fast on a bug in a {@link Move} implementation, a constraint, the engine itself or something else\n      * at a horrible performance cost.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d3c506df165c9ecdbf717868184fabfe66c152"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4505, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}