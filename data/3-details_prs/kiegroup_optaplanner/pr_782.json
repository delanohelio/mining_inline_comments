{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5OTQwMjA5", "number": 782, "title": "PLANNER-1983 Final easy deprecations", "bodyText": "", "createdAt": "2020-05-19T07:48:10Z", "url": "https://github.com/kiegroup/optaplanner/pull/782", "merged": true, "mergeCommit": {"oid": "113e0b54581c097d5a9809c2796e0548e8a7d2ca"}, "closed": true, "closedAt": "2020-05-20T09:45:44Z", "author": {"login": "triceo"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciuzUwAH2gAyNDE5OTQwMjA5OjIyZDVkNDI3MjA0M2M0NjQyN2JiYjNhMDc4MTU4Njk2YjMxZGRkYzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjFY9QgH2gAyNDE5OTQwMjA5OjY4NzRkZmE2NWEyZGNlMmRkMGNmZjRkODA1YTVkMmExM2RmN2E3MDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "22d5d4272043c46427bbb3a078158696b31dddc0", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/22d5d4272043c46427bbb3a078158696b31dddc0", "committedDate": "2020-05-19T06:51:12Z", "message": "Move variableListenerRef down"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73de7da561ece76c871014a2374d75c5accc1b3a", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/73de7da561ece76c871014a2374d75c5accc1b3a", "committedDate": "2020-05-19T06:57:30Z", "message": "@ProblemFact... annotations moved one level up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd7fe1cae551027a4569e40b3ea2fb3f33047801", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/fd7fe1cae551027a4569e40b3ea2fb3f33047801", "committedDate": "2020-05-19T07:29:37Z", "message": "Scanning annotated classes has been deprecated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddfc4102cf2df5fddf2c9a94f00df6337644b0c2", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/ddfc4102cf2df5fddf2c9a94f00df6337644b0c2", "committedDate": "2020-05-19T07:37:52Z", "message": "Config deprecations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7fafd0fd2597e3f2ac7d8d66c091e650b9de4c6", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e7fafd0fd2597e3f2ac7d8d66c091e650b9de4c6", "committedDate": "2020-05-19T07:43:30Z", "message": "Deprecate kieSessionName"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MTk3MzYy", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414197362", "createdAt": "2020-05-19T08:04:01Z", "commit": {"oid": "e7fafd0fd2597e3f2ac7d8d66c091e650b9de4c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODowNDowMVrOGXUg8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODowNDowMVrOGXUg8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwNjU0NQ==", "bodyText": "We should be careful here.\nIf for some reason we have to make 8 compatible with 7 tooling, we can not remove this.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427106545", "createdAt": "2020-05-19T08:04:01Z", "author": {"login": "triceo"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig.java", "diffHunk": "@@ -112,6 +111,7 @@\n     @XStreamConverter(KeyAsElementMapConverter.class)\n     protected Map<String, String> incrementalScoreCalculatorCustomProperties = null;\n \n+    @Deprecated(/* forRemoval = true */)\n     protected String ksessionName = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7fafd0fd2597e3f2ac7d8d66c091e650b9de4c6"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfaf171f5e60d54f1738fad191171653c8680a68", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/dfaf171f5e60d54f1738fad191171653c8680a68", "committedDate": "2020-05-19T08:20:22Z", "message": "Add missing Javadoc tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "965a4b7661b41fb1e4222e20f84164e9f39160ef", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/965a4b7661b41fb1e4222e20f84164e9f39160ef", "committedDate": "2020-05-19T08:36:27Z", "message": "ScoreManager gets extra methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "282697eab786a7ec70540a00ba087f2e1928c0a3", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/282697eab786a7ec70540a00ba087f2e1928c0a3", "committedDate": "2020-05-19T08:59:45Z", "message": "More deprecations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a76a59c4d1f0bdd040bb90e6f7ef7620d10607a", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/1a76a59c4d1f0bdd040bb90e6f7ef7620d10607a", "committedDate": "2020-05-19T09:19:29Z", "message": "Even more deprecations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjY0Njg2", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414264686", "createdAt": "2020-05-19T09:26:45Z", "commit": {"oid": "1a76a59c4d1f0bdd040bb90e6f7ef7620d10607a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOToyNjo0NlrOGXXyCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOToyNjo0NlrOGXXyCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2MDA3Mw==", "bodyText": "New API. Technically, this is a break of bwd compatibility for the interface.\nPractically, no way to avoid it.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427160073", "createdAt": "2020-05-19T09:26:46Z", "author": {"login": "triceo"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/ScoreManager.java", "diffHunk": "@@ -61,4 +63,33 @@\n      */\n     void updateScore(Solution_ solution);\n \n+    /**\n+     * Returns the {@link Score} of the solution.\n+     * <p>\n+     * This is useful for generic code, which doesn't know the type of the {@link PlanningSolution} to retrieve the\n+     * {@link Score} from the solution easily.\n+     * <p>\n+     * This method is thread-safe.\n+     *\n+     * @return null if the {@link PlanningSolution} is still uninitialized\n+     */\n+    Score getScore(Solution_ solution);\n+\n+    /**\n+     * Returns a diagnostic text that explains the solution through the {@link ConstraintMatch} API to identify which\n+     * constraints or planning entities cause that score quality.\n+     * In case of an {@link Score#isFeasible() infeasible} solution, this can help diagnose the cause of that.\n+     * <p>\n+     * Do not parse this string.\n+     * Instead, to provide this information in a UI or a service, use {@link SolverFactory#getScoreDirectorFactory()}\n+     * to retrieve {@link ScoreDirector#getConstraintMatchTotalMap()} and {@link ScoreDirector#getIndictmentMap()}\n+     * and convert those into a domain specific API.\n+     * <p>\n+     * This method is thread-safe.\n+     *\n+     * @return null if {@link #getScore(Object)} returns null with the same solution\n+     * @see ScoreDirector#explainScore()\n+     */\n+    String explainScore(Solution_ solution);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a76a59c4d1f0bdd040bb90e6f7ef7620d10607a"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjY0ODUy", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414264852", "createdAt": "2020-05-19T09:26:57Z", "commit": {"oid": "1a76a59c4d1f0bdd040bb90e6f7ef7620d10607a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOToyNjo1N1rOGXXyjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOToyNjo1N1rOGXXyjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2MDIwNw==", "bodyText": "New API. Technically, this is a break of bwd compatibility for the interface.\nPractically, no way to avoid it.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427160207", "createdAt": "2020-05-19T09:26:57Z", "author": {"login": "triceo"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/solver/SolverJob.java", "diffHunk": "@@ -72,4 +73,14 @@\n      */\n     Solution_ getFinalBestSolution() throws InterruptedException, ExecutionException;\n \n+    /**\n+     * Returns the {@link Duration} spent solving since the last start.\n+     * If it hasn't started it yet, it returns {@link Duration#ZERO}.\n+     * If it hasn't ended yet, it returns the time between the last start and now.\n+     * If it has ended already, it returns the time between the last start and the ending.\n+     *\n+     * @return the {@link Duration} spent solving since the last (re)start, at least 0\n+     */\n+    Duration getTimeSpent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a76a59c4d1f0bdd040bb90e6f7ef7620d10607a"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dbc04c8ac378b752447251499288a9eda64df8a", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/3dbc04c8ac378b752447251499288a9eda64df8a", "committedDate": "2020-05-19T09:31:45Z", "message": "Fix nanotime usage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a60b89a4315978f6f06507feeff88d0c6e2bc73", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/4a60b89a4315978f6f06507feeff88d0c6e2bc73", "committedDate": "2020-05-19T09:33:28Z", "message": "Hide things"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjcyMzk3", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414272397", "createdAt": "2020-05-19T09:36:31Z", "commit": {"oid": "4a60b89a4315978f6f06507feeff88d0c6e2bc73"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTozNjozMlrOGXYKDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTozNjozMlrOGXYKDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2NjIyMA==", "bodyText": "I converted the class to use nanos instead of millis. No need not to use the precision, if we have it.\nAlso, I've hidden the fields, since they have getters and setters and this is not performance-sensitive code.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427166220", "createdAt": "2020-05-19T09:36:32Z", "author": {"login": "triceo"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/scope/DefaultSolverScope.java", "diffHunk": "@@ -47,15 +48,15 @@\n      */\n     protected Semaphore runnableThreadSemaphore = null;\n \n-    protected volatile Long startingSystemTimeMillis;\n-    protected volatile Long endingSystemTimeMillis;\n+    private volatile Long startingSystemTimeNanos;\n+    private volatile Long endingSystemTimeNanos;\n     protected long childThreadsScoreCalculationCount = 0;\n \n     protected Score startingInitializedScore;\n \n     protected volatile Solution_ bestSolution;\n     protected volatile Score bestScore;\n-    protected Long bestSolutionTimeMillis;\n+    private Long bestSolutionTimeNanos;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a60b89a4315978f6f06507feeff88d0c6e2bc73"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261a73efb6ac8cdc718be075034689a38b8a487f", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/261a73efb6ac8cdc718be075034689a38b8a487f", "committedDate": "2020-05-19T09:41:33Z", "message": "Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd2feec5d178bde4edbf35f8ab1a25c45ca78888", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/cd2feec5d178bde4edbf35f8ab1a25c45ca78888", "committedDate": "2020-05-19T10:30:55Z", "message": "Incorporate duplicated annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c7706305ef80a14f7d1f7dff7da3658fd9e0d3c", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/0c7706305ef80a14f7d1f7dff7da3658fd9e0d3c", "committedDate": "2020-05-19T11:13:30Z", "message": "Make the docs correct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "717a55e146ab43e6a2d33a01e5ef34ec08d7d21d", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/717a55e146ab43e6a2d33a01e5ef34ec08d7d21d", "committedDate": "2020-05-19T11:20:04Z", "message": "Fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60", "committedDate": "2020-05-19T11:26:04Z", "message": "Fix whitespace issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTQ0ODA4", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414544808", "createdAt": "2020-05-19T15:06:49Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTowNjo0OVrOGXlDcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTowNjo0OVrOGXlDcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3NzUyMA==", "bodyText": "This doesn't calculate the score, but it only extracts it right?", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427377520", "createdAt": "2020-05-19T15:06:49Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/ScoreManager.java", "diffHunk": "@@ -61,4 +63,33 @@\n      */\n     void updateScore(Solution_ solution);\n \n+    /**\n+     * Returns the {@link Score} of the solution.\n+     * <p>\n+     * This is useful for generic code, which doesn't know the type of the {@link PlanningSolution} to retrieve the\n+     * {@link Score} from the solution easily.\n+     * <p>\n+     * This method is thread-safe.\n+     *\n+     * @return null if the {@link PlanningSolution} is still uninitialized\n+     */\n+    Score getScore(Solution_ solution);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTQ2MzA3", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414546307", "createdAt": "2020-05-19T15:08:19Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTowODoxOVrOGXlH3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTowODoxOVrOGXlH3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3ODY1Mw==", "bodyText": "copy paste bug: should be in favor of ScoreManager#getScore(...)", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427378653", "createdAt": "2020-05-19T15:08:19Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/solver/Solver.java", "diffHunk": "@@ -105,7 +109,9 @@\n      * This method is thread-safe.\n      *\n      * @return null if the {@link PlanningSolution} is still uninitialized\n+     * @deprecated in favor of {@link ScoreManager#explainScore(Object)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTQ4MzA5", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414548309", "createdAt": "2020-05-19T15:10:25Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxMDoyNVrOGXlN6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxMDoyNVrOGXlN6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4MDIwMA==", "bodyText": "in favor of Quarkus extension or Spring Boot starter.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427380200", "createdAt": "2020-05-19T15:10:25Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/domain/ReflectionsWorkaroundClasspathHelper.java", "diffHunk": "@@ -38,7 +38,10 @@\n /**\n  * Workaround for bug in {@link ClasspathHelper}.\n  * This workaround expires once https://github.com/ronmamo/reflections/pull/118 is fixed.\n+ * \n+ * @deprecated for removal.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTQ4NTY0", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414548564", "createdAt": "2020-05-19T15:10:40Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxMDo0MFrOGXlOqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxMDo0MFrOGXlOqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4MDM5Mw==", "bodyText": "in favor of Quarkus extension or Spring Boot starter.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427380393", "createdAt": "2020-05-19T15:10:40Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/domain/ScanAnnotatedClassesConfig.java", "diffHunk": "@@ -37,7 +37,11 @@\n import com.thoughtworks.xstream.annotations.XStreamAlias;\n import com.thoughtworks.xstream.annotations.XStreamImplicit;\n \n+/**\n+ * @deprecated This functionality will be removed in the next major version of OptaPlanner.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTUyNTQ3", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414552547", "createdAt": "2020-05-19T15:14:40Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxNDo0MFrOGXlaqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxNDo0MFrOGXlaqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4MzQ2Ng==", "bodyText": "deprecated in favor of the Quarkus extension or Spring Boot starter which handle annotation scanning more efficiently.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427383466", "createdAt": "2020-05-19T15:14:40Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/solver/SolverConfig.java", "diffHunk": "@@ -235,7 +235,11 @@ public static SolverConfig createFromXmlReader(Reader reader, ClassLoader classL\n     protected Integer moveThreadBufferSize = null;\n     protected Class<? extends ThreadFactory> threadFactoryClass = null;\n \n+    /**\n+     * @deprecated This functionality will be removed in the next major version of OptaPlanner.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTU1MTU0", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414555154", "createdAt": "2020-05-19T15:17:15Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxNzoxNVrOGXliXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxNzoxNVrOGXliXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4NTQzNg==", "bodyText": "deprecated in favor of the Quarkus extension or Spring Boot starter which handle annotation scanning more efficiently.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427385436", "createdAt": "2020-05-19T15:17:15Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/solver/SolverConfig.java", "diffHunk": "@@ -354,10 +358,18 @@ public void setThreadFactoryClass(Class<? extends ThreadFactory> threadFactoryCl\n         this.threadFactoryClass = threadFactoryClass;\n     }\n \n+    /**\n+     * @deprecated This functionality will be removed in the next major version of OptaPlanner.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTU1MjEw", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414555210", "createdAt": "2020-05-19T15:17:19Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxNzoxOVrOGXlijQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxNzoxOVrOGXlijQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4NTQ4NQ==", "bodyText": "deprecated in favor of the Quarkus extension or Spring Boot starter which handle annotation scanning more efficiently.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427385485", "createdAt": "2020-05-19T15:17:19Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/solver/SolverConfig.java", "diffHunk": "@@ -354,10 +358,18 @@ public void setThreadFactoryClass(Class<? extends ThreadFactory> threadFactoryCl\n         this.threadFactoryClass = threadFactoryClass;\n     }\n \n+    /**\n+     * @deprecated This functionality will be removed in the next major version of OptaPlanner.\n+     */\n+    @Deprecated(/* forRemoval = true */)\n     public ScanAnnotatedClassesConfig getScanAnnotatedClassesConfig() {\n         return scanAnnotatedClassesConfig;\n     }\n \n+    /**\n+     * @deprecated This functionality will be removed in the next major version of OptaPlanner.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTU2MzU0", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414556354", "createdAt": "2020-05-19T15:18:31Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxODozMlrOGXlmCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxODozMlrOGXlmCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4NjM3Nw==", "bodyText": "ok, so getScore() doesn't just extract it, but calculates it?\nWe can't have 2 methods that do exactly the same, so I guess updateScore() needs to be deprecated?", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427386377", "createdAt": "2020-05-19T15:18:32Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/DefaultScoreManager.java", "diffHunk": "@@ -38,10 +39,22 @@ public DefaultScoreManager(ScoreDirectorFactory<Solution_> scoreDirectorFactory)\n \n     @Override\n     public void updateScore(Solution_ solution) {\n+        getScore(solution);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTU4NDM4", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414558438", "createdAt": "2020-05-19T15:20:34Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToyMDozNFrOGXlsOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToyMDozNFrOGXlsOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4Nzk2Mg==", "bodyText": "This needs to be renamed to calculateScore().\nI would also deprecate updateScore() (unless we decide to just keep that and have it return the score).\nIt's surprising that getScore() or calculateScore also changes the Solution instance. Let's talk about this on zulip and bluejeans.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427387962", "createdAt": "2020-05-19T15:20:34Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/DefaultScoreManager.java", "diffHunk": "@@ -38,10 +39,22 @@ public DefaultScoreManager(ScoreDirectorFactory<Solution_> scoreDirectorFactory)\n \n     @Override\n     public void updateScore(Solution_ solution) {\n+        getScore(solution);\n+    }\n+\n+    @Override\n+    public Score getScore(Solution_ solution) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTYxMDkw", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414561090", "createdAt": "2020-05-19T15:23:12Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToyMzoxMlrOGXl0Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToyMzoxMlrOGXl0Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5MDAyMw==", "bodyText": "This is dangerous, from https://www.geeksforgeeks.org/java-system-nanotime-vs-system-currenttimemillis/\nCons:\nThe result reflected doesn\u2019t have any fixed reference point. According to Java documentation,\n\nThe value returned represents nanoseconds since some fixed\nbut arbitrary time (perhaps in the future, so values may be negative).\n\nLess accurate. This method provides nanosecond precision, but not necessarily nanosecond accuracy. No guarantees are made about how frequently values change.\nDepending on the system, it can take more than 100 cpu cycles to execute.\nNot thread safe. May return erroneous results if used between more than one threads.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427390023", "createdAt": "2020-05-19T15:23:12Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/DefaultSolver.java", "diffHunk": "@@ -125,17 +126,17 @@ public String explainBestScore() {\n \n     @Override\n     public long getTimeMillisSpent() {\n-        Long startingSystemTimeMillis = solverScope.getStartingSystemTimeMillis();\n-        if (startingSystemTimeMillis == null) {\n+        Long startingSystemTimeNanos = solverScope.getStartingSystemTimeNanos();\n+        if (startingSystemTimeNanos == null) {\n             // The solver hasn't started yet\n             return 0L;\n         }\n-        Long endingSystemTimeMillis = solverScope.getEndingSystemTimeMillis();\n-        if (endingSystemTimeMillis == null) {\n+        Long endingSystemTimeNanos = solverScope.getEndingSystemTimeNanos();\n+        if (endingSystemTimeNanos == null) {\n             // The solver hasn't ended yet\n-            endingSystemTimeMillis = System.currentTimeMillis();\n+            endingSystemTimeNanos = System.nanoTime();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTY1OTQz", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414565943", "createdAt": "2020-05-19T15:28:05Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToyODowNVrOGXmDDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToyODowNVrOGXmDDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5MzgwNw==", "bodyText": "typo impossile", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427393807", "createdAt": "2020-05-19T15:28:05Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/DefaultSolverJob.java", "diffHunk": "@@ -61,7 +63,11 @@ public DefaultSolverJob(\n             BiConsumer<? super ProblemId_, ? super Throwable> exceptionHandler) {\n         this.solverManager = solverManager;\n         this.problemId = problemId;\n-        this.solver = solver;\n+        if (!(solver instanceof DefaultSolver)) {\n+            throw new IllegalStateException(\n+                    \"Impossile state: solver is not instance of \" + DefaultSolver.class.getSimpleName() + \".\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTczODkw", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-414573890", "createdAt": "2020-05-19T15:36:17Z", "commit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTozNjoxN1rOGXmZ8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTozNjoxN1rOGXmZ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5OTY2NQ==", "bodyText": "Do we have a testdata unit test that still uses these deprecated ProblemFactCollectionProperty? (Including a // TODO remove in 8.0)\nAlmost all of our users use this, many won't refactor quickly. We need to make sure this keeps working during the course of the 7.x time.", "url": "https://github.com/kiegroup/optaplanner/pull/782#discussion_r427399665", "createdAt": "2020-05-19T15:36:17Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/domain/solution/drools/ProblemFactCollectionProperty.java", "diffHunk": "@@ -40,10 +40,11 @@\n  * Do not annotate {@link PlanningEntity planning entities} as problem facts:\n  * they are automatically available as facts for {@link ConstraintFactory#from(Class)} or DRL.\n  *\n- * @see ProblemFactProperty\n+ * @deprecated In favor of {@link org.optaplanner.core.api.domain.solution.ProblemFactCollectionProperty}.\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)\n+@Deprecated(/* forRemoval = true */)\n public @interface ProblemFactCollectionProperty {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c6ad7d8df26b8508f20ac4194f9a2d0f25a60"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39b7e601fa14242d0c32b58f78864a9b00c4310f", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/39b7e601fa14242d0c32b58f78864a9b00c4310f", "committedDate": "2020-05-20T06:46:38Z", "message": "Revert \"Deprecate kieSessionName\"\n\nThis reverts commit e7fafd0f"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa3ce52550f5b0cbabb32376fd00e647b4c853e6", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/aa3ce52550f5b0cbabb32376fd00e647b4c853e6", "committedDate": "2020-05-20T06:53:36Z", "message": "Revert the millis to nanos change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0830c0d71b6a141d965f08a3805326bcfa7e1256", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/0830c0d71b6a141d965f08a3805326bcfa7e1256", "committedDate": "2020-05-20T07:02:15Z", "message": "Typos and wording changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4888103b2ebe933d458550dedabaee850eac9704", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/4888103b2ebe933d458550dedabaee850eac9704", "committedDate": "2020-05-20T07:07:31Z", "message": "Add test for deprecated annotations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTIwOTI3", "url": "https://github.com/kiegroup/optaplanner/pull/782#pullrequestreview-415120927", "createdAt": "2020-05-20T08:47:40Z", "commit": {"oid": "4888103b2ebe933d458550dedabaee850eac9704"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0cf5a44cc2a61ef1f955b9ff5f98dc9d5bc1f61", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/c0cf5a44cc2a61ef1f955b9ff5f98dc9d5bc1f61", "committedDate": "2020-05-20T09:02:56Z", "message": "getTimeSpent() renamed to getSolvingDuration()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a046f600bdbb3b6ba8d6ccadb55f24269d295436", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/a046f600bdbb3b6ba8d6ccadb55f24269d295436", "committedDate": "2020-05-20T09:08:32Z", "message": "Final deprecations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6874dfa65a2dce2dd0cff4d805a5d2a13df7a700", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/6874dfa65a2dce2dd0cff4d805a5d2a13df7a700", "committedDate": "2020-05-20T09:10:13Z", "message": "Fix Revapi"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2994, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}