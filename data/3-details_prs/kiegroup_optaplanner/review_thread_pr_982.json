{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NTg2MjY2", "number": 982, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDoyMDo1MVrOEwRxrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMToyNzo1OVrOE0Vs5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDU4MzQ4OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/common/rules/AbstractRuleAssembler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDoyMDo1MVrOHlvBhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDoyMjo0OFrOHlvIOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMyOTc5Ng==", "bodyText": "If we want to do this (and the jury is out on that), then we 'd want to comment here clearly why we're sweeping this under the mat.", "url": "https://github.com/kiegroup/optaplanner/pull/982#discussion_r509329796", "createdAt": "2020-10-21T14:20:51Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/common/rules/AbstractRuleAssembler.java", "diffHunk": "@@ -105,7 +105,11 @@ protected static void impactScore(DroolsConstraint constraint, Drools drools, Ab\n             BigDecimal impact) {\n         RuleContext kcontext = (RuleContext) drools;\n         constraint.assertCorrectImpact(impact);\n-        scoreHolder.impactScore(kcontext, impact);\n+        try {\n+            scoreHolder.impactScore(kcontext, impact);\n+        } catch (UnsupportedOperationException exception) {\n+\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be31d7a4c562c63782e2af25340ee64865fa19c"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMTUxMw==", "bodyText": "Yeah, sorry, this catch shouldn't be there at all. :-)", "url": "https://github.com/kiegroup/optaplanner/pull/982#discussion_r509331513", "createdAt": "2020-10-21T14:22:48Z", "author": {"login": "triceo"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/common/rules/AbstractRuleAssembler.java", "diffHunk": "@@ -105,7 +105,11 @@ protected static void impactScore(DroolsConstraint constraint, Drools drools, Ab\n             BigDecimal impact) {\n         RuleContext kcontext = (RuleContext) drools;\n         constraint.assertCorrectImpact(impact);\n-        scoreHolder.impactScore(kcontext, impact);\n+        try {\n+            scoreHolder.impactScore(kcontext, impact);\n+        } catch (UnsupportedOperationException exception) {\n+\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMyOTc5Ng=="}, "originalCommit": {"oid": "5be31d7a4c562c63782e2af25340ee64865fa19c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzE2OTY2OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/simple/SimpleScoreHolderImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMToyNzo1OVrOHsAlQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMToyNzo1OVrOHsAlQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkwODkyOQ==", "bodyText": "nitpick: Typically we don't end the Maybe sentences with a question mark (?), but with a dot (.).", "url": "https://github.com/kiegroup/optaplanner/pull/982#discussion_r515908929", "createdAt": "2020-11-02T11:27:59Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/simple/SimpleScoreHolderImpl.java", "diffHunk": "@@ -104,6 +105,22 @@ public void impactScore(RuleContext kcontext, int weightMultiplier) {\n         matchExecutor.accept(kcontext, weightMultiplier);\n     }\n \n+    @Override\n+    public void impactScore(RuleContext kcontext, long weightMultiplier) {\n+        throw new UnsupportedOperationException(\"In the rule (\" + kcontext.getRule().getName()\n+                + \"), the scoreHolder class (\" + getClass()\n+                + \") does not support a long weightMultiplier (\" + weightMultiplier + \").\\n\"\n+                + \"If you're using constraint streams, maybe switch from penalizeLong() to penalize()?\");\n+    }\n+\n+    @Override\n+    public void impactScore(RuleContext kcontext, BigDecimal weightMultiplier) {\n+        throw new UnsupportedOperationException(\"In the rule (\" + kcontext.getRule().getName()\n+                + \"), the scoreHolder class (\" + getClass()\n+                + \") does not support a BigDecimal weightMultiplier (\" + weightMultiplier + \").\\n\"\n+                + \"If you're using constraint streams, maybe switch from penalizeBigDecimal() to penalize()?\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7daa0ba0e1f0e5c54acdb851916b196b9b2c0994"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4301, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}