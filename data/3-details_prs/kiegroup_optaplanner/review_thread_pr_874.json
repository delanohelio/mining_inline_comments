{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MzkwMzE5", "number": 874, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDo1NDoyNFrOEWvnWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTowNDozNVrOEWvyxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjg0MjQ4OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/AbstractScoreDirector.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDo1NDoyNFrOG-J1HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDo1NDoyNFrOG-J1HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgyNTk0OA==", "bodyText": "soft suggestion: how about making these default limits class constants?", "url": "https://github.com/kiegroup/optaplanner/pull/874#discussion_r467825948", "createdAt": "2020-08-10T10:54:24Z", "author": {"login": "rsynek"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/AbstractScoreDirector.java", "diffHunk": "@@ -300,20 +303,22 @@ protected void setCalculatedScore(Score score) {\n         calculationCount++;\n     }\n \n-    @Override\n-    public String explainScore() {\n-        final int INDICTMENT_LIMIT = 5;\n-        final int CONSTRAINT_MATCH_LIMIT = 2;\n-        Score workingScore = calculateScore();\n-        Collection<ConstraintMatchTotal> constraintMatchTotals = getConstraintMatchTotalMap().values();\n-        StringBuilder scoreExplanation = new StringBuilder((constraintMatchTotals.size() + 4 + 2 * INDICTMENT_LIMIT) * 80);\n+    public static String explainScore(Score workingScore,\n+            Collection<ConstraintMatchTotal> constraintMatchTotalCollection,\n+            Collection<Indictment> indictmentCollection) {\n+        return explainScore(workingScore, constraintMatchTotalCollection, indictmentCollection, 5, 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8590f8fcfd14fdc9af5f5b37512b0a2337cc5741"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjg3MTc0OnYy", "diffSide": "RIGHT", "path": "optaplanner-test/src/main/java/org/optaplanner/test/impl/score/stream/DefaultSingleConstraintAssertion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTowNDozNVrOG-KGRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTowNDozNVrOG-KGRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgzMDM0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import static java.util.Objects.*;\n          \n          \n            \n            import static java.util.Objects.requireNonNull;", "url": "https://github.com/kiegroup/optaplanner/pull/874#discussion_r467830340", "createdAt": "2020-08-10T11:04:35Z", "author": {"login": "rsynek"}, "path": "optaplanner-test/src/main/java/org/optaplanner/test/impl/score/stream/DefaultSingleConstraintAssertion.java", "diffHunk": "@@ -16,16 +16,21 @@\n \n package org.optaplanner.test.impl.score.stream;\n \n+import static java.util.Objects.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8590f8fcfd14fdc9af5f5b37512b0a2337cc5741"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4397, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}