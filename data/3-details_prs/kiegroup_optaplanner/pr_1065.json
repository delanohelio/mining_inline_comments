{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNzUxNDY1", "number": 1065, "title": "PLANNER-2265 Add score-drl property", "bodyText": "JIRA\nhttps://issues.redhat.com/browse/PLANNER-2265\n\n\nReferenced pull requests\n\n\nChecklist\n\n Documentation updated if applicable.\n Upgrade recipe provided if applicable.\n\n\n\nHow to retest this PR or trigger a specific build:\n\n\nfor a pull request build please add comment: Jenkins retest this\nfor a full downstream build please add comment: Jenkins run fdb\nfor a compile downstream build please add comment: Jenkins run cdb\nfor a full production downstream build please add comment: Jenkins execute product fdb\nfor an upstream build please add comment: Jenkins run upstream", "createdAt": "2020-12-07T15:21:30Z", "url": "https://github.com/kiegroup/optaplanner/pull/1065", "merged": true, "mergeCommit": {"oid": "d95429361f56331d681a2c04f39178b9ad24f6be"}, "closed": true, "closedAt": "2020-12-16T07:46:03Z", "author": {"login": "rsynek"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdj54AkgBqjQwODEwNjkyMzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmfkZPABqjQxMTYzMDI4MzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfa5a92628ca3edf9b182118858c792cb3aba7a4", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/cfa5a92628ca3edf9b182118858c792cb3aba7a4", "committedDate": "2020-12-07T15:13:47Z", "message": "PLANNER-2265 Add constraints-drl property"}, "afterCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/5c36263858a5f3774745b0326ea4f2193e2c69ee", "committedDate": "2020-12-07T18:30:10Z", "message": "PLANNER-2265 Add constraints-drl property"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTE4Mjk1", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547918295", "createdAt": "2020-12-09T07:56:21Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo1NjoyMVrOICHAwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo1NjoyMVrOICHAwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA4Mjk0NQ==", "bodyText": "It's not a simple getter and it's for a toString, so how about we call it composeScoreDrlAndScoreDrlFileToString?\nIt might not be clear for everyone that DrlResourcesAndFiles applies to scoreDrl and scoreDrlFile.", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539082945", "createdAt": "2020-12-09T07:56:21Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/ScoreDirectorFactoryFactory.java", "diffHunk": "@@ -139,6 +144,29 @@ public ScoreDirectorFactoryFactory(ScoreDirectorFactoryConfig config) {\n         return scoreDirectorFactory;\n     }\n \n+    protected String getDrlResourcesAndFilesOverview() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTE4ODM5", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547918839", "createdAt": "2020-12-09T07:57:10Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo1NzoxMFrOICHCrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo1NzoxMFrOICHCrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA4MzQzOA==", "bodyText": "It might not be clear for everyone that droolsScoreDirectorFactory applies to scoreDrl and scoreDrlFile in their solverConfig.xml, making it much harder to fix the error.", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539083438", "createdAt": "2020-12-09T07:57:10Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/ScoreDirectorFactoryFactory.java", "diffHunk": "@@ -108,16 +109,20 @@ public ScoreDirectorFactoryFactory(ScoreDirectorFactoryConfig config) {\n                 .filter(Objects::nonNull).count() > 1) {\n             List<String> scoreDirectorFactoryPropertyList = new ArrayList<>(4);\n             if (easyScoreDirectorFactory != null) {\n-                scoreDirectorFactoryPropertyList.add(\"an easyScoreCalculatorClass\");\n+                scoreDirectorFactoryPropertyList\n+                        .add(\"an easyScoreCalculatorClass (\" + config.getEasyScoreCalculatorClass().getName() + \")\");\n             }\n             if (constraintStreamScoreDirectorFactory != null) {\n-                scoreDirectorFactoryPropertyList.add(\"a constraintProviderClass\");\n+                scoreDirectorFactoryPropertyList\n+                        .add(\"a constraintProviderClass (\" + config.getConstraintProviderClass().getName() + \")\");\n             }\n             if (incrementalScoreDirectorFactory != null) {\n-                scoreDirectorFactoryPropertyList.add(\"an incrementalScoreCalculatorClass\");\n+                scoreDirectorFactoryPropertyList.add(\n+                        \"an incrementalScoreCalculatorClass (\" + config.getIncrementalScoreCalculatorClass().getName() + \")\");\n             }\n             if (droolsScoreDirectorFactory != null) {\n-                scoreDirectorFactoryPropertyList.add(\"a droolsScoreDirectorFactory\");\n+                scoreDirectorFactoryPropertyList\n+                        .add(\"a droolsScoreDirectorFactory (\" + getDrlResourcesAndFilesOverview() + \")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTIzNTAx", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547923501", "createdAt": "2020-12-09T08:04:51Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODowNDo1MVrOICHTtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODowNDo1MVrOICHTtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA4Nzc5OA==", "bodyText": "docs style guidelines: \"must not be defined\" is too passive tense (= too verbose). The tell tale sign is the \"be\".\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This property must NOT be defined in case a `ConstraintProvider` implementation or other score calculation type exists.\n          \n          \n            \n            Do note define this property when a `ConstraintProvider` implementation or other score calculation type exists.", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539087798", "createdAt": "2020-12-09T08:04:51Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/Integration/Integration-chapter.adoc", "diffHunk": "@@ -508,6 +508,10 @@ optaplanner.solver-config-xml::\n A classpath resource to read the solver configuration XML.\n Defaults to `solverConfig.xml`.\n If this property isn't specified, that file is optional.\n+optaplanner.constraints-drl::\n+A classpath resource to read the solver score DRL.\n+Defaults to `constraints.drl`.\n+This property must NOT be defined in case a `ConstraintProvider` implementation or other score calculation type exists.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTI4Njkx", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547928691", "createdAt": "2020-12-09T08:09:36Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODowOTozN1rOICHguw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODowOTozN1rOICHguw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MTEzMQ==", "bodyText": "Very soft suggestion: I can't explain why, but \"solver score DRL\" doesn't sound right to me, maybe because it implies there is a difference between \"score DRL\" and \"solver score DRL\"? (which there is not). 3 lines, above, \"Solver configuration XML\" is right.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A classpath resource to read the solver score DRL.\n          \n          \n            \n            A classpath resource to read the score DRL.", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539091131", "createdAt": "2020-12-09T08:09:37Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/Integration/Integration-chapter.adoc", "diffHunk": "@@ -508,6 +508,10 @@ optaplanner.solver-config-xml::\n A classpath resource to read the solver configuration XML.\n Defaults to `solverConfig.xml`.\n If this property isn't specified, that file is optional.\n+optaplanner.constraints-drl::\n+A classpath resource to read the solver score DRL.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTI5MjI2", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547929226", "createdAt": "2020-12-09T08:10:29Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoxMDoyOVrOICHjvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoxMDoyOVrOICHjvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MTkwMg==", "bodyText": "This is documented in the Spring boot section. We need it copy paste into the Quarkus section too.", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539091902", "createdAt": "2020-12-09T08:10:29Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/Integration/Integration-chapter.adoc", "diffHunk": "@@ -508,6 +508,10 @@ optaplanner.solver-config-xml::\n A classpath resource to read the solver configuration XML.\n Defaults to `solverConfig.xml`.\n If this property isn't specified, that file is optional.\n+optaplanner.constraints-drl::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTMxMjAx", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547931201", "createdAt": "2020-12-09T08:13:16Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoxMzoxNlrOICHsJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoxMzoxNlrOICHsJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5NDA1NQ==", "bodyText": "None of the other properties have a hard coded string like this in the non-test classes. Can we move it to the test class?\nI am a fan of hard coded strings in tests, especially if those strings are part of the public API,\njust like I am of hard coding values in tests:\nassertjEquals(calculator.plus(3, 4), 7)\nis better than\nassertjEquals(calculator.plus(SUM_PART_1, SUM_PART_2), SUM_TOTAL)\nI think.", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539094055", "createdAt": "2020-12-09T08:13:16Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerBuildTimeConfig.java", "diffHunk": "@@ -31,6 +32,8 @@\n public class OptaPlannerBuildTimeConfig {\n \n     public static final String DEFAULT_SOLVER_CONFIG_URL = \"solverConfig.xml\";\n+    public static final String DEFAULT_CONSTRAINTS_DRL_URL = \"constraints.drl\";\n+    public static final String CONSTRAINTS_DRL_PROPERTY = \"quarkus.optaplanner.constraints-drl\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTM0MDEy", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547934012", "createdAt": "2020-12-09T08:17:24Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoxNzoyNFrOICH2Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoxNzoyNFrOICH2Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5NjY2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This property must NOT be defined in case a {@link ConstraintProvider} implementation exists.\n          \n          \n            \n                 * Do note define this property when a {@link ConstraintProvider}, {@link EasyScoreCalculator} or {@link IncrementalScoreCalculator} class exists.", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539096662", "createdAt": "2020-12-09T08:17:24Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerBuildTimeConfig.java", "diffHunk": "@@ -40,6 +43,14 @@\n     @ConfigItem\n     Optional<String> solverConfigXml;\n \n+    /**\n+     * A classpath resource to read the solver score DRL.\n+     * Defaults to \"{@link #DEFAULT_CONSTRAINTS_DRL_URL}\".\n+     * This property must NOT be defined in case a {@link ConstraintProvider} implementation exists.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTM5NTI3", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547939527", "createdAt": "2020-12-09T08:25:15Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoyNToxNVrOICIJBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoyNToxNVrOICIJBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEwMTQ0NA==", "bodyText": "(important)\nShould this be constraintsDrl or scoreDRL? (regardless of what we decided before)\nI'd argue there is no point in naming things in application.properties and solverConfig.xml differently if they do the same thing. It just creates unneeded complexity and takes a user's brainpower unnecessarily. Wdyt?", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539101444", "createdAt": "2020-12-09T08:25:15Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerBuildTimeConfig.java", "diffHunk": "@@ -40,6 +43,14 @@\n     @ConfigItem\n     Optional<String> solverConfigXml;\n \n+    /**\n+     * A classpath resource to read the solver score DRL.\n+     * Defaults to \"{@link #DEFAULT_CONSTRAINTS_DRL_URL}\".\n+     * This property must NOT be defined in case a {@link ConstraintProvider} implementation exists.\n+     */\n+    @ConfigItem\n+    Optional<String> constraintsDrl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTU0ODU5", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547954859", "createdAt": "2020-12-09T08:45:42Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODo0NTo0MlrOICI8mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODo0NTo0MlrOICI8mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTExNDY0OQ==", "bodyText": "I'd argue that this fail fast duplicates a fail-fast in SolverFactory.create(solverConfig).\nAlso, if we ever support SolverConfigCustomizer in Spring Boot, we can do these checks here yet, because the customer might \"fix it\".", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539114649", "createdAt": "2020-12-09T08:45:42Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessor.java", "diffHunk": "@@ -211,31 +214,77 @@ private void applySolverProperties(RecorderContext recorderContext,\n     }\n \n     private void applyScoreDirectorFactoryProperties(IndexView indexView, SolverConfig solverConfig) {\n+        Optional<String> constraintsDrlFromProperty = constraintsDrl();\n+        Optional<String> defaultConstraintsDrl = defaultConstraintsDrl();\n+        Optional<String> effectiveConstraintsDrl = constraintsDrlFromProperty.map(Optional::of).orElse(defaultConstraintsDrl);\n         if (solverConfig.getScoreDirectorFactoryConfig() == null) {\n-            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = new ScoreDirectorFactoryConfig();\n-            scoreDirectorFactoryConfig.setEasyScoreCalculatorClass(\n-                    findImplementingClass(DotNames.EASY_SCORE_CALCULATOR, indexView));\n-            scoreDirectorFactoryConfig.setConstraintProviderClass(\n-                    findImplementingClass(DotNames.CONSTRAINT_PROVIDER, indexView));\n-            scoreDirectorFactoryConfig.setIncrementalScoreCalculatorClass(\n-                    findImplementingClass(DotNames.INCREMENTAL_SCORE_CALCULATOR, indexView));\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig =\n+                    defaultScoreDirectoryFactoryConfig(indexView, effectiveConstraintsDrl);\n+            solverConfig.setScoreDirectorFactoryConfig(scoreDirectorFactoryConfig);\n+        } else {\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = solverConfig.getScoreDirectorFactoryConfig();\n+            if (constraintsDrlFromProperty.isPresent()) {\n+                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(constraintsDrlFromProperty.get()));\n+            } else {\n+                if (scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n+                    defaultConstraintsDrl.ifPresent((resolvedConstraintsDrl) -> scoreDirectorFactoryConfig\n+                            .setScoreDrlList(Collections.singletonList(resolvedConstraintsDrl)));\n+                }\n+            }\n+        }\n+\n+        if (solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList() != null) {\n             ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n-            if (classLoader.getResource(SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL) != null) {\n-                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(\n-                        SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL));\n+            try {\n+                Class.forName(\"org.drools.dynamic.DynamicComponentsSupplier\", false, classLoader);\n+            } catch (ClassNotFoundException e) {\n+                throw new IllegalStateException(\n+                        \"Constraints DRL has been detected, but drools-core-dynamic is not on classpath.\"\n+                                + \" Maybe try adding it. Please note that constraints DRL does not work in the native mode.\");\n             }\n-            if (scoreDirectorFactoryConfig.getEasyScoreCalculatorClass() == null\n-                    && scoreDirectorFactoryConfig.getConstraintProviderClass() == null\n-                    && scoreDirectorFactoryConfig.getIncrementalScoreCalculatorClass() == null\n-                    && scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n-                throw new IllegalStateException(\"No classes found that implement \"\n-                        + EasyScoreCalculator.class.getSimpleName() + \", \"\n-                        + ConstraintProvider.class.getSimpleName() + \" or \"\n-                        + IncrementalScoreCalculator.class.getSimpleName() + \", nor a \"\n-                        + SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL + \" resource.\");\n+        }\n+    }\n+\n+    private Optional<String> constraintsDrl() {\n+        if (optaPlannerBuildTimeConfig.constraintsDrl.isPresent()) {\n+            String constraintsDrl = optaPlannerBuildTimeConfig.constraintsDrl.get();\n+            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+            if (classLoader.getResource(constraintsDrl) == null) {\n+                throw new IllegalStateException(\"Invalid \" + OptaPlannerBuildTimeConfig.CONSTRAINTS_DRL_PROPERTY\n+                        + \" property (\" + constraintsDrl + \"): that classpath resource does not exist.\");\n             }\n-            solverConfig.setScoreDirectorFactoryConfig(scoreDirectorFactoryConfig);\n         }\n+        return optaPlannerBuildTimeConfig.constraintsDrl;\n+    }\n+\n+    private Optional<String> defaultConstraintsDrl() {\n+        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+        return classLoader.getResource(OptaPlannerBuildTimeConfig.DEFAULT_CONSTRAINTS_DRL_URL) != null\n+                ? Optional.of(OptaPlannerBuildTimeConfig.DEFAULT_CONSTRAINTS_DRL_URL)\n+                : Optional.empty();\n+    }\n+\n+    private ScoreDirectorFactoryConfig defaultScoreDirectoryFactoryConfig(IndexView indexView, Optional<String> constrainsDrl) {\n+        ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = new ScoreDirectorFactoryConfig();\n+        scoreDirectorFactoryConfig.setEasyScoreCalculatorClass(\n+                findImplementingClass(DotNames.EASY_SCORE_CALCULATOR, indexView));\n+        scoreDirectorFactoryConfig.setConstraintProviderClass(\n+                findImplementingClass(DotNames.CONSTRAINT_PROVIDER, indexView));\n+        scoreDirectorFactoryConfig.setIncrementalScoreCalculatorClass(\n+                findImplementingClass(DotNames.INCREMENTAL_SCORE_CALCULATOR, indexView));\n+        constrainsDrl.ifPresent(value -> scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(value)));\n+        if (scoreDirectorFactoryConfig.getEasyScoreCalculatorClass() == null\n+                && scoreDirectorFactoryConfig.getConstraintProviderClass() == null\n+                && scoreDirectorFactoryConfig.getIncrementalScoreCalculatorClass() == null\n+                && scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n+            throw new IllegalStateException(\"No classes found that implement \"\n+                    + EasyScoreCalculator.class.getSimpleName() + \", \"\n+                    + ConstraintProvider.class.getSimpleName() + \" or \"\n+                    + IncrementalScoreCalculator.class.getSimpleName() + \".\\n\"\n+                    + \"Neither was a property \" + OptaPlannerBuildTimeConfig.CONSTRAINTS_DRL_PROPERTY + \" defined, nor a \"\n+                    + OptaPlannerBuildTimeConfig.DEFAULT_CONSTRAINTS_DRL_URL + \" resource found.\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTcwNTY0", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547970564", "createdAt": "2020-12-09T09:05:36Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTowNTozNlrOICJyJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTowNTozNlrOICJyJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEyODM1OQ==", "bodyText": "Ow, it was here already...", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539128359", "createdAt": "2020-12-09T09:05:36Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessor.java", "diffHunk": "@@ -211,31 +214,77 @@ private void applySolverProperties(RecorderContext recorderContext,\n     }\n \n     private void applyScoreDirectorFactoryProperties(IndexView indexView, SolverConfig solverConfig) {\n+        Optional<String> constraintsDrlFromProperty = constraintsDrl();\n+        Optional<String> defaultConstraintsDrl = defaultConstraintsDrl();\n+        Optional<String> effectiveConstraintsDrl = constraintsDrlFromProperty.map(Optional::of).orElse(defaultConstraintsDrl);\n         if (solverConfig.getScoreDirectorFactoryConfig() == null) {\n-            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = new ScoreDirectorFactoryConfig();\n-            scoreDirectorFactoryConfig.setEasyScoreCalculatorClass(\n-                    findImplementingClass(DotNames.EASY_SCORE_CALCULATOR, indexView));\n-            scoreDirectorFactoryConfig.setConstraintProviderClass(\n-                    findImplementingClass(DotNames.CONSTRAINT_PROVIDER, indexView));\n-            scoreDirectorFactoryConfig.setIncrementalScoreCalculatorClass(\n-                    findImplementingClass(DotNames.INCREMENTAL_SCORE_CALCULATOR, indexView));\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig =\n+                    defaultScoreDirectoryFactoryConfig(indexView, effectiveConstraintsDrl);\n+            solverConfig.setScoreDirectorFactoryConfig(scoreDirectorFactoryConfig);\n+        } else {\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = solverConfig.getScoreDirectorFactoryConfig();\n+            if (constraintsDrlFromProperty.isPresent()) {\n+                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(constraintsDrlFromProperty.get()));\n+            } else {\n+                if (scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n+                    defaultConstraintsDrl.ifPresent((resolvedConstraintsDrl) -> scoreDirectorFactoryConfig\n+                            .setScoreDrlList(Collections.singletonList(resolvedConstraintsDrl)));\n+                }\n+            }\n+        }\n+\n+        if (solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList() != null) {\n             ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n-            if (classLoader.getResource(SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL) != null) {\n-                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(\n-                        SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL));\n+            try {\n+                Class.forName(\"org.drools.dynamic.DynamicComponentsSupplier\", false, classLoader);\n+            } catch (ClassNotFoundException e) {\n+                throw new IllegalStateException(\n+                        \"Constraints DRL has been detected, but drools-core-dynamic is not on classpath.\"\n+                                + \" Maybe try adding it. Please note that constraints DRL does not work in the native mode.\");\n             }\n-            if (scoreDirectorFactoryConfig.getEasyScoreCalculatorClass() == null\n-                    && scoreDirectorFactoryConfig.getConstraintProviderClass() == null\n-                    && scoreDirectorFactoryConfig.getIncrementalScoreCalculatorClass() == null\n-                    && scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n-                throw new IllegalStateException(\"No classes found that implement \"\n-                        + EasyScoreCalculator.class.getSimpleName() + \", \"\n-                        + ConstraintProvider.class.getSimpleName() + \" or \"\n-                        + IncrementalScoreCalculator.class.getSimpleName() + \", nor a \"\n-                        + SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL + \" resource.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTczNTgw", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547973580", "createdAt": "2020-12-09T09:09:21Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTowOToyMlrOICJ89g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTowOToyMlrOICJ89g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEzMTEyNg==", "bodyText": "We put a newline between the \"error fact\" and the \"error maybe suggestion\":\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    \"Constraints DRL has been detected, but drools-core-dynamic is not on classpath.\"\n          \n          \n            \n                                    \"Using scoreDRL in Quarkus, but the dependency drools-core-dynamic is not on the classpath.\\n\"", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539131126", "createdAt": "2020-12-09T09:09:22Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessor.java", "diffHunk": "@@ -211,31 +214,77 @@ private void applySolverProperties(RecorderContext recorderContext,\n     }\n \n     private void applyScoreDirectorFactoryProperties(IndexView indexView, SolverConfig solverConfig) {\n+        Optional<String> constraintsDrlFromProperty = constraintsDrl();\n+        Optional<String> defaultConstraintsDrl = defaultConstraintsDrl();\n+        Optional<String> effectiveConstraintsDrl = constraintsDrlFromProperty.map(Optional::of).orElse(defaultConstraintsDrl);\n         if (solverConfig.getScoreDirectorFactoryConfig() == null) {\n-            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = new ScoreDirectorFactoryConfig();\n-            scoreDirectorFactoryConfig.setEasyScoreCalculatorClass(\n-                    findImplementingClass(DotNames.EASY_SCORE_CALCULATOR, indexView));\n-            scoreDirectorFactoryConfig.setConstraintProviderClass(\n-                    findImplementingClass(DotNames.CONSTRAINT_PROVIDER, indexView));\n-            scoreDirectorFactoryConfig.setIncrementalScoreCalculatorClass(\n-                    findImplementingClass(DotNames.INCREMENTAL_SCORE_CALCULATOR, indexView));\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig =\n+                    defaultScoreDirectoryFactoryConfig(indexView, effectiveConstraintsDrl);\n+            solverConfig.setScoreDirectorFactoryConfig(scoreDirectorFactoryConfig);\n+        } else {\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = solverConfig.getScoreDirectorFactoryConfig();\n+            if (constraintsDrlFromProperty.isPresent()) {\n+                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(constraintsDrlFromProperty.get()));\n+            } else {\n+                if (scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n+                    defaultConstraintsDrl.ifPresent((resolvedConstraintsDrl) -> scoreDirectorFactoryConfig\n+                            .setScoreDrlList(Collections.singletonList(resolvedConstraintsDrl)));\n+                }\n+            }\n+        }\n+\n+        if (solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList() != null) {\n             ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n-            if (classLoader.getResource(SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL) != null) {\n-                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(\n-                        SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL));\n+            try {\n+                Class.forName(\"org.drools.dynamic.DynamicComponentsSupplier\", false, classLoader);\n+            } catch (ClassNotFoundException e) {\n+                throw new IllegalStateException(\n+                        \"Constraints DRL has been detected, but drools-core-dynamic is not on classpath.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTc2MjI2", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-547976226", "createdAt": "2020-12-09T09:12:28Z", "commit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOToxMjoyOFrOICKF4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOToxMjoyOFrOICKF4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEzMzQwOA==", "bodyText": "I tend to avoid \"it\" references in the \"error maybe fix\" to the previous line, so users can \"just fix it and move on\" faster. Especially if the \"error fact\" is very long and complex to parse (hard to see in a console window, especially if it doesn't wrap and because the error message only starts at column 70 or so)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            + \" Maybe try adding it. Please note that constraints DRL does not work in the native mode.\");\n          \n          \n            \n                                            + \"\\nMaybe add the dependency org.kie.kogito:drools-core-dynamic and exclude the dependency org.kie.kogito:drools-core-static.\");", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r539133408", "createdAt": "2020-12-09T09:12:28Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessor.java", "diffHunk": "@@ -211,31 +214,77 @@ private void applySolverProperties(RecorderContext recorderContext,\n     }\n \n     private void applyScoreDirectorFactoryProperties(IndexView indexView, SolverConfig solverConfig) {\n+        Optional<String> constraintsDrlFromProperty = constraintsDrl();\n+        Optional<String> defaultConstraintsDrl = defaultConstraintsDrl();\n+        Optional<String> effectiveConstraintsDrl = constraintsDrlFromProperty.map(Optional::of).orElse(defaultConstraintsDrl);\n         if (solverConfig.getScoreDirectorFactoryConfig() == null) {\n-            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = new ScoreDirectorFactoryConfig();\n-            scoreDirectorFactoryConfig.setEasyScoreCalculatorClass(\n-                    findImplementingClass(DotNames.EASY_SCORE_CALCULATOR, indexView));\n-            scoreDirectorFactoryConfig.setConstraintProviderClass(\n-                    findImplementingClass(DotNames.CONSTRAINT_PROVIDER, indexView));\n-            scoreDirectorFactoryConfig.setIncrementalScoreCalculatorClass(\n-                    findImplementingClass(DotNames.INCREMENTAL_SCORE_CALCULATOR, indexView));\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig =\n+                    defaultScoreDirectoryFactoryConfig(indexView, effectiveConstraintsDrl);\n+            solverConfig.setScoreDirectorFactoryConfig(scoreDirectorFactoryConfig);\n+        } else {\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = solverConfig.getScoreDirectorFactoryConfig();\n+            if (constraintsDrlFromProperty.isPresent()) {\n+                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(constraintsDrlFromProperty.get()));\n+            } else {\n+                if (scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n+                    defaultConstraintsDrl.ifPresent((resolvedConstraintsDrl) -> scoreDirectorFactoryConfig\n+                            .setScoreDrlList(Collections.singletonList(resolvedConstraintsDrl)));\n+                }\n+            }\n+        }\n+\n+        if (solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList() != null) {\n             ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n-            if (classLoader.getResource(SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL) != null) {\n-                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(\n-                        SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL));\n+            try {\n+                Class.forName(\"org.drools.dynamic.DynamicComponentsSupplier\", false, classLoader);\n+            } catch (ClassNotFoundException e) {\n+                throw new IllegalStateException(\n+                        \"Constraints DRL has been detected, but drools-core-dynamic is not on classpath.\"\n+                                + \" Maybe try adding it. Please note that constraints DRL does not work in the native mode.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c36263858a5f3774745b0326ea4f2193e2c69ee"}, "originalPosition": 61}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b867f2797a446e6990982d1cf136e820fd0a0193", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/b867f2797a446e6990982d1cf136e820fd0a0193", "committedDate": "2020-12-09T12:19:39Z", "message": "Update optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessor.java\n\nCo-authored-by: Geoffrey De Smet <gds.geoffrey.de.smet@gmail.com>"}, "afterCommit": {"oid": "1c966135a585d3e32c0e93994396752673729961", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/1c966135a585d3e32c0e93994396752673729961", "committedDate": "2020-12-10T12:54:03Z", "message": "PLANNER-2265 Add score-drl property"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c966135a585d3e32c0e93994396752673729961", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/1c966135a585d3e32c0e93994396752673729961", "committedDate": "2020-12-10T12:54:03Z", "message": "PLANNER-2265 Add score-drl property"}, "afterCommit": {"oid": "06e5dec11a36b66a139595790438aca42cb67ee3", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/06e5dec11a36b66a139595790438aca42cb67ee3", "committedDate": "2020-12-10T13:01:30Z", "message": "PLANNER-2265 Add score-drl property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a7efd601a823fec1b02b71af708b5f9bca6d403", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/2a7efd601a823fec1b02b71af708b5f9bca6d403", "committedDate": "2020-12-11T08:03:42Z", "message": "PLANNER-2265 Add score-drl property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/00216e957a68dc065eaf07646e311105b78b6707", "committedDate": "2020-12-11T08:20:00Z", "message": "Improve test coverage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f82d3202b8a2dd59e7c7fd18b2f38ce924609c12", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/f82d3202b8a2dd59e7c7fd18b2f38ce924609c12", "committedDate": "2020-12-10T17:38:51Z", "message": "Improve test coverage"}, "afterCommit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/00216e957a68dc065eaf07646e311105b78b6707", "committedDate": "2020-12-11T08:20:00Z", "message": "Improve test coverage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMjA2OTAw", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-551206900", "createdAt": "2020-12-14T09:55:43Z", "commit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwOTo1NTo0M1rOIFIeBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwOTo1NTo0M1rOIFIeBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1MjU0OQ==", "bodyText": "This solves the issue with drools-core-static getting on the classpath. A user still has to exclude this dependency from the dependency on optaplanner-quarkus and optaplanner-quarkus-json, etc.", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r542252549", "createdAt": "2020-12-14T09:55:43Z", "author": {"login": "rsynek"}, "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/pom.xml", "diffHunk": "@@ -25,6 +25,14 @@\n     <dependency>\n       <groupId>org.optaplanner</groupId>\n       <artifactId>optaplanner-quarkus</artifactId>\n+      <exclusions>\n+        <!-- The constraints.drl requires this dependency to be excluded, otherwise the quarkus-maven-plugin\n+             downloads it at runtime. -->\n+        <exclusion>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDQ2Mjcx", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-552446271", "createdAt": "2020-12-15T13:27:06Z", "commit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzoyNzowNlrOIGKzGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzoyNzowNlrOIGKzGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMzOTI5MA==", "bodyText": "Nitpick:\nI personally think the method should not accept null lists. Just add a javadoc that has \"@param list never null\"\nBut if should accept null too, we treat is as an exceptionally situation (so handle it with an if statement before doing the real code)\n\nif (list == null) {\n   return \"\";\n}\nString abbreviation = ...", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r543339290", "createdAt": "2020-12-15T13:27:06Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/util/ConfigUtils.java", "diffHunk": "@@ -414,6 +414,21 @@ public static int resolvePoolSize(String propertyName, String value, String... m\n         return memberAccessor;\n     }\n \n+    public static String abbreviate(List<String> list, int limit) {\n+        String abbreviation = \"\";\n+        if (list != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDUyMDA2", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-552452006", "createdAt": "2020-12-15T13:33:38Z", "commit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzozMzozOVrOIGLFzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzozMzozOVrOIGLFzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0NDA3Ng==", "bodyText": "Great work. Mind if I add this issue on your backlog (not for this PR)? https://issues.redhat.com/browse/PLANNER-2288", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r543344076", "createdAt": "2020-12-15T13:33:39Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/Integration/Integration-chapter.adoc", "diffHunk": "@@ -508,6 +508,10 @@ optaplanner.solver-config-xml::\n A classpath resource to read the solver configuration XML.\n Defaults to `solverConfig.xml`.\n If this property isn't specified, that file is optional.\n+optaplanner.score-drl::\n+A classpath resource to read the score DRL.\n+Defaults to `constraints.drl`.\n+Do not define this property when a `ConstraintProvider`, `EasyScoreCalculator` or `IncrementalScoreCalculator` class exists.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDUzNTI0", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-552453524", "createdAt": "2020-12-15T13:35:33Z", "commit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzozNTozM1rOIGLKow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzozNTozM1rOIGLKow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0NTMxNQ==", "bodyText": "Nitpick: Personally, I'd inline these booleans in the if statements, as they are only used once.", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r543345315", "createdAt": "2020-12-15T13:35:33Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessor.java", "diffHunk": "@@ -210,32 +213,95 @@ private void applySolverProperties(RecorderContext recorderContext,\n                 .collect(Collectors.toList());\n     }\n \n-    private void applyScoreDirectorFactoryProperties(IndexView indexView, SolverConfig solverConfig) {\n+    protected void applyScoreDirectorFactoryProperties(IndexView indexView, SolverConfig solverConfig) {\n+        Optional<String> constraintsDrlFromProperty = constraintsDrl();\n+        Optional<String> defaultConstraintsDrl = defaultConstraintsDrl();\n+        Optional<String> effectiveConstraintsDrl = constraintsDrlFromProperty.map(Optional::of).orElse(defaultConstraintsDrl);\n         if (solverConfig.getScoreDirectorFactoryConfig() == null) {\n-            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = new ScoreDirectorFactoryConfig();\n-            scoreDirectorFactoryConfig.setEasyScoreCalculatorClass(\n-                    findImplementingClass(DotNames.EASY_SCORE_CALCULATOR, indexView));\n-            scoreDirectorFactoryConfig.setConstraintProviderClass(\n-                    findImplementingClass(DotNames.CONSTRAINT_PROVIDER, indexView));\n-            scoreDirectorFactoryConfig.setIncrementalScoreCalculatorClass(\n-                    findImplementingClass(DotNames.INCREMENTAL_SCORE_CALCULATOR, indexView));\n-            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n-            if (classLoader.getResource(SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL) != null) {\n-                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(\n-                        SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL));\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig =\n+                    defaultScoreDirectoryFactoryConfig(indexView, effectiveConstraintsDrl);\n+            solverConfig.setScoreDirectorFactoryConfig(scoreDirectorFactoryConfig);\n+        } else {\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = solverConfig.getScoreDirectorFactoryConfig();\n+            if (constraintsDrlFromProperty.isPresent()) {\n+                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(constraintsDrlFromProperty.get()));\n+            } else {\n+                if (scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n+                    defaultConstraintsDrl.ifPresent(resolvedConstraintsDrl -> scoreDirectorFactoryConfig\n+                            .setScoreDrlList(Collections.singletonList(resolvedConstraintsDrl)));\n+                }\n             }\n-            if (scoreDirectorFactoryConfig.getEasyScoreCalculatorClass() == null\n-                    && scoreDirectorFactoryConfig.getConstraintProviderClass() == null\n-                    && scoreDirectorFactoryConfig.getIncrementalScoreCalculatorClass() == null\n-                    && scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n-                throw new IllegalStateException(\"No classes found that implement \"\n-                        + EasyScoreCalculator.class.getSimpleName() + \", \"\n-                        + ConstraintProvider.class.getSimpleName() + \" or \"\n-                        + IncrementalScoreCalculator.class.getSimpleName() + \", nor a \"\n-                        + SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL + \" resource.\");\n+        }\n+\n+        if (solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList() != null) {\n+            boolean isDroolsDynamicPresent = isClassDefined(\"org.drools.dynamic.DynamicServiceRegistrySupplier\");\n+            boolean isDroolsStaticPresent = isClassDefined(\"org.drools.statics.StaticServiceRegistrySupplier\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDYwMDkz", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-552460093", "createdAt": "2020-12-15T13:41:34Z", "commit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0MTozNFrOIGLblg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0MTozNFrOIGLblg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0OTY1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            + \" org.kie.kogito:drools-core-static. Use a ConstraintProvider for a native compilation.\");\n          \n          \n            \n                                            + \" org.kie.kogito:drools-core-static.\"\n          \n          \n            \n                                            + \"\\nOr instead, maybe use a \" + ConstraintProvider.class.getSimpleName() + \" instead of scoreDRL.\");", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r543349654", "createdAt": "2020-12-15T13:41:34Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessor.java", "diffHunk": "@@ -210,32 +213,95 @@ private void applySolverProperties(RecorderContext recorderContext,\n                 .collect(Collectors.toList());\n     }\n \n-    private void applyScoreDirectorFactoryProperties(IndexView indexView, SolverConfig solverConfig) {\n+    protected void applyScoreDirectorFactoryProperties(IndexView indexView, SolverConfig solverConfig) {\n+        Optional<String> constraintsDrlFromProperty = constraintsDrl();\n+        Optional<String> defaultConstraintsDrl = defaultConstraintsDrl();\n+        Optional<String> effectiveConstraintsDrl = constraintsDrlFromProperty.map(Optional::of).orElse(defaultConstraintsDrl);\n         if (solverConfig.getScoreDirectorFactoryConfig() == null) {\n-            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = new ScoreDirectorFactoryConfig();\n-            scoreDirectorFactoryConfig.setEasyScoreCalculatorClass(\n-                    findImplementingClass(DotNames.EASY_SCORE_CALCULATOR, indexView));\n-            scoreDirectorFactoryConfig.setConstraintProviderClass(\n-                    findImplementingClass(DotNames.CONSTRAINT_PROVIDER, indexView));\n-            scoreDirectorFactoryConfig.setIncrementalScoreCalculatorClass(\n-                    findImplementingClass(DotNames.INCREMENTAL_SCORE_CALCULATOR, indexView));\n-            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n-            if (classLoader.getResource(SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL) != null) {\n-                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(\n-                        SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL));\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig =\n+                    defaultScoreDirectoryFactoryConfig(indexView, effectiveConstraintsDrl);\n+            solverConfig.setScoreDirectorFactoryConfig(scoreDirectorFactoryConfig);\n+        } else {\n+            ScoreDirectorFactoryConfig scoreDirectorFactoryConfig = solverConfig.getScoreDirectorFactoryConfig();\n+            if (constraintsDrlFromProperty.isPresent()) {\n+                scoreDirectorFactoryConfig.setScoreDrlList(Collections.singletonList(constraintsDrlFromProperty.get()));\n+            } else {\n+                if (scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n+                    defaultConstraintsDrl.ifPresent(resolvedConstraintsDrl -> scoreDirectorFactoryConfig\n+                            .setScoreDrlList(Collections.singletonList(resolvedConstraintsDrl)));\n+                }\n             }\n-            if (scoreDirectorFactoryConfig.getEasyScoreCalculatorClass() == null\n-                    && scoreDirectorFactoryConfig.getConstraintProviderClass() == null\n-                    && scoreDirectorFactoryConfig.getIncrementalScoreCalculatorClass() == null\n-                    && scoreDirectorFactoryConfig.getScoreDrlList() == null) {\n-                throw new IllegalStateException(\"No classes found that implement \"\n-                        + EasyScoreCalculator.class.getSimpleName() + \", \"\n-                        + ConstraintProvider.class.getSimpleName() + \" or \"\n-                        + IncrementalScoreCalculator.class.getSimpleName() + \", nor a \"\n-                        + SolverBuildTimeConfig.DEFAULT_SCORE_DRL_URL + \" resource.\");\n+        }\n+\n+        if (solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList() != null) {\n+            boolean isDroolsDynamicPresent = isClassDefined(\"org.drools.dynamic.DynamicServiceRegistrySupplier\");\n+            boolean isDroolsStaticPresent = isClassDefined(\"org.drools.statics.StaticServiceRegistrySupplier\");\n+\n+            if (!isDroolsDynamicPresent) {\n+                throw new IllegalStateException(\n+                        \"Using scoreDRL in Quarkus, but the dependency drools-core-dynamic is not on the classpath.\\n\"\n+                                + \"Maybe add the dependency org.kie.kogito:drools-core-dynamic and exclude the dependency\"\n+                                + \" org.kie.kogito:drools-core-static. Use a ConstraintProvider for a native compilation.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDc5Nzkz", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-552479793", "createdAt": "2020-12-15T13:54:52Z", "commit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo1NDo1MlrOIGMCMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo1NDo1MlrOIGMCMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1OTUzOQ==", "bodyText": "(non blocking)\nPersonally, I am not a fan of using Optional outside of Streams - a nullable var works just as well - see Stuart's and Goetz's talks around this topic.", "url": "https://github.com/kiegroup/optaplanner/pull/1065#discussion_r543359539", "createdAt": "2020-12-15T13:54:52Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/main/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfiguration.java", "diffHunk": "@@ -200,33 +201,69 @@ private void applySolverProperties(SolverConfig solverConfig) {\n         return new ArrayList<>(entityClassSet);\n     }\n \n-    private void applyScoreDirectorFactoryProperties(SolverConfig solverConfig) {\n+    protected void applyScoreDirectorFactoryProperties(SolverConfig solverConfig) {\n+        Optional<String> constraintsDrlFromProperty = constraintsDrl();\n+        Optional<String> defaultConstraintsDrl = defaultConstraintsDrl();\n+        Optional<String> effectiveConstraintsDrl = constraintsDrlFromProperty.map(Optional::of).orElse(defaultConstraintsDrl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDgxODIw", "url": "https://github.com/kiegroup/optaplanner/pull/1065#pullrequestreview-552481820", "createdAt": "2020-12-15T13:55:57Z", "commit": {"oid": "00216e957a68dc065eaf07646e311105b78b6707"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e936d265662bdab52e5426749b0c3bfcf8eb7995", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e936d265662bdab52e5426749b0c3bfcf8eb7995", "committedDate": "2020-12-15T17:08:35Z", "message": "Update optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/main/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessor.java\n\nCo-authored-by: Geoffrey De Smet <gds.geoffrey.de.smet@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64b8e75f76b818ccb7d2542fe2199fa9c0eb8ddc", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/64b8e75f76b818ccb7d2542fe2199fa9c0eb8ddc", "committedDate": "2020-12-15T19:32:48Z", "message": "Address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "823d03a7e8d07e590b99af60fc9ca08eb3fffe6b", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/823d03a7e8d07e590b99af60fc9ca08eb3fffe6b", "committedDate": "2020-12-15T19:11:29Z", "message": "Address review comments"}, "afterCommit": {"oid": "64b8e75f76b818ccb7d2542fe2199fa9c0eb8ddc", "author": {"user": {"login": "rsynek", "name": "Radovan Synek"}}, "url": "https://github.com/kiegroup/optaplanner/commit/64b8e75f76b818ccb7d2542fe2199fa9c0eb8ddc", "committedDate": "2020-12-15T19:32:48Z", "message": "Address review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3158, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}