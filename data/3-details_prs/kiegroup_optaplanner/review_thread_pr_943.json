{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNzIwNjEz", "number": 943, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo1NTozNFrOEmjByQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyOTowNFrOEm9Lpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODU1MjQxOnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/incremental/IncrementalScoreCalculator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo1NTozNFrOHWo2yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOTozMDowOFrOHXR3gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMDEwNw==", "bodyText": "For some reason, this is not public API. Yet, this change will affect users.\n\nShould we make it public API?\nDo we want to make this change?\n\nMy answer to both is a clear \"yes\".", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r493500107", "createdAt": "2020-09-23T11:55:34Z", "author": {"login": "triceo"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/incremental/IncrementalScoreCalculator.java", "diffHunk": "@@ -30,9 +30,10 @@\n  * Any implementation is naturally stateful.\n  *\n  * @param <Solution_> the solution type, the class with the {@link PlanningSolution} annotation\n+ * @param <Score_> the score type to go with the solution\n  * @see IncrementalScoreDirector\n  */\n-public interface IncrementalScoreCalculator<Solution_> {\n+public interface IncrementalScoreCalculator<Solution_, Score_ extends Score<Score_>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f09c3246a2dd3e59877e1ab5d31ad8eacc032c3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE3MjAzMg==", "bodyText": "The reason this isn't public API is because it uses ScoreDirector. EasyScoreCalculator does not.\nBut let's discuss because that might not be enough reason...", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494172032", "createdAt": "2020-09-24T09:30:08Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/incremental/IncrementalScoreCalculator.java", "diffHunk": "@@ -30,9 +30,10 @@\n  * Any implementation is naturally stateful.\n  *\n  * @param <Solution_> the solution type, the class with the {@link PlanningSolution} annotation\n+ * @param <Score_> the score type to go with the solution\n  * @see IncrementalScoreDirector\n  */\n-public interface IncrementalScoreCalculator<Solution_> {\n+public interface IncrementalScoreCalculator<Solution_, Score_ extends Score<Score_>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMDEwNw=="}, "originalCommit": {"oid": "8f09c3246a2dd3e59877e1ab5d31ad8eacc032c3"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjgxMDYzOnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/exhaustivesearch/decider/ExhaustiveSearchDecider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMjowMVrOHXRj6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMjowMVrOHXRj6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2NzAxNw==", "bodyText": "This doesn't seem right? Less generics?", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494167017", "createdAt": "2020-09-24T09:22:01Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/exhaustivesearch/decider/ExhaustiveSearchDecider.java", "diffHunk": "@@ -144,7 +144,7 @@ public void expandNode(ExhaustiveSearchStepScope<Solution_> stepScope) {\n     }\n \n     private void doMove(ExhaustiveSearchStepScope<Solution_> stepScope, ExhaustiveSearchNode moveNode) {\n-        InnerScoreDirector<Solution_> scoreDirector = stepScope.getScoreDirector();\n+        InnerScoreDirector scoreDirector = stepScope.getScoreDirector();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c88e59cd614ccfada981d81b19648f9f193c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjgxMjM0OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/heuristic/thread/MoveThreadRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMjoyNlrOHXRk-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMjoyNlrOHXRk-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2NzI5MA==", "bodyText": "Less generics?", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494167290", "createdAt": "2020-09-24T09:22:26Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/heuristic/thread/MoveThreadRunner.java", "diffHunk": "@@ -46,7 +46,7 @@\n     private final boolean assertExpectedStepScore;\n     private final boolean assertShadowVariablesAreNotStaleAfterStep;\n \n-    private InnerScoreDirector<Solution_> scoreDirector = null;\n+    private InnerScoreDirector scoreDirector = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c88e59cd614ccfada981d81b19648f9f193c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjgxMzY5OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/localsearch/decider/LocalSearchDecider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMjo0NlrOHXRlyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMjo0NlrOHXRlyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2NzQ5OQ==", "bodyText": "Less?", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494167499", "createdAt": "2020-09-24T09:22:46Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/localsearch/decider/LocalSearchDecider.java", "diffHunk": "@@ -128,9 +129,9 @@ public void decideNextStep(LocalSearchStepScope<Solution_> stepScope) {\n     }\n \n     protected void doMove(LocalSearchMoveScope<Solution_> moveScope) {\n-        InnerScoreDirector<Solution_> scoreDirector = moveScope.getScoreDirector();\n+        InnerScoreDirector scoreDirector = moveScope.getScoreDirector();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c88e59cd614ccfada981d81b19648f9f193c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjgxNDc3OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/phase/scope/AbstractMoveScope.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMzowM1rOHXRmdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMzowM1rOHXRmdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2NzY2OA==", "bodyText": "Less", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494167668", "createdAt": "2020-09-24T09:23:03Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/phase/scope/AbstractMoveScope.java", "diffHunk": "@@ -64,7 +64,7 @@ public int getStepIndex() {\n         return getStepScope().getStepIndex();\n     }\n \n-    public InnerScoreDirector<Solution_> getScoreDirector() {\n+    public InnerScoreDirector getScoreDirector() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c88e59cd614ccfada981d81b19648f9f193c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjgxNTQ1OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/phase/scope/AbstractPhaseScope.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMzoxNlrOHXRm4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMzoxNlrOHXRm4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2Nzc3Ng==", "bodyText": "Less?", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494167776", "createdAt": "2020-09-24T09:23:16Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/phase/scope/AbstractPhaseScope.java", "diffHunk": "@@ -138,7 +138,7 @@ public long getPhaseScoreCalculationSpeed() {\n         return getPhaseScoreCalculationCount() * 1000L / (timeMillisSpent == 0L ? 1L : timeMillisSpent);\n     }\n \n-    public InnerScoreDirector<Solution_> getScoreDirector() {\n+    public InnerScoreDirector getScoreDirector() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c88e59cd614ccfada981d81b19648f9f193c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjgxNzAzOnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/phase/scope/AbstractStepScope.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMzo0M1rOHXRn7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMzo0M1rOHXRn7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2ODA0Ng==", "bodyText": "Less?", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494168046", "createdAt": "2020-09-24T09:23:43Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/phase/scope/AbstractStepScope.java", "diffHunk": "@@ -72,7 +72,7 @@ public void setClonedSolution(Solution_ clonedSolution) {\n     // Calculated methods\n     // ************************************************************************\n \n-    public InnerScoreDirector<Solution_> getScoreDirector() {\n+    public InnerScoreDirector getScoreDirector() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c88e59cd614ccfada981d81b19648f9f193c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjgyNTYzOnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/drools/DroolsScoreDirectorFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyNTo0OVrOHXRtUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyNTo0OVrOHXRtUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2OTQyNQ==", "bodyText": "As Score_ is a generic type, this should use Score_ instead of ?", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494169425", "createdAt": "2020-09-24T09:25:49Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/drools/DroolsScoreDirectorFactory.java", "diffHunk": "@@ -39,14 +39,16 @@\n  * Drools implementation of {@link ScoreDirectorFactory}.\n  *\n  * @param <Solution_> the solution type, the class with the {@link PlanningSolution} annotation\n+ * @param <Score_> the score type to go with the solution\n  * @see DroolsScoreDirector\n  * @see ScoreDirectorFactory\n  */\n-public class DroolsScoreDirectorFactory<Solution_> extends AbstractScoreDirectorFactory<Solution_> {\n+public class DroolsScoreDirectorFactory<Solution_, Score_ extends Score<Score_>>\n+        extends AbstractScoreDirectorFactory<Solution_, Score_> {\n \n     private final KieBase kieBase;\n \n-    protected Map<Rule, Function<Solution_, Score<?>>> ruleToConstraintWeightExtractorMap;\n+    protected Map<Rule, Function<Solution_, ?>> ruleToConstraintWeightExtractorMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c88e59cd614ccfada981d81b19648f9f193c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjgyNzU0OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/drools/DroolsScoreDirectorFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyNjoxNlrOHXRuhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyNjoxNlrOHXRuhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2OTczMg==", "bodyText": "the cast shouldn't be needed, see if the map field uses Score_", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494169732", "createdAt": "2020-09-24T09:26:16Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/drools/DroolsScoreDirectorFactory.java", "diffHunk": "@@ -117,16 +119,16 @@ protected void createRuleToConstraintWeightExtractorMap(KieBase kieBase) {\n         }\n     }\n \n-    public Map<Rule, Function<Solution_, Score<?>>> getRuleToConstraintWeightExtractorMap() {\n-        return ruleToConstraintWeightExtractorMap;\n+    public Map<Rule, Function<Solution_, Score_>> getRuleToConstraintWeightExtractorMap() {\n+        return (Map) ruleToConstraintWeightExtractorMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c88e59cd614ccfada981d81b19648f9f193c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjgzNDY4OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/easy/EasyScoreCalculator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyODoxMlrOHXRy_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyODoxMlrOHXRy_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE3MDg3OA==", "bodyText": "Hold on. This is a significant change.\nI think the impact on EasyScoreCalculator and IncrementScoreCalculator should indeed be in sync, but I 'd rather decide on that separately from accepting the generic InnerScoreDirector.", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494170878", "createdAt": "2020-09-24T09:28:12Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/easy/EasyScoreCalculator.java", "diffHunk": "@@ -26,9 +26,10 @@\n  * An implementation must be stateless.\n  *\n  * @param <Solution_> the solution type, the class with the {@link PlanningSolution} annotation\n+ * @param <Score_> the score type to go with the solution\n  * @see EasyScoreDirector\n  */\n-public interface EasyScoreCalculator<Solution_> {\n+public interface EasyScoreCalculator<Solution_, Score_ extends Score<Score_>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c88e59cd614ccfada981d81b19648f9f193c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjgzNzUwOnYy", "diffSide": "LEFT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/incremental/AbstractIncrementalScoreCalculator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyOTowNFrOHXR04A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyOTowNFrOHXR04A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE3MTM2MA==", "bodyText": "+1 to remove this, but will need an upgradeREcipe line and a a deprecation in 7.x - just like Radovan did for the AbstractCustomerPhaseCommand", "url": "https://github.com/kiegroup/optaplanner/pull/943#discussion_r494171360", "createdAt": "2020-09-24T09:29:04Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/incremental/AbstractIncrementalScoreCalculator.java", "diffHunk": "@@ -1,29 +0,0 @@\n-/*\n- * Copyright 2012 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.optaplanner.core.impl.score.director.incremental;\n-\n-import org.optaplanner.core.api.domain.solution.PlanningSolution;\n-\n-/**\n- * Abstract superclass for {@link IncrementalScoreCalculator}.\n- *\n- * @param <Solution_> the solution type, the class with the {@link PlanningSolution} annotation\n- * @see IncrementalScoreCalculator\n- */\n-public abstract class AbstractIncrementalScoreCalculator<Solution_> implements IncrementalScoreCalculator<Solution_> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd2c88e59cd614ccfada981d81b19648f9f193c"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4256, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}