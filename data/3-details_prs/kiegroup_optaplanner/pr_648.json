{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4OTI3MzI2", "number": 648, "title": "Make exception handler accept Throwable superclasses", "bodyText": "", "createdAt": "2020-01-03T09:41:16Z", "url": "https://github.com/kiegroup/optaplanner/pull/648", "merged": true, "mergeCommit": {"oid": "d305fb43787fe8594fa7ffc514bd3fcff3f11e26"}, "closed": true, "closedAt": "2020-01-10T15:25:14Z", "author": {"login": "yurloc"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2q8EmAH2gAyMzU4OTI3MzI2OmI1ZDljN2NjNzExY2U0NjFlMWIxNTEyMGJiN2M3ODM4ZWFhOGM1OWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5AlX3AFqTM0MTI1MDk0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b", "author": {"user": {"login": "yurloc", "name": "Ji\u0159\u00ed Locker"}}, "url": "https://github.com/kiegroup/optaplanner/commit/b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b", "committedDate": "2020-01-03T09:28:28Z", "message": "Make exception handler accept Throwable superclasses"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4MDA1NTQw", "url": "https://github.com/kiegroup/optaplanner/pull/648#pullrequestreview-338005540", "createdAt": "2020-01-03T09:42:12Z", "commit": {"oid": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwOTo0MjoxMlrOFZ8igA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwOTo0MjoxMlrOFZ8igA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc1MDU5Mg==", "bodyText": "@ge0ffrey This type of exception handler couldn't be used with the solve() method.", "url": "https://github.com/kiegroup/optaplanner/pull/648#discussion_r362750592", "createdAt": "2020-01-03T09:42:12Z", "author": {"login": "yurloc"}, "path": "optaplanner-core/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java", "diffHunk": "@@ -157,6 +163,20 @@ public void exceptionInConsumer() throws InterruptedException {\n         assertEquals(SolverStatus.NOT_SOLVING, solverJob1.getSolverStatus());\n     }\n \n+    @Test\n+    public void solveGenerics() {\n+        final SolverConfig solverConfig = PlannerTestUtils\n+                .buildSolverConfig(TestdataSolution.class, TestdataEntity.class);\n+        SolverManager<TestdataSolution, Long> solverManager = SolverManager\n+                .create(solverConfig, new SolverManagerConfig());\n+\n+        BiConsumer<Object, Object> exceptionHandler = (o1, o2) -> fail(\"This is unexpected\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4MDA1OTU1", "url": "https://github.com/kiegroup/optaplanner/pull/648#pullrequestreview-338005955", "createdAt": "2020-01-03T09:43:24Z", "commit": {"oid": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwOTo0MzoyNFrOFZ8jwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwOTo0MzoyNFrOFZ8jwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc1MDkxMw==", "bodyText": "Changed order of parameters (solverManager + solver first, then problemId + problemFinder).", "url": "https://github.com/kiegroup/optaplanner/pull/648#discussion_r362750913", "createdAt": "2020-01-03T09:43:24Z", "author": {"login": "yurloc"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/DefaultSolverJob.java", "diffHunk": "@@ -40,16 +40,17 @@\n     private final Solver<Solution_> solver;\n     private final Function<? super ProblemId_, ? extends Solution_> problemFinder;\n     private final Consumer<? super Solution_> finalBestSolutionConsumer;\n-    private final BiConsumer<? super ProblemId_, Throwable> exceptionHandler;\n+    private final BiConsumer<? super ProblemId_, ? super Throwable> exceptionHandler;\n \n     private volatile SolverStatus solverStatus;\n     private Future<Solution_> future;\n \n-    public DefaultSolverJob(DefaultSolverManager<Solution_, ProblemId_> solverManager, ProblemId_ problemId,\n-            Solver<Solution_> solver,\n+    public DefaultSolverJob(\n+            DefaultSolverManager<Solution_, ProblemId_> solverManager,\n+            Solver<Solution_> solver, ProblemId_ problemId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMjUwOTQ1", "url": "https://github.com/kiegroup/optaplanner/pull/648#pullrequestreview-341250945", "createdAt": "2020-01-10T15:49:25Z", "commit": {"oid": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNTo0OToyNlrOFcYHZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNTo0OToyNlrOFcYHZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI5OTU1OA==", "bodyText": "This solver actually failed, but that failure never reached the test thread. I believe this change fixed it, please review :)\nd2589ed", "url": "https://github.com/kiegroup/optaplanner/pull/648#discussion_r365299558", "createdAt": "2020-01-10T15:49:26Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java", "diffHunk": "@@ -157,6 +163,20 @@ public void exceptionInConsumer() throws InterruptedException {\n         assertEquals(SolverStatus.NOT_SOLVING, solverJob1.getSolverStatus());\n     }\n \n+    @Test\n+    public void solveGenerics() {\n+        final SolverConfig solverConfig = PlannerTestUtils\n+                .buildSolverConfig(TestdataSolution.class, TestdataEntity.class);\n+        SolverManager<TestdataSolution, Long> solverManager = SolverManager\n+                .create(solverConfig, new SolverManagerConfig());\n+\n+        BiConsumer<Object, Object> exceptionHandler = (o1, o2) -> fail(\"This is unexpected\");\n+        Consumer<Object> finalBestSolutionConsumer = o -> {};\n+        Function<Object, TestdataUnannotatedExtendedSolution> problemFinder = o -> new TestdataUnannotatedExtendedSolution();\n+\n+        solverManager.solve(1L, problemFinder, finalBestSolutionConsumer, exceptionHandler);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3022, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}