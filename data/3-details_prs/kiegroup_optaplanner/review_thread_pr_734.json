{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTE5NzYx", "number": 734, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOToyMjozNFrODveWsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOToyMjozNFrODveWsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTA2OTk0OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOToyMjozNFrOGB6u_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOToyMjozNFrOGB6u_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY2NDA2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                \") is null.\");\n          \n          \n            \n                                                \") returns null.\");\n          \n      \n    \n    \n  \n\nthe memberAccessor isn't null, it returns null.", "url": "https://github.com/kiegroup/optaplanner/pull/734#discussion_r404664061", "createdAt": "2020-04-07T09:22:34Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptor.java", "diffHunk": "@@ -75,10 +77,14 @@ public MemberAccessor getMemberAccessor() {\n     }\n \n     public Function<Solution_, Score<?>> createExtractor() {\n-        MemberAccessor constraintConfigurationMemberAccessor = constraintConfigurationDescriptor.getSolutionDescriptor()\n-                .getConstraintConfigurationMemberAccessor();\n+        SolutionDescriptor<Solution_> solutionDescriptor = constraintConfigurationDescriptor.getSolutionDescriptor();\n+        MemberAccessor constraintConfigurationMemberAccessor =\n+                solutionDescriptor.getConstraintConfigurationMemberAccessor();\n         return (Solution_ solution) -> {\n-            Object constraintConfiguration = constraintConfigurationMemberAccessor.executeGetter(solution);\n+            Object constraintConfiguration =\n+                    Objects.requireNonNull(constraintConfigurationMemberAccessor.executeGetter(solution),\n+                            \"Constraint configuration provider (\" + constraintConfigurationMemberAccessor +\n+                                    \") is null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f34b5438c8ca8dbd1f267b6cdd2b934e458caa6"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4474, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}