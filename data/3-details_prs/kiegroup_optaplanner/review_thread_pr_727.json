{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNTg4MjI2", "number": 727, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjozMDowNVrODp76Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjozMjo1MlrODp7-iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Mjk5NzcxOnYy", "diffSide": "RIGHT", "path": "optaplanner-docs/src/main/asciidoc/Integration/Integration-chapter.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjozMDowNVrOF5a4Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjozMDowNVrOF5a4Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc1MzQ4Nw==", "bodyText": "=> \"this generates:\"\navoid future tense", "url": "https://github.com/kiegroup/optaplanner/pull/727#discussion_r395753487", "createdAt": "2020-03-20T16:30:05Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/Integration/Integration-chapter.adoc", "diffHunk": "@@ -420,6 +420,67 @@ For example, this will generate this JSON:\n ----\n \n \n+[[integrationWithJsonb]]\n+=== JSON: JSON-B\n+\n+Enrich domain POJOs (solution, entities and problem facts) with JSON-B annotations to serialize them to/from JSON.\n+\n+Add a dependency to the `optaplanner-persistence-jsonb` jar and use `OptaPlannerJsonbConfig` to create a `Jsonb` instance:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+JsonbConfig config = OptaPlannerJsonbConfig.createConfig();\n+Jsonb jsonb = JsonbBuilder.create(config);\n+----\n+\n+\n+[[jsonbMarshallingAScore]]\n+==== JSON-B: marshalling a `Score`\n+\n+When a `Score` is marshalled to/from JSON by the default JSON-B configuration, it fails.\n+The `OptaPlannerJsonbConfig` fixes that, by using adapters including `BendableScoreJsonbAdapter`, `HardSoftScoreJsonbAdapter`, etc.\n+\n+[source,java,options=\"nowrap\"]\n+----\n+@PlanningSolution\n+public class CloudBalance {\n+\n+    @PlanningScore\n+    private HardSoftScore score;\n+\n+    ...\n+}\n+----\n+\n+For example, this will generate this JSON:\n+\n+[source,json]\n+----\n+{\"hardSoftScore\":\"0hard/-200soft\"}\n+----\n+\n+The same applies for a bendable score:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+@PlanningSolution\n+public class CloudBalance {\n+\n+    @PlanningScore\n+    private BendableScore score;\n+\n+    ...\n+}\n+----\n+\n+This will generate:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4863ba293d1d83e1a4f7a39430b970148beb31cc"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzAwODcyOnYy", "diffSide": "RIGHT", "path": "optaplanner-docs/src/main/asciidoc/Integration/Integration-chapter.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjozMjo1MlrOF5a-7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjozMjo1MlrOF5a-7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc1NTI0Nw==", "bodyText": "same here, avoid future tense", "url": "https://github.com/kiegroup/optaplanner/pull/727#discussion_r395755247", "createdAt": "2020-03-20T16:32:52Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/Integration/Integration-chapter.adoc", "diffHunk": "@@ -420,6 +420,67 @@ For example, this will generate this JSON:\n ----\n \n \n+[[integrationWithJsonb]]\n+=== JSON: JSON-B\n+\n+Enrich domain POJOs (solution, entities and problem facts) with JSON-B annotations to serialize them to/from JSON.\n+\n+Add a dependency to the `optaplanner-persistence-jsonb` jar and use `OptaPlannerJsonbConfig` to create a `Jsonb` instance:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+JsonbConfig config = OptaPlannerJsonbConfig.createConfig();\n+Jsonb jsonb = JsonbBuilder.create(config);\n+----\n+\n+\n+[[jsonbMarshallingAScore]]\n+==== JSON-B: marshalling a `Score`\n+\n+When a `Score` is marshalled to/from JSON by the default JSON-B configuration, it fails.\n+The `OptaPlannerJsonbConfig` fixes that, by using adapters including `BendableScoreJsonbAdapter`, `HardSoftScoreJsonbAdapter`, etc.\n+\n+[source,java,options=\"nowrap\"]\n+----\n+@PlanningSolution\n+public class CloudBalance {\n+\n+    @PlanningScore\n+    private HardSoftScore score;\n+\n+    ...\n+}\n+----\n+\n+For example, this will generate this JSON:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9519e44954aa9c6daf6cedae93568ab56a6ef728"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4470, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}