{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MTc3OTQw", "number": 682, "title": "PLANNER-1854 Fail fast on negative constraint match weight", "bodyText": "", "createdAt": "2020-02-12T08:41:50Z", "url": "https://github.com/kiegroup/optaplanner/pull/682", "merged": true, "mergeCommit": {"oid": "b395eb382fd028ebce30c29dcf65a37790be7302"}, "closed": true, "closedAt": "2020-02-12T10:56:56Z", "author": {"login": "triceo"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDiOEwAH2gAyMzc0MTc3OTQwOjJiODg1YzA0ZWMzZmQ3MDNjMDI4ZWI5NWI2MzRhY2M3NjhlMjIwNzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDjLpLgH2gAyMzc0MTc3OTQwOjM4NTNmOWJmYjM5YzhiZjQ0Y2EwODNkMDU2YjQ3MGNmMzFlMmZkOWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2b885c04ec3fd703c028eb95b634acc768e22073", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/2b885c04ec3fd703c028eb95b634acc768e22073", "committedDate": "2020-02-12T08:40:00Z", "message": "PLANNER-1854 Fail fast on negative constraint match weight"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ace237cd3ad12c1904ef58fb3f3ebb7e9ff1373b", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/ace237cd3ad12c1904ef58fb3f3ebb7e9ff1373b", "committedDate": "2020-02-12T08:50:57Z", "message": "Reuse assertion method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjgxODY3", "url": "https://github.com/kiegroup/optaplanner/pull/682#pullrequestreview-357281867", "createdAt": "2020-02-12T09:02:02Z", "commit": {"oid": "ace237cd3ad12c1904ef58fb3f3ebb7e9ff1373b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTowMjowMlrOFomXmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTowMjowMlrOFomXmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNTk5Mw==", "bodyText": "-1 Avoid number.doubleValue(), intValue(), ... like the plague. Why?\n\nrounding errors, try (double) 9007199254740993L, see https://ge0ffrey.github.io/ge0ffrey-presentations/cornerCaseCheatSheet/cheatSheetJava.html\ndoubleValue() on some large or extremely accurate BigDecimals are questionable\n\nYou could in theory prove that the signum well never change by rounding. But seeing how Math.abs() behaves on MIN_VALUE, let's not take that risk. Furthermore, this causes auto-inboxing to Number, which will have a performance impact.\nAlso, keep the operands of the same type, to avoid java-puzzlers-bugs. So keep the second operand specifically a double: if (impact.doubleValue() < 0.0) {. (Same goes for longs: in LongScore etc, we use 0L to send a zero long, not 0.)\nThis implies we'll have an assertPositiveImpact(, int), assertPositiveImpact(, long), etc", "url": "https://github.com/kiegroup/optaplanner/pull/682#discussion_r378115993", "createdAt": "2020-02-12T09:02:02Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/bavet/common/BavetAbstractConstraintStream.java", "diffHunk": "@@ -68,4 +69,12 @@ public BavetAbstractConstraintStream(BavetConstraintFactory<Solution_> constrain\n         return constraintFactory;\n     }\n \n+    protected static void assertPositiveImpact(Constraint constraint, Number impact) {\n+        if (impact.doubleValue() < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ace237cd3ad12c1904ef58fb3f3ebb7e9ff1373b"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjgyOTc2", "url": "https://github.com/kiegroup/optaplanner/pull/682#pullrequestreview-357282976", "createdAt": "2020-02-12T09:03:45Z", "commit": {"oid": "ace237cd3ad12c1904ef58fb3f3ebb7e9ff1373b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3853f9bfb39c8bf44ca083d056b470cf31e2fd9a", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/3853f9bfb39c8bf44ca083d056b470cf31e2fd9a", "committedDate": "2020-02-12T09:47:15Z", "message": "Address code review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3084, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}