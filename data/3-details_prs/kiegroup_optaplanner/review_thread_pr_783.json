{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTYxNzM1", "number": 783, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoyOTozMlrOD-F2iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDo1NzowM1rOD--u5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDM0MTg3OnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoyOTozMlrOGX-qug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoyOTozMlrOGX-qug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzE3OA==", "bodyText": "Needs to change during releases...", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r427797178", "createdAt": "2020-05-20T07:29:32Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/build.gradle", "diffHunk": "@@ -0,0 +1,34 @@\n+plugins {\n+    id \"org.springframework.boot\" version \"2.2.6.RELEASE\"\n+    id \"io.spring.dependency-management\" version \"1.0.9.RELEASE\"\n+    id \"java\"\n+}\n+\n+group = \"org.optaplanner.quickstarts\"\n+version = \"7.38.0-SNAPSHOT\"\n+sourceCompatibility = \"1.8\"\n+\n+optaplannerVersion = \"7.38.0-SNAPSHOT\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDM0MjQ5OnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoyOTo0MlrOGX-rEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDo0MTo1OFrOGYPPpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzI2Nw==", "bodyText": "Needs to change during releases...", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r427797267", "createdAt": "2020-05-20T07:29:42Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/build.gradle", "diffHunk": "@@ -0,0 +1,34 @@\n+plugins {\n+    id \"org.springframework.boot\" version \"2.2.6.RELEASE\"\n+    id \"io.spring.dependency-management\" version \"1.0.9.RELEASE\"\n+    id \"java\"\n+}\n+\n+group = \"org.optaplanner.quickstarts\"\n+version = \"7.38.0-SNAPSHOT\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgyMTc1Mw==", "bodyText": "Is Gradle necessary? I'm not particularly excited to have to maintain and test everything with two different build systems.\nAnd I'm sure QE wouldn't be either.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r427821753", "createdAt": "2020-05-20T08:13:04Z", "author": {"login": "triceo"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/build.gradle", "diffHunk": "@@ -0,0 +1,34 @@\n+plugins {\n+    id \"org.springframework.boot\" version \"2.2.6.RELEASE\"\n+    id \"io.spring.dependency-management\" version \"1.0.9.RELEASE\"\n+    id \"java\"\n+}\n+\n+group = \"org.optaplanner.quickstarts\"\n+version = \"7.38.0-SNAPSHOT\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzI2Nw=="}, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA2ODc3Mg==", "bodyText": "20% of the java ecosystem use Gradle.\nWe can't keep ignoring them I think. Definitly worth a discussion.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428068772", "createdAt": "2020-05-20T14:41:58Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/build.gradle", "diffHunk": "@@ -0,0 +1,34 @@\n+plugins {\n+    id \"org.springframework.boot\" version \"2.2.6.RELEASE\"\n+    id \"io.spring.dependency-management\" version \"1.0.9.RELEASE\"\n+    id \"java\"\n+}\n+\n+group = \"org.optaplanner.quickstarts\"\n+version = \"7.38.0-SNAPSHOT\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzI2Nw=="}, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDM0Mjk0OnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoyOTo1M1rOGX-rXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzoxOTowNVrOGY7qPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzM0Mg==", "bodyText": "Needs to change during releases...", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r427797342", "createdAt": "2020-05-20T07:29:53Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/pom.xml", "diffHunk": "@@ -0,0 +1,129 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.optaplanner.quickstarts</groupId>\n+    <artifactId>optaplanner-spring-boot-school-timetabling-quickstart</artifactId>\n+    <version>7.38.0-SNAPSHOT</version>\n+    <name>OptaPlanner Spring Boot school timetabling quick start</name>\n+\n+    <properties>\n+        <version.org.optaplanner>7.38.0-SNAPSHOT</version.org.optaplanner>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MjAxNg==", "bodyText": "Unless we for any reason use a different version for this project, let's use ${project.version} here. The less places to update the better.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428472016", "createdAt": "2020-05-21T06:35:51Z", "author": {"login": "rsynek"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/pom.xml", "diffHunk": "@@ -0,0 +1,129 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.optaplanner.quickstarts</groupId>\n+    <artifactId>optaplanner-spring-boot-school-timetabling-quickstart</artifactId>\n+    <version>7.38.0-SNAPSHOT</version>\n+    <name>OptaPlanner Spring Boot school timetabling quick start</name>\n+\n+    <properties>\n+        <version.org.optaplanner>7.38.0-SNAPSHOT</version.org.optaplanner>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzM0Mg=="}, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NjQ3OA==", "bodyText": "The quickstart version will be 0.1.0-SNAPSHOT, and it won't have a parent pom, so we can't use ${project.version}..", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428796478", "createdAt": "2020-05-21T17:19:05Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/pom.xml", "diffHunk": "@@ -0,0 +1,129 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.optaplanner.quickstarts</groupId>\n+    <artifactId>optaplanner-spring-boot-school-timetabling-quickstart</artifactId>\n+    <version>7.38.0-SNAPSHOT</version>\n+    <name>OptaPlanner Spring Boot school timetabling quick start</name>\n+\n+    <properties>\n+        <version.org.optaplanner>7.38.0-SNAPSHOT</version.org.optaplanner>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzM0Mg=="}, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDM0MzI1OnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/pom.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoyOTo1OFrOGX-rjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDo0NDowNlrOGYPWNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzM4OA==", "bodyText": "Needs to change during releases...", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r427797388", "createdAt": "2020-05-20T07:29:58Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/pom.xml", "diffHunk": "@@ -0,0 +1,129 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.optaplanner.quickstarts</groupId>\n+    <artifactId>optaplanner-spring-boot-school-timetabling-quickstart</artifactId>\n+    <version>7.38.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgyMjUxMQ==", "bodyText": "Honestly, since it doesn't share our POM hierarchy, I wonder if it even belongs in this repo. It doesn't behave like all the other modules, so maybe it's not like the other modules.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r427822511", "createdAt": "2020-05-20T08:14:21Z", "author": {"login": "triceo"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/pom.xml", "diffHunk": "@@ -0,0 +1,129 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.optaplanner.quickstarts</groupId>\n+    <artifactId>optaplanner-spring-boot-school-timetabling-quickstart</artifactId>\n+    <version>7.38.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzM4OA=="}, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA2OTkzMQ==", "bodyText": "Yea, the downside is if we push it it's own repo, we get cross-repo PR's (think git actions) and find-in-path searches that might not include it (because deverlopers won't know to add that repo in their IDE too)\nI think this is the lesser evil.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428069931", "createdAt": "2020-05-20T14:43:24Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/pom.xml", "diffHunk": "@@ -0,0 +1,129 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.optaplanner.quickstarts</groupId>\n+    <artifactId>optaplanner-spring-boot-school-timetabling-quickstart</artifactId>\n+    <version>7.38.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzM4OA=="}, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA3MDQ1Mw==", "bodyText": "Ah, and optaplanner-distribution would also need to move into it's own repo too: it depends on the quickstarts which depend on optaplanner starter/extension/core", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428070453", "createdAt": "2020-05-20T14:44:06Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/pom.xml", "diffHunk": "@@ -0,0 +1,129 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.optaplanner.quickstarts</groupId>\n+    <artifactId>optaplanner-spring-boot-school-timetabling-quickstart</artifactId>\n+    <version>7.38.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzM4OA=="}, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODU0MjM3OnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/TimeTableRepository.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjo0NDowMFrOGYoBhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzoyMTo1OFrOGY7wpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NDc1Ng==", "bodyText": "Is this caused by a frequent updates as a reaction on every new best solution available?", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428474756", "createdAt": "2020-05-21T06:44:00Z", "author": {"login": "rsynek"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/TimeTableRepository.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.example.persistence;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.TimeTable;\n+\n+@Service\n+@Transactional\n+public class TimeTableRepository {\n+\n+    // There is only one time table, so there is only timeTableId (= problemId).\n+    public static final Long SINGLETON_TIME_TABLE_ID = 1L;\n+\n+    @Autowired\n+    private TimeslotRepository timeslotRepository;\n+    @Autowired\n+    private RoomRepository roomRepository;\n+    @Autowired\n+    private LessonRepository lessonRepository;\n+\n+    public TimeTable findById(Long id) {\n+        if (!SINGLETON_TIME_TABLE_ID.equals(id)) {\n+            throw new IllegalStateException(\"There is no timeTable with id (\" + id + \").\");\n+        }\n+        // Occurs in a single transaction, so each initialized lesson references the same timeslot/room instance\n+        // that is contained by the timeTable's timeslotList/roomList.\n+        return new TimeTable(\n+                timeslotRepository.findAll(),\n+                roomRepository.findAll(),\n+                lessonRepository.findAll());\n+    }\n+\n+    public void save(TimeTable timeTable) {\n+        for (Lesson lesson : timeTable.getLessonList()) {\n+            // TODO this is awfully naive: optimistic locking causes issues if called by the SolverManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NzkyNA==", "bodyText": "No, what happens if someone modifies a talk's teacher while it solving?\nWell, the ProblemChangedRepositoryEventListener will probably prevent that, but not always.\nThe only safe way to prevent it is to use JPA optimistic locking (or worse, pessimistic locking). But this code won't work with optimistic locking... due to planning cloning. Definitly an issue many users will face.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428797924", "createdAt": "2020-05-21T17:21:35Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/TimeTableRepository.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.example.persistence;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.TimeTable;\n+\n+@Service\n+@Transactional\n+public class TimeTableRepository {\n+\n+    // There is only one time table, so there is only timeTableId (= problemId).\n+    public static final Long SINGLETON_TIME_TABLE_ID = 1L;\n+\n+    @Autowired\n+    private TimeslotRepository timeslotRepository;\n+    @Autowired\n+    private RoomRepository roomRepository;\n+    @Autowired\n+    private LessonRepository lessonRepository;\n+\n+    public TimeTable findById(Long id) {\n+        if (!SINGLETON_TIME_TABLE_ID.equals(id)) {\n+            throw new IllegalStateException(\"There is no timeTable with id (\" + id + \").\");\n+        }\n+        // Occurs in a single transaction, so each initialized lesson references the same timeslot/room instance\n+        // that is contained by the timeTable's timeslotList/roomList.\n+        return new TimeTable(\n+                timeslotRepository.findAll(),\n+                roomRepository.findAll(),\n+                lessonRepository.findAll());\n+    }\n+\n+    public void save(TimeTable timeTable) {\n+        for (Lesson lesson : timeTable.getLessonList()) {\n+            // TODO this is awfully naive: optimistic locking causes issues if called by the SolverManager", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NDc1Ng=="}, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5ODExNg==", "bodyText": "out of scope to fix for this PR though", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428798116", "createdAt": "2020-05-21T17:21:58Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/TimeTableRepository.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.example.persistence;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.TimeTable;\n+\n+@Service\n+@Transactional\n+public class TimeTableRepository {\n+\n+    // There is only one time table, so there is only timeTableId (= problemId).\n+    public static final Long SINGLETON_TIME_TABLE_ID = 1L;\n+\n+    @Autowired\n+    private TimeslotRepository timeslotRepository;\n+    @Autowired\n+    private RoomRepository roomRepository;\n+    @Autowired\n+    private LessonRepository lessonRepository;\n+\n+    public TimeTable findById(Long id) {\n+        if (!SINGLETON_TIME_TABLE_ID.equals(id)) {\n+            throw new IllegalStateException(\"There is no timeTable with id (\" + id + \").\");\n+        }\n+        // Occurs in a single transaction, so each initialized lesson references the same timeslot/room instance\n+        // that is contained by the timeTable's timeslotList/roomList.\n+        return new TimeTable(\n+                timeslotRepository.findAll(),\n+                roomRepository.findAll(),\n+                lessonRepository.findAll());\n+    }\n+\n+    public void save(TimeTable timeTable) {\n+        for (Lesson lesson : timeTable.getLessonList()) {\n+            // TODO this is awfully naive: optimistic locking causes issues if called by the SolverManager", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NDc1Ng=="}, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODU4MDUxOnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/ProblemChangedRepositoryEventListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNzowMDo1M1rOGYoYzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzoyMjoxOVrOGY7xSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MDcxNw==", "bodyText": "I think it's worth describing what the issue is that a user needs to provide such a handler. This class is some kind of workaround. If I am required to put such a workaround in my project, I need to know why.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428480717", "createdAt": "2020-05-21T07:00:53Z", "author": {"login": "rsynek"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/ProblemChangedRepositoryEventListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package com.example.persistence;\n+\n+import org.optaplanner.core.api.solver.SolverStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.rest.core.annotation.HandleBeforeCreate;\n+import org.springframework.data.rest.core.annotation.HandleBeforeDelete;\n+import org.springframework.data.rest.core.annotation.HandleBeforeSave;\n+import org.springframework.data.rest.core.annotation.RepositoryEventHandler;\n+import org.springframework.stereotype.Component;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.Room;\n+import com.example.domain.Timeslot;\n+import com.example.solver.TimeTableController;\n+\n+@Component\n+@RepositoryEventHandler\n+public class ProblemChangedRepositoryEventListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5ODI4MA==", "bodyText": "Agreed, this needs a motivation", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428798280", "createdAt": "2020-05-21T17:22:19Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/ProblemChangedRepositoryEventListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package com.example.persistence;\n+\n+import org.optaplanner.core.api.solver.SolverStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.rest.core.annotation.HandleBeforeCreate;\n+import org.springframework.data.rest.core.annotation.HandleBeforeDelete;\n+import org.springframework.data.rest.core.annotation.HandleBeforeSave;\n+import org.springframework.data.rest.core.annotation.RepositoryEventHandler;\n+import org.springframework.stereotype.Component;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.Room;\n+import com.example.domain.Timeslot;\n+import com.example.solver.TimeTableController;\n+\n+@Component\n+@RepositoryEventHandler\n+public class ProblemChangedRepositoryEventListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MDcxNw=="}, "originalCommit": {"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjUzODEzOnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/quarkus-school-timetabling/src/main/java/org/acme/optaplanner/rest/RoomResource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozNjowMVrOGZPOeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDoxMTo0OVrOGZYlRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzA1MA==", "bodyText": "Who is this comment targetting, us or our users?", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429117050", "createdAt": "2020-05-22T08:36:01Z", "author": {"login": "rsynek"}, "path": "optaplanner-quickstarts/quarkus-school-timetabling/src/main/java/org/acme/optaplanner/rest/RoomResource.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.acme.optaplanner.rest;\n+\n+import java.util.List;\n+\n+import javax.transaction.Transactional;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.acme.optaplanner.domain.Room;\n+\n+import io.quarkus.panache.common.Sort;\n+\n+@Path(\"/rooms\")\n+@Produces(MediaType.APPLICATION_JSON)\n+@Consumes(MediaType.APPLICATION_JSON)\n+@Transactional\n+public class RoomResource {\n+\n+    @GET\n+    public List<Room> getAllRooms() {\n+        return Room.listAll(Sort.by(\"name\").and(\"id\"));\n+    }\n+\n+    // To try:  curl -d '{\"name\":\"Room Z\"}' -H \"Content-Type: application/json\" -X POST http://localhost:8080/rooms", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee8eda283770473e6dba306c3a5aff249f8ffe35"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIyMzkyNg==", "bodyText": "Mostly us, I guess.\nYou think it should be removed?", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429223926", "createdAt": "2020-05-22T12:44:08Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/quarkus-school-timetabling/src/main/java/org/acme/optaplanner/rest/RoomResource.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.acme.optaplanner.rest;\n+\n+import java.util.List;\n+\n+import javax.transaction.Transactional;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.acme.optaplanner.domain.Room;\n+\n+import io.quarkus.panache.common.Sort;\n+\n+@Path(\"/rooms\")\n+@Produces(MediaType.APPLICATION_JSON)\n+@Consumes(MediaType.APPLICATION_JSON)\n+@Transactional\n+public class RoomResource {\n+\n+    @GET\n+    public List<Room> getAllRooms() {\n+        return Room.listAll(Sort.by(\"name\").and(\"id\"));\n+    }\n+\n+    // To try:  curl -d '{\"name\":\"Room Z\"}' -H \"Content-Type: application/json\" -X POST http://localhost:8080/rooms", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzA1MA=="}, "originalCommit": {"oid": "ee8eda283770473e6dba306c3a5aff249f8ffe35"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIyNjIxMw==", "bodyText": "If it's for us, we don't need it. We have tests.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429226213", "createdAt": "2020-05-22T12:48:47Z", "author": {"login": "rsynek"}, "path": "optaplanner-quickstarts/quarkus-school-timetabling/src/main/java/org/acme/optaplanner/rest/RoomResource.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.acme.optaplanner.rest;\n+\n+import java.util.List;\n+\n+import javax.transaction.Transactional;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.acme.optaplanner.domain.Room;\n+\n+import io.quarkus.panache.common.Sort;\n+\n+@Path(\"/rooms\")\n+@Produces(MediaType.APPLICATION_JSON)\n+@Consumes(MediaType.APPLICATION_JSON)\n+@Transactional\n+public class RoomResource {\n+\n+    @GET\n+    public List<Room> getAllRooms() {\n+        return Room.listAll(Sort.by(\"name\").and(\"id\"));\n+    }\n+\n+    // To try:  curl -d '{\"name\":\"Room Z\"}' -H \"Content-Type: application/json\" -X POST http://localhost:8080/rooms", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzA1MA=="}, "originalCommit": {"oid": "ee8eda283770473e6dba306c3a5aff249f8ffe35"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI3MDM0MA==", "bodyText": "ok, removing", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429270340", "createdAt": "2020-05-22T14:11:49Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/quarkus-school-timetabling/src/main/java/org/acme/optaplanner/rest/RoomResource.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.acme.optaplanner.rest;\n+\n+import java.util.List;\n+\n+import javax.transaction.Transactional;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.acme.optaplanner.domain.Room;\n+\n+import io.quarkus.panache.common.Sort;\n+\n+@Path(\"/rooms\")\n+@Produces(MediaType.APPLICATION_JSON)\n+@Consumes(MediaType.APPLICATION_JSON)\n+@Transactional\n+public class RoomResource {\n+\n+    @GET\n+    public List<Room> getAllRooms() {\n+        return Room.listAll(Sort.by(\"name\").and(\"id\"));\n+    }\n+\n+    // To try:  curl -d '{\"name\":\"Room Z\"}' -H \"Content-Type: application/json\" -X POST http://localhost:8080/rooms", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzA1MA=="}, "originalCommit": {"oid": "ee8eda283770473e6dba306c3a5aff249f8ffe35"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU3ODgyOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo1MDoxNFrOGZPofw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjo0NDoxNVrOGZVwJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyMzcxMQ==", "bodyText": "This makes the module automatically part of the build.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429123711", "createdAt": "2020-05-22T08:50:14Z", "author": {"login": "rsynek"}, "path": "pom.xml", "diffHunk": "@@ -70,6 +70,7 @@\n     <module>optaplanner-benchmark</module>\n     <module>optaplanner-test</module>\n     <module>optaplanner-examples</module>\n+    <module>optaplanner-quickstarts</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee8eda283770473e6dba306c3a5aff249f8ffe35"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIyMzk3Mw==", "bodyText": "Fixed", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429223973", "createdAt": "2020-05-22T12:44:15Z", "author": {"login": "ge0ffrey"}, "path": "pom.xml", "diffHunk": "@@ -70,6 +70,7 @@\n     <module>optaplanner-benchmark</module>\n     <module>optaplanner-test</module>\n     <module>optaplanner-examples</module>\n+    <module>optaplanner-quickstarts</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyMzcxMQ=="}, "originalCommit": {"oid": "ee8eda283770473e6dba306c3a5aff249f8ffe35"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU4MDgyOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo1MDo1NVrOGZPpzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjo0NDo0OVrOGZVxFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNDA0Nw==", "bodyText": "Is this property defined for both community and product releases?", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429124047", "createdAt": "2020-05-22T08:50:55Z", "author": {"login": "rsynek"}, "path": "pom.xml", "diffHunk": "@@ -117,6 +118,18 @@\n         <module>optaplanner-distribution</module>\n       </modules>\n     </profile>\n+    <profile>\n+      <id>notReleasedProfile</id>\n+      <activation>\n+        <property>\n+          <name>!release</name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee8eda283770473e6dba306c3a5aff249f8ffe35"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIyNDIxMg==", "bodyText": "Yes, I believe so. @mbiarnes This was fine, right?", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429224212", "createdAt": "2020-05-22T12:44:49Z", "author": {"login": "ge0ffrey"}, "path": "pom.xml", "diffHunk": "@@ -117,6 +118,18 @@\n         <module>optaplanner-distribution</module>\n       </modules>\n     </profile>\n+    <profile>\n+      <id>notReleasedProfile</id>\n+      <activation>\n+        <property>\n+          <name>!release</name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNDA0Nw=="}, "originalCommit": {"oid": "ee8eda283770473e6dba306c3a5aff249f8ffe35"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjY0NzYxOnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/solver/TimeTableControllerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOToxNDoxMlrOGZQT5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjo1OTozNlrOGZWMxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNDgyMA==", "bodyText": "for some reason, this test does not run:\n\nT E S T S\nRunning com.example.solver.TimeTableControllerTest\nTests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec\nResults :\nTests run: 0, Failures: 0, Errors: 0, Skipped: 0", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429134820", "createdAt": "2020-05-22T09:14:12Z", "author": {"login": "rsynek"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/solver/TimeTableControllerTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.example.solver;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.Timeout;\n+import org.optaplanner.core.api.solver.SolverStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.TimeTable;\n+\n+@SpringBootTest(properties = {\n+        \"optaplanner.solver.termination.spent-limit=1h\", // Effectively disable this termination in favor of the best-score-limit\n+        \"optaplanner.solver.termination.best-score-limit=0hard/*soft\"})\n+public class TimeTableControllerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6666bc02c40badd58f97c867d42df7cba256f17"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMDI2NA==", "bodyText": "Good catch. Adding this on my todo list, extracting to a new PR.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429230264", "createdAt": "2020-05-22T12:57:26Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/solver/TimeTableControllerTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.example.solver;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.Timeout;\n+import org.optaplanner.core.api.solver.SolverStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.TimeTable;\n+\n+@SpringBootTest(properties = {\n+        \"optaplanner.solver.termination.spent-limit=1h\", // Effectively disable this termination in favor of the best-score-limit\n+        \"optaplanner.solver.termination.best-score-limit=0hard/*soft\"})\n+public class TimeTableControllerTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNDgyMA=="}, "originalCommit": {"oid": "a6666bc02c40badd58f97c867d42df7cba256f17"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMTMwMg==", "bodyText": "Probably related to moving from the spring parent to the spring bom", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429231302", "createdAt": "2020-05-22T12:59:36Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/solver/TimeTableControllerTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.example.solver;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.Timeout;\n+import org.optaplanner.core.api.solver.SolverStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.TimeTable;\n+\n+@SpringBootTest(properties = {\n+        \"optaplanner.solver.termination.spent-limit=1h\", // Effectively disable this termination in favor of the best-score-limit\n+        \"optaplanner.solver.termination.best-score-limit=0hard/*soft\"})\n+public class TimeTableControllerTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNDgyMA=="}, "originalCommit": {"oid": "a6666bc02c40badd58f97c867d42df7cba256f17"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjY1NDQ0OnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/TimeTableSpringBootApp.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOToxNjoyN1rOGZQYQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDo0ODo1OFrOGZZ8LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNTkzNg==", "bodyText": "vs. org.acme.optaplanner in the quarkus quickstart? Why not org.optaplanner.quickstart?", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429135936", "createdAt": "2020-05-22T09:16:27Z", "author": {"login": "rsynek"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/TimeTableSpringBootApp.java", "diffHunk": "@@ -0,0 +1,198 @@\n+package com.example;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6666bc02c40badd58f97c867d42df7cba256f17"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIyNDYyMw==", "bodyText": "Yea, this is a discussion in it's own. Opening conversation on zulip", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429224623", "createdAt": "2020-05-22T12:45:39Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/TimeTableSpringBootApp.java", "diffHunk": "@@ -0,0 +1,198 @@\n+package com.example;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNTkzNg=="}, "originalCommit": {"oid": "a6666bc02c40badd58f97c867d42df7cba256f17"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5MjU4OQ==", "bodyText": "settled on org.acme.schooltimetabling and com.example.schooltimetabling", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429292589", "createdAt": "2020-05-22T14:48:58Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/TimeTableSpringBootApp.java", "diffHunk": "@@ -0,0 +1,198 @@\n+package com.example;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNTkzNg=="}, "originalCommit": {"oid": "a6666bc02c40badd58f97c867d42df7cba256f17"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjcyOTE0OnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/update-version.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo0MToxN1rOGZRGpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo0MToxN1rOGZRGpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE0NzgxMw==", "bodyText": "@ge0ffrey you can remove this line (27) - this is not any more used", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429147813", "createdAt": "2020-05-22T09:41:17Z", "author": {"login": "mbiarnes"}, "path": "optaplanner-quickstarts/update-version.sh", "diffHunk": "@@ -0,0 +1,49 @@\n+#!/bin/bash\n+set -e\n+\n+initializeScriptDir() {\n+    # Go to the script directory\n+    cd `dirname $0`\n+    # If the file itself is a symbolic link (ignoring parent directory links), then follow that link recursively\n+    # Note that scriptDir=`pwd -P` does not do that and cannot cope with a link directly to the file\n+    scriptFileBasename=`basename $0`\n+    while [ -L \"$scriptFileBasename\" ] ; do\n+        scriptFileBasename=`readlink $scriptFileBasename` # Follow the link\n+        cd `dirname $scriptFileBasename`\n+        scriptFileBasename=`basename $scriptFileBasename`\n+    done\n+    # Set script directory and remove other symbolic links (parent directory links)\n+    scriptDir=`pwd -P`\n+}\n+\n+initializeScriptDir\n+\n+if [ $# != 1 ] && [ $# != 2 ]; then\n+    echo\n+    echo \"Usage:\"\n+    echo \"  $0 newVersion releaseType\"\n+    echo \"For example:\"\n+    echo \"  $0 7.5.0.Final community\"\n+    echo \"  $0 7.5.0.20171120-prod productized\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6666bc02c40badd58f97c867d42df7cba256f17"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzY2MTE2OnYy", "diffSide": "RIGHT", "path": "optaplanner-quickstarts/quarkus-school-timetabling/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDo1NzowM1rOGZaOEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNTo1Mzo0MlrOGZcFAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NzE3MQ==", "bodyText": "This is also a maintenance burden - we will want to update this version on regular basis.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429297171", "createdAt": "2020-05-22T14:57:03Z", "author": {"login": "rsynek"}, "path": "optaplanner-quickstarts/quarkus-school-timetabling/build.gradle", "diffHunk": "@@ -0,0 +1,50 @@\n+plugins {\n+    id \"io.quarkus\" version \"1.4.2.Final\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c81b99172d5d161ad6a19c507e96a46773a67038"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMyNzYxOA==", "bodyText": "Yea, same with the spring version.\nBut that's part of the game. Not much we can do about it.", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429327618", "createdAt": "2020-05-22T15:53:42Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-quickstarts/quarkus-school-timetabling/build.gradle", "diffHunk": "@@ -0,0 +1,50 @@\n+plugins {\n+    id \"io.quarkus\" version \"1.4.2.Final\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NzE3MQ=="}, "originalCommit": {"oid": "c81b99172d5d161ad6a19c507e96a46773a67038"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4543, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}