{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMjM5ODg4", "number": 839, "title": "PLANNER-1997 Spring Boot starter doesn't detect @Planning annotations when they are in abstract classes or interfaces", "bodyText": "Also adds test coverage for this bug, both for our Spring Boot Starter and our Quarkus Extension.", "createdAt": "2020-07-16T14:27:24Z", "url": "https://github.com/kiegroup/optaplanner/pull/839", "merged": true, "mergeCommit": {"oid": "73c7c4cdfb2ad19e7a30d1af63d1cdade6647c92"}, "closed": true, "closedAt": "2020-07-22T09:01:12Z", "author": {"login": "ge0ffrey"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1lbuFAFqTQ1MDE5OTk4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3WrwGgBqjM1NzQ3MDU1Mjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMTk5OTg1", "url": "https://github.com/kiegroup/optaplanner/pull/839#pullrequestreview-450199985", "createdAt": "2020-07-16T20:40:50Z", "commit": {"oid": "6ac69cb56628aabee3dab2a8fb4a69a542a5f9e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNDAxMjQx", "url": "https://github.com/kiegroup/optaplanner/pull/839#pullrequestreview-450401241", "createdAt": "2020-07-17T06:24:42Z", "commit": {"oid": "6ac69cb56628aabee3dab2a8fb4a69a542a5f9e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjoyNDo0M1rOGzG2cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjoyNDo0M1rOGzG2cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MjgwMA==", "bodyText": "Naming: is it really a Spring-specific test domain or is it a domain with annotation on an interface?", "url": "https://github.com/kiegroup/optaplanner/pull/839#discussion_r456242800", "createdAt": "2020-07-17T06:24:43Z", "author": {"login": "rsynek"}, "path": "optaplanner-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/chained/domain/TestdataChainedSpringSolution.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.spring.boot.autoconfigure.chained.domain;\n+\n+import java.util.List;\n+\n+import org.optaplanner.core.api.domain.solution.PlanningEntityCollectionProperty;\n+import org.optaplanner.core.api.domain.solution.PlanningScore;\n+import org.optaplanner.core.api.domain.solution.PlanningSolution;\n+import org.optaplanner.core.api.domain.solution.ProblemFactCollectionProperty;\n+import org.optaplanner.core.api.domain.valuerange.ValueRangeProvider;\n+import org.optaplanner.core.api.score.buildin.simple.SimpleScore;\n+\n+@PlanningSolution\n+public class TestdataChainedSpringSolution {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac69cb56628aabee3dab2a8fb4a69a542a5f9e4"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNDQ5OTUx", "url": "https://github.com/kiegroup/optaplanner/pull/839#pullrequestreview-450449951", "createdAt": "2020-07-17T07:57:40Z", "commit": {"oid": "6ac69cb56628aabee3dab2a8fb4a69a542a5f9e4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjQwNzUw", "url": "https://github.com/kiegroup/optaplanner/pull/839#pullrequestreview-451640750", "createdAt": "2020-07-20T14:08:20Z", "commit": {"oid": "32288dc878a87c0924c0677cbf63b604b339174c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48b19a52045b643d7e2a05ea8f26bc99cbd525ba", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/48b19a52045b643d7e2a05ea8f26bc99cbd525ba", "committedDate": "2020-07-22T08:36:40Z", "message": "PLANNER-1997 Spring Boot starter doesn't detect @Planning annotations when they are in abstract classes or interfaces"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32288dc878a87c0924c0677cbf63b604b339174c", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/32288dc878a87c0924c0677cbf63b604b339174c", "committedDate": "2020-07-20T13:36:55Z", "message": "PLANNER-1997 Include expiration date"}, "afterCommit": {"oid": "48b19a52045b643d7e2a05ea8f26bc99cbd525ba", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/48b19a52045b643d7e2a05ea8f26bc99cbd525ba", "committedDate": "2020-07-22T08:36:40Z", "message": "PLANNER-1997 Spring Boot starter doesn't detect @Planning annotations when they are in abstract classes or interfaces"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3343, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}