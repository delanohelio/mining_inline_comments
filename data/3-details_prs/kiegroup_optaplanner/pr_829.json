{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDg5MTM3", "number": 829, "title": "Remove kie parent 7 from OptaPlanner 8", "bodyText": "Changes in this PR:\n\nRemove kie-parent 7 as the parent from optaplanner-parent. Use jboss-parent directly.\nUpgrade jboss-parent from 31 to 36\nCopy all plugin definitions and other info (except for dependencies) from kie-parent into optaplanner-parent, except for gwt related and other obvious removals (such as felix, pressgang, etc)\nRemove OSGi support\nCopy all dependencies that are actually used by optaplanner from kie-parent to optaplanner-build-parent.\nUpgrade asciidoc plugin from 2.0.0.RC1 to 2.0.0\n\nWhat hacks did this PR had to do:\n\nComment out parent checkstyle config. It's commented out in the pom.xml\nDisable the enforcer rule for plugin versions. It has false negatives.\n\nWhat is not in scope of this PR (=future PR's):\n\nClean up plugins\nClean up dependencies, but \"potentially bad dependencies\" were marked with a TODO though.\nUpgrade plugin versions\nUpgrade dependency versions\nSwitch to kogito-drools instead of drools 7\n\nHow reliable are these changes? Might we loose an enforcer rule, code coverage check, sonar check or something?\nGood question. I don't know. I've done it pretty diligently, but a lot could be broken. We need to check.", "createdAt": "2020-07-07T15:29:17Z", "url": "https://github.com/kiegroup/optaplanner/pull/829", "merged": true, "mergeCommit": {"oid": "a142df037e887d56333bad1f83d4dc23704cf500"}, "closed": true, "closedAt": "2020-07-09T08:37:06Z", "author": {"login": "ge0ffrey"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcynfpzAH2gAyNDQ1NDg5MTM3OmFlZGRkNWI4ZjczMmY0NWMzZWQyMGU1NDNhMzczOWNhZDNmMzBkM2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczKSkQgH2gAyNDQ1NDg5MTM3OmY0YmMzZjJjNGRlMTVmMzRjY2I2ZGRjYTU4OThiZDlkZDk4ZTQ3ZGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aeddd5b8f732f45c3ed20e543a3739cad3f30d3a", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/aeddd5b8f732f45c3ed20e543a3739cad3f30d3a", "committedDate": "2020-07-07T15:23:10Z", "message": "Hook in OptaPlanner Quarkus integration by default"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fe8af53d4b10923b6bd5daa4e8e5718bd6369bd", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/8fe8af53d4b10923b6bd5daa4e8e5718bd6369bd", "committedDate": "2020-07-07T15:23:10Z", "message": "Remove KIE parent + remove OSGi + upgrade asciidoc maven plugin to 2.0.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4188fae6ad4e4b1d17d8358399b82690a1bef0f2", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/4188fae6ad4e4b1d17d8358399b82690a1bef0f2", "committedDate": "2020-07-07T22:46:20Z", "message": "Fix build with empty maven repo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTg1OTAy", "url": "https://github.com/kiegroup/optaplanner/pull/829#pullrequestreview-444585902", "createdAt": "2020-07-08T09:48:18Z", "commit": {"oid": "4188fae6ad4e4b1d17d8358399b82690a1bef0f2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwOTo0ODoxOVrOGughLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMDoyMDo0NlrOGuhmFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQyMDQ2Mw==", "bodyText": "As we discussed, let's consider importing quarkus BOM to avoid manually aligning versions of hibernate, etc.", "url": "https://github.com/kiegroup/optaplanner/pull/829#discussion_r451420463", "createdAt": "2020-07-08T09:48:19Z", "author": {"login": "rsynek"}, "path": "optaplanner-build-parent/pom.xml", "diffHunk": "@@ -14,15 +14,268 @@\n \n   <name>OptaPlanner build parent</name>\n \n+  <properties>\n+    <!-- SNAPSHOT dependency versions -->\n+    <version.org.kie>7.40.0-SNAPSHOT</version.org.kie>\n+\n+    <!-- Normal dependency versions-->\n+    <version.ch.qos.logback>1.2.3</version.ch.qos.logback>\n+    <version.commons-io>2.6</version.commons-io>\n+    <version.com.fasterxml.jackson.core>2.10.4</version.com.fasterxml.jackson.core>\n+    <version.com.h2database>1.3.173</version.com.h2database>\n+    <version.com.thoughtworks.xstream>1.4.11.1</version.com.thoughtworks.xstream>\n+    <version.jakarta.json.bind>1.0.2</version.jakarta.json.bind>\n+    <version.org.apache.commons.lang3>3.9</version.org.apache.commons.lang3>\n+    <version.org.apache.commons.math3>3.4.1</version.org.apache.commons.math3>\n+    <version.org.apache.poi>4.1.2</version.org.apache.poi>\n+    <version.org.assertj>3.14.0</version.org.assertj>\n+    <version.org.freemarker>2.3.28</version.org.freemarker>\n+    <version.org.hibernate>5.3.16.Final</version.org.hibernate>\n+    <version.org.jdom>1.1.3</version.org.jdom>\n+    <version.org.jfree.jfreechart>1.5.0</version.org.jfree.jfreechart>\n+    <version.org.junit>5.5.2</version.org.junit>\n+    <version.org.mockito>1.10.19</version.org.mockito>\n+    <version.org.slf4j>1.7.26</version.org.slf4j>\n+    <version.org.springframework>5.2.6.RELEASE</version.org.springframework>\n+    <version.org.springframework.boot>2.2.6.RELEASE</version.org.springframework.boot>\n+  </properties>\n+\n   <dependencyManagement>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4188fae6ad4e4b1d17d8358399b82690a1bef0f2"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQzODEwMQ==", "bodyText": "What is the motivation for moving the asciidoc configuration from here to the optaplanner-parent?", "url": "https://github.com/kiegroup/optaplanner/pull/829#discussion_r451438101", "createdAt": "2020-07-08T10:20:46Z", "author": {"login": "rsynek"}, "path": "optaplanner-docs/pom.xml", "diffHunk": "@@ -42,52 +42,6 @@\n \n     <pluginManagement>\n       <plugins>\n-        <plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4188fae6ad4e4b1d17d8358399b82690a1bef0f2"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c67049a1a978144f279020bb2fab86d3eb631462", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/c67049a1a978144f279020bb2fab86d3eb631462", "committedDate": "2020-07-08T10:40:38Z", "message": "Remove unused maven properties + copy sonar profile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8fec8155a3aee3541f56425e1295743f11ec0dd", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/c8fec8155a3aee3541f56425e1295743f11ec0dd", "committedDate": "2020-07-08T14:20:50Z", "message": "Minimize javadoc plugin configuration + remove unused maven plugins + isolate pitest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8928f56a8928acbb4fbaf50526f380d2944efd53", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/8928f56a8928acbb4fbaf50526f380d2944efd53", "committedDate": "2020-07-08T14:22:56Z", "message": "Move asciidoc plugin configuration back to optaplanner-docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f12082713ae320968a2c430e08c1c25e5d963ff8", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/f12082713ae320968a2c430e08c1c25e5d963ff8", "committedDate": "2020-07-08T15:31:32Z", "message": "Move plugins configuration from parent to build-parent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MzE1NTEz", "url": "https://github.com/kiegroup/optaplanner/pull/829#pullrequestreview-445315513", "createdAt": "2020-07-09T06:14:36Z", "commit": {"oid": "f12082713ae320968a2c430e08c1c25e5d963ff8"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjoxNDozN1rOGvDDEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNzowMToxMlrOGvEMGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4NjE5Mg==", "bodyText": "GitHub Actions for the persistence module complain about:\n'dependencies.dependency.version' for org.postgresql:postgresql:jar is missing", "url": "https://github.com/kiegroup/optaplanner/pull/829#discussion_r451986192", "createdAt": "2020-07-09T06:14:37Z", "author": {"login": "rsynek"}, "path": "optaplanner-build-parent/pom.xml", "diffHunk": "@@ -14,16 +14,1365 @@\n \n   <name>OptaPlanner build parent</name>\n \n+  <properties>\n+    <!-- ************************************************************************ -->\n+    <!-- Dependencies -->\n+    <!-- ************************************************************************ -->\n+\n+    <!-- SNAPSHOT dependency versions -->\n+    <version.org.kie>7.40.0-SNAPSHOT</version.org.kie>\n+\n+    <!-- Normal dependency versions -->\n+    <!-- TODO Do we want import the quarkus-bom instead of defining these ourselves? -->\n+    <version.ch.qos.logback>1.2.3</version.ch.qos.logback>\n+    <version.commons-io>2.6</version.commons-io>\n+    <version.com.fasterxml.jackson.core>2.10.4</version.com.fasterxml.jackson.core>\n+    <version.com.h2database>1.3.173</version.com.h2database>\n+    <version.com.thoughtworks.xstream>1.4.11.1</version.com.thoughtworks.xstream>\n+    <version.jakarta.json.bind>1.0.2</version.jakarta.json.bind>\n+    <version.org.apache.commons.lang3>3.9</version.org.apache.commons.lang3>\n+    <version.org.apache.commons.math3>3.4.1</version.org.apache.commons.math3>\n+    <version.org.apache.poi>4.1.2</version.org.apache.poi>\n+    <version.org.assertj>3.14.0</version.org.assertj>\n+    <version.org.freemarker>2.3.28</version.org.freemarker>\n+    <version.org.hibernate>5.3.16.Final</version.org.hibernate>\n+    <version.org.jdom>1.1.3</version.org.jdom>\n+    <version.org.jfree.jfreechart>1.5.0</version.org.jfree.jfreechart>\n+    <version.org.junit>5.5.2</version.org.junit>\n+    <version.org.mockito>3.1.0</version.org.mockito>\n+    <version.org.slf4j>1.7.26</version.org.slf4j>\n+    <version.org.springframework>5.2.6.RELEASE</version.org.springframework>\n+    <version.org.springframework.boot>2.2.6.RELEASE</version.org.springframework.boot>\n+\n+    <!-- ************************************************************************ -->\n+    <!-- Plugins -->\n+    <!-- ************************************************************************ -->\n+\n+    <maven.min.version>3.6.2</maven.min.version>\n+    <!-- This property needs to be defined in all modules that use the packaging 'jar'.\n+         It is used by different plugins to make sure the module/bundle names are consistent. -->\n+    <java.module.name/>\n+    <!-- Override format.directory in each parent module in the hierarchy -->\n+    <!-- TODO Can we use project.root.dir for it instead? -->\n+    <format.directory>${project.basedir}/../ide-configuration</format.directory>\n+    <formatter.skip>false</formatter.skip>\n+    <formatter.goal>format</formatter.goal>\n+    <!-- TODO name impsort should indicate it's related to formatting -->\n+    <impsort.goal>sort</impsort.goal>\n+    <!-- TODO https://issues.redhat.com/browse/PLANNER-2042 -->\n+    <spotbugs.failOnViolation>false</spotbugs.failOnViolation>\n+    <!-- override the default GroupId:ArtifactId to map both master branch and 7.x branches to the same SonarCloud project -->\n+    <sonar.projectKey>org.optaplanner:optaplanner</sonar.projectKey>\n+    <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>\n+    <!-- Jacoco plugin configurations -->\n+    <version.jacoco.plugin>0.8.5</version.jacoco.plugin>\n+    <!-- JaCoCo coverage data file location -->\n+    <!--suppress UnresolvedMavenProperty-->\n+    <project.root.dir>${maven.multiModuleProjectDirectory}</project.root.dir>\n+    <jacoco.exec.file>${project.root.dir}/target/jacoco.exec</jacoco.exec.file>\n+    <jacoco.agent.argLine/>\n+    <!-- TODO remove failOnViolation once all repositories comply to the defined checkstyle rules -->\n+    <checkstyle.failOnViolation>false</checkstyle.failOnViolation>\n+    <checkstyle.logViolationsToConsole>false</checkstyle.logViolationsToConsole>\n+    <checkstyle.header.template>.*</checkstyle.header.template>\n+    <checkstyle.header.extensions>java</checkstyle.header.extensions>\n+    <enforcer.failOnDuplicatedClasses>true</enforcer.failOnDuplicatedClasses>\n+    <!-- Latest release to be used by api-compatibility-check to check backwards compatibility of the API. -->\n+    <revapi.oldKieVersion>7.33.0.Final</revapi.oldKieVersion>\n+    <revapi.newKieVersion>${project.version}</revapi.newKieVersion>\n+  </properties>\n+\n   <dependencyManagement>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f12082713ae320968a2c430e08c1c25e5d963ff8"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk5ODAwNg==", "bodyText": "(as a part of \"Clean up plugins\"; a separate PR)\nThe comment suggests these ignored classes are needed for guvnor-ala-openshift-client. Maybe we can live without this extra configuration.\nThe same applies to a couple of other enforcer rules - there are a lot of exceptions to the rules and most of them we probably don't need. Maybe we should start with a clean list and add only what's needed.", "url": "https://github.com/kiegroup/optaplanner/pull/829#discussion_r451998006", "createdAt": "2020-07-09T06:46:19Z", "author": {"login": "rsynek"}, "path": "optaplanner-build-parent/pom.xml", "diffHunk": "@@ -14,16 +14,1365 @@\n \n   <name>OptaPlanner build parent</name>\n \n+  <properties>\n+    <!-- ************************************************************************ -->\n+    <!-- Dependencies -->\n+    <!-- ************************************************************************ -->\n+\n+    <!-- SNAPSHOT dependency versions -->\n+    <version.org.kie>7.40.0-SNAPSHOT</version.org.kie>\n+\n+    <!-- Normal dependency versions -->\n+    <!-- TODO Do we want import the quarkus-bom instead of defining these ourselves? -->\n+    <version.ch.qos.logback>1.2.3</version.ch.qos.logback>\n+    <version.commons-io>2.6</version.commons-io>\n+    <version.com.fasterxml.jackson.core>2.10.4</version.com.fasterxml.jackson.core>\n+    <version.com.h2database>1.3.173</version.com.h2database>\n+    <version.com.thoughtworks.xstream>1.4.11.1</version.com.thoughtworks.xstream>\n+    <version.jakarta.json.bind>1.0.2</version.jakarta.json.bind>\n+    <version.org.apache.commons.lang3>3.9</version.org.apache.commons.lang3>\n+    <version.org.apache.commons.math3>3.4.1</version.org.apache.commons.math3>\n+    <version.org.apache.poi>4.1.2</version.org.apache.poi>\n+    <version.org.assertj>3.14.0</version.org.assertj>\n+    <version.org.freemarker>2.3.28</version.org.freemarker>\n+    <version.org.hibernate>5.3.16.Final</version.org.hibernate>\n+    <version.org.jdom>1.1.3</version.org.jdom>\n+    <version.org.jfree.jfreechart>1.5.0</version.org.jfree.jfreechart>\n+    <version.org.junit>5.5.2</version.org.junit>\n+    <version.org.mockito>3.1.0</version.org.mockito>\n+    <version.org.slf4j>1.7.26</version.org.slf4j>\n+    <version.org.springframework>5.2.6.RELEASE</version.org.springframework>\n+    <version.org.springframework.boot>2.2.6.RELEASE</version.org.springframework.boot>\n+\n+    <!-- ************************************************************************ -->\n+    <!-- Plugins -->\n+    <!-- ************************************************************************ -->\n+\n+    <maven.min.version>3.6.2</maven.min.version>\n+    <!-- This property needs to be defined in all modules that use the packaging 'jar'.\n+         It is used by different plugins to make sure the module/bundle names are consistent. -->\n+    <java.module.name/>\n+    <!-- Override format.directory in each parent module in the hierarchy -->\n+    <!-- TODO Can we use project.root.dir for it instead? -->\n+    <format.directory>${project.basedir}/../ide-configuration</format.directory>\n+    <formatter.skip>false</formatter.skip>\n+    <formatter.goal>format</formatter.goal>\n+    <!-- TODO name impsort should indicate it's related to formatting -->\n+    <impsort.goal>sort</impsort.goal>\n+    <!-- TODO https://issues.redhat.com/browse/PLANNER-2042 -->\n+    <spotbugs.failOnViolation>false</spotbugs.failOnViolation>\n+    <!-- override the default GroupId:ArtifactId to map both master branch and 7.x branches to the same SonarCloud project -->\n+    <sonar.projectKey>org.optaplanner:optaplanner</sonar.projectKey>\n+    <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>\n+    <!-- Jacoco plugin configurations -->\n+    <version.jacoco.plugin>0.8.5</version.jacoco.plugin>\n+    <!-- JaCoCo coverage data file location -->\n+    <!--suppress UnresolvedMavenProperty-->\n+    <project.root.dir>${maven.multiModuleProjectDirectory}</project.root.dir>\n+    <jacoco.exec.file>${project.root.dir}/target/jacoco.exec</jacoco.exec.file>\n+    <jacoco.agent.argLine/>\n+    <!-- TODO remove failOnViolation once all repositories comply to the defined checkstyle rules -->\n+    <checkstyle.failOnViolation>false</checkstyle.failOnViolation>\n+    <checkstyle.logViolationsToConsole>false</checkstyle.logViolationsToConsole>\n+    <checkstyle.header.template>.*</checkstyle.header.template>\n+    <checkstyle.header.extensions>java</checkstyle.header.extensions>\n+    <enforcer.failOnDuplicatedClasses>true</enforcer.failOnDuplicatedClasses>\n+    <!-- Latest release to be used by api-compatibility-check to check backwards compatibility of the API. -->\n+    <revapi.oldKieVersion>7.33.0.Final</revapi.oldKieVersion>\n+    <revapi.newKieVersion>${project.version}</revapi.newKieVersion>\n+  </properties>\n+\n   <dependencyManagement>\n     <dependencies>\n+      <!-- SNAPSHOT dependencies -->\n       <dependency>\n         <groupId>org.optaplanner</groupId>\n         <artifactId>optaplanner-bom</artifactId>\n         <version>${project.version}</version>\n         <type>pom</type>\n         <scope>import</scope>\n       </dependency>\n+      <dependency>\n+        <groupId>org.kie</groupId>\n+        <artifactId>kie-bom</artifactId>\n+        <version>${version.org.kie}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.drools</groupId>\n+        <artifactId>drools-bom</artifactId>\n+        <version>${version.org.kie}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.kie.soup</groupId>\n+        <artifactId>kie-soup-bom</artifactId>\n+        <version>${version.org.kie}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+\n+      <!-- Normal dependencies versions-->\n+      <dependency>\n+        <groupId>ch.qos.logback</groupId>\n+        <artifactId>logback-core</artifactId>\n+        <version>${version.ch.qos.logback}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>ch.qos.logback</groupId>\n+        <artifactId>logback-classic</artifactId>\n+        <version>${version.ch.qos.logback}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>commons-io</groupId>\n+        <artifactId>commons-io</artifactId>\n+        <version>${version.commons-io}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.fasterxml.jackson.core</groupId>\n+        <artifactId>jackson-core</artifactId>\n+        <version>${version.com.fasterxml.jackson.core}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.fasterxml.jackson.core</groupId>\n+        <artifactId>jackson-databind</artifactId>\n+        <version>${version.com.fasterxml.jackson.core}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.h2database</groupId>\n+        <artifactId>h2</artifactId>\n+        <version>${version.com.h2database}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.thoughtworks.xstream</groupId>\n+        <artifactId>xstream</artifactId>\n+        <version>${version.com.thoughtworks.xstream}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>jakarta.json.bind</groupId>\n+        <artifactId>jakarta.json.bind-api</artifactId>\n+        <version>${version.jakarta.json.bind}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.commons</groupId>\n+        <artifactId>commons-lang3</artifactId>\n+        <version>${version.org.apache.commons.lang3}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.commons</groupId>\n+        <artifactId>commons-math3</artifactId>\n+        <version>${version.org.apache.commons.math3}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.poi</groupId>\n+        <artifactId>poi</artifactId>\n+        <version>${version.org.apache.poi}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.poi</groupId>\n+        <artifactId>poi-ooxml</artifactId>\n+        <version>${version.org.apache.poi}</version>\n+        <exclusions>\n+          <exclusion>\n+            <!-- Collides with 'javax.xml.stream:stax-api' brought in by 'org.drools:drools-decisiontables'. -->\n+            <groupId>stax</groupId>\n+            <artifactId>stax-api</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>javax.json</artifactId>\n+          </exclusion>\n+        </exclusions>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.assertj</groupId>\n+        <artifactId>assertj-core</artifactId>\n+        <version>${version.org.assertj}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.freemarker</groupId>\n+        <artifactId>freemarker</artifactId>\n+        <version>${version.org.freemarker}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.hibernate</groupId>\n+        <artifactId>hibernate-core</artifactId>\n+        <version>${version.org.hibernate}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.hibernate</groupId>\n+        <artifactId>hibernate-entitymanager</artifactId>\n+        <version>${version.org.hibernate}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jdom</groupId>\n+        <artifactId>jdom</artifactId>\n+        <version>${version.org.jdom}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jfree</groupId>\n+        <artifactId>jfreechart</artifactId>\n+        <version>${version.org.jfree.jfreechart}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.junit</groupId>\n+        <artifactId>junit-bom</artifactId>\n+        <version>${version.org.junit}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.mockito</groupId>\n+        <artifactId>mockito-core</artifactId>\n+        <version>${version.org.mockito}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.slf4j</groupId>\n+        <artifactId>slf4j-api</artifactId>\n+        <version>${version.org.slf4j}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework</groupId>\n+        <artifactId>spring-context</artifactId>\n+        <version>${version.org.springframework}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework</groupId>\n+        <artifactId>spring-web</artifactId>\n+        <version>${version.org.springframework}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-autoconfigure</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-autoconfigure-processor</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-configuration-processor</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-test</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-test-autoconfigure</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+\n+      <!-- TODO Dependencies that must use a jakarta.* groupId instead in 8 -->\n+      <dependency>\n+        <groupId>javax.persistence</groupId>\n+        <artifactId>javax.persistence-api</artifactId>\n+        <version>2.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.glassfish</groupId>\n+        <artifactId>jakarta.json</artifactId>\n+        <version>1.1.6</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.glassfish</groupId>\n+        <artifactId>javax.json</artifactId>\n+        <!-- Old version until this issue is resolved: https://github.com/ImmobilienScout24/illegal-transitive-dependency-check/issues/30 -->\n+        <version>1.0.4</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jboss.spec.javax.xml.bind</groupId>\n+        <artifactId>jboss-jaxb-api_2.3_spec</artifactId>\n+        <version>1.0.1.Final</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jboss.spec.javax.transaction</groupId>\n+        <artifactId>jboss-transaction-api_1.2_spec</artifactId>\n+        <version>1.1.1.Final</version>\n+      </dependency>\n+\n+      <!-- TODO Dependencies that should maybe be removed/replaced in 8 -->\n+      <dependency>\n+        <groupId>org.glassfish.jaxb</groupId>\n+        <artifactId>jaxb-runtime</artifactId>\n+        <version>2.3.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.eclipse.persistence</groupId>\n+        <artifactId>org.eclipse.persistence.moxy</artifactId>\n+        <version>2.7.6</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jboss.narayana.jta</groupId>\n+        <artifactId>narayana-jta</artifactId>\n+        <version>5.9.0.Final</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.eclipse</groupId>\n+        <artifactId>yasson</artifactId>\n+        <version>1.0.6</version>\n+      </dependency>\n     </dependencies>\n   </dependencyManagement>\n \n+  <build>\n+    <pluginManagement>\n+      <plugins>\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-enforcer-plugin</artifactId>\n+          <dependencies>\n+            <dependency>\n+              <groupId>org.ow2.asm</groupId>\n+              <artifactId>asm-analysis</artifactId>\n+              <version>6.2.1</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>de.is24.maven.enforcer.rules</groupId>\n+              <artifactId>illegal-transitive-dependency-check</artifactId>\n+              <version>1.7.4</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>com.redhat.victims</groupId>\n+              <artifactId>enforce-victims-rule</artifactId>\n+              <version>1.3.4</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>org.commonjava.maven.enforcer</groupId>\n+              <artifactId>enforce-managed-deps-rule</artifactId>\n+              <version>1.3</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>org.codehaus.mojo</groupId>\n+              <artifactId>extra-enforcer-rules</artifactId>\n+              <version>1.0</version>\n+            </dependency>\n+          </dependencies>\n+          <executions>\n+            <execution>\n+              <id>enforce-plugin-versions</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <configuration>\n+                <rules>\n+                  <!-- TODO Disabled during kie-parent 7 removal due to false negatives -->\n+                  <!--                  <requirePluginVersions>-->\n+                  <!--                    <message>One or more plugins do not have valid version! The version needs to be-->\n+                  <!--                      explicitly specified, can not be a -SNAPSHOT version and can not be one of-->\n+                  <!--                      the special (and buggy) Maven versions (LATEST, RELEASE).-->\n+                  <!--                    </message>-->\n+                  <!--                  </requirePluginVersions>-->\n+                  <requireFilesDontExist>\n+                    <files>\n+                      <file>${project.basedir}/src/main/resources/logback-test.xml</file>\n+                      <file>${project.basedir}/src/main/filtered-resources/logback-test.xml</file>\n+                    </files>\n+                  </requireFilesDontExist>\n+                </rules>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>no-managed-deps</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <phase>initialize</phase>\n+              <configuration>\n+                <rules>\n+                  <requireManagedDeps\n+                      implementation=\"org.commonjava.maven.enforcer.rule.EnforceManagedDepsRule\">\n+                    <checkProfiles>true</checkProfiles>\n+                    <failOnViolation>true</failOnViolation>\n+                  </requireManagedDeps>\n+                </rules>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>enforce-direct-dependencies</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <phase>none</phase>\n+              <configuration>\n+                <rules>\n+                  <illegalTransitiveDependencyCheck\n+                      implementation=\"de.is24.maven.enforcer.rules.IllegalTransitiveDependencyCheck\">\n+                    <reportOnly>false</reportOnly>\n+                    <regexIgnoredClasses combine.children=\"append\">\n+                      <!-- The maven-shade-plugin needs these classes to be compile-scope in guvnor-ala-openshift-client to be picked up, and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f12082713ae320968a2c430e08c1c25e5d963ff8"}, "originalPosition": 396}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwNDMyMQ==", "bodyText": "No need to override the plugin version; we already get it from jboss-parent, which defines this property.", "url": "https://github.com/kiegroup/optaplanner/pull/829#discussion_r452004321", "createdAt": "2020-07-09T06:59:52Z", "author": {"login": "rsynek"}, "path": "optaplanner-build-parent/pom.xml", "diffHunk": "@@ -14,16 +14,1365 @@\n \n   <name>OptaPlanner build parent</name>\n \n+  <properties>\n+    <!-- ************************************************************************ -->\n+    <!-- Dependencies -->\n+    <!-- ************************************************************************ -->\n+\n+    <!-- SNAPSHOT dependency versions -->\n+    <version.org.kie>7.40.0-SNAPSHOT</version.org.kie>\n+\n+    <!-- Normal dependency versions -->\n+    <!-- TODO Do we want import the quarkus-bom instead of defining these ourselves? -->\n+    <version.ch.qos.logback>1.2.3</version.ch.qos.logback>\n+    <version.commons-io>2.6</version.commons-io>\n+    <version.com.fasterxml.jackson.core>2.10.4</version.com.fasterxml.jackson.core>\n+    <version.com.h2database>1.3.173</version.com.h2database>\n+    <version.com.thoughtworks.xstream>1.4.11.1</version.com.thoughtworks.xstream>\n+    <version.jakarta.json.bind>1.0.2</version.jakarta.json.bind>\n+    <version.org.apache.commons.lang3>3.9</version.org.apache.commons.lang3>\n+    <version.org.apache.commons.math3>3.4.1</version.org.apache.commons.math3>\n+    <version.org.apache.poi>4.1.2</version.org.apache.poi>\n+    <version.org.assertj>3.14.0</version.org.assertj>\n+    <version.org.freemarker>2.3.28</version.org.freemarker>\n+    <version.org.hibernate>5.3.16.Final</version.org.hibernate>\n+    <version.org.jdom>1.1.3</version.org.jdom>\n+    <version.org.jfree.jfreechart>1.5.0</version.org.jfree.jfreechart>\n+    <version.org.junit>5.5.2</version.org.junit>\n+    <version.org.mockito>3.1.0</version.org.mockito>\n+    <version.org.slf4j>1.7.26</version.org.slf4j>\n+    <version.org.springframework>5.2.6.RELEASE</version.org.springframework>\n+    <version.org.springframework.boot>2.2.6.RELEASE</version.org.springframework.boot>\n+\n+    <!-- ************************************************************************ -->\n+    <!-- Plugins -->\n+    <!-- ************************************************************************ -->\n+\n+    <maven.min.version>3.6.2</maven.min.version>\n+    <!-- This property needs to be defined in all modules that use the packaging 'jar'.\n+         It is used by different plugins to make sure the module/bundle names are consistent. -->\n+    <java.module.name/>\n+    <!-- Override format.directory in each parent module in the hierarchy -->\n+    <!-- TODO Can we use project.root.dir for it instead? -->\n+    <format.directory>${project.basedir}/../ide-configuration</format.directory>\n+    <formatter.skip>false</formatter.skip>\n+    <formatter.goal>format</formatter.goal>\n+    <!-- TODO name impsort should indicate it's related to formatting -->\n+    <impsort.goal>sort</impsort.goal>\n+    <!-- TODO https://issues.redhat.com/browse/PLANNER-2042 -->\n+    <spotbugs.failOnViolation>false</spotbugs.failOnViolation>\n+    <!-- override the default GroupId:ArtifactId to map both master branch and 7.x branches to the same SonarCloud project -->\n+    <sonar.projectKey>org.optaplanner:optaplanner</sonar.projectKey>\n+    <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>\n+    <!-- Jacoco plugin configurations -->\n+    <version.jacoco.plugin>0.8.5</version.jacoco.plugin>\n+    <!-- JaCoCo coverage data file location -->\n+    <!--suppress UnresolvedMavenProperty-->\n+    <project.root.dir>${maven.multiModuleProjectDirectory}</project.root.dir>\n+    <jacoco.exec.file>${project.root.dir}/target/jacoco.exec</jacoco.exec.file>\n+    <jacoco.agent.argLine/>\n+    <!-- TODO remove failOnViolation once all repositories comply to the defined checkstyle rules -->\n+    <checkstyle.failOnViolation>false</checkstyle.failOnViolation>\n+    <checkstyle.logViolationsToConsole>false</checkstyle.logViolationsToConsole>\n+    <checkstyle.header.template>.*</checkstyle.header.template>\n+    <checkstyle.header.extensions>java</checkstyle.header.extensions>\n+    <enforcer.failOnDuplicatedClasses>true</enforcer.failOnDuplicatedClasses>\n+    <!-- Latest release to be used by api-compatibility-check to check backwards compatibility of the API. -->\n+    <revapi.oldKieVersion>7.33.0.Final</revapi.oldKieVersion>\n+    <revapi.newKieVersion>${project.version}</revapi.newKieVersion>\n+  </properties>\n+\n   <dependencyManagement>\n     <dependencies>\n+      <!-- SNAPSHOT dependencies -->\n       <dependency>\n         <groupId>org.optaplanner</groupId>\n         <artifactId>optaplanner-bom</artifactId>\n         <version>${project.version}</version>\n         <type>pom</type>\n         <scope>import</scope>\n       </dependency>\n+      <dependency>\n+        <groupId>org.kie</groupId>\n+        <artifactId>kie-bom</artifactId>\n+        <version>${version.org.kie}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.drools</groupId>\n+        <artifactId>drools-bom</artifactId>\n+        <version>${version.org.kie}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.kie.soup</groupId>\n+        <artifactId>kie-soup-bom</artifactId>\n+        <version>${version.org.kie}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+\n+      <!-- Normal dependencies versions-->\n+      <dependency>\n+        <groupId>ch.qos.logback</groupId>\n+        <artifactId>logback-core</artifactId>\n+        <version>${version.ch.qos.logback}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>ch.qos.logback</groupId>\n+        <artifactId>logback-classic</artifactId>\n+        <version>${version.ch.qos.logback}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>commons-io</groupId>\n+        <artifactId>commons-io</artifactId>\n+        <version>${version.commons-io}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.fasterxml.jackson.core</groupId>\n+        <artifactId>jackson-core</artifactId>\n+        <version>${version.com.fasterxml.jackson.core}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.fasterxml.jackson.core</groupId>\n+        <artifactId>jackson-databind</artifactId>\n+        <version>${version.com.fasterxml.jackson.core}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.h2database</groupId>\n+        <artifactId>h2</artifactId>\n+        <version>${version.com.h2database}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.thoughtworks.xstream</groupId>\n+        <artifactId>xstream</artifactId>\n+        <version>${version.com.thoughtworks.xstream}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>jakarta.json.bind</groupId>\n+        <artifactId>jakarta.json.bind-api</artifactId>\n+        <version>${version.jakarta.json.bind}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.commons</groupId>\n+        <artifactId>commons-lang3</artifactId>\n+        <version>${version.org.apache.commons.lang3}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.commons</groupId>\n+        <artifactId>commons-math3</artifactId>\n+        <version>${version.org.apache.commons.math3}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.poi</groupId>\n+        <artifactId>poi</artifactId>\n+        <version>${version.org.apache.poi}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.poi</groupId>\n+        <artifactId>poi-ooxml</artifactId>\n+        <version>${version.org.apache.poi}</version>\n+        <exclusions>\n+          <exclusion>\n+            <!-- Collides with 'javax.xml.stream:stax-api' brought in by 'org.drools:drools-decisiontables'. -->\n+            <groupId>stax</groupId>\n+            <artifactId>stax-api</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>javax.json</artifactId>\n+          </exclusion>\n+        </exclusions>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.assertj</groupId>\n+        <artifactId>assertj-core</artifactId>\n+        <version>${version.org.assertj}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.freemarker</groupId>\n+        <artifactId>freemarker</artifactId>\n+        <version>${version.org.freemarker}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.hibernate</groupId>\n+        <artifactId>hibernate-core</artifactId>\n+        <version>${version.org.hibernate}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.hibernate</groupId>\n+        <artifactId>hibernate-entitymanager</artifactId>\n+        <version>${version.org.hibernate}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jdom</groupId>\n+        <artifactId>jdom</artifactId>\n+        <version>${version.org.jdom}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jfree</groupId>\n+        <artifactId>jfreechart</artifactId>\n+        <version>${version.org.jfree.jfreechart}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.junit</groupId>\n+        <artifactId>junit-bom</artifactId>\n+        <version>${version.org.junit}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.mockito</groupId>\n+        <artifactId>mockito-core</artifactId>\n+        <version>${version.org.mockito}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.slf4j</groupId>\n+        <artifactId>slf4j-api</artifactId>\n+        <version>${version.org.slf4j}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework</groupId>\n+        <artifactId>spring-context</artifactId>\n+        <version>${version.org.springframework}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework</groupId>\n+        <artifactId>spring-web</artifactId>\n+        <version>${version.org.springframework}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-autoconfigure</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-autoconfigure-processor</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-configuration-processor</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-test</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-test-autoconfigure</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+\n+      <!-- TODO Dependencies that must use a jakarta.* groupId instead in 8 -->\n+      <dependency>\n+        <groupId>javax.persistence</groupId>\n+        <artifactId>javax.persistence-api</artifactId>\n+        <version>2.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.glassfish</groupId>\n+        <artifactId>jakarta.json</artifactId>\n+        <version>1.1.6</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.glassfish</groupId>\n+        <artifactId>javax.json</artifactId>\n+        <!-- Old version until this issue is resolved: https://github.com/ImmobilienScout24/illegal-transitive-dependency-check/issues/30 -->\n+        <version>1.0.4</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jboss.spec.javax.xml.bind</groupId>\n+        <artifactId>jboss-jaxb-api_2.3_spec</artifactId>\n+        <version>1.0.1.Final</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jboss.spec.javax.transaction</groupId>\n+        <artifactId>jboss-transaction-api_1.2_spec</artifactId>\n+        <version>1.1.1.Final</version>\n+      </dependency>\n+\n+      <!-- TODO Dependencies that should maybe be removed/replaced in 8 -->\n+      <dependency>\n+        <groupId>org.glassfish.jaxb</groupId>\n+        <artifactId>jaxb-runtime</artifactId>\n+        <version>2.3.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.eclipse.persistence</groupId>\n+        <artifactId>org.eclipse.persistence.moxy</artifactId>\n+        <version>2.7.6</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jboss.narayana.jta</groupId>\n+        <artifactId>narayana-jta</artifactId>\n+        <version>5.9.0.Final</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.eclipse</groupId>\n+        <artifactId>yasson</artifactId>\n+        <version>1.0.6</version>\n+      </dependency>\n     </dependencies>\n   </dependencyManagement>\n \n+  <build>\n+    <pluginManagement>\n+      <plugins>\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-enforcer-plugin</artifactId>\n+          <dependencies>\n+            <dependency>\n+              <groupId>org.ow2.asm</groupId>\n+              <artifactId>asm-analysis</artifactId>\n+              <version>6.2.1</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>de.is24.maven.enforcer.rules</groupId>\n+              <artifactId>illegal-transitive-dependency-check</artifactId>\n+              <version>1.7.4</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>com.redhat.victims</groupId>\n+              <artifactId>enforce-victims-rule</artifactId>\n+              <version>1.3.4</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>org.commonjava.maven.enforcer</groupId>\n+              <artifactId>enforce-managed-deps-rule</artifactId>\n+              <version>1.3</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>org.codehaus.mojo</groupId>\n+              <artifactId>extra-enforcer-rules</artifactId>\n+              <version>1.0</version>\n+            </dependency>\n+          </dependencies>\n+          <executions>\n+            <execution>\n+              <id>enforce-plugin-versions</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <configuration>\n+                <rules>\n+                  <!-- TODO Disabled during kie-parent 7 removal due to false negatives -->\n+                  <!--                  <requirePluginVersions>-->\n+                  <!--                    <message>One or more plugins do not have valid version! The version needs to be-->\n+                  <!--                      explicitly specified, can not be a -SNAPSHOT version and can not be one of-->\n+                  <!--                      the special (and buggy) Maven versions (LATEST, RELEASE).-->\n+                  <!--                    </message>-->\n+                  <!--                  </requirePluginVersions>-->\n+                  <requireFilesDontExist>\n+                    <files>\n+                      <file>${project.basedir}/src/main/resources/logback-test.xml</file>\n+                      <file>${project.basedir}/src/main/filtered-resources/logback-test.xml</file>\n+                    </files>\n+                  </requireFilesDontExist>\n+                </rules>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>no-managed-deps</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <phase>initialize</phase>\n+              <configuration>\n+                <rules>\n+                  <requireManagedDeps\n+                      implementation=\"org.commonjava.maven.enforcer.rule.EnforceManagedDepsRule\">\n+                    <checkProfiles>true</checkProfiles>\n+                    <failOnViolation>true</failOnViolation>\n+                  </requireManagedDeps>\n+                </rules>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>enforce-direct-dependencies</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <phase>none</phase>\n+              <configuration>\n+                <rules>\n+                  <illegalTransitiveDependencyCheck\n+                      implementation=\"de.is24.maven.enforcer.rules.IllegalTransitiveDependencyCheck\">\n+                    <reportOnly>false</reportOnly>\n+                    <regexIgnoredClasses combine.children=\"append\">\n+                      <!-- The maven-shade-plugin needs these classes to be compile-scope in guvnor-ala-openshift-client to be picked up, and\n+                           then referenced in guvnor-ala-openshift-provider. When we don't need to shade anymore, we can remove these lines. -->\n+                      <regexIgnoredClass>io\\.fabric8\\.kubernetes.*</regexIgnoredClass>\n+                      <regexIgnoredClass>io\\.fabric8\\.openshift.*</regexIgnoredClass>\n+                      <regexIgnoredClass>com\\.sun\\.net\\.httpserver\\..+</regexIgnoredClass>\n+                      <regexIgnoredClass>javax\\..+</regexIgnoredClass>\n+                      <regexIgnoredClass>org\\.w3c\\.dom\\..+</regexIgnoredClass>\n+                      <regexIgnoredClass>org\\.xml\\.sax\\..+</regexIgnoredClass>\n+                    </regexIgnoredClasses>\n+                  </illegalTransitiveDependencyCheck>\n+                </rules>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>ban-blacklisted-dependencies</id>\n+              <phase>validate</phase>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <configuration>\n+                <rules>\n+                  <bannedDependencies>\n+                    <excludes combine.children=\"append\">\n+                      <!-- Ban blacklisted logging deps (we only use SLF4J + Logback) -->\n+                      <!-- In case of transitive dependency, exclude it and use 'org.slf4j:jcl-over-slf4j' instead -->\n+                      <exclude>commons-logging:commons-log*</exclude>\n+                      <!-- In case of transitive dependency, exclude it and use 'org.slf4j:log4j-over-slf4j' instead -->\n+                      <exclude>log4j:log4j</exclude>\n+                      <!-- In case of transitive dependency, exclude it and use 'org.javassist:javassist' instead -->\n+                      <exclude>javassist:javassist</exclude>\n+                      <exclude>org.apache.cxf:cxf-bundle-jaxrs</exclude>\n+                      <exclude>org.jboss.weld.se:weld-se\n+                      </exclude><!-- Use weld-se-core instead -->\n+                      <exclude>org.jboss.weld.servlet:weld-servlet\n+                      </exclude><!-- Use weld-servlet-core instead -->\n+                      <exclude>org.mockito:mockito-all</exclude><!-- Use mockito-core instead -->\n+                    </excludes>\n+                  </bannedDependencies>\n+                </rules>\n+                <fail>true</fail>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>ban-duplicated-classes</id>\n+              <!-- Using phase=none as we don't want this execution as part of the default build. The phase\n+                   is specified in the \"full\" profile and thus the execution will only be activated when using that profile. -->\n+              <phase>none</phase>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <configuration>\n+                <rules>\n+                  <banDuplicateClasses>\n+                    <ignoreClasses>\n+                      <!-- Duplicated by XStream's transitive deps, with very little chance to get properly fixed -->\n+                      <ignoreClass>org.xmlpull.v1.XmlPullParserException</ignoreClass>\n+                      <ignoreClass>org.xmlpull.v1.XmlPullParser</ignoreClass>\n+                      <!-- Bundled by both com.sun:tools and com.sun.xml.bind:jaxb-xjc. No easy way to exclude one of them. -->\n+                      <ignoreClass>org.relaxng.datatype.*</ignoreClass>\n+                      <!-- Classes duplicated by the jar itself (bug), see https://issues.apache.org.jira/browse/XMLBEANS-499 -->\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.XMLName</ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.XMLInputStream</ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.utils.NestedThrowable\n+                      </ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util\n+                      </ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.XMLStreamException</ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.ReferenceResolver</ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.XMLEvent</ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.Location</ignoreClass>\n+                      <!-- Duplicated in xml-apis:xml-apis:jar:1.4.01 and xerces:xercesImpl:jar:2.11.0.SP4. The class is identical\n+                           and there is very little chance this will get ever fixed. -->\n+                      <ignoreClass>org.w3c.dom.ElementTraversal</ignoreClass>\n+                      <ignoreClass>org.w3c.dom.UserDataHandler</ignoreClass>\n+                      <!-- Packaged both in hornetq-commons and hornetq-client. Remove this once we move the testing\n+                           from HornetQ to ActiveMQ (https://issues.jboss.org/browse/JBPM-5503) -->\n+                      <ignoreClass>org.hornetq.utils.HornetQUtilBundle_$bundle</ignoreClass>\n+                      <ignoreClass>org.hornetq.utils.HornetQUtilLogger_$logger</ignoreClass>\n+                      <!-- Classes bundled in errai-javax-enterprise which are GWT friendly.\n+                           See https://github.com/errai/errai/blob/master/errai-javax-enterprise/README -->\n+                      <ignoreClass>javax.interceptor.InvocationContext</ignoreClass>\n+                      <ignoreClass>javax.inject.Provider</ignoreClass>\n+                      <ignoreClass>javax.inject.Named</ignoreClass>\n+                      <ignoreClass>javax.inject.Scope</ignoreClass>\n+                      <ignoreClass>javax.inject.Qualifier</ignoreClass>\n+                      <ignoreClass>javax.inject.Singleton</ignoreClass>\n+                      <ignoreClass>javax.enterprise.*</ignoreClass>\n+                      <!-- Servlet API is bundled in way too many different dependencies, causing nightmares trying to\n+                           properly exclude everything. There were no real issues with this so far as mostly the APIs\n+                           are just duplicates of the exactly same sources. In ideal world, this get eventually fixed,\n+                           but it may very well not be worth the effort. -->\n+                      <ignoreClass>javax.servlet.*</ignoreClass>\n+                      <!-- Classes in javax.annotation package are just marker annotations used to aid the programmers.\n+                           These annotations do not influence the actual behavior of the code, so it's reasonable to\n+                           ignore them. Following dependencies contain these classes: 'com.google.code.findbugs:jsr305'\n+                           and 'com.google.code.findbugs:annotations'. -->\n+                      <ignoreClass>javax.annotation.*</ignoreClass>\n+                      <!-- Exactly the same case as for above 'javax.annotation.*' classes. Following dependencies contain\n+                           these classes: 'net.jcip:jcip-annotations' and 'com.google.code.findbugs:annotations'. -->\n+                      <ignoreClass>net.jcip.annotations.*</ignoreClass>\n+                      <!-- ignoring java 9 compatible class for modules -->\n+                      <ignoreClass>module-info</ignoreClass>\n+                      <!-- ignoring multirelease jar classes -->\n+                      <ignoreClass>META-INF/versions/*</ignoreClass>\n+                      <!-- Classes repackaged in the maven world-->\n+                      <ignoreClass>org.eclipse.aether.*</ignoreClass>\n+                      <ignoreClass>org.apache.maven.*</ignoreClass>\n+                      <ignoreClass>org.codehaus.plexus.*</ignoreClass>\n+                      <!-- Infinispan core includes commons and they have duplicated classes. We can't remove commons because\n+                       core needs them. Infinispan team has been informed about this packaging problem -->\n+                      <ignoreClass>org.infinispan.util.AbstractDelegatingConcurrentMap\n+                      </ignoreClass>\n+                      <ignoreClass>org.infinispan.util.AbstractDelegatingMap</ignoreClass>\n+                      <ignoreClass>org.infinispan.util.AbstractDelegatingSet</ignoreClass>\n+                      <ignoreClass>org.infinispan.util.AbstractDelegatingCollection</ignoreClass>\n+                      <!-- This package contains auto generated code and is available both in kafka-clients\n+                      and in kafka-clients-test -->\n+                      <ignoreClass>org.apache.kafka.common.message.*</ignoreClass>\n+                    </ignoreClasses>\n+                    <dependencies>\n+                      <dependency>\n+                        <!-- quarkus-ide-launcher is a dependency of quarkus-core that they auto exclude during the build -->\n+                        <groupId>io.quarkus</groupId>\n+                        <artifactId>quarkus-ide-launcher</artifactId>\n+                        <ignoreClasses>\n+                          <ignoreClass>*</ignoreClass>\n+                        </ignoreClasses>\n+                      </dependency>\n+                      <dependency>\n+                        <groupId>org.elasticsearch</groupId>\n+                        <artifactId>elasticsearch</artifactId>\n+                        <ignoreClasses>\n+                          <!-- Elasticsearch team claims they fixed performance issues in the class and re-bundled it.\n+                               See https://discuss.elastic.co/t/an-unshaded-joda-time-classes-in-elasticsearch-2-1-1-jar/38943\n+                               Nothing we can do here. -->\n+                          <ignoreClass>org.joda.time.base.BaseDateTime</ignoreClass>\n+                        </ignoreClasses>\n+                      </dependency>\n+                      <!-- ignore jboss-logging included in kie server router as it is required by undertow and uberjar usage-->\n+                      <dependency>\n+                        <groupId>org.kie.server</groupId>\n+                        <artifactId>kie-server-router-proxy</artifactId>\n+                        <type>jar</type>\n+                        <ignoreClasses>\n+                          <ignoreClass>org.jboss.logging.*</ignoreClass>\n+                          <ignoreClass>io.undertow.*</ignoreClass>\n+                          <ignoreClass>org.json.*</ignoreClass>\n+                          <ignoreClass>org.jboss.threads.*</ignoreClass>\n+                          <ignoreClass>org.xnio.*</ignoreClass>\n+                          <ignoreClass>org.wildfly.*</ignoreClass>\n+                          <ignoreClass>org.apache.commons.*</ignoreClass>\n+                        </ignoreClasses>\n+                      </dependency>\n+                      <dependency>\n+                        <groupId>org.wildfly.security</groupId>\n+                        <artifactId>wildfly-elytron</artifactId>\n+                        <type>jar</type>\n+                        <ignoreClasses>\n+                          <ignoreClass>*</ignoreClass>\n+                        </ignoreClasses>\n+                      </dependency>\n+                      <dependency>\n+                        <!-- The openshift-client duplicates these classes from the kubernetes-client.\n+                             It is an upstream io.fabric8 issue that needs to be fixed there:\n+                             https://github.com/fabric8io/kubernetes-client/issues/828 -->\n+                        <groupId>io.fabric8</groupId>\n+                        <artifactId>openshift-client</artifactId>\n+                        <type>jar</type>\n+                        <ignoreClasses>\n+                          <ignoreClass>io.fabric8.kubernetes.client.ConfigFluent</ignoreClass>\n+                          <ignoreClass>io.fabric8.kubernetes.client.ConfigBuilder\n+                          </ignoreClass>\n+                          <ignoreClass>io.fabric8.kubernetes.client.ConfigFluentImpl\n+                          </ignoreClass>\n+                        </ignoreClasses>\n+                      </dependency>\n+                    </dependencies>\n+                    <findAllDuplicates>true</findAllDuplicates>\n+                  </banDuplicateClasses>\n+                </rules>\n+                <fail>${enforcer.failOnDuplicatedClasses}</fail>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>no-duplicate-declared-dependencies</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <configuration>\n+                <rules>\n+                  <banDuplicatePomDependencyVersions/>\n+                </rules>\n+              </configuration>\n+            </execution>\n+          </executions>\n+        </plugin>\n+        <plugin>\n+          <groupId>org.revapi</groupId>\n+          <artifactId>revapi-maven-plugin</artifactId>\n+          <version>0.9.5</version>\n+          <dependencies>\n+            <dependency>\n+              <groupId>org.revapi</groupId>\n+              <artifactId>revapi-java</artifactId>\n+              <version>0.14.3</version>\n+            </dependency>\n+          </dependencies>\n+          <configuration>\n+            <oldArtifacts>\n+              <artifact>${project.groupId}:${project.artifactId}:${revapi.oldKieVersion}</artifact>\n+            </oldArtifacts>\n+            <newArtifacts>\n+              <artifact>${project.groupId}:${project.artifactId}:${revapi.newKieVersion}</artifact>\n+            </newArtifacts>\n+            <!-- By default revapi will check the oldArtifact against the currently executed build -->\n+            <analysisConfigurationFiles>\n+              <configurationFile>\n+                <path>src/build/revapi-config.json</path>\n+                <roots>\n+                  <root>filters</root>\n+                  <root>ignores</root>\n+                </roots>\n+              </configurationFile>\n+            </analysisConfigurationFiles>\n+            <!-- By default, revapi will only fail the build if there are potentially breaking or breaking changes. However, in the report\n+                 we want even non breaking changes to be present. -->\n+            <reportSeverity>nonBreaking</reportSeverity>\n+            <failSeverity>potentiallyBreaking</failSeverity>\n+          </configuration>\n+          <!-- Running two executions is a workaround to make sure we get a HTML report in case revapi finds\n+               some incompatible changes. The \"check\" goal will simply fail the whole build before it could get\n+               to the report. To make sure we always get a HTML report, the \"report\" goal needs to be executed\n+               before the \"check\" goal.\n+               Once https://github.com/revapi/revapi/issues/11 is fixed it should be possible to use single execution. -->\n+          <executions>\n+            <execution>\n+              <id>check</id>\n+              <goals>\n+                <goal>check</goal>\n+              </goals>\n+              <phase>verify</phase>\n+            </execution>\n+            <execution>\n+              <!-- report can be found in ${build.directory}/site/revapi-report.html -->\n+              <id>report</id>\n+              <goals>\n+                <goal>report</goal>\n+              </goals>\n+              <phase>package</phase>\n+            </execution>\n+          </executions>\n+        </plugin>\n+\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-resources-plugin</artifactId>\n+          <configuration>\n+            <encoding>UTF-8</encoding>\n+          </configuration>\n+        </plugin>\n+        <!--            <plugin>-->\n+        <!--              <groupId>org.apache.maven.plugins</groupId>-->\n+        <!--              <artifactId>maven-surefire-plugin</artifactId>-->\n+        <!--              <configuration>-->\n+        <!--                <includes>-->\n+        <!--                  <include>**/*Test.java</include>-->\n+        <!--                </includes>-->\n+        <!--                <excludes>-->\n+        <!--                  <exclude>**/*IntegrationTest.java</exclude>-->\n+        <!--                </excludes>-->\n+        <!--                <argLine>-Xmx1024m -Dfile.encoding=UTF-8</argLine>-->\n+        <!--                <systemPropertyVariables>-->\n+        <!--                  <apple.awt.UIElement>true</apple.awt.UIElement>-->\n+        <!--                </systemPropertyVariables>-->\n+        <!--              </configuration>-->\n+        <!--            </plugin>-->\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-failsafe-plugin</artifactId>\n+          <version>${version.failsafe.plugin}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f12082713ae320968a2c430e08c1c25e5d963ff8"}, "originalPosition": 675}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwNDg4OQ==", "bodyText": "version defined in jboss-parent", "url": "https://github.com/kiegroup/optaplanner/pull/829#discussion_r452004889", "createdAt": "2020-07-09T07:01:12Z", "author": {"login": "rsynek"}, "path": "optaplanner-build-parent/pom.xml", "diffHunk": "@@ -14,16 +14,1365 @@\n \n   <name>OptaPlanner build parent</name>\n \n+  <properties>\n+    <!-- ************************************************************************ -->\n+    <!-- Dependencies -->\n+    <!-- ************************************************************************ -->\n+\n+    <!-- SNAPSHOT dependency versions -->\n+    <version.org.kie>7.40.0-SNAPSHOT</version.org.kie>\n+\n+    <!-- Normal dependency versions -->\n+    <!-- TODO Do we want import the quarkus-bom instead of defining these ourselves? -->\n+    <version.ch.qos.logback>1.2.3</version.ch.qos.logback>\n+    <version.commons-io>2.6</version.commons-io>\n+    <version.com.fasterxml.jackson.core>2.10.4</version.com.fasterxml.jackson.core>\n+    <version.com.h2database>1.3.173</version.com.h2database>\n+    <version.com.thoughtworks.xstream>1.4.11.1</version.com.thoughtworks.xstream>\n+    <version.jakarta.json.bind>1.0.2</version.jakarta.json.bind>\n+    <version.org.apache.commons.lang3>3.9</version.org.apache.commons.lang3>\n+    <version.org.apache.commons.math3>3.4.1</version.org.apache.commons.math3>\n+    <version.org.apache.poi>4.1.2</version.org.apache.poi>\n+    <version.org.assertj>3.14.0</version.org.assertj>\n+    <version.org.freemarker>2.3.28</version.org.freemarker>\n+    <version.org.hibernate>5.3.16.Final</version.org.hibernate>\n+    <version.org.jdom>1.1.3</version.org.jdom>\n+    <version.org.jfree.jfreechart>1.5.0</version.org.jfree.jfreechart>\n+    <version.org.junit>5.5.2</version.org.junit>\n+    <version.org.mockito>3.1.0</version.org.mockito>\n+    <version.org.slf4j>1.7.26</version.org.slf4j>\n+    <version.org.springframework>5.2.6.RELEASE</version.org.springframework>\n+    <version.org.springframework.boot>2.2.6.RELEASE</version.org.springframework.boot>\n+\n+    <!-- ************************************************************************ -->\n+    <!-- Plugins -->\n+    <!-- ************************************************************************ -->\n+\n+    <maven.min.version>3.6.2</maven.min.version>\n+    <!-- This property needs to be defined in all modules that use the packaging 'jar'.\n+         It is used by different plugins to make sure the module/bundle names are consistent. -->\n+    <java.module.name/>\n+    <!-- Override format.directory in each parent module in the hierarchy -->\n+    <!-- TODO Can we use project.root.dir for it instead? -->\n+    <format.directory>${project.basedir}/../ide-configuration</format.directory>\n+    <formatter.skip>false</formatter.skip>\n+    <formatter.goal>format</formatter.goal>\n+    <!-- TODO name impsort should indicate it's related to formatting -->\n+    <impsort.goal>sort</impsort.goal>\n+    <!-- TODO https://issues.redhat.com/browse/PLANNER-2042 -->\n+    <spotbugs.failOnViolation>false</spotbugs.failOnViolation>\n+    <!-- override the default GroupId:ArtifactId to map both master branch and 7.x branches to the same SonarCloud project -->\n+    <sonar.projectKey>org.optaplanner:optaplanner</sonar.projectKey>\n+    <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>\n+    <!-- Jacoco plugin configurations -->\n+    <version.jacoco.plugin>0.8.5</version.jacoco.plugin>\n+    <!-- JaCoCo coverage data file location -->\n+    <!--suppress UnresolvedMavenProperty-->\n+    <project.root.dir>${maven.multiModuleProjectDirectory}</project.root.dir>\n+    <jacoco.exec.file>${project.root.dir}/target/jacoco.exec</jacoco.exec.file>\n+    <jacoco.agent.argLine/>\n+    <!-- TODO remove failOnViolation once all repositories comply to the defined checkstyle rules -->\n+    <checkstyle.failOnViolation>false</checkstyle.failOnViolation>\n+    <checkstyle.logViolationsToConsole>false</checkstyle.logViolationsToConsole>\n+    <checkstyle.header.template>.*</checkstyle.header.template>\n+    <checkstyle.header.extensions>java</checkstyle.header.extensions>\n+    <enforcer.failOnDuplicatedClasses>true</enforcer.failOnDuplicatedClasses>\n+    <!-- Latest release to be used by api-compatibility-check to check backwards compatibility of the API. -->\n+    <revapi.oldKieVersion>7.33.0.Final</revapi.oldKieVersion>\n+    <revapi.newKieVersion>${project.version}</revapi.newKieVersion>\n+  </properties>\n+\n   <dependencyManagement>\n     <dependencies>\n+      <!-- SNAPSHOT dependencies -->\n       <dependency>\n         <groupId>org.optaplanner</groupId>\n         <artifactId>optaplanner-bom</artifactId>\n         <version>${project.version}</version>\n         <type>pom</type>\n         <scope>import</scope>\n       </dependency>\n+      <dependency>\n+        <groupId>org.kie</groupId>\n+        <artifactId>kie-bom</artifactId>\n+        <version>${version.org.kie}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.drools</groupId>\n+        <artifactId>drools-bom</artifactId>\n+        <version>${version.org.kie}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.kie.soup</groupId>\n+        <artifactId>kie-soup-bom</artifactId>\n+        <version>${version.org.kie}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+\n+      <!-- Normal dependencies versions-->\n+      <dependency>\n+        <groupId>ch.qos.logback</groupId>\n+        <artifactId>logback-core</artifactId>\n+        <version>${version.ch.qos.logback}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>ch.qos.logback</groupId>\n+        <artifactId>logback-classic</artifactId>\n+        <version>${version.ch.qos.logback}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>commons-io</groupId>\n+        <artifactId>commons-io</artifactId>\n+        <version>${version.commons-io}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.fasterxml.jackson.core</groupId>\n+        <artifactId>jackson-core</artifactId>\n+        <version>${version.com.fasterxml.jackson.core}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.fasterxml.jackson.core</groupId>\n+        <artifactId>jackson-databind</artifactId>\n+        <version>${version.com.fasterxml.jackson.core}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.h2database</groupId>\n+        <artifactId>h2</artifactId>\n+        <version>${version.com.h2database}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.thoughtworks.xstream</groupId>\n+        <artifactId>xstream</artifactId>\n+        <version>${version.com.thoughtworks.xstream}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>jakarta.json.bind</groupId>\n+        <artifactId>jakarta.json.bind-api</artifactId>\n+        <version>${version.jakarta.json.bind}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.commons</groupId>\n+        <artifactId>commons-lang3</artifactId>\n+        <version>${version.org.apache.commons.lang3}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.commons</groupId>\n+        <artifactId>commons-math3</artifactId>\n+        <version>${version.org.apache.commons.math3}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.poi</groupId>\n+        <artifactId>poi</artifactId>\n+        <version>${version.org.apache.poi}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.poi</groupId>\n+        <artifactId>poi-ooxml</artifactId>\n+        <version>${version.org.apache.poi}</version>\n+        <exclusions>\n+          <exclusion>\n+            <!-- Collides with 'javax.xml.stream:stax-api' brought in by 'org.drools:drools-decisiontables'. -->\n+            <groupId>stax</groupId>\n+            <artifactId>stax-api</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>javax.json</artifactId>\n+          </exclusion>\n+        </exclusions>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.assertj</groupId>\n+        <artifactId>assertj-core</artifactId>\n+        <version>${version.org.assertj}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.freemarker</groupId>\n+        <artifactId>freemarker</artifactId>\n+        <version>${version.org.freemarker}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.hibernate</groupId>\n+        <artifactId>hibernate-core</artifactId>\n+        <version>${version.org.hibernate}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.hibernate</groupId>\n+        <artifactId>hibernate-entitymanager</artifactId>\n+        <version>${version.org.hibernate}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jdom</groupId>\n+        <artifactId>jdom</artifactId>\n+        <version>${version.org.jdom}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jfree</groupId>\n+        <artifactId>jfreechart</artifactId>\n+        <version>${version.org.jfree.jfreechart}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.junit</groupId>\n+        <artifactId>junit-bom</artifactId>\n+        <version>${version.org.junit}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.mockito</groupId>\n+        <artifactId>mockito-core</artifactId>\n+        <version>${version.org.mockito}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.slf4j</groupId>\n+        <artifactId>slf4j-api</artifactId>\n+        <version>${version.org.slf4j}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework</groupId>\n+        <artifactId>spring-context</artifactId>\n+        <version>${version.org.springframework}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework</groupId>\n+        <artifactId>spring-web</artifactId>\n+        <version>${version.org.springframework}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-autoconfigure</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-autoconfigure-processor</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-configuration-processor</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-test</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-test-autoconfigure</artifactId>\n+        <version>${version.org.springframework.boot}</version>\n+      </dependency>\n+\n+      <!-- TODO Dependencies that must use a jakarta.* groupId instead in 8 -->\n+      <dependency>\n+        <groupId>javax.persistence</groupId>\n+        <artifactId>javax.persistence-api</artifactId>\n+        <version>2.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.glassfish</groupId>\n+        <artifactId>jakarta.json</artifactId>\n+        <version>1.1.6</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.glassfish</groupId>\n+        <artifactId>javax.json</artifactId>\n+        <!-- Old version until this issue is resolved: https://github.com/ImmobilienScout24/illegal-transitive-dependency-check/issues/30 -->\n+        <version>1.0.4</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jboss.spec.javax.xml.bind</groupId>\n+        <artifactId>jboss-jaxb-api_2.3_spec</artifactId>\n+        <version>1.0.1.Final</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jboss.spec.javax.transaction</groupId>\n+        <artifactId>jboss-transaction-api_1.2_spec</artifactId>\n+        <version>1.1.1.Final</version>\n+      </dependency>\n+\n+      <!-- TODO Dependencies that should maybe be removed/replaced in 8 -->\n+      <dependency>\n+        <groupId>org.glassfish.jaxb</groupId>\n+        <artifactId>jaxb-runtime</artifactId>\n+        <version>2.3.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.eclipse.persistence</groupId>\n+        <artifactId>org.eclipse.persistence.moxy</artifactId>\n+        <version>2.7.6</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.jboss.narayana.jta</groupId>\n+        <artifactId>narayana-jta</artifactId>\n+        <version>5.9.0.Final</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.eclipse</groupId>\n+        <artifactId>yasson</artifactId>\n+        <version>1.0.6</version>\n+      </dependency>\n     </dependencies>\n   </dependencyManagement>\n \n+  <build>\n+    <pluginManagement>\n+      <plugins>\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-enforcer-plugin</artifactId>\n+          <dependencies>\n+            <dependency>\n+              <groupId>org.ow2.asm</groupId>\n+              <artifactId>asm-analysis</artifactId>\n+              <version>6.2.1</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>de.is24.maven.enforcer.rules</groupId>\n+              <artifactId>illegal-transitive-dependency-check</artifactId>\n+              <version>1.7.4</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>com.redhat.victims</groupId>\n+              <artifactId>enforce-victims-rule</artifactId>\n+              <version>1.3.4</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>org.commonjava.maven.enforcer</groupId>\n+              <artifactId>enforce-managed-deps-rule</artifactId>\n+              <version>1.3</version>\n+            </dependency>\n+            <dependency>\n+              <groupId>org.codehaus.mojo</groupId>\n+              <artifactId>extra-enforcer-rules</artifactId>\n+              <version>1.0</version>\n+            </dependency>\n+          </dependencies>\n+          <executions>\n+            <execution>\n+              <id>enforce-plugin-versions</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <configuration>\n+                <rules>\n+                  <!-- TODO Disabled during kie-parent 7 removal due to false negatives -->\n+                  <!--                  <requirePluginVersions>-->\n+                  <!--                    <message>One or more plugins do not have valid version! The version needs to be-->\n+                  <!--                      explicitly specified, can not be a -SNAPSHOT version and can not be one of-->\n+                  <!--                      the special (and buggy) Maven versions (LATEST, RELEASE).-->\n+                  <!--                    </message>-->\n+                  <!--                  </requirePluginVersions>-->\n+                  <requireFilesDontExist>\n+                    <files>\n+                      <file>${project.basedir}/src/main/resources/logback-test.xml</file>\n+                      <file>${project.basedir}/src/main/filtered-resources/logback-test.xml</file>\n+                    </files>\n+                  </requireFilesDontExist>\n+                </rules>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>no-managed-deps</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <phase>initialize</phase>\n+              <configuration>\n+                <rules>\n+                  <requireManagedDeps\n+                      implementation=\"org.commonjava.maven.enforcer.rule.EnforceManagedDepsRule\">\n+                    <checkProfiles>true</checkProfiles>\n+                    <failOnViolation>true</failOnViolation>\n+                  </requireManagedDeps>\n+                </rules>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>enforce-direct-dependencies</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <phase>none</phase>\n+              <configuration>\n+                <rules>\n+                  <illegalTransitiveDependencyCheck\n+                      implementation=\"de.is24.maven.enforcer.rules.IllegalTransitiveDependencyCheck\">\n+                    <reportOnly>false</reportOnly>\n+                    <regexIgnoredClasses combine.children=\"append\">\n+                      <!-- The maven-shade-plugin needs these classes to be compile-scope in guvnor-ala-openshift-client to be picked up, and\n+                           then referenced in guvnor-ala-openshift-provider. When we don't need to shade anymore, we can remove these lines. -->\n+                      <regexIgnoredClass>io\\.fabric8\\.kubernetes.*</regexIgnoredClass>\n+                      <regexIgnoredClass>io\\.fabric8\\.openshift.*</regexIgnoredClass>\n+                      <regexIgnoredClass>com\\.sun\\.net\\.httpserver\\..+</regexIgnoredClass>\n+                      <regexIgnoredClass>javax\\..+</regexIgnoredClass>\n+                      <regexIgnoredClass>org\\.w3c\\.dom\\..+</regexIgnoredClass>\n+                      <regexIgnoredClass>org\\.xml\\.sax\\..+</regexIgnoredClass>\n+                    </regexIgnoredClasses>\n+                  </illegalTransitiveDependencyCheck>\n+                </rules>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>ban-blacklisted-dependencies</id>\n+              <phase>validate</phase>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <configuration>\n+                <rules>\n+                  <bannedDependencies>\n+                    <excludes combine.children=\"append\">\n+                      <!-- Ban blacklisted logging deps (we only use SLF4J + Logback) -->\n+                      <!-- In case of transitive dependency, exclude it and use 'org.slf4j:jcl-over-slf4j' instead -->\n+                      <exclude>commons-logging:commons-log*</exclude>\n+                      <!-- In case of transitive dependency, exclude it and use 'org.slf4j:log4j-over-slf4j' instead -->\n+                      <exclude>log4j:log4j</exclude>\n+                      <!-- In case of transitive dependency, exclude it and use 'org.javassist:javassist' instead -->\n+                      <exclude>javassist:javassist</exclude>\n+                      <exclude>org.apache.cxf:cxf-bundle-jaxrs</exclude>\n+                      <exclude>org.jboss.weld.se:weld-se\n+                      </exclude><!-- Use weld-se-core instead -->\n+                      <exclude>org.jboss.weld.servlet:weld-servlet\n+                      </exclude><!-- Use weld-servlet-core instead -->\n+                      <exclude>org.mockito:mockito-all</exclude><!-- Use mockito-core instead -->\n+                    </excludes>\n+                  </bannedDependencies>\n+                </rules>\n+                <fail>true</fail>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>ban-duplicated-classes</id>\n+              <!-- Using phase=none as we don't want this execution as part of the default build. The phase\n+                   is specified in the \"full\" profile and thus the execution will only be activated when using that profile. -->\n+              <phase>none</phase>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <configuration>\n+                <rules>\n+                  <banDuplicateClasses>\n+                    <ignoreClasses>\n+                      <!-- Duplicated by XStream's transitive deps, with very little chance to get properly fixed -->\n+                      <ignoreClass>org.xmlpull.v1.XmlPullParserException</ignoreClass>\n+                      <ignoreClass>org.xmlpull.v1.XmlPullParser</ignoreClass>\n+                      <!-- Bundled by both com.sun:tools and com.sun.xml.bind:jaxb-xjc. No easy way to exclude one of them. -->\n+                      <ignoreClass>org.relaxng.datatype.*</ignoreClass>\n+                      <!-- Classes duplicated by the jar itself (bug), see https://issues.apache.org.jira/browse/XMLBEANS-499 -->\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.XMLName</ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.XMLInputStream</ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.utils.NestedThrowable\n+                      </ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util\n+                      </ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.XMLStreamException</ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.ReferenceResolver</ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.XMLEvent</ignoreClass>\n+                      <ignoreClass>org.apache.xmlbeans.xml.stream.Location</ignoreClass>\n+                      <!-- Duplicated in xml-apis:xml-apis:jar:1.4.01 and xerces:xercesImpl:jar:2.11.0.SP4. The class is identical\n+                           and there is very little chance this will get ever fixed. -->\n+                      <ignoreClass>org.w3c.dom.ElementTraversal</ignoreClass>\n+                      <ignoreClass>org.w3c.dom.UserDataHandler</ignoreClass>\n+                      <!-- Packaged both in hornetq-commons and hornetq-client. Remove this once we move the testing\n+                           from HornetQ to ActiveMQ (https://issues.jboss.org/browse/JBPM-5503) -->\n+                      <ignoreClass>org.hornetq.utils.HornetQUtilBundle_$bundle</ignoreClass>\n+                      <ignoreClass>org.hornetq.utils.HornetQUtilLogger_$logger</ignoreClass>\n+                      <!-- Classes bundled in errai-javax-enterprise which are GWT friendly.\n+                           See https://github.com/errai/errai/blob/master/errai-javax-enterprise/README -->\n+                      <ignoreClass>javax.interceptor.InvocationContext</ignoreClass>\n+                      <ignoreClass>javax.inject.Provider</ignoreClass>\n+                      <ignoreClass>javax.inject.Named</ignoreClass>\n+                      <ignoreClass>javax.inject.Scope</ignoreClass>\n+                      <ignoreClass>javax.inject.Qualifier</ignoreClass>\n+                      <ignoreClass>javax.inject.Singleton</ignoreClass>\n+                      <ignoreClass>javax.enterprise.*</ignoreClass>\n+                      <!-- Servlet API is bundled in way too many different dependencies, causing nightmares trying to\n+                           properly exclude everything. There were no real issues with this so far as mostly the APIs\n+                           are just duplicates of the exactly same sources. In ideal world, this get eventually fixed,\n+                           but it may very well not be worth the effort. -->\n+                      <ignoreClass>javax.servlet.*</ignoreClass>\n+                      <!-- Classes in javax.annotation package are just marker annotations used to aid the programmers.\n+                           These annotations do not influence the actual behavior of the code, so it's reasonable to\n+                           ignore them. Following dependencies contain these classes: 'com.google.code.findbugs:jsr305'\n+                           and 'com.google.code.findbugs:annotations'. -->\n+                      <ignoreClass>javax.annotation.*</ignoreClass>\n+                      <!-- Exactly the same case as for above 'javax.annotation.*' classes. Following dependencies contain\n+                           these classes: 'net.jcip:jcip-annotations' and 'com.google.code.findbugs:annotations'. -->\n+                      <ignoreClass>net.jcip.annotations.*</ignoreClass>\n+                      <!-- ignoring java 9 compatible class for modules -->\n+                      <ignoreClass>module-info</ignoreClass>\n+                      <!-- ignoring multirelease jar classes -->\n+                      <ignoreClass>META-INF/versions/*</ignoreClass>\n+                      <!-- Classes repackaged in the maven world-->\n+                      <ignoreClass>org.eclipse.aether.*</ignoreClass>\n+                      <ignoreClass>org.apache.maven.*</ignoreClass>\n+                      <ignoreClass>org.codehaus.plexus.*</ignoreClass>\n+                      <!-- Infinispan core includes commons and they have duplicated classes. We can't remove commons because\n+                       core needs them. Infinispan team has been informed about this packaging problem -->\n+                      <ignoreClass>org.infinispan.util.AbstractDelegatingConcurrentMap\n+                      </ignoreClass>\n+                      <ignoreClass>org.infinispan.util.AbstractDelegatingMap</ignoreClass>\n+                      <ignoreClass>org.infinispan.util.AbstractDelegatingSet</ignoreClass>\n+                      <ignoreClass>org.infinispan.util.AbstractDelegatingCollection</ignoreClass>\n+                      <!-- This package contains auto generated code and is available both in kafka-clients\n+                      and in kafka-clients-test -->\n+                      <ignoreClass>org.apache.kafka.common.message.*</ignoreClass>\n+                    </ignoreClasses>\n+                    <dependencies>\n+                      <dependency>\n+                        <!-- quarkus-ide-launcher is a dependency of quarkus-core that they auto exclude during the build -->\n+                        <groupId>io.quarkus</groupId>\n+                        <artifactId>quarkus-ide-launcher</artifactId>\n+                        <ignoreClasses>\n+                          <ignoreClass>*</ignoreClass>\n+                        </ignoreClasses>\n+                      </dependency>\n+                      <dependency>\n+                        <groupId>org.elasticsearch</groupId>\n+                        <artifactId>elasticsearch</artifactId>\n+                        <ignoreClasses>\n+                          <!-- Elasticsearch team claims they fixed performance issues in the class and re-bundled it.\n+                               See https://discuss.elastic.co/t/an-unshaded-joda-time-classes-in-elasticsearch-2-1-1-jar/38943\n+                               Nothing we can do here. -->\n+                          <ignoreClass>org.joda.time.base.BaseDateTime</ignoreClass>\n+                        </ignoreClasses>\n+                      </dependency>\n+                      <!-- ignore jboss-logging included in kie server router as it is required by undertow and uberjar usage-->\n+                      <dependency>\n+                        <groupId>org.kie.server</groupId>\n+                        <artifactId>kie-server-router-proxy</artifactId>\n+                        <type>jar</type>\n+                        <ignoreClasses>\n+                          <ignoreClass>org.jboss.logging.*</ignoreClass>\n+                          <ignoreClass>io.undertow.*</ignoreClass>\n+                          <ignoreClass>org.json.*</ignoreClass>\n+                          <ignoreClass>org.jboss.threads.*</ignoreClass>\n+                          <ignoreClass>org.xnio.*</ignoreClass>\n+                          <ignoreClass>org.wildfly.*</ignoreClass>\n+                          <ignoreClass>org.apache.commons.*</ignoreClass>\n+                        </ignoreClasses>\n+                      </dependency>\n+                      <dependency>\n+                        <groupId>org.wildfly.security</groupId>\n+                        <artifactId>wildfly-elytron</artifactId>\n+                        <type>jar</type>\n+                        <ignoreClasses>\n+                          <ignoreClass>*</ignoreClass>\n+                        </ignoreClasses>\n+                      </dependency>\n+                      <dependency>\n+                        <!-- The openshift-client duplicates these classes from the kubernetes-client.\n+                             It is an upstream io.fabric8 issue that needs to be fixed there:\n+                             https://github.com/fabric8io/kubernetes-client/issues/828 -->\n+                        <groupId>io.fabric8</groupId>\n+                        <artifactId>openshift-client</artifactId>\n+                        <type>jar</type>\n+                        <ignoreClasses>\n+                          <ignoreClass>io.fabric8.kubernetes.client.ConfigFluent</ignoreClass>\n+                          <ignoreClass>io.fabric8.kubernetes.client.ConfigBuilder\n+                          </ignoreClass>\n+                          <ignoreClass>io.fabric8.kubernetes.client.ConfigFluentImpl\n+                          </ignoreClass>\n+                        </ignoreClasses>\n+                      </dependency>\n+                    </dependencies>\n+                    <findAllDuplicates>true</findAllDuplicates>\n+                  </banDuplicateClasses>\n+                </rules>\n+                <fail>${enforcer.failOnDuplicatedClasses}</fail>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>no-duplicate-declared-dependencies</id>\n+              <goals>\n+                <goal>enforce</goal>\n+              </goals>\n+              <configuration>\n+                <rules>\n+                  <banDuplicatePomDependencyVersions/>\n+                </rules>\n+              </configuration>\n+            </execution>\n+          </executions>\n+        </plugin>\n+        <plugin>\n+          <groupId>org.revapi</groupId>\n+          <artifactId>revapi-maven-plugin</artifactId>\n+          <version>0.9.5</version>\n+          <dependencies>\n+            <dependency>\n+              <groupId>org.revapi</groupId>\n+              <artifactId>revapi-java</artifactId>\n+              <version>0.14.3</version>\n+            </dependency>\n+          </dependencies>\n+          <configuration>\n+            <oldArtifacts>\n+              <artifact>${project.groupId}:${project.artifactId}:${revapi.oldKieVersion}</artifact>\n+            </oldArtifacts>\n+            <newArtifacts>\n+              <artifact>${project.groupId}:${project.artifactId}:${revapi.newKieVersion}</artifact>\n+            </newArtifacts>\n+            <!-- By default revapi will check the oldArtifact against the currently executed build -->\n+            <analysisConfigurationFiles>\n+              <configurationFile>\n+                <path>src/build/revapi-config.json</path>\n+                <roots>\n+                  <root>filters</root>\n+                  <root>ignores</root>\n+                </roots>\n+              </configurationFile>\n+            </analysisConfigurationFiles>\n+            <!-- By default, revapi will only fail the build if there are potentially breaking or breaking changes. However, in the report\n+                 we want even non breaking changes to be present. -->\n+            <reportSeverity>nonBreaking</reportSeverity>\n+            <failSeverity>potentiallyBreaking</failSeverity>\n+          </configuration>\n+          <!-- Running two executions is a workaround to make sure we get a HTML report in case revapi finds\n+               some incompatible changes. The \"check\" goal will simply fail the whole build before it could get\n+               to the report. To make sure we always get a HTML report, the \"report\" goal needs to be executed\n+               before the \"check\" goal.\n+               Once https://github.com/revapi/revapi/issues/11 is fixed it should be possible to use single execution. -->\n+          <executions>\n+            <execution>\n+              <id>check</id>\n+              <goals>\n+                <goal>check</goal>\n+              </goals>\n+              <phase>verify</phase>\n+            </execution>\n+            <execution>\n+              <!-- report can be found in ${build.directory}/site/revapi-report.html -->\n+              <id>report</id>\n+              <goals>\n+                <goal>report</goal>\n+              </goals>\n+              <phase>package</phase>\n+            </execution>\n+          </executions>\n+        </plugin>\n+\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-resources-plugin</artifactId>\n+          <configuration>\n+            <encoding>UTF-8</encoding>\n+          </configuration>\n+        </plugin>\n+        <!--            <plugin>-->\n+        <!--              <groupId>org.apache.maven.plugins</groupId>-->\n+        <!--              <artifactId>maven-surefire-plugin</artifactId>-->\n+        <!--              <configuration>-->\n+        <!--                <includes>-->\n+        <!--                  <include>**/*Test.java</include>-->\n+        <!--                </includes>-->\n+        <!--                <excludes>-->\n+        <!--                  <exclude>**/*IntegrationTest.java</exclude>-->\n+        <!--                </excludes>-->\n+        <!--                <argLine>-Xmx1024m -Dfile.encoding=UTF-8</argLine>-->\n+        <!--                <systemPropertyVariables>-->\n+        <!--                  <apple.awt.UIElement>true</apple.awt.UIElement>-->\n+        <!--                </systemPropertyVariables>-->\n+        <!--              </configuration>-->\n+        <!--            </plugin>-->\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-failsafe-plugin</artifactId>\n+          <version>${version.failsafe.plugin}</version>\n+          <executions>\n+            <execution>\n+              <goals>\n+                <goal>integration-test</goal>\n+                <goal>verify</goal>\n+              </goals>\n+            </execution>\n+          </executions>\n+          <configuration>\n+            <includes>\n+              <include>**/*IntegrationTest.java</include>\n+              <include>**/*IT.java</include>\n+            </includes>\n+            <argLine>-Xmx1024m -Dfile.encoding=UTF-8</argLine>\n+          </configuration>\n+        </plugin>\n+        <!-- Packaging -->\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-jar-plugin</artifactId>\n+          <executions>\n+            <execution>\n+              <id>default-jar</id>\n+              <configuration>\n+                <archive>\n+                  <manifestEntries combine.children=\"append\">\n+                    <Automatic-Module-Name>${java.module.name}</Automatic-Module-Name>\n+                  </manifestEntries>\n+                </archive>\n+              </configuration>\n+            </execution>\n+            <execution>\n+              <id>test-jar</id>\n+              <goals>\n+                <goal>test-jar</goal>\n+              </goals>\n+              <configuration>\n+                <skipIfEmpty>true</skipIfEmpty>\n+                <excludes>\n+                  <exclude>**/logback-test.xml</exclude>\n+                </excludes>\n+              </configuration>\n+            </execution>\n+          </executions>\n+          <configuration>\n+            <archive>\n+              <manifest>\n+                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n+                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n+              </manifest>\n+            </archive>\n+          </configuration>\n+        </plugin>\n+        <plugin>\n+          <groupId>org.asciidoctor</groupId>\n+          <artifactId>asciidoctor-maven-plugin</artifactId>\n+          <version>2.0.0</version>\n+          <dependencies>\n+            <dependency>\n+              <!-- Required to generate the PDF file -->\n+              <groupId>org.asciidoctor</groupId>\n+              <artifactId>asciidoctorj-pdf</artifactId>\n+              <version>1.5.0</version>\n+            </dependency>\n+          </dependencies>\n+        </plugin>\n+        <plugin>\n+          <groupId>org.codehaus.mojo</groupId>\n+          <artifactId>versions-maven-plugin</artifactId>\n+          <version>2.1</version>\n+        </plugin>\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-javadoc-plugin</artifactId>\n+          <configuration>\n+            <author>false</author>\n+            <quiet>true</quiet>\n+          </configuration>\n+        </plugin>\n+        <plugin>\n+          <groupId>com.github.spotbugs</groupId>\n+          <artifactId>spotbugs-maven-plugin</artifactId>\n+          <version>${version.com.github.spotbugs-maven-plugin}</version>\n+          <!--              <dependencies>-->\n+          <!--                <dependency>-->\n+          <!--                  <groupId>org.kie</groupId>-->\n+          <!--                  <artifactId>kie-build-tools</artifactId>-->\n+          <!--                  <version>${version.org.kie}</version>-->\n+          <!--                </dependency>-->\n+          <!--              </dependencies>-->\n+          <configuration>\n+            <maxRank>14</maxRank>\n+            <includeTests>true</includeTests>\n+            <effort>Max</effort>\n+            <xmlOutput>true</xmlOutput>\n+            <failOnError>${spotbugs.failOnViolation}</failOnError>\n+            <excludeFilterFile>spotbugs-excludes.xml</excludeFilterFile>\n+          </configuration>\n+        </plugin>\n+        <plugin>\n+          <groupId>org.codehaus.mojo</groupId>\n+          <artifactId>exec-maven-plugin</artifactId>\n+          <version>1.5.0</version>\n+        </plugin>\n+        <plugin>\n+          <groupId>org.sonarsource.scanner.maven</groupId>\n+          <artifactId>sonar-maven-plugin</artifactId>\n+          <version>3.6.0.1398</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f12082713ae320968a2c430e08c1c25e5d963ff8"}, "originalPosition": 783}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4bc3f2c4de15f34ccb6ddca5898bd9dd98e47db", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/kiegroup/optaplanner/commit/f4bc3f2c4de15f34ccb6ddca5898bd9dd98e47db", "committedDate": "2020-07-09T07:55:33Z", "message": "Remove plugins already declared in jboss-parent + upgrade exec plugin from 1.5.0 to 1.6.0"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3320, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}