{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NDY1OTc1", "number": 758, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNzowMToxMFrOD2y07A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNzowMToxMFrOD2y07A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzgyNDQ0OnYy", "diffSide": "RIGHT", "path": "optaplanner-examples/src/test/java/org/optaplanner/examples/machinereassignment/solver/score/MachineReassignmentConstraintProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNzowMToxMFrOGMt4Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNzowMToxMFrOGMt4Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4Nzc5OA==", "bodyText": "It's good to have a givenSolution() test here, and in a few other examples. But it also increases the maintenance burden: when refactoring domain classes of these examples, the xml changes (I've seen that a lot).\n@triceo I recommend to use givenSolution() test sparingly, not for all examples. But all examples must have a ConstraintProvider and every constraint must be tested in isolation with a ConstraintVerifier. Wdyt?", "url": "https://github.com/kiegroup/optaplanner/pull/758#discussion_r415987798", "createdAt": "2020-04-27T17:01:10Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-examples/src/test/java/org/optaplanner/examples/machinereassignment/solver/score/MachineReassignmentConstraintProviderTest.java", "diffHunk": "@@ -347,8 +350,21 @@ public void balanceCostSingleMachine() {\n \n         constraintVerifier.verifyThat(MachineReassignmentConstraintProvider::balanceCost)\n                 .given(cpu, mem, disk, balancePenaltyCpuMem, machine, machineCapacityCpu, machineCapacityMem,\n-                        machineCapacityDisk,\n-                        process, processRequirementCpu, processRequirementMem, processRequirementDisk, processAssignment)\n+                        machineCapacityDisk, process, processAssignment)\n                 .penalizesBy(2L);\n     }\n+    \n+    @Test\n+    public void solutionWithMultipleConstraints() throws IOException {\n+        constraintVerifier.verifyThat()\n+                .givenSolution(readSolution(\"model-a1-1-0hard-44306501soft.xml\"))\n+                .scores(HardSoftLongScore.of(-0, -44306501));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf2831e5734f843e67f6ea658da084639fe61926"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4508, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}