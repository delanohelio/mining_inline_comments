{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NTg2MjY2", "number": 982, "title": "PLANNER-2212 Minimize the occurrence of match weight exceptions", "bodyText": "I know that we spoke about this before, and I'm doing something else than what we agreed on. I believe I have a good reason for why this is the best option, as it is also the only option.\nConsider the following:\n\nThe exception about wrong match weight type comes from AbstractScoreHolder - I can not be speaking about penalizeBigDecimal() there, as the user may see this in DRL as well.\nOne level up, in impactScore() in Constraint Streams, I do not know which numeric types AbstractScoreHolder will or will not accept, and so I can not add that check there.\n\nTherefore, I only have three options:\n\nModify AbstractScoreHolder to return the type of match weight it requires. I'd argue this is needless complexity.\nIn CS, catch the exception from AbstractScoreHolder and throw a new one, with a better exception message. I'd argue this is ugly.\nMake sure the user never sees this exception, assuming they're not doing anything crazy like multiplying SimpleScore with a BigDecimal.\n\nI am doing the latter. Here's why this is not a problem:\n\nMultiplying LongScore with int is safe.\nMultiplying BigDecimalScore with long or int is safe.\nMultiplying IntScore with long or BigDecimal continues to throw an exception.\nMultiplying LongScore with BigDecimal continues to throw an exception.\n\nTherefore, this is perfectly safe and a better situation than before.", "createdAt": "2020-10-21T14:17:28Z", "url": "https://github.com/kiegroup/optaplanner/pull/982", "merged": true, "mergeCommit": {"oid": "5923cb0e459a9db24e612cbcc74780e73bf72fa1"}, "closed": true, "closedAt": "2020-11-02T12:39:42Z", "author": {"login": "triceo"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUt50SAH2gAyNTA3NTg2MjY2OmZjNTEyNjZiNjAzYTQ0YTUzYzQ2MjQ5NDUyMTgzODllZjc1YzAxYWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYjVs-AH2gAyNTA3NTg2MjY2OjkzZjE4NWIzMWM5NGRhYWRhMmU0NWEzMWJlNDQwMDFkOTk3NDkxOTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fc51266b603a44a53c4624945218389ef75c01ac", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/fc51266b603a44a53c4624945218389ef75c01ac", "committedDate": "2020-10-21T14:04:36Z", "message": "Fix existing exceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be31d7a4c562c63782e2af25340ee64865fa19c", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/5be31d7a4c562c63782e2af25340ee64865fa19c", "committedDate": "2020-10-21T14:12:07Z", "message": "Minimize the occurrence of the exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNzQyNDI1", "url": "https://github.com/kiegroup/optaplanner/pull/982#pullrequestreview-513742425", "createdAt": "2020-10-21T14:20:50Z", "commit": {"oid": "5be31d7a4c562c63782e2af25340ee64865fa19c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDoyMDo1MVrOHlvBhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDoyMDo1MVrOHlvBhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMyOTc5Ng==", "bodyText": "If we want to do this (and the jury is out on that), then we 'd want to comment here clearly why we're sweeping this under the mat.", "url": "https://github.com/kiegroup/optaplanner/pull/982#discussion_r509329796", "createdAt": "2020-10-21T14:20:51Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/common/rules/AbstractRuleAssembler.java", "diffHunk": "@@ -105,7 +105,11 @@ protected static void impactScore(DroolsConstraint constraint, Drools drools, Ab\n             BigDecimal impact) {\n         RuleContext kcontext = (RuleContext) drools;\n         constraint.assertCorrectImpact(impact);\n-        scoreHolder.impactScore(kcontext, impact);\n+        try {\n+            scoreHolder.impactScore(kcontext, impact);\n+        } catch (UnsupportedOperationException exception) {\n+\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be31d7a4c562c63782e2af25340ee64865fa19c"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b924203d67f290f7542d3ba3db8e684a8776c781", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/b924203d67f290f7542d3ba3db8e684a8776c781", "committedDate": "2020-10-21T14:35:58Z", "message": "Remove needless catch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7daa0ba0e1f0e5c54acdb851916b196b9b2c0994", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/7daa0ba0e1f0e5c54acdb851916b196b9b2c0994", "committedDate": "2020-10-22T10:58:17Z", "message": "Address code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTQ2ODI2", "url": "https://github.com/kiegroup/optaplanner/pull/982#pullrequestreview-521546826", "createdAt": "2020-11-02T11:27:59Z", "commit": {"oid": "7daa0ba0e1f0e5c54acdb851916b196b9b2c0994"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMToyNzo1OVrOHsAlQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMToyNzo1OVrOHsAlQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkwODkyOQ==", "bodyText": "nitpick: Typically we don't end the Maybe sentences with a question mark (?), but with a dot (.).", "url": "https://github.com/kiegroup/optaplanner/pull/982#discussion_r515908929", "createdAt": "2020-11-02T11:27:59Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/simple/SimpleScoreHolderImpl.java", "diffHunk": "@@ -104,6 +105,22 @@ public void impactScore(RuleContext kcontext, int weightMultiplier) {\n         matchExecutor.accept(kcontext, weightMultiplier);\n     }\n \n+    @Override\n+    public void impactScore(RuleContext kcontext, long weightMultiplier) {\n+        throw new UnsupportedOperationException(\"In the rule (\" + kcontext.getRule().getName()\n+                + \"), the scoreHolder class (\" + getClass()\n+                + \") does not support a long weightMultiplier (\" + weightMultiplier + \").\\n\"\n+                + \"If you're using constraint streams, maybe switch from penalizeLong() to penalize()?\");\n+    }\n+\n+    @Override\n+    public void impactScore(RuleContext kcontext, BigDecimal weightMultiplier) {\n+        throw new UnsupportedOperationException(\"In the rule (\" + kcontext.getRule().getName()\n+                + \"), the scoreHolder class (\" + getClass()\n+                + \") does not support a BigDecimal weightMultiplier (\" + weightMultiplier + \").\\n\"\n+                + \"If you're using constraint streams, maybe switch from penalizeBigDecimal() to penalize()?\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7daa0ba0e1f0e5c54acdb851916b196b9b2c0994"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTQ3MjY2", "url": "https://github.com/kiegroup/optaplanner/pull/982#pullrequestreview-521547266", "createdAt": "2020-11-02T11:28:39Z", "commit": {"oid": "7daa0ba0e1f0e5c54acdb851916b196b9b2c0994"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93f185b31c94daada2e45a31be44001d99749192", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/93f185b31c94daada2e45a31be44001d99749192", "committedDate": "2020-11-02T12:01:48Z", "message": "Remove question marks"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3264, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}