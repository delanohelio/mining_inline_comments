{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNTM5NjY3", "number": 787, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDo1MTo0NVrOD--nxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzo0NjozNFrOEDv_-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzY0MjkzOnYy", "diffSide": "RIGHT", "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDo1MTo0NVrOGZaCPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMzowODo0MVrOGdwwYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NDE0Mg==", "bodyText": "\"all\" would imply that if one lesson is out, the constraint equally broken as if 4 lessons are in another room.\nWould \"every\" work here?", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r429294142", "createdAt": "2020-05-22T14:51:45Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -17,18 +17,17 @@ You will build a REST application that optimizes a school timetable for students\n image::QuickStart/SpringBoot/timeTableAppScreenshot.png[]\n \n Your service will assign `Lesson` instances to `Timeslot` and `Room` instances automatically\n-by using AI to adhere to hard and soft scheduling _constraints_, such as:\n+by using AI to adhere to hard and soft scheduling _constraints_, such as the following examples:\n \n * A room can have at most one lesson at the same time.\n+//consider `one lesson at a time`\n * A teacher can teach at most one lesson at the same time.\n * A student can attend at most one lesson at the same time.\n * A teacher prefers to teach in a single room.\n+//Consider: ..to teach all lessons in the same room.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg2MDcwNg==", "bodyText": "Yes, every is better.", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r433860706", "createdAt": "2020-06-02T13:08:41Z", "author": {"login": "emmurphy1"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -17,18 +17,17 @@ You will build a REST application that optimizes a school timetable for students\n image::QuickStart/SpringBoot/timeTableAppScreenshot.png[]\n \n Your service will assign `Lesson` instances to `Timeslot` and `Room` instances automatically\n-by using AI to adhere to hard and soft scheduling _constraints_, such as:\n+by using AI to adhere to hard and soft scheduling _constraints_, such as the following examples:\n \n * A room can have at most one lesson at the same time.\n+//consider `one lesson at a time`\n * A teacher can teach at most one lesson at the same time.\n * A student can attend at most one lesson at the same time.\n * A teacher prefers to teach in a single room.\n+//Consider: ..to teach all lessons in the same room.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NDE0Mg=="}, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzY0NTY1OnYy", "diffSide": "RIGHT", "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDo1MjozMVrOGZaEFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMzowOToyOFrOGdwykw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NDYxNQ==", "bodyText": "The same was to emphasis that, but I am ok with the change too. Your call.", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r429294615", "createdAt": "2020-05-22T14:52:31Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -17,18 +17,17 @@ You will build a REST application that optimizes a school timetable for students\n image::QuickStart/SpringBoot/timeTableAppScreenshot.png[]\n \n Your service will assign `Lesson` instances to `Timeslot` and `Room` instances automatically\n-by using AI to adhere to hard and soft scheduling _constraints_, such as:\n+by using AI to adhere to hard and soft scheduling _constraints_, such as the following examples:\n \n * A room can have at most one lesson at the same time.\n+//consider `one lesson at a time`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg2MTI2Nw==", "bodyText": "That's OK.We'll keep it.", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r433861267", "createdAt": "2020-06-02T13:09:28Z", "author": {"login": "emmurphy1"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -17,18 +17,17 @@ You will build a REST application that optimizes a school timetable for students\n image::QuickStart/SpringBoot/timeTableAppScreenshot.png[]\n \n Your service will assign `Lesson` instances to `Timeslot` and `Room` instances automatically\n-by using AI to adhere to hard and soft scheduling _constraints_, such as:\n+by using AI to adhere to hard and soft scheduling _constraints_, such as the following examples:\n \n * A room can have at most one lesson at the same time.\n+//consider `one lesson at a time`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NDYxNQ=="}, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzY1Mzk0OnYy", "diffSide": "RIGHT", "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDo1NTowMFrOGZaJgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMzowOTo1NlrOGdwzyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NjAwMw==", "bodyText": "... id field ... In the annotation usage @Foo(bar = \"g\") is bar a field?\n... id field with the valueRangeProviderRefs property ...\nBoth id and valueRangeProviderRefs are the same type. Field or property?", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r429296003", "createdAt": "2020-05-22T14:55:00Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -630,10 +629,11 @@ However, this class is also the output of the solution:\n \n === The value range providers\n \n-That `timeslotList` field is a value range provider.\n+The `timeslotList` field is a value range provider.\n It holds the `Timeslot` instances which OptaPlanner can pick from to assign to the `timeslot` field of `Lesson` instances.\n The `timeslotList` field has an `@ValueRangeProvider` annotation to connect those two,\n-by matching the `id` with the `valueRangeProviderRefs` of the `@PlanningVariable` in the `Lesson`.\n+by matching the value of `id` field with the `valueRangeProviderRefs` property of the `@PlanningVariable` annotation in the `Lesson` class.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg2MTU3OQ==", "bodyText": "Property I'd say.", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r433861579", "createdAt": "2020-06-02T13:09:56Z", "author": {"login": "emmurphy1"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -630,10 +629,11 @@ However, this class is also the output of the solution:\n \n === The value range providers\n \n-That `timeslotList` field is a value range provider.\n+The `timeslotList` field is a value range provider.\n It holds the `Timeslot` instances which OptaPlanner can pick from to assign to the `timeslot` field of `Lesson` instances.\n The `timeslotList` field has an `@ValueRangeProvider` annotation to connect those two,\n-by matching the `id` with the `valueRangeProviderRefs` of the `@PlanningVariable` in the `Lesson`.\n+by matching the value of `id` field with the `valueRangeProviderRefs` property of the `@PlanningVariable` annotation in the `Lesson` class.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NjAwMw=="}, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzY1ODE3OnYy", "diffSide": "RIGHT", "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDo1NjoxMlrOGZaMLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDo1NjoxMlrOGZaMLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NjY4Ng==", "bodyText": "to connect the @PlanningVariable with the @ValueRangeProvider", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r429296686", "createdAt": "2020-05-22T14:56:12Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -630,10 +629,11 @@ However, this class is also the output of the solution:\n \n === The value range providers\n \n-That `timeslotList` field is a value range provider.\n+The `timeslotList` field is a value range provider.\n It holds the `Timeslot` instances which OptaPlanner can pick from to assign to the `timeslot` field of `Lesson` instances.\n The `timeslotList` field has an `@ValueRangeProvider` annotation to connect those two,\n-by matching the `id` with the `valueRangeProviderRefs` of the `@PlanningVariable` in the `Lesson`.\n+by matching the value of `id` field with the `valueRangeProviderRefs` property of the `@PlanningVariable` annotation in the `Lesson` class.\n+//can you clarify 'those two', above?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzY2MjM5OnYy", "diffSide": "RIGHT", "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDo1NzoyNlrOGZaO1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzowMjoyNVrOGqHRMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NzM2Nw==", "bodyText": "If timetable is a acceptable word, then TimeTable should be renamed to Timetable, across the entire source code, including the quarkus quickstart too? I can do that, just asking.", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r429297367", "createdAt": "2020-05-22T14:57:26Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -989,19 +989,19 @@ public class TimeTableController {\n ----\n ====\n +\n-For simplicity's sake, this code handles only one `TimeTable`,\n+For simplicity's sake, this code handles only one `TimeTable` instance,\n but it is straightforward to enable multi-tenancy and handle multiple `TimeTable` instances of different high schools in parallel.\n +\n-The `getTimeTable()` method returns the latest time table from the database.\n+The `getTimeTable()` method returns the latest timetable from the database.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5ODQ5OA==", "bodyText": "Even if timetable is decent English, I'd keep the time table to timetable change to a separate PR. It will be big.", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r429298498", "createdAt": "2020-05-22T14:59:24Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -989,19 +989,19 @@ public class TimeTableController {\n ----\n ====\n +\n-For simplicity's sake, this code handles only one `TimeTable`,\n+For simplicity's sake, this code handles only one `TimeTable` instance,\n but it is straightforward to enable multi-tenancy and handle multiple `TimeTable` instances of different high schools in parallel.\n +\n-The `getTimeTable()` method returns the latest time table from the database.\n+The `getTimeTable()` method returns the latest timetable from the database.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NzM2Nw=="}, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4MDc1NQ==", "bodyText": "So two things. First, you do not need to change TimeTable in code. It is acceptable, and I believe preferable, to use camel case for code elements. It makes it clear to the reader that it is a code object. Second, there is both timetable and time table in the text in this chapter. Only three instance of time table so went ahead an changed. In fact, those were the only three in the entire OptaPlanner doc. There are two SVG diagrams that have time table but I didn't change those. We can do that later.", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r433980755", "createdAt": "2020-06-02T15:48:18Z", "author": {"login": "emmurphy1"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -989,19 +989,19 @@ public class TimeTableController {\n ----\n ====\n +\n-For simplicity's sake, this code handles only one `TimeTable`,\n+For simplicity's sake, this code handles only one `TimeTable` instance,\n but it is straightforward to enable multi-tenancy and handle multiple `TimeTable` instances of different high schools in parallel.\n +\n-The `getTimeTable()` method returns the latest time table from the database.\n+The `getTimeTable()` method returns the latest timetable from the database.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NzM2Nw=="}, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3ODYwMg==", "bodyText": "Why not simply standarize on \"time table\" (=TimeTable) everywhere? Don't mix with \"timetable\" (=Timetable) anywhere", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r436278602", "createdAt": "2020-06-06T15:46:46Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -989,19 +989,19 @@ public class TimeTableController {\n ----\n ====\n +\n-For simplicity's sake, this code handles only one `TimeTable`,\n+For simplicity's sake, this code handles only one `TimeTable` instance,\n but it is straightforward to enable multi-tenancy and handle multiple `TimeTable` instances of different high schools in parallel.\n +\n-The `getTimeTable()` method returns the latest time table from the database.\n+The `getTimeTable()` method returns the latest timetable from the database.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NzM2Nw=="}, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2Mjg0NQ==", "bodyText": "Hey, sorry I didn't see the ball come back over to me! Usually, I wouldn't dig in, but I can't find any reputable sources that spell a school schedule as time table. The IBM SG doesn't list either spelling in the word list but do use it in context (pg 161:\n\"Align times (for example, in a timetable) on colons.\"\nMerriam Webster uses timetable:\nhttps://www.merriam-webster.com/dictionary/timetable\nThe only references I find are the less common 'time tables' to refer to multiplication tables (usually 'times tables'). So I think that if we use 'timetable' in the text and use TimeTable in code elements, the distinction is clear. But if you are still uncomfortable, let me run it by Stetson on when he is back at work later in the week.", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r440362845", "createdAt": "2020-06-15T18:23:02Z", "author": {"login": "emmurphy1"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -989,19 +989,19 @@ public class TimeTableController {\n ----\n ====\n +\n-For simplicity's sake, this code handles only one `TimeTable`,\n+For simplicity's sake, this code handles only one `TimeTable` instance,\n but it is straightforward to enable multi-tenancy and handle multiple `TimeTable` instances of different high schools in parallel.\n +\n-The `getTimeTable()` method returns the latest time table from the database.\n+The `getTimeTable()` method returns the latest timetable from the database.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NzM2Nw=="}, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMjQ2NA==", "bodyText": "If timetable is a acceptable word, then TimeTable should be renamed to Timetable, across the entire source code, including the quarkus quickstart too. Let's do that in a separate PR? I can handle it with regex's.", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r446812464", "createdAt": "2020-06-29T07:02:25Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -989,19 +989,19 @@ public class TimeTableController {\n ----\n ====\n +\n-For simplicity's sake, this code handles only one `TimeTable`,\n+For simplicity's sake, this code handles only one `TimeTable` instance,\n but it is straightforward to enable multi-tenancy and handle multiple `TimeTable` instances of different high schools in parallel.\n +\n-The `getTimeTable()` method returns the latest time table from the database.\n+The `getTimeTable()` method returns the latest timetable from the database.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5NzM2Nw=="}, "originalCommit": {"oid": "e2f0353a1bc7c9305edb177f297f87e7f1de6eb3"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzYzODk1OnYy", "diffSide": "RIGHT", "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTo0NDo1OVrOGgEUsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoyNTozMlrOGj9sXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3ODQ1MA==", "bodyText": "Given that the code states @SpringBootTest(properties = {...}, I presume this is more correct?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Notice how the `@SpringBootTest` annotation's properties overwrites the solver termination\n          \n          \n            \n            Notice how the `@SpringBootTest` annotation's `properties` property overwrites the solver termination", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r436278450", "createdAt": "2020-06-06T15:44:59Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -875,7 +872,7 @@ This test verifies that after solving, all lessons are assigned to a time slot a\n It also verifies that it found a feasible solution (no hard constraints broken).\n \n Normally, the solver finds a feasible solution in less than 200 milliseconds.\n-Notice how the `@SpringBootTest` annotation's `properties` overwrites the solver termination\n+Notice how the `@SpringBootTest` annotation's properties overwrites the solver termination", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51362bbeaf375eb9c8b177d2f732927e89124b2d"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NDEyNA==", "bodyText": "Yes. I will fix when we agree on timetable/ time table.", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r440364124", "createdAt": "2020-06-15T18:25:32Z", "author": {"login": "emmurphy1"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -875,7 +872,7 @@ This test verifies that after solving, all lessons are assigned to a time slot a\n It also verifies that it found a feasible solution (no hard constraints broken).\n \n Normally, the solver finds a feasible solution in less than 200 milliseconds.\n-Notice how the `@SpringBootTest` annotation's `properties` overwrites the solver termination\n+Notice how the `@SpringBootTest` annotation's properties overwrites the solver termination", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3ODQ1MA=="}, "originalCommit": {"oid": "51362bbeaf375eb9c8b177d2f732927e89124b2d"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzY0MTExOnYy", "diffSide": "RIGHT", "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTo0ODoxNlrOGgEVvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTo0ODoxNlrOGgEVvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3ODcxOQ==", "bodyText": "timeslotList is a field in a class, not a property in an annotation\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The `timeslotList` property has an `@ValueRangeProvider` annotation to connect the @PlanningVariable with the @ValueRangeProvider,\n          \n          \n            \n            The `timeslotList` field has an `@ValueRangeProvider` annotation to connect the @PlanningVariable with the @ValueRangeProvider,", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r436278719", "createdAt": "2020-06-06T15:48:16Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -630,10 +627,10 @@ However, this class is also the output of the solution:\n \n === The value range providers\n \n-That `timeslotList` field is a value range provider.\n+The `timeslotList` field is a value range provider.\n It holds the `Timeslot` instances which OptaPlanner can pick from to assign to the `timeslot` field of `Lesson` instances.\n-The `timeslotList` field has an `@ValueRangeProvider` annotation to connect those two,\n-by matching the `id` with the `valueRangeProviderRefs` of the `@PlanningVariable` in the `Lesson`.\n+The `timeslotList` property has an `@ValueRangeProvider` annotation to connect the @PlanningVariable with the @ValueRangeProvider,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51362bbeaf375eb9c8b177d2f732927e89124b2d"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzY3NjExOnYy", "diffSide": "RIGHT", "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzo0NjozNFrOGg8wdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzo0NjozNFrOGg8wdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIwMzA2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Therefore, the Spring Boot starter injects a `SolverManager` class,\n          \n          \n            \n            Therefore, the Spring Boot starter injects a `SolverManager` instance,", "url": "https://github.com/kiegroup/optaplanner/pull/787#discussion_r437203061", "createdAt": "2020-06-09T07:46:34Z", "author": {"login": "yurloc"}, "path": "optaplanner-docs/src/main/asciidoc/QuickStart/SpringBoot/SpringBootQuickStart-chapter.adoc", "diffHunk": "@@ -654,7 +651,7 @@ and your `TimeTableConstraintProvider` can select _from_ those too.\n \n Now you are ready to put everything together and create a REST service.\n But solving planning problems on REST threads causes HTTP timeout issues.\n-Therefore, the Spring Boot starter injects a `SolverManager`,\n+Therefore, the Spring Boot starter injects a `SolverManager` class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51362bbeaf375eb9c8b177d2f732927e89124b2d"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4549, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}