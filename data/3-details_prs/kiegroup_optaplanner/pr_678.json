{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMDI5MjE3", "number": 678, "title": "PLANNER-1840 Extra test coverage for joiners", "bodyText": "Besides adding test coverage, I also refactor parts of the joiners to make sure code is reused as much as reasonable.", "createdAt": "2020-02-10T09:33:52Z", "url": "https://github.com/kiegroup/optaplanner/pull/678", "merged": true, "mergeCommit": {"oid": "28372a41c6a0ed8100a80a9f04c3a4bde1ece5c8"}, "closed": true, "closedAt": "2020-02-10T16:03:57Z", "author": {"login": "triceo"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcC5x0UAH2gAyMzczMDI5MjE3OmUwZGVlYzE0ODJmNGY0MTZhMmM0NWQ2YWI2ZDMyMzdlMWQ3MzhhMGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcC_Xg5AH2gAyMzczMDI5MjE3OmU1ZmQ1ZTkzZWM0ZGE5ODg1ZDY1MzE5NDI4Nzk4ZDFlOTVkMmIxZGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e0deec1482f4f416a2c45d6ab6d3237e1d738a0e", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e0deec1482f4f416a2c45d6ab6d3237e1d738a0e", "committedDate": "2020-02-10T09:32:56Z", "message": "Add equality tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55d2f084f0c68e76f577a2e37f73b7d94d57a6ad", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/55d2f084f0c68e76f577a2e37f73b7d94d57a6ad", "committedDate": "2020-02-10T10:06:49Z", "message": "Add lessThan/greaterThan tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32771ff77d94c310a1a5bc1f4d4686f96ab2740e", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/32771ff77d94c310a1a5bc1f4d4686f96ab2740e", "committedDate": "2020-02-10T10:35:34Z", "message": "Refactor joiners for code reuse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c402747c84c9382ada1f9da9e22f61687c772d75", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/c402747c84c9382ada1f9da9e22f61687c772d75", "committedDate": "2020-02-10T11:37:23Z", "message": "Add tests for joiner merging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27ebd4a5ea1739bdfc76bf41f5f246d294018a5c", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/27ebd4a5ea1739bdfc76bf41f5f246d294018a5c", "committedDate": "2020-02-10T12:22:16Z", "message": "Verify fail-fasts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82aad3ce8fd21e3f6075c942a55fb72f31c9ad48", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/82aad3ce8fd21e3f6075c942a55fb72f31c9ad48", "committedDate": "2020-02-10T13:22:38Z", "message": "Finishing touches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTY5NzI4", "url": "https://github.com/kiegroup/optaplanner/pull/678#pullrequestreview-355969728", "createdAt": "2020-02-10T14:17:53Z", "commit": {"oid": "82aad3ce8fd21e3f6075c942a55fb72f31c9ad48"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDoxNzo1NFrOFnnptw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDoxNzo1NFrOFnnptw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA4ODQzOQ==", "bodyText": "Code style: I think that * imports are generally less preferable. Is it intentional here or is it an accident caused by IDE?", "url": "https://github.com/kiegroup/optaplanner/pull/678#discussion_r377088439", "createdAt": "2020-02-10T14:17:54Z", "author": {"login": "rsynek"}, "path": "optaplanner-core/src/test/java/org/optaplanner/core/api/score/stream/JoinersTest.java", "diffHunk": "@@ -0,0 +1,349 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.core.api.score.stream;\n+\n+import java.math.BigDecimal;\n+import java.math.BigInteger;\n+import java.util.function.BiFunction;\n+import java.util.function.Function;\n+\n+import org.junit.Test;\n+import org.optaplanner.core.api.function.QuadFunction;\n+import org.optaplanner.core.api.function.TriFunction;\n+import org.optaplanner.core.impl.score.stream.bi.AbstractBiJoiner;\n+import org.optaplanner.core.impl.score.stream.penta.AbstractPentaJoiner;\n+import org.optaplanner.core.impl.score.stream.quad.AbstractQuadJoiner;\n+import org.optaplanner.core.impl.score.stream.tri.AbstractTriJoiner;\n+\n+import static java.math.BigInteger.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82aad3ce8fd21e3f6075c942a55fb72f31c9ad48"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTcwMDY2", "url": "https://github.com/kiegroup/optaplanner/pull/678#pullrequestreview-355970066", "createdAt": "2020-02-10T14:18:20Z", "commit": {"oid": "82aad3ce8fd21e3f6075c942a55fb72f31c9ad48"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTc1NDgx", "url": "https://github.com/kiegroup/optaplanner/pull/678#pullrequestreview-355975481", "createdAt": "2020-02-10T14:25:10Z", "commit": {"oid": "82aad3ce8fd21e3f6075c942a55fb72f31c9ad48"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDoyNToxMFrOFnn7Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDoyNToxMFrOFnn7Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA5MjkxNQ==", "bodyText": "This presumes that that we'll never do this:\nBi<A,B>.join(Bi<C,D>)\nI don't want to close off that opportunity.\n-1 to abstract the Right generatic type here...", "url": "https://github.com/kiegroup/optaplanner/pull/678#discussion_r377092915", "createdAt": "2020-02-10T14:25:10Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/common/AbstractJoiner.java", "diffHunk": "@@ -16,8 +16,30 @@\n \n package org.optaplanner.core.impl.score.stream.common;\n \n-public abstract class AbstractJoiner {\n+import java.util.Arrays;\n+import java.util.function.Function;\n+import java.util.stream.IntStream;\n+\n+public abstract class AbstractJoiner<Right> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82aad3ce8fd21e3f6075c942a55fb72f31c9ad48"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTc2NjU1", "url": "https://github.com/kiegroup/optaplanner/pull/678#pullrequestreview-355976655", "createdAt": "2020-02-10T14:26:40Z", "commit": {"oid": "82aad3ce8fd21e3f6075c942a55fb72f31c9ad48"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDoyNjo0MVrOFnn-pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDoyNjo0MVrOFnn-pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA5Mzc5OA==", "bodyText": "You can probably use f::apply (one less wrapper lambda)", "url": "https://github.com/kiegroup/optaplanner/pull/678#discussion_r377093798", "createdAt": "2020-02-10T14:26:41Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/bi/AbstractBiJoiner.java", "diffHunk": "@@ -75,11 +77,14 @@ public boolean matches(A a, B b) {\n \n     public abstract Function<A, Object> getLeftMapping(int index);\n \n-    public abstract Function<A, Object[]> getLeftCombinedMapping();\n-\n-    public abstract Function<B, Object> getRightMapping(int index);\n-\n-    public abstract Function<B, Object[]> getRightCombinedMapping();\n+    public Function<A, Object[]> getLeftCombinedMapping() {\n+        Function<A, Object>[] mappings = IntStream.range(0, getJoinerTypes().length)\n+                .mapToObj(this::getLeftMapping)\n+                .toArray(Function[]::new);\n+        return (A a) -> Arrays.stream(mappings)\n+                .map(f -> f.apply(a))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82aad3ce8fd21e3f6075c942a55fb72f31c9ad48"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee78cd43bfc3ecfb93ace8ab1de9ee5bd5e76019", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/ee78cd43bfc3ecfb93ace8ab1de9ee5bd5e76019", "committedDate": "2020-02-10T14:58:52Z", "message": "Revert \"Refactor joiners for code reuse\"\n\nThis reverts commit 32771ff7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16875537c2583b1d8d1ba532483a0cc9b5154f71", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/16875537c2583b1d8d1ba532483a0cc9b5154f71", "committedDate": "2020-02-10T15:04:40Z", "message": "Address code review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5fd5e93ec4da9885d65319428798d1e95d2b1df", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e5fd5e93ec4da9885d65319428798d1e95d2b1df", "committedDate": "2020-02-10T16:03:38Z", "message": "One last change"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3076, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}