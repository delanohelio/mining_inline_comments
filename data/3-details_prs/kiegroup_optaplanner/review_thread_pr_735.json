{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTM0NDg0", "number": 735, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToxODozMFrODvg7UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzoyODozOVrODvj7Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTQ5MTM2OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/common/AbstractConstraint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToxODozMFrOGB-0kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToxODozMFrOGB-0kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMTAyNg==", "bodyText": "Extra \"be\" in the sentence.", "url": "https://github.com/kiegroup/optaplanner/pull/735#discussion_r404731026", "createdAt": "2020-04-07T11:18:30Z", "author": {"login": "yurloc"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/common/AbstractConstraint.java", "diffHunk": "@@ -32,17 +32,31 @@\n     protected final String constraintName;\n     private final Function<Solution_, Score<?>> constraintWeightExtractor;\n     protected final ScoreImpactType scoreImpactType;\n+    private final boolean isConstraintWeightConfigurable;\n \n     protected AbstractConstraint(ConstraintFactory constraintFactory, String constraintPackage, String constraintName,\n-            Function<Solution_, Score<?>> constraintWeightExtractor, ScoreImpactType scoreImpactType) {\n+            Function<Solution_, Score<?>> constraintWeightExtractor, ScoreImpactType scoreImpactType,\n+            boolean isConstraintWeightConfigurable) {\n         this.constraintFactory = constraintFactory;\n         this.constraintPackage = constraintPackage;\n         this.constraintName = constraintName;\n         this.constraintWeightExtractor = constraintWeightExtractor;\n         this.scoreImpactType = scoreImpactType;\n+        this.isConstraintWeightConfigurable = isConstraintWeightConfigurable;\n     }\n \n-    public Score<?> extractConstraintWeight(Solution_ workingSolution) {\n+    public final Score<?> extractConstraintWeight(Solution_ workingSolution) {\n+        if (isConstraintWeightConfigurable && workingSolution == null) {\n+            /*\n+             * In constraint verifier API, we allow for testing constraint providers without having a planning solution.\n+             * However, constraint weights may be configurable and in that case the solution is be required to read the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e450b0f3915e1222fa5da9b35d71e49a1b752fc5"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTk4MjU0OnYy", "diffSide": "RIGHT", "path": "optaplanner-examples/src/test/java/org/optaplanner/examples/nqueens/solver/score/NQueensConstraintProviderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzoyODozOVrOGCDi5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzoyODozOVrOGCDi5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwODQyMQ==", "bodyText": "(soft) 0) do we need the prefix \"constraitnProvider\"? It in the class ...ConstraintProviderTest\n\nWhat method are we testing? Answer: \"given\". I 'd start with that.\nI am not a fan of having the word \"test\" in methods that already have @test annotation.\nToday I understand why this is an \"integration\" test. Because it does more integration than the other unit tests that just test one constraint. In 6 months from now I'll have forgotten that. Can we naming it something like \"multipleConstraints\"?\n\nTherefore, these method name suggestions for these 2 tests:\ngivenSolutionMultipleConstraints\ngivenFactsMultipleConstraints", "url": "https://github.com/kiegroup/optaplanner/pull/735#discussion_r404808421", "createdAt": "2020-04-07T13:28:39Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-examples/src/test/java/org/optaplanner/examples/nqueens/solver/score/NQueensConstraintProviderTest.java", "diffHunk": "@@ -129,9 +129,20 @@ private static NQueens readSolution(String resource) throws IOException {\n     }\n \n     @Test\n-    public void constraintProviderIntegrationTest() throws IOException {\n+    public void constraintProviderSolutionBasedIntegrationTest() throws IOException {\n         constraintVerifier.verifyThat(constraintProvider)\n                 .given(readSolution(\"256queensScore-30.xml\"))\n                 .scores(SimpleScore.of(-30));\n     }\n+\n+    @Test\n+    public void constraintProviderFactBasedIntegrationTest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bf4d1b7cac8691253dea204691434a7e611bd59"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4475, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}