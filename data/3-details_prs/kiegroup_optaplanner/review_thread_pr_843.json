{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNjI0NjYz", "number": 843, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo1ODo1OVrOERDwlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo1ODo1OVrOERDwlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzIyODM5OnYy", "diffSide": "RIGHT", "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo1ODo1OVrOG1jvoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDowMToyNVrOG1j2Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxMzM0NA==", "bodyText": "We do indeed need to use the Thread.currentThread().getContextClassLoader() in quarkus (Stuart Douglas did a simiar change a few months ago for the quarkus extension). Great that you've find the fix.\nI'd rather not change the default ScoreDirectorFactoryConfig logic for that - it can have side effects in other enviromnents, but instead we need to make sure that quarkus extension passes it's classloader.", "url": "https://github.com/kiegroup/optaplanner/pull/843#discussion_r458813344", "createdAt": "2020-07-22T13:58:59Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig.java", "diffHunk": "@@ -421,7 +421,8 @@ public ScoreDirectorFactoryConfig withAssertionScoreDirectorFactory(\n             KieResources kieResources = kieServices.getResources();\n             KieFileSystem kieFileSystem = kieServices.newKieFileSystem();\n             if (!ConfigUtils.isEmptyCollection(scoreDrlList)) {\n-                ClassLoader actualClassLoader = (classLoader != null) ? classLoader : getClass().getClassLoader();\n+                ClassLoader actualClassLoader =\n+                        (classLoader != null) ? classLoader : Thread.currentThread().getContextClassLoader();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20c8474c04a7bec32e6d381b9cdfad75f29ace03"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxNTA1OA==", "bodyText": "@Christopher-Chianelli Can you try making this change in OptaPlannerBeanProvider instead?\nThe SolverFactory.create() method called there, also accept a ClassLoader as 2th parameter. The other create calls reuse that SolverFactory instance.", "url": "https://github.com/kiegroup/optaplanner/pull/843#discussion_r458815058", "createdAt": "2020-07-22T14:01:25Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig.java", "diffHunk": "@@ -421,7 +421,8 @@ public ScoreDirectorFactoryConfig withAssertionScoreDirectorFactory(\n             KieResources kieResources = kieServices.getResources();\n             KieFileSystem kieFileSystem = kieServices.newKieFileSystem();\n             if (!ConfigUtils.isEmptyCollection(scoreDrlList)) {\n-                ClassLoader actualClassLoader = (classLoader != null) ? classLoader : getClass().getClassLoader();\n+                ClassLoader actualClassLoader =\n+                        (classLoader != null) ? classLoader : Thread.currentThread().getContextClassLoader();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxMzM0NA=="}, "originalCommit": {"oid": "20c8474c04a7bec32e6d381b9cdfad75f29ace03"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4363, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}