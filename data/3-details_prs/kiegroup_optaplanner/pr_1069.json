{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0OTgxNzk1", "number": 1069, "title": "PLANNER-2268 Improve CS performance of Machine Reassignment", "bodyText": "", "createdAt": "2020-12-09T07:48:13Z", "url": "https://github.com/kiegroup/optaplanner/pull/1069", "merged": true, "mergeCommit": {"oid": "ca6c4ae91a0cf1d2c474e2feb2d1b71506737406"}, "closed": true, "closedAt": "2020-12-09T09:15:10Z", "author": {"login": "triceo"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkZ4YRgH2gAyNTM0OTgxNzk1OmZjNjg2M2Q4YTI4OTY1NWMwMzU0Mzc0YTQ4NTRlMWZmMjk0NDMwNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkbHexgFqTU0Nzk3NzUyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fc6863d8a289655c0354374a4854e1ff29443058", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/fc6863d8a289655c0354374a4854e1ff29443058", "committedDate": "2020-12-09T07:47:43Z", "message": "PLANNER-2268 Improve CS performance of Machine Reassignment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTE0MzA5", "url": "https://github.com/kiegroup/optaplanner/pull/1069#pullrequestreview-547914309", "createdAt": "2020-12-09T07:49:27Z", "commit": {"oid": "fc6863d8a289655c0354374a4854e1ff29443058"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0OToyN1rOICGzAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0OToyN1rOICGzAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3OTQyNw==", "bodyText": "This is the important bit.", "url": "https://github.com/kiegroup/optaplanner/pull/1069#discussion_r539079427", "createdAt": "2020-12-09T07:49:27Z", "author": {"login": "triceo"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/machinereassignment/optional/score/MachineReassignmentConstraintProvider.java", "diffHunk": "@@ -91,10 +89,9 @@ protected Constraint serviceConflict(ConstraintFactory factory) {\n      * Spread: Processes of the same service must be serviceLocationSpread out across locations.\n      */\n     protected Constraint serviceLocationSpread(ConstraintFactory factory) {\n-        return factory.from(MrService.class)\n-                .join(MrProcessAssignment.class, equal(Function.identity(), MrProcessAssignment::getService))\n-                .groupBy((service, processAssignment) -> service,\n-                        ConstraintCollectors.countDistinct((service, processAssignment) -> processAssignment.getLocation()))\n+        return factory.from(MrProcessAssignment.class)\n+                .groupBy(processAssignment -> processAssignment.getService(),\n+                        ConstraintCollectors.countDistinct(processAssignment -> processAssignment.getLocation()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6863d8a289655c0354374a4854e1ff29443058"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTUwMzU1", "url": "https://github.com/kiegroup/optaplanner/pull/1069#pullrequestreview-547950355", "createdAt": "2020-12-09T08:39:58Z", "commit": {"oid": "fc6863d8a289655c0354374a4854e1ff29443058"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODozOTo1OFrOICItkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODozOTo1OFrOICItkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTExMDgwMg==", "bodyText": "Why using penalize instead of penalizeLong if the score is HardSoftLongScore ?", "url": "https://github.com/kiegroup/optaplanner/pull/1069#discussion_r539110802", "createdAt": "2020-12-09T08:39:58Z", "author": {"login": "rsynek"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/machinereassignment/optional/score/MachineReassignmentConstraintProvider.java", "diffHunk": "@@ -189,8 +183,7 @@ protected Constraint processMoveCost(ConstraintFactory factory) {\n                 .filter(processAssignment -> processAssignment.isMoved() && processAssignment.getProcessMoveCost() > 0)\n                 .join(MrGlobalPenaltyInfo.class,\n                         Joiners.filtering((processAssignment, penalty) -> penalty.getProcessMoveCostWeight() > 0))\n-                .penalizeLong(MrConstraints.PROCESS_MOVE_COST,\n-                        HardSoftLongScore.ONE_SOFT,\n+                .penalize(MrConstraints.PROCESS_MOVE_COST, HardSoftLongScore.ONE_SOFT,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6863d8a289655c0354374a4854e1ff29443058"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTc3NTIz", "url": "https://github.com/kiegroup/optaplanner/pull/1069#pullrequestreview-547977523", "createdAt": "2020-12-09T09:14:07Z", "commit": {"oid": "fc6863d8a289655c0354374a4854e1ff29443058"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3160, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}