{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODA1MzAx", "number": 681, "title": "[PLANNER-1851] Add MOXy for JAXB JSON binding in optaplanner-persistence-jaxb", "bodyText": "Merge with: kiegroup/droolsjbpm-build-bootstrap#1185\nJira: https://issues.redhat.com/browse/PLANNER-1851\n\nAdds the MOXy JAXB provider dependency for JSON marshalling support.\nAdds JSON score marshalling tests", "createdAt": "2020-02-11T18:09:32Z", "url": "https://github.com/kiegroup/optaplanner/pull/681", "merged": true, "mergeCommit": {"oid": "6332c54ad2a070f5af45fcaf4b93fb7b6f4c3b31"}, "closed": true, "closedAt": "2020-03-09T13:20:51Z", "author": {"login": "cuijulian"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDV7SQgFqTM1Njg4NTk4MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcL9lOVgFqTM3MTE1MzI1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODg1OTgw", "url": "https://github.com/kiegroup/optaplanner/pull/681#pullrequestreview-356885980", "createdAt": "2020-02-11T18:20:37Z", "commit": {"oid": "8fd328372ef0b798919c41877546a4548e3fd20b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxODoyMDozN1rOFoT3yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxODoyMDozN1rOFoT3yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgxMjkzOQ==", "bodyText": "I do not understand the need for this. We're a JEE company, we have our own JSON/JAXB stuff. :-)\nSee RESTEasy Jackson 2 Provider, which should also come with Quarkus by default.", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r377812939", "createdAt": "2020-02-11T18:20:37Z", "author": {"login": "triceo"}, "path": "optaplanner-persistence/optaplanner-persistence-jaxb/pom.xml", "diffHunk": "@@ -63,8 +63,21 @@\n       <artifactId>jaxb-impl</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>javax.activation</groupId>\n-      <artifactId>activation</artifactId>\n+      <groupId>jakarta.activation</groupId>\n+      <artifactId>jakarta.activation-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>jakarta.json</groupId>\n+      <artifactId>jakarta.json-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.glassfish</groupId>\n+      <artifactId>jakarta.json</artifactId>\n+    </dependency>\n+    <!-- MOXy needed for JSON -->\n+    <dependency>\n+      <groupId>org.eclipse.persistence</groupId>\n+      <artifactId>org.eclipse.persistence.moxy</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fd328372ef0b798919c41877546a4548e3fd20b"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fd328372ef0b798919c41877546a4548e3fd20b", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/8fd328372ef0b798919c41877546a4548e3fd20b", "committedDate": "2020-02-11T15:51:11Z", "message": "Add JAXB JSON marshalling tests"}, "afterCommit": {"oid": "d2db6930d778a336dce0931fab3f6ae9db21ce30", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/d2db6930d778a336dce0931fab3f6ae9db21ce30", "committedDate": "2020-02-11T19:36:15Z", "message": "Add JAXB JSON marshalling tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzUyNTYz", "url": "https://github.com/kiegroup/optaplanner/pull/681#pullrequestreview-358352563", "createdAt": "2020-02-13T16:15:06Z", "commit": {"oid": "d2db6930d778a336dce0931fab3f6ae9db21ce30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxNTowNlrOFpaH7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxNTowNlrOFpaH7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2Mzk0OA==", "bodyText": "Can we make these new dependencies test dependencies?\nIn fact, some of the old dependencies should probably be test dependencies.\nWe want to provide XmlAdaptors for score, implemented against the JAXB API.\nWe don't want to choose a JAXB implementation for the users, only for our testing.", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r378963948", "createdAt": "2020-02-13T16:15:06Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-persistence/optaplanner-persistence-jaxb/pom.xml", "diffHunk": "@@ -63,8 +63,17 @@\n       <artifactId>jaxb-impl</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>javax.activation</groupId>\n-      <artifactId>activation</artifactId>\n+      <groupId>jakarta.activation</groupId>\n+      <artifactId>jakarta.activation-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.glassfish</groupId>\n+      <artifactId>jakarta.json</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2db6930d778a336dce0931fab3f6ae9db21ce30"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzU0OTA4", "url": "https://github.com/kiegroup/optaplanner/pull/681#pullrequestreview-358354908", "createdAt": "2020-02-13T16:17:57Z", "commit": {"oid": "d2db6930d778a336dce0931fab3f6ae9db21ce30"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2db6930d778a336dce0931fab3f6ae9db21ce30", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/d2db6930d778a336dce0931fab3f6ae9db21ce30", "committedDate": "2020-02-11T19:36:15Z", "message": "Add JAXB JSON marshalling tests"}, "afterCommit": {"oid": "3342458f435b17df1596a5598865a7d3c4e3e236", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/3342458f435b17df1596a5598865a7d3c4e3e236", "committedDate": "2020-02-13T17:18:31Z", "message": "Add JAXB JSON marshalling tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4ODk0MzMz", "url": "https://github.com/kiegroup/optaplanner/pull/681#pullrequestreview-358894333", "createdAt": "2020-02-14T12:00:23Z", "commit": {"oid": "3342458f435b17df1596a5598865a7d3c4e3e236"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjowMDoyM1rOFp0bSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjowMDoyM1rOFp0bSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NDg5MA==", "bodyText": "This is dangerous, especially because it doesn't unset it.\nThe order in which the unit tests are run can break other unit tests that do XML checking.", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r379394890", "createdAt": "2020-02-14T12:00:23Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/json/AbstractScoreJaxbJsonAdapterTest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jaxb.api.score.json;\n+\n+import java.io.Serializable;\n+import java.io.StringReader;\n+import java.io.StringWriter;\n+\n+import javax.xml.bind.JAXBContext;\n+import javax.xml.bind.JAXBException;\n+import javax.xml.bind.Marshaller;\n+import javax.xml.bind.Unmarshaller;\n+\n+import org.eclipse.persistence.jaxb.MarshallerProperties;\n+import org.eclipse.persistence.jaxb.UnmarshallerProperties;\n+import org.optaplanner.core.api.score.Score;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+public abstract class AbstractScoreJaxbJsonAdapterTest {\n+\n+    // ************************************************************************\n+    // Helper methods\n+    // ************************************************************************\n+\n+    protected <S extends Score, W extends TestScoreWrapper<S>> void assertSerializeAndDeserialize(S expectedScore, W input) {\n+        System.setProperty(\"javax.xml.bind.context.factory\", \"org.eclipse.persistence.jaxb.JAXBContextFactory\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3342458f435b17df1596a5598865a7d3c4e3e236"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4ODk1Nzky", "url": "https://github.com/kiegroup/optaplanner/pull/681#pullrequestreview-358895792", "createdAt": "2020-02-14T12:03:26Z", "commit": {"oid": "3342458f435b17df1596a5598865a7d3c4e3e236"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjowMzoyN1rOFp0fjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjowMzoyN1rOFp0fjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTk4MQ==", "bodyText": "The other test, SimpleScoreXMLJsonAdapterTest is called like that because it is SimpleScoreXMLJsonAdapter + Test.\nThis json stuff, is also a test for the SimpleScoreXMLJsonAdapter, so it too, can go into the SimpleScoreXMLJsonAdapterTest... (yes, sounds weird). And it can reuse the wrapper.", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r379395981", "createdAt": "2020-02-14T12:03:27Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/json/buildin/bendablebigdecimal/BendableBigDecimalScoreJaxbJsonAdapterTest.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jaxb.api.score.json.buildin.bendablebigdecimal;\n+\n+import java.math.BigDecimal;\n+\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n+\n+import org.junit.Test;\n+import org.optaplanner.core.api.score.buildin.bendablebigdecimal.BendableBigDecimalScore;\n+import org.optaplanner.persistence.jaxb.api.score.buildin.bendablebigdecimal.BendableBigDecimalScoreJaxbXmlAdapter;\n+import org.optaplanner.persistence.jaxb.api.score.json.AbstractScoreJaxbJsonAdapterTest;\n+\n+public class BendableBigDecimalScoreJaxbJsonAdapterTest extends AbstractScoreJaxbJsonAdapterTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3342458f435b17df1596a5598865a7d3c4e3e236"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3342458f435b17df1596a5598865a7d3c4e3e236", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/3342458f435b17df1596a5598865a7d3c4e3e236", "committedDate": "2020-02-13T17:18:31Z", "message": "Add JAXB JSON marshalling tests"}, "afterCommit": {"oid": "7f374bccae63233247c3ff81853b007be03df11f", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/7f374bccae63233247c3ff81853b007be03df11f", "committedDate": "2020-02-14T16:39:35Z", "message": "Add JAXB JSON marshalling tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODk2NTI0", "url": "https://github.com/kiegroup/optaplanner/pull/681#pullrequestreview-360896524", "createdAt": "2020-02-19T07:46:26Z", "commit": {"oid": "7f374bccae63233247c3ff81853b007be03df11f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNzo0NjoyNlrOFrd3Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNzo0NjoyNlrOFrd3Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEyMjMzNQ==", "bodyText": "By default, a test's name should be  + \"Test\". By keeping this predictable it's easier to:\n\nFind the test for FooBar (it will be called FooBarTest)\nAvoid that there are 2 test classes for FooBar, which helps to avoid that there are duplicate tests (maintenance issues, less is more, if the coverage is the same)\nThis test tests BendableScoreJaxbXmlAdapter, so it's name must remain BendableScoreJaxbXmlAdapterTest", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r381122335", "createdAt": "2020-02-19T07:46:26Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/buildin/bendable/BendableScoreJaxbXmlJsonAdapterTest.java", "diffHunk": "@@ -21,17 +21,30 @@\n \n import org.junit.Test;\n import org.optaplanner.core.api.score.buildin.bendable.BendableScore;\n-import org.optaplanner.persistence.jaxb.api.score.AbstractScoreJaxbXmlAdapterTest;\n+import org.optaplanner.persistence.jaxb.api.score.AbstractScoreJaxbXmlJsonAdapterTest;\n \n-public class BendableScoreJaxbXmlAdapterTest extends AbstractScoreJaxbXmlAdapterTest {\n+public class BendableScoreJaxbXmlJsonAdapterTest extends AbstractScoreJaxbXmlJsonAdapterTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f374bccae63233247c3ff81853b007be03df11f"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODk4MTI4", "url": "https://github.com/kiegroup/optaplanner/pull/681#pullrequestreview-360898128", "createdAt": "2020-02-19T07:50:06Z", "commit": {"oid": "7f374bccae63233247c3ff81853b007be03df11f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNzo1MDowN1rOFrd8PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNzo1MDowN1rOFrd8PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEyMzY0NQ==", "bodyText": "By splitting up serializeAndDeserialize() into serializeAndDeserializeXML() and serializeAndDeserializeJson() for every Test class, we're create a lot of duplication, for all of the 10+ score classes. Note how both methods are indentical except for the assertSerializeAndDeserialize*() call.\nLet's be practical. Let's keep it as 1 method and keep using only assertSerializeAndDeserialize(), but let's have that - in the superclass - call assertSerializeAndDeserializeXML() and assertSerializeAndDeserializeJson().\nThat will heavily reduce maintenance once we mess with scores again (like the time I added initScore, all these tests had to be refactored).", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r381123645", "createdAt": "2020-02-19T07:50:07Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/buildin/bendable/BendableScoreJaxbXmlJsonAdapterTest.java", "diffHunk": "@@ -21,17 +21,30 @@\n \n import org.junit.Test;\n import org.optaplanner.core.api.score.buildin.bendable.BendableScore;\n-import org.optaplanner.persistence.jaxb.api.score.AbstractScoreJaxbXmlAdapterTest;\n+import org.optaplanner.persistence.jaxb.api.score.AbstractScoreJaxbXmlJsonAdapterTest;\n \n-public class BendableScoreJaxbXmlAdapterTest extends AbstractScoreJaxbXmlAdapterTest {\n+public class BendableScoreJaxbXmlJsonAdapterTest extends AbstractScoreJaxbXmlJsonAdapterTest {\n \n     @Test\n-    public void serializeAndDeserialize() {\n-        assertSerializeAndDeserialize(null, new TestBendableScoreWrapper(null));\n+    public void serializeAndDeserializeXML() {\n+        assertSerializeAndDeserializeXML(null, new TestBendableScoreWrapper(null));\n+\n         BendableScore score = BendableScore.of(new int[]{1000, 200}, new int[]{34});\n-        assertSerializeAndDeserialize(score, new TestBendableScoreWrapper(score));\n+        assertSerializeAndDeserializeXML(score, new TestBendableScoreWrapper(score));\n+\n+        score = BendableScore.ofUninitialized(-7, new int[]{1000, 200}, new int[]{34});\n+        assertSerializeAndDeserializeXML(score, new TestBendableScoreWrapper(score));\n+    }\n+\n+    @Test\n+    public void serializeAndDeserializeJson() {\n+        assertSerializeAndDeserializeJson(null, new TestBendableScoreWrapper(null));\n+\n+        BendableScore score = BendableScore.of(new int[]{1000, 200}, new int[]{34});\n+        assertSerializeAndDeserializeJson(score, new TestBendableScoreWrapper(score));\n+\n         score = BendableScore.ofUninitialized(-7, new int[]{1000, 200}, new int[]{34});\n-        assertSerializeAndDeserialize(score, new TestBendableScoreWrapper(score));\n+        assertSerializeAndDeserializeJson(score, new TestBendableScoreWrapper(score));\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f374bccae63233247c3ff81853b007be03df11f"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f374bccae63233247c3ff81853b007be03df11f", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/7f374bccae63233247c3ff81853b007be03df11f", "committedDate": "2020-02-14T16:39:35Z", "message": "Add JAXB JSON marshalling tests"}, "afterCommit": {"oid": "e9c505e5fa3f99a21435e3fe8610b18e548f647c", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/e9c505e5fa3f99a21435e3fe8610b18e548f647c", "committedDate": "2020-02-19T14:58:52Z", "message": "Add JAXB JSON marshalling tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1d2670df2c45b389387a98b35bf57344c3b92c0", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/b1d2670df2c45b389387a98b35bf57344c3b92c0", "committedDate": "2020-03-02T15:20:47Z", "message": "Add MOXy dependency for JAXB JSON support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "303ec2ecfa1fd9b3d8f672e8a4676d1034c4e8b4", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/303ec2ecfa1fd9b3d8f672e8a4676d1034c4e8b4", "committedDate": "2020-03-02T19:31:15Z", "message": "Add JAXB JSON marshalling tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9c505e5fa3f99a21435e3fe8610b18e548f647c", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/e9c505e5fa3f99a21435e3fe8610b18e548f647c", "committedDate": "2020-02-19T14:58:52Z", "message": "Add JAXB JSON marshalling tests"}, "afterCommit": {"oid": "303ec2ecfa1fd9b3d8f672e8a4676d1034c4e8b4", "author": {"user": null}, "url": "https://github.com/kiegroup/optaplanner/commit/303ec2ecfa1fd9b3d8f672e8a4676d1034c4e8b4", "committedDate": "2020-03-02T19:31:15Z", "message": "Add JAXB JSON marshalling tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMTUzMjU5", "url": "https://github.com/kiegroup/optaplanner/pull/681#pullrequestreview-371153259", "createdAt": "2020-03-09T13:04:07Z", "commit": {"oid": "303ec2ecfa1fd9b3d8f672e8a4676d1034c4e8b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3082, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}