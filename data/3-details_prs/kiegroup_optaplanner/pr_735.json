{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTM0NDg0", "number": 735, "title": "PLANNER-1934 Set custom constraint weights only for configurable cons\u2026", "bodyText": "\u2026traints", "createdAt": "2020-04-07T08:59:47Z", "url": "https://github.com/kiegroup/optaplanner/pull/735", "merged": true, "mergeCommit": {"oid": "48c7c452df7648eadba53dafd177b0ce17c2f282"}, "closed": true, "closedAt": "2020-04-07T16:47:39Z", "author": {"login": "triceo"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVP2iLABqjMyMDg5OTM2MzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVWDSwAH2gAyNDAwMTM0NDg0OmU3YjlhMDg4OGUwMzkwN2QwYWUyYWVjMWVmYzQ2YjI1NGJkZGFkOWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6de862e461a255cde84b52aabbac9a613735f2b", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e6de862e461a255cde84b52aabbac9a613735f2b", "committedDate": "2020-04-07T08:59:07Z", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints"}, "afterCommit": {"oid": "ada32cd020a860a412809c3f883e3016dc286b79", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/ada32cd020a860a412809c3f883e3016dc286b79", "committedDate": "2020-04-07T09:26:20Z", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ada32cd020a860a412809c3f883e3016dc286b79", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/ada32cd020a860a412809c3f883e3016dc286b79", "committedDate": "2020-04-07T09:26:20Z", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints"}, "afterCommit": {"oid": "21d634935921c623b041919c3564de38d4804d7a", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/21d634935921c623b041919c3564de38d4804d7a", "committedDate": "2020-04-07T09:27:42Z", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e450b0f3915e1222fa5da9b35d71e49a1b752fc5", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e450b0f3915e1222fa5da9b35d71e49a1b752fc5", "committedDate": "2020-04-07T10:42:36Z", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21d634935921c623b041919c3564de38d4804d7a", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/21d634935921c623b041919c3564de38d4804d7a", "committedDate": "2020-04-07T09:27:42Z", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints"}, "afterCommit": {"oid": "e450b0f3915e1222fa5da9b35d71e49a1b752fc5", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e450b0f3915e1222fa5da9b35d71e49a1b752fc5", "committedDate": "2020-04-07T10:42:36Z", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MDE4NzAz", "url": "https://github.com/kiegroup/optaplanner/pull/735#pullrequestreview-389018703", "createdAt": "2020-04-07T11:18:30Z", "commit": {"oid": "e450b0f3915e1222fa5da9b35d71e49a1b752fc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToxODozMFrOGB-0kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToxODozMFrOGB-0kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMTAyNg==", "bodyText": "Extra \"be\" in the sentence.", "url": "https://github.com/kiegroup/optaplanner/pull/735#discussion_r404731026", "createdAt": "2020-04-07T11:18:30Z", "author": {"login": "yurloc"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/common/AbstractConstraint.java", "diffHunk": "@@ -32,17 +32,31 @@\n     protected final String constraintName;\n     private final Function<Solution_, Score<?>> constraintWeightExtractor;\n     protected final ScoreImpactType scoreImpactType;\n+    private final boolean isConstraintWeightConfigurable;\n \n     protected AbstractConstraint(ConstraintFactory constraintFactory, String constraintPackage, String constraintName,\n-            Function<Solution_, Score<?>> constraintWeightExtractor, ScoreImpactType scoreImpactType) {\n+            Function<Solution_, Score<?>> constraintWeightExtractor, ScoreImpactType scoreImpactType,\n+            boolean isConstraintWeightConfigurable) {\n         this.constraintFactory = constraintFactory;\n         this.constraintPackage = constraintPackage;\n         this.constraintName = constraintName;\n         this.constraintWeightExtractor = constraintWeightExtractor;\n         this.scoreImpactType = scoreImpactType;\n+        this.isConstraintWeightConfigurable = isConstraintWeightConfigurable;\n     }\n \n-    public Score<?> extractConstraintWeight(Solution_ workingSolution) {\n+    public final Score<?> extractConstraintWeight(Solution_ workingSolution) {\n+        if (isConstraintWeightConfigurable && workingSolution == null) {\n+            /*\n+             * In constraint verifier API, we allow for testing constraint providers without having a planning solution.\n+             * However, constraint weights may be configurable and in that case the solution is be required to read the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e450b0f3915e1222fa5da9b35d71e49a1b752fc5"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MDE5MDU4", "url": "https://github.com/kiegroup/optaplanner/pull/735#pullrequestreview-389019058", "createdAt": "2020-04-07T11:19:04Z", "commit": {"oid": "e450b0f3915e1222fa5da9b35d71e49a1b752fc5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bf4d1b7cac8691253dea204691434a7e611bd59", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/2bf4d1b7cac8691253dea204691434a7e611bd59", "committedDate": "2020-04-07T11:32:13Z", "message": "Fix a comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MTE1MDUz", "url": "https://github.com/kiegroup/optaplanner/pull/735#pullrequestreview-389115053", "createdAt": "2020-04-07T13:28:39Z", "commit": {"oid": "2bf4d1b7cac8691253dea204691434a7e611bd59"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzoyODozOVrOGCDi5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzoyODozOVrOGCDi5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwODQyMQ==", "bodyText": "(soft) 0) do we need the prefix \"constraitnProvider\"? It in the class ...ConstraintProviderTest\n\nWhat method are we testing? Answer: \"given\". I 'd start with that.\nI am not a fan of having the word \"test\" in methods that already have @test annotation.\nToday I understand why this is an \"integration\" test. Because it does more integration than the other unit tests that just test one constraint. In 6 months from now I'll have forgotten that. Can we naming it something like \"multipleConstraints\"?\n\nTherefore, these method name suggestions for these 2 tests:\ngivenSolutionMultipleConstraints\ngivenFactsMultipleConstraints", "url": "https://github.com/kiegroup/optaplanner/pull/735#discussion_r404808421", "createdAt": "2020-04-07T13:28:39Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-examples/src/test/java/org/optaplanner/examples/nqueens/solver/score/NQueensConstraintProviderTest.java", "diffHunk": "@@ -129,9 +129,20 @@ private static NQueens readSolution(String resource) throws IOException {\n     }\n \n     @Test\n-    public void constraintProviderIntegrationTest() throws IOException {\n+    public void constraintProviderSolutionBasedIntegrationTest() throws IOException {\n         constraintVerifier.verifyThat(constraintProvider)\n                 .given(readSolution(\"256queensScore-30.xml\"))\n                 .scores(SimpleScore.of(-30));\n     }\n+\n+    @Test\n+    public void constraintProviderFactBasedIntegrationTest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bf4d1b7cac8691253dea204691434a7e611bd59"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MTE1MjQ4", "url": "https://github.com/kiegroup/optaplanner/pull/735#pullrequestreview-389115248", "createdAt": "2020-04-07T13:28:50Z", "commit": {"oid": "2bf4d1b7cac8691253dea204691434a7e611bd59"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7b9a0888e03907d0ae2aec1efc46b254bddad9a", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e7b9a0888e03907d0ae2aec1efc46b254bddad9a", "committedDate": "2020-04-07T16:40:00Z", "message": "Fix test names"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2919, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}