{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1ODc3OTEx", "number": 1010, "title": "KOGITO-3716 Allow automatic close of staging repo", "bodyText": "https://issues.redhat.com/browse/KOGITO-3716\nDependent PRs:\n\nkiegroup/kogito-pipelines#91\nkiegroup/kogito-runtimes#865\n#1010\nkiegroup/kogito-examples#435\nkiegroup/jenkins-pipeline-shared-libraries#114", "createdAt": "2020-11-05T08:15:16Z", "url": "https://github.com/kiegroup/optaplanner/pull/1010", "merged": true, "mergeCommit": {"oid": "02e37f76db756f91f9863cc6181d2585ab3ee9aa"}, "closed": true, "closedAt": "2020-12-07T08:00:23Z", "author": {"login": "radtriste"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZefnzAFqTUyNDA0NTc0NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdjwuMYgFqTU0NTg5NjQ4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MDQ1NzQ1", "url": "https://github.com/kiegroup/optaplanner/pull/1010#pullrequestreview-524045745", "createdAt": "2020-11-05T08:57:02Z", "commit": {"oid": "84279b0b9eb42887ee52dea1fc6191e09e03ac51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1NzowMlrOHt5Ukg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1NzowMlrOHt5Ukg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NzEyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \"--projects ${parentProjectName ?: directory}\"\n          \n          \n            \n                    cmd += \" --projects ${parentProjectName ?: directory}\"", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517887122", "createdAt": "2020-11-05T08:57:02Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -239,9 +250,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \"--projects ${parentProjectName ?: directory}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84279b0b9eb42887ee52dea1fc6191e09e03ac51"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MDY0MTQw", "url": "https://github.com/kiegroup/optaplanner/pull/1010#pullrequestreview-524064140", "createdAt": "2020-11-05T09:19:12Z", "commit": {"oid": "c835ed0cb55b66ba5b9a0ce94d3e098cf3c05381"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOToxOToxMlrOHt6K_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOToxOToxMlrOHt6K_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwMTA1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \" --projects ${parentProjectName ?: directory}\"\n          \n          \n            \n                    cmd += \" --projects :${parentProjectName ?: directory}\"", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517901055", "createdAt": "2020-11-05T09:19:12Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -239,9 +250,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \" --projects ${parentProjectName ?: directory}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c835ed0cb55b66ba5b9a0ce94d3e098cf3c05381"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MDkwMjcx", "url": "https://github.com/kiegroup/optaplanner/pull/1010#pullrequestreview-524090271", "createdAt": "2020-11-05T09:50:00Z", "commit": {"oid": "5cb59a092216c8cfc51e813293ad3ebcf68db2b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOTo1MDowMVrOHt7X0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOTo1MDowMVrOHt7X0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkyMDcyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \"--projects ${directory}\"\n          \n          \n            \n                    cmd += \" --projects :${parentProjectName ?: directory}\"", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517920720", "createdAt": "2020-11-05T09:50:01Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -239,9 +250,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \" --projects :${parentProjectName ?: directory}\"\n+        cmd += \" -DnexusUrl=${env.NEXUS_RELEASE_URL}\"\n+        cmd += \" -DserverId=${env.NEXUS_RELEASE_REPOSITORY_ID}\" \n+        cmd += \" -DrepositoryDirectory=${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        cmd += \" -DstagingProfileId=${env.NEXUS_STAGING_REPOSITORY_ID}\" \n+        cmd += \" -DstagingDescription=\\\"Kogito Runtimes ${getProjectVersion()}\\\"\"\n+        echo \"Run maven cmd $cmd\"\n+        runMaven(cmd, directory)\n+\n+        // Promote to build profile\n+        cmd = \"org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:promote -DbuildPromotionProfileId=${env.NEXUS_BUILD_PROMOTION_PROFILE_ID}\"\n+        cmd += \"--projects ${directory}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cb59a092216c8cfc51e813293ad3ebcf68db2b6"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MTM2NzYz", "url": "https://github.com/kiegroup/optaplanner/pull/1010#pullrequestreview-524136763", "createdAt": "2020-11-05T10:46:24Z", "commit": {"oid": "51943a64bc8a5e8acebc53991e8c0971aa86fc80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo0NjoyNFrOHt9j7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo0NjoyNFrOHt9j7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjU5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                mavenCleanInstall('optaplanner', params.SKIP_TESTS, [], extraArgs)\n          \n          \n            \n                                mavenCleanInstall('optaplanner', params.SKIP_TESTS)", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517956591", "createdAt": "2020-11-05T10:46:24Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -135,10 +150,6 @@ pipeline {\n         stage('Build optaplanner') {\n             steps {\n                 script {\n-                    String extraArgs = ''\n-                    if (params.MAVEN_DEPENDENCIES_REPOSITORY != '') {\n-                        extraArgs = \"-s ${env.GLOBAL_MAVEN_SETTINGS} -Denforcer.skip\"\n-                    }\n                     mavenCleanInstall('optaplanner', params.SKIP_TESTS, [], extraArgs)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51943a64bc8a5e8acebc53991e8c0971aa86fc80"}, "originalPosition": 53}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0327a205b00512f544ceb17fb21c9f9bbdedbb7", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e0327a205b00512f544ceb17fb21c9f9bbdedbb7", "committedDate": "2020-11-05T10:46:29Z", "message": "Update Jenkinsfile.deploy"}, "afterCommit": {"oid": "9051124b99f2ec3c733d78f813c9debf6e14d7ea", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/9051124b99f2ec3c733d78f813c9debf6e14d7ea", "committedDate": "2020-11-13T07:29:47Z", "message": "update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9051124b99f2ec3c733d78f813c9debf6e14d7ea", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/9051124b99f2ec3c733d78f813c9debf6e14d7ea", "committedDate": "2020-11-13T07:29:47Z", "message": "update"}, "afterCommit": {"oid": "cec51426352cefb71b570f0e32f8240235d85e02", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/cec51426352cefb71b570f0e32f8240235d85e02", "committedDate": "2020-11-13T08:25:37Z", "message": "update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e5023c8474912f5b720b43d5664082ed1da8fd5", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/6e5023c8474912f5b720b43d5664082ed1da8fd5", "committedDate": "2020-11-13T11:24:25Z", "message": "correction"}, "afterCommit": {"oid": "6fe7671158dcd376f09a40b1cfd1d2d6a2544bb8", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/6fe7671158dcd376f09a40b1cfd1d2d6a2544bb8", "committedDate": "2020-11-16T16:06:35Z", "message": "Use next gen libraries"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17fbd9b1ee66fff472aab0332d0727f225ac7d7c", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/17fbd9b1ee66fff472aab0332d0727f225ac7d7c", "committedDate": "2020-11-23T15:25:06Z", "message": "correction"}, "afterCommit": {"oid": "8f482353038d266471df08f4b8586e3967d3d558", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/8f482353038d266471df08f4b8586e3967d3d558", "committedDate": "2020-11-23T16:10:23Z", "message": "KOGITO-3716 Allow automatic close of staging repo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee0a806589f2922c8a8e1abe96f4a089e409dacd", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/ee0a806589f2922c8a8e1abe96f4a089e409dacd", "committedDate": "2020-11-26T14:02:06Z", "message": "updated promote"}, "afterCommit": {"oid": "93f3f4f5f24e1ff4badfd7d31744c652f12ed31b", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/93f3f4f5f24e1ff4badfd7d31744c652f12ed31b", "committedDate": "2020-11-26T14:02:47Z", "message": "KOGITO-3716 Allow automatic close of staging repo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93f3f4f5f24e1ff4badfd7d31744c652f12ed31b", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/93f3f4f5f24e1ff4badfd7d31744c652f12ed31b", "committedDate": "2020-11-26T14:02:47Z", "message": "KOGITO-3716 Allow automatic close of staging repo"}, "afterCommit": {"oid": "51055ff9058a0c48dff46cd14216156ec493c1ee", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/51055ff9058a0c48dff46cd14216156ec493c1ee", "committedDate": "2020-11-26T14:20:46Z", "message": "KOGITO-3716 Allow automatic close of staging repo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9827ce3cd34b6a248eb9442616705eba60b1033", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/e9827ce3cd34b6a248eb9442616705eba60b1033", "committedDate": "2020-11-30T08:35:21Z", "message": "update"}, "afterCommit": {"oid": "1f30d7cef1ec3b88bda562e8081e257c06ba740e", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/1f30d7cef1ec3b88bda562e8081e257c06ba740e", "committedDate": "2020-11-30T10:06:31Z", "message": "small update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTk4NzQ5", "url": "https://github.com/kiegroup/optaplanner/pull/1010#pullrequestreview-542598749", "createdAt": "2020-12-02T08:33:37Z", "commit": {"oid": "df750b271678df4ba4e01d18ef9da5bed35ccd21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwODozMzozN1rOH9PpgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwODozMzozN1rOH9PpgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk4MTU2OQ==", "bodyText": "Will be commented out once testing is finished", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r533981569", "createdAt": "2020-12-02T08:33:37Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -181,44 +160,42 @@ pipeline {\n             }\n             steps {\n                 script {\n-                    dir(employeeRosteringRepository) {\n-                        mavenCleanInstall(true)\n-                        uploadDistribution()\n-                    }\n+                    getMavenConfig().inDirectory(employeeRosteringRepository).skipTests(true).run('clean install')\n+                    uploadDistribution(employeeRosteringRepository)\n                 }\n             }\n         }\n \n-        stage('Update OptaPlanner website') {\n-            when {\n-                expression { return isRelease() }\n-            }\n-            steps {\n-                script {\n-                    final String websiteRepository = 'optaplanner-website'\n-                    String prLink = null\n-                    dir(\"$websiteRepository-bot\") {\n-                        String prBranchName = createWebsitePrBranch(websiteRepository)\n-\n-                        // Update versions in links on the website.\n-                        sh \"./build/update-versions.sh ${getProjectVersion()} ${getNextMinorSnapshotVersion(getProjectVersion())}\"\n-\n-                        // Update the XSDs. OptaPlanner must be cloned and build with the full profile before.\n-                        String optaplannerRoot = \"$WORKSPACE/optaplanner\"\n-                        sh \"cp $optaplannerRoot/optaplanner-core/target/classes/solver.xsd xsd/solver/solver-8.xsd\"\n-                        sh \"cp $optaplannerRoot/optaplanner-benchmark/target/classes/benchmark.xsd xsd/benchmark/benchmark-8.xsd\"\n-\n-                        // Add changed files, commit, open and merge PR\n-                        sh 'git add xsd/\\\\*.xsd _config/pom.yml'\n-                        prLink = commitAndCreatePR(\"Release OptaPlanner ${getProjectVersion()}\", prBranchName, 'master')\n-                    }\n-                    dir(websiteRepository) {\n-                        checkoutRepo(websiteRepository, 'master')\n-                        mergeAndPush(prLink, 'master')\n-                    }\n-                }\n-            }\n-        }\n+        // TODO set back before merging", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df750b271678df4ba4e01d18ef9da5bed35ccd21"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTk4OTEz", "url": "https://github.com/kiegroup/optaplanner/pull/1010#pullrequestreview-542598913", "createdAt": "2020-12-02T08:33:52Z", "commit": {"oid": "df750b271678df4ba4e01d18ef9da5bed35ccd21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwODozMzo1MlrOH9PqMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwODozMzo1MlrOH9PqMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk4MTc0NQ==", "bodyText": "Will be commented out once testing is finished", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r533981745", "createdAt": "2020-12-02T08:33:52Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -478,50 +444,32 @@ void installGithubCLI() {\n     \"\"\"\n }\n \n-void updateKogitoVersion(String newVersion) {\n-    maven.mvnSetVersionProperty('version.org.kie.kogito', newVersion)\n-}\n-\n-boolean isSpecificMavenConfig() {\n-    return params.MAVEN_DEPENDENCIES_REPOSITORY != ''\n-}\n-\n-void deployArtifacts() {\n-    def mvnCmd = 'clean deploy'\n-    if (params.MAVEN_DEPLOY_REPOSITORY) {\n-        mvnCmd += \" -DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n-    }\n-\n-    if (isSpecificMavenConfig()) {\n-        runMaven(mvnCmd, true)\n-    } else {\n-        maven.runMavenWithSubmarineSettings(mvnCmd, true)\n+void uploadDistribution(String directory) {\n+    dir(directory) {\n+        echo \"uploadDistribution for ${directory}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df750b271678df4ba4e01d18ef9da5bed35ccd21"}, "originalPosition": 248}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c066f17f8dd108f1f108c415847f0d19bc11ad73", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/c066f17f8dd108f1f108c415847f0d19bc11ad73", "committedDate": "2020-12-02T08:37:58Z", "message": "updated maven settings"}, "afterCommit": {"oid": "8e3d20ea690dad7823b6abe705da2b11407a42fb", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/8e3d20ea690dad7823b6abe705da2b11407a42fb", "committedDate": "2020-12-02T08:38:37Z", "message": "KOGITO-3716 Allow automatic close of staging repo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e3d20ea690dad7823b6abe705da2b11407a42fb", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/8e3d20ea690dad7823b6abe705da2b11407a42fb", "committedDate": "2020-12-02T08:38:37Z", "message": "KOGITO-3716 Allow automatic close of staging repo"}, "afterCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "committedDate": "2020-12-02T08:44:19Z", "message": "KOGITO-3716 Allow automatic close of staging repo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNzE3MDYy", "url": "https://github.com/kiegroup/optaplanner/pull/1010#pullrequestreview-542717062", "createdAt": "2020-12-02T10:53:36Z", "commit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDo1MzozNlrOH9VUvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxOTo0NVrOH9WSGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NDU1Ng==", "bodyText": "I am slightly in favor of the getMavenConfig (or getDefaultMavenConfig in this case?) as pointed here kiegroup/kogito-examples#435 (comment)", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534074556", "createdAt": "2020-12-02T10:53:36Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -61,6 +85,20 @@ pipeline {\n                         assert getProjectVersion() != ''\n                         assert getKogitoVersion() != ''\n                     }\n+\n+                    // Setup Maven config\n+                    // Create a default command with default config and which will be cloned for projects\n+                    MavenCommand defaultMvnCmd = new MavenCommand(this, ['-fae'])\n+                                                    .withSettingsXmlId(params.MAVEN_SETTINGS_CONFIG_FILE_ID)\n+                    if (params.MAVEN_DEPENDENCIES_REPOSITORY) {\n+                        defaultMvnCmd.withDependencyRepositoryInSettings('deps-repo', params.MAVEN_DEPENDENCIES_REPOSITORY)\n+                    }\n+\n+                    // Setup maven default commands\n+                    defaultOptaplannerMvnCmd = defaultMvnCmd.clone().inDirectory(optaplannerRepository).withProperty('full')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NTczNw==", "bodyText": "Thanks, I wanted to do some refactoring, including this change, after your PRs.", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534075737", "createdAt": "2020-12-02T10:55:23Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -79,10 +117,10 @@ pipeline {\n \n         stage('Clone repositories') {\n             steps {\n-                checkoutRepo('optaplanner', getBuildBranch())\n-                checkoutRepo('optaplanner-quickstarts', getQuickStartsBranch())\n-                checkoutRepo('optaweb-vehicle-routing', getBuildBranch())\n-                checkoutRepo('optaweb-employee-rostering', getBuildBranch())\n+                checkoutRepo(optaplannerRepository, getBuildBranch())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NDEwMA==", "bodyText": "The mavenCleanInstallOptaPlannerParents ran only specific modules (a parent pom.xml and BOM) the other projects depend upon to save time (a couple of seconds vs. ~5 minutes).\nI don't expect these two modules to be renamed; especially the BOM is a part of our API.", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534084100", "createdAt": "2020-12-02T11:09:13Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -122,30 +141,20 @@ pipeline {\n             }\n             steps {\n                 script {\n-                    mavenCleanInstallOptaPlannerParents('optaplanner')\n-                    dir('optaplanner') {\n-                        maven.mvnVersionsSet(getProjectVersion())\n-                        updateKogitoVersion(getKogitoVersion())\n-                    }\n-                    mavenCleanInstallOptaPlannerParents('optaplanner')\n-                    dir('optaweb-vehicle-routing') {\n-                        maven.mvnVersionsUpdateParentAndChildModules(getProjectVersion())\n-                    }\n-                    dir('optaweb-employee-rostering') {\n-                        maven.mvnVersionsUpdateParentAndChildModules(getProjectVersion())\n-                    }\n+                    maven.mvnVersionsSet(defaultOptaplannerMvnCmd, getProjectVersion())\n+                    maven.mvnSetVersionProperty(defaultOptaplannerMvnCmd, 'version.org.kie.kogito', getKogitoVersion())\n+                    defaultOptaplannerMvnCmd.clone().skipTests(true).withOptions(['-U']).run('clean install')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NjM1MA==", "bodyText": "The if-else can be replaced by a method, e.g. deployMavenArtifacts() that would take care of a single repository.", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534086350", "createdAt": "2020-12-02T11:13:00Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -196,9 +209,23 @@ pipeline {\n \n         stage('Deploy artifacts') {\n             steps {\n-                mavenDeploy('optaplanner', '-Dfull')\n-                mavenDeploy('optaweb-vehicle-routing', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n-                mavenDeploy('optaweb-employee-rostering', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n+                script {\n+                    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+                        // Normal deploy\n+                        runMavenDeploy(defaultOptaplannerMvnCmd)\n+                        runMavenDeploy(defaultOptawebVehicleRoutingMvnCmd)\n+                        runMavenDeploy(defaultOptawebEmployeeRosteringMvnCmd)\n+                    } else {\n+                        // Deploy locally and then to staging\n+                        runMavenDeployLocally(defaultOptaplannerMvnCmd, optaplannerRepository)\n+                        runMavenDeployLocally(defaultOptawebVehicleRoutingMvnCmd, vehicleRoutingRepository)\n+                        runMavenDeployLocally(defaultOptawebEmployeeRosteringMvnCmd, employeeRosteringRepository)\n+\n+                        runMavenStage(defaultOptaplannerMvnCmd, optaplannerRepository)\n+                        runMavenStage(defaultOptawebVehicleRoutingMvnCmd, vehicleRoutingRepository)\n+                        runMavenStage(defaultOptawebEmployeeRosteringMvnCmd, employeeRosteringRepository)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 222}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4Njc2Mg==", "bodyText": "Thank you!", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534086762", "createdAt": "2020-12-02T11:13:47Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 310}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NzYzNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd){\n          \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd) {", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534087637", "createdAt": "2020-12-02T11:15:15Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}\n+void runMavenDeploy(MavenCommand mvnCmd){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 311}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NzczMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if(params.MAVEN_DEPLOY_REPOSITORY){\n          \n          \n            \n                if(params.MAVEN_DEPLOY_REPOSITORY) {", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534087731", "createdAt": "2020-12-02T11:15:24Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}\n+void runMavenDeploy(MavenCommand mvnCmd){\n+    mvnCmd= mvnCmd.clone()\n+    \n+    if(params.MAVEN_DEPLOY_REPOSITORY){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 314}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4Nzk5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            String getLocalDeploymentFolder(String localDeployId){\n          \n          \n            \n            String getLocalDeploymentFolder(String localDeployId) {", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534087990", "createdAt": "2020-12-02T11:15:51Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}\n+void runMavenDeploy(MavenCommand mvnCmd){\n+    mvnCmd= mvnCmd.clone()\n+    \n+    if(params.MAVEN_DEPLOY_REPOSITORY){\n+        mvnCmd.withDeployRepository(params.MAVEN_DEPLOY_REPOSITORY)\n+    }\n \n-void mavenCleanInstall(String directory, boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    runMaven('clean install', directory, skipTests, profiles, extraArgs)\n+    mvnCmd.skipTests(true).run('clean deploy')\n }\n \n-/**\n- * Builds the parent modules and the BOM so that project depending on these artifacts can resolve.\n- */\n-void mavenCleanInstallOptaPlannerParents(String directory) {\n-    mavenCleanInstall(directory, true, [], '-pl org.optaplanner:optaplanner-build-parent,org.optaplanner:optaplanner-bom -am')\n+void runMavenDeployLocally(MavenCommand mvnCmd, String localDeployId) {\n+    mvnCmd.clone()\n+        .skipTests(true)\n+        .withLocalDeployFolder(getLocalDeploymentFolder(localDeployId))\n+        .run('clean deploy')\n }\n \n-void mavenDeploy(String directory, extraArgs = '') {\n-    String deployRepoArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    String resolvedArgs = \"$extraArgs $deployRepoArgs\".trim()\n-    runMaven('clean deploy', directory, true, [], resolvedArgs)\n+void runMavenStage(MavenCommand mvnCmd, String localDeployId) {\n+    MavenStagingHelper stagingHelper = getStagingHelper(mvnCmd)\n+    deployProperties.putAll(stagingHelper.stageLocalArtifacts(params.NEXUS_STAGING_PROFILE_ID, getLocalDeploymentFolder(localDeployId)))\n+    stagingHelper.promoteStagingRepository(params.NEXUS_BUILD_PROMOTION_PROFILE_ID)\n }\n \n-void runMaven(String goals, String directory, boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    mvnCmd = goals\n-    if(!profiles.isEmpty()){\n-        mvnCmd += \" -P${profiles.join(',')}\"\n-    }\n-    if(extraArgs != ''){\n-        mvnCmd += \" ${extraArgs}\"\n-    }\n-    dir(directory) {\n-        maven.runMaven(mvnCmd, skipTests, ['-fae'])\n-    }\n+MavenStagingHelper getStagingHelper(MavenCommand mvnCmd) {\n+    return new MavenStagingHelper(this, mvnCmd)\n+                .withNexusReleaseUrl(params.NEXUS_RELEASE_URL)\n+                .withNexusReleaseRepositoryId(params.NEXUS_RELEASE_REPOSITORY_ID)\n }\n \n-void updateKogitoVersion(String newVersion) {\n-    maven.mvnSetVersionProperty('version.org.kie.kogito', newVersion)\n+String getLocalDeploymentFolder(String localDeployId){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 364}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4ODIxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n          \n          \n            \n                                if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY) {", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534088213", "createdAt": "2020-12-02T11:16:16Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -196,9 +209,23 @@ pipeline {\n \n         stage('Deploy artifacts') {\n             steps {\n-                mavenDeploy('optaplanner', '-Dfull')\n-                mavenDeploy('optaweb-vehicle-routing', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n-                mavenDeploy('optaweb-employee-rostering', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n+                script {\n+                    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA5MDI2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd){\n          \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd) {", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534090266", "createdAt": "2020-12-02T11:19:45Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -478,50 +443,32 @@ void installGithubCLI() {\n     \"\"\"\n }\n \n-void updateKogitoVersion(String newVersion) {\n-    maven.mvnSetVersionProperty('version.org.kie.kogito', newVersion)\n-}\n-\n-boolean isSpecificMavenConfig() {\n-    return params.MAVEN_DEPENDENCIES_REPOSITORY != ''\n-}\n-\n-void deployArtifacts() {\n-    def mvnCmd = 'clean deploy'\n-    if (params.MAVEN_DEPLOY_REPOSITORY) {\n-        mvnCmd += \" -DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n-    }\n-\n-    if (isSpecificMavenConfig()) {\n-        runMaven(mvnCmd, true)\n-    } else {\n-        maven.runMavenWithSubmarineSettings(mvnCmd, true)\n+void uploadDistribution(String directory) {\n+    dir(directory) {\n+        echo \"uploadDistribution for ${directory}\"\n+        // TODO set back after testing\n+        // withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n+        //         keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n+        //     // For testing, simulate connection via SSH:\n+        //     // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n+        //     sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+        // }\n     }\n }\n \n-void mavenCleanInstall(boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    runMaven('clean install', skipTests, profiles, extraArgs)\n-}\n-\n-void runMaven(String goals, boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    mvnCmd = goals\n-    if(!profiles.isEmpty()){\n-        mvnCmd += \" -P${profiles.join(',')}\"\n-    }\n-    if (env.GLOBAL_MAVEN_ARGS != '') {\n-        mvnCmd += \" ${env.GLOBAL_MAVEN_ARGS}\"\n-    }\n-    if(extraArgs != ''){\n-        mvnCmd += \" ${extraArgs}\"\n+MavenCommand getMavenConfig() {\n+    mvnCmd = new MavenCommand(this, ['-fae'])\n+                    .withSettingsXmlId(params.MAVEN_SETTINGS_CONFIG_FILE_ID)\n+    if (params.MAVEN_DEPENDENCIES_REPOSITORY) {\n+        mvnCmd.withDependencyRepositoryInSettings('deps-repo', params.MAVEN_DEPENDENCIES_REPOSITORY)\n     }\n-    maven.runMaven(mvnCmd, skipTests, ['-fae'])\n+    return mvnCmd\n }\n \n-void uploadDistribution() {\n-    withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n-            keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n-        // For testing, simulate connection via SSH:\n-        // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n-        sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+void runMavenDeploy(MavenCommand mvnCmd){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 288}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4215b1951fdb8a15177cdff46e32624c84b01312", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/4215b1951fdb8a15177cdff46e32624c84b01312", "committedDate": "2020-12-02T16:02:05Z", "message": "KOGITO-3716 Allow automatic close of staging repo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6f09ab03d10d3610d4b55638c99f78cd6b38471", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/c6f09ab03d10d3610d4b55638c99f78cd6b38471", "committedDate": "2020-12-02T15:53:59Z", "message": "small update"}, "afterCommit": {"oid": "4215b1951fdb8a15177cdff46e32624c84b01312", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/4215b1951fdb8a15177cdff46e32624c84b01312", "committedDate": "2020-12-02T16:02:05Z", "message": "KOGITO-3716 Allow automatic close of staging repo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/d08e2a524e906a123adce866e247ea168cf64a0d", "committedDate": "2020-12-03T07:21:46Z", "message": "small correction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNzQ4MzU3", "url": "https://github.com/kiegroup/optaplanner/pull/1010#pullrequestreview-543748357", "createdAt": "2020-12-03T09:18:11Z", "commit": {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxODoxMlrOH-NDkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOTo0MDoyMVrOH-OuZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4NzY2Ng==", "bodyText": "These are eclipse files? They should be already covered by /.* on the line 5.", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534987666", "createdAt": "2020-12-03T09:18:12Z", "author": {"login": "rsynek"}, "path": ".gitignore", "diffHunk": "@@ -11,6 +11,14 @@\n /*.ipr\n /*.iws\n /*.iml\n+.classpath\n+.project\n+.settings\n+.factorypath", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNTAxNQ==", "bodyText": "While I like the idea of having a PR check for jenkinsfiles, I have concerns about maintainability of this solution:\n1/ it brings a lot of dependencies to the project (although it's a separate maven build)\n2/ it duplicates the same (or very similar) setup in kogito-runtimes, kogito-examples and kogito-pipeline (in form of build.gradle) and maybe other repositories.\nWe should think about reducing the maintainability cost before merging the PRs.\nFirst proposal: creating a parent pom.xml (in kogito-pipelines or jenkins-pipeline-shared-libraries ?) the other repositories would inherit from.", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535015015", "createdAt": "2020-12-03T09:40:21Z", "author": {"login": "rsynek"}, "path": ".jenkins/tests/pom.xml", "diffHunk": "@@ -0,0 +1,287 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a56803128bc325c1499b1ffbc8a8019da2f816da", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/a56803128bc325c1499b1ffbc8a8019da2f816da", "committedDate": "2020-12-03T10:48:11Z", "message": "removed jenkins tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16e32e429a674e93dce228c0f799e9839f3a9136", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/16e32e429a674e93dce228c0f799e9839f3a9136", "committedDate": "2020-12-03T10:49:04Z", "message": "correction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODM5NDE3", "url": "https://github.com/kiegroup/optaplanner/pull/1010#pullrequestreview-543839417", "createdAt": "2020-12-03T11:01:49Z", "commit": {"oid": "16e32e429a674e93dce228c0f799e9839f3a9136"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12dc95fa3ce98a56fb04fc5043c230fe6a1a69be", "author": {"user": {"login": "radtriste", "name": "Tristan Radisson"}}, "url": "https://github.com/kiegroup/optaplanner/commit/12dc95fa3ce98a56fb04fc5043c230fe6a1a69be", "committedDate": "2020-12-03T17:44:15Z", "message": "set back after testing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODk2NDgz", "url": "https://github.com/kiegroup/optaplanner/pull/1010#pullrequestreview-545896483", "createdAt": "2020-12-07T07:50:29Z", "commit": {"oid": "12dc95fa3ce98a56fb04fc5043c230fe6a1a69be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3108, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}