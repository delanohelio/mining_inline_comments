{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1ODc3OTEx", "number": 1010, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1NzowMlrOE1jtzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOTo0MDoyMVrOFAHk9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTk1MTUwOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1NzowMlrOHt5Ukg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1NzowMlrOHt5Ukg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NzEyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \"--projects ${parentProjectName ?: directory}\"\n          \n          \n            \n                    cmd += \" --projects ${parentProjectName ?: directory}\"", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517887122", "createdAt": "2020-11-05T08:57:02Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -239,9 +250,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \"--projects ${parentProjectName ?: directory}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84279b0b9eb42887ee52dea1fc6191e09e03ac51"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjAzODA3OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOToxOToxMlrOHt6K_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOToxOToxMlrOHt6K_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwMTA1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \" --projects ${parentProjectName ?: directory}\"\n          \n          \n            \n                    cmd += \" --projects :${parentProjectName ?: directory}\"", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517901055", "createdAt": "2020-11-05T09:19:12Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -239,9 +250,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \" --projects ${parentProjectName ?: directory}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c835ed0cb55b66ba5b9a0ce94d3e098cf3c05381"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjE2MTMzOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOTo1MDowMVrOHt7X0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOTo1MDowMVrOHt7X0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkyMDcyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \"--projects ${directory}\"\n          \n          \n            \n                    cmd += \" --projects :${parentProjectName ?: directory}\"", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517920720", "createdAt": "2020-11-05T09:50:01Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -239,9 +250,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \" --projects :${parentProjectName ?: directory}\"\n+        cmd += \" -DnexusUrl=${env.NEXUS_RELEASE_URL}\"\n+        cmd += \" -DserverId=${env.NEXUS_RELEASE_REPOSITORY_ID}\" \n+        cmd += \" -DrepositoryDirectory=${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        cmd += \" -DstagingProfileId=${env.NEXUS_STAGING_REPOSITORY_ID}\" \n+        cmd += \" -DstagingDescription=\\\"Kogito Runtimes ${getProjectVersion()}\\\"\"\n+        echo \"Run maven cmd $cmd\"\n+        runMaven(cmd, directory)\n+\n+        // Promote to build profile\n+        cmd = \"org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:promote -DbuildPromotionProfileId=${env.NEXUS_BUILD_PROMOTION_PROFILE_ID}\"\n+        cmd += \"--projects ${directory}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cb59a092216c8cfc51e813293ad3ebcf68db2b6"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjM4ODgwOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo0NjoyNFrOHt9j7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo0NjoyNFrOHt9j7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjU5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                mavenCleanInstall('optaplanner', params.SKIP_TESTS, [], extraArgs)\n          \n          \n            \n                                mavenCleanInstall('optaplanner', params.SKIP_TESTS)", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517956591", "createdAt": "2020-11-05T10:46:24Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -135,10 +150,6 @@ pipeline {\n         stage('Build optaplanner') {\n             steps {\n                 script {\n-                    String extraArgs = ''\n-                    if (params.MAVEN_DEPENDENCIES_REPOSITORY != '') {\n-                        extraArgs = \"-s ${env.GLOBAL_MAVEN_SETTINGS} -Denforcer.skip\"\n-                    }\n                     mavenCleanInstall('optaplanner', params.SKIP_TESTS, [], extraArgs)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51943a64bc8a5e8acebc53991e8c0971aa86fc80"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDI2MTQ5OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.promote", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwODozMzozN1rOH9PpgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwODozMzozN1rOH9PpgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk4MTU2OQ==", "bodyText": "Will be commented out once testing is finished", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r533981569", "createdAt": "2020-12-02T08:33:37Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -181,44 +160,42 @@ pipeline {\n             }\n             steps {\n                 script {\n-                    dir(employeeRosteringRepository) {\n-                        mavenCleanInstall(true)\n-                        uploadDistribution()\n-                    }\n+                    getMavenConfig().inDirectory(employeeRosteringRepository).skipTests(true).run('clean install')\n+                    uploadDistribution(employeeRosteringRepository)\n                 }\n             }\n         }\n \n-        stage('Update OptaPlanner website') {\n-            when {\n-                expression { return isRelease() }\n-            }\n-            steps {\n-                script {\n-                    final String websiteRepository = 'optaplanner-website'\n-                    String prLink = null\n-                    dir(\"$websiteRepository-bot\") {\n-                        String prBranchName = createWebsitePrBranch(websiteRepository)\n-\n-                        // Update versions in links on the website.\n-                        sh \"./build/update-versions.sh ${getProjectVersion()} ${getNextMinorSnapshotVersion(getProjectVersion())}\"\n-\n-                        // Update the XSDs. OptaPlanner must be cloned and build with the full profile before.\n-                        String optaplannerRoot = \"$WORKSPACE/optaplanner\"\n-                        sh \"cp $optaplannerRoot/optaplanner-core/target/classes/solver.xsd xsd/solver/solver-8.xsd\"\n-                        sh \"cp $optaplannerRoot/optaplanner-benchmark/target/classes/benchmark.xsd xsd/benchmark/benchmark-8.xsd\"\n-\n-                        // Add changed files, commit, open and merge PR\n-                        sh 'git add xsd/\\\\*.xsd _config/pom.yml'\n-                        prLink = commitAndCreatePR(\"Release OptaPlanner ${getProjectVersion()}\", prBranchName, 'master')\n-                    }\n-                    dir(websiteRepository) {\n-                        checkoutRepo(websiteRepository, 'master')\n-                        mergeAndPush(prLink, 'master')\n-                    }\n-                }\n-            }\n-        }\n+        // TODO set back before merging", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df750b271678df4ba4e01d18ef9da5bed35ccd21"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDI2Mjg4OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.promote", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwODozMzo1MlrOH9PqMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwODozMzo1MlrOH9PqMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk4MTc0NQ==", "bodyText": "Will be commented out once testing is finished", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r533981745", "createdAt": "2020-12-02T08:33:52Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -478,50 +444,32 @@ void installGithubCLI() {\n     \"\"\"\n }\n \n-void updateKogitoVersion(String newVersion) {\n-    maven.mvnSetVersionProperty('version.org.kie.kogito', newVersion)\n-}\n-\n-boolean isSpecificMavenConfig() {\n-    return params.MAVEN_DEPENDENCIES_REPOSITORY != ''\n-}\n-\n-void deployArtifacts() {\n-    def mvnCmd = 'clean deploy'\n-    if (params.MAVEN_DEPLOY_REPOSITORY) {\n-        mvnCmd += \" -DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n-    }\n-\n-    if (isSpecificMavenConfig()) {\n-        runMaven(mvnCmd, true)\n-    } else {\n-        maven.runMavenWithSubmarineSettings(mvnCmd, true)\n+void uploadDistribution(String directory) {\n+    dir(directory) {\n+        echo \"uploadDistribution for ${directory}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df750b271678df4ba4e01d18ef9da5bed35ccd21"}, "originalPosition": 248}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDg1NTQ3OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDo1MzozNlrOH9VUvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDo1MzozNlrOH9VUvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NDU1Ng==", "bodyText": "I am slightly in favor of the getMavenConfig (or getDefaultMavenConfig in this case?) as pointed here kiegroup/kogito-examples#435 (comment)", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534074556", "createdAt": "2020-12-02T10:53:36Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -61,6 +85,20 @@ pipeline {\n                         assert getProjectVersion() != ''\n                         assert getKogitoVersion() != ''\n                     }\n+\n+                    // Setup Maven config\n+                    // Create a default command with default config and which will be cloned for projects\n+                    MavenCommand defaultMvnCmd = new MavenCommand(this, ['-fae'])\n+                                                    .withSettingsXmlId(params.MAVEN_SETTINGS_CONFIG_FILE_ID)\n+                    if (params.MAVEN_DEPENDENCIES_REPOSITORY) {\n+                        defaultMvnCmd.withDependencyRepositoryInSettings('deps-repo', params.MAVEN_DEPENDENCIES_REPOSITORY)\n+                    }\n+\n+                    // Setup maven default commands\n+                    defaultOptaplannerMvnCmd = defaultMvnCmd.clone().inDirectory(optaplannerRepository).withProperty('full')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDg2MzM3OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDo1NToyM1rOH9VZWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDo1NToyM1rOH9VZWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NTczNw==", "bodyText": "Thanks, I wanted to do some refactoring, including this change, after your PRs.", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534075737", "createdAt": "2020-12-02T10:55:23Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -79,10 +117,10 @@ pipeline {\n \n         stage('Clone repositories') {\n             steps {\n-                checkoutRepo('optaplanner', getBuildBranch())\n-                checkoutRepo('optaplanner-quickstarts', getQuickStartsBranch())\n-                checkoutRepo('optaweb-vehicle-routing', getBuildBranch())\n-                checkoutRepo('optaweb-employee-rostering', getBuildBranch())\n+                checkoutRepo(optaplannerRepository, getBuildBranch())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDkxNjA5OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMTowOToxM1rOH9V6BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzo1ODoyOVrOH9cJDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NDEwMA==", "bodyText": "The mavenCleanInstallOptaPlannerParents ran only specific modules (a parent pom.xml and BOM) the other projects depend upon to save time (a couple of seconds vs. ~5 minutes).\nI don't expect these two modules to be renamed; especially the BOM is a part of our API.", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534084100", "createdAt": "2020-12-02T11:09:13Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -122,30 +141,20 @@ pipeline {\n             }\n             steps {\n                 script {\n-                    mavenCleanInstallOptaPlannerParents('optaplanner')\n-                    dir('optaplanner') {\n-                        maven.mvnVersionsSet(getProjectVersion())\n-                        updateKogitoVersion(getKogitoVersion())\n-                    }\n-                    mavenCleanInstallOptaPlannerParents('optaplanner')\n-                    dir('optaweb-vehicle-routing') {\n-                        maven.mvnVersionsUpdateParentAndChildModules(getProjectVersion())\n-                    }\n-                    dir('optaweb-employee-rostering') {\n-                        maven.mvnVersionsUpdateParentAndChildModules(getProjectVersion())\n-                    }\n+                    maven.mvnVersionsSet(defaultOptaplannerMvnCmd, getProjectVersion())\n+                    maven.mvnSetVersionProperty(defaultOptaplannerMvnCmd, 'version.org.kie.kogito', getKogitoVersion())\n+                    defaultOptaplannerMvnCmd.clone().skipTests(true).withOptions(['-U']).run('clean install')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4MzMyNA==", "bodyText": "woops. gonna correct that", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534183324", "createdAt": "2020-12-02T13:54:17Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -122,30 +141,20 @@ pipeline {\n             }\n             steps {\n                 script {\n-                    mavenCleanInstallOptaPlannerParents('optaplanner')\n-                    dir('optaplanner') {\n-                        maven.mvnVersionsSet(getProjectVersion())\n-                        updateKogitoVersion(getKogitoVersion())\n-                    }\n-                    mavenCleanInstallOptaPlannerParents('optaplanner')\n-                    dir('optaweb-vehicle-routing') {\n-                        maven.mvnVersionsUpdateParentAndChildModules(getProjectVersion())\n-                    }\n-                    dir('optaweb-employee-rostering') {\n-                        maven.mvnVersionsUpdateParentAndChildModules(getProjectVersion())\n-                    }\n+                    maven.mvnVersionsSet(defaultOptaplannerMvnCmd, getProjectVersion())\n+                    maven.mvnSetVersionProperty(defaultOptaplannerMvnCmd, 'version.org.kie.kogito', getKogitoVersion())\n+                    defaultOptaplannerMvnCmd.clone().skipTests(true).withOptions(['-U']).run('clean install')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NDEwMA=="}, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4NjI1NA==", "bodyText": "updated", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534186254", "createdAt": "2020-12-02T13:58:29Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -122,30 +141,20 @@ pipeline {\n             }\n             steps {\n                 script {\n-                    mavenCleanInstallOptaPlannerParents('optaplanner')\n-                    dir('optaplanner') {\n-                        maven.mvnVersionsSet(getProjectVersion())\n-                        updateKogitoVersion(getKogitoVersion())\n-                    }\n-                    mavenCleanInstallOptaPlannerParents('optaplanner')\n-                    dir('optaweb-vehicle-routing') {\n-                        maven.mvnVersionsUpdateParentAndChildModules(getProjectVersion())\n-                    }\n-                    dir('optaweb-employee-rostering') {\n-                        maven.mvnVersionsUpdateParentAndChildModules(getProjectVersion())\n-                    }\n+                    maven.mvnVersionsSet(defaultOptaplannerMvnCmd, getProjectVersion())\n+                    maven.mvnSetVersionProperty(defaultOptaplannerMvnCmd, 'version.org.kie.kogito', getKogitoVersion())\n+                    defaultOptaplannerMvnCmd.clone().skipTests(true).withOptions(['-U']).run('clean install')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NDEwMA=="}, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDkzMTIwOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxMzowMFrOH9WCzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzo1Mzo1NlrOH9b8kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NjM1MA==", "bodyText": "The if-else can be replaced by a method, e.g. deployMavenArtifacts() that would take care of a single repository.", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534086350", "createdAt": "2020-12-02T11:13:00Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -196,9 +209,23 @@ pipeline {\n \n         stage('Deploy artifacts') {\n             steps {\n-                mavenDeploy('optaplanner', '-Dfull')\n-                mavenDeploy('optaweb-vehicle-routing', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n-                mavenDeploy('optaweb-employee-rostering', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n+                script {\n+                    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+                        // Normal deploy\n+                        runMavenDeploy(defaultOptaplannerMvnCmd)\n+                        runMavenDeploy(defaultOptawebVehicleRoutingMvnCmd)\n+                        runMavenDeploy(defaultOptawebEmployeeRosteringMvnCmd)\n+                    } else {\n+                        // Deploy locally and then to staging\n+                        runMavenDeployLocally(defaultOptaplannerMvnCmd, optaplannerRepository)\n+                        runMavenDeployLocally(defaultOptawebVehicleRoutingMvnCmd, vehicleRoutingRepository)\n+                        runMavenDeployLocally(defaultOptawebEmployeeRosteringMvnCmd, employeeRosteringRepository)\n+\n+                        runMavenStage(defaultOptaplannerMvnCmd, optaplannerRepository)\n+                        runMavenStage(defaultOptawebVehicleRoutingMvnCmd, vehicleRoutingRepository)\n+                        runMavenStage(defaultOptawebEmployeeRosteringMvnCmd, employeeRosteringRepository)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 222}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4MzA1Ng==", "bodyText": "something like:\ndeployMavenArtifacts(defaultOptaplannerMvnCmd, optaplannerRepository)\ndeployMavenArtifacts(defaultOptawebVehicleRoutingMvnCmd, vehicleRoutingRepository)\ndeployMavenArtifacts(defaultOptawebEmployeeRosteringMvnCmd, employeeRosteringRepository)\n\nand then\nvoid deployMavenArtifacts(mvnCmd, directory){\n    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n         runMavenDeploy(mvnCmd)\n    } else {\n        runMavenDeployLocally(mvnCmd, directory)\n        runMavenStage(mvnCmd, directory)\n    }\n}\n\n?", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534183056", "createdAt": "2020-12-02T13:53:56Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -196,9 +209,23 @@ pipeline {\n \n         stage('Deploy artifacts') {\n             steps {\n-                mavenDeploy('optaplanner', '-Dfull')\n-                mavenDeploy('optaweb-vehicle-routing', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n-                mavenDeploy('optaweb-employee-rostering', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n+                script {\n+                    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+                        // Normal deploy\n+                        runMavenDeploy(defaultOptaplannerMvnCmd)\n+                        runMavenDeploy(defaultOptawebVehicleRoutingMvnCmd)\n+                        runMavenDeploy(defaultOptawebEmployeeRosteringMvnCmd)\n+                    } else {\n+                        // Deploy locally and then to staging\n+                        runMavenDeployLocally(defaultOptaplannerMvnCmd, optaplannerRepository)\n+                        runMavenDeployLocally(defaultOptawebVehicleRoutingMvnCmd, vehicleRoutingRepository)\n+                        runMavenDeployLocally(defaultOptawebEmployeeRosteringMvnCmd, employeeRosteringRepository)\n+\n+                        runMavenStage(defaultOptaplannerMvnCmd, optaplannerRepository)\n+                        runMavenStage(defaultOptawebVehicleRoutingMvnCmd, vehicleRoutingRepository)\n+                        runMavenStage(defaultOptawebEmployeeRosteringMvnCmd, employeeRosteringRepository)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NjM1MA=="}, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 222}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDkzMzkyOnYy", "diffSide": "LEFT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxMzo0N1rOH9WEag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxMzo0N1rOH9WEag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4Njc2Mg==", "bodyText": "Thank you!", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534086762", "createdAt": "2020-12-02T11:13:47Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 310}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDkzOTg2OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxNToxNVrOH9WH1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxNToxNVrOH9WH1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NzYzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd){\n          \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd) {", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534087637", "createdAt": "2020-12-02T11:15:15Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}\n+void runMavenDeploy(MavenCommand mvnCmd){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 311}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDk0MDM1OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxNToyNFrOH9WIMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxNToyNFrOH9WIMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NzczMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if(params.MAVEN_DEPLOY_REPOSITORY){\n          \n          \n            \n                if(params.MAVEN_DEPLOY_REPOSITORY) {", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534087731", "createdAt": "2020-12-02T11:15:24Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}\n+void runMavenDeploy(MavenCommand mvnCmd){\n+    mvnCmd= mvnCmd.clone()\n+    \n+    if(params.MAVEN_DEPLOY_REPOSITORY){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 314}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDk0MjA4OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxNTo1MVrOH9WJNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxNTo1MVrOH9WJNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4Nzk5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            String getLocalDeploymentFolder(String localDeployId){\n          \n          \n            \n            String getLocalDeploymentFolder(String localDeployId) {", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534087990", "createdAt": "2020-12-02T11:15:51Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}\n+void runMavenDeploy(MavenCommand mvnCmd){\n+    mvnCmd= mvnCmd.clone()\n+    \n+    if(params.MAVEN_DEPLOY_REPOSITORY){\n+        mvnCmd.withDeployRepository(params.MAVEN_DEPLOY_REPOSITORY)\n+    }\n \n-void mavenCleanInstall(String directory, boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    runMaven('clean install', directory, skipTests, profiles, extraArgs)\n+    mvnCmd.skipTests(true).run('clean deploy')\n }\n \n-/**\n- * Builds the parent modules and the BOM so that project depending on these artifacts can resolve.\n- */\n-void mavenCleanInstallOptaPlannerParents(String directory) {\n-    mavenCleanInstall(directory, true, [], '-pl org.optaplanner:optaplanner-build-parent,org.optaplanner:optaplanner-bom -am')\n+void runMavenDeployLocally(MavenCommand mvnCmd, String localDeployId) {\n+    mvnCmd.clone()\n+        .skipTests(true)\n+        .withLocalDeployFolder(getLocalDeploymentFolder(localDeployId))\n+        .run('clean deploy')\n }\n \n-void mavenDeploy(String directory, extraArgs = '') {\n-    String deployRepoArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    String resolvedArgs = \"$extraArgs $deployRepoArgs\".trim()\n-    runMaven('clean deploy', directory, true, [], resolvedArgs)\n+void runMavenStage(MavenCommand mvnCmd, String localDeployId) {\n+    MavenStagingHelper stagingHelper = getStagingHelper(mvnCmd)\n+    deployProperties.putAll(stagingHelper.stageLocalArtifacts(params.NEXUS_STAGING_PROFILE_ID, getLocalDeploymentFolder(localDeployId)))\n+    stagingHelper.promoteStagingRepository(params.NEXUS_BUILD_PROMOTION_PROFILE_ID)\n }\n \n-void runMaven(String goals, String directory, boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    mvnCmd = goals\n-    if(!profiles.isEmpty()){\n-        mvnCmd += \" -P${profiles.join(',')}\"\n-    }\n-    if(extraArgs != ''){\n-        mvnCmd += \" ${extraArgs}\"\n-    }\n-    dir(directory) {\n-        maven.runMaven(mvnCmd, skipTests, ['-fae'])\n-    }\n+MavenStagingHelper getStagingHelper(MavenCommand mvnCmd) {\n+    return new MavenStagingHelper(this, mvnCmd)\n+                .withNexusReleaseUrl(params.NEXUS_RELEASE_URL)\n+                .withNexusReleaseRepositoryId(params.NEXUS_RELEASE_REPOSITORY_ID)\n }\n \n-void updateKogitoVersion(String newVersion) {\n-    maven.mvnSetVersionProperty('version.org.kie.kogito', newVersion)\n+String getLocalDeploymentFolder(String localDeployId){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 364}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDk0MzU4OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.deploy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxNjoxNlrOH9WKFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxNjoxNlrOH9WKFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4ODIxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n          \n          \n            \n                                if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY) {", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534088213", "createdAt": "2020-12-02T11:16:16Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.deploy", "diffHunk": "@@ -196,9 +209,23 @@ pipeline {\n \n         stage('Deploy artifacts') {\n             steps {\n-                mavenDeploy('optaplanner', '-Dfull')\n-                mavenDeploy('optaweb-vehicle-routing', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n-                mavenDeploy('optaweb-employee-rostering', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n+                script {\n+                    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 209}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDk1NzIyOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile.promote", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxOTo0NVrOH9WSGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxOTo0NVrOH9WSGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA5MDI2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd){\n          \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd) {", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534090266", "createdAt": "2020-12-02T11:19:45Z", "author": {"login": "rsynek"}, "path": "Jenkinsfile.promote", "diffHunk": "@@ -478,50 +443,32 @@ void installGithubCLI() {\n     \"\"\"\n }\n \n-void updateKogitoVersion(String newVersion) {\n-    maven.mvnSetVersionProperty('version.org.kie.kogito', newVersion)\n-}\n-\n-boolean isSpecificMavenConfig() {\n-    return params.MAVEN_DEPENDENCIES_REPOSITORY != ''\n-}\n-\n-void deployArtifacts() {\n-    def mvnCmd = 'clean deploy'\n-    if (params.MAVEN_DEPLOY_REPOSITORY) {\n-        mvnCmd += \" -DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n-    }\n-\n-    if (isSpecificMavenConfig()) {\n-        runMaven(mvnCmd, true)\n-    } else {\n-        maven.runMavenWithSubmarineSettings(mvnCmd, true)\n+void uploadDistribution(String directory) {\n+    dir(directory) {\n+        echo \"uploadDistribution for ${directory}\"\n+        // TODO set back after testing\n+        // withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n+        //         keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n+        //     // For testing, simulate connection via SSH:\n+        //     // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n+        //     sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+        // }\n     }\n }\n \n-void mavenCleanInstall(boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    runMaven('clean install', skipTests, profiles, extraArgs)\n-}\n-\n-void runMaven(String goals, boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    mvnCmd = goals\n-    if(!profiles.isEmpty()){\n-        mvnCmd += \" -P${profiles.join(',')}\"\n-    }\n-    if (env.GLOBAL_MAVEN_ARGS != '') {\n-        mvnCmd += \" ${env.GLOBAL_MAVEN_ARGS}\"\n-    }\n-    if(extraArgs != ''){\n-        mvnCmd += \" ${extraArgs}\"\n+MavenCommand getMavenConfig() {\n+    mvnCmd = new MavenCommand(this, ['-fae'])\n+                    .withSettingsXmlId(params.MAVEN_SETTINGS_CONFIG_FILE_ID)\n+    if (params.MAVEN_DEPENDENCIES_REPOSITORY) {\n+        mvnCmd.withDependencyRepositoryInSettings('deps-repo', params.MAVEN_DEPENDENCIES_REPOSITORY)\n     }\n-    maven.runMaven(mvnCmd, skipTests, ['-fae'])\n+    return mvnCmd\n }\n \n-void uploadDistribution() {\n-    withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n-            keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n-        // For testing, simulate connection via SSH:\n-        // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n-        sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+void runMavenDeploy(MavenCommand mvnCmd){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765"}, "originalPosition": 288}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NjUyMzAxOnYy", "diffSide": "RIGHT", "path": ".gitignore", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxODoxMlrOH-NDkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMDoyNTo0NVrOH-R0sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4NzY2Ng==", "bodyText": "These are eclipse files? They should be already covered by /.* on the line 5.", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534987666", "createdAt": "2020-12-03T09:18:12Z", "author": {"login": "rsynek"}, "path": ".gitignore", "diffHunk": "@@ -11,6 +11,14 @@\n /*.ipr\n /*.iws\n /*.iml\n+.classpath\n+.project\n+.settings\n+.factorypath", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA2NTc3Ng==", "bodyText": "/.* is only matching at the root path", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535065776", "createdAt": "2020-12-03T10:25:45Z", "author": {"login": "radtriste"}, "path": ".gitignore", "diffHunk": "@@ -11,6 +11,14 @@\n /*.ipr\n /*.iws\n /*.iml\n+.classpath\n+.project\n+.settings\n+.factorypath", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4NzY2Ng=="}, "originalCommit": {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NjY4NDY4OnYy", "diffSide": "RIGHT", "path": ".jenkins/tests/pom.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOTo0MDoyMVrOH-OuZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowMDozMlrOH-UFBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNTAxNQ==", "bodyText": "While I like the idea of having a PR check for jenkinsfiles, I have concerns about maintainability of this solution:\n1/ it brings a lot of dependencies to the project (although it's a separate maven build)\n2/ it duplicates the same (or very similar) setup in kogito-runtimes, kogito-examples and kogito-pipeline (in form of build.gradle) and maybe other repositories.\nWe should think about reducing the maintainability cost before merging the PRs.\nFirst proposal: creating a parent pom.xml (in kogito-pipelines or jenkins-pipeline-shared-libraries ?) the other repositories would inherit from.", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535015015", "createdAt": "2020-12-03T09:40:21Z", "author": {"login": "rsynek"}, "path": ".jenkins/tests/pom.xml", "diffHunk": "@@ -0,0 +1,287 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA2ODA0NQ==", "bodyText": "I see your concerns. I will remove the tests and gonna implement it as part of another issue (I need those PRs to be merged asap)\nand I note your proposal for later implementation :)", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535068045", "createdAt": "2020-12-03T10:27:36Z", "author": {"login": "radtriste"}, "path": ".jenkins/tests/pom.xml", "diffHunk": "@@ -0,0 +1,287 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNTAxNQ=="}, "originalCommit": {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA5MDg4OQ==", "bodyText": "https://issues.redhat.com/browse/BXMSPROD-1125", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535090889", "createdAt": "2020-12-03T10:48:28Z", "author": {"login": "radtriste"}, "path": ".jenkins/tests/pom.xml", "diffHunk": "@@ -0,0 +1,287 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNTAxNQ=="}, "originalCommit": {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwMjcyNQ==", "bodyText": "Perfect, thank you!", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535102725", "createdAt": "2020-12-03T11:00:32Z", "author": {"login": "rsynek"}, "path": ".jenkins/tests/pom.xml", "diffHunk": "@@ -0,0 +1,287 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNTAxNQ=="}, "originalCommit": {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4139, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}