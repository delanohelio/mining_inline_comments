{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTA3NDA5", "number": 687, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMDoxMjozMlrODfUVhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMDoxNDozM1rODfUX0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTY1NjM5OnYy", "diffSide": "RIGHT", "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/investment/optional/score/InvestmentConstraintProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMDoxMjozMlrOFo9Ciw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMDoyNzoxMVrOFo9c2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ4NzQzNQ==", "bodyText": ".fromUniquePair(AssetClassAllocation.class)?", "url": "https://github.com/kiegroup/optaplanner/pull/687#discussion_r378487435", "createdAt": "2020-02-12T20:12:32Z", "author": {"login": "triceo"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/investment/optional/score/InvestmentConstraintProvider.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.optaplanner.examples.investment.optional.score;\n+\n+import java.util.function.Function;\n+\n+import org.optaplanner.core.api.score.buildin.hardsoftlong.HardSoftLongScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintCollectors;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.api.score.stream.Joiners;\n+import org.optaplanner.examples.investment.domain.AssetClassAllocation;\n+import org.optaplanner.examples.investment.domain.InvestmentParametrization;\n+import org.optaplanner.examples.investment.domain.Region;\n+import org.optaplanner.examples.investment.domain.Sector;\n+\n+public class InvestmentConstraintProvider implements ConstraintProvider {\n+\n+    private static final String CONSTRAINT_PACKAGE = \"org.optaplanner.examples.investment.solver\";\n+\n+    @Override\n+    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n+        // TODO Auto-generated method stub\n+        return new Constraint[]{\n+                                assetsDeviationGreaterThanMaximumPenalty(constraintFactory),\n+                                regionQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                sectorQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                assetExpectedReturnReward(constraintFactory)\n+        };\n+    }\n+\n+    private Constraint assetsDeviationGreaterThanMaximumPenalty(ConstraintFactory cf) {\n+        return cf.from(AssetClassAllocation.class)\n+                 .join(AssetClassAllocation.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "824003a5e9b6e1543c5e243bbdb7ec8450c24e3b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5Mjg5NQ==", "bodyText": "Nope, duplicates are required for FULL_ASSERT to pass (apparently a - a > 0 for investments)", "url": "https://github.com/kiegroup/optaplanner/pull/687#discussion_r378492895", "createdAt": "2020-02-12T20:24:25Z", "author": {"login": "Christopher-Chianelli"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/investment/optional/score/InvestmentConstraintProvider.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.optaplanner.examples.investment.optional.score;\n+\n+import java.util.function.Function;\n+\n+import org.optaplanner.core.api.score.buildin.hardsoftlong.HardSoftLongScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintCollectors;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.api.score.stream.Joiners;\n+import org.optaplanner.examples.investment.domain.AssetClassAllocation;\n+import org.optaplanner.examples.investment.domain.InvestmentParametrization;\n+import org.optaplanner.examples.investment.domain.Region;\n+import org.optaplanner.examples.investment.domain.Sector;\n+\n+public class InvestmentConstraintProvider implements ConstraintProvider {\n+\n+    private static final String CONSTRAINT_PACKAGE = \"org.optaplanner.examples.investment.solver\";\n+\n+    @Override\n+    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n+        // TODO Auto-generated method stub\n+        return new Constraint[]{\n+                                assetsDeviationGreaterThanMaximumPenalty(constraintFactory),\n+                                regionQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                sectorQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                assetExpectedReturnReward(constraintFactory)\n+        };\n+    }\n+\n+    private Constraint assetsDeviationGreaterThanMaximumPenalty(ConstraintFactory cf) {\n+        return cf.from(AssetClassAllocation.class)\n+                 .join(AssetClassAllocation.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ4NzQzNQ=="}, "originalCommit": {"oid": "824003a5e9b6e1543c5e243bbdb7ec8450c24e3b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5NDE3MA==", "bodyText": "Would be nice to add a comment here then, explaining the situation.\nI can already see some poor well-meaning soul \"fixing\" this unknowingly. :-)", "url": "https://github.com/kiegroup/optaplanner/pull/687#discussion_r378494170", "createdAt": "2020-02-12T20:27:11Z", "author": {"login": "triceo"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/investment/optional/score/InvestmentConstraintProvider.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.optaplanner.examples.investment.optional.score;\n+\n+import java.util.function.Function;\n+\n+import org.optaplanner.core.api.score.buildin.hardsoftlong.HardSoftLongScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintCollectors;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.api.score.stream.Joiners;\n+import org.optaplanner.examples.investment.domain.AssetClassAllocation;\n+import org.optaplanner.examples.investment.domain.InvestmentParametrization;\n+import org.optaplanner.examples.investment.domain.Region;\n+import org.optaplanner.examples.investment.domain.Sector;\n+\n+public class InvestmentConstraintProvider implements ConstraintProvider {\n+\n+    private static final String CONSTRAINT_PACKAGE = \"org.optaplanner.examples.investment.solver\";\n+\n+    @Override\n+    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n+        // TODO Auto-generated method stub\n+        return new Constraint[]{\n+                                assetsDeviationGreaterThanMaximumPenalty(constraintFactory),\n+                                regionQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                sectorQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                assetExpectedReturnReward(constraintFactory)\n+        };\n+    }\n+\n+    private Constraint assetsDeviationGreaterThanMaximumPenalty(ConstraintFactory cf) {\n+        return cf.from(AssetClassAllocation.class)\n+                 .join(AssetClassAllocation.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ4NzQzNQ=="}, "originalCommit": {"oid": "824003a5e9b6e1543c5e243bbdb7ec8450c24e3b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTY2MDQxOnYy", "diffSide": "RIGHT", "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/investment/optional/score/InvestmentConstraintProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMDoxNDowMFrOFo9FEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMDoxNDowMFrOFo9FEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ4ODA4MA==", "bodyText": "Please remove.", "url": "https://github.com/kiegroup/optaplanner/pull/687#discussion_r378488080", "createdAt": "2020-02-12T20:14:00Z", "author": {"login": "triceo"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/investment/optional/score/InvestmentConstraintProvider.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.optaplanner.examples.investment.optional.score;\n+\n+import java.util.function.Function;\n+\n+import org.optaplanner.core.api.score.buildin.hardsoftlong.HardSoftLongScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintCollectors;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.api.score.stream.Joiners;\n+import org.optaplanner.examples.investment.domain.AssetClassAllocation;\n+import org.optaplanner.examples.investment.domain.InvestmentParametrization;\n+import org.optaplanner.examples.investment.domain.Region;\n+import org.optaplanner.examples.investment.domain.Sector;\n+\n+public class InvestmentConstraintProvider implements ConstraintProvider {\n+\n+    private static final String CONSTRAINT_PACKAGE = \"org.optaplanner.examples.investment.solver\";\n+\n+    @Override\n+    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n+        // TODO Auto-generated method stub", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "824003a5e9b6e1543c5e243bbdb7ec8450c24e3b"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTY2MjI0OnYy", "diffSide": "RIGHT", "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/investment/optional/score/InvestmentConstraintProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMDoxNDozM1rOFo9GJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOToxOTozNFrOFqBDTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ4ODM1Ng==", "bodyText": "Wrong indentation.\nAlso, I'm pretty sure some of the lines in this file exceed the 120-char limit.\nPlease configure your IDE according to the accepted code style.", "url": "https://github.com/kiegroup/optaplanner/pull/687#discussion_r378488356", "createdAt": "2020-02-12T20:14:33Z", "author": {"login": "triceo"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/investment/optional/score/InvestmentConstraintProvider.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.optaplanner.examples.investment.optional.score;\n+\n+import java.util.function.Function;\n+\n+import org.optaplanner.core.api.score.buildin.hardsoftlong.HardSoftLongScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintCollectors;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.api.score.stream.Joiners;\n+import org.optaplanner.examples.investment.domain.AssetClassAllocation;\n+import org.optaplanner.examples.investment.domain.InvestmentParametrization;\n+import org.optaplanner.examples.investment.domain.Region;\n+import org.optaplanner.examples.investment.domain.Sector;\n+\n+public class InvestmentConstraintProvider implements ConstraintProvider {\n+\n+    private static final String CONSTRAINT_PACKAGE = \"org.optaplanner.examples.investment.solver\";\n+\n+    @Override\n+    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n+        // TODO Auto-generated method stub\n+        return new Constraint[]{\n+                                assetsDeviationGreaterThanMaximumPenalty(constraintFactory),\n+                                regionQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                sectorQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                assetExpectedReturnReward(constraintFactory)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "824003a5e9b6e1543c5e243bbdb7ec8450c24e3b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5MzU5Nw==", "bodyText": "Again, this is KIE Java Conventions for Eclipse; will write a Dockerfile to run the IDEA formatter on a directory.", "url": "https://github.com/kiegroup/optaplanner/pull/687#discussion_r378493597", "createdAt": "2020-02-12T20:25:56Z", "author": {"login": "Christopher-Chianelli"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/investment/optional/score/InvestmentConstraintProvider.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.optaplanner.examples.investment.optional.score;\n+\n+import java.util.function.Function;\n+\n+import org.optaplanner.core.api.score.buildin.hardsoftlong.HardSoftLongScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintCollectors;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.api.score.stream.Joiners;\n+import org.optaplanner.examples.investment.domain.AssetClassAllocation;\n+import org.optaplanner.examples.investment.domain.InvestmentParametrization;\n+import org.optaplanner.examples.investment.domain.Region;\n+import org.optaplanner.examples.investment.domain.Sector;\n+\n+public class InvestmentConstraintProvider implements ConstraintProvider {\n+\n+    private static final String CONSTRAINT_PACKAGE = \"org.optaplanner.examples.investment.solver\";\n+\n+    @Override\n+    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n+        // TODO Auto-generated method stub\n+        return new Constraint[]{\n+                                assetsDeviationGreaterThanMaximumPenalty(constraintFactory),\n+                                regionQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                sectorQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                assetExpectedReturnReward(constraintFactory)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ4ODM1Ng=="}, "originalCommit": {"oid": "824003a5e9b6e1543c5e243bbdb7ec8450c24e3b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMTc0Mg==", "bodyText": "Done, configured a git hook to auto run IDEA formatter on changed files before commit in all KIE repo's.", "url": "https://github.com/kiegroup/optaplanner/pull/687#discussion_r379601742", "createdAt": "2020-02-14T19:19:34Z", "author": {"login": "Christopher-Chianelli"}, "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/investment/optional/score/InvestmentConstraintProvider.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.optaplanner.examples.investment.optional.score;\n+\n+import java.util.function.Function;\n+\n+import org.optaplanner.core.api.score.buildin.hardsoftlong.HardSoftLongScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintCollectors;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+import org.optaplanner.core.api.score.stream.Joiners;\n+import org.optaplanner.examples.investment.domain.AssetClassAllocation;\n+import org.optaplanner.examples.investment.domain.InvestmentParametrization;\n+import org.optaplanner.examples.investment.domain.Region;\n+import org.optaplanner.examples.investment.domain.Sector;\n+\n+public class InvestmentConstraintProvider implements ConstraintProvider {\n+\n+    private static final String CONSTRAINT_PACKAGE = \"org.optaplanner.examples.investment.solver\";\n+\n+    @Override\n+    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n+        // TODO Auto-generated method stub\n+        return new Constraint[]{\n+                                assetsDeviationGreaterThanMaximumPenalty(constraintFactory),\n+                                regionQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                sectorQuantityGreaterThanMaximumPenalty(constraintFactory),\n+                                assetExpectedReturnReward(constraintFactory)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ4ODM1Ng=="}, "originalCommit": {"oid": "824003a5e9b6e1543c5e243bbdb7ec8450c24e3b"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4626, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}