{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzA4MDE1", "number": 771, "title": "PLANNER-1976 Fix decreasing the cardinality of some constraint streams", "bodyText": "@rsynek This fixes the bug that you've reported from your monstrous constraint provider. In some cases, there is a couple percentage point drop in performance - that has to be accepted, since the previous behavior was not correct and caused ClassCastExceptions.\n(This has lurked in the back of my mind the entire week, until suddenly this morning, I woke up not only with an understanding of the problem, but also with an idea for the fix.)\nKeep in mind I also renamed a whole bunch of implementation classes as their names were chosen months ago and their current purpose no longer matched their original name. :-)", "createdAt": "2020-05-10T11:43:28Z", "url": "https://github.com/kiegroup/optaplanner/pull/771", "merged": true, "mergeCommit": {"oid": "e42fa80c38875741a520a1ca2472c6f3fbe5d3db"}, "closed": true, "closedAt": "2020-05-12T08:42:43Z", "author": {"login": "triceo"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcf5iU4gH2gAyNDE1NzA4MDE1OjYyNDBhYmYyYTQyNjcxOTQ1YTRkY2UzMWMxOWE2MjQ4NTNkYjY1ZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgRj1RgFqTQwOTI5MjE4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6240abf2a42671945a4dce31c19a624853db65d5", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/6240abf2a42671945a4dce31c19a624853db65d5", "committedDate": "2020-05-10T11:39:49Z", "message": "PLANNER-1976 Fix decreasing cardinality of some constraint streams"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81b52e24f3df81330aed1dab0221c731416f7849", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/81b52e24f3df81330aed1dab0221c731416f7849", "committedDate": "2020-05-10T11:57:32Z", "message": "Rename the bridges, too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c617c1936b51c567b7b6e0bf5cbe0483f4fb5d8", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/5c617c1936b51c567b7b6e0bf5cbe0483f4fb5d8", "committedDate": "2020-05-10T12:00:48Z", "message": "Fix comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4", "committedDate": "2020-05-10T12:32:18Z", "message": "Address some Sonar code smells"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTQxNDc3", "url": "https://github.com/kiegroup/optaplanner/pull/771#pullrequestreview-409141477", "createdAt": "2020-05-11T12:51:58Z", "commit": {"oid": "6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MjkwNzQ3", "url": "https://github.com/kiegroup/optaplanner/pull/771#pullrequestreview-409290747", "createdAt": "2020-05-11T15:37:31Z", "commit": {"oid": "6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTozNzozMVrOGTh2Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTozNzozMVrOGTh2Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzMDY1NQ==", "bodyText": "Naming: noop() or noOp() or noOperation()?\nWhy do we need this method?\nDoes it need to be public?", "url": "https://github.com/kiegroup/optaplanner/pull/771#discussion_r423130655", "createdAt": "2020-05-11T15:37:31Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/quad/DefaultQuadConstraintCollector.java", "diffHunk": "@@ -37,6 +38,13 @@ public DefaultQuadConstraintCollector(Supplier<ResultContainer_> supplier,\n         this.finisher = finisher;\n     }\n \n+    public static <A, B, C, D, Result_> QuadConstraintCollector<A, B, C, D, ?, Result_> noop() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MjkyMTg5", "url": "https://github.com/kiegroup/optaplanner/pull/771#pullrequestreview-409292189", "createdAt": "2020-05-11T15:39:11Z", "commit": {"oid": "6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTozOToxMVrOGTh6kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTozOToxMVrOGTh6kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzMTc5NQ==", "bodyText": "I am ok with doing it like this, but we could just as well do it as a default method on UniConstraintStream. Either way, it's all good.", "url": "https://github.com/kiegroup/optaplanner/pull/771#discussion_r423131795", "createdAt": "2020-05-11T15:39:11Z", "author": {"login": "ge0ffrey"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/bavet/uni/BavetAbstractUniConstraintStream.java", "diffHunk": "@@ -63,6 +63,11 @@ public void addChildStream(BavetAbstractUniConstraintStream<Solution_, A> childS\n         childStreamList.add(childStream);\n     }\n \n+    @Override\n+    public int getCardinality() {\n+        return 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2968, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}