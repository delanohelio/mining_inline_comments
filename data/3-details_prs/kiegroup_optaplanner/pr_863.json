{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MDMyNDAz", "number": 863, "title": "PLANNER-1935 Only allow to populate constraint stream from known types", "bodyText": "", "createdAt": "2020-07-30T09:55:11Z", "url": "https://github.com/kiegroup/optaplanner/pull/863", "merged": true, "mergeCommit": {"oid": "d230dda31d31df85ea827ed01acf4f43f56799e9"}, "closed": true, "closedAt": "2020-07-30T12:13:09Z", "author": {"login": "triceo"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5Rly3AH2gAyNDU5MDMyNDAzOjQ3ZTQ5NWM2OGUzNWJmN2E4YzIyZDNhM2U2MmNhZjNjMjI1ZThkNWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc594X8gFqTQ1ODMxMjA2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "47e495c68e35bf7a8c22d3a3e62caf3c225e8d5c", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/47e495c68e35bf7a8c22d3a3e62caf3c225e8d5c", "committedDate": "2020-07-28T07:49:26Z", "message": "InnerConstraintFactory becomes an abstract class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b6ffde393992cc394f369624e1d8efb87dfa79f", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/8b6ffde393992cc394f369624e1d8efb87dfa79f", "committedDate": "2020-07-30T09:54:10Z", "message": "PLANNER-1935 Only allow to populate constraint stream from known types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MjYwMTMy", "url": "https://github.com/kiegroup/optaplanner/pull/863#pullrequestreview-458260132", "createdAt": "2020-07-30T10:00:51Z", "commit": {"oid": "8b6ffde393992cc394f369624e1d8efb87dfa79f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDowMDo1MlrOG5cedQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDowMDo1MlrOG5cedQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4ODU2NQ==", "bodyText": "It seems this could be protected to indicate it's only meant to be called by subclasses.", "url": "https://github.com/kiegroup/optaplanner/pull/863#discussion_r462888565", "createdAt": "2020-07-30T10:00:52Z", "author": {"login": "yurloc"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/InnerConstraintFactory.java", "diffHunk": "@@ -73,6 +78,34 @@\n         }\n     }\n \n+    public <A> void assertValidFromClass(Class<A> fromClass) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b6ffde393992cc394f369624e1d8efb87dfa79f"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc39fe8ea2186536785d8ccd484c88709a6e2147", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/bc39fe8ea2186536785d8ccd484c88709a6e2147", "committedDate": "2020-07-30T10:03:50Z", "message": "Better exception message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11890069883f91ef8774cf59a1e3ecb17b9adf99", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/11890069883f91ef8774cf59a1e3ecb17b9adf99", "committedDate": "2020-07-30T10:00:55Z", "message": "Better exception message"}, "afterCommit": {"oid": "bc39fe8ea2186536785d8ccd484c88709a6e2147", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/bc39fe8ea2186536785d8ccd484c88709a6e2147", "committedDate": "2020-07-30T10:03:50Z", "message": "Better exception message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MjYyNjcz", "url": "https://github.com/kiegroup/optaplanner/pull/863#pullrequestreview-458262673", "createdAt": "2020-07-30T10:04:34Z", "commit": {"oid": "8b6ffde393992cc394f369624e1d8efb87dfa79f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDowNDozNVrOG5cl8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDowNDozNVrOG5cl8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg5MDQ4Mg==", "bodyText": "Static imports are preferred for assertions, mock methods, etc. in tests. I know this is not enforced and what's not enforced that's allowed but I think it's a good idea to follow some extra rules even they're not enforced and more importantly be consistent about them.", "url": "https://github.com/kiegroup/optaplanner/pull/863#discussion_r462890482", "createdAt": "2020-07-30T10:04:35Z", "author": {"login": "yurloc"}, "path": "optaplanner-core/src/test/java/org/optaplanner/core/api/score/stream/quad/QuadConstraintStreamTest.java", "diffHunk": "@@ -153,6 +154,21 @@ public void filterConsecutive() {\n     // If (not) exists\n     // ************************************************************************\n \n+    @TestTemplate\n+    public void ifExists_unknownClass() {\n+        assumeDrools();\n+        Assertions.assertThatThrownBy(() -> buildScoreDirector((factory) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b6ffde393992cc394f369624e1d8efb87dfa79f"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b58ea318a2552e951478d6b523254526fada28bf", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/b58ea318a2552e951478d6b523254526fada28bf", "committedDate": "2020-07-30T10:07:01Z", "message": "Even better exception message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "894dbfb850fb24aa4fb5d53ffa57727d58d8b362", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/894dbfb850fb24aa4fb5d53ffa57727d58d8b362", "committedDate": "2020-07-30T10:09:49Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MjY3MzQw", "url": "https://github.com/kiegroup/optaplanner/pull/863#pullrequestreview-458267340", "createdAt": "2020-07-30T10:11:24Z", "commit": {"oid": "b58ea318a2552e951478d6b523254526fada28bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDoxMToyNFrOG5c0TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDoxMToyNFrOG5c0TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg5NDE1Ng==", "bodyText": "I like this. It improves readability. I used to be afraid of static imports in the past because they make it difficult to guess where the method comes from but in some cases, like this one, they're not confusing at all. In the context of a stream it's always clear what toSet() or toList() means. I'm going to apply this style in my code as well.", "url": "https://github.com/kiegroup/optaplanner/pull/863#discussion_r462894156", "createdAt": "2020-07-30T10:11:24Z", "author": {"login": "yurloc"}, "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/InnerConstraintFactory.java", "diffHunk": "@@ -96,15 +98,19 @@\n                             ProblemFactCollectionProperty.class, entry.getKey());\n                 });\n         Set<Class> allAcceptedClassSet = concat(concat(entityClassStream, factClassStream), factCollectionClassStream)\n-                .collect(Collectors.toSet());\n+                .collect(toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58ea318a2552e951478d6b523254526fada28bf"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MjY5Mjkw", "url": "https://github.com/kiegroup/optaplanner/pull/863#pullrequestreview-458269290", "createdAt": "2020-07-30T10:14:25Z", "commit": {"oid": "11890069883f91ef8774cf59a1e3ecb17b9adf99"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDoxNTo0M1rOG5c9Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDoxNTo0M1rOG5c9Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg5NjQ4Mg==", "bodyText": "If the code throws the IllegalArgumentException in a different situation, the test won't notice. The IAE is one of the most used exceptions in the optaplanner codebase.\nSuggestion: add a check for a specific substring of the exception message.", "url": "https://github.com/kiegroup/optaplanner/pull/863#discussion_r462896482", "createdAt": "2020-07-30T10:15:43Z", "author": {"login": "rsynek"}, "path": "optaplanner-core/src/test/java/org/optaplanner/core/api/score/stream/bi/BiConstraintStreamTest.java", "diffHunk": "@@ -404,6 +404,16 @@ public void join_mixedEqualsAndFiltering() {\n     // If (not) exists\n     // ************************************************************************\n \n+    @TestTemplate\n+    public void ifExists_unknownClass() {\n+        assumeDrools();\n+        assertThatThrownBy(() -> buildScoreDirector((factory) -> {\n+            return factory.fromUniquePair(TestdataLavishEntity.class)\n+                    .ifExists(Integer.class)\n+                    .penalize(TEST_CONSTRAINT_NAME, SimpleScore.ONE);\n+        })).isInstanceOf(IllegalArgumentException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "894dbfb850fb24aa4fb5d53ffa57727d58d8b362"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14763947f22ab42f319ba25f94aec3137e06707b", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/14763947f22ab42f319ba25f94aec3137e06707b", "committedDate": "2020-07-30T10:30:57Z", "message": "Fix bug identified by example tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a76f82df25a7d41e83ce6269908b1c40d13fb0fc", "author": {"user": {"login": "triceo", "name": "Luk\u00e1\u0161 Petrovick\u00fd"}}, "url": "https://github.com/kiegroup/optaplanner/commit/a76f82df25a7d41e83ce6269908b1c40d13fb0fc", "committedDate": "2020-07-30T10:37:00Z", "message": "Address further code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzEyMDYy", "url": "https://github.com/kiegroup/optaplanner/pull/863#pullrequestreview-458312062", "createdAt": "2020-07-30T11:25:33Z", "commit": {"oid": "a76f82df25a7d41e83ce6269908b1c40d13fb0fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3365, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}