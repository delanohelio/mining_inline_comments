{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MTU2MDE3", "number": 2309, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDo0MjoxN1rODgadrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjo1MjowNVrODgrpOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzE0NjA0OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDo0MjoxN1rOFqmx3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDo0MjoxN1rOFqmx3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIxOTg3MQ==", "bodyText": "How about adding the toLowerCase() here and then it wont be needed later?", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380219871", "createdAt": "2020-02-17T14:42:17Z", "author": {"login": "psiinon"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -65,10 +65,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n             String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f7faf7020c4077976a5211368eaca34360fb8a7"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzE2NDc5OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDo0Nzo0MVrOFqm9Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDo0Nzo0MVrOFqm9Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyMjc5MA==", "bodyText": "Calling message.getResponseBody().toString().toLowerCase() twice seems very inefficient. Maybe do it just once, and could extract the first 8 chrs rather than doing toLowerCase() on a potentially very large response?", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380222790", "createdAt": "2020-02-17T14:47:41Z", "author": {"login": "psiinon"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -65,10 +65,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n             String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"text\")\n-                    && message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")) {\n+            if (contentType.toLowerCase().startsWith(\"application/vnd.oai.openapi\")) {\n                 return true;\n-            } else if (contentType.toLowerCase().startsWith(\"application\")) {\n+            } else if ((contentType.toLowerCase().contains(\"json\")\n+                            || contentType.toLowerCase().contains(\"yaml\"))\n+                    && (message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f7faf7020c4077976a5211368eaca34360fb8a7"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NTg4MTAwOnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjoyNTowM1rOFrAZcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjozNzowNFrOFrAupg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzOTYwMw==", "bodyText": "String.substring will throw an exception if the body length is less than 8, so should check for that first.", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380639603", "createdAt": "2020-02-18T12:25:03Z", "author": {"login": "psiinon"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -64,11 +64,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     @Override\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n-            String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"text\")\n-                    && message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")) {\n+            String contentType =\n+                    message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();\n+            String responseBodyStart =\n+                    message.getResponseBody().toString().substring(0, 8).toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4fddb9aa78965331167dde3df2e83609c3ed26"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0NTAzMA==", "bodyText": "Of course! How silly of me to miss that.", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380645030", "createdAt": "2020-02-18T12:37:04Z", "author": {"login": "ricekot"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -64,11 +64,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     @Override\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n-            String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"text\")\n-                    && message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")) {\n+            String contentType =\n+                    message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();\n+            String responseBodyStart =\n+                    message.getResponseBody().toString().substring(0, 8).toLowerCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzOTYwMw=="}, "originalCommit": {"oid": "2e4fddb9aa78965331167dde3df2e83609c3ed26"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NTk1OTYzOnYy", "diffSide": "RIGHT", "path": "addOns/openapi/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjo1MTozOVrOFrBJMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoyMDowNVrOFrCAqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MTgyNg==", "bodyText": "These entries should be less code oriented, the user reading this might not know about the code, e.g. Improve content checks when spidering for specifications (Issue 5725).", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380651826", "createdAt": "2020-02-18T12:51:39Z", "author": {"login": "thc202"}, "path": "addOns/openapi/CHANGELOG.md", "diffHunk": "@@ -4,7 +4,8 @@ All notable changes to this add-on will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n \n ## Unreleased\n-\n+### Changed\n+- Content type check in canParseResource(...) is made more specific (Issue 5725).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4fddb9aa78965331167dde3df2e83609c3ed26"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2NjAyNg==", "bodyText": "Okay.", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380666026", "createdAt": "2020-02-18T13:20:05Z", "author": {"login": "ricekot"}, "path": "addOns/openapi/CHANGELOG.md", "diffHunk": "@@ -4,7 +4,8 @@ All notable changes to this add-on will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n \n ## Unreleased\n-\n+### Changed\n+- Content type check in canParseResource(...) is made more specific (Issue 5725).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MTgyNg=="}, "originalCommit": {"oid": "2e4fddb9aa78965331167dde3df2e83609c3ed26"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NTk2MDI4OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjo1MTo1MVrOFrBJlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjo1MTo1MVrOFrBJlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MTkyNg==", "bodyText": "Should lower case with Locale.ROOT, to not rely on the default locale.", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380651926", "createdAt": "2020-02-18T12:51:51Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -64,11 +64,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     @Override\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n-            String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"text\")\n-                    && message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")) {\n+            String contentType =\n+                    message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4fddb9aa78965331167dde3df2e83609c3ed26"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NTk2MDkwOnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjo1MjowNVrOFrBJ-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjo1MjowNVrOFrBJ-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MjAyNg==", "bodyText": "These checks might not work properly (e.g. if the OpenAPI has comments or when JSON which starts with {), some examples in https://github.com/OAI/OpenAPI-Specification/tree/master/examples", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380652026", "createdAt": "2020-02-18T12:52:05Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -64,11 +64,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     @Override\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n-            String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"text\")\n-                    && message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")) {\n+            String contentType =\n+                    message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();\n+            String responseBodyStart =\n+                    message.getResponseBody().toString().substring(0, 8).toLowerCase();\n+            if (contentType.startsWith(\"application/vnd.oai.openapi\")) {\n                 return true;\n-            } else if (contentType.toLowerCase().startsWith(\"application\")) {\n+            } else if ((contentType.contains(\"json\") || contentType.contains(\"yaml\"))\n+                    && (responseBodyStart.equals(\"swagger:\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4fddb9aa78965331167dde3df2e83609c3ed26"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 730, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}