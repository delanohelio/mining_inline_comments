{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMDM5MjU1", "number": 2666, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yM1QxMDowMzowM1rOFpLyiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xN1QxMjoyNToyN1rOFzP5pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc4NzI5MDk5OnYy", "diffSide": "RIGHT", "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "isResolved": true, "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yM1QxMDowMzowM1rOI7qHMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNlQxNjoxMjoyM1rOI-guSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA==", "bodyText": "The size check is redundant here.\nThis will lead to more alerts being raised than before (assuming more than one context) and always with the details of the first context. Do you meant to add a break?", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r599426864", "createdAt": "2021-03-23T10:03:03Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTEyMzc5Nw==", "bodyText": "Now I added size check before the for loop. I think this will not raise more alerts if there are more than one context.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r601123797", "createdAt": "2021-03-25T07:05:12Z", "author": {"login": "theamanrawat"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTgwNjIxNg==", "bodyText": "It will still raise them, it would have to break the loop to just raise once (technically the size check is no longer needed with the use of the loop).", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r601806216", "createdAt": "2021-03-25T20:09:34Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTgwNjY5Mg==", "bodyText": "Also, worth trying to add a test for this case.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r601806692", "createdAt": "2021-03-25T20:10:20Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjM1Njc2Mw==", "bodyText": "Here context is the reflection of payload in HTML right?", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r602356763", "createdAt": "2021-03-26T14:52:04Z", "author": {"login": "theamanrawat"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjM2NDE5Mg==", "bodyText": "Yeah.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r602364192", "createdAt": "2021-03-26T15:01:33Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjM3MTk0Ng==", "bodyText": "With or without size check,  It will not give multiple alerts even If there are more than one context. However size check is not required so I will remove it.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r602371946", "createdAt": "2021-03-26T15:12:08Z", "author": {"login": "theamanrawat"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjM3ODgyMA==", "bodyText": "You mean with contexts2 having size more than 1?", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r602378820", "createdAt": "2021-03-26T15:19:55Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjM4MDEwNg==", "bodyText": "Yes.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r602380106", "createdAt": "2021-03-26T15:21:22Z", "author": {"login": "theamanrawat"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjM5MTEzMw==", "bodyText": "And both having no surrounding quote?", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r602391133", "createdAt": "2021-03-26T15:35:15Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjQwNDM4MA==", "bodyText": "Yeah.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r602404380", "createdAt": "2021-03-26T15:53:01Z", "author": {"login": "theamanrawat"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjQxODc2Mw==", "bodyText": "So, the break was added, that makes more sense.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r602418763", "createdAt": "2021-03-26T16:12:23Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,18 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (contexts2.size() > 0 && ctx.getSurroundingQuote().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTQyNjg2NA=="}, "originalCommit": {"oid": "2dbe4afb8616c1c39e82ab9874aa18296d3c9904"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg5MTIwNjM4OnYy", "diffSide": "RIGHT", "path": "addOns/ascanrules/src/test/resources/org/zaproxy/zap/extension/ascanrules/crosssitescriptingscanrule/MultipleInput.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQxNzo0NzowNlrOJKiFEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQxNzo0NzowNlrOJKiFEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTAyMzg4OQ==", "bodyText": "This could be removed, or moved to the end of the file.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r615023889", "createdAt": "2021-04-16T17:47:06Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/test/resources/org/zaproxy/zap/extension/ascanrules/crosssitescriptingscanrule/MultipleInput.html", "diffHunk": "@@ -0,0 +1,12 @@\n+<html>\n+<head>\n+<script>\n+@@@name@@@\n+</script>\n+<body>\n+</body>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6048e65e0863b0bf405d29628f34d4a818d29dcd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg5MTIwNzMyOnYy", "diffSide": "RIGHT", "path": "addOns/ascanrules/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQxNzo0NzoyNFrOJKiFpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQxNzo0NzoyNFrOJKiFpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTAyNDAzOQ==", "bodyText": "Remove one empty line.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r615024039", "createdAt": "2021-04-16T17:47:24Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/CHANGELOG.md", "diffHunk": "@@ -7,6 +7,10 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n ### Changed\n - Now using 2.10 logging infrastructure (Log4j 2.x).\n \n+### Fixed\n+- Fix XSS false positive (Issue 5958).\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6048e65e0863b0bf405d29628f34d4a818d29dcd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg5MTIwOTU5OnYy", "diffSide": "RIGHT", "path": "addOns/ascanrules/src/test/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRuleUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQxNzo0Nzo1NVrOJKiG5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQxNzo0Nzo1NVrOJKiG5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTAyNDM1OQ==", "bodyText": "One \u2192 Once?\nContext \u2192 Contexts", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r615024359", "createdAt": "2021-04-16T17:47:55Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/test/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRuleUnitTest.java", "diffHunk": "@@ -1183,6 +1183,69 @@ protected Response serve(IHTTPSession session) {\n         assertThat(alertsRaised.get(0).getConfidence(), equalTo(Alert.CONFIDENCE_MEDIUM));\n     }\n \n+    @Test\n+    public void shouldNotAlertXssInJsVariableWithEncoding() throws HttpMalformedHeaderException {\n+        // Given\n+        String path = \"/user/search\";\n+        this.nano.addHandler(\n+                new NanoServerHandler(path) {\n+\n+                    @Override\n+                    protected Response serve(IHTTPSession session) {\n+                        String name = getFirstParamValue(session, \"name\");\n+                        String response;\n+                        if (name != null) {\n+                            name = name.replaceAll(\"\\\"\", \"&quot;\");\n+                            response =\n+                                    getHtml(\"InputInScript.html\", new String[][] {{\"name\", name}});\n+                        } else {\n+                            response = getHtml(\"NoInput.html\");\n+                        }\n+                        return newFixedLengthResponse(response);\n+                    }\n+                });\n+\n+        HttpMessage msg = this.getHttpMessage(path + \"?name=test\");\n+        this.rule.init(msg, this.parent);\n+\n+        // When\n+        this.rule.scan();\n+\n+        // Then\n+        assertThat(alertsRaised.size(), equalTo(0));\n+    }\n+\n+    @Test\n+    public void shouldAlertOneWithMultipleContext() throws HttpMalformedHeaderException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6048e65e0863b0bf405d29628f34d4a818d29dcd"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg5MjgyMjE1OnYy", "diffSide": "RIGHT", "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xN1QxMjoyNToyN1rOJKv1og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xN1QxNDo1MjoxMFrOJKwv8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTI0OTMxNA==", "bodyText": "Since this is looping through a list shouldn\u2019t ctx be used instead of the zero\u2019th element?", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r615249314", "createdAt": "2021-04-17T12:25:27Z", "author": {"login": "kingthorin"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,19 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (ctx.getSurroundingQuote().isEmpty()) {\n+                                    // Yep, its vulnerable\n+                                    newAlert()\n+                                            .setConfidence(Alert.CONFIDENCE_MEDIUM)\n+                                            .setParam(param)\n+                                            .setAttack(contexts2.get(0).getTarget())\n+                                            .setEvidence(contexts2.get(0).getTarget())\n+                                            .setMessage(contexts2.get(0).getMsg())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d90da54db5deae29c96a89d1980cd8047529d42"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTI1NDEzOQ==", "bodyText": "Good catch.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r615254139", "createdAt": "2021-04-17T13:15:55Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,19 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (ctx.getSurroundingQuote().isEmpty()) {\n+                                    // Yep, its vulnerable\n+                                    newAlert()\n+                                            .setConfidence(Alert.CONFIDENCE_MEDIUM)\n+                                            .setParam(param)\n+                                            .setAttack(contexts2.get(0).getTarget())\n+                                            .setEvidence(contexts2.get(0).getTarget())\n+                                            .setMessage(contexts2.get(0).getMsg())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTI0OTMxNA=="}, "originalCommit": {"oid": "3d90da54db5deae29c96a89d1980cd8047529d42"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTI2NDI0MQ==", "bodyText": "The target is the same for all contexts (since the attack is the same). Although for correctness better use ctx, will push that change.", "url": "https://github.com/zaproxy/zap-extensions/pull/2666#discussion_r615264241", "createdAt": "2021-04-17T14:52:10Z", "author": {"login": "thc202"}, "path": "addOns/ascanrules/src/main/java/org/zaproxy/zap/extension/ascanrules/CrossSiteScriptingScanRule.java", "diffHunk": "@@ -588,16 +588,19 @@ public void scan(HttpMessage msg, String param, String value) {\n                             if (contexts2 == null) {\n                                 return;\n                             }\n-                            if (contexts2.size() > 0) {\n-                                // Yep, its vulnerable\n-                                newAlert()\n-                                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                                        .setParam(param)\n-                                        .setAttack(contexts2.get(0).getTarget())\n-                                        .setEvidence(contexts2.get(0).getTarget())\n-                                        .setMessage(contexts2.get(0).getMsg())\n-                                        .raise();\n-                                attackWorked = true;\n+                            for (HtmlContext ctx : contexts2) {\n+                                if (ctx.getSurroundingQuote().isEmpty()) {\n+                                    // Yep, its vulnerable\n+                                    newAlert()\n+                                            .setConfidence(Alert.CONFIDENCE_MEDIUM)\n+                                            .setParam(param)\n+                                            .setAttack(contexts2.get(0).getTarget())\n+                                            .setEvidence(contexts2.get(0).getTarget())\n+                                            .setMessage(contexts2.get(0).getMsg())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTI0OTMxNA=="}, "originalCommit": {"oid": "3d90da54db5deae29c96a89d1980cd8047529d42"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 662, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}