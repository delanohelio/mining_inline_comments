{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjk0NDkw", "number": 2337, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozMzoxNFrODp3oBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo1NDo1NFrODp4IUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjI5NTc0OnYy", "diffSide": "RIGHT", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ViewstateScanner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozMzoxNFrOF5T0rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozMzoxNFrOF5T0rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNzkzMg==", "bodyText": "Note the original specified RISK twice, so I'm assuming this is correct.", "url": "https://github.com/zaproxy/zap-extensions/pull/2337#discussion_r395637932", "createdAt": "2020-03-20T13:33:14Z", "author": {"login": "kingthorin"}, "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ViewstateScanner.java", "diffHunk": "@@ -80,122 +79,68 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n \n     private void alertViewstateAnalyzerResult(\n             HttpMessage msg, int id, ViewstateAnalyzerResult var) {\n-        Alert alert =\n-                new Alert(\n-                        getPluginId(),\n-                        Alert.RISK_MEDIUM,\n-                        Alert.CONFIDENCE_MEDIUM,\n-                        var.pattern.getAlertHeader());\n-\n-        alert.setDetail(\n-                var.pattern.getAlertDescription(),\n-                msg.getRequestHeader().getURI().toString(),\n-                \"\",\n-                \"\",\n-                var.getResultExtract().toString(),\n-                getSolution(), // Solution\n-                \"\",\n-                \"\", // No Evidence\n-                16, // CWE Id 16 - Configuration\n-                14, // WASC Id - Server Misconfiguration\n-                msg);\n-\n-        parent.raiseAlert(id, alert);\n+        newAlert()\n+                .setName(var.pattern.getAlertHeader())\n+                .setRisk(Alert.RISK_MEDIUM)\n+                .setConfidence(Alert.CONFIDENCE_MEDIUM)\n+                .setDescription(var.pattern.getAlertDescription())\n+                .setOtherInfo(var.getResultExtract().toString())\n+                .setSolution(getSolution())\n+                .setCweId(16) // CWE Id 16 - Configuration\n+                .setWascId(14) // WASC Id - Server Misconfiguration\n+                .raise();\n     }\n \n     private void alertOldAspVersion(HttpMessage msg, int id) {\n-        Alert alert =\n-                new Alert(\n-                        getPluginId(),\n-                        Alert.RISK_LOW,\n-                        Alert.CONFIDENCE_MEDIUM,\n-                        Constant.messages.getString(MESSAGE_PREFIX + \"oldver.name\"));\n-\n-        alert.setDetail(\n-                Constant.messages.getString(MESSAGE_PREFIX + \"oldver.desc\"),\n-                msg.getRequestHeader().getURI().toString(),\n-                \"\",\n-                \"\",\n-                \"\",\n-                Constant.messages.getString(MESSAGE_PREFIX + \"oldver.soln\"),\n-                \"\",\n-                \"\", // No Evidence\n-                16, // CWE Id 16 - Configuration\n-                14, // WASC Id - Server Misconfiguration\n-                msg);\n-\n-        parent.raiseAlert(id, alert);\n+        newAlert()\n+                .setName(Constant.messages.getString(MESSAGE_PREFIX + \"oldver.name\"))\n+                .setRisk(Alert.RISK_LOW)\n+                .setConfidence(Alert.CONFIDENCE_MEDIUM)\n+                .setDescription(Constant.messages.getString(MESSAGE_PREFIX + \"oldver.desc\"))\n+                .setSolution(Constant.messages.getString(MESSAGE_PREFIX + \"oldver.soln\"))\n+                .setCweId(16) // CWE Id 16 - Configuration\n+                .setWascId(14) // WASC Id - Server Misconfiguration\n+                .raise();\n     }\n \n     // TODO: see if this alert triggers too often, as the detection rule is far from being robust\n     // for the moment\n     private void alertNoMACUnsure(HttpMessage msg, int id) {\n-        Alert alert =\n-                new Alert(\n-                        getPluginId(),\n-                        Alert.RISK_HIGH,\n-                        Alert.CONFIDENCE_LOW,\n-                        Constant.messages.getString(MESSAGE_PREFIX + \"nomac.unsure.name\"));\n-        alert.setDetail(\n-                Constant.messages.getString(MESSAGE_PREFIX + \"nomac.unsure.desc\"),\n-                msg.getRequestHeader().getURI().toString(),\n-                \"\",\n-                \"\",\n-                \"\",\n-                Constant.messages.getString(MESSAGE_PREFIX + \"nomac.unsure.soln\"),\n-                Constant.messages.getString(MESSAGE_PREFIX + \"nomac.unsure.refs\"),\n-                \"\", // No Evidence\n-                642, // CWE Id 642 - External Control of Critical State Data\n-                14, // WASC Id 14 - Server Misconfiguration\n-                msg);\n-\n-        parent.raiseAlert(id, alert);\n+        newAlert()\n+                .setName(Constant.messages.getString(MESSAGE_PREFIX + \"nomac.unsure.name\"))\n+                .setRisk(Alert.RISK_HIGH)\n+                .setConfidence(Alert.CONFIDENCE_LOW)\n+                .setDescription(Constant.messages.getString(MESSAGE_PREFIX + \"nomac.unsure.desc\"))\n+                .setSolution(Constant.messages.getString(MESSAGE_PREFIX + \"nomac.unsure.soln\"))\n+                .setReference(Constant.messages.getString(MESSAGE_PREFIX + \"nomac.unsure.refs\"))\n+                .setCweId(642) // CWE Id 642 - External Control of Critical State Data\n+                .setWascId(14) // WASC Id - Server Misconfiguration\n+                .raise();\n     }\n \n     private void alertNoMACforSure(HttpMessage msg, int id) {\n-        Alert alert =\n-                new Alert(\n-                        getPluginId(),\n-                        Alert.RISK_HIGH,\n-                        Alert.CONFIDENCE_MEDIUM,\n-                        Constant.messages.getString(MESSAGE_PREFIX + \"nomac.sure.name\"));\n-        alert.setDetail(\n-                Constant.messages.getString(MESSAGE_PREFIX + \"nomac.sure.desc\"),\n-                msg.getRequestHeader().getURI().toString(),\n-                \"\",\n-                \"\",\n-                \"\",\n-                Constant.messages.getString(MESSAGE_PREFIX + \"nomac.sure.soln\"),\n-                Constant.messages.getString(MESSAGE_PREFIX + \"nomac.sure.refs\"),\n-                \"\", // No Evidence\n-                642, // CWE Id 642 - External Control of Critical State Data\n-                14, // WASC Id 14 - Server Misconfiguration\n-                msg);\n-\n-        parent.raiseAlert(id, alert);\n+        newAlert()\n+                .setName(Constant.messages.getString(MESSAGE_PREFIX + \"nomac.sure.name\"))\n+                .setRisk(Alert.RISK_HIGH)\n+                .setConfidence(Alert.CONFIDENCE_MEDIUM)\n+                .setDescription(Constant.messages.getString(MESSAGE_PREFIX + \"nomac.sure.desc\"))\n+                .setSolution(Constant.messages.getString(MESSAGE_PREFIX + \"nomac.sure.soln\"))\n+                .setReference(Constant.messages.getString(MESSAGE_PREFIX + \"nomac.sure.refs\"))\n+                .setCweId(642) // CWE Id 642 - External Control of Critical State Data\n+                .setWascId(14) // WASC Id - Server Misconfiguration\n+                .raise();\n     }\n \n     private void alertSplitViewstate(HttpMessage msg, int id) {\n-        Alert alert =\n-                new Alert(\n-                        getPluginId(),\n-                        Alert.RISK_INFO,\n-                        Alert.RISK_INFO,\n-                        Constant.messages.getString(MESSAGE_PREFIX + \"split.name\"));\n-        alert.setDetail(\n-                Constant.messages.getString(MESSAGE_PREFIX + \"split.desc\"),\n-                msg.getRequestHeader().getURI().toString(),\n-                \"\",\n-                \"\",\n-                \"\",\n-                Constant.messages.getString(MESSAGE_PREFIX + \"split.soln\"),\n-                \"\",\n-                \"\", // No Evidence\n-                16, // CWE Id 16 - Configuration\n-                14, // WASC Id - Server Misconfiguration\n-                msg);\n-\n-        parent.raiseAlert(id, alert);\n+        newAlert()\n+                .setName(Constant.messages.getString(MESSAGE_PREFIX + \"split.name\"))\n+                .setRisk(Alert.RISK_INFO)\n+                .setConfidence(Alert.CONFIDENCE_LOW)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a449552da0ca8e6064d74bd470234ff5d4300cfb"}, "originalPosition": 170}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjM3ODQzOnYy", "diffSide": "RIGHT", "path": "addOns/pscanrulesBeta/src/main/java/org/zaproxy/zap/extension/pscanrulesBeta/RetrievedFromCacheScanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo1NDo1NFrOF5UqSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo1NTo0OVrOF5Usnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1MTY1Nw==", "bodyText": "I didn't set the name as the original could have leveraged getName() instead of using i18n a second time.", "url": "https://github.com/zaproxy/zap-extensions/pull/2337#discussion_r395651657", "createdAt": "2020-03-20T13:54:54Z", "author": {"login": "kingthorin"}, "path": "addOns/pscanrulesBeta/src/main/java/org/zaproxy/zap/extension/pscanrulesBeta/RetrievedFromCacheScanner.java", "diffHunk": "@@ -96,27 +95,15 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n                                     logger.debug(\n                                             msg.getRequestHeader().getURI().getURI()\n                                                     + \" was served from a cache, due to presence of a 'HIT' in the 'X-Cache' response header\");\n-                                Alert alert =\n-                                        new Alert(\n-                                                getPluginId(),\n-                                                Alert.RISK_INFO,\n-                                                Alert.CONFIDENCE_MEDIUM,\n-                                                Constant.messages.getString(\n-                                                        MESSAGE_PREFIX + \"name\"));\n                                 // could be from HTTP/1.0 or HTTP/1.1. We don't know which.\n-                                alert.setDetail(\n-                                        getDescription(), // Description\n-                                        msg.getRequestHeader().getURI().toString(), // URI\n-                                        \"\", // Param\n-                                        \"\", // Attack\n-                                        \"\", // Other info:\n-                                        getSolution(), // Solution\n-                                        getReference(), // References\n-                                        evidence, // Evidence\n-                                        0, // 0 - not necessarily an issue at all\n-                                        0, // 0 - not necessarily an issue at all\n-                                        msg); // HttpMessage\n-                                parent.raiseAlert(id, alert);\n+                                newAlert()\n+                                        .setRisk(Alert.RISK_INFO)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a449552da0ca8e6064d74bd470234ff5d4300cfb"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1MjI1NQ==", "bodyText": "Same below", "url": "https://github.com/zaproxy/zap-extensions/pull/2337#discussion_r395652255", "createdAt": "2020-03-20T13:55:49Z", "author": {"login": "kingthorin"}, "path": "addOns/pscanrulesBeta/src/main/java/org/zaproxy/zap/extension/pscanrulesBeta/RetrievedFromCacheScanner.java", "diffHunk": "@@ -96,27 +95,15 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n                                     logger.debug(\n                                             msg.getRequestHeader().getURI().getURI()\n                                                     + \" was served from a cache, due to presence of a 'HIT' in the 'X-Cache' response header\");\n-                                Alert alert =\n-                                        new Alert(\n-                                                getPluginId(),\n-                                                Alert.RISK_INFO,\n-                                                Alert.CONFIDENCE_MEDIUM,\n-                                                Constant.messages.getString(\n-                                                        MESSAGE_PREFIX + \"name\"));\n                                 // could be from HTTP/1.0 or HTTP/1.1. We don't know which.\n-                                alert.setDetail(\n-                                        getDescription(), // Description\n-                                        msg.getRequestHeader().getURI().toString(), // URI\n-                                        \"\", // Param\n-                                        \"\", // Attack\n-                                        \"\", // Other info:\n-                                        getSolution(), // Solution\n-                                        getReference(), // References\n-                                        evidence, // Evidence\n-                                        0, // 0 - not necessarily an issue at all\n-                                        0, // 0 - not necessarily an issue at all\n-                                        msg); // HttpMessage\n-                                parent.raiseAlert(id, alert);\n+                                newAlert()\n+                                        .setRisk(Alert.RISK_INFO)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1MTY1Nw=="}, "originalCommit": {"oid": "a449552da0ca8e6064d74bd470234ff5d4300cfb"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 716, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}