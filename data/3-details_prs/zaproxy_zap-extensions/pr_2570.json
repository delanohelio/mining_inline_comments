{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNTgyMDE2", "number": 2570, "title": "Support Chrome, Perf improvements, Unit tests and promote to beta", "bodyText": "Signed-off-by: Simon Bennetts psiinon@gmail.com", "createdAt": "2020-10-12T13:34:42Z", "url": "https://github.com/zaproxy/zap-extensions/pull/2570", "merged": true, "mergeCommit": {"oid": "7742ed4031e3baa52a6d895759581d10f6532134"}, "closed": true, "closedAt": "2020-10-26T14:26:03Z", "author": {"login": "psiinon"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdR1ihAgBqjM4NjcxMjQ4MDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWVNJSAFqTUxNjgzMDc2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea290b8ec96f0d7cbca546cc0d758d339ad65644", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/ea290b8ec96f0d7cbca546cc0d758d339ad65644", "committedDate": "2020-10-12T13:33:38Z", "message": "Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}, "afterCommit": {"oid": "b9bdc844b29c78f0f4bde3c842b7d6028e54488f", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/b9bdc844b29c78f0f4bde3c842b7d6028e54488f", "committedDate": "2020-10-12T15:16:23Z", "message": "Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9bdc844b29c78f0f4bde3c842b7d6028e54488f", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/b9bdc844b29c78f0f4bde3c842b7d6028e54488f", "committedDate": "2020-10-12T15:16:23Z", "message": "Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}, "afterCommit": {"oid": "ea23a032a584678c5b8f814502e1b0502533f91d", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/ea23a032a584678c5b8f814502e1b0502533f91d", "committedDate": "2020-10-12T15:20:28Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea23a032a584678c5b8f814502e1b0502533f91d", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/ea23a032a584678c5b8f814502e1b0502533f91d", "committedDate": "2020-10-12T15:20:28Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}, "afterCommit": {"oid": "7f8ebd42e2d5c5855128289fb69914e4f6d8a20b", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/7f8ebd42e2d5c5855128289fb69914e4f6d8a20b", "committedDate": "2020-10-12T15:59:34Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f8ebd42e2d5c5855128289fb69914e4f6d8a20b", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/7f8ebd42e2d5c5855128289fb69914e4f6d8a20b", "committedDate": "2020-10-12T15:59:34Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}, "afterCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/677246beeab171f3c7bf74e3a15c8d3151136fda", "committedDate": "2020-10-13T10:15:28Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMTk0MDAw", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#pullrequestreview-510194000", "createdAt": "2020-10-16T06:45:54Z", "commit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNjo0NTo1NFrOHipgfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNjo0NTo1NFrOHipgfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5MzY5Mg==", "bodyText": "Either this or the help should be updated, they both show different values...", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#discussion_r506093692", "createdAt": "2020-10-16T06:45:54Z", "author": {"login": "ricekot"}, "path": "addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java", "diffHunk": "@@ -526,14 +530,14 @@ public void scan() {\n \n         switch (this.getAttackStrength()) {\n             case LOW:\n-                numberOfAttackStrings = 3;\n+                numberOfAttackStrings = 1;\n                 break;\n             case MEDIUM:\n             default:\n-                numberOfAttackStrings = 5;\n+                numberOfAttackStrings = 3;\n                 break;\n             case HIGH:\n-                numberOfAttackStrings = 7;\n+                numberOfAttackStrings = 6;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "originalPosition": 169}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0ODE0ODM3", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#pullrequestreview-514814837", "createdAt": "2020-10-22T14:50:39Z", "commit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNDo1MDozOVrOHmlujw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNDo1NzoyMFrOHmmDUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyNjA2Mw==", "bodyText": "This should no longer be needed, there's a warning in Travis CI: \"deprecated key sudo (The key sudo has no effect anymore.)\".", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#discussion_r510226063", "createdAt": "2020-10-22T14:50:39Z", "author": {"login": "thc202"}, "path": ".travis.yml", "diffHunk": "@@ -1,9 +1,15 @@\n language: java\n+# Sudo required for chrome as per https://docs.travis-ci.com/user/chrome\n+sudo: required", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyNjE5OA==", "bodyText": "Use specific versions? This might break the builds on updates. (At least for Chrome which requires a specific WebDriver version.)", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#discussion_r510226198", "createdAt": "2020-10-22T14:50:48Z", "author": {"login": "thc202"}, "path": ".travis.yml", "diffHunk": "@@ -1,9 +1,15 @@\n language: java\n+# Sudo required for chrome as per https://docs.travis-ci.com/user/chrome\n+sudo: required\n \n jdk:\n   - openjdk8\n   - openjdk11\n \n+addons:\n+  firefox: latest\n+  chrome: stable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyNjQwMw==", "bodyText": "Could be renamed too.", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#discussion_r510226403", "createdAt": "2020-10-22T14:51:04Z", "author": {"login": "thc202"}, "path": "addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java", "diffHunk": "@@ -249,12 +250,12 @@ private WebDriver createWebDriver() {\n     private WebDriverWrapper getWebDriver() {\n         WebDriverWrapper fxDriver;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyNjUxMg==", "bodyText": "This needs to take into account the browser set, otherwise it might return a previous browser (e.g. if the user later changed to Chrome).", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#discussion_r510226512", "createdAt": "2020-10-22T14:51:13Z", "author": {"login": "thc202"}, "path": "addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java", "diffHunk": "@@ -249,12 +250,12 @@ private WebDriver createWebDriver() {\n     private WebDriverWrapper getWebDriver() {\n         WebDriverWrapper fxDriver;\n         try {\n-            fxDriver = freeFirefoxDrivers.pop();\n+            fxDriver = freeDrivers.pop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyNjg4MA==", "bodyText": "Could be renamed.", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#discussion_r510226880", "createdAt": "2020-10-22T14:51:40Z", "author": {"login": "thc202"}, "path": "addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java", "diffHunk": "@@ -326,12 +326,16 @@ private void returnFirefoxDriver(WebDriverWrapper fxDriver) {\n     @Override\n     public void setTimeFinished() {\n         super.setTimeFinished();\n+        tidyUp();\n+    }\n+\n+    static void tidyUp() {\n         // Tidy up...\n         // Dont kill drivers in the 'taken' list as there may be multiple scans\n         WebDriverWrapper fxDriver;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyOTYwMQ==", "bodyText": "Should call the equivalent for Chrome. It should also check that Chrome (and Firefox?) is really available (and return or not in testBrowsers).", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#discussion_r510229601", "createdAt": "2020-10-22T14:55:07Z", "author": {"login": "thc202"}, "path": "addOns/domxss/src/test/java/org/zaproxy/zap/extension/domxss/DomXssScanRuleUnitTest.java", "diffHunk": "@@ -0,0 +1,411 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.domxss;\n+\n+import static fi.iki.elonen.NanoHTTPD.newFixedLengthResponse;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import fi.iki.elonen.NanoHTTPD.IHTTPSession;\n+import fi.iki.elonen.NanoHTTPD.Response;\n+import io.github.bonigarcia.wdm.WebDriverManager;\n+import java.io.IOException;\n+import java.util.stream.Stream;\n+import org.hamcrest.Matchers;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.parosproxy.paros.core.scanner.Alert;\n+import org.parosproxy.paros.network.HttpMessage;\n+import org.zaproxy.zap.extension.selenium.Browser;\n+import org.zaproxy.zap.extension.selenium.SeleniumOptions;\n+import org.zaproxy.zap.testutils.ActiveScannerTestUtils;\n+import org.zaproxy.zap.testutils.NanoServerHandler;\n+\n+public class DomXssScanRuleUnitTest extends ActiveScannerTestUtils<DomXssScanRule> {\n+\n+    @BeforeAll\n+    static void setup() {\n+        WebDriverManager.firefoxdriver().setup();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyOTYyNQ==", "bodyText": "Should not be needed.", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#discussion_r510229625", "createdAt": "2020-10-22T14:55:09Z", "author": {"login": "thc202"}, "path": "addOns/domxss/src/test/java/org/zaproxy/zap/extension/domxss/DomXssScanRuleUnitTest.java", "diffHunk": "@@ -0,0 +1,411 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.domxss;\n+\n+import static fi.iki.elonen.NanoHTTPD.newFixedLengthResponse;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import fi.iki.elonen.NanoHTTPD.IHTTPSession;\n+import fi.iki.elonen.NanoHTTPD.Response;\n+import io.github.bonigarcia.wdm.WebDriverManager;\n+import java.io.IOException;\n+import java.util.stream.Stream;\n+import org.hamcrest.Matchers;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.parosproxy.paros.core.scanner.Alert;\n+import org.parosproxy.paros.network.HttpMessage;\n+import org.zaproxy.zap.extension.selenium.Browser;\n+import org.zaproxy.zap.extension.selenium.SeleniumOptions;\n+import org.zaproxy.zap.testutils.ActiveScannerTestUtils;\n+import org.zaproxy.zap.testutils.NanoServerHandler;\n+\n+public class DomXssScanRuleUnitTest extends ActiveScannerTestUtils<DomXssScanRule> {\n+\n+    @BeforeAll\n+    static void setup() {\n+        WebDriverManager.firefoxdriver().setup();\n+        System.setProperty(\n+                SeleniumOptions.FIREFOX_DRIVER_SYSTEM_PROPERTY,\n+                System.getProperty(\"webdriver.gecko.driver\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyOTY1NA==", "bodyText": "Remove?", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#discussion_r510229654", "createdAt": "2020-10-22T14:55:12Z", "author": {"login": "thc202"}, "path": "addOns/domxss/src/test/java/org/zaproxy/zap/extension/domxss/DomXssScanRuleUnitTest.java", "diffHunk": "@@ -0,0 +1,411 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.domxss;\n+\n+import static fi.iki.elonen.NanoHTTPD.newFixedLengthResponse;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import fi.iki.elonen.NanoHTTPD.IHTTPSession;\n+import fi.iki.elonen.NanoHTTPD.Response;\n+import io.github.bonigarcia.wdm.WebDriverManager;\n+import java.io.IOException;\n+import java.util.stream.Stream;\n+import org.hamcrest.Matchers;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.parosproxy.paros.core.scanner.Alert;\n+import org.parosproxy.paros.network.HttpMessage;\n+import org.zaproxy.zap.extension.selenium.Browser;\n+import org.zaproxy.zap.extension.selenium.SeleniumOptions;\n+import org.zaproxy.zap.testutils.ActiveScannerTestUtils;\n+import org.zaproxy.zap.testutils.NanoServerHandler;\n+\n+public class DomXssScanRuleUnitTest extends ActiveScannerTestUtils<DomXssScanRule> {\n+\n+    @BeforeAll\n+    static void setup() {\n+        WebDriverManager.firefoxdriver().setup();\n+        System.setProperty(\n+                SeleniumOptions.FIREFOX_DRIVER_SYSTEM_PROPERTY,\n+                System.getProperty(\"webdriver.gecko.driver\"));\n+    }\n+\n+    static Stream<String> testBrowsers() {\n+        return Stream.of(\"firefox-headless\", \"chrome-headless\");\n+    }\n+\n+    @AfterAll\n+    static void tidyUp() {\n+        DomXssScanRule.tidyUp();\n+    }\n+\n+    @Override\n+    protected DomXssScanRule createScanner() {\n+        return new DomXssScanRule();\n+    }\n+\n+    @Override\n+    protected void setUpMessages() {\n+        mockMessages(new ExtensionDomXSS());\n+    }\n+\n+    @Test\n+    public void shouldUseDefaultWhenUnsupportedBrowser() throws IOException {\n+        // Given\n+        HttpMessage msg = this.getHttpMessage(\"\");\n+        this.rule.getConfig().setProperty(\"rules.domxss.browserid\", \"opera\");\n+        this.rule.init(msg, this.parent);\n+\n+        // When / Then\n+        assertThat(this.rule.getBrowser(), equalTo(Browser.FIREFOX_HEADLESS));\n+    }\n+\n+    @Test\n+    public void shouldUseDefaultWhenUnknownBrowser() throws IOException {\n+        // Given\n+        HttpMessage msg = this.getHttpMessage(\"\");\n+        this.rule.getConfig().setProperty(\"rules.domxss.browserid\", \"invalid\");\n+        this.rule.init(msg, this.parent);\n+\n+        // When / Then\n+        assertThat(this.rule.getBrowser(), equalTo(Browser.FIREFOX_HEADLESS));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"testBrowsers\")\n+    public void shouldUseCorrectBrowser(String browser) throws IOException {\n+        // Given\n+        HttpMessage msg = this.getHttpMessage(\"\");\n+        // this.rule.setDefaultBrowser(Browser.getBrowserWithId(browser));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzMTM3OQ==", "bodyText": "Worth extracting a class.", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#discussion_r510231379", "createdAt": "2020-10-22T14:57:20Z", "author": {"login": "thc202"}, "path": "addOns/domxss/src/test/java/org/zaproxy/zap/extension/domxss/DomXssScanRuleUnitTest.java", "diffHunk": "@@ -0,0 +1,411 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.domxss;\n+\n+import static fi.iki.elonen.NanoHTTPD.newFixedLengthResponse;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import fi.iki.elonen.NanoHTTPD.IHTTPSession;\n+import fi.iki.elonen.NanoHTTPD.Response;\n+import io.github.bonigarcia.wdm.WebDriverManager;\n+import java.io.IOException;\n+import java.util.stream.Stream;\n+import org.hamcrest.Matchers;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.parosproxy.paros.core.scanner.Alert;\n+import org.parosproxy.paros.network.HttpMessage;\n+import org.zaproxy.zap.extension.selenium.Browser;\n+import org.zaproxy.zap.extension.selenium.SeleniumOptions;\n+import org.zaproxy.zap.testutils.ActiveScannerTestUtils;\n+import org.zaproxy.zap.testutils.NanoServerHandler;\n+\n+public class DomXssScanRuleUnitTest extends ActiveScannerTestUtils<DomXssScanRule> {\n+\n+    @BeforeAll\n+    static void setup() {\n+        WebDriverManager.firefoxdriver().setup();\n+        System.setProperty(\n+                SeleniumOptions.FIREFOX_DRIVER_SYSTEM_PROPERTY,\n+                System.getProperty(\"webdriver.gecko.driver\"));\n+    }\n+\n+    static Stream<String> testBrowsers() {\n+        return Stream.of(\"firefox-headless\", \"chrome-headless\");\n+    }\n+\n+    @AfterAll\n+    static void tidyUp() {\n+        DomXssScanRule.tidyUp();\n+    }\n+\n+    @Override\n+    protected DomXssScanRule createScanner() {\n+        return new DomXssScanRule();\n+    }\n+\n+    @Override\n+    protected void setUpMessages() {\n+        mockMessages(new ExtensionDomXSS());\n+    }\n+\n+    @Test\n+    public void shouldUseDefaultWhenUnsupportedBrowser() throws IOException {\n+        // Given\n+        HttpMessage msg = this.getHttpMessage(\"\");\n+        this.rule.getConfig().setProperty(\"rules.domxss.browserid\", \"opera\");\n+        this.rule.init(msg, this.parent);\n+\n+        // When / Then\n+        assertThat(this.rule.getBrowser(), equalTo(Browser.FIREFOX_HEADLESS));\n+    }\n+\n+    @Test\n+    public void shouldUseDefaultWhenUnknownBrowser() throws IOException {\n+        // Given\n+        HttpMessage msg = this.getHttpMessage(\"\");\n+        this.rule.getConfig().setProperty(\"rules.domxss.browserid\", \"invalid\");\n+        this.rule.init(msg, this.parent);\n+\n+        // When / Then\n+        assertThat(this.rule.getBrowser(), equalTo(Browser.FIREFOX_HEADLESS));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"testBrowsers\")\n+    public void shouldUseCorrectBrowser(String browser) throws IOException {\n+        // Given\n+        HttpMessage msg = this.getHttpMessage(\"\");\n+        // this.rule.setDefaultBrowser(Browser.getBrowserWithId(browser));\n+        this.rule.getConfig().setProperty(\"rules.domxss.browserid\", browser);\n+        this.rule.init(msg, this.parent);\n+\n+        // When / Then\n+        assertThat(this.rule.getBrowser(), equalTo(Browser.getBrowserWithId(browser)));\n+    }\n+\n+    /** Test based on http://public-firing-range.appspot.com/address/location.hash/assign */\n+    @ParameterizedTest\n+    @MethodSource(\"testBrowsers\")\n+    public void shouldReportXssInLocationHashAssign(String browser)\n+            throws NullPointerException, IOException {\n+        // Given\n+        String test = \"/shouldReportXssInLocationHashAssign/\";\n+\n+        this.nano.addHandler(\n+                new NanoServerHandler(test) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda"}, "originalPosition": 117}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "677246beeab171f3c7bf74e3a15c8d3151136fda", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/677246beeab171f3c7bf74e3a15c8d3151136fda", "committedDate": "2020-10-13T10:15:28Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}, "afterCommit": {"oid": "a2d6ccf8d8e0371201658b061f0d77af491f7ea7", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/a2d6ccf8d8e0371201658b061f0d77af491f7ea7", "committedDate": "2020-10-23T16:23:22Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2d6ccf8d8e0371201658b061f0d77af491f7ea7", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/a2d6ccf8d8e0371201658b061f0d77af491f7ea7", "committedDate": "2020-10-23T16:23:22Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}, "afterCommit": {"oid": "940c1f98c54572b1045450f9a89621ec0f245889", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/940c1f98c54572b1045450f9a89621ec0f245889", "committedDate": "2020-10-26T10:39:37Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "940c1f98c54572b1045450f9a89621ec0f245889", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/940c1f98c54572b1045450f9a89621ec0f245889", "committedDate": "2020-10-26T10:39:37Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}, "afterCommit": {"oid": "18f3f2d133a51b5befd92dd33129370a27cc1768", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/18f3f2d133a51b5befd92dd33129370a27cc1768", "committedDate": "2020-10-26T12:02:33Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d5dff97490ec12d60da88dcf319702d55650a82", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/1d5dff97490ec12d60da88dcf319702d55650a82", "committedDate": "2020-10-26T12:57:27Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18f3f2d133a51b5befd92dd33129370a27cc1768", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/18f3f2d133a51b5befd92dd33129370a27cc1768", "committedDate": "2020-10-26T12:02:33Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}, "afterCommit": {"oid": "1d5dff97490ec12d60da88dcf319702d55650a82", "author": {"user": {"login": "psiinon", "name": "Simon Bennetts"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/1d5dff97490ec12d60da88dcf319702d55650a82", "committedDate": "2020-10-26T12:57:27Z", "message": "Support Chrome, Perf improvements, Unit tests and promote to beta\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Nzc5MzA4", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#pullrequestreview-516779308", "createdAt": "2020-10-26T13:34:02Z", "commit": {"oid": "1d5dff97490ec12d60da88dcf319702d55650a82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2ODMwNzYy", "url": "https://github.com/zaproxy/zap-extensions/pull/2570#pullrequestreview-516830762", "createdAt": "2020-10-26T14:25:56Z", "commit": {"oid": "1d5dff97490ec12d60da88dcf319702d55650a82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 315, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}