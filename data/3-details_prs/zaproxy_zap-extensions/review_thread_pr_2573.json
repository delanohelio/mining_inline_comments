{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMjA4ODA3", "number": 2573, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxMToxOFrOEuF-1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxNDo0NFrOEuGDmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzY3OTU2OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/GraphQlParam.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxMToxOFrOHiR3bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxMToxOFrOHiR3bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNjM0OA==", "bodyText": "Core should already log the problem (in any case this should be less than error, since it's bad input not an issue with the code).", "url": "https://github.com/zaproxy/zap-extensions/pull/2573#discussion_r505706348", "createdAt": "2020-10-15T17:11:18Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/GraphQlParam.java", "diffHunk": "@@ -170,6 +171,17 @@ public ArgsTypeOption getArgsType() {\n         return argsType;\n     }\n \n+    // For generating an API action.\n+    public void setArgsType(String argsType) {\n+        try {\n+            setArgsType(ArgsTypeOption.valueOf(argsType.toUpperCase(Locale.ROOT)));\n+        } catch (IllegalArgumentException e) {\n+            LOG.error('\"' + argsType + \"\\\" is not a valid Arguments Specification Type.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1243146bd5b1d374ffc790220c61e4fd705d490e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzY3OTg3OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/GraphQlParam.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxMToyMlrOHiR3nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxMToyMlrOHiR3nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNjM5Nw==", "bodyText": "It should throw as ApiException, otherwise this will be handled as an internal error.", "url": "https://github.com/zaproxy/zap-extensions/pull/2573#discussion_r505706397", "createdAt": "2020-10-15T17:11:22Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/GraphQlParam.java", "diffHunk": "@@ -170,6 +171,17 @@ public ArgsTypeOption getArgsType() {\n         return argsType;\n     }\n \n+    // For generating an API action.\n+    public void setArgsType(String argsType) {\n+        try {\n+            setArgsType(ArgsTypeOption.valueOf(argsType.toUpperCase(Locale.ROOT)));\n+        } catch (IllegalArgumentException e) {\n+            LOG.error('\"' + argsType + \"\\\" is not a valid Arguments Specification Type.\");\n+            // Rethrow for API.\n+            throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1243146bd5b1d374ffc790220c61e4fd705d490e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzY4MjI4OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/GraphQlParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxMjowMFrOHiR5Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxMjowMFrOHiR5Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNjc3OA==", "bodyText": "I'd suggest syncGeneration (or other variation), it's more clear what it is for.", "url": "https://github.com/zaproxy/zap-extensions/pull/2573#discussion_r505706778", "createdAt": "2020-10-15T17:12:00Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/GraphQlParser.java", "diffHunk": "@@ -50,6 +50,7 @@\n     private final ExtensionGraphQl extensionGraphQl =\n             Control.getSingleton().getExtensionLoader().getExtension(ExtensionGraphQl.class);\n     private final GraphQlParam param = extensionGraphQl.getParam();\n+    private boolean originApi;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1243146bd5b1d374ffc790220c61e4fd705d490e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzY4NTE5OnYy", "diffSide": "LEFT", "path": "addOns/graphql/src/main/javahelp/org/zaproxy/addon/graphql/resources/help/contents/graphql.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxMjo0OVrOHiR69A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToyOTo0OFrOHiW3XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNzI1Mg==", "bodyText": "Isn't this true? We might need to change the command line then, the import should be synchronous as well.", "url": "https://github.com/zaproxy/zap-extensions/pull/2573#discussion_r505707252", "createdAt": "2020-10-15T17:12:49Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/javahelp/org/zaproxy/addon/graphql/resources/help/contents/graphql.html", "diffHunk": "@@ -47,8 +64,6 @@ <H2>Command Line</H2>\n <li>-graphqlendurl &lt;url&gt;  : Sets the Endpoint URL</li>\n </ul>\n \n-The definitions will be imported synchronously and any warnings will be displayed on the command line.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1243146bd5b1d374ffc790220c61e4fd705d490e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4ODI1Mg==", "bodyText": "At least when in command line mode, if there's GUI it should still be async.", "url": "https://github.com/zaproxy/zap-extensions/pull/2573#discussion_r505788252", "createdAt": "2020-10-15T19:29:48Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/javahelp/org/zaproxy/addon/graphql/resources/help/contents/graphql.html", "diffHunk": "@@ -47,8 +64,6 @@ <H2>Command Line</H2>\n <li>-graphqlendurl &lt;url&gt;  : Sets the Endpoint URL</li>\n </ul>\n \n-The definitions will be imported synchronously and any warnings will be displayed on the command line.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNzI1Mg=="}, "originalCommit": {"oid": "1243146bd5b1d374ffc790220c61e4fd705d490e"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzY4NzI2OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/zapHomeFiles/scripts/scripts/variant/GraphQL Support.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxMzoyNVrOHiR8PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxMzoyNVrOHiR8PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNzU4MA==", "bodyText": "The null check needs to be in the left?", "url": "https://github.com/zaproxy/zap-extensions/pull/2573#discussion_r505707580", "createdAt": "2020-10-15T17:13:25Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/zapHomeFiles/scripts/scripts/variant/GraphQL Support.js", "diffHunk": "@@ -10,7 +10,8 @@ function getQuery(msg){\n \tvar query;\n \t\n \tif (header.getMethod() == \"POST\") {\n-\t\tif (header.getHeader(\"Content-Type\").contains(\"application/json\")) {\n+\t\tvar contentTypeHeader = header.getHeader(\"Content-Type\");\n+\t\tif (contentTypeHeader.contains(\"application/json\") || contentTypeHeader == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1243146bd5b1d374ffc790220c61e4fd705d490e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzY5MTc2OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/zapHomeFiles/scripts/scripts/variant/GraphQL Support.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzoxNDo0NFrOHiR_Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTozMDozNFrOHiW47w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwODM1NA==", "bodyText": "'' \u2192 [] ?", "url": "https://github.com/zaproxy/zap-extensions/pull/2573#discussion_r505708354", "createdAt": "2020-10-15T17:14:44Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/zapHomeFiles/scripts/scripts/variant/GraphQL Support.js", "diffHunk": "@@ -96,11 +98,11 @@ function getLeafName(helper, nodeName, msg) {\n function getTreePath(helper, msg) {\n \tvar query = getQuery(msg);\n \tif (query == null) {\n-\t\tprint(\"  not GraphQL\");\n+\t\t// print(\"  not GraphQL\");\n \t\treturn null;\t\n \t}\n \tvar uri = msg.getRequestHeader().getURI();\n-\tvar path = uri.getPath().split('/');\n+\tvar path = uri.getPath() != null ? uri.getPath().split('/') : '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1243146bd5b1d374ffc790220c61e4fd705d490e"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2MDIxOA==", "bodyText": "path.length will return zero in either case but [] does seem more appropriate.", "url": "https://github.com/zaproxy/zap-extensions/pull/2573#discussion_r505760218", "createdAt": "2020-10-15T18:38:04Z", "author": {"login": "ricekot"}, "path": "addOns/graphql/src/main/zapHomeFiles/scripts/scripts/variant/GraphQL Support.js", "diffHunk": "@@ -96,11 +98,11 @@ function getLeafName(helper, nodeName, msg) {\n function getTreePath(helper, msg) {\n \tvar query = getQuery(msg);\n \tif (query == null) {\n-\t\tprint(\"  not GraphQL\");\n+\t\t// print(\"  not GraphQL\");\n \t\treturn null;\t\n \t}\n \tvar uri = msg.getRequestHeader().getURI();\n-\tvar path = uri.getPath().split('/');\n+\tvar path = uri.getPath() != null ? uri.getPath().split('/') : '';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwODM1NA=="}, "originalCommit": {"oid": "1243146bd5b1d374ffc790220c61e4fd705d490e"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4ODY1NQ==", "bodyText": "Right, was more to have the same type.", "url": "https://github.com/zaproxy/zap-extensions/pull/2573#discussion_r505788655", "createdAt": "2020-10-15T19:30:34Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/zapHomeFiles/scripts/scripts/variant/GraphQL Support.js", "diffHunk": "@@ -96,11 +98,11 @@ function getLeafName(helper, nodeName, msg) {\n function getTreePath(helper, msg) {\n \tvar query = getQuery(msg);\n \tif (query == null) {\n-\t\tprint(\"  not GraphQL\");\n+\t\t// print(\"  not GraphQL\");\n \t\treturn null;\t\n \t}\n \tvar uri = msg.getRequestHeader().getURI();\n-\tvar path = uri.getPath().split('/');\n+\tvar path = uri.getPath() != null ? uri.getPath().split('/') : '';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwODM1NA=="}, "originalCommit": {"oid": "1243146bd5b1d374ffc790220c61e4fd705d490e"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 681, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}