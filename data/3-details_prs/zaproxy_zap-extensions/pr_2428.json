{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4ODUwNDEy", "number": 2428, "title": "wappalyzer: Persist enable state", "bodyText": "ExtensionWappalyzer - Add necessary variables and functionality to handle enable state.\nTechPanel - The enable toggle is associate with the param (enable state).\nWappalyzerParam - New class extending AbstractParam to handle the enable state.\nwappalyzer.html - Updated help content to contain a short bit about the toggle button and persistence.\nCHANGELOG - Added change entry.\n\nSigned-off-by: kingthorin kingthorin@users.noreply.github.com", "createdAt": "2020-06-05T23:39:49Z", "url": "https://github.com/zaproxy/zap-extensions/pull/2428", "merged": true, "mergeCommit": {"oid": "6ad516c78b2a6ae6f36b0970feed1d39fd36dcae"}, "closed": true, "closedAt": "2020-06-09T13:01:33Z", "author": {"login": "kingthorin"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABco6-B7ABqjM0MTY0MTU5MzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpkrzKAFqTQyNzExODkxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "208a35411cafe69289e3075aacdfa3a6a88e2c8f", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/208a35411cafe69289e3075aacdfa3a6a88e2c8f", "committedDate": "2020-06-05T23:38:25Z", "message": "wappalyzer: Persist enable state\n\n* ExtensionWappalyzer - Add necessary variables and functionality to\nhandle enable state.\n* TechPanel - The enable toggle is associate with the param (enable\nstate).\n* WappalyzerParam - New class extending AbstractParam to handle the\nenable state.\n* wappalyzer.html - Updated help content to contain a short bit about\nthe toggle button and persistence.\n* CHANGELOG - Added change entry.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}, "afterCommit": {"oid": "ca1a17bc61b32dca823c80193454b32cb93cc70d", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/ca1a17bc61b32dca823c80193454b32cb93cc70d", "committedDate": "2020-06-07T12:25:04Z", "message": "wappalyzer: Persist enable state\n\n* ExtensionWappalyzer - Add necessary variables and functionality to\nhandle enable state.\n* TechPanel - The enable toggle is associate with the param (enable\nstate).\n* WappalyzerParam - New class extending AbstractParam to handle the\nenable state.\n* wappalyzer.html - Updated help content to contain a short bit about\nthe toggle button and persistence.\n* CHANGELOG - Added change entry.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MzEzMDEw", "url": "https://github.com/zaproxy/zap-extensions/pull/2428#pullrequestreview-426313010", "createdAt": "2020-06-08T14:42:56Z", "commit": {"oid": "ca1a17bc61b32dca823c80193454b32cb93cc70d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2OTcyMDAy", "url": "https://github.com/zaproxy/zap-extensions/pull/2428#pullrequestreview-426972002", "createdAt": "2020-06-09T09:44:36Z", "commit": {"oid": "ca1a17bc61b32dca823c80193454b32cb93cc70d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTo0NDozNlrOGhBj2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTo0NDo1NVrOGhBkqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MTc1Mg==", "bodyText": "The config should not be explicitly saved (it already is when ZAP shuts down).", "url": "https://github.com/zaproxy/zap-extensions/pull/2428#discussion_r437281752", "createdAt": "2020-06-09T09:44:36Z", "author": {"login": "thc202"}, "path": "addOns/wappalyzer/src/main/java/org/zaproxy/zap/extension/wappalyzer/ExtensionWappalyzer.java", "diffHunk": "@@ -138,6 +144,34 @@ public void hook(ExtensionHook extensionHook) {\n         extPScan.addPassiveScanner(passiveScanner);\n     }\n \n+    @Override\n+    public void optionsLoaded() {\n+        super.optionsLoaded();\n+\n+        setWappalyzer(wappalyzerParam.isEnabled());\n+    }\n+\n+    void setWappalyzer(boolean enabled) {\n+        if (this.enabled == enabled) {\n+            return;\n+        }\n+        this.enabled = enabled;\n+\n+        wappalyzerParam.setEnabled(enabled);\n+        getPassiveScanner().setEnabled(enabled);\n+        try {\n+            wappalyzerParam.getConfig().save();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1a17bc61b32dca823c80193454b32cb93cc70d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MTc3OA==", "bodyText": "Should have view check.", "url": "https://github.com/zaproxy/zap-extensions/pull/2428#discussion_r437281778", "createdAt": "2020-06-09T09:44:39Z", "author": {"login": "thc202"}, "path": "addOns/wappalyzer/src/main/java/org/zaproxy/zap/extension/wappalyzer/ExtensionWappalyzer.java", "diffHunk": "@@ -138,6 +144,34 @@ public void hook(ExtensionHook extensionHook) {\n         extPScan.addPassiveScanner(passiveScanner);\n     }\n \n+    @Override\n+    public void optionsLoaded() {\n+        super.optionsLoaded();\n+\n+        setWappalyzer(wappalyzerParam.isEnabled());\n+    }\n+\n+    void setWappalyzer(boolean enabled) {\n+        if (this.enabled == enabled) {\n+            return;\n+        }\n+        this.enabled = enabled;\n+\n+        wappalyzerParam.setEnabled(enabled);\n+        getPassiveScanner().setEnabled(enabled);\n+        try {\n+            wappalyzerParam.getConfig().save();\n+        } catch (ConfigurationException e) {\n+            logger.error(e.getMessage(), e);\n+        }\n+\n+        getTechPanel().getEnableToggleButton().setSelected(enabled);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1a17bc61b32dca823c80193454b32cb93cc70d"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MTg1Nw==", "bodyText": "Extend VersionedAbstractParam, makes it easier to migrate options if/when needed.", "url": "https://github.com/zaproxy/zap-extensions/pull/2428#discussion_r437281857", "createdAt": "2020-06-09T09:44:46Z", "author": {"login": "thc202"}, "path": "addOns/wappalyzer/src/main/java/org/zaproxy/zap/extension/wappalyzer/WappalyzerParam.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.wappalyzer;\n+\n+import org.apache.commons.configuration.ConversionException;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.common.AbstractParam;\n+\n+public class WappalyzerParam extends AbstractParam {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1a17bc61b32dca823c80193454b32cb93cc70d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MTg4NQ==", "bodyText": "private", "url": "https://github.com/zaproxy/zap-extensions/pull/2428#discussion_r437281885", "createdAt": "2020-06-09T09:44:48Z", "author": {"login": "thc202"}, "path": "addOns/wappalyzer/src/main/java/org/zaproxy/zap/extension/wappalyzer/WappalyzerParam.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.wappalyzer;\n+\n+import org.apache.commons.configuration.ConversionException;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.common.AbstractParam;\n+\n+public class WappalyzerParam extends AbstractParam {\n+\n+    private static final Logger LOGGER = Logger.getLogger(WappalyzerParam.class);\n+    /** The base configuration key for all \"wappalyzer\" configurations. */\n+    private static final String PARAM_BASE_KEY = \"wappalyzer\";\n+    /** The configuration key for the state of wappalyzer functionality. */\n+    private static final String PARAM_WAPPALYZER_STATE = PARAM_BASE_KEY + \".enabled\";\n+\n+    private static final boolean PARAM_WAPPALYZER_STATE_DEFAULT_VALUE = true;\n+\n+    boolean enabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1a17bc61b32dca823c80193454b32cb93cc70d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MTkxOA==", "bodyText": "Could use AbstractParam#getBoolean(String, boolean) which already handles conversion issues.", "url": "https://github.com/zaproxy/zap-extensions/pull/2428#discussion_r437281918", "createdAt": "2020-06-09T09:44:51Z", "author": {"login": "thc202"}, "path": "addOns/wappalyzer/src/main/java/org/zaproxy/zap/extension/wappalyzer/WappalyzerParam.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.wappalyzer;\n+\n+import org.apache.commons.configuration.ConversionException;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.common.AbstractParam;\n+\n+public class WappalyzerParam extends AbstractParam {\n+\n+    private static final Logger LOGGER = Logger.getLogger(WappalyzerParam.class);\n+    /** The base configuration key for all \"wappalyzer\" configurations. */\n+    private static final String PARAM_BASE_KEY = \"wappalyzer\";\n+    /** The configuration key for the state of wappalyzer functionality. */\n+    private static final String PARAM_WAPPALYZER_STATE = PARAM_BASE_KEY + \".enabled\";\n+\n+    private static final boolean PARAM_WAPPALYZER_STATE_DEFAULT_VALUE = true;\n+\n+    boolean enabled;\n+\n+    @Override\n+    protected void parse() {\n+        try {\n+            enabled =\n+                    getConfig()\n+                            .getBoolean(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1a17bc61b32dca823c80193454b32cb93cc70d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MTk2Mg==", "bodyText": "Inline in the above method?", "url": "https://github.com/zaproxy/zap-extensions/pull/2428#discussion_r437281962", "createdAt": "2020-06-09T09:44:55Z", "author": {"login": "thc202"}, "path": "addOns/wappalyzer/src/main/java/org/zaproxy/zap/extension/wappalyzer/WappalyzerParam.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.wappalyzer;\n+\n+import org.apache.commons.configuration.ConversionException;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.common.AbstractParam;\n+\n+public class WappalyzerParam extends AbstractParam {\n+\n+    private static final Logger LOGGER = Logger.getLogger(WappalyzerParam.class);\n+    /** The base configuration key for all \"wappalyzer\" configurations. */\n+    private static final String PARAM_BASE_KEY = \"wappalyzer\";\n+    /** The configuration key for the state of wappalyzer functionality. */\n+    private static final String PARAM_WAPPALYZER_STATE = PARAM_BASE_KEY + \".enabled\";\n+\n+    private static final boolean PARAM_WAPPALYZER_STATE_DEFAULT_VALUE = true;\n+\n+    boolean enabled;\n+\n+    @Override\n+    protected void parse() {\n+        try {\n+            enabled =\n+                    getConfig()\n+                            .getBoolean(\n+                                    PARAM_WAPPALYZER_STATE, PARAM_WAPPALYZER_STATE_DEFAULT_VALUE);\n+        } catch (ConversionException e) {\n+            LOGGER.error(\"Error while loading the wappalyzer state: \" + e.getMessage(), e);\n+        }\n+    }\n+\n+    public boolean isEnabled() {\n+        return enabled;\n+    }\n+\n+    public void setEnabled(boolean enabled) {\n+        if (this.enabled != enabled) {\n+            this.enabled = enabled;\n+\n+            saveWappalyzerStateParam();\n+        }\n+    }\n+\n+    private void saveWappalyzerStateParam() {\n+        getConfig().setProperty(PARAM_WAPPALYZER_STATE, Boolean.valueOf(enabled));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1a17bc61b32dca823c80193454b32cb93cc70d"}, "originalPosition": 63}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca1a17bc61b32dca823c80193454b32cb93cc70d", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/ca1a17bc61b32dca823c80193454b32cb93cc70d", "committedDate": "2020-06-07T12:25:04Z", "message": "wappalyzer: Persist enable state\n\n* ExtensionWappalyzer - Add necessary variables and functionality to\nhandle enable state.\n* TechPanel - The enable toggle is associate with the param (enable\nstate).\n* WappalyzerParam - New class extending AbstractParam to handle the\nenable state.\n* wappalyzer.html - Updated help content to contain a short bit about\nthe toggle button and persistence.\n* CHANGELOG - Added change entry.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}, "afterCommit": {"oid": "12bcb93182d7a4704995c15314f7709dc000dab0", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/12bcb93182d7a4704995c15314f7709dc000dab0", "committedDate": "2020-06-09T11:26:25Z", "message": "wappalyzer: Persist enable state\n\n* ExtensionWappalyzer - Add necessary variables and functionality to\nhandle enable state.\n* TechPanel - The enable toggle is associate with the param (enable\nstate).\n* WappalyzerParam - New class extending AbstractParam to handle the\nenable state.\n* wappalyzer.html - Updated help content to contain a short bit about\nthe toggle button and persistence.\n* CHANGELOG - Added change entry.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb9f155163d3ffbd2dfdf58ff8e9b7ce2c3350fe", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/fb9f155163d3ffbd2dfdf58ff8e9b7ce2c3350fe", "committedDate": "2020-06-09T11:49:28Z", "message": "wappalyzer: Persist enable state\n\n* ExtensionWappalyzer - Add necessary variables and functionality to\nhandle enable state.\n* TechPanel - The enable toggle is associate with the param (enable\nstate).\n* WappalyzerParam - New class extending AbstractParam to handle the\nenable state.\n* wappalyzer.html - Updated help content to contain a short bit about\nthe toggle button and persistence.\n* CHANGELOG - Added change entry.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12bcb93182d7a4704995c15314f7709dc000dab0", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/12bcb93182d7a4704995c15314f7709dc000dab0", "committedDate": "2020-06-09T11:26:25Z", "message": "wappalyzer: Persist enable state\n\n* ExtensionWappalyzer - Add necessary variables and functionality to\nhandle enable state.\n* TechPanel - The enable toggle is associate with the param (enable\nstate).\n* WappalyzerParam - New class extending AbstractParam to handle the\nenable state.\n* wappalyzer.html - Updated help content to contain a short bit about\nthe toggle button and persistence.\n* CHANGELOG - Added change entry.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}, "afterCommit": {"oid": "fb9f155163d3ffbd2dfdf58ff8e9b7ce2c3350fe", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/fb9f155163d3ffbd2dfdf58ff8e9b7ce2c3350fe", "committedDate": "2020-06-09T11:49:28Z", "message": "wappalyzer: Persist enable state\n\n* ExtensionWappalyzer - Add necessary variables and functionality to\nhandle enable state.\n* TechPanel - The enable toggle is associate with the param (enable\nstate).\n* WappalyzerParam - New class extending AbstractParam to handle the\nenable state.\n* wappalyzer.html - Updated help content to contain a short bit about\nthe toggle button and persistence.\n* CHANGELOG - Added change entry.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MTE4OTEw", "url": "https://github.com/zaproxy/zap-extensions/pull/2428#pullrequestreview-427118910", "createdAt": "2020-06-09T13:01:24Z", "commit": {"oid": "fb9f155163d3ffbd2dfdf58ff8e9b7ce2c3350fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 355, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}