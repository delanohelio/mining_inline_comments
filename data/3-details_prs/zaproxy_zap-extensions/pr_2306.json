{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODc5NjU1", "number": 2306, "title": "OpenAPI - Not creating Map structure properly #5863", "bodyText": "Created a new MapGenerator and added it to Generators class.\nCreated Elements.java which holds some constants as I felt that BodyGenerator (Element, SYNTAX, FORMSYNTAX) were meant to do this but they are class private and other places could have been using this values.\nDataGenerator\n\nChanged the isSupport implementation to check for *Schema types rather than looking to the map because adding map type and object type to the map would sound strange as there isn't a default value for them.\nRemoved LOG variable from DataGenerator as it was not being used.\nCreated isMap, isArray and getGenerator\n\n\nOpenApi_defn_map.yaml\n\nDefinitions for Map structures: (String, String), (String, Integer), (String, Boolean),(String, Object)\n\n\nBodyGeneratorUnitTest\n\nAdded tests to assert the Map structures described above.", "createdAt": "2020-02-13T13:51:55Z", "url": "https://github.com/zaproxy/zap-extensions/pull/2306", "merged": true, "mergeCommit": {"oid": "ce1f7c1e397785d886305d4da892b891a7409d05"}, "closed": true, "closedAt": "2020-03-06T23:50:17Z", "author": {"login": "josehenriqueventura"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD8L6LAFqTM1ODI4MTA2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLJBBvgFqTM3MDY5MTE5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MjgxMDY3", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#pullrequestreview-358281067", "createdAt": "2020-02-13T14:55:10Z", "commit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MzUzNDk2", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#pullrequestreview-359353496", "createdAt": "2020-02-15T16:27:43Z", "commit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyNzo0M1rOFqPqcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyOTo1NlrOFqPq5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTEzOA==", "bodyText": "I'd suggest test them in alphabetic order, easier to read.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841138", "createdAt": "2020-02-15T16:27:43Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -49,14 +52,17 @@ public DataGenerator(Generators generators) {\n                             put(\"number\", \"1.2\");\n                             put(\"string\", \"\\\"John Doe\\\"\");\n                             put(\"boolean\", \"true\");\n-                            put(\"array\", \"\");\n-                            put(\"file\", \"\\u0800\");\n-                            put(\"ref\", \"ref\");\n                         }\n                     });\n \n-    public boolean isSupported(String type) {\n-        return TYPES.get(type) != null;\n+    public boolean isSupported(Schema<?> schema) {\n+        return schema instanceof IntegerSchema", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTE0NQ==", "bodyText": "The else is unnecessary, the above returns (same for the following else).", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841145", "createdAt": "2020-02-15T16:27:48Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -117,12 +123,15 @@ private String generateArrayValue(String name, Parameter parameter) {\n     }\n \n     public String generateBodyValue(String name, Schema<?> property) {\n-        if (isArray(property.getType())) {\n+        if (isArray(property)) {\n             return generators\n                     .getArrayGenerator()\n                     .generate(name, (ArraySchema) property, \"csv\", false);\n+        } else if (isMap(property)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw==", "bodyText": "static (same for isMap).", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841217", "createdAt": "2020-02-15T16:29:09Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -202,11 +211,23 @@ public boolean isArray(String type) {\n         return \"array\".equals(type);\n     }\n \n+    public boolean isArray(Schema<?> schema) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIyNQ==", "bodyText": "The are could be removed.\nits \u2192 their.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841225", "createdAt": "2020-02-15T16:29:20Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/MapGenerator.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.generators;\n+\n+import static org.zaproxy.zap.extension.openapi.utils.Element.Json.INNER_SEPARATOR;\n+import static org.zaproxy.zap.extension.openapi.utils.Element.Json.OBJECT_BEGIN;\n+import static org.zaproxy.zap.extension.openapi.utils.Element.Json.OBJECT_END;\n+import static org.zaproxy.zap.extension.openapi.utils.Element.OpenApi.STRING;\n+\n+import io.swagger.v3.oas.models.media.BooleanSchema;\n+import io.swagger.v3.oas.models.media.IntegerSchema;\n+import io.swagger.v3.oas.models.media.NumberSchema;\n+import io.swagger.v3.oas.models.media.ObjectSchema;\n+import io.swagger.v3.oas.models.media.Schema;\n+import io.swagger.v3.oas.models.media.StringSchema;\n+import java.util.Map;\n+\n+public class MapGenerator {\n+\n+    private BodyGenerator bodyGenerator;\n+\n+    public MapGenerator(DataGenerator dataGenerator) {\n+        this.bodyGenerator = dataGenerator.getGenerators().getBodyGenerator();\n+    }\n+\n+    /**\n+     * @param types are the data types supported with its corresponding default values", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI0Nw==", "bodyText": "This belongs to the generators(?).", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841247", "createdAt": "2020-02-15T16:29:48Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI1MQ==", "bodyText": "Should be an Enum (same for following classes).", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841251", "createdAt": "2020-02-15T16:29:53Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;\n+\n+public final class Element {\n+\n+    private Element() {}\n+\n+    public static class Json {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI1Mw==", "bodyText": "Type or OpenApiType.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841253", "createdAt": "2020-02-15T16:29:56Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;\n+\n+public final class Element {\n+\n+    private Element() {}\n+\n+    public static class Json {\n+\n+        private Json() {}\n+\n+        public static final String OBJECT_BEGIN = \"{\";\n+        public static final String OBJECT_END = \"}\";\n+        public static final String ARRAY_BEGIN = \"[\";\n+        public static final String ARRAY_END = \"]\";\n+        public static final String PROPERTY_CONTAINER = \"\\\"\";\n+        public static final String INNER_SEPARATOR = \":\";\n+        public static final String OUTER_SEPARATOR = \",\";\n+    }\n+\n+    public static class OpenApi {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6", "author": {"user": {"login": "josehenriqueventura", "name": "Jose Henrique Ventura"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/d74e9816546eb1b954d86b39301d6ca4c04e1ca6", "committedDate": "2020-02-13T13:45:40Z", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* Created a new MapGenerator and added it to Generators class.\n* Created Elements.java which holds some constants as I felt that BodyGenerator (Element, SYNTAX, FORMSYNTAX) were meant to do this but they are class private and other places could have been using this values.\n* DataGenerator\n** Changed the isSupport implementation to check for *Schema types rather than looking to the map because adding map type and object type to the map would sound strange as there isn't a default value for them.\n** Removed LOG variable from DataGenerator as it was not being used.\n** Created isMap, isArray and getGenerator\n* OpenApi_defn_map.yaml\n** Definistions for Map structures: (String, String), (String, Integer), (String, Boolean),(String, Object)\n* BodyGeneratorUnitTest\n** Added tests to assert the Map structures described above."}, "afterCommit": {"oid": "2c46e4e87ea019f079839756ff1308fa8b5d722e", "author": {"user": {"login": "josehenriqueventura", "name": "Jose Henrique Ventura"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/2c46e4e87ea019f079839756ff1308fa8b5d722e", "committedDate": "2020-02-16T17:52:04Z", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* Created a new MapGenerator and added it to Generators class.\n* Created Elements.java which holds some constants as I felt that BodyGenerator (Element, SYNTAX, FORMSYNTAX) were meant to do this but they are class private and other places could have been using this values.\n* DataGenerator\n** Changed the isSupport implementation to check for *Schema types rather than looking to the map because adding map type and object type to the map would sound strange as there isn't a default value for them.\n** Removed LOG variable from DataGenerator as it was not being used.\n** Created isMap, isArray and getGenerators\n* OpenApi_defn_map.yaml\n** Definitions for Map structures: (String, String), (String, Integer), (String, Boolean),(String, Object)\n* BodyGeneratorUnitTest\n** Added tests to assert the Map structures described above."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODY2OTQ0", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#pullrequestreview-367866944", "createdAt": "2020-03-03T10:35:13Z", "commit": {"oid": "2dd4aa2a12ff23e9a984b3ed6a543e12894501cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDozNToxM1rOFxAYig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDozNToxM1rOFxAYig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkzMDgyNg==", "bodyText": "This and Form could override toString() (instead of providing syntax()), less verbose when concatenating them.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386930826", "createdAt": "2020-03-03T10:35:13Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/Element.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.generators;\n+\n+public class Element {\n+\n+    public enum Json {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd4aa2a12ff23e9a984b3ed6a543e12894501cb"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b88975e63eaa08b2ec213b412575284468a7c286", "author": {"user": {"login": "josehenriqueventura", "name": "Jose Henrique Ventura"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/b88975e63eaa08b2ec213b412575284468a7c286", "committedDate": "2020-03-06T11:35:01Z", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* Created a new MapGenerator and added it to Generators class.\n* Created Elements.java which holds some constants as I felt that BodyGenerator (Element, SYNTAX, FORMSYNTAX) were meant to do this but they are class private and other places could have been using this values.\n* DataGenerator\n** Changed the isSupport implementation to check for *Schema types rather than looking to the map because adding map type and object type to the map would sound strange as there isn't a default value for them.\n** Removed LOG variable from DataGenerator as it was not being used.\n** Created isMap, isArray and getGenerators\n* OpenApi_defn_map.yaml\n** Definitions for Map structures: (String, String), (String, Integer), (String, Boolean),(String, Object)\n* BodyGeneratorUnitTest\n** Added tests to assert the Map structures described above."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff7367feab6d9ffa55c5f1e4758afe78a2c8b8c0", "author": {"user": {"login": "josehenriqueventura", "name": "Jose Henrique Ventura"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/ff7367feab6d9ffa55c5f1e4758afe78a2c8b8c0", "committedDate": "2020-03-06T11:35:01Z", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* DataGenerator#isSupported\n** Changed the order of schema types alphabetically.\n** Made isArray and isMap private and static.\n\n* Element\n** Moved from openapi/utils to openapi/generators\n** Also, transformed the inner classes into enums.\n\n* MapGenerator\n** Applied the new Element syntax on generate method.\n\nResolve zaproxy/zaproxy#5863."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2d5f0bec5dbf35352289cd711c6b53242633f1d", "author": {"user": {"login": "josehenriqueventura", "name": "Jose Henrique Ventura"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/c2d5f0bec5dbf35352289cd711c6b53242633f1d", "committedDate": "2020-03-06T11:35:01Z", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* Element#Json and Element#Form\n** Replaced syntax method by toString method.\n\n* MapGenerator\n** Removed the syntax() method usage\n\nResolve zaproxy/zaproxy#5863."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15792e54e5749a27a193eaa9d1b0574b699d666b", "author": {"user": {"login": "josehenriqueventura", "name": "Jose Henrique Ventura"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/15792e54e5749a27a193eaa9d1b0574b699d666b", "committedDate": "2020-03-06T11:35:01Z", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* DataGenerator.java\n** Removed the unnecessary else\n\n* MapGenerator\n** Fixed javadoc\n\nResolve zaproxy/zaproxy#5863."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5514c220b5b1da9f5827375c3d82f7736661a5e", "author": {"user": {"login": "josehenriqueventura", "name": "Jose Henrique Ventura"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/d5514c220b5b1da9f5827375c3d82f7736661a5e", "committedDate": "2020-03-05T13:10:44Z", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* DataGenerator.java\n** Removed the unnecessary else\n\n* MapGenerator\n** Fixed javadoc\n\nResolve zaproxy/zaproxy#5863."}, "afterCommit": {"oid": "15792e54e5749a27a193eaa9d1b0574b699d666b", "author": {"user": {"login": "josehenriqueventura", "name": "Jose Henrique Ventura"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/15792e54e5749a27a193eaa9d1b0574b699d666b", "committedDate": "2020-03-06T11:35:01Z", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* DataGenerator.java\n** Removed the unnecessary else\n\n* MapGenerator\n** Fixed javadoc\n\nResolve zaproxy/zaproxy#5863."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08879f4cc3901f00cce4555ddc3063774ac13f5e", "author": {"user": {"login": "josehenriqueventura", "name": "Jose Henrique Ventura"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/08879f4cc3901f00cce4555ddc3063774ac13f5e", "committedDate": "2020-03-06T11:49:46Z", "message": "* CHANGELOG.md\n** Added Map Structure support for OpenAPI v3.0 (Issue 5863)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjkxMTk3", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#pullrequestreview-370691197", "createdAt": "2020-03-06T23:49:31Z", "commit": {"oid": "08879f4cc3901f00cce4555ddc3063774ac13f5e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 441, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}