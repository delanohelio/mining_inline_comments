{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzcyODI1", "number": 2364, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMTo1N1rOD2IhOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTo1NTowOVrOD5XmzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDg5Mjc1OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/BodyGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMTo1N1rOGL2sOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNzo1ODoyM1rOGL4Z6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzU3OA==", "bodyText": "This should be done before instantiating the above StringBuilder.", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083578", "createdAt": "2020-04-25T15:21:57Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/BodyGenerator.java", "diffHunk": "@@ -100,8 +102,23 @@ public String generate(Schema<?> schema) {\n     }\n \n     private String generateFromArraySchema(ArraySchema schema) {\n+        if (schema.getExample() instanceof String) {\n+            return (String) schema.getExample();\n+        }\n+\n         StringBuilder json = new StringBuilder();\n+\n+        if (schema.getExample() instanceof Iterable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTExMTY1Ng==", "bodyText": "I've now remove the StringBuilder completely (as suggested by IntelliJ) as it unnecessary. (413785c)", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415111656", "createdAt": "2020-04-25T17:58:23Z", "author": {"login": "J12934"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/BodyGenerator.java", "diffHunk": "@@ -100,8 +102,23 @@ public String generate(Schema<?> schema) {\n     }\n \n     private String generateFromArraySchema(ArraySchema schema) {\n+        if (schema.getExample() instanceof String) {\n+            return (String) schema.getExample();\n+        }\n+\n         StringBuilder json = new StringBuilder();\n+\n+        if (schema.getExample() instanceof Iterable) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzU3OA=="}, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDg5Mjg1OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/BodyGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjowMVrOGL2sQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjowMVrOGL2sQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzU4Nw==", "bodyText": "The exception (at least the message) should be included.", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083587", "createdAt": "2020-04-25T15:22:01Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/BodyGenerator.java", "diffHunk": "@@ -100,8 +102,23 @@ public String generate(Schema<?> schema) {\n     }\n \n     private String generateFromArraySchema(ArraySchema schema) {\n+        if (schema.getExample() instanceof String) {\n+            return (String) schema.getExample();\n+        }\n+\n         StringBuilder json = new StringBuilder();\n+\n+        if (schema.getExample() instanceof Iterable) {\n+            try {\n+                return Json.mapper().writeValueAsString(schema.getExample());\n+            } catch (JsonProcessingException e) {\n+                LOG.warn(\n+                        \"Failed to encode Example Object. Falling back to default example generation\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDg5Mjk4OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjowNVrOGL2sUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjowNVrOGL2sUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzYwMQ==", "bodyText": "private static (although could be inlined).", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083601", "createdAt": "2020-04-25T15:22:05Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -203,6 +207,14 @@ public String getEnumValue(Schema<?> schema) {\n         return value;\n     }\n \n+    public boolean hasExample(Schema<?> schema) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDg5MzExOnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjowOVrOGL2sYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjowOVrOGL2sYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzYxNg==", "bodyText": "This seems unnecessary, the getter can be called directly like in BodyGenerator.", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083616", "createdAt": "2020-04-25T15:22:09Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -203,6 +207,14 @@ public String getEnumValue(Schema<?> schema) {\n         return value;\n     }\n \n+    public boolean hasExample(Schema<?> schema) {\n+        return schema.getExample() != null;\n+    }\n+\n+    public Object getExample(Schema<?> schema) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDg5MzE5OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/PathGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjoxNFrOGL2sag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjoxNFrOGL2sag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzYyNg==", "bodyText": "I'd suggest reverting this, it avoids generating a value when not needed (header parameters).", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083626", "createdAt": "2020-04-25T15:22:14Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/PathGenerator.java", "diffHunk": "@@ -38,11 +38,10 @@ public String generateFullPath(OperationModel operationModel) {\n                     continue;\n                 }\n                 String parameterType = parameter.getIn();\n+                String value = dataGenerator.generate(parameter.getName(), parameter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDg5MzI3OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/AbstractServerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjoxOVrOGL2scg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjoxOVrOGL2scg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzYzNA==", "bodyText": "Better remove the example fields than change the tests, these should not test the example logic.", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083634", "createdAt": "2020-04-25T15:22:19Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/AbstractServerTest.java", "diffHunk": "@@ -59,11 +59,11 @@ protected static void checkPetStoreRequests(\n         // Check all of the expected URLs have been accessed and with the right data\n         assertTrue(accessedUrls.containsKey(\"POST \" + baseUrl + \"/pet\"));\n         assertEquals(\n-                \"{\\\"id\\\":10,\\\"category\\\":{\\\"id\\\":10,\\\"name\\\":\\\"John Doe\\\"},\\\"name\\\":\\\"John Doe\\\",\\\"photoUrls\\\":[\\\"John Doe\\\"],\\\"tags\\\":[{\\\"id\\\":10,\\\"name\\\":\\\"John Doe\\\"}],\\\"status\\\":\\\"available\\\"}\",\n+                \"{\\\"id\\\":10,\\\"category\\\":{\\\"id\\\":10,\\\"name\\\":\\\"John Doe\\\"},\\\"name\\\":\\\"doggie\\\",\\\"photoUrls\\\":[\\\"John Doe\\\"],\\\"tags\\\":[{\\\"id\\\":10,\\\"name\\\":\\\"John Doe\\\"}],\\\"status\\\":\\\"available\\\"}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDg5MzQ2OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/v3/BodyGeneratorUnitTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjoyM1rOGL2shQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDowMDoxOVrOGMa9-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzY1Mw==", "bodyText": "FromSchema or InSchema?", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083653", "createdAt": "2020-04-25T15:22:23Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/v3/BodyGeneratorUnitTest.java", "diffHunk": "@@ -301,6 +301,79 @@ public void shouldReadAdditionalMapObject() throws IOException {\n                 request);\n     }\n \n+    @Test\n+    public void shouldUseExampleFromRequest() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEyNTE5Nw==", "bodyText": "Did you mean Request instead of Schema?\nI've renamed the Method to ...InRequest which is more fitting \ud83d\udc4d", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415125197", "createdAt": "2020-04-25T19:14:45Z", "author": {"login": "J12934"}, "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/v3/BodyGeneratorUnitTest.java", "diffHunk": "@@ -301,6 +301,79 @@ public void shouldReadAdditionalMapObject() throws IOException {\n                 request);\n     }\n \n+    @Test\n+    public void shouldUseExampleFromRequest() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzY1Mw=="}, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3MjM5MA==", "bodyText": "I thought that was referring to where the examples were (following tests are named like that), not where they will be used(?). Technically they are all in the request so seems redundant.", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415672390", "createdAt": "2020-04-27T09:52:05Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/v3/BodyGeneratorUnitTest.java", "diffHunk": "@@ -301,6 +301,79 @@ public void shouldReadAdditionalMapObject() throws IOException {\n                 request);\n     }\n \n+    @Test\n+    public void shouldUseExampleFromRequest() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzY1Mw=="}, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3Nzk0Nw==", "bodyText": "Oh yeah that a good point. Removed the part.", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415677947", "createdAt": "2020-04-27T10:00:19Z", "author": {"login": "J12934"}, "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/v3/BodyGeneratorUnitTest.java", "diffHunk": "@@ -301,6 +301,79 @@ public void shouldReadAdditionalMapObject() throws IOException {\n                 request);\n     }\n \n+    @Test\n+    public void shouldUseExampleFromRequest() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzY1Mw=="}, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDg5MzU3OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/v3/OpenApiUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjoyNlrOGL2skQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyMjoyNlrOGL2skQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzY2NQ==", "bodyText": "Debug?", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083665", "createdAt": "2020-04-25T15:22:26Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/v3/OpenApiUnitTest.java", "diffHunk": "@@ -152,6 +152,55 @@ public void handleMessage(HttpMessage message, int initiator) {\n         checkPetStoreRequests(accessedUrls, altHost);\n     }\n \n+    @Test\n+    public void shouldExplorePetStoreYamlWithExamples()\n+            throws NullPointerException, IOException, SwaggerException {\n+        String test = \"/PetStoreYamlExamples/\";\n+        String defnName = \"defn.yaml\";\n+\n+        this.nano.addHandler(\n+                new DefnServerHandler(test, defnName, \"PetStore_defn_with_examples.yaml\"));\n+\n+        Requestor requestor = new Requestor(HttpSender.MANUAL_REQUEST_INITIATOR);\n+        HttpMessage defnMsg = this.getHttpMessage(test + defnName);\n+        SwaggerConverter converter =\n+                new SwaggerConverter(\n+                        requestor.getResponseBody(defnMsg.getRequestHeader().getURI()), null);\n+        // No parsing errors\n+        assertThat(converter.getErrorMessages(), is(empty()));\n+\n+        final Map<String, String> accessedUrls = new HashMap<String, String>();\n+        RequesterListener listener =\n+                new RequesterListener() {\n+                    @Override\n+                    public void handleMessage(HttpMessage message, int initiator) {\n+                        accessedUrls.put(\n+                                message.getRequestHeader().getMethod()\n+                                        + \" \"\n+                                        + message.getRequestHeader().getURI().toString(),\n+                                message.getRequestBody().toString());\n+                    }\n+                };\n+        requestor.addListener(listener);\n+        requestor.run(converter.getRequestModels());\n+\n+        System.out.println(accessedUrls.keySet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDc5Mzk2OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/openapi.gradle.kts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTo0NjozNVrOGQlruw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTo0NjozNVrOGQlruw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0NzgwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    author.set(\"ZAP Dev Team plus Joanna Bona, Nathalie Bouchahine, Artur Grzesica, Mohammad Kamar, Markus Kiss, Michal Materniak, Marcin Spiewak and SDA SE Open Industry Solutions\")\n          \n          \n            \n                    author.set(\"ZAP Dev Team plus Joanna Bona, Nathalie Bouchahine, Artur Grzesica, Mohammad Kamar, Markus Kiss, Michal Materniak, Marcin Spiewak, and SDA SE Open Industry Solutions\")", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r420047803", "createdAt": "2020-05-05T11:46:35Z", "author": {"login": "kingthorin"}, "path": "addOns/openapi/openapi.gradle.kts", "diffHunk": "@@ -9,7 +9,7 @@ zapAddOn {\n     zapVersion.set(\"2.9.0\")\n \n     manifest {\n-        author.set(\"ZAP Dev Team plus Joanna Bona, Nathalie Bouchahine, Artur Grzesica, Mohammad Kamar, Markus Kiss, Michal Materniak and Marcin Spiewak\")\n+        author.set(\"ZAP Dev Team plus Joanna Bona, Nathalie Bouchahine, Artur Grzesica, Mohammad Kamar, Markus Kiss, Michal Materniak, Marcin Spiewak and SDA SE Open Industry Solutions\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9212b49fc99830415285907ff3a87a8b54200ac5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDgxOTM1OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/test/resources/org/zaproxy/zap/extension/openapi/v2/PetStore_defn.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTo1NDoyMFrOGQl7Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTo1NDoyMFrOGQl7Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MTczNQ==", "bodyText": "Is there a problem handling this? Will it fail if a v2 defn with examples is encountered in the wild?", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r420051735", "createdAt": "2020-05-05T11:54:20Z", "author": {"login": "kingthorin"}, "path": "addOns/openapi/src/test/resources/org/zaproxy/zap/extension/openapi/v2/PetStore_defn.json", "diffHunk": "@@ -983,8 +983,7 @@\n                \"$ref\":\"#/definitions/Category\"\n             },\n             \"name\":{\n-               \"type\":\"string\",\n-               \"example\":\"doggie\"\n+               \"type\":\"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9212b49fc99830415285907ff3a87a8b54200ac5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDgyMTg5OnYy", "diffSide": "LEFT", "path": "addOns/openapi/src/test/resources/org/zaproxy/zap/extension/openapi/v2/PetStore_defn.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTo1NTowOVrOGQl8oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTo1NTowOVrOGQl8oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MjEyOA==", "bodyText": "Same comment, can this not be handled gracefully somehow?", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r420052128", "createdAt": "2020-05-05T11:55:09Z", "author": {"login": "kingthorin"}, "path": "addOns/openapi/src/test/resources/org/zaproxy/zap/extension/openapi/v2/PetStore_defn.yaml", "diffHunk": "@@ -667,7 +667,6 @@ definitions:\n         $ref: \"#/definitions/Category\"\n       name:\n         type: \"string\"\n-        example: \"doggie\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9212b49fc99830415285907ff3a87a8b54200ac5"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 719, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}