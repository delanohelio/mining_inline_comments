{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NDkzODg2", "number": 2517, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNjo0ODoyM1rOEYIuXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNjo0ODoyM1rOEYIuXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzQ0MjIxOnYy", "diffSide": "RIGHT", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/XFrameOptionScanRule.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNjo0ODoyM1rOHAT5bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo0Njo1NFrOHAsuRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA4ODA0Nw==", "bodyText": "Do you care that this doesn't account for:\n\n  \n    \n      zap-extensions/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/XFrameOptionScanRule.java\n    \n    \n        Lines 116 to 121\n      in\n      7261748\n    \n    \n    \n    \n\n        \n          \n           int risk = Alert.RISK_MEDIUM; \n        \n\n        \n          \n           String other = \"\"; \n        \n\n        \n          \n           if (this.includedInCsp) { \n        \n\n        \n          \n               risk = Alert.RISK_LOW; \n        \n\n        \n          \n               other = Constant.messages.getString(MESSAGE_PREFIX + \"incInCsp\"); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nIs \"Other Info\" included in the docs?", "url": "https://github.com/zaproxy/zap-extensions/pull/2517#discussion_r470088047", "createdAt": "2020-08-13T16:48:23Z", "author": {"login": "kingthorin"}, "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/XFrameOptionScanRule.java", "diffHunk": "@@ -188,4 +189,23 @@ private String getMetaXFOEvidence(Source source) {\n         }\n         return null;\n     }\n+\n+    public List<Alert> getExampleAlerts() {\n+        List<Alert> alerts = new ArrayList<Alert>();\n+        for (VulnType vulnType : VulnType.values()) {\n+            alerts.add(\n+                    newAlert()\n+                            .setName(getAlertElement(vulnType, \"name\"))\n+                            .setRisk(Alert.RISK_MEDIUM)\n+                            .setConfidence(Alert.CONFIDENCE_MEDIUM)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7261748f7dfc5c4762d272eab880a439707b9778"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA4ODM5Ng==", "bodyText": "Oops I guess this should only be associated with line 199.", "url": "https://github.com/zaproxy/zap-extensions/pull/2517#discussion_r470088396", "createdAt": "2020-08-13T16:49:00Z", "author": {"login": "kingthorin"}, "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/XFrameOptionScanRule.java", "diffHunk": "@@ -188,4 +189,23 @@ private String getMetaXFOEvidence(Source source) {\n         }\n         return null;\n     }\n+\n+    public List<Alert> getExampleAlerts() {\n+        List<Alert> alerts = new ArrayList<Alert>();\n+        for (VulnType vulnType : VulnType.values()) {\n+            alerts.add(\n+                    newAlert()\n+                            .setName(getAlertElement(vulnType, \"name\"))\n+                            .setRisk(Alert.RISK_MEDIUM)\n+                            .setConfidence(Alert.CONFIDENCE_MEDIUM)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA4ODA0Nw=="}, "originalCommit": {"oid": "7261748f7dfc5c4762d272eab880a439707b9778"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5NDc5MA==", "bodyText": "No - they are just example alerts. I dont think we can document every possible variation.", "url": "https://github.com/zaproxy/zap-extensions/pull/2517#discussion_r470494790", "createdAt": "2020-08-14T08:46:54Z", "author": {"login": "psiinon"}, "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/XFrameOptionScanRule.java", "diffHunk": "@@ -188,4 +189,23 @@ private String getMetaXFOEvidence(Source source) {\n         }\n         return null;\n     }\n+\n+    public List<Alert> getExampleAlerts() {\n+        List<Alert> alerts = new ArrayList<Alert>();\n+        for (VulnType vulnType : VulnType.values()) {\n+            alerts.add(\n+                    newAlert()\n+                            .setName(getAlertElement(vulnType, \"name\"))\n+                            .setRisk(Alert.RISK_MEDIUM)\n+                            .setConfidence(Alert.CONFIDENCE_MEDIUM)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA4ODA0Nw=="}, "originalCommit": {"oid": "7261748f7dfc5c4762d272eab880a439707b9778"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 669, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}