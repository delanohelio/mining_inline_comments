{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODc5NjU1", "number": 2306, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyNzo0M1rODgKpXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDozNToxM1rODkmHOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDU1NDUzOnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyNzo0M1rOFqPqcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyNzo0M1rOFqPqcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTEzOA==", "bodyText": "I'd suggest test them in alphabetic order, easier to read.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841138", "createdAt": "2020-02-15T16:27:43Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -49,14 +52,17 @@ public DataGenerator(Generators generators) {\n                             put(\"number\", \"1.2\");\n                             put(\"string\", \"\\\"John Doe\\\"\");\n                             put(\"boolean\", \"true\");\n-                            put(\"array\", \"\");\n-                            put(\"file\", \"\\u0800\");\n-                            put(\"ref\", \"ref\");\n                         }\n                     });\n \n-    public boolean isSupported(String type) {\n-        return TYPES.get(type) != null;\n+    public boolean isSupported(Schema<?> schema) {\n+        return schema instanceof IntegerSchema", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDU1NDU5OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyNzo0OFrOFqPqeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxODoxMjo0OVrOFqUm9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTE0NQ==", "bodyText": "The else is unnecessary, the above returns (same for the following else).", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841145", "createdAt": "2020-02-15T16:27:48Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -117,12 +123,15 @@ private String generateArrayValue(String name, Parameter parameter) {\n     }\n \n     public String generateBodyValue(String name, Schema<?> property) {\n-        if (isArray(property.getType())) {\n+        if (isArray(property)) {\n             return generators\n                     .getArrayGenerator()\n                     .generate(name, (ArraySchema) property, \"csv\", false);\n+        } else if (isMap(property)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NTMyNQ==", "bodyText": "Hi @thc202 , I didn't understand what you are pointing there as I'm seeing three different flows. Could you clarify, please?", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379855325", "createdAt": "2020-02-15T20:50:56Z", "author": {"login": "josehenriqueventura"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -117,12 +123,15 @@ private String generateArrayValue(String name, Parameter parameter) {\n     }\n \n     public String generateBodyValue(String name, Schema<?> property) {\n-        if (isArray(property.getType())) {\n+        if (isArray(property)) {\n             return generators\n                     .getArrayGenerator()\n                     .generate(name, (ArraySchema) property, \"csv\", false);\n+        } else if (isMap(property)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTE0NQ=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1ODA5Mw==", "bodyText": "This is a matter of style, I'm suggesting the following:\nif (isArray(property)) {\n    return generators\n            .getArrayGenerator()\n            .generate(name, (ArraySchema) property, \"csv\", false);\n}\nif (isMap(property)) {\n    return generators.getMapGenerator().generate(TYPES, property);\n}\nreturn generateValue(name, property, false);\nsince the ifs return the elses are unnecessary.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379858093", "createdAt": "2020-02-15T21:45:37Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -117,12 +123,15 @@ private String generateArrayValue(String name, Parameter parameter) {\n     }\n \n     public String generateBodyValue(String name, Schema<?> property) {\n-        if (isArray(property.getType())) {\n+        if (isArray(property)) {\n             return generators\n                     .getArrayGenerator()\n                     .generate(name, (ArraySchema) property, \"csv\", false);\n+        } else if (isMap(property)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTE0NQ=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyMjE2Nw==", "bodyText": "ok", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379922167", "createdAt": "2020-02-16T18:12:49Z", "author": {"login": "josehenriqueventura"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -117,12 +123,15 @@ private String generateArrayValue(String name, Parameter parameter) {\n     }\n \n     public String generateBodyValue(String name, Schema<?> property) {\n-        if (isArray(property.getType())) {\n+        if (isArray(property)) {\n             return generators\n                     .getArrayGenerator()\n                     .generate(name, (ArraySchema) property, \"csv\", false);\n+        } else if (isMap(property)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTE0NQ=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDU1NTA2OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyOTowOVrOFqPqwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTo1MzozMlrOFwkxbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw==", "bodyText": "static (same for isMap).", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841217", "createdAt": "2020-02-15T16:29:09Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -202,11 +211,23 @@ public boolean isArray(String type) {\n         return \"array\".equals(type);\n     }\n \n+    public boolean isArray(Schema<?> schema) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NTIyNA==", "bodyText": "Hi @thc202 , Why those methods need to be static? Could you clarify, please?", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379855224", "createdAt": "2020-02-15T20:48:34Z", "author": {"login": "josehenriqueventura"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -202,11 +211,23 @@ public boolean isArray(String type) {\n         return \"array\".equals(type);\n     }\n \n+    public boolean isArray(Schema<?> schema) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1ODEwNQ==", "bodyText": "Intention/clarity (they should be private also), those methods don't access/need the state of the instance, they are just utility/helper methods.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379858105", "createdAt": "2020-02-15T21:45:47Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -202,11 +211,23 @@ public boolean isArray(String type) {\n         return \"array\".equals(type);\n     }\n \n+    public boolean isArray(Schema<?> schema) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyMTk5NA==", "bodyText": "Agree on to change from public to private because it makes sense but as static and I don't see the reason. The is isArray is used on ArrayGeneratorc class and If we want to treat them as utility/helper methods, I believe they should be moved a new class. What do you think? Just feels weird to have some methods private and static and others as public.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379921994", "createdAt": "2020-02-16T18:10:02Z", "author": {"login": "josehenriqueventura"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -202,11 +211,23 @@ public boolean isArray(String type) {\n         return \"array\".equals(type);\n     }\n \n+    public boolean isArray(Schema<?> schema) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3ODQ0NQ==", "bodyText": "Well, they are already being used as utility/helper methods, being static represents better what they do (i.e. don't access the instance's state).\nI don't see a problem with some being private and others public, if they aren't needed by other classes then private is better than public but I'm ok if they are moved to other class.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386478445", "createdAt": "2020-03-02T15:53:32Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -202,11 +211,23 @@ public boolean isArray(String type) {\n         return \"array\".equals(type);\n     }\n \n+    public boolean isArray(Schema<?> schema) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDU1NTEwOnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/MapGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyOToyMFrOFqPqyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyOToyMFrOFqPqyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIyNQ==", "bodyText": "The are could be removed.\nits \u2192 their.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841225", "createdAt": "2020-02-15T16:29:20Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/MapGenerator.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.generators;\n+\n+import static org.zaproxy.zap.extension.openapi.utils.Element.Json.INNER_SEPARATOR;\n+import static org.zaproxy.zap.extension.openapi.utils.Element.Json.OBJECT_BEGIN;\n+import static org.zaproxy.zap.extension.openapi.utils.Element.Json.OBJECT_END;\n+import static org.zaproxy.zap.extension.openapi.utils.Element.OpenApi.STRING;\n+\n+import io.swagger.v3.oas.models.media.BooleanSchema;\n+import io.swagger.v3.oas.models.media.IntegerSchema;\n+import io.swagger.v3.oas.models.media.NumberSchema;\n+import io.swagger.v3.oas.models.media.ObjectSchema;\n+import io.swagger.v3.oas.models.media.Schema;\n+import io.swagger.v3.oas.models.media.StringSchema;\n+import java.util.Map;\n+\n+public class MapGenerator {\n+\n+    private BodyGenerator bodyGenerator;\n+\n+    public MapGenerator(DataGenerator dataGenerator) {\n+        this.bodyGenerator = dataGenerator.getGenerators().getBodyGenerator();\n+    }\n+\n+    /**\n+     * @param types are the data types supported with its corresponding default values", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDU1NTIyOnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyOTo0OFrOFqPq3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTo1Mzo0OFrOFwkyJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI0Nw==", "bodyText": "This belongs to the generators(?).", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841247", "createdAt": "2020-02-15T16:29:48Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyMjE0Nw==", "bodyText": "Yep, they do belong thinking twice. So, move Element.java to openapi/generators ?", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379922147", "createdAt": "2020-02-16T18:12:19Z", "author": {"login": "josehenriqueventura"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI0Nw=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3ODYyOA==", "bodyText": "Sounds good.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386478628", "createdAt": "2020-03-02T15:53:48Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI0Nw=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDU1NTI1OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyOTo1M1rOFqPq4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyNzoyMVrOFwsR7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI1MQ==", "bodyText": "Should be an Enum (same for following classes).", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841251", "createdAt": "2020-02-15T16:29:53Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;\n+\n+public final class Element {\n+\n+    private Element() {}\n+\n+    public static class Json {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5MTM1MQ==", "bodyText": "Inner enums are not looking great as I will need a dummy value like this:\npublic enum Element {\n\n    ELEMENT;\n\n    public enum Form {\n        INNER_SEPARATOR(\":\"),\n        OUTER_SEPARATOR(\",\");\n\n        private String syntax;\nWhat do you think?", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386591351", "createdAt": "2020-03-02T19:09:26Z", "author": {"login": "josehenriqueventura"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;\n+\n+public final class Element {\n+\n+    private Element() {}\n+\n+    public static class Json {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI1MQ=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMTQ1NA==", "bodyText": "The Element can be kept as class.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386601454", "createdAt": "2020-03-02T19:27:21Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;\n+\n+public final class Element {\n+\n+    private Element() {}\n+\n+    public static class Json {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI1MQ=="}, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDU1NTI3OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyOTo1NlrOFqPq5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNjoyOTo1NlrOFqPq5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI1Mw==", "bodyText": "Type or OpenApiType.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841253", "createdAt": "2020-02-15T16:29:56Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;\n+\n+public final class Element {\n+\n+    private Element() {}\n+\n+    public static class Json {\n+\n+        private Json() {}\n+\n+        public static final String OBJECT_BEGIN = \"{\";\n+        public static final String OBJECT_END = \"}\";\n+        public static final String ARRAY_BEGIN = \"[\";\n+        public static final String ARRAY_END = \"]\";\n+        public static final String PROPERTY_CONTAINER = \"\\\"\";\n+        public static final String INNER_SEPARATOR = \":\";\n+        public static final String OUTER_SEPARATOR = \",\";\n+    }\n+\n+    public static class OpenApi {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5Njk5NzY4OnYy", "diffSide": "RIGHT", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/Element.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDozNToxM1rOFxAYig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzowODo0NVrOFxFB2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkzMDgyNg==", "bodyText": "This and Form could override toString() (instead of providing syntax()), less verbose when concatenating them.", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386930826", "createdAt": "2020-03-03T10:35:13Z", "author": {"login": "thc202"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/Element.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.generators;\n+\n+public class Element {\n+\n+    public enum Json {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd4aa2a12ff23e9a984b3ed6a543e12894501cb"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwNjkzNg==", "bodyText": "Ah ha! The verbosity thing was what stopped me to create the enum in the first place. I wish I had thought about the toString method before. Good catch =)", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r387006936", "createdAt": "2020-03-03T13:08:45Z", "author": {"login": "josehenriqueventura"}, "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/Element.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.generators;\n+\n+public class Element {\n+\n+    public enum Json {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkzMDgyNg=="}, "originalCommit": {"oid": "2dd4aa2a12ff23e9a984b3ed6a543e12894501cb"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 729, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}