{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNzMwOTc1", "number": 2591, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODowNjowNFrOEzLt_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODowNjowNFrOEzLt_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTA0ODMxOnYy", "diffSide": "RIGHT", "path": "addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireScanRule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODowNjowNFrOHqQQ6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwOTowNTo0NlrOHqSWFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2ODcxNA==", "bodyText": "The types could be removed.", "url": "https://github.com/zaproxy/zap-extensions/pull/2591#discussion_r514068714", "createdAt": "2020-10-29T08:06:04Z", "author": {"login": "thc202"}, "path": "addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireScanRule.java", "diffHunk": "@@ -88,27 +91,39 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n                     otherInfo = otherInfo + result.getOtherinfo();\n                 }\n \n-                newAlert()\n-                        .setRisk(Alert.RISK_MEDIUM)\n-                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                        .setDescription(\n-                                Constant.messages.getString(\n-                                        \"retire.rule.desc\",\n-                                        result.getFilename(),\n-                                        result.getVersion()))\n-                        .setOtherInfo(otherInfo)\n-                        .setReference(getDetails(Result.INFO, result.getInfo()))\n-                        .setSolution(\n-                                Constant.messages.getString(\n-                                        \"retire.rule.soln\", result.getFilename()))\n-                        .setEvidence(result.getEvidence())\n-                        .setCweId(829) // CWE-829: Inclusion of Functionality from Untrusted Control\n-                        // Sphere\n-                        .raise();\n+                buildAlert(result, otherInfo).raise();\n             }\n         }\n     }\n \n+    private AlertBuilder buildAlert(Result result, String otherInfo) {\n+        return newAlert()\n+                .setRisk(Alert.RISK_MEDIUM)\n+                .setConfidence(Alert.CONFIDENCE_MEDIUM)\n+                .setDescription(\n+                        Constant.messages.getString(\n+                                \"retire.rule.desc\", result.getFilename(), result.getVersion()))\n+                .setOtherInfo(otherInfo)\n+                .setReference(getDetails(Result.INFO, result.getInfo()))\n+                .setSolution(Constant.messages.getString(\"retire.rule.soln\", result.getFilename()))\n+                .setEvidence(result.getEvidence())\n+                .setCweId(829); // CWE-829: Inclusion of Functionality from Untrusted Control Sphere\n+    }\n+\n+    public List<Alert> getExampleAlerts() {\n+        List<Alert> alerts = new ArrayList<Alert>();\n+        alerts.add(\n+                buildAlert(\n+                                new Result(\n+                                        \"ExampleLibrary\",\n+                                        \"x.y.z\",\n+                                        Collections.<String, Set<String>>emptyMap(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e28418fc3c18d3ea0c4003f6b904879991746c9e"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEwMjgwNg==", "bodyText": "Done :)", "url": "https://github.com/zaproxy/zap-extensions/pull/2591#discussion_r514102806", "createdAt": "2020-10-29T09:05:46Z", "author": {"login": "psiinon"}, "path": "addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireScanRule.java", "diffHunk": "@@ -88,27 +91,39 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n                     otherInfo = otherInfo + result.getOtherinfo();\n                 }\n \n-                newAlert()\n-                        .setRisk(Alert.RISK_MEDIUM)\n-                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                        .setDescription(\n-                                Constant.messages.getString(\n-                                        \"retire.rule.desc\",\n-                                        result.getFilename(),\n-                                        result.getVersion()))\n-                        .setOtherInfo(otherInfo)\n-                        .setReference(getDetails(Result.INFO, result.getInfo()))\n-                        .setSolution(\n-                                Constant.messages.getString(\n-                                        \"retire.rule.soln\", result.getFilename()))\n-                        .setEvidence(result.getEvidence())\n-                        .setCweId(829) // CWE-829: Inclusion of Functionality from Untrusted Control\n-                        // Sphere\n-                        .raise();\n+                buildAlert(result, otherInfo).raise();\n             }\n         }\n     }\n \n+    private AlertBuilder buildAlert(Result result, String otherInfo) {\n+        return newAlert()\n+                .setRisk(Alert.RISK_MEDIUM)\n+                .setConfidence(Alert.CONFIDENCE_MEDIUM)\n+                .setDescription(\n+                        Constant.messages.getString(\n+                                \"retire.rule.desc\", result.getFilename(), result.getVersion()))\n+                .setOtherInfo(otherInfo)\n+                .setReference(getDetails(Result.INFO, result.getInfo()))\n+                .setSolution(Constant.messages.getString(\"retire.rule.soln\", result.getFilename()))\n+                .setEvidence(result.getEvidence())\n+                .setCweId(829); // CWE-829: Inclusion of Functionality from Untrusted Control Sphere\n+    }\n+\n+    public List<Alert> getExampleAlerts() {\n+        List<Alert> alerts = new ArrayList<Alert>();\n+        alerts.add(\n+                buildAlert(\n+                                new Result(\n+                                        \"ExampleLibrary\",\n+                                        \"x.y.z\",\n+                                        Collections.<String, Set<String>>emptyMap(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2ODcxNA=="}, "originalCommit": {"oid": "e28418fc3c18d3ea0c4003f6b904879991746c9e"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 686, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}