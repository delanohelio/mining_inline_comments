{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTA4ODQ4", "number": 2483, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTozMDo0M1rOELSGKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNzoyMzowOVrOELTUrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjY2MjgwOnYy", "diffSide": "RIGHT", "path": "addOns/ascanrulesBeta/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTozMDo0M1rOGszkgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTozMzo1NlrOGszo5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzNTQ1Nw==", "bodyText": "\"non-success\" throughout?\nAlso a period here would be good.", "url": "https://github.com/zaproxy/zap-extensions/pull/2483#discussion_r449635457", "createdAt": "2020-07-03T15:30:43Z", "author": {"login": "kingthorin"}, "path": "addOns/ascanrulesBeta/CHANGELOG.md", "diffHunk": "@@ -6,6 +6,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n ## Unreleased\n ### Change\n - Maintenance Changes.\n+- Backup File Disclosure: don't raise issues for non success codes unless at LOW threshold", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "336e5c27dca8ba0ae458f7e9b7c4574f09488c3b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzNjU4MA==", "bodyText": "And add issue reference?", "url": "https://github.com/zaproxy/zap-extensions/pull/2483#discussion_r449636580", "createdAt": "2020-07-03T15:33:56Z", "author": {"login": "thc202"}, "path": "addOns/ascanrulesBeta/CHANGELOG.md", "diffHunk": "@@ -6,6 +6,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n ## Unreleased\n ### Change\n - Maintenance Changes.\n+- Backup File Disclosure: don't raise issues for non success codes unless at LOW threshold", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzNTQ1Nw=="}, "originalCommit": {"oid": "336e5c27dca8ba0ae458f7e9b7c4574f09488c3b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjg2MzgzOnYy", "diffSide": "RIGHT", "path": "addOns/ascanrulesBeta/src/main/java/org/zaproxy/zap/extension/ascanrulesBeta/BackupFileDisclosureScanRule.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNzoyMzowOVrOGs1Zfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMDo1ODo0MlrOGtSpIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2NTQwNw==", "bodyText": "I'm sure this is logically correct but it reads awkwardly. If it can be ignored then continue.\nYou should remove the nots (!) from the function and break if it's ignorable?\nWouldn't that seem more like ignoring what's ignorable.", "url": "https://github.com/zaproxy/zap-extensions/pull/2483#discussion_r449665407", "createdAt": "2020-07-03T17:23:09Z", "author": {"login": "kingthorin"}, "path": "addOns/ascanrulesBeta/src/main/java/org/zaproxy/zap/extension/ascanrulesBeta/BackupFileDisclosureScanRule.java", "diffHunk": "@@ -723,6 +724,9 @@ private void findBackupFile(HttpMessage originalMessage) throws Exception {\n                 sendAndReceive(requestmsg, false);\n                 disclosedData = requestmsg.getResponseBody().getBytes();\n                 int requestStatusCode = requestmsg.getResponseHeader().getStatusCode();\n+                if (isIgnorableMessage(requestmsg)) {\n+                    continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ec3ab5ffb7c1e12afa1b47017c8560dc5750258"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA4NDg4Ng==", "bodyText": "I think that would change the way it works and actually stop it working correctly. We dont want to break if the message is ignorable because the time round it might not be.\nHappy to change the name, but not really sure what to :/", "url": "https://github.com/zaproxy/zap-extensions/pull/2483#discussion_r450084886", "createdAt": "2020-07-06T09:05:02Z", "author": {"login": "psiinon"}, "path": "addOns/ascanrulesBeta/src/main/java/org/zaproxy/zap/extension/ascanrulesBeta/BackupFileDisclosureScanRule.java", "diffHunk": "@@ -723,6 +724,9 @@ private void findBackupFile(HttpMessage originalMessage) throws Exception {\n                 sendAndReceive(requestmsg, false);\n                 disclosedData = requestmsg.getResponseBody().getBytes();\n                 int requestStatusCode = requestmsg.getResponseHeader().getStatusCode();\n+                if (isIgnorableMessage(requestmsg)) {\n+                    continue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2NTQwNw=="}, "originalCommit": {"oid": "9ec3ab5ffb7c1e12afa1b47017c8560dc5750258"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE0NDU0NQ==", "bodyText": "have changed to isWithinThreshold :)", "url": "https://github.com/zaproxy/zap-extensions/pull/2483#discussion_r450144545", "createdAt": "2020-07-06T10:58:42Z", "author": {"login": "psiinon"}, "path": "addOns/ascanrulesBeta/src/main/java/org/zaproxy/zap/extension/ascanrulesBeta/BackupFileDisclosureScanRule.java", "diffHunk": "@@ -723,6 +724,9 @@ private void findBackupFile(HttpMessage originalMessage) throws Exception {\n                 sendAndReceive(requestmsg, false);\n                 disclosedData = requestmsg.getResponseBody().getBytes();\n                 int requestStatusCode = requestmsg.getResponseHeader().getStatusCode();\n+                if (isIgnorableMessage(requestmsg)) {\n+                    continue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2NTQwNw=="}, "originalCommit": {"oid": "9ec3ab5ffb7c1e12afa1b47017c8560dc5750258"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 709, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}