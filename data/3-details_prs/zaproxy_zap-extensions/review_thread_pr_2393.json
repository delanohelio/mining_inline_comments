{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MzQxNjI3", "number": 2393, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwMzoyMTozOVrOD9Ic3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMTo0Mzo1OVrOD9kAKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDI4MTkwOnYy", "diffSide": "RIGHT", "path": "addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireExtension.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwMzoyMTozOVrOGWd9EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwMzoyMTozOVrOGWd9EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxMjYyNQ==", "bodyText": "I tried adding a UnitTest for this leveraging this.nano.addHandler and reading a file like we do with ascanrules but kept running into an NPE. I then tried adding it as an inline string but it's >65KB and wouldn't let me.", "url": "https://github.com/zaproxy/zap-extensions/pull/2393#discussion_r426212625", "createdAt": "2020-05-17T03:21:39Z", "author": {"login": "kingthorin"}, "path": "addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireExtension.java", "diffHunk": "@@ -0,0 +1,276 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.addon.retire;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.reflect.TypeToken;\n+import java.io.IOException;\n+import java.lang.reflect.Type;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.Constant;\n+import org.parosproxy.paros.extension.ExtensionAdaptor;\n+import org.parosproxy.paros.network.HttpMessage;\n+import org.zaproxy.addon.retire.model.Extractors;\n+import org.zaproxy.addon.retire.model.RepoEntry;\n+import org.zaproxy.addon.retire.model.Vulnerability;\n+\n+public class RetireExtension extends ExtensionAdaptor {\n+    private static final String RESOURCE = \"/org/zaproxy/addon/retire/resources\";\n+    private static final String COLLECTION_PATH = RESOURCE + \"/jsrepository.json\";\n+    private static final String DONT_CHECK_NAME = \"dont check\";\n+    private static final Logger LOGGER = Logger.getLogger(RetireExtension.class);\n+\n+    private static Map<String, RepoEntry> repos = initialize();\n+\n+    /*\n+     * This function initializes and reads the vulnerability database*\n+     */\n+    public static Map<String, RepoEntry> initialize() {\n+        try {\n+            String jsrepo = RetireUtil.getStringResource(COLLECTION_PATH);\n+            Gson gson = new Gson();\n+            // Convert JSON File to Java Object\n+            Type repoMapType = new TypeToken<Map<String, RepoEntry>>() {}.getType();\n+            return gson.fromJson(jsrepo, repoMapType);\n+        } catch (IOException e) {\n+            LOGGER.warn(\"Failed to load Retire.js collection\", e);\n+        }\n+        return Collections.emptyMap();\n+    }\n+\n+    public static Map<String, RepoEntry> getRepos() {\n+        return repos;\n+    }\n+\n+    /*\n+     * This is the top level function called from the scanner. It first checks if:\n+     * 1)Matching vulnerability is found in database for JS file URL, if YES return return HashSet of related info.\n+     * 2)Matching vulnerability is found in database for JS file name, if YES return return HashSet of related info.\n+     * 3)Matching vulnerability is found in database for JS file content, if YES return return HashSet of related info.\n+     * 4)Matching vulnerability is found in database for JS file hash, if YES return HashSet of related info .\n+     * 5)Return empty HashSet.\n+     */\n+    public static Result scanJS(HttpMessage msg) {\n+\n+        String uri = msg.getRequestHeader().getURI().toString();\n+        String fileName = RetireUtil.getFileName(msg.getRequestHeader().getURI());\n+        String content = msg.getResponseBody().toString();\n+        Result result;\n+\n+        // Check if included in don't check section\n+        HashMap<String, String> msginfo = new HashMap<String, String>();\n+        msginfo.put(Extractors.TYPE_URI, uri);\n+        if (fileName != null) {\n+            msginfo.put(Extractors.TYPE_FILENAME, fileName.toString());\n+        }\n+        msginfo.put(Extractors.TYPE_FILECONTENT, content);\n+\n+        if (dontcheck(msginfo)) {\n+            return null;\n+        }\n+\n+        result = scan(Extractors.TYPE_URI, uri);\n+        if (result != null) {\n+            return result;\n+        }\n+\n+        if (fileName != null) {\n+            result = scan(Extractors.TYPE_FILENAME, fileName);\n+        }\n+        if (result != null) {\n+            return result;\n+        }\n+\n+        result = scan(Extractors.TYPE_FILECONTENT, content);\n+        if (result != null) {\n+            return result;\n+        }\n+\n+        String hash = RetireUtil.getHash(msg.getResponseBody().getBytes());\n+        return scanHash(hash);\n+    }\n+\n+    /*\n+     * This function computes the SHA 1 hash of the HTTP response body,\n+     * IF the hash matches that of an existing entry in the vulnerability database\n+     * corresponding info is returned.\n+     * ELSE an empty HashSet is returned.\n+     */\n+    private static Result scanHash(String hash) {\n+        // Testable URL: https://ajax.googleapis.com/ajax/libs/dojo/1.1.1/dojo/dojo.js", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4147405cdba45db859adcd341330d2b96e1edb3e"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzQxNDg3OnYy", "diffSide": "RIGHT", "path": "addOns/retire/src/main/javahelp/org/zaproxy/addon/retire/resources/help/contents/retire.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDo1NTozOVrOGW665w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDo1NTozOVrOGW665w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY4NzIwNw==", "bodyText": "Add br or p (same before the note)? They are all shown in the same line/paragraph.", "url": "https://github.com/zaproxy/zap-extensions/pull/2393#discussion_r426687207", "createdAt": "2020-05-18T14:55:39Z", "author": {"login": "thc202"}, "path": "addOns/retire/src/main/javahelp/org/zaproxy/addon/retire/resources/help/contents/retire.html", "diffHunk": "@@ -0,0 +1,19 @@\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n+<HTML>\n+<HEAD>\n+<TITLE>\n+Retire.js\n+</TITLE>\n+</HEAD>\n+<BODY>\n+<H1>Retire.js</H1>\n+\n+This add-on includes a passive scan rule which implements checks provided by <a href=\"https://retirejs.github.io/retire.js/\">Retire.js</a> \n+in order to identify vulnerable or out-dated JavaScript packages.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54e5a5e4883f2471e0c62b10aecf361723b63329"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODc5NTkzOnYy", "diffSide": "RIGHT", "path": "addOns/retire/retire.gradle.kts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMTo0Mzo1OVrOGXIfjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowNDoyOFrOGXI-4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwOTU4Mw==", "bodyText": "23200 [AWT-EventQueue-0] ERROR org.zaproxy.zap.control.AddOnInstaller  - Declared bundle not found in retire add-on:\njava.util.MissingResourceException: Can't find bundle for base name org.zaproxy.addon.retire.resources.help%LC%.helpset, locale en_GB\n\tat java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2055)", "url": "https://github.com/zaproxy/zap-extensions/pull/2393#discussion_r426909583", "createdAt": "2020-05-18T21:43:59Z", "author": {"login": "kingthorin"}, "path": "addOns/retire/retire.gradle.kts", "diffHunk": "@@ -0,0 +1,24 @@\n+version = \"0.1.0\"\n+description = \"Retire.js\"\n+\n+zapAddOn {\n+    addOnName.set(\"Retire.js\")\n+    zapVersion.set(\"2.9.0\")\n+\n+    manifest {\n+        author.set(\"Nikita Mundhada and the ZAP Dev Team\")\n+        bundle {\n+            baseName.set(\"org.zaproxy.addon.retire.resources.Messages\")\n+            prefix.set(\"retire\")\n+        }\n+        bundle {\n+            baseName.set(\"org.zaproxy.addon.retire.resources.help%LC%.helpset\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42942587f8bbd0b1acdda7da385e5807ec296818"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMjEzMw==", "bodyText": "Needs also:\nlocaleToken.set(\"%LC%\")", "url": "https://github.com/zaproxy/zap-extensions/pull/2393#discussion_r426912133", "createdAt": "2020-05-18T21:50:09Z", "author": {"login": "thc202"}, "path": "addOns/retire/retire.gradle.kts", "diffHunk": "@@ -0,0 +1,24 @@\n+version = \"0.1.0\"\n+description = \"Retire.js\"\n+\n+zapAddOn {\n+    addOnName.set(\"Retire.js\")\n+    zapVersion.set(\"2.9.0\")\n+\n+    manifest {\n+        author.set(\"Nikita Mundhada and the ZAP Dev Team\")\n+        bundle {\n+            baseName.set(\"org.zaproxy.addon.retire.resources.Messages\")\n+            prefix.set(\"retire\")\n+        }\n+        bundle {\n+            baseName.set(\"org.zaproxy.addon.retire.resources.help%LC%.helpset\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwOTU4Mw=="}, "originalCommit": {"oid": "42942587f8bbd0b1acdda7da385e5807ec296818"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMzA5Mg==", "bodyText": "And be under helpSet.", "url": "https://github.com/zaproxy/zap-extensions/pull/2393#discussion_r426913092", "createdAt": "2020-05-18T21:52:27Z", "author": {"login": "thc202"}, "path": "addOns/retire/retire.gradle.kts", "diffHunk": "@@ -0,0 +1,24 @@\n+version = \"0.1.0\"\n+description = \"Retire.js\"\n+\n+zapAddOn {\n+    addOnName.set(\"Retire.js\")\n+    zapVersion.set(\"2.9.0\")\n+\n+    manifest {\n+        author.set(\"Nikita Mundhada and the ZAP Dev Team\")\n+        bundle {\n+            baseName.set(\"org.zaproxy.addon.retire.resources.Messages\")\n+            prefix.set(\"retire\")\n+        }\n+        bundle {\n+            baseName.set(\"org.zaproxy.addon.retire.resources.help%LC%.helpset\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwOTU4Mw=="}, "originalCommit": {"oid": "42942587f8bbd0b1acdda7da385e5807ec296818"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNzYwMg==", "bodyText": "I had, had the localeToken.set but in the a bundle section and it wouldn't import. Now I \"think\" I'm clear on how it works. Thanks!", "url": "https://github.com/zaproxy/zap-extensions/pull/2393#discussion_r426917602", "createdAt": "2020-05-18T22:04:28Z", "author": {"login": "kingthorin"}, "path": "addOns/retire/retire.gradle.kts", "diffHunk": "@@ -0,0 +1,24 @@\n+version = \"0.1.0\"\n+description = \"Retire.js\"\n+\n+zapAddOn {\n+    addOnName.set(\"Retire.js\")\n+    zapVersion.set(\"2.9.0\")\n+\n+    manifest {\n+        author.set(\"Nikita Mundhada and the ZAP Dev Team\")\n+        bundle {\n+            baseName.set(\"org.zaproxy.addon.retire.resources.Messages\")\n+            prefix.set(\"retire\")\n+        }\n+        bundle {\n+            baseName.set(\"org.zaproxy.addon.retire.resources.help%LC%.helpset\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwOTU4Mw=="}, "originalCommit": {"oid": "42942587f8bbd0b1acdda7da385e5807ec296818"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 688, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}