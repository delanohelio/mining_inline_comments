{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjE1Njc4", "number": 2420, "title": "Add Import from File / URL Dialogs", "bodyText": "Create classes for Import from File / URL Dialogs\nCreate class GraphQlParser\nAbility to add endpoint url to the sites tree\nReplace 'Target URL' with 'Endpoint URL' for clarity\n\nSigned-off-by: ricekot ricekot@gmail.com", "createdAt": "2020-06-01T21:09:22Z", "url": "https://github.com/zaproxy/zap-extensions/pull/2420", "merged": true, "mergeCommit": {"oid": "61edb2d1f3f2e6abe9bc248dbbafbf67f0858daa"}, "closed": true, "closedAt": "2020-06-05T23:33:53Z", "author": {"login": "ricekot"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnG7XSABqjMzOTQ5MDU2ODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcobVS6gFqTQyNTY3OTY0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b326764ad782282ed7ed2e7f19ca0bc0c76568b", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/5b326764ad782282ed7ed2e7f19ca0bc0c76568b", "committedDate": "2020-06-01T21:06:53Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}, "afterCommit": {"oid": "0de33a1f7cc36b3475a9986d64d7d032e4884a6d", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/0de33a1f7cc36b3475a9986d64d7d032e4884a6d", "committedDate": "2020-06-01T21:13:07Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0de33a1f7cc36b3475a9986d64d7d032e4884a6d", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/0de33a1f7cc36b3475a9986d64d7d032e4884a6d", "committedDate": "2020-06-01T21:13:07Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}, "afterCommit": {"oid": "454fcd82a3a7e85cb49d3c2d01625b5f21086250", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/454fcd82a3a7e85cb49d3c2d01625b5f21086250", "committedDate": "2020-06-02T09:42:26Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNTE5MjIy", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#pullrequestreview-423519222", "createdAt": "2020-06-03T12:51:36Z", "commit": {"oid": "454fcd82a3a7e85cb49d3c2d01625b5f21086250"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjo1MTozN1rOGeaWuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjo1MTo1NVrOGeaXcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0MjI2Nw==", "bodyText": "Is this still a TODO? If so some more details might help you remember whats TODO in the future ;)", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#discussion_r434542267", "createdAt": "2020-06-03T12:51:37Z", "author": {"login": "psiinon"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/ImportFromFileDialog.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.addon.graphql;\n+\n+import java.awt.GridBagConstraints;\n+import java.io.IOException;\n+import javax.swing.JButton;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import org.parosproxy.paros.Constant;\n+import org.parosproxy.paros.model.Model;\n+import org.parosproxy.paros.view.View;\n+\n+public class ImportFromFileDialog extends ImportFromAbstractDialog {\n+\n+    private static final long serialVersionUID = 1L;\n+    private static final String MESSAGE_PREFIX = \"graphql.importfromfiledialog.\";\n+\n+    private JButton buttonChooseFile;\n+\n+    public ImportFromFileDialog(JFrame parent, ExtensionGraphQl caller) {\n+        super(\n+                parent,\n+                caller,\n+                Constant.messages.getString(MESSAGE_PREFIX + \"title\"),\n+                Constant.messages.getString(MESSAGE_PREFIX + \"labelfile\"));\n+    }\n+\n+    @Override\n+    protected void addFromFields(GridBagConstraints constraints) {\n+        constraints.gridwidth = 2;\n+        super.addFromFields(constraints);\n+\n+        constraints.gridx = 3;\n+        constraints.gridwidth = 1;\n+        add(getButtonChooseFile(), constraints);\n+    }\n+\n+    private JButton getButtonChooseFile() {\n+        if (buttonChooseFile == null) {\n+            buttonChooseFile =\n+                    new JButton(Constant.messages.getString(MESSAGE_PREFIX + \"choosefilebutton\"));\n+\n+            buttonChooseFile.addActionListener(\n+                    e -> {\n+                        JFileChooser filechooser =\n+                                new JFileChooser(\n+                                        Model.getSingleton().getOptionsParam().getUserDirectory());\n+                        int state = filechooser.showOpenDialog(View.getSingleton().getMainFrame());\n+                        if (state == JFileChooser.APPROVE_OPTION) {\n+                            try {\n+                                getFromField()\n+                                        .setText(filechooser.getSelectedFile().getCanonicalPath());\n+                                Model.getSingleton()\n+                                        .getOptionsParam()\n+                                        .setUserDirectory(filechooser.getCurrentDirectory());\n+                            } catch (IOException ex) {\n+                                showWarningDialog(\n+                                        Constant.messages.getString(MESSAGE_PREFIX + \"badfile\"));\n+                            }\n+                        }\n+                    });\n+        }\n+        return buttonChooseFile;\n+    }\n+\n+    @Override\n+    protected boolean importDefinition() {\n+        // Import and parse schema if file path is provided\n+        if (!getFromField().getText().isEmpty()) {\n+            // TO DO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "454fcd82a3a7e85cb49d3c2d01625b5f21086250"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0MjQ1MQ==", "bodyText": "Ditto", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#discussion_r434542451", "createdAt": "2020-06-03T12:51:55Z", "author": {"login": "psiinon"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/ImportFromUrlDialog.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.addon.graphql;\n+\n+import javax.swing.JFrame;\n+import org.parosproxy.paros.Constant;\n+\n+public class ImportFromUrlDialog extends ImportFromAbstractDialog {\n+\n+    private static final long serialVersionUID = 1L;\n+    private static final String MESSAGE_PREFIX = \"graphql.importfromurldialog.\";\n+\n+    public ImportFromUrlDialog(JFrame parent, ExtensionGraphQl caller) {\n+        super(\n+                parent,\n+                caller,\n+                Constant.messages.getString(MESSAGE_PREFIX + \"title\"),\n+                Constant.messages.getString(MESSAGE_PREFIX + \"labelurl\"));\n+    }\n+\n+    @Override\n+    protected boolean importDefinition() {\n+        // Import and parse schema if schema URL is provided\n+        if (!getFromField().getText().isEmpty()) {\n+            if (validateUrl(getFromField())) {\n+                // TO DO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "454fcd82a3a7e85cb49d3c2d01625b5f21086250"}, "originalPosition": 43}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "454fcd82a3a7e85cb49d3c2d01625b5f21086250", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/454fcd82a3a7e85cb49d3c2d01625b5f21086250", "committedDate": "2020-06-02T09:42:26Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}, "afterCommit": {"oid": "2db8439e47f9c442bc25135327393524bd4d1839", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/2db8439e47f9c442bc25135327393524bd4d1839", "committedDate": "2020-06-03T13:19:13Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2db8439e47f9c442bc25135327393524bd4d1839", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/2db8439e47f9c442bc25135327393524bd4d1839", "committedDate": "2020-06-03T13:19:13Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}, "afterCommit": {"oid": "29f5dc0b87d53879d3765c0990db40ff73ff9c40", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/29f5dc0b87d53879d3765c0990db40ff73ff9c40", "committedDate": "2020-06-03T13:23:29Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Mjg2MzEw", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#pullrequestreview-425286310", "createdAt": "2020-06-05T13:13:41Z", "commit": {"oid": "29f5dc0b87d53879d3765c0990db40ff73ff9c40"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzoxMzo0MVrOGft8tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzoyMDoyMlrOGfuK9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkxMTg2MA==", "bodyText": "I believe this can simply be this instead of Class.this? (Same below)", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#discussion_r435911860", "createdAt": "2020-06-05T13:13:41Z", "author": {"login": "kingthorin"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/ExtensionGraphQl.java", "diffHunk": "@@ -66,11 +66,8 @@ private ZapMenuItem getMenuImportLocalGraphQl() {\n                     Constant.messages.getString(\"graphql.topmenu.import.importgraphql.tooltip\"));\n             menuImportLocalGraphQl.addActionListener(\n                     e ->\n-                            View.getSingleton()\n-                                    .showMessageDialog(\n-                                            Constant.messages.getString(\n-                                                    \"graphql.importfromdialog.message\")));\n-            ;\n+                            new ImportFromFileDialog(\n+                                    View.getSingleton().getMainFrame(), ExtensionGraphQl.this));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29f5dc0b87d53879d3765c0990db40ff73ff9c40"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkxNTUxMA==", "bodyText": "addPath needs to be done in the Event Dispatch Thread (this PR might help secdec/attack-surface-detector-zap#14). addHistory doesn't need to be done in EDT but can't hurt.\nThis class will probably be used by the API so it might be worth wrapping the site tree addition in a view check.", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#discussion_r435915510", "createdAt": "2020-06-05T13:20:22Z", "author": {"login": "kingthorin"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/GraphQlParser.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.addon.graphql;\n+\n+import java.awt.EventQueue;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.control.Control;\n+import org.parosproxy.paros.extension.history.ExtensionHistory;\n+import org.parosproxy.paros.model.HistoryReference;\n+import org.parosproxy.paros.model.Model;\n+import org.parosproxy.paros.network.HttpMessage;\n+\n+public class GraphQlParser {\n+\n+    private static final Logger LOG = Logger.getLogger(GraphQlParser.class);\n+\n+    public static void persistMessage(final HttpMessage message) {\n+        // Add the message to the history panel and sites tree\n+        final HistoryReference historyRef;\n+\n+        try {\n+            historyRef =\n+                    new HistoryReference(\n+                            Model.getSingleton().getSession(),\n+                            HistoryReference.TYPE_ZAP_USER,\n+                            message);\n+        } catch (Exception e) {\n+            LOG.error(e.getMessage(), e);\n+            return;\n+        }\n+\n+        final ExtensionHistory extHistory =\n+                Control.getSingleton().getExtensionLoader().getExtension(ExtensionHistory.class);\n+        if (extHistory != null) {\n+            EventQueue.invokeLater(\n+                    new Runnable() {\n+\n+                        @Override\n+                        public void run() {\n+                            extHistory.addHistory(historyRef);\n+                            Model.getSingleton()\n+                                    .getSession()\n+                                    .getSiteTree()\n+                                    .addPath(historyRef, message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29f5dc0b87d53879d3765c0990db40ff73ff9c40"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MzI3MDIx", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#pullrequestreview-425327021", "createdAt": "2020-06-05T13:59:02Z", "commit": {"oid": "29f5dc0b87d53879d3765c0990db40ff73ff9c40"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo1OTowMlrOGfvsRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDowMDoyMVrOGfvxPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0MDQyMg==", "bodyText": "parse?", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#discussion_r435940422", "createdAt": "2020-06-05T13:59:02Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/GraphQlParser.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.addon.graphql;\n+\n+import java.awt.EventQueue;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.control.Control;\n+import org.parosproxy.paros.extension.history.ExtensionHistory;\n+import org.parosproxy.paros.model.HistoryReference;\n+import org.parosproxy.paros.model.Model;\n+import org.parosproxy.paros.network.HttpMessage;\n+\n+public class GraphQlParser {\n+\n+    private static final Logger LOG = Logger.getLogger(GraphQlParser.class);\n+\n+    public static void persistMessage(final HttpMessage message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29f5dc0b87d53879d3765c0990db40ff73ff9c40"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0MDY1MQ==", "bodyText": "These comments should not be needed, code is clear.", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#discussion_r435940651", "createdAt": "2020-06-05T13:59:18Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/ImportFromFileDialog.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.addon.graphql;\n+\n+import java.awt.GridBagConstraints;\n+import java.io.IOException;\n+import javax.swing.JButton;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import org.parosproxy.paros.Constant;\n+import org.parosproxy.paros.model.Model;\n+import org.parosproxy.paros.view.View;\n+\n+public class ImportFromFileDialog extends ImportFromAbstractDialog {\n+\n+    private static final long serialVersionUID = 1L;\n+    private static final String MESSAGE_PREFIX = \"graphql.importfromfiledialog.\";\n+\n+    private JButton buttonChooseFile;\n+\n+    public ImportFromFileDialog(JFrame parent, ExtensionGraphQl caller) {\n+        super(\n+                parent,\n+                caller,\n+                Constant.messages.getString(MESSAGE_PREFIX + \"title\"),\n+                Constant.messages.getString(MESSAGE_PREFIX + \"labelfile\"));\n+    }\n+\n+    @Override\n+    protected void addFromFields(GridBagConstraints constraints) {\n+        constraints.gridwidth = 2;\n+        super.addFromFields(constraints);\n+\n+        constraints.gridx = 3;\n+        constraints.gridwidth = 1;\n+        add(getButtonChooseFile(), constraints);\n+    }\n+\n+    private JButton getButtonChooseFile() {\n+        if (buttonChooseFile == null) {\n+            buttonChooseFile =\n+                    new JButton(Constant.messages.getString(MESSAGE_PREFIX + \"choosefilebutton\"));\n+\n+            buttonChooseFile.addActionListener(\n+                    e -> {\n+                        JFileChooser filechooser =\n+                                new JFileChooser(\n+                                        Model.getSingleton().getOptionsParam().getUserDirectory());\n+                        int state = filechooser.showOpenDialog(View.getSingleton().getMainFrame());\n+                        if (state == JFileChooser.APPROVE_OPTION) {\n+                            try {\n+                                getFromField()\n+                                        .setText(filechooser.getSelectedFile().getCanonicalPath());\n+                                Model.getSingleton()\n+                                        .getOptionsParam()\n+                                        .setUserDirectory(filechooser.getCurrentDirectory());\n+                            } catch (IOException ex) {\n+                                showWarningDialog(\n+                                        Constant.messages.getString(MESSAGE_PREFIX + \"badfile\"));\n+                            }\n+                        }\n+                    });\n+        }\n+        return buttonChooseFile;\n+    }\n+\n+    @Override\n+    protected boolean importDefinition() {\n+        // Import and parse schema if file path is provided", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29f5dc0b87d53879d3765c0990db40ff73ff9c40"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0MTAxNQ==", "bodyText": "We should require the file, if the user wants to import from URL it can use the other dialogue.", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#discussion_r435941015", "createdAt": "2020-06-05T13:59:41Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/ImportFromFileDialog.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.addon.graphql;\n+\n+import java.awt.GridBagConstraints;\n+import java.io.IOException;\n+import javax.swing.JButton;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import org.parosproxy.paros.Constant;\n+import org.parosproxy.paros.model.Model;\n+import org.parosproxy.paros.view.View;\n+\n+public class ImportFromFileDialog extends ImportFromAbstractDialog {\n+\n+    private static final long serialVersionUID = 1L;\n+    private static final String MESSAGE_PREFIX = \"graphql.importfromfiledialog.\";\n+\n+    private JButton buttonChooseFile;\n+\n+    public ImportFromFileDialog(JFrame parent, ExtensionGraphQl caller) {\n+        super(\n+                parent,\n+                caller,\n+                Constant.messages.getString(MESSAGE_PREFIX + \"title\"),\n+                Constant.messages.getString(MESSAGE_PREFIX + \"labelfile\"));\n+    }\n+\n+    @Override\n+    protected void addFromFields(GridBagConstraints constraints) {\n+        constraints.gridwidth = 2;\n+        super.addFromFields(constraints);\n+\n+        constraints.gridx = 3;\n+        constraints.gridwidth = 1;\n+        add(getButtonChooseFile(), constraints);\n+    }\n+\n+    private JButton getButtonChooseFile() {\n+        if (buttonChooseFile == null) {\n+            buttonChooseFile =\n+                    new JButton(Constant.messages.getString(MESSAGE_PREFIX + \"choosefilebutton\"));\n+\n+            buttonChooseFile.addActionListener(\n+                    e -> {\n+                        JFileChooser filechooser =\n+                                new JFileChooser(\n+                                        Model.getSingleton().getOptionsParam().getUserDirectory());\n+                        int state = filechooser.showOpenDialog(View.getSingleton().getMainFrame());\n+                        if (state == JFileChooser.APPROVE_OPTION) {\n+                            try {\n+                                getFromField()\n+                                        .setText(filechooser.getSelectedFile().getCanonicalPath());\n+                                Model.getSingleton()\n+                                        .getOptionsParam()\n+                                        .setUserDirectory(filechooser.getCurrentDirectory());\n+                            } catch (IOException ex) {\n+                                showWarningDialog(\n+                                        Constant.messages.getString(MESSAGE_PREFIX + \"badfile\"));\n+                            }\n+                        }\n+                    });\n+        }\n+        return buttonChooseFile;\n+    }\n+\n+    @Override\n+    protected boolean importDefinition() {\n+        // Import and parse schema if file path is provided\n+        if (!getFromField().getText().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29f5dc0b87d53879d3765c0990db40ff73ff9c40"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0MTY5NQ==", "bodyText": "Move to GraphQlParser? (e.g. GraphQlParser#parse(URI)`)", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#discussion_r435941695", "createdAt": "2020-06-05T14:00:21Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/Introspection.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.addon.graphql;\n+\n+import org.apache.commons.httpclient.URI;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.model.Model;\n+import org.parosproxy.paros.network.HttpMessage;\n+import org.parosproxy.paros.network.HttpSender;\n+\n+public class Introspection {\n+    private static final Logger LOG = Logger.getLogger(Introspection.class);\n+\n+    public static void sendIntrospectionQuery(URI uri) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29f5dc0b87d53879d3765c0990db40ff73ff9c40"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29f5dc0b87d53879d3765c0990db40ff73ff9c40", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/29f5dc0b87d53879d3765c0990db40ff73ff9c40", "committedDate": "2020-06-03T13:23:29Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}, "afterCommit": {"oid": "1f7f88ba6e4ee27d6bb898c3fa1487de59a627d7", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/1f7f88ba6e4ee27d6bb898c3fa1487de59a627d7", "committedDate": "2020-06-05T20:21:52Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n- Replace 'Target URL' with 'Endpoint URL' for clarity\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f7f88ba6e4ee27d6bb898c3fa1487de59a627d7", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/1f7f88ba6e4ee27d6bb898c3fa1487de59a627d7", "committedDate": "2020-06-05T20:21:52Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create classes GraphQlParser and Introspection\n- Ability to add endpoint url to the sites tree\n- Replace 'Target URL' with 'Endpoint URL' for clarity\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}, "afterCommit": {"oid": "0308b25f8b173b5ecf06da5786395146fe313019", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/0308b25f8b173b5ecf06da5786395146fe313019", "committedDate": "2020-06-05T20:23:43Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create class GraphQlParser\n- Ability to add endpoint url to the sites tree\n- Replace 'Target URL' with 'Endpoint URL' for clarity\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0308b25f8b173b5ecf06da5786395146fe313019", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/0308b25f8b173b5ecf06da5786395146fe313019", "committedDate": "2020-06-05T20:23:43Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create class GraphQlParser\n- Ability to add endpoint url to the sites tree\n- Replace 'Target URL' with 'Endpoint URL' for clarity\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}, "afterCommit": {"oid": "c684d00e9f2bb53e162cef06c5a11693d2dd70ac", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/c684d00e9f2bb53e162cef06c5a11693d2dd70ac", "committedDate": "2020-06-05T20:27:53Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create class GraphQlParser\n- Ability to add endpoint url to the sites tree\n- Replace 'Target URL' with 'Endpoint URL' for clarity\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5720e8cea19d470cd8ea6f0ac92506991ef69f62", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/5720e8cea19d470cd8ea6f0ac92506991ef69f62", "committedDate": "2020-06-05T20:38:32Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create class GraphQlParser\n- Ability to add endpoint url to the sites tree\n- Replace 'Target URL' with 'Endpoint URL' for clarity\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c684d00e9f2bb53e162cef06c5a11693d2dd70ac", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/c684d00e9f2bb53e162cef06c5a11693d2dd70ac", "committedDate": "2020-06-05T20:27:53Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create class GraphQlParser\n- Ability to add endpoint url to the sites tree\n- Replace 'Target URL' with 'Endpoint URL' for clarity\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}, "afterCommit": {"oid": "5720e8cea19d470cd8ea6f0ac92506991ef69f62", "author": {"user": {"login": "ricekot", "name": "Akshath Kothari"}}, "url": "https://github.com/zaproxy/zap-extensions/commit/5720e8cea19d470cd8ea6f0ac92506991ef69f62", "committedDate": "2020-06-05T20:38:32Z", "message": "Add Import from File / URL Dialogs\n\n- Create classes for Import from File / URL Dialogs\n- Create class GraphQlParser\n- Ability to add endpoint url to the sites tree\n- Replace 'Target URL' with 'Endpoint URL' for clarity\n\nSigned-off-by: ricekot <ricekot@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NjYxNzE1", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#pullrequestreview-425661715", "createdAt": "2020-06-05T22:25:45Z", "commit": {"oid": "5720e8cea19d470cd8ea6f0ac92506991ef69f62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Njc5NjQ3", "url": "https://github.com/zaproxy/zap-extensions/pull/2420#pullrequestreview-425679647", "createdAt": "2020-06-05T23:33:45Z", "commit": {"oid": "5720e8cea19d470cd8ea6f0ac92506991ef69f62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 349, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}