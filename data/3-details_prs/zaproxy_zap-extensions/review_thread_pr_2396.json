{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwOTYwNDA5", "number": 2396, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDoyNjo1M1rOD-YTNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODo0MDoxMFrOEAzmdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzM2NDM2OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/graphql.gradle.kts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDoyNjo1M1rOGYcl-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwOToxNDoyMVrOGYr7pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4NzQ4MQ==", "bodyText": "This may as well use semver and start at 0.1.0 or even 0.0.1?", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r428287481", "createdAt": "2020-05-20T20:26:53Z", "author": {"login": "kingthorin"}, "path": "addOns/graphql/graphql.gradle.kts", "diffHunk": "@@ -0,0 +1,16 @@\n+version = \"1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "444c03c7fc4dff98965c618851046488dfecd5a3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUzODc5MQ==", "bodyText": "Okay. I was not aware of semver, I'll update this. Since this is not exactly a release I think we should probably go with 0.0.1.", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r428538791", "createdAt": "2020-05-21T09:14:21Z", "author": {"login": "ricekot"}, "path": "addOns/graphql/graphql.gradle.kts", "diffHunk": "@@ -0,0 +1,16 @@\n+version = \"1\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4NzQ4MQ=="}, "originalCommit": {"oid": "444c03c7fc4dff98965c618851046488dfecd5a3"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODAzNjQyOnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/java/org/zaproxy/zap/extension/graphql/ExtensionGraphQL.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDoxMzoyOVrOGaCe8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDoxMzoyOVrOGaCe8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk1Njg0OA==", "bodyText": "I believe this is the default in 2.9.0 and probably isn't necessary here.", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r429956848", "createdAt": "2020-05-25T14:13:29Z", "author": {"login": "kingthorin"}, "path": "addOns/graphql/src/main/java/org/zaproxy/zap/extension/graphql/ExtensionGraphQL.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.graphql;\n+\n+import java.io.File;\n+import java.util.List;\n+import org.parosproxy.paros.Constant;\n+import org.parosproxy.paros.extension.CommandLineArgument;\n+import org.parosproxy.paros.extension.CommandLineListener;\n+import org.parosproxy.paros.extension.ExtensionAdaptor;\n+import org.parosproxy.paros.extension.ExtensionHook;\n+import org.parosproxy.paros.view.View;\n+import org.zaproxy.zap.view.ZapMenuItem;\n+\n+public class ExtensionGraphQL extends ExtensionAdaptor implements CommandLineListener {\n+\n+    public static final String NAME = \"ExtensionGraphQL\";\n+\n+    private ZapMenuItem menuImportLocalGraphQL = null;\n+    private ZapMenuItem menuImportUrlGraphQL = null;\n+\n+    private CommandLineArgument[] arguments = new CommandLineArgument[3];\n+    private static final int ARG_IMPORT_FILE_IDX = 0;\n+    private static final int ARG_IMPORT_URL_IDX = 1;\n+    private static final int ARG_TARGET_URL_IDX = 2;\n+\n+    public ExtensionGraphQL() {\n+        super(NAME);\n+    }\n+\n+    @Override\n+    public void hook(ExtensionHook extensionHook) {\n+        super.hook(extensionHook);\n+\n+        if (getView() != null) {\n+            extensionHook.getHookMenu().addImportMenuItem(getMenuImportLocalGraphQL());\n+            extensionHook.getHookMenu().addImportMenuItem(getMenuImportUrlGraphQL());\n+        }\n+\n+        extensionHook.addApiImplementor(new GraphQLAPI(this));\n+        extensionHook.addCommandLine(getCommandLineArguments());\n+    }\n+\n+    /* Menu option to import a local GraphQL file. */\n+    private ZapMenuItem getMenuImportLocalGraphQL() {\n+        if (menuImportLocalGraphQL == null) {\n+            menuImportLocalGraphQL = new ZapMenuItem(\"graphql.topmenu.import.importgraphql\");\n+            menuImportLocalGraphQL.setToolTipText(\n+                    Constant.messages.getString(\"graphql.topmenu.import.importgraphql.tooltip\"));\n+            menuImportLocalGraphQL.addActionListener(\n+                    new java.awt.event.ActionListener() {\n+                        @Override\n+                        public void actionPerformed(java.awt.event.ActionEvent e) {\n+                            View.getSingleton()\n+                                    .showMessageDialog(\n+                                            Constant.messages.getString(\n+                                                    \"graphql.importfromdialog.message\"));\n+                        }\n+                    });\n+        }\n+        return menuImportLocalGraphQL;\n+    }\n+\n+    /* Menu option to import a GraphQL file from a given URL. */\n+    private ZapMenuItem getMenuImportUrlGraphQL() {\n+        if (menuImportUrlGraphQL == null) {\n+            menuImportUrlGraphQL = new ZapMenuItem(\"graphql.topmenu.import.importremotegraphql\");\n+            menuImportUrlGraphQL.setToolTipText(\n+                    Constant.messages.getString(\n+                            \"graphql.topmenu.import.importremotegraphql.tooltip\"));\n+\n+            final ExtensionGraphQL shadowCopy = this;\n+            menuImportUrlGraphQL.addActionListener(\n+                    new java.awt.event.ActionListener() {\n+\n+                        @Override\n+                        public void actionPerformed(java.awt.event.ActionEvent e) {\n+                            View.getSingleton()\n+                                    .showMessageDialog(\n+                                            Constant.messages.getString(\n+                                                    \"graphql.importfromdialog.message\"));\n+                        }\n+                    });\n+        }\n+        return menuImportUrlGraphQL;\n+    }\n+\n+    @Override\n+    public String getAuthor() {\n+        return Constant.ZAP_TEAM;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1161b5c7dfb2b916f48bdb847ab5bceab710193e"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODA1NTIwOnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/javahelp/org/zaproxy/zap/extension/graphql/resources/help/contents/graphql.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDoxOTo1MFrOGaCqcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDoxOTo1MFrOGaCqcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk1OTc5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Following some examples, overriding:\n          \n          \n            \n            Overriding examples:", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r429959792", "createdAt": "2020-05-25T14:19:50Z", "author": {"login": "kingthorin"}, "path": "addOns/graphql/src/main/javahelp/org/zaproxy/zap/extension/graphql/resources/help/contents/graphql.html", "diffHunk": "@@ -0,0 +1,55 @@\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n+<HTML>\n+<HEAD>\n+<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\">\n+<TITLE>\n+GraphQL Support\n+</TITLE>\n+</HEAD>\n+<BODY>\n+<H1>GraphQL Support</H1>\n+This add-on allows you to import GraphQL definitions.\n+<br><br>\n+The add-on will automatically detect any GraphQL definitions and spider them as long as they are in scope.\n+\n+<H2>UI</H2>\n+2 menu items are added to the Import menu:\n+<ul>\n+<li>Import a GraphQL definition from the local file system</li>\n+<li>Import a GraphQL definition from a URL</li>\n+</ul>\n+\n+<h3>Target URL Format</h3>\n+The Target URL has the following format:<br>\n+<code>scheme://authority/path</code><br>\n+with all URI components optional. Note: while all URI components are optional, the scheme and authority become mandatory when not importing from URL.<br>\n+Following some examples, overriding:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1161b5c7dfb2b916f48bdb847ab5bceab710193e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODA2MTc2OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/resources/org/zaproxy/zap/extension/graphql/resources/Messages.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDoyMTo1NFrOGaCuYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDoyNToyN1rOGaC1KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2MDgwMg==", "bodyText": "Should have a period as well?", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r429960802", "createdAt": "2020-05-25T14:21:54Z", "author": {"login": "kingthorin"}, "path": "addOns/graphql/src/main/resources/org/zaproxy/zap/extension/graphql/resources/Messages.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+# This file defines the default (English) variants of all of the internationalised messages\n+\n+graphql.api.action.importFile = Imports a GraphQL schema from a local file.\n+graphql.api.action.importFile.param.file = The file that contains the GraphQL schema.\n+graphql.api.action.importFile.param.target = The Target URL to override the server URL present in the schema.\n+graphql.api.action.importUrl = Retrieves a GraphQL schema from an endpoint URL (via Introspection)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1161b5c7dfb2b916f48bdb847ab5bceab710193e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2MjUzNg==", "bodyText": "The cmdline entries below also seem to mix period and not period. (For my 2 cents they should have periods)", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r429962536", "createdAt": "2020-05-25T14:25:27Z", "author": {"login": "kingthorin"}, "path": "addOns/graphql/src/main/resources/org/zaproxy/zap/extension/graphql/resources/Messages.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+# This file defines the default (English) variants of all of the internationalised messages\n+\n+graphql.api.action.importFile = Imports a GraphQL schema from a local file.\n+graphql.api.action.importFile.param.file = The file that contains the GraphQL schema.\n+graphql.api.action.importFile.param.target = The Target URL to override the server URL present in the schema.\n+graphql.api.action.importUrl = Retrieves a GraphQL schema from an endpoint URL (via Introspection)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2MDgwMg=="}, "originalCommit": {"oid": "1161b5c7dfb2b916f48bdb847ab5bceab710193e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODA4MDQxOnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/resources/org/zaproxy/zap/extension/graphql/resources/Messages.properties", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDoyNzo0MVrOGaC5ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzozNDoyMFrOGaG3CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2MzY3OA==", "bodyText": "This is an awfully long menu item entry (same with the one at L14).\nCan they be shortened? It's fine for the tooltip to be more verbose for clarity.\nMay:\n\nImport GraphQL Schema from URL\n\n(Still long, but much shorter)", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r429963678", "createdAt": "2020-05-25T14:27:41Z", "author": {"login": "kingthorin"}, "path": "addOns/graphql/src/main/resources/org/zaproxy/zap/extension/graphql/resources/Messages.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+# This file defines the default (English) variants of all of the internationalised messages\n+\n+graphql.api.action.importFile = Imports a GraphQL schema from a local file.\n+graphql.api.action.importFile.param.file = The file that contains the GraphQL schema.\n+graphql.api.action.importFile.param.target = The Target URL to override the server URL present in the schema.\n+graphql.api.action.importUrl = Retrieves a GraphQL schema from an endpoint URL (via Introspection)\n+graphql.api.action.importUrl.param.url = The URL locating the GraphQL endpoint.\n+\n+graphql.cmdline.file.help = Imports a GraphQL schema from the specified file name\n+graphql.cmdline.url.help = Retrieves a GraphQL schema from the specified URL (via Introspection)\n+graphql.cmdline.targeturl.help = The Target URL. Refer to the help for supported format.\n+\n+graphql.desc = Allows you to inspect and attack GraphQL endpoints\n+graphql.topmenu.import.importgraphql = Import a GraphQL schema from the local file system\n+graphql.topmenu.import.importgraphql.tooltip = The file must be a formally described GraphQL schema.\n+graphql.topmenu.import.importremotegraphql = Import a GraphQL schema from an endpoint URL (via Introspection)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1161b5c7dfb2b916f48bdb847ab5bceab710193e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAxOTgzNA==", "bodyText": "Sure. I was taking hints from the OpenAPI addon, hence the long menu entries. I will update the L16 entry, but keeping the L14 entry for uniformity (The corresponding OpenAPI menu entry is, \"Import an OpenAPI definition from the local file system\").", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r430019834", "createdAt": "2020-05-25T16:59:40Z", "author": {"login": "ricekot"}, "path": "addOns/graphql/src/main/resources/org/zaproxy/zap/extension/graphql/resources/Messages.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+# This file defines the default (English) variants of all of the internationalised messages\n+\n+graphql.api.action.importFile = Imports a GraphQL schema from a local file.\n+graphql.api.action.importFile.param.file = The file that contains the GraphQL schema.\n+graphql.api.action.importFile.param.target = The Target URL to override the server URL present in the schema.\n+graphql.api.action.importUrl = Retrieves a GraphQL schema from an endpoint URL (via Introspection)\n+graphql.api.action.importUrl.param.url = The URL locating the GraphQL endpoint.\n+\n+graphql.cmdline.file.help = Imports a GraphQL schema from the specified file name\n+graphql.cmdline.url.help = Retrieves a GraphQL schema from the specified URL (via Introspection)\n+graphql.cmdline.targeturl.help = The Target URL. Refer to the help for supported format.\n+\n+graphql.desc = Allows you to inspect and attack GraphQL endpoints\n+graphql.topmenu.import.importgraphql = Import a GraphQL schema from the local file system\n+graphql.topmenu.import.importgraphql.tooltip = The file must be a formally described GraphQL schema.\n+graphql.topmenu.import.importremotegraphql = Import a GraphQL schema from an endpoint URL (via Introspection)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2MzY3OA=="}, "originalCommit": {"oid": "1161b5c7dfb2b916f48bdb847ab5bceab710193e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAyODQ0MA==", "bodyText": "Okay leave it as-is for now then. We can always tweak them all later. I didn't realize OpenAPI was like that.", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r430028440", "createdAt": "2020-05-25T17:33:45Z", "author": {"login": "kingthorin"}, "path": "addOns/graphql/src/main/resources/org/zaproxy/zap/extension/graphql/resources/Messages.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+# This file defines the default (English) variants of all of the internationalised messages\n+\n+graphql.api.action.importFile = Imports a GraphQL schema from a local file.\n+graphql.api.action.importFile.param.file = The file that contains the GraphQL schema.\n+graphql.api.action.importFile.param.target = The Target URL to override the server URL present in the schema.\n+graphql.api.action.importUrl = Retrieves a GraphQL schema from an endpoint URL (via Introspection)\n+graphql.api.action.importUrl.param.url = The URL locating the GraphQL endpoint.\n+\n+graphql.cmdline.file.help = Imports a GraphQL schema from the specified file name\n+graphql.cmdline.url.help = Retrieves a GraphQL schema from the specified URL (via Introspection)\n+graphql.cmdline.targeturl.help = The Target URL. Refer to the help for supported format.\n+\n+graphql.desc = Allows you to inspect and attack GraphQL endpoints\n+graphql.topmenu.import.importgraphql = Import a GraphQL schema from the local file system\n+graphql.topmenu.import.importgraphql.tooltip = The file must be a formally described GraphQL schema.\n+graphql.topmenu.import.importremotegraphql = Import a GraphQL schema from an endpoint URL (via Introspection)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2MzY3OA=="}, "originalCommit": {"oid": "1161b5c7dfb2b916f48bdb847ab5bceab710193e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAyODU1Mw==", "bodyText": "OH I guess you already changed it, all good! \ud83d\ude09", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r430028553", "createdAt": "2020-05-25T17:34:20Z", "author": {"login": "kingthorin"}, "path": "addOns/graphql/src/main/resources/org/zaproxy/zap/extension/graphql/resources/Messages.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+# This file defines the default (English) variants of all of the internationalised messages\n+\n+graphql.api.action.importFile = Imports a GraphQL schema from a local file.\n+graphql.api.action.importFile.param.file = The file that contains the GraphQL schema.\n+graphql.api.action.importFile.param.target = The Target URL to override the server URL present in the schema.\n+graphql.api.action.importUrl = Retrieves a GraphQL schema from an endpoint URL (via Introspection)\n+graphql.api.action.importUrl.param.url = The URL locating the GraphQL endpoint.\n+\n+graphql.cmdline.file.help = Imports a GraphQL schema from the specified file name\n+graphql.cmdline.url.help = Retrieves a GraphQL schema from the specified URL (via Introspection)\n+graphql.cmdline.targeturl.help = The Target URL. Refer to the help for supported format.\n+\n+graphql.desc = Allows you to inspect and attack GraphQL endpoints\n+graphql.topmenu.import.importgraphql = Import a GraphQL schema from the local file system\n+graphql.topmenu.import.importgraphql.tooltip = The file must be a formally described GraphQL schema.\n+graphql.topmenu.import.importremotegraphql = Import a GraphQL schema from an endpoint URL (via Introspection)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2MzY3OA=="}, "originalCommit": {"oid": "1161b5c7dfb2b916f48bdb847ab5bceab710193e"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTE0MTU2OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjo1ODowNFrOGbICPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjo1ODowNFrOGbICPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5NjM4Mw==", "bodyText": "Worth adding:\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r431096383", "createdAt": "2020-05-27T12:58:04Z", "author": {"login": "thc202"}, "path": "addOns/graphql/CHANGELOG.md", "diffHunk": "@@ -0,0 +1,8 @@\n+# Changelog\n+All notable changes to this add-on will be documented in this file.\n+\n+The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ae1e5330c7ae398f5fd04cedf1851fd0a8d208"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTE0NDM2OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/java/org/zaproxy/zap/extension/graphql/ExtensionGraphQL.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjo1ODozMlrOGbIEMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjo1ODozMlrOGbIEMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5Njg4MA==", "bodyText": "org.zaproxy.addon.graphql, being used for new add-ons.", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r431096880", "createdAt": "2020-05-27T12:58:32Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/zap/extension/graphql/ExtensionGraphQL.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.graphql;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ae1e5330c7ae398f5fd04cedf1851fd0a8d208"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTE0NDk4OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/java/org/zaproxy/zap/extension/graphql/ExtensionGraphQL.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjo1ODozOFrOGbIEpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjo1ODozOFrOGbIEpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5Njk5Nw==", "bodyText": "I'd suggest GraphQl, having acronyms all uppercase makes it harder to read when there are several together (e.g. GraphQLAPI).", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r431096997", "createdAt": "2020-05-27T12:58:38Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/zap/extension/graphql/ExtensionGraphQL.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.graphql;\n+\n+import java.io.File;\n+import java.util.List;\n+import org.parosproxy.paros.Constant;\n+import org.parosproxy.paros.extension.CommandLineArgument;\n+import org.parosproxy.paros.extension.CommandLineListener;\n+import org.parosproxy.paros.extension.ExtensionAdaptor;\n+import org.parosproxy.paros.extension.ExtensionHook;\n+import org.parosproxy.paros.view.View;\n+import org.zaproxy.zap.view.ZapMenuItem;\n+\n+public class ExtensionGraphQL extends ExtensionAdaptor implements CommandLineListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ae1e5330c7ae398f5fd04cedf1851fd0a8d208"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTE2ODQ2OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/java/org/zaproxy/zap/extension/graphql/ExtensionGraphQL.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzowMjowOVrOGbIVKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzowMjowOVrOGbIVKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEwMTIyNQ==", "bodyText": "Should override canUnload and supportsDb to return true.", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r431101225", "createdAt": "2020-05-27T13:02:09Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/zap/extension/graphql/ExtensionGraphQL.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.graphql;\n+\n+import java.io.File;\n+import java.util.List;\n+import org.parosproxy.paros.Constant;\n+import org.parosproxy.paros.extension.CommandLineArgument;\n+import org.parosproxy.paros.extension.CommandLineListener;\n+import org.parosproxy.paros.extension.ExtensionAdaptor;\n+import org.parosproxy.paros.extension.ExtensionHook;\n+import org.parosproxy.paros.view.View;\n+import org.zaproxy.zap.view.ZapMenuItem;\n+\n+public class ExtensionGraphQL extends ExtensionAdaptor implements CommandLineListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ae1e5330c7ae398f5fd04cedf1851fd0a8d208"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTE3Mzc2OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/java/org/zaproxy/zap/extension/graphql/ExtensionGraphQL.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzowMjo1N1rOGbIY1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzowMjo1N1rOGbIY1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEwMjE2Ng==", "bodyText": "Could use lambda.", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r431102166", "createdAt": "2020-05-27T13:02:57Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/zap/extension/graphql/ExtensionGraphQL.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.graphql;\n+\n+import java.io.File;\n+import java.util.List;\n+import org.parosproxy.paros.Constant;\n+import org.parosproxy.paros.extension.CommandLineArgument;\n+import org.parosproxy.paros.extension.CommandLineListener;\n+import org.parosproxy.paros.extension.ExtensionAdaptor;\n+import org.parosproxy.paros.extension.ExtensionHook;\n+import org.parosproxy.paros.view.View;\n+import org.zaproxy.zap.view.ZapMenuItem;\n+\n+public class ExtensionGraphQL extends ExtensionAdaptor implements CommandLineListener {\n+\n+    public static final String NAME = \"ExtensionGraphQL\";\n+\n+    private ZapMenuItem menuImportLocalGraphQL = null;\n+    private ZapMenuItem menuImportUrlGraphQL = null;\n+\n+    private CommandLineArgument[] arguments = new CommandLineArgument[3];\n+    private static final int ARG_IMPORT_FILE_IDX = 0;\n+    private static final int ARG_IMPORT_URL_IDX = 1;\n+    private static final int ARG_TARGET_URL_IDX = 2;\n+\n+    public ExtensionGraphQL() {\n+        super(NAME);\n+    }\n+\n+    @Override\n+    public void hook(ExtensionHook extensionHook) {\n+        super.hook(extensionHook);\n+\n+        if (getView() != null) {\n+            extensionHook.getHookMenu().addImportMenuItem(getMenuImportLocalGraphQL());\n+            extensionHook.getHookMenu().addImportMenuItem(getMenuImportUrlGraphQL());\n+        }\n+\n+        extensionHook.addApiImplementor(new GraphQLAPI(this));\n+        extensionHook.addCommandLine(getCommandLineArguments());\n+    }\n+\n+    /* Menu option to import a local GraphQL file. */\n+    private ZapMenuItem getMenuImportLocalGraphQL() {\n+        if (menuImportLocalGraphQL == null) {\n+            menuImportLocalGraphQL = new ZapMenuItem(\"graphql.topmenu.import.importgraphql\");\n+            menuImportLocalGraphQL.setToolTipText(\n+                    Constant.messages.getString(\"graphql.topmenu.import.importgraphql.tooltip\"));\n+            menuImportLocalGraphQL.addActionListener(\n+                    new java.awt.event.ActionListener() {\n+                        @Override\n+                        public void actionPerformed(java.awt.event.ActionEvent e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ae1e5330c7ae398f5fd04cedf1851fd0a8d208"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjgwNjY2OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/graphql.gradle.kts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODozOTozMFrOGcT7JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODozOTozMFrOGcT7JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzOTc0OQ==", "bodyText": "Needs update (per package/class rename).", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r432339749", "createdAt": "2020-05-29T08:39:30Z", "author": {"login": "thc202"}, "path": "addOns/graphql/graphql.gradle.kts", "diffHunk": "@@ -0,0 +1,16 @@\n+version = \"0.0.1\"\n+description = \"Inspect and attack GraphQL endpoints.\"\n+\n+zapAddOn {\n+    addOnName.set(\"GraphQL Support\")\n+    zapVersion.set(\"2.9.0\")\n+\n+    manifest {\n+        author.set(\"ZAP Dev Team\")\n+    }\n+\n+    apiClientGen {\n+        api.set(\"org.zaproxy.zap.extension.graphql.GraphQLAPI\")\n+        messages.set(file(\"src/main/resources/org/zaproxy/zap/extension/graphql/resources/Messages.properties\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00e6f34b7cb4102b677c30e033b81cf1c1b128c1"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjgwNzg5OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/ExtensionGraphQl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODozOTo1NFrOGcT78g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODozOTo1NFrOGcT78g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzOTk1NA==", "bodyText": "Could be removed.", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r432339954", "createdAt": "2020-05-29T08:39:54Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/ExtensionGraphQl.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.addon.graphql;\n+\n+import java.io.File;\n+import java.util.List;\n+import org.parosproxy.paros.Constant;\n+import org.parosproxy.paros.extension.CommandLineArgument;\n+import org.parosproxy.paros.extension.CommandLineListener;\n+import org.parosproxy.paros.extension.ExtensionAdaptor;\n+import org.parosproxy.paros.extension.ExtensionHook;\n+import org.parosproxy.paros.view.View;\n+import org.zaproxy.zap.view.ZapMenuItem;\n+\n+public class ExtensionGraphQl extends ExtensionAdaptor implements CommandLineListener {\n+\n+    public static final String NAME = \"ExtensionGraphQl\";\n+\n+    private ZapMenuItem menuImportLocalGraphQl = null;\n+    private ZapMenuItem menuImportUrlGraphQl = null;\n+\n+    private CommandLineArgument[] arguments = new CommandLineArgument[3];\n+    private static final int ARG_IMPORT_FILE_IDX = 0;\n+    private static final int ARG_IMPORT_URL_IDX = 1;\n+    private static final int ARG_TARGET_URL_IDX = 2;\n+\n+    public ExtensionGraphQl() {\n+        super(NAME);\n+    }\n+\n+    @Override\n+    public void hook(ExtensionHook extensionHook) {\n+        super.hook(extensionHook);\n+\n+        if (getView() != null) {\n+            extensionHook.getHookMenu().addImportMenuItem(getMenuImportLocalGraphQl());\n+            extensionHook.getHookMenu().addImportMenuItem(getMenuImportUrlGraphQl());\n+        }\n+\n+        extensionHook.addApiImplementor(new GraphQlAPI(this));\n+        extensionHook.addCommandLine(getCommandLineArguments());\n+    }\n+\n+    /* Menu option to import a local GraphQl file. */\n+    private ZapMenuItem getMenuImportLocalGraphQl() {\n+        if (menuImportLocalGraphQl == null) {\n+            menuImportLocalGraphQl = new ZapMenuItem(\"graphql.topmenu.import.importgraphql\");\n+            menuImportLocalGraphQl.setToolTipText(\n+                    Constant.messages.getString(\"graphql.topmenu.import.importgraphql.tooltip\"));\n+            menuImportLocalGraphQl.addActionListener(\n+                    e ->\n+                            View.getSingleton()\n+                                    .showMessageDialog(\n+                                            Constant.messages.getString(\n+                                                    \"graphql.importfromdialog.message\")));\n+            ;\n+        }\n+        return menuImportLocalGraphQl;\n+    }\n+\n+    /* Menu option to import a GraphQl file from a given URL. */\n+    private ZapMenuItem getMenuImportUrlGraphQl() {\n+        if (menuImportUrlGraphQl == null) {\n+            menuImportUrlGraphQl = new ZapMenuItem(\"graphql.topmenu.import.importremotegraphql\");\n+            menuImportUrlGraphQl.setToolTipText(\n+                    Constant.messages.getString(\n+                            \"graphql.topmenu.import.importremotegraphql.tooltip\"));\n+\n+            final ExtensionGraphQl shadowCopy = this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00e6f34b7cb4102b677c30e033b81cf1c1b128c1"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjgwODg1OnYy", "diffSide": "RIGHT", "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/GraphQlAPI.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODo0MDoxMFrOGcT8fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODo0MDoxMFrOGcT8fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0MDA5NQ==", "bodyText": "Could be GraphQlApi.", "url": "https://github.com/zaproxy/zap-extensions/pull/2396#discussion_r432340095", "createdAt": "2020-05-29T08:40:10Z", "author": {"login": "thc202"}, "path": "addOns/graphql/src/main/java/org/zaproxy/addon/graphql/GraphQlAPI.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.addon.graphql;\n+\n+import net.sf.json.JSONObject;\n+import org.apache.log4j.Logger;\n+import org.zaproxy.zap.extension.api.ApiAction;\n+import org.zaproxy.zap.extension.api.ApiException;\n+import org.zaproxy.zap.extension.api.ApiImplementor;\n+import org.zaproxy.zap.extension.api.ApiResponse;\n+import org.zaproxy.zap.extension.api.ApiResponseElement;\n+\n+public class GraphQlAPI extends ApiImplementor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00e6f34b7cb4102b677c30e033b81cf1c1b128c1"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 689, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}