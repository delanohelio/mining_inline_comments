{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MTE3NjU2", "number": 2635, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1Mzo0MlrOE-iBVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NTo1MlrOE-iEFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDA0NTY2OnYy", "diffSide": "RIGHT", "path": "addOns/commonlib/src/main/java/org/zaproxy/addon/commonlib/CookieUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1Mzo0MlrOH7vM6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1Mzo0MlrOH7vM6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMTM4NQ==", "bodyText": "Could you add a test?", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532401385", "createdAt": "2020-11-30T07:53:42Z", "author": {"login": "thc202"}, "path": "addOns/commonlib/src/main/java/org/zaproxy/addon/commonlib/CookieUtils.java", "diffHunk": "@@ -146,6 +146,9 @@ public static String getSetCookiePlusName(String header, String cookieHeaderValu\n             return null;\n         }\n         String name = getCookieName(cookieHeaderValue);\n+        if (name == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDA0NTg3OnYy", "diffSide": "RIGHT", "path": "addOns/custompayloads/src/main/java/org/zaproxy/zap/extension/custompayloads/PayloadIterator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1Mzo0OFrOH7vNFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1Mzo0OFrOH7vNFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMTQzMA==", "bodyText": "This advances the internal iterator, which would cause the PayloadIterator to skip payloads. Could you add tests?", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532401430", "createdAt": "2020-11-30T07:53:48Z", "author": {"login": "thc202"}, "path": "addOns/custompayloads/src/main/java/org/zaproxy/zap/extension/custompayloads/PayloadIterator.java", "diffHunk": "@@ -57,6 +58,9 @@ public boolean hasNext() {\n \n         @Override\n         public String next() {\n+            if (!hasNext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDA1MDYyOnYy", "diffSide": "RIGHT", "path": "addOns/httpsInfo/src/main/java/org/zaproxy/zap/extension/httpsinfo/HttpsInfoOutputPanel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NToxNFrOH7vPzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NToxNFrOH7vPzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjEyNA==", "bodyText": "Should it just show that the target is invalid?", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532402124", "createdAt": "2020-11-30T07:55:14Z", "author": {"login": "thc202"}, "path": "addOns/httpsInfo/src/main/java/org/zaproxy/zap/extension/httpsinfo/HttpsInfoOutputPanel.java", "diffHunk": "@@ -123,7 +123,10 @@ public void run() {\n                             String warnMsg =\n                                     Constant.messages.getString(\n                                             \"httpsinfo.init.warning\",\n-                                            getTarget().toString(),\n+                                            getTarget() == null\n+                                                    ? Constant.messages.getString(\n+                                                            \"httpsinfo.init.warning.missing\")\n+                                                    : getTarget().toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDA1MjEwOnYy", "diffSide": "RIGHT", "path": "addOns/importLogFiles/src/main/java/org/zaproxy/zap/extension/importLogFiles/ImportLogAPI.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NTo0MVrOH7vQnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NTo0MVrOH7vQnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjMzMg==", "bodyText": "This needs to be removed (causing the build to fail).", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532402332", "createdAt": "2020-11-30T07:55:41Z", "author": {"login": "thc202"}, "path": "addOns/importLogFiles/src/main/java/org/zaproxy/zap/extension/importLogFiles/ImportLogAPI.java", "diffHunk": "@@ -289,46 +289,26 @@ private static ApiResponseElement processLogs(\n         }\n \n         if (httpPOSTData == null) {\n-            BufferedWriter wr = null;\n-            BufferedReader br = null;\n-            try {\n+            try (BufferedReader br = new BufferedReader(new FileReader(sourceFilePath));\n+                    BufferedWriter wr = new BufferedWriter(new FileWriter(targetFile))) {\n                 String sCurrentLine;\n \n-                br = new BufferedReader(new FileReader(sourceFilePath));\n-                wr = new BufferedWriter(new FileWriter(targetFile));\n                 while ((sCurrentLine = br.readLine()) != null) {\n                     wr.write(sCurrentLine);\n                     wr.newLine();\n                 }\n \n             } catch (IOException e) {\n                 log.error(e.getMessage(), e);\n-            } finally {\n-                try {\n-                    if (wr != null) wr.close();\n-                    if (br != null) br.close();\n-                } catch (IOException ex) {\n-                    log.error(ex.getMessage(), ex);\n-                }\n             }\n         } else {\n-            FileOutputStream fop = null;\n-            try {\n-                fop = new FileOutputStream(targetFile);\n+            try (FileOutputStream fop = new FileOutputStream(targetFile)) {\n                 byte[] contentInBytes = httpPOSTData.getBytes();\n                 fop.write(contentInBytes);\n                 fop.flush();\n                 fop.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDA1MjQ2OnYy", "diffSide": "RIGHT", "path": "addOns/portscan/src/main/java/org/zaproxy/zap/extension/portscan/PortScan.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NTo0NlrOH7vQyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NTo0NlrOH7vQyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjM3Nw==", "bodyText": "Should not catch the exception to keep the same behaviour.", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532402377", "createdAt": "2020-11-30T07:55:46Z", "author": {"login": "thc202"}, "path": "addOns/portscan/src/main/java/org/zaproxy/zap/extension/portscan/PortScan.java", "diffHunk": "@@ -187,9 +185,10 @@ public Integer call() {\n \n                 } else {\n                     // Not using a proxy\n-                    s = new Socket();\n-                    s.connect(new InetSocketAddress(site, port), timeout);\n-                    s.close();\n+                    try (Socket sock = new Socket()) {\n+                        sock.connect(new InetSocketAddress(site, port), timeout);\n+                    } catch (IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDA1MjcxOnYy", "diffSide": "RIGHT", "path": "addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireScanRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NTo1MlrOH7vQ8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NTo1MlrOH7vQ8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjQxOA==", "bodyText": "getRepo() == null, this could be done in the initial if.", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532402418", "createdAt": "2020-11-30T07:55:52Z", "author": {"login": "thc202"}, "path": "addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireScanRule.java", "diffHunk": "@@ -66,6 +66,10 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n         if (!msg.getResponseHeader().isImage()\n                 && !msg.getRequestHeader().isCss()\n                 && !msg.getResponseHeader().isCss()) {\n+            Repo repo = getRepo();\n+            if (repo == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 653, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}