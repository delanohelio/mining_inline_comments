{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyOTU2OTA3", "number": 1459, "title": "Add new claim \"aut\" for authorized user type in JWT Access Tokn", "bodyText": "Proposed changes in this pull request\nFixes wso2/product-is#9366 : Add new claim \"aut\" for JWT access token\nWith the fix, the JWT access token for client_credential grant will look as follows\n{\n  \"sub\": \"admin@carbon.super\",\n  \"aut\": \"APPLICATION\",\n  \"aud\": \"6GuiZoxO7LfF8jD81pPVVd7IuVca\",\n  \"nbf\": 1599208425,\n  \"azp\": \"6GuiZoxO7LfF8jD81pPVVd7IuVca\",\n  \"scope\": \"am_application_scope default\",\n  \"iss\": \"https://localhost:9443/oauth2/token\",\n  \"exp\": 1599212025,\n  \"iat\": 1599208425,\n  \"jti\": \"81af9fc7-6b14-4ba2-88de-9e3b069b71d1\"\n}\n\naut claim added to the standard introspection response for both Opaque and JWT tokens.\n{\n    \"aut\": \"APPLICATION_USER\",\n    \"nbf\": 1605076039,\n    \"active\": true,\n    \"token_type\": \"Bearer\",\n    \"exp\": 1605079639,\n    \"iat\": 1605076039,\n    \"client_id\": \"YDBC9ojjWSRlQAT6uy_1syMkuJ4a\",\n    \"username\": \"user@carbon.super\"\n}\n\nWhen should this PR be merged\nN/A\nFollow up actions\nN/A\nChecklist (for reviewing)\nGeneral\n\n Is this PR explained thoroughly? All code changes must be accounted for in the PR description.\n Is the PR labeled correctly?\n\nFunctionality\n\n Are all requirements met? Compare implemented functionality with the requirements specification.\n Does the UI work as expected? There should be no Javascript errors in the console; all resources should load. There should be no unexpected errors. Deliberately try to break the feature to find out if there are corner cases that are not handled.\n\nCode\n\n Do you fully understand the introduced changes to the code? If not ask for clarification, it might uncover ways to solve a problem in a more elegant and efficient way.\n Does the PR introduce any inefficient database requests? Use the debug server to check for duplicate requests.\n Are all necessary strings marked for translation? All strings that are exposed to users via the UI must be marked for translation.\n\nTests\n\n Are there sufficient test cases? Ensure that all components are tested individually; models, forms, and serializers should be tested in isolation even if a test for a view covers these components.\n If this is a bug fix, are tests for the issue in place?  There must be a test case for the bug to ensure the issue won\u2019t regress. Make sure that the tests break without the new code to fix the issue.\n If this is a new feature or a significant change to an existing feature? has the manual testing spreadsheet been updated with instructions for manual testing?\n\nSecurity\n\n Confirm this PR doesn't commit any keys, passwords, tokens, usernames, or other secrets.\n Are all UI and API inputs run through forms or serializers?\n Are all external inputs validated and sanitized appropriately?\n Does all branching logic have a default case?\n Does this solution handle outliers and edge cases gracefully?\n Are all external communications secured and restricted to SSL?\n\nDocumentation\n\n Are changes to the UI documented in the platform docs? If this PR introduces new platform site functionality or changes existing ones, the changes should be documented.\n Are changes to the API documented in the API docs? If this PR introduces new API functionality or changes existing ones, the changes must be documented.\n Are reusable components documented? If this PR introduces components that are relevant to other developers (for instance a mixin for a view or a generic form) they should be documented in the Wiki.", "createdAt": "2020-09-25T09:41:13Z", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459", "merged": true, "mergeCommit": {"oid": "b7f4e0ffc425a58fcb0e8de2a91508cfc1e78b9f"}, "closed": true, "closedAt": "2020-11-11T12:02:21Z", "author": {"login": "dushaniw"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMSVotgH2gAyNDkyOTU2OTA3OjVjOGM2MWQ3M2Y4MDY0ZmRjNzJmN2NiYjk3YTdiNDEyNmM1YWYwZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbY8I6AFqTUyNzkyODU3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5c8c61d73f8064fdc72f7cbb97a7b4126c5af0e9", "author": {"user": {"login": "dushaniw", "name": "Dushani Wellappili"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/5c8c61d73f8064fdc72f7cbb97a7b4126c5af0e9", "committedDate": "2020-09-25T09:26:15Z", "message": "fix https://github.com/wso2/product-is/issues/9366 : add new claim \"aut\" for authorized user type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTI2NTM5", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#pullrequestreview-526926539", "createdAt": "2020-11-10T07:39:32Z", "commit": {"oid": "5c8c61d73f8064fdc72f7cbb97a7b4126c5af0e9"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTI4ODgz", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#pullrequestreview-526928883", "createdAt": "2020-11-10T07:43:25Z", "commit": {"oid": "5c8c61d73f8064fdc72f7cbb97a7b4126c5af0e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzo0MzoyNVrOHwPrQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzo0MzoyNVrOHwPrQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM1MDUzMQ==", "bodyText": "We have\nAccessTokenDO accessTokenDO = (AccessTokenDO) messageContext.getProperty(\"AccessTokenDO\");\nat the beginning of the method. Can't we use that variable here?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r520350531", "createdAt": "2020-11-10T07:43:25Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authcontext/JWTTokenGenerator.java", "diffHunk": "@@ -226,6 +227,12 @@ public void generateToken(OAuth2TokenValidationMessageContext messageContext) th\n         claimsSetBuilder.claim(API_GATEWAY_ID + \"/enduser\", authzUser);\n         //TODO: check setting audience\n \n+        if (messageContext.getProperty(OAuthConstants.ACCESS_TOKEN_DO) != null &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c8c61d73f8064fdc72f7cbb97a7b4126c5af0e9"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "310db8039b9159fd17d81742176091921f0a8497", "author": {"user": {"login": "dushaniw", "name": "Dushani Wellappili"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/310db8039b9159fd17d81742176091921f0a8497", "committedDate": "2020-11-10T07:45:55Z", "message": "Merge branch 'master' of github.com:wso2-extensions/identity-inbound-auth-oauth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d9078223b61023395b613d0e075f1ef2f3845f7", "author": {"user": {"login": "dushaniw", "name": "Dushani Wellappili"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/0d9078223b61023395b613d0e075f1ef2f3845f7", "committedDate": "2020-11-10T14:32:48Z", "message": "reuse AccessTokenDAO object"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Mjc2NjU0", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#pullrequestreview-527276654", "createdAt": "2020-11-10T14:47:00Z", "commit": {"oid": "0d9078223b61023395b613d0e075f1ef2f3845f7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MzAyNjM5", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#pullrequestreview-527302639", "createdAt": "2020-11-10T15:11:34Z", "commit": {"oid": "0d9078223b61023395b613d0e075f1ef2f3845f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNToxMTozNVrOHwhNmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNToxMTozNVrOHwhNmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYzNzg0OA==", "bodyText": "Rather than adding it in this JWT, wouldn't it be better if we put this value in the introspection response?\nIs this JWT generator used in APIM context?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r520637848", "createdAt": "2020-11-10T15:11:35Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authcontext/JWTTokenGenerator.java", "diffHunk": "@@ -226,6 +227,10 @@ public void generateToken(OAuth2TokenValidationMessageContext messageContext) th\n         claimsSetBuilder.claim(API_GATEWAY_ID + \"/enduser\", authzUser);\n         //TODO: check setting audience\n \n+        if (accessTokenDO.getTokenType() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d9078223b61023395b613d0e075f1ef2f3845f7"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "690092a91503d3141e87813057ea5bc052db0022", "author": {"user": {"login": "dushaniw", "name": "Dushani Wellappili"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/690092a91503d3141e87813057ea5bc052db0022", "committedDate": "2020-11-11T06:29:46Z", "message": "add 'aut' to IntrospectionResponse"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3OTAwNTE2", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#pullrequestreview-527900516", "createdAt": "2020-11-11T06:41:38Z", "commit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MTozOVrOHxAEEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MTozOVrOHxAEEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzMxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n          \n          \n            \n                public IntrospectionResponseBuilder setAuthorizedUserType(String authorizedUserType) {", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521143315", "createdAt": "2020-11-11T06:41:39Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3OTAwODQ0", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#pullrequestreview-527900844", "createdAt": "2020-11-11T06:41:52Z", "commit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MTo1MlrOHxAEVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MTo1MlrOHxAEVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzM4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (StringUtils.isNotBlank(aut)) {\n          \n          \n            \n                    if (StringUtils.isNotBlank(authorizedUserType)) {", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521143383", "createdAt": "2020-11-11T06:41:52Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n+\n+        if (StringUtils.isNotBlank(aut)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3OTAxMTIz", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#pullrequestreview-527901123", "createdAt": "2020-11-11T06:42:03Z", "commit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MjowM1rOHxAElw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MjowM1rOHxAElw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzQ0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        parameters.put(IntrospectionResponse.AUT, aut);\n          \n          \n            \n                        parameters.put(IntrospectionResponse.AUT, authorizedUserType);", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521143447", "createdAt": "2020-11-11T06:42:03Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n+\n+        if (StringUtils.isNotBlank(aut)) {\n+            parameters.put(IntrospectionResponse.AUT, aut);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3OTAyMjUw", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#pullrequestreview-527902250", "createdAt": "2020-11-11T06:43:38Z", "commit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MzozOVrOHxAIAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MzozOVrOHxAIAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NDMyMg==", "bodyText": "Shall we use already available constants for this?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521144322", "createdAt": "2020-11-11T06:43:39Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/test/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilderTest.java", "diffHunk": "@@ -88,6 +88,7 @@ public void testResposeBuilderWithVal(boolean isActive, int notBefore, int expir\n         introspectionResponseBuilder1.setClientId(\"rgfKVdnMQnJSSr_pKFTxj3apiwYa\");\n         introspectionResponseBuilder1.setErrorCode(\"Invalid input\");\n         introspectionResponseBuilder1.setErrorDescription(\"error_discription\");\n+        introspectionResponseBuilder1.setAuthorizedUserType(\"APPLICATION_USER\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66a23338204aacc1be2b5a3969fa2bd518322e55", "author": {"user": {"login": "dushaniw", "name": "Dushani Wellappili"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/66a23338204aacc1be2b5a3969fa2bd518322e55", "committedDate": "2020-11-11T06:45:52Z", "message": "fix review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3OTI4NTc2", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#pullrequestreview-527928576", "createdAt": "2020-11-11T07:36:36Z", "commit": {"oid": "66a23338204aacc1be2b5a3969fa2bd518322e55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3155, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}