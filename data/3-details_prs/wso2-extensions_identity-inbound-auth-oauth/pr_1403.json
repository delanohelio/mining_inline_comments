{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NTc4NzAw", "number": 1403, "title": "Validate request tenant domain in tenant qualified URL mode in oauth2/dcr endpoint", "bodyText": "Fixes wso2/product-is#8616", "createdAt": "2020-06-23T13:39:43Z", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403", "merged": true, "mergeCommit": {"oid": "eac214cdf7c2dee3ee480af66e17c569cd798121"}, "closed": true, "closedAt": "2020-07-01T15:21:43Z", "author": {"login": "emswbandara"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuJmZYgFqTQzNjAzOTk0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwq44DgFqTQ0MDczMzY3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MDM5OTQ3", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#pullrequestreview-436039947", "createdAt": "2020-06-23T18:17:40Z", "commit": {"oid": "6e178a461d27bab7c261da8d92647d8ad94c2b69"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxODoxNzo0MFrOGn1I2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxODoxNzo0MFrOGn1I2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQxODI2Nw==", "bodyText": "Let's move this to a constant. (DCRMConstants.java)", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r444418267", "createdAt": "2020-06-23T18:17:40Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java", "diffHunk": "@@ -75,6 +78,16 @@\n      */\n     public Application getApplication(String clientId) throws DCRMException {\n \n+        try {\n+            String tenantDomainOfApp = OAuth2Util.getTenantDomainOfOauthApp(clientId);\n+            OAuth2Util.validateRequestTenantDomain(tenantDomainOfApp);\n+        } catch (InvalidOAuthClientException e) {\n+            throw new DCRMClientException(\"NOT_FOUND_60001\", \"Tenant domain in request does not match with the \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e178a461d27bab7c261da8d92647d8ad94c2b69"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d3e2895f83e64b65120c928c67ddf656ebaa664", "author": {"user": {"login": "emswbandara", "name": "Sathya Bandara"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/9d3e2895f83e64b65120c928c67ddf656ebaa664", "committedDate": "2020-06-29T04:02:14Z", "message": "Validate request tenant domain in tenant qualified URL mode"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5cd29ca30ae1e5fa435bfe54618c3a908196da6", "author": {"user": {"login": "emswbandara", "name": "Sathya Bandara"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/a5cd29ca30ae1e5fa435bfe54618c3a908196da6", "committedDate": "2020-06-29T03:21:20Z", "message": "Deprecate identity connect endpoint"}, "afterCommit": {"oid": "c33e778aa3bae2403d467db6f582b9e323ec441b", "author": {"user": {"login": "emswbandara", "name": "Sathya Bandara"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/c33e778aa3bae2403d467db6f582b9e323ec441b", "committedDate": "2020-06-29T04:02:14Z", "message": "Deprecate identity connect endpoint"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5aacf299f526ac5ba1c63b8540778c116b1a9143", "author": {"user": {"login": "emswbandara", "name": "Sathya Bandara"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/5aacf299f526ac5ba1c63b8540778c116b1a9143", "committedDate": "2020-06-29T04:44:00Z", "message": "Address PR comments"}, "afterCommit": {"oid": "0c00fa03a2871bc2e4f9ae2a54fa2c0454bc5ab8", "author": {"user": {"login": "emswbandara", "name": "Sathya Bandara"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/0c00fa03a2871bc2e4f9ae2a54fa2c0454bc5ab8", "committedDate": "2020-07-01T07:02:39Z", "message": "Address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjQ4ODgw", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#pullrequestreview-440648880", "createdAt": "2020-07-01T08:19:51Z", "commit": {"oid": "0c00fa03a2871bc2e4f9ae2a54fa2c0454bc5ab8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODoxOTo1MVrOGrbzIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODoxOTo1MVrOGrbzIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE5NzQxMQ==", "bodyText": "Can we move this to a common private method and reuse?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448197411", "createdAt": "2020-07-01T08:19:51Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java", "diffHunk": "@@ -75,6 +78,16 @@\n      */\n     public Application getApplication(String clientId) throws DCRMException {\n \n+        try {\n+            String tenantDomainOfApp = OAuth2Util.getTenantDomainOfOauthApp(clientId);\n+            OAuth2Util.validateRequestTenantDomain(tenantDomainOfApp);\n+        } catch (InvalidOAuthClientException e) {\n+            throw new DCRMClientException(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getErrorCode(),\n+                    String.format(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getMessage(), clientId));\n+        } catch (IdentityOAuth2Exception e) {\n+            throw new DCRMServerException(String.format(DCRMConstants.ErrorMessages.FAILED_TO_VALIDATE_TENANT_DOMAIN\n+                    .getMessage(), clientId));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c00fa03a2871bc2e4f9ae2a54fa2c0454bc5ab8"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "author": {"user": {"login": "emswbandara", "name": "Sathya Bandara"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "committedDate": "2020-07-01T08:30:20Z", "message": "Address PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c00fa03a2871bc2e4f9ae2a54fa2c0454bc5ab8", "author": {"user": {"login": "emswbandara", "name": "Sathya Bandara"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/0c00fa03a2871bc2e4f9ae2a54fa2c0454bc5ab8", "committedDate": "2020-07-01T07:02:39Z", "message": "Address PR comments"}, "afterCommit": {"oid": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "author": {"user": {"login": "emswbandara", "name": "Sathya Bandara"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "committedDate": "2020-07-01T08:30:20Z", "message": "Address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjYzNDI5", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#pullrequestreview-440663429", "createdAt": "2020-07-01T08:38:46Z", "commit": {"oid": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODozODo0NlrOGrcfgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODozODo0NlrOGrcfgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIwODc3MA==", "bodyText": "Any reason why we are sending the error code in \"NOT_FOUND_60001\" format?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448208770", "createdAt": "2020-07-01T08:38:46Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/DCRMConstants.java", "diffHunk": "@@ -48,20 +48,35 @@\n         CONFLICT_EXISTING_CLIENT_ID(\"Client id %s already exist in the system\"),\n         BAD_REQUEST_CLIENT_ID_VIOLATES_PATTERN(\"Provided client id is not adhering to the provided regex %s\"),\n         FORBIDDEN_UNAUTHORIZED_USER(\"User does not have access to the application %s\"),\n-        ERROR_CODE_UNEXPECTED(\"Unexpected error\");\n+        ERROR_CODE_UNEXPECTED(\"Unexpected error\"),\n+        TENANT_DOMAIN_MISMATCH(\"NOT_FOUND_60001\", \"Tenant domain in request does not match with the application \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzMzMzUz", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#pullrequestreview-440733353", "createdAt": "2020-07-01T10:10:32Z", "commit": {"oid": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzMzNjcx", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#pullrequestreview-440733671", "createdAt": "2020-07-01T10:10:58Z", "commit": {"oid": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDoxMDo1OFrOGrfqrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDoxMDo1OFrOGrfqrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2MDc4Mw==", "bodyText": "Shouldn't this be a client error?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448260783", "createdAt": "2020-07-01T10:10:58Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java", "diffHunk": "@@ -669,4 +675,24 @@ private static boolean clientIdMatchesRegex(String clientId, String clientIdVali\n         }\n         return clientIdRegexPattern.matcher(clientId).matches();\n     }\n+\n+    /**\n+     * Validates whether the tenant domain in the request matches with the application tenant domain.\n+     *\n+     * @param clientId Consumer key of application.\n+     * @throws DCRMException DCRMException\n+     */\n+    private void validateRequestTenantDomain(String clientId) throws DCRMException {\n+\n+        try {\n+            String tenantDomainOfApp = OAuth2Util.getTenantDomainOfOauthApp(clientId);\n+            OAuth2Util.validateRequestTenantDomain(tenantDomainOfApp);\n+        } catch (InvalidOAuthClientException e) {\n+            throw new DCRMClientException(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getErrorCode(),\n+                    String.format(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getMessage(), clientId));\n+        } catch (IdentityOAuth2Exception e) {\n+            throw new DCRMServerException(String.format(DCRMConstants.ErrorMessages.FAILED_TO_VALIDATE_TENANT_DOMAIN", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3115, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}