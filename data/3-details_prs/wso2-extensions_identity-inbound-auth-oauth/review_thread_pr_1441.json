{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzOTc1MDE3", "number": 1441, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjowODoyOFrOEiMMiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjowODoyOFrOEiMMiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Mjg2ODU3OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/util/EndpointUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjowODoyOFrOHP7aDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoxNzoyMlrOHP-BeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2NDAxMw==", "bodyText": "Shouldn't this be the other way in the master?\nie. by default we should not allow additional params in the error URL as it violates the spec", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1441#discussion_r486464013", "createdAt": "2020-09-10T16:08:28Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/util/EndpointUtil.java", "diffHunk": "@@ -966,13 +957,53 @@ private static String retrieveStateForErrorURL(OAuth2Parameters oAuth2Parameters\n         return state;\n     }\n \n+    /**\n+     * Return updated redirect URL.\n+     *\n+     * @param request       HttpServletRequest\n+     * @param redirectUri   Redirect Uri\n+     * @param errorCode     Error Code\n+     * @param errorMessage  Message of the error\n+     * @param state         State from the request\n+     * @param appName       Application Name\n+     * @return Updated Redirect URL\n+     */\n+    private static String getUpdatedRedirectURL(HttpServletRequest request, String redirectUri, String errorCode,\n+                                                String errorMessage, String state, String appName) {\n+\n+        String updatedRedirectUri = redirectUri;\n+        try {\n+            OAuthProblemException ex = OAuthProblemException.error(errorCode).description(errorMessage);\n+            if (OAuth2Util.isImplicitResponseType(request.getParameter(OAuthConstants.OAuth20Params.RESPONSE_TYPE))\n+                    || OAuth2Util.isHybridResponseType(request.getParameter(OAuthConstants.OAuth20Params.\n+                    RESPONSE_TYPE))) {\n+                updatedRedirectUri = OAuthASResponse.errorResponse(HttpServletResponse.SC_FOUND)\n+                        .error(ex).location(redirectUri).setState(state).setParam(OAuth.OAUTH_ACCESS_TOKEN, null)\n+                        .buildQueryMessage().getLocationUri();\n+            } else {\n+                updatedRedirectUri = OAuthASResponse.errorResponse(HttpServletResponse.SC_FOUND)\n+                        .error(ex).location(redirectUri).setState(state).buildQueryMessage().getLocationUri();\n+            }\n+\n+        } catch (OAuthSystemException e) {\n+            log.error(\"Server error occurred while building error redirect url for application: \" + appName, e);\n+        }\n+        return updatedRedirectUri;\n+    }\n+\n     /**\n      * Method to retrieve the <AllowAdditionalParamsFromErrorUrl> config from the OAuth Configuration.\n      * @return Retrieved config (true or false)\n      */\n     private static boolean isAllowAdditionalParamsFromErrorUrlEnabled() {\n \n-        return Boolean.parseBoolean(IdentityUtil.getProperty(ALLOW_ADDITIONAL_PARAMS_FROM_ERROR_URL));\n+        String isAllowAdditionalParamsEnabled = IdentityUtil.getProperty(ALLOW_ADDITIONAL_PARAMS_FROM_ERROR_URL);\n+\n+        if (StringUtils.isNotBlank(isAllowAdditionalParamsEnabled)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b179af1d4fb8d5a6c79c03332d85f40c1697288f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwNjg3Mg==", "bodyText": "Made isAllowAdditionalParamsEnabled be false by default. Thank you for pointing that out.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1441#discussion_r486506872", "createdAt": "2020-09-10T17:17:22Z", "author": {"login": "kasundharmadasa"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/util/EndpointUtil.java", "diffHunk": "@@ -966,13 +957,53 @@ private static String retrieveStateForErrorURL(OAuth2Parameters oAuth2Parameters\n         return state;\n     }\n \n+    /**\n+     * Return updated redirect URL.\n+     *\n+     * @param request       HttpServletRequest\n+     * @param redirectUri   Redirect Uri\n+     * @param errorCode     Error Code\n+     * @param errorMessage  Message of the error\n+     * @param state         State from the request\n+     * @param appName       Application Name\n+     * @return Updated Redirect URL\n+     */\n+    private static String getUpdatedRedirectURL(HttpServletRequest request, String redirectUri, String errorCode,\n+                                                String errorMessage, String state, String appName) {\n+\n+        String updatedRedirectUri = redirectUri;\n+        try {\n+            OAuthProblemException ex = OAuthProblemException.error(errorCode).description(errorMessage);\n+            if (OAuth2Util.isImplicitResponseType(request.getParameter(OAuthConstants.OAuth20Params.RESPONSE_TYPE))\n+                    || OAuth2Util.isHybridResponseType(request.getParameter(OAuthConstants.OAuth20Params.\n+                    RESPONSE_TYPE))) {\n+                updatedRedirectUri = OAuthASResponse.errorResponse(HttpServletResponse.SC_FOUND)\n+                        .error(ex).location(redirectUri).setState(state).setParam(OAuth.OAUTH_ACCESS_TOKEN, null)\n+                        .buildQueryMessage().getLocationUri();\n+            } else {\n+                updatedRedirectUri = OAuthASResponse.errorResponse(HttpServletResponse.SC_FOUND)\n+                        .error(ex).location(redirectUri).setState(state).buildQueryMessage().getLocationUri();\n+            }\n+\n+        } catch (OAuthSystemException e) {\n+            log.error(\"Server error occurred while building error redirect url for application: \" + appName, e);\n+        }\n+        return updatedRedirectUri;\n+    }\n+\n     /**\n      * Method to retrieve the <AllowAdditionalParamsFromErrorUrl> config from the OAuth Configuration.\n      * @return Retrieved config (true or false)\n      */\n     private static boolean isAllowAdditionalParamsFromErrorUrlEnabled() {\n \n-        return Boolean.parseBoolean(IdentityUtil.getProperty(ALLOW_ADDITIONAL_PARAMS_FROM_ERROR_URL));\n+        String isAllowAdditionalParamsEnabled = IdentityUtil.getProperty(ALLOW_ADDITIONAL_PARAMS_FROM_ERROR_URL);\n+\n+        if (StringUtils.isNotBlank(isAllowAdditionalParamsEnabled)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2NDAxMw=="}, "originalCommit": {"oid": "b179af1d4fb8d5a6c79c03332d85f40c1697288f"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3587, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}