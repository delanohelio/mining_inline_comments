{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NjExMzMw", "number": 1474, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNjozOTo1MFrOEuUkGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNjozOTo1MFrOEuUkGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MDA2ODczOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/openidconnect/RequestObjectValidatorImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNjozOTo1MFrOHipTDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNzozNToxOFrOHiriRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5MDI1Mg==", "bodyText": "The default implementation of validateClientIdAndResponseType won't send false but throws exceptions.\nSince validateClientIdAndResponseType is a protected method, we better honor the response of this method. If it returns false, we have to return false.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1474#discussion_r506090252", "createdAt": "2020-10-16T06:39:50Z", "author": {"login": "IsuraD"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/openidconnect/RequestObjectValidatorImpl.java", "diffHunk": "@@ -183,17 +183,30 @@ protected boolean isSignatureVerified(SignedJWT signedJWT, String jwksUri) throw\n     public boolean validateRequestObject(RequestObject requestObject, OAuth2Parameters oAuth2Parameters)\n             throws RequestObjectException {\n \n-        boolean isValid = validateClientIdAndResponseType(requestObject, oAuth2Parameters) && checkExpirationTime\n-                (requestObject);\n-        if (isParamPresent(requestObject, Constants.REQUEST_URI)) {\n-            isValid = false;\n-        } else if (isParamPresent(requestObject, Constants.REQUEST)) {\n-            isValid = false;\n-        } else if (requestObject.isSigned()) {\n-            isValid = isValidIssuer(requestObject, oAuth2Parameters) && isValidAudience(requestObject,\n-                    oAuth2Parameters);\n+        // Throws exception if invalid.\n+        validateClientIdAndResponseType(requestObject, oAuth2Parameters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c85a310b965f227b29c05729b8de1f507b11a70"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEyNjkxOA==", "bodyText": "fixed", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1474#discussion_r506126918", "createdAt": "2020-10-16T07:35:18Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/openidconnect/RequestObjectValidatorImpl.java", "diffHunk": "@@ -183,17 +183,30 @@ protected boolean isSignatureVerified(SignedJWT signedJWT, String jwksUri) throw\n     public boolean validateRequestObject(RequestObject requestObject, OAuth2Parameters oAuth2Parameters)\n             throws RequestObjectException {\n \n-        boolean isValid = validateClientIdAndResponseType(requestObject, oAuth2Parameters) && checkExpirationTime\n-                (requestObject);\n-        if (isParamPresent(requestObject, Constants.REQUEST_URI)) {\n-            isValid = false;\n-        } else if (isParamPresent(requestObject, Constants.REQUEST)) {\n-            isValid = false;\n-        } else if (requestObject.isSigned()) {\n-            isValid = isValidIssuer(requestObject, oAuth2Parameters) && isValidAudience(requestObject,\n-                    oAuth2Parameters);\n+        // Throws exception if invalid.\n+        validateClientIdAndResponseType(requestObject, oAuth2Parameters);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5MDI1Mg=="}, "originalCommit": {"oid": "4c85a310b965f227b29c05729b8de1f507b11a70"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3610, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}