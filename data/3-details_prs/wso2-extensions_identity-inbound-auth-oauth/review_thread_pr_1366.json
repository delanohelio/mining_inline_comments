{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NTk4NDEz", "number": 1366, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNDo0ODoyNVrOEG_VPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNDo0OTo1OFrOEG_WKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzY0NTQzOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNDo0ODoyNVrOGmH6QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNDo0ODoyNVrOGmH6QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyODY3Mg==", "bodyText": "Handle the exception. We can use  expectedExceptions", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1366#discussion_r442628672", "createdAt": "2020-06-19T04:48:25Z", "author": {"login": "piraveena"}, "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "diffHunk": "@@ -953,14 +972,59 @@ public void testGetIDTokenIssuer(String oidcIDTokenIssuer, String oauth2TokenEPU\n         assertEquals(OAuth2Util.getIDTokenIssuer(), issuer);\n     }\n \n+    @DataProvider(name = \"IDTokenIssuerData2\")\n+    public Object[][] idTokenIssuerData2() {\n+\n+        return new Object[][]{\n+                // tenant-qualified URL support\n+                // OIDC Config url\n+                // tenant domain\n+                // expected\n+                {false, \"https://localhost:9443/testIssuer\", \"wso2.com\", \"https://localhost:9443/testIssuer\"},\n+                {false, \"https://localhost:9443/testIssuer\", \"\", \"https://localhost:9443/testIssuer\"},\n+                {true, \"https://localhost:9443/testIssuer\", \"\", \"https://localhost:9443/oauth2/token\"},\n+                {true, \"https://localhost:9443/testIssuer\", \"wso2.com\", \"https://localhost:9443/t/wso2\" +\n+                        \".com/oauth2/token\"}\n+\n+        };\n+    }\n+\n+    @Test(dataProvider = \"IDTokenIssuerData2\")\n+    public void testGetIDTokenIssuer2(boolean enableTenantURLSupport, String oidcConfigUrl, String tenantDomain,\n+                                      String expected) {\n+\n+        when(IdentityTenantUtil.isTenantQualifiedUrlsEnabled()).thenReturn(enableTenantURLSupport);\n+        when(IdentityTenantUtil.getTenantDomainFromContext()).thenReturn(tenantDomain);\n+        when(PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantDomain()).thenReturn(\"carbon.super\");\n+\n+        FederatedAuthenticatorConfig[] federatedAuthenticatorConfigs = new FederatedAuthenticatorConfig[0];\n+        when(mockIdentityProvider.getFederatedAuthenticatorConfigs()).thenReturn(federatedAuthenticatorConfigs);\n+\n+        mockStatic(IdentityApplicationManagementUtil.class);\n+        mockStatic(FederatedAuthenticatorConfig.class);\n+        Property property = mock(Property.class);\n+        Property[] properties = new Property[0];\n+        when(IdentityApplicationManagementUtil.getFederatedAuthenticator(federatedAuthenticatorConfigs,\n+                \"openidconnect\")).thenReturn(mockFederatedAuthenticatorConfig);\n+        when(mockFederatedAuthenticatorConfig.getProperties()).thenReturn(properties);\n+        when(IdentityApplicationManagementUtil.getProperty(properties, \"IdPEntityId\")).thenReturn(property);\n+        when(property.getValue()).thenReturn(oidcConfigUrl);\n+        try {\n+            assertEquals(getIdTokenIssuer(tenantDomain), expected);\n+        } catch (IdentityOAuth2Exception e) {\n+            //mock request, hence ignored.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd0031ae4c980be43b1f345b945ee88b16bd542f"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzY0NTg4OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNDo0ODo0NFrOGmH6jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNDo0ODo0NFrOGmH6jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyODc1MQ==", "bodyText": "provide a meaning ful name for this dataprovider", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1366#discussion_r442628751", "createdAt": "2020-06-19T04:48:44Z", "author": {"login": "piraveena"}, "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "diffHunk": "@@ -953,14 +972,59 @@ public void testGetIDTokenIssuer(String oidcIDTokenIssuer, String oauth2TokenEPU\n         assertEquals(OAuth2Util.getIDTokenIssuer(), issuer);\n     }\n \n+    @DataProvider(name = \"IDTokenIssuerData2\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd0031ae4c980be43b1f345b945ee88b16bd542f"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzY0NzU1OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNDo0OTo0MlrOGmH7kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNDo0OTo0MlrOGmH7kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyOTAxMA==", "bodyText": "add the access modifier", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1366#discussion_r442629010", "createdAt": "2020-06-19T04:49:42Z", "author": {"login": "piraveena"}, "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "diffHunk": "@@ -162,6 +169,15 @@\n     @Mock\n     private AxisConfiguration mockAxisConfiguration;\n \n+    @Mock\n+    FederatedAuthenticatorConfig mockFederatedAuthenticatorConfig = new FederatedAuthenticatorConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd0031ae4c980be43b1f345b945ee88b16bd542f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzY0Nzc2OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNDo0OTo1OFrOGmH7vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNDo0OTo1OFrOGmH7vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyOTA1Mg==", "bodyText": "remove the new line", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1366#discussion_r442629052", "createdAt": "2020-06-19T04:49:58Z", "author": {"login": "piraveena"}, "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "diffHunk": "@@ -953,14 +972,59 @@ public void testGetIDTokenIssuer(String oidcIDTokenIssuer, String oauth2TokenEPU\n         assertEquals(OAuth2Util.getIDTokenIssuer(), issuer);\n     }\n \n+    @DataProvider(name = \"IDTokenIssuerData2\")\n+    public Object[][] idTokenIssuerData2() {\n+\n+        return new Object[][]{\n+                // tenant-qualified URL support\n+                // OIDC Config url\n+                // tenant domain\n+                // expected\n+                {false, \"https://localhost:9443/testIssuer\", \"wso2.com\", \"https://localhost:9443/testIssuer\"},\n+                {false, \"https://localhost:9443/testIssuer\", \"\", \"https://localhost:9443/testIssuer\"},\n+                {true, \"https://localhost:9443/testIssuer\", \"\", \"https://localhost:9443/oauth2/token\"},\n+                {true, \"https://localhost:9443/testIssuer\", \"wso2.com\", \"https://localhost:9443/t/wso2\" +\n+                        \".com/oauth2/token\"}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd0031ae4c980be43b1f345b945ee88b16bd542f"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3687, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}