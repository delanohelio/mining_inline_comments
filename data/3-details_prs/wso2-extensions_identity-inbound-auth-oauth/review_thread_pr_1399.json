{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MzE2NzUx", "number": 1399, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMToxNTowOVrOEGtNYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNToxMzowOVrOEhgkWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDY3NjE3OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMToxNTowOVrOGlqwTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMTozMzowMlrOGlrSLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1MDk4OA==", "bodyText": "add space after //", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1399#discussion_r442150988", "createdAt": "2020-06-18T11:15:09Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -1264,6 +1264,26 @@ public static String getOAuth2IntrospectionEPUrl() {\n                     OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n         }\n \n+        /**\n+         * This method is used to get the resolved URL for the OAuth2 introspection endpoint.\n+         *\n+         * @param tenantDomain Tenant Domain.\n+         * @return String of the resolved URL for the introspection endpoint.\n+         * @throws URISyntaxException URI Syntax Exception.\n+         */\n+        public static String getOAuth2IntrospectionEPUrl(String tenantDomain) throws URISyntaxException {\n+\n+            String getOAuth2IntrospectionEPUrl = buildUrl(OAUTH2_INTROSPECT_EP_URL,\n+                    OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n+\n+            if (!IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && isNotSuperTenant(tenantDomain)) {\n+                //Append tenant domain to path when the tenant-qualified url mode is disabled.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a134b88129cf8a210bd30c0d63b21d0d34b60d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1OTY2MQ==", "bodyText": "Fixed b67eb48", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1399#discussion_r442159661", "createdAt": "2020-06-18T11:33:02Z", "author": {"login": "GANGANI"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -1264,6 +1264,26 @@ public static String getOAuth2IntrospectionEPUrl() {\n                     OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n         }\n \n+        /**\n+         * This method is used to get the resolved URL for the OAuth2 introspection endpoint.\n+         *\n+         * @param tenantDomain Tenant Domain.\n+         * @return String of the resolved URL for the introspection endpoint.\n+         * @throws URISyntaxException URI Syntax Exception.\n+         */\n+        public static String getOAuth2IntrospectionEPUrl(String tenantDomain) throws URISyntaxException {\n+\n+            String getOAuth2IntrospectionEPUrl = buildUrl(OAUTH2_INTROSPECT_EP_URL,\n+                    OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n+\n+            if (!IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && isNotSuperTenant(tenantDomain)) {\n+                //Append tenant domain to path when the tenant-qualified url mode is disabled.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1MDk4OA=="}, "originalCommit": {"oid": "d8a134b88129cf8a210bd30c0d63b21d0d34b60d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNTcyMDU5OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNToxMzowOVrOHO28og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwOToyNDozNVrOHPq-WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0MjM3MA==", "bodyText": "Why do we need the tenantDomain as a query param in the introspection endpoint in legacy mode?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1399#discussion_r485342370", "createdAt": "2020-09-09T05:13:09Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -1264,6 +1264,26 @@ public static String getOAuth2IntrospectionEPUrl() {\n                     OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n         }\n \n+        /**\n+         * This method is used to get the resolved URL for the OAuth2 introspection endpoint.\n+         *\n+         * @param tenantDomain Tenant Domain.\n+         * @return String of the resolved URL for the introspection endpoint.\n+         * @throws URISyntaxException URI Syntax Exception.\n+         */\n+        public static String getOAuth2IntrospectionEPUrl(String tenantDomain) throws URISyntaxException {\n+\n+            String getOAuth2IntrospectionEPUrl = buildUrl(OAUTH2_INTROSPECT_EP_URL,\n+                    OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n+\n+            if (!IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && isNotSuperTenant(tenantDomain)) {\n+                // Append tenant domain to path when the tenant-qualified url mode is disabled.\n+                getOAuth2IntrospectionEPUrl =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b67eb489e485f9f7fc6f19c1526ceaf8fea2fa45"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE5NDc3Nw==", "bodyText": "With this PR, the tenant domain added as a path param to the introspection endpoint in the legacy tenant URL mode.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1399#discussion_r486194777", "createdAt": "2020-09-10T09:24:35Z", "author": {"login": "GANGANI"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -1264,6 +1264,26 @@ public static String getOAuth2IntrospectionEPUrl() {\n                     OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n         }\n \n+        /**\n+         * This method is used to get the resolved URL for the OAuth2 introspection endpoint.\n+         *\n+         * @param tenantDomain Tenant Domain.\n+         * @return String of the resolved URL for the introspection endpoint.\n+         * @throws URISyntaxException URI Syntax Exception.\n+         */\n+        public static String getOAuth2IntrospectionEPUrl(String tenantDomain) throws URISyntaxException {\n+\n+            String getOAuth2IntrospectionEPUrl = buildUrl(OAUTH2_INTROSPECT_EP_URL,\n+                    OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n+\n+            if (!IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && isNotSuperTenant(tenantDomain)) {\n+                // Append tenant domain to path when the tenant-qualified url mode is disabled.\n+                getOAuth2IntrospectionEPUrl =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0MjM3MA=="}, "originalCommit": {"oid": "b67eb489e485f9f7fc6f19c1526ceaf8fea2fa45"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3721, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}