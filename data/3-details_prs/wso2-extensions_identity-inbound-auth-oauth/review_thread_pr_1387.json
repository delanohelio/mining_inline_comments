{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NTAyMDI4", "number": 1387, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxNDo0M1rOEAhtkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNzozODoyOVrOEAyY3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTg3NzkyOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxNDo0M1rOGb3Hlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNToyNjoxM1rOGb6k_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2Nzc5OA==", "bodyText": "Shall we define a private method like validateCallbackURI(String callbackURI, OAuthAppDO oauth) and move the callback validation logic there?\nIt would be much easy to refactor in the future when we support multiple callbacks in the future", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431867798", "createdAt": "2020-05-28T14:14:43Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -197,12 +197,7 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n                 regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n             }\n \n-            if (regexp != null && callbackURI.matches(regexp)) {\n-                validationResponseDTO.setValidClient(true);\n-                validationResponseDTO.setApplicationName(appDO.getApplicationName());\n-                validationResponseDTO.setCallbackURL(callbackURI);\n-                return validationResponseDTO;\n-            } else if (appDO.getCallbackUrl().equals(callbackURI)) {\n+            if (regexp != null && callbackURI.matches(regexp) || appDO.getCallbackUrl().equals(callbackURI)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea587edabbf724088b46f665890eb68e64f7774b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkyNDQ3Ng==", "bodyText": "ok added a private method", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431924476", "createdAt": "2020-05-28T15:26:13Z", "author": {"login": "tharakawijekoon"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -197,12 +197,7 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n                 regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n             }\n \n-            if (regexp != null && callbackURI.matches(regexp)) {\n-                validationResponseDTO.setValidClient(true);\n-                validationResponseDTO.setApplicationName(appDO.getApplicationName());\n-                validationResponseDTO.setCallbackURL(callbackURI);\n-                return validationResponseDTO;\n-            } else if (appDO.getCallbackUrl().equals(callbackURI)) {\n+            if (regexp != null && callbackURI.matches(regexp) || appDO.getCallbackUrl().equals(callbackURI)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2Nzc5OA=="}, "originalCommit": {"oid": "ea587edabbf724088b46f665890eb68e64f7774b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDYyMjk0OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzowNDoyNFrOGb-lvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTo1Mjo1NVrOGcPoXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDIwNA==", "bodyText": "Since regex is derived from app config, shall we that logic also into the private method please?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431990204", "createdAt": "2020-05-28T17:04:24Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -197,12 +197,7 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n                 regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n             }\n \n-            if (regexp != null && callbackURI.matches(regexp)) {\n-                validationResponseDTO.setValidClient(true);\n-                validationResponseDTO.setApplicationName(appDO.getApplicationName());\n-                validationResponseDTO.setCallbackURL(callbackURI);\n-                return validationResponseDTO;\n-            } else if (appDO.getCallbackUrl().equals(callbackURI)) {\n+            if (validateCallbackURI(regexp, callbackURI, appDO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f73123c860a8639752a1a814bd78cbe1978b68"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDQ2Mg==", "bodyText": "So basically validateCallbackURI logic only takes the callbackURI from the request and appDO object", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431990462", "createdAt": "2020-05-28T17:04:51Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -197,12 +197,7 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n                 regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n             }\n \n-            if (regexp != null && callbackURI.matches(regexp)) {\n-                validationResponseDTO.setValidClient(true);\n-                validationResponseDTO.setApplicationName(appDO.getApplicationName());\n-                validationResponseDTO.setCallbackURL(callbackURI);\n-                return validationResponseDTO;\n-            } else if (appDO.getCallbackUrl().equals(callbackURI)) {\n+            if (validateCallbackURI(regexp, callbackURI, appDO)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDIwNA=="}, "originalCommit": {"oid": "68f73123c860a8639752a1a814bd78cbe1978b68"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTQwNw==", "bodyText": "done", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269407", "createdAt": "2020-05-29T05:52:55Z", "author": {"login": "tharakawijekoon"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -197,12 +197,7 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n                 regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n             }\n \n-            if (regexp != null && callbackURI.matches(regexp)) {\n-                validationResponseDTO.setValidClient(true);\n-                validationResponseDTO.setApplicationName(appDO.getApplicationName());\n-                validationResponseDTO.setCallbackURL(callbackURI);\n-                return validationResponseDTO;\n-            } else if (appDO.getCallbackUrl().equals(callbackURI)) {\n+            if (validateCallbackURI(regexp, callbackURI, appDO)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDIwNA=="}, "originalCommit": {"oid": "68f73123c860a8639752a1a814bd78cbe1978b68"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjI2NjI1OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNDo0OTozM1rOGcOrbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTo1Mjo0OVrOGcPoPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1MzgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {\n          \n          \n            \n                private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432253806", "createdAt": "2020-05-29T04:49:33Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.\n+    // If application callback url is defined as a regexp check weather it matches the given url\n+    // Or check weather they are equal\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c5e24ddb6a8c63cde2368f385c36a3041b3347"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTM3NA==", "bodyText": "changed", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269374", "createdAt": "2020-05-29T05:52:49Z", "author": {"login": "tharakawijekoon"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.\n+    // If application callback url is defined as a regexp check weather it matches the given url\n+    // Or check weather they are equal\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1MzgwNg=="}, "originalCommit": {"oid": "00c5e24ddb6a8c63cde2368f385c36a3041b3347"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjI2NjYwOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNDo0OTo0N1rOGcOrow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTo1Mjo0MVrOGcPoEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzg1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String registeredCallbackUrl = oauth.getCallbackUrl();\n          \n          \n            \n                    String registeredCallbackUrl = oauthApp.getCallbackUrl();", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432253859", "createdAt": "2020-05-29T04:49:47Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.\n+    // If application callback url is defined as a regexp check weather it matches the given url\n+    // Or check weather they are equal\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {\n+        String regexp = null;\n+        String registeredCallbackUrl = oauth.getCallbackUrl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c5e24ddb6a8c63cde2368f385c36a3041b3347"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTMyOA==", "bodyText": "changed", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269328", "createdAt": "2020-05-29T05:52:41Z", "author": {"login": "tharakawijekoon"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.\n+    // If application callback url is defined as a regexp check weather it matches the given url\n+    // Or check weather they are equal\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {\n+        String regexp = null;\n+        String registeredCallbackUrl = oauth.getCallbackUrl();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzg1OQ=="}, "originalCommit": {"oid": "00c5e24ddb6a8c63cde2368f385c36a3041b3347"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjI2NzMyOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNDo1MDoyNlrOGcOsKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTo1MjoyN1rOGcPn1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzk5NQ==", "bodyText": "Let's add a block comment", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432253995", "createdAt": "2020-05-29T04:50:26Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c5e24ddb6a8c63cde2368f385c36a3041b3347"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTI3MA==", "bodyText": "added", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269270", "createdAt": "2020-05-29T05:52:27Z", "author": {"login": "tharakawijekoon"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzk5NQ=="}, "originalCommit": {"oid": "00c5e24ddb6a8c63cde2368f385c36a3041b3347"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjYxMDIwOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNzozODoyOVrOGcSAdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNzo1NjoyMlrOGcSjlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODM0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return regexp != null && callbackURI.matches(regexp) || registeredCallbackUrl.equals(callbackURI);\n          \n          \n            \n                    return (regexp != null && callbackURI.matches(regexp)) || registeredCallbackUrl.equals(callbackURI);", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432308341", "createdAt": "2020-05-29T07:38:29Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,20 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    /**\n+     * Validate Client with a callback url in the request.\n+     * If application callback url is defined as a regexp check weather it matches the given url\n+     * Or check weather they are equal\n+     */\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {\n+        String regexp = null;\n+        String registeredCallbackUrl = oauthApp.getCallbackUrl();\n+        if (registeredCallbackUrl.startsWith(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX)) {\n+            regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n+        }\n+        return regexp != null && callbackURI.matches(regexp) || registeredCallbackUrl.equals(callbackURI);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0feecee3999a6fe5f9b0f385036087cd2d015a57"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxNzMzMw==", "bodyText": "ok done", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432317333", "createdAt": "2020-05-29T07:56:22Z", "author": {"login": "tharakawijekoon"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,20 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    /**\n+     * Validate Client with a callback url in the request.\n+     * If application callback url is defined as a regexp check weather it matches the given url\n+     * Or check weather they are equal\n+     */\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {\n+        String regexp = null;\n+        String registeredCallbackUrl = oauthApp.getCallbackUrl();\n+        if (registeredCallbackUrl.startsWith(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX)) {\n+            regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n+        }\n+        return regexp != null && callbackURI.matches(regexp) || registeredCallbackUrl.equals(callbackURI);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODM0MQ=="}, "originalCommit": {"oid": "0feecee3999a6fe5f9b0f385036087cd2d015a57"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3706, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}