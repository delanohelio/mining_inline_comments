{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDY4MjE2", "number": 1365, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDozOTo0MlrOD1td1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoyMTowNVrOD1v1FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjQ2MDM3OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDozOTo0MlrOGLRmzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDo1NDowMVrOGLSFdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NTk4Mg==", "bodyText": "This shouldn't be a runtime exception right?\nShall we throw a IdentityOAuth2Exception with a proper error message and including the original exception", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414475982", "createdAt": "2020-04-24T10:39:42Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,22 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                throw new OAuthRuntimeException(\"Error while building url for context: \" + OAUTH2_TOKEN_EP_URL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bfee42bc134416e7d6e1fa7c22bb9b45b138692"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4MzgyOQ==", "bodyText": "Yes. The PR is now updated.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414483829", "createdAt": "2020-04-24T10:54:01Z", "author": {"login": "chamathns"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,22 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                throw new OAuthRuntimeException(\"Error while building url for context: \" + OAUTH2_TOKEN_EP_URL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NTk4Mg=="}, "originalCommit": {"oid": "5bfee42bc134416e7d6e1fa7c22bb9b45b138692"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjU4Mjg2OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToxMzowN1rOGLSuVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTo0MzoyOFrOGLTwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDI5NA==", "bodyText": "I think it would be better say \"Error while retrieving ID Token issuer value for tenantDomain: \" + tenantDomain\nhere.\nCan you check how the exception thrown is handled? If we are handling and logging a similar message as I suggested above we do not need to change.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414494294", "createdAt": "2020-04-24T11:13:07Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,23 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorMsg = String.format(\"Error while building url for '%s' context\", OAUTH2_TOKEN_EP_URL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11277d223da66490be57b0a7d18a28bb209702e4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5OTY2MQ==", "bodyText": "It only has \"Error while retrieving OIDC Id token issuer\" + e. No mention of a tenant domain. Should we add the tenant domain there?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414499661", "createdAt": "2020-04-24T11:22:50Z", "author": {"login": "chamathns"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,23 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorMsg = String.format(\"Error while building url for '%s' context\", OAUTH2_TOKEN_EP_URL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDI5NA=="}, "originalCommit": {"oid": "11277d223da66490be57b0a7d18a28bb209702e4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwNDQxMQ==", "bodyText": "Okay let add it there", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414504411", "createdAt": "2020-04-24T11:31:26Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,23 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorMsg = String.format(\"Error while building url for '%s' context\", OAUTH2_TOKEN_EP_URL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDI5NA=="}, "originalCommit": {"oid": "11277d223da66490be57b0a7d18a28bb209702e4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwNDgzNw==", "bodyText": "Also lets try to include the tenantDomain here too", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414504837", "createdAt": "2020-04-24T11:32:13Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,23 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorMsg = String.format(\"Error while building url for '%s' context\", OAUTH2_TOKEN_EP_URL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDI5NA=="}, "originalCommit": {"oid": "11277d223da66490be57b0a7d18a28bb209702e4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxMTE1Nw==", "bodyText": "Updated the PR with the change", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414511157", "createdAt": "2020-04-24T11:43:28Z", "author": {"login": "chamathns"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,23 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorMsg = String.format(\"Error while building url for '%s' context\", OAUTH2_TOKEN_EP_URL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDI5NA=="}, "originalCommit": {"oid": "11277d223da66490be57b0a7d18a28bb209702e4"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njg0NzU2OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoyMTowNVrOGLVEiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoyODo0M1rOGLVXKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzMjc0NQ==", "bodyText": "Can we present this message more clearly?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String errorMsg = String.format(\"Error while building url for '%s' context for tenant domain: %s\",\n          \n          \n            \n                            String errorMsg = String.format(\"Error while building url  '%s' for tenant domain: %s\",", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414532745", "createdAt": "2020-04-24T12:21:05Z", "author": {"login": "denuwanthi"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,24 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorMsg = String.format(\"Error while building url for '%s' context for tenant domain: %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5a0c8916166a392cb62521d7bcddb459bc2c40"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzNzUxMg==", "bodyText": "Updated with the changes.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414537512", "createdAt": "2020-04-24T12:28:43Z", "author": {"login": "chamathns"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,24 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorMsg = String.format(\"Error while building url for '%s' context for tenant domain: %s\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzMjc0NQ=="}, "originalCommit": {"oid": "1e5a0c8916166a392cb62521d7bcddb459bc2c40"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3683, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}