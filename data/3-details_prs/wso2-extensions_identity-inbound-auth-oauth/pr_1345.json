{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzgzODM2", "number": 1345, "title": "Tenant qualify OIDC discovery endpoint response", "bodyText": "Proposed changes in this pull request\nAs per the requirement to make all the endpoints tenant-qualified, the OIDC discovery endpoint should support the form 'https://localhost:9443/t/{tenant.domain}/oauth2/token/.well-known/openid-configuration'\nCurrently, the endpoint supports tenants in path. But, the URLs that are generated are not tenant-qualified.\nEg: https://localhost:9443/oauth2/token\nWith the changes in the PR, the OIDC metadata URLs would be tenant-qualified with tenant in path.\nEg: https://localhost:9443/t/wso2.com/oauth2/token\nfix wso2/product-is#7932", "createdAt": "2020-03-23T13:26:22Z", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345", "merged": true, "mergeCommit": {"oid": "3bb130228e170ef87dade75dee92eb9db24257c8"}, "closed": true, "closedAt": "2020-03-27T13:06:32Z", "author": {"login": "chamathns"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQeD1wgH2gAyMzkyMzgzODM2OmE3YTNkOTIyMjNkYWUwMjBmNTZkM2U1NzZkNjZjYjYwOGI5ZTA5YTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRwIligH2gAyMzkyMzgzODM2OmNhYjc2MjdmZGZhNmQxZTEyODRlNGYwYTY3NWQ5NGY2ZDRlMTg0OTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a7a3d92223dae020f56d3e576d66cb608b9e09a9", "author": {"user": {"login": "chamathns", "name": "Chamath Samarawickrama"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/a7a3d92223dae020f56d3e576d66cb608b9e09a9", "committedDate": "2020-03-23T13:10:13Z", "message": "Tenant-qualify OIDC discovery endpoint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDkyOTA0", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#pullrequestreview-379492904", "createdAt": "2020-03-23T14:39:45Z", "commit": {"oid": "a7a3d92223dae020f56d3e576d66cb608b9e09a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDozOTo0NlrOF6Idfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDozOTo0NlrOF6Idfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwMDM1MA==", "bodyText": "Changing the public method all of a sudden is not good practice as it might break any code that is relying on this particular Util method.\nBest way to introduce this change would be to introduce a new method, deprecate the old method and point to the newly introduced method for future usage.\nThen, in a major version of the component, we can remove the deprecated method.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#discussion_r396500350", "createdAt": "2020-03-23T14:39:46Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -1168,33 +1168,25 @@ public static String getOAuth2TokenEPUrl() {\n             if (StringUtils.isBlank(oauth2TokenEPUrl)) {\n                 oauth2TokenEPUrl = IdentityUtil.getServerURL(\"oauth2/token\", true, false);\n             }\n-            return oauth2TokenEPUrl;\n+            return IdentityUtil.resolveURL(oauth2TokenEPUrl, true, false);\n         }\n \n-        public static String getOAuth2DCREPUrl(String tenantDomain) throws URISyntaxException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7a3d92223dae020f56d3e576d66cb608b9e09a9"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDk2Nzc5", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#pullrequestreview-379496779", "createdAt": "2020-03-23T14:43:46Z", "commit": {"oid": "a7a3d92223dae020f56d3e576d66cb608b9e09a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo0Mzo0NlrOF6IpRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo0Mzo0NlrOF6IpRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwMzM2Ng==", "bodyText": "I think this is not needed. What we need to do here is to return the value set at the resident IDP.\nIt can be a random URI value. Trying to tenant qualify that is incorrect.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#discussion_r396503366", "createdAt": "2020-03-23T14:43:46Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3086,8 +3078,8 @@ public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2\n         FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n                 IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n                         IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        return IdentityUtil.resolveURL(IdentityApplicationManagementUtil", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7a3d92223dae020f56d3e576d66cb608b9e09a9"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDk5MDY2", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#pullrequestreview-379499066", "createdAt": "2020-03-23T14:46:07Z", "commit": {"oid": "a7a3d92223dae020f56d3e576d66cb608b9e09a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa4f7acf9ac5b084cee55c5882169c2824a78ef6", "author": {"user": {"login": "chamathns", "name": "Chamath Samarawickrama"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/fa4f7acf9ac5b084cee55c5882169c2824a78ef6", "committedDate": "2020-03-24T17:13:03Z", "message": "resolve issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODg2NzI3", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#pullrequestreview-380886727", "createdAt": "2020-03-25T06:37:24Z", "commit": {"oid": "fa4f7acf9ac5b084cee55c5882169c2824a78ef6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjozNzoyNFrOF7NtNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjozNzoyNFrOF7NtNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNDg2OA==", "bodyText": "It would be better to define a constant for \"/api/identity/oauth2/dcr/v1.0/register\"", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#discussion_r397634868", "createdAt": "2020-03-25T06:37:24Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -1184,6 +1184,15 @@ public static String getOAuth2DCREPUrl(String tenantDomain) throws URISyntaxExce\n             return oauth2TokenEPUrl;\n         }\n \n+        public static String getOAuth2DCREPUrl() throws URISyntaxException {\n+\n+            String oauth2TokenEPUrl = OAuthServerConfiguration.getInstance().getOAuth2DCREPUrl();\n+            if (StringUtils.isBlank(oauth2TokenEPUrl)) {\n+                oauth2TokenEPUrl = IdentityUtil.getServerURL(\"/api/identity/oauth2/dcr/v1.0/register\", true, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa4f7acf9ac5b084cee55c5882169c2824a78ef6"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMzgwNzg4", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#pullrequestreview-381380788", "createdAt": "2020-03-25T17:34:23Z", "commit": {"oid": "fa4f7acf9ac5b084cee55c5882169c2824a78ef6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43fd748cab09c2fd4228102dbc4d1ad26f1c527d", "author": {"user": {"login": "chamathns", "name": "Chamath Samarawickrama"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/43fd748cab09c2fd4228102dbc4d1ad26f1c527d", "committedDate": "2020-03-26T03:11:04Z", "message": "Add String constants for OAuth2 endpoints.\nFix tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjg0MzY5", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#pullrequestreview-381684369", "createdAt": "2020-03-26T03:45:48Z", "commit": {"oid": "43fd748cab09c2fd4228102dbc4d1ad26f1c527d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMzo0NTo0OFrOF72Z7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMzo0NTo0OFrOF72Z7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwMTY3OA==", "bodyText": "remove snapshot version and update to a released version", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#discussion_r398301678", "createdAt": "2020-03-26T03:45:48Z", "author": {"login": "emswbandara"}, "path": "pom.xml", "diffHunk": "@@ -865,7 +865,7 @@\n         <carbon.kernel.registry.imp.pkg.version.range>[1.0.1, 2.0.0)</carbon.kernel.registry.imp.pkg.version.range>\n \n         <!-- Carbon Identity Framework version -->\n-        <carbon.identity.framework.version>5.16.119</carbon.identity.framework.version>\n+        <carbon.identity.framework.version>5.17.10-SNAPSHOT</carbon.identity.framework.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fd748cab09c2fd4228102dbc4d1ad26f1c527d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15383873bd07d9349271aeef1c92d9c7cc0df688", "author": {"user": {"login": "chamathns", "name": "Chamath Samarawickrama"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/15383873bd07d9349271aeef1c92d9c7cc0df688", "committedDate": "2020-03-26T18:29:42Z", "message": "Resolve entity ID only if it is not modified"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzAyODYy", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#pullrequestreview-382302862", "createdAt": "2020-03-26T18:37:01Z", "commit": {"oid": "15383873bd07d9349271aeef1c92d9c7cc0df688"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozNzowMVrOF8VGbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozNzowMVrOF8VGbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgwNDU5MQ==", "bodyText": "This will lead to NPE if idpEntityId evaluates to null. Can we be sure that it can never be null?\nAlso can IdentityUtil.getProperty(\"OAuth.OpenIDConnect.IDTokenIssuerID\") evaluate to null in any scenario?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#discussion_r398804591", "createdAt": "2020-03-26T18:37:01Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3119,8 +3119,13 @@ public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2\n         FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n                 IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n                         IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n+        String idpEntityId = IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n                 IDP_ENTITY_ID).getValue();\n+        if (idpEntityId.equals(IdentityUtil.getProperty(\"OAuth.OpenIDConnect.IDTokenIssuerID\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15383873bd07d9349271aeef1c92d9c7cc0df688"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTQzMDcw", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#pullrequestreview-382543070", "createdAt": "2020-03-27T02:28:19Z", "commit": {"oid": "15383873bd07d9349271aeef1c92d9c7cc0df688"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjoyODoxOVrOF8hEfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjoyODoxOVrOF8hEfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAwMDcwMg==", "bodyText": "We should add test cases for legacy mode and new mode and verify OIDC endpoints.\nShall we do that as well.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#discussion_r399000702", "createdAt": "2020-03-27T02:28:19Z", "author": {"login": "malithie"}, "path": "components/org.wso2.carbon.identity.discovery/src/test/java/org/wso2/carbon/identity/discovery/builders/ProviderConfigBuilderTest.java", "diffHunk": "@@ -113,7 +117,7 @@ public void testBuildOIDProviderConfig1() throws Exception {\n \n         mockStatic(OAuth2Util.class);\n         mockStatic(OAuth2Util.OAuthURL.class);\n-        when(OAuth2Util.OAuthURL.getOAuth2JWKSPageUrl(anyString())).thenThrow(new URISyntaxException(\"input\",\n+        when(OAuth2Util.OAuthURL.getOAuth2JWKSPageUrl()).thenThrow(new URISyntaxException(\"input\",\n                 \"URISyntaxException\"));\n         when(OAuth2Util.getIdTokenIssuer(anyString())).thenReturn(\"issuer\");\n         providerConfigBuilder.buildOIDProviderConfig(mockOidProviderRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15383873bd07d9349271aeef1c92d9c7cc0df688"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a98d4c521da92928309f5f2cab35848b8b60811", "author": {"user": {"login": "chamathns", "name": "Chamath Samarawickrama"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/4a98d4c521da92928309f5f2cab35848b8b60811", "committedDate": "2020-03-27T07:59:29Z", "message": "Add tests for TenantURLSupport mode and fix minor issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4bed35f81c6e5cd76d16ed7a21d46cf6d15bdcf", "author": {"user": {"login": "chamathns", "name": "Chamath Samarawickrama"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/e4bed35f81c6e5cd76d16ed7a21d46cf6d15bdcf", "committedDate": "2020-03-27T10:17:28Z", "message": "remove redundant test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODE0MjEw", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#pullrequestreview-382814210", "createdAt": "2020-03-27T12:30:43Z", "commit": {"oid": "e4bed35f81c6e5cd76d16ed7a21d46cf6d15bdcf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozMDo0NFrOF8vErQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozMDo0NFrOF8vErQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzMDEyNQ==", "bodyText": "Add a method level comment", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#discussion_r399230125", "createdAt": "2020-03-27T12:30:44Z", "author": {"login": "dewniMW"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -1197,20 +1221,29 @@ public static String getOAuth2JWKSPageUrl(String tenantDomain) throws URISyntaxE\n             return auth2JWKSPageUrl;\n         }\n \n+        public static String getOAuth2JWKSPageUrl() throws URISyntaxException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4bed35f81c6e5cd76d16ed7a21d46cf6d15bdcf"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODE0Mzky", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#pullrequestreview-382814392", "createdAt": "2020-03-27T12:31:00Z", "commit": {"oid": "e4bed35f81c6e5cd76d16ed7a21d46cf6d15bdcf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozMTowMFrOF8vFPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozMTowMFrOF8vFPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzMDI2OA==", "bodyText": "Shall we add a method level comment?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1345#discussion_r399230268", "createdAt": "2020-03-27T12:31:00Z", "author": {"login": "dewniMW"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -1184,11 +1199,20 @@ public static String getOAuth2DCREPUrl(String tenantDomain) throws URISyntaxExce\n             return oauth2TokenEPUrl;\n         }\n \n+        public static String getOAuth2DCREPUrl() throws URISyntaxException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4bed35f81c6e5cd76d16ed7a21d46cf6d15bdcf"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cab7627fdfa6d1e1284e4f0a675d94f6d4e18499", "author": {"user": {"login": "chamathns", "name": "Chamath Samarawickrama"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/cab7627fdfa6d1e1284e4f0a675d94f6d4e18499", "committedDate": "2020-03-27T12:47:37Z", "message": "Add method comments."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3234, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}