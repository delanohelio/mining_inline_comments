{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NzE2MDMx", "number": 1489, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzozMjoyMlrOE3OiNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzozNTo0M1rOE3OnyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzQ1MjcwOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzozMjoyMlrOHwcqEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzozMjoyMlrOHwcqEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU2MzIxOA==", "bodyText": "Shall we have the regex as a constant", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1489#discussion_r520563218", "createdAt": "2020-11-10T13:32:22Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "diffHunk": "@@ -1493,6 +1495,17 @@ private void validateScopeName(String scopeName) throws IdentityOAuthClientExcep\n         validateWhiteSpaces(scopeName);\n     }\n \n+    private void validateRegex(String scopeName) throws IdentityOAuthClientException {\n+\n+        String scopeValidatorRegex = \"^[^?#/()]*$\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ebe4ea1a6e263a9300207c972d6dd452c72d2d6"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzQ1MzUwOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzozMjozNFrOHwcqlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzozMjozNFrOHwcqlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU2MzM0OA==", "bodyText": "Any reason why we are fixing a depricated method? is it still in use?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1489#discussion_r520563348", "createdAt": "2020-11-10T13:32:34Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "diffHunk": "@@ -503,6 +503,7 @@ public void addScope(String scope, String[] claims) throws IdentityOAuthAdminExc\n         int tenantId = PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId();\n         try {\n             if (StringUtils.isNotEmpty(scope)) {\n+                validateRegex(scope);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ebe4ea1a6e263a9300207c972d6dd452c72d2d6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzQ2Njk3OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/Oauth2ScopeConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzozNTo0M1rOHwcyqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjowNzoyMlrOHwj55g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU2NTQxNg==", "bodyText": "If we do not allow changing the regex, it would be user friendly if we say why the scope is invalid rather than saying it should adhere to a specific regex.\nSomething like \"Invalid scope name. A scope name cannot contain special characters x,y or z\"\nDo we have plans to make this regex configurable?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1489#discussion_r520565416", "createdAt": "2020-11-10T13:35:43Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/Oauth2ScopeConstants.java", "diffHunk": "@@ -49,6 +49,8 @@\n         ERROR_CODE_NOT_AUTHORIZED_ADD_INTERNAL_SCOPE(\"41008\", \"User %s is not authorized to add internal scopes\"),\n         ERROR_CODE_NOT_AUTHORIZED_UPDATE_INTERNAL_SCOPE(\"41009\", \"User %s is not authorized to update internal scopes\"),\n         ERROR_CODE_NOT_AUTHORIZED_DELETE_INTERNAL_SCOPE(\"41010\", \"User %s is not authorized to delete internal scopes\"),\n+        ERROR_CODE_BAD_REQUEST_SCOPE_NAME_NOT_SATIFIED_THE_REGEX(\"41011\", \"Scope name is not \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ebe4ea1a6e263a9300207c972d6dd452c72d2d6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY4MTk1OA==", "bodyText": "Didn't plan for a config yet.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1489#discussion_r520681958", "createdAt": "2020-11-10T16:07:22Z", "author": {"login": "nilasini"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/Oauth2ScopeConstants.java", "diffHunk": "@@ -49,6 +49,8 @@\n         ERROR_CODE_NOT_AUTHORIZED_ADD_INTERNAL_SCOPE(\"41008\", \"User %s is not authorized to add internal scopes\"),\n         ERROR_CODE_NOT_AUTHORIZED_UPDATE_INTERNAL_SCOPE(\"41009\", \"User %s is not authorized to update internal scopes\"),\n         ERROR_CODE_NOT_AUTHORIZED_DELETE_INTERNAL_SCOPE(\"41010\", \"User %s is not authorized to delete internal scopes\"),\n+        ERROR_CODE_BAD_REQUEST_SCOPE_NAME_NOT_SATIFIED_THE_REGEX(\"41011\", \"Scope name is not \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU2NTQxNg=="}, "originalCommit": {"oid": "8ebe4ea1a6e263a9300207c972d6dd452c72d2d6"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3614, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}