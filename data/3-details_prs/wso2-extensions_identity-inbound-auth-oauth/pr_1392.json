{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNDM5MDMz", "number": 1392, "title": "Introduce response_type=none", "bodyText": "Proposed changes in this pull request\nThis PR adds the capability to have the response_type=none in the oauth2/authorize endpoint. This implements the \"None Response Type\" of https://openid.net/specs/oauth-v2-multiple-response-types-1_0.html#none", "createdAt": "2020-06-10T13:00:35Z", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392", "merged": true, "mergeCommit": {"oid": "7f1257c712fc888ad4b60a8cf012a4d8e5f137f1"}, "closed": true, "closedAt": "2020-06-12T07:03:03Z", "author": {"login": "pamodaaw"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp5TFugFqTQyODAyODI0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqdWO9AFqTQyOTUwNjY0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDI4MjQ5", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428028249", "createdAt": "2020-06-10T13:02:25Z", "commit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzowMjoyNVrOGhzuOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzowMjoyNVrOGhzuOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMzYxMQ==", "bodyText": "Shall we try two test cases for failure and success? :)", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438103611", "createdAt": "2020-06-10T13:02:25Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.common/src/test/java/org/wso2/carbon/identity/oauth/common/NoneResponseValidatorTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth.common;\n+\n+import org.apache.oltu.oauth2.common.error.OAuthError;\n+import org.apache.oltu.oauth2.common.exception.OAuthProblemException;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import static org.powermock.api.mockito.PowerMockito.mock;\n+import static org.powermock.api.mockito.PowerMockito.when;\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n+\n+/**\n+ * Test class for NoneResponseType Validator.\n+ */\n+public class NoneResponseValidatorTest {\n+\n+    protected NoneResponseTypeValidator testedResponseValidator;\n+\n+    @BeforeMethod\n+    public void setUp() throws Exception {\n+\n+        testedResponseValidator = new NoneResponseTypeValidator();\n+    }\n+\n+    @AfterMethod\n+    public void tearDown() throws Exception {\n+\n+    }\n+\n+    @DataProvider(name = \"Request Method Provider\")\n+    public Object[][] getRequestMethod() {\n+\n+        return new Object[][]{\n+                {\"GET\", true},\n+                {\"POST\", true},\n+                {\"HEAD\", false},\n+                {\"DELETE\", false},\n+                {\"OPTIONS\", false},\n+                {\"PUT\", false},\n+                {\"\", false},\n+                {null, false}\n+        };\n+    }\n+\n+    @Test(dataProvider = \"Request Method Provider\")\n+    public void testValidateMethod(String method, boolean shouldPass) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDI4NDcx", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428028471", "createdAt": "2020-06-10T13:02:40Z", "commit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzowMjo0MVrOGhzu3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzowMjo0MVrOGhzu3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMzc3NQ==", "bodyText": "remove redundant constructor", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438103775", "createdAt": "2020-06-10T13:02:41Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.oauth.common/src/main/java/org/wso2/carbon/identity/oauth/common/NoneResponseTypeValidator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth.common;\n+\n+import org.apache.oltu.oauth2.common.OAuth;\n+import org.apache.oltu.oauth2.common.error.OAuthError;\n+import org.apache.oltu.oauth2.common.exception.OAuthProblemException;\n+import org.apache.oltu.oauth2.common.validators.AbstractValidator;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ *  Validator for response_type=none requests.\n+ */\n+public class NoneResponseTypeValidator extends AbstractValidator<HttpServletRequest> {\n+\n+    public NoneResponseTypeValidator() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDI5MDEx", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428029011", "createdAt": "2020-06-10T13:03:18Z", "commit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzowMzoxOFrOGhzwjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzowMzoxOFrOGhzwjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwNDIwNA==", "bodyText": "Can we have a comment explaining the behaviour of the response=none?\nor possibly a link to the spec would do too", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438104204", "createdAt": "2020-06-10T13:03:18Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authz/handlers/NoneResponseTypeHandler.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth2.authz.handlers;\n+\n+import org.wso2.carbon.identity.oauth2.IdentityOAuth2Exception;\n+import org.wso2.carbon.identity.oauth2.authz.OAuthAuthzReqMessageContext;\n+import org.wso2.carbon.identity.oauth2.dto.OAuth2AuthorizeRespDTO;\n+\n+/**\n+ * This class will handle the requests with response_type=none.\n+ */\n+public class NoneResponseTypeHandler extends AbstractResponseTypeHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDI5NTUy", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428029552", "createdAt": "2020-06-10T13:03:58Z", "commit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzowMzo1OFrOGhzyBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzowMzo1OFrOGhzyBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwNDU4MQ==", "bodyText": "Is there any reason why we can't move this check to the superclass?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438104581", "createdAt": "2020-06-10T13:03:58Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.common/src/main/java/org/wso2/carbon/identity/oauth/common/NoneResponseTypeValidator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth.common;\n+\n+import org.apache.oltu.oauth2.common.OAuth;\n+import org.apache.oltu.oauth2.common.error.OAuthError;\n+import org.apache.oltu.oauth2.common.exception.OAuthProblemException;\n+import org.apache.oltu.oauth2.common.validators.AbstractValidator;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ *  Validator for response_type=none requests.\n+ */\n+public class NoneResponseTypeValidator extends AbstractValidator<HttpServletRequest> {\n+\n+    public NoneResponseTypeValidator() {\n+\n+    }\n+\n+    @Override\n+    public void validateMethod(HttpServletRequest request) throws OAuthProblemException {\n+\n+        String method = request.getMethod();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjAxNTE5", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428201519", "createdAt": "2020-06-10T15:56:40Z", "commit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1Njo0MFrOGh7p1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1Njo0MFrOGh7p1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzMzU1OQ==", "bodyText": "Lets make this consistent NoneResponseTypeValidatorTest", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438233559", "createdAt": "2020-06-10T15:56:40Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth.common/src/test/java/org/wso2/carbon/identity/oauth/common/NoneResponseValidatorTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth.common;\n+\n+import org.apache.oltu.oauth2.common.error.OAuthError;\n+import org.apache.oltu.oauth2.common.exception.OAuthProblemException;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import static org.powermock.api.mockito.PowerMockito.mock;\n+import static org.powermock.api.mockito.PowerMockito.when;\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n+\n+/**\n+ * Test class for NoneResponseType Validator.\n+ */\n+public class NoneResponseValidatorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjA1NTY2", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428205566", "createdAt": "2020-06-10T16:00:55Z", "commit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMDo1NVrOGh71nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowMDo1NVrOGh71nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNjU3Mg==", "bodyText": "These two are invalid test cases, right? In actuality, we don't have \"\" or null HTTP methods", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438236572", "createdAt": "2020-06-10T16:00:55Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth.common/src/test/java/org/wso2/carbon/identity/oauth/common/NoneResponseValidatorTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth.common;\n+\n+import org.apache.oltu.oauth2.common.error.OAuthError;\n+import org.apache.oltu.oauth2.common.exception.OAuthProblemException;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import static org.powermock.api.mockito.PowerMockito.mock;\n+import static org.powermock.api.mockito.PowerMockito.when;\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n+\n+/**\n+ * Test class for NoneResponseType Validator.\n+ */\n+public class NoneResponseValidatorTest {\n+\n+    protected NoneResponseTypeValidator testedResponseValidator;\n+\n+    @BeforeMethod\n+    public void setUp() throws Exception {\n+\n+        testedResponseValidator = new NoneResponseTypeValidator();\n+    }\n+\n+    @AfterMethod\n+    public void tearDown() throws Exception {\n+\n+    }\n+\n+    @DataProvider(name = \"Request Method Provider\")\n+    public Object[][] getRequestMethod() {\n+\n+        return new Object[][]{\n+                {\"GET\", true},\n+                {\"POST\", true},\n+                {\"HEAD\", false},\n+                {\"DELETE\", false},\n+                {\"OPTIONS\", false},\n+                {\"PUT\", false},\n+                {\"\", false},\n+                {null, false}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjEwNjQ1", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428210645", "createdAt": "2020-06-10T16:05:08Z", "commit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowNTowOFrOGh8ANQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjowNTowOFrOGh8ANQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzOTI4NQ==", "bodyText": "Shall we add what was expected as well?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438239285", "createdAt": "2020-06-10T16:05:08Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth.common/src/test/java/org/wso2/carbon/identity/oauth/common/NoneResponseValidatorTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth.common;\n+\n+import org.apache.oltu.oauth2.common.error.OAuthError;\n+import org.apache.oltu.oauth2.common.exception.OAuthProblemException;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import static org.powermock.api.mockito.PowerMockito.mock;\n+import static org.powermock.api.mockito.PowerMockito.when;\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n+\n+/**\n+ * Test class for NoneResponseType Validator.\n+ */\n+public class NoneResponseValidatorTest {\n+\n+    protected NoneResponseTypeValidator testedResponseValidator;\n+\n+    @BeforeMethod\n+    public void setUp() throws Exception {\n+\n+        testedResponseValidator = new NoneResponseTypeValidator();\n+    }\n+\n+    @AfterMethod\n+    public void tearDown() throws Exception {\n+\n+    }\n+\n+    @DataProvider(name = \"Request Method Provider\")\n+    public Object[][] getRequestMethod() {\n+\n+        return new Object[][]{\n+                {\"GET\", true},\n+                {\"POST\", true},\n+                {\"HEAD\", false},\n+                {\"DELETE\", false},\n+                {\"OPTIONS\", false},\n+                {\"PUT\", false},\n+                {\"\", false},\n+                {null, false}\n+        };\n+    }\n+\n+    @Test(dataProvider = \"Request Method Provider\")\n+    public void testValidateMethod(String method, boolean shouldPass) throws Exception {\n+\n+        HttpServletRequest mockRequest = mock(HttpServletRequest.class);\n+        when(mockRequest.getMethod()).thenReturn(method);\n+        if (shouldPass) {\n+            testedResponseValidator.validateMethod(mockRequest);\n+            // Nothing to assert here. The above method will only throw an exception if not valid\n+        } else {\n+            try {\n+                testedResponseValidator.validateMethod(mockRequest);\n+                fail();\n+            } catch (OAuthProblemException e) {\n+                assertTrue(e.getMessage().startsWith(OAuthError.TokenResponse.INVALID_REQUEST), \"Invalid error \" +\n+                        \"message received. Received was: \" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjE4NTg3", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428218587", "createdAt": "2020-06-10T16:13:23Z", "commit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjoxMzoyM1rOGh8dAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjoxMzoyM1rOGh8dAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0NjY1OA==", "bodyText": "Suggestion: Also, maybe we could write a unit test for this method to make sure we don't send back anything unwanted in the response at this level. Just in case the implementation of the initResponse  method changes.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438246658", "createdAt": "2020-06-10T16:13:23Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authz/handlers/NoneResponseTypeHandler.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth2.authz.handlers;\n+\n+import org.wso2.carbon.identity.oauth2.IdentityOAuth2Exception;\n+import org.wso2.carbon.identity.oauth2.authz.OAuthAuthzReqMessageContext;\n+import org.wso2.carbon.identity.oauth2.dto.OAuth2AuthorizeRespDTO;\n+\n+/**\n+ * This class will handle the requests with response_type=none.\n+ */\n+public class NoneResponseTypeHandler extends AbstractResponseTypeHandler {\n+\n+    @Override\n+    public OAuth2AuthorizeRespDTO issue(OAuthAuthzReqMessageContext oauthAuthzMsgCtx) throws IdentityOAuth2Exception {\n+\n+        return initResponse(oauthAuthzMsgCtx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjE5MDU4", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428219058", "createdAt": "2020-06-10T16:13:57Z", "commit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjoxMzo1N1rOGh8eZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjoxMzo1N1rOGh8eZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0NzAxNA==", "bodyText": "This request will go through scope validation as well. Is that expected for this flow? The response will also contain scopes as the initResponse adds scopes to the OAuth2AuthorizeRespDTO  object.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438247014", "createdAt": "2020-06-10T16:13:57Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authz/handlers/NoneResponseTypeHandler.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth2.authz.handlers;\n+\n+import org.wso2.carbon.identity.oauth2.IdentityOAuth2Exception;\n+import org.wso2.carbon.identity.oauth2.authz.OAuthAuthzReqMessageContext;\n+import org.wso2.carbon.identity.oauth2.dto.OAuth2AuthorizeRespDTO;\n+\n+/**\n+ * This class will handle the requests with response_type=none.\n+ */\n+public class NoneResponseTypeHandler extends AbstractResponseTypeHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82295f9fd484c859c5a323bd566755aacf81561b", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/82295f9fd484c859c5a323bd566755aacf81561b", "committedDate": "2020-06-10T12:55:51Z", "message": "Introduce response type being none"}, "afterCommit": {"oid": "e6a7134609e299ce9ec926ac3577342ee7076ad5", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/e6a7134609e299ce9ec926ac3577342ee7076ad5", "committedDate": "2020-06-11T05:49:55Z", "message": "Introduce response type being none"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjEwMDk0", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428610094", "createdAt": "2020-06-11T05:52:36Z", "commit": {"oid": "e6a7134609e299ce9ec926ac3577342ee7076ad5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1MjozNlrOGiPZVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1MjozNlrOGiPZVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1NzAxMw==", "bodyText": "Do we need to override this if we are not doing anything?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438557013", "createdAt": "2020-06-11T05:52:36Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.common/src/main/java/org/wso2/carbon/identity/oauth/common/NoneResponseTypeValidator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth.common;\n+\n+import org.apache.oltu.oauth2.common.OAuth;\n+import org.apache.oltu.oauth2.common.error.OAuthError;\n+import org.apache.oltu.oauth2.common.exception.OAuthProblemException;\n+import org.apache.oltu.oauth2.common.validators.AbstractValidator;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ *  Validator for response_type=none requests.\n+ */\n+public class NoneResponseTypeValidator extends AbstractValidator<HttpServletRequest> {\n+\n+    @Override\n+    public void validateMethod(HttpServletRequest request) throws OAuthProblemException {\n+\n+        String method = request.getMethod();\n+        if (!OAuth.HttpMethod.GET.equals(method) && !OAuth.HttpMethod.POST.equals(method)) {\n+            throw OAuthProblemException.error(OAuthError.CodeResponse.INVALID_REQUEST)\n+                    .description(\"Method not correct.\");\n+        }\n+    }\n+\n+    @Override\n+    public void validateContentType(HttpServletRequest request) throws OAuthProblemException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6a7134609e299ce9ec926ac3577342ee7076ad5"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjEwNTAw", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428610500", "createdAt": "2020-06-11T05:53:45Z", "commit": {"oid": "e6a7134609e299ce9ec926ac3577342ee7076ad5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1Mzo0NVrOGiPavg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1Mzo0NVrOGiPavg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1NzM3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This class will handle the requests with response_type=none as given in the spec https://openid\n          \n          \n            \n             * Handles requests with response_type=none as defined in https://openid", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438557374", "createdAt": "2020-06-11T05:53:45Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authz/handlers/NoneResponseTypeHandler.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth2.authz.handlers;\n+\n+import org.wso2.carbon.identity.oauth2.IdentityOAuth2Exception;\n+import org.wso2.carbon.identity.oauth2.authz.OAuthAuthzReqMessageContext;\n+import org.wso2.carbon.identity.oauth2.dto.OAuth2AuthorizeRespDTO;\n+\n+/**\n+ * This class will handle the requests with response_type=none as given in the spec https://openid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6a7134609e299ce9ec926ac3577342ee7076ad5"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6a7134609e299ce9ec926ac3577342ee7076ad5", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/e6a7134609e299ce9ec926ac3577342ee7076ad5", "committedDate": "2020-06-11T05:49:55Z", "message": "Introduce response type being none"}, "afterCommit": {"oid": "ec30ec1386509622171a899e54626b6323bf31a4", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/ec30ec1386509622171a899e54626b6323bf31a4", "committedDate": "2020-06-11T07:57:49Z", "message": "Introduce response type being none"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec30ec1386509622171a899e54626b6323bf31a4", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/ec30ec1386509622171a899e54626b6323bf31a4", "committedDate": "2020-06-11T07:57:49Z", "message": "Introduce response type being none"}, "afterCommit": {"oid": "60fd2fcb2d200542edca6e68a1b20672403bfa9d", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/60fd2fcb2d200542edca6e68a1b20672403bfa9d", "committedDate": "2020-06-11T08:12:28Z", "message": "Introduce response type being none"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjkxOTY3", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428691967", "createdAt": "2020-06-11T08:18:57Z", "commit": {"oid": "60fd2fcb2d200542edca6e68a1b20672403bfa9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoxODo1N1rOGiTP5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoxODo1N1rOGiTP5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyMDEzNQ==", "bodyText": "add a new line.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438620135", "createdAt": "2020-06-11T08:18:57Z", "author": {"login": "thanujalk"}, "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/authz/handlers/NoneResponseTypeHandlerTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth2.authz.handlers;\n+\n+import org.mockito.Mockito;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeTest;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.identity.oauth.common.OAuthConstants;\n+import org.wso2.carbon.identity.oauth.event.OAuthEventInterceptor;\n+import org.wso2.carbon.identity.oauth.internal.OAuthComponentServiceHolder;\n+import org.wso2.carbon.identity.oauth2.authz.OAuthAuthzReqMessageContext;\n+import org.wso2.carbon.identity.oauth2.dto.OAuth2AuthorizeReqDTO;\n+import org.wso2.carbon.identity.oauth2.dto.OAuth2AuthorizeRespDTO;\n+\n+/**\n+ * Unit test covering NoneResponseTypeHandler class\n+ */\n+public class NoneResponseTypeHandlerTest {\n+\n+    @BeforeTest\n+    public void setUp() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60fd2fcb2d200542edca6e68a1b20672403bfa9d"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjkyMDMz", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-428692033", "createdAt": "2020-06-11T08:19:04Z", "commit": {"oid": "60fd2fcb2d200542edca6e68a1b20672403bfa9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoxOTowNFrOGiTQHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoxOTowNFrOGiTQHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyMDE4OQ==", "bodyText": "add a new line.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#discussion_r438620189", "createdAt": "2020-06-11T08:19:04Z", "author": {"login": "thanujalk"}, "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/authz/handlers/NoneResponseTypeHandlerTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth2.authz.handlers;\n+\n+import org.mockito.Mockito;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeTest;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.identity.oauth.common.OAuthConstants;\n+import org.wso2.carbon.identity.oauth.event.OAuthEventInterceptor;\n+import org.wso2.carbon.identity.oauth.internal.OAuthComponentServiceHolder;\n+import org.wso2.carbon.identity.oauth2.authz.OAuthAuthzReqMessageContext;\n+import org.wso2.carbon.identity.oauth2.dto.OAuth2AuthorizeReqDTO;\n+import org.wso2.carbon.identity.oauth2.dto.OAuth2AuthorizeRespDTO;\n+\n+/**\n+ * Unit test covering NoneResponseTypeHandler class\n+ */\n+public class NoneResponseTypeHandlerTest {\n+\n+    @BeforeTest\n+    public void setUp() throws Exception {\n+        OAuthEventInterceptor interceptor = Mockito.mock(OAuthEventInterceptor.class);\n+        OAuthComponentServiceHolder.getInstance().addOauthEventInterceptorProxy(interceptor);\n+    }\n+\n+    @DataProvider(name = \"CommonDataProvider\")\n+    public Object[][] commonDataProvider() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60fd2fcb2d200542edca6e68a1b20672403bfa9d"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60fd2fcb2d200542edca6e68a1b20672403bfa9d", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/60fd2fcb2d200542edca6e68a1b20672403bfa9d", "committedDate": "2020-06-11T08:12:28Z", "message": "Introduce response type being none"}, "afterCommit": {"oid": "2e3e8cb1dab1fb9c50e64ec6be396918915dad9d", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/2e3e8cb1dab1fb9c50e64ec6be396918915dad9d", "committedDate": "2020-06-11T08:48:07Z", "message": "Introduce response type being none"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e3e8cb1dab1fb9c50e64ec6be396918915dad9d", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/2e3e8cb1dab1fb9c50e64ec6be396918915dad9d", "committedDate": "2020-06-11T08:48:07Z", "message": "Introduce response type being none"}, "afterCommit": {"oid": "cceb0138431c88500f4a091e4c9ea1609d88b8ab", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/cceb0138431c88500f4a091e4c9ea1609d88b8ab", "committedDate": "2020-06-12T05:50:32Z", "message": "Introduce response type being none"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cceb0138431c88500f4a091e4c9ea1609d88b8ab", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/cceb0138431c88500f4a091e4c9ea1609d88b8ab", "committedDate": "2020-06-12T05:50:32Z", "message": "Introduce response type being none"}, "afterCommit": {"oid": "6ef264112bc4205f973ee8f4217b8b077b159217", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/6ef264112bc4205f973ee8f4217b8b077b159217", "committedDate": "2020-06-12T05:56:23Z", "message": "Introduce response type being none"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b92df233957fa6e9aadc5ef909c7397c7cd93a21", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/b92df233957fa6e9aadc5ef909c7397c7cd93a21", "committedDate": "2020-06-12T05:57:39Z", "message": "Introduce response type being none"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ef264112bc4205f973ee8f4217b8b077b159217", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/6ef264112bc4205f973ee8f4217b8b077b159217", "committedDate": "2020-06-12T05:56:23Z", "message": "Introduce response type being none"}, "afterCommit": {"oid": "b92df233957fa6e9aadc5ef909c7397c7cd93a21", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/b92df233957fa6e9aadc5ef909c7397c7cd93a21", "committedDate": "2020-06-12T05:57:39Z", "message": "Introduce response type being none"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NTA2NjQ1", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1392#pullrequestreview-429506645", "createdAt": "2020-06-12T07:02:26Z", "commit": {"oid": "b92df233957fa6e9aadc5ef909c7397c7cd93a21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3293, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}