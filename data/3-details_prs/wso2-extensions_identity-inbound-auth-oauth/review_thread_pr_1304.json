{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3ODQ5MDk0", "number": 1304, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjozNzoxNlrODbHRew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjo0MToyNlrODbHUYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzU3MzA3OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjozNzoxNlrOFiacLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjozNzoxNlrOFiacLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyOTEwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \" will be used for the signing.\");\n          \n          \n            \n                                \" will be allowed for the signing.\");", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1304#discussion_r371629102", "createdAt": "2020-01-28T06:37:16Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -2213,6 +2215,22 @@ private static JWT encryptWithPublicKey(Key publicKey, JWTClaimsSet jwtClaimsSet\n         }\n     }\n \n+    /**\n+     * Create JWSSigner using the server level configurations and return.\n+     *\n+     * @param privateKey RSA Private key.\n+     * @return  JWSSigner\n+     */\n+    public static JWSSigner createJWSSigner(RSAPrivateKey privateKey) {\n+\n+        boolean allowWeakKey = Boolean.parseBoolean(System.getProperty(ALLOW_WEAK_RSA_SIGNER_KEY));\n+        if (allowWeakKey && log.isDebugEnabled()) {\n+            log.debug(\"System flag 'allow_weak_rsa_signer_key' is  enabled. So weak keys (key length less than 2048) \" +\n+                    \" will be used for the signing.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db23a5f1fd7153e9cadad783c4a7e8bcdc9a137"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzU4MDUxOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjo0MToyNlrOFiagpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjo0MToyNlrOFiagpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYzMDI0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \" will be allowed for the signing.\");\n          \n          \n            \n                                \" will be allowed for signing.\");", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1304#discussion_r371630245", "createdAt": "2020-01-28T06:41:26Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -2226,7 +2226,7 @@ public static JWSSigner createJWSSigner(RSAPrivateKey privateKey) {\n         boolean allowWeakKey = Boolean.parseBoolean(System.getProperty(ALLOW_WEAK_RSA_SIGNER_KEY));\n         if (allowWeakKey && log.isDebugEnabled()) {\n             log.debug(\"System flag 'allow_weak_rsa_signer_key' is  enabled. So weak keys (key length less than 2048) \" +\n-                    \" will be used for the signing.\");\n+                    \" will be allowed for the signing.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f381e734a4a08409fdc936eac59e48cfcda7d36"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3628, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}