{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyOTU2OTA3", "number": 1459, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzo0MzoyNVrOE3GPig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MzozOVrOE3kv1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjA5NDE4OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authcontext/JWTTokenGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzo0MzoyNVrOHwPrQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDozMzo1NlrOHwfYyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM1MDUzMQ==", "bodyText": "We have\nAccessTokenDO accessTokenDO = (AccessTokenDO) messageContext.getProperty(\"AccessTokenDO\");\nat the beginning of the method. Can't we use that variable here?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r520350531", "createdAt": "2020-11-10T07:43:25Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authcontext/JWTTokenGenerator.java", "diffHunk": "@@ -226,6 +227,12 @@ public void generateToken(OAuth2TokenValidationMessageContext messageContext) th\n         claimsSetBuilder.claim(API_GATEWAY_ID + \"/enduser\", authzUser);\n         //TODO: check setting audience\n \n+        if (messageContext.getProperty(OAuthConstants.ACCESS_TOKEN_DO) != null &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c8c61d73f8064fdc72f7cbb97a7b4126c5af0e9"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYwNzk0NQ==", "bodyText": "fixed with 0d90782", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r520607945", "createdAt": "2020-11-10T14:33:56Z", "author": {"login": "dushaniw"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authcontext/JWTTokenGenerator.java", "diffHunk": "@@ -226,6 +227,12 @@ public void generateToken(OAuth2TokenValidationMessageContext messageContext) th\n         claimsSetBuilder.claim(API_GATEWAY_ID + \"/enduser\", authzUser);\n         //TODO: check setting audience\n \n+        if (messageContext.getProperty(OAuthConstants.ACCESS_TOKEN_DO) != null &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM1MDUzMQ=="}, "originalCommit": {"oid": "5c8c61d73f8064fdc72f7cbb97a7b4126c5af0e9"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzkyMjY0OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authcontext/JWTTokenGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNToxMTozNVrOHwhNmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0NzozNVrOHxASXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYzNzg0OA==", "bodyText": "Rather than adding it in this JWT, wouldn't it be better if we put this value in the introspection response?\nIs this JWT generator used in APIM context?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r520637848", "createdAt": "2020-11-10T15:11:35Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authcontext/JWTTokenGenerator.java", "diffHunk": "@@ -226,6 +227,10 @@ public void generateToken(OAuth2TokenValidationMessageContext messageContext) th\n         claimsSetBuilder.claim(API_GATEWAY_ID + \"/enduser\", authzUser);\n         //TODO: check setting audience\n \n+        if (accessTokenDO.getTokenType() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d9078223b61023395b613d0e075f1ef2f3845f7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0Njk3NQ==", "bodyText": "JWT generator is not used in the APIM context. We don't use this claim from the introspection response. However +1 to add it as a standard claim to introspection response. fixed with 66a2333", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521146975", "createdAt": "2020-11-11T06:47:35Z", "author": {"login": "dushaniw"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authcontext/JWTTokenGenerator.java", "diffHunk": "@@ -226,6 +227,10 @@ public void generateToken(OAuth2TokenValidationMessageContext messageContext) th\n         claimsSetBuilder.claim(API_GATEWAY_ID + \"/enduser\", authzUser);\n         //TODO: check setting audience\n \n+        if (accessTokenDO.getTokenType() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYzNzg0OA=="}, "originalCommit": {"oid": "0d9078223b61023395b613d0e075f1ef2f3845f7"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzA4NTcwOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MTozOVrOHxAEEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0NzowMFrOHxAQyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzMxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n          \n          \n            \n                public IntrospectionResponseBuilder setAuthorizedUserType(String authorizedUserType) {", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521143315", "createdAt": "2020-11-11T06:41:39Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NjU2OA==", "bodyText": "fixed with 66a2333", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521146568", "createdAt": "2020-11-11T06:47:00Z", "author": {"login": "dushaniw"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzMxNQ=="}, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzA4NjE1OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MTo1MlrOHxAEVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0Njo1MlrOHxAQZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzM4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (StringUtils.isNotBlank(aut)) {\n          \n          \n            \n                    if (StringUtils.isNotBlank(authorizedUserType)) {", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521143383", "createdAt": "2020-11-11T06:41:52Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n+\n+        if (StringUtils.isNotBlank(aut)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NjQ2OA==", "bodyText": "fixed with 66a2333", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521146468", "createdAt": "2020-11-11T06:46:52Z", "author": {"login": "dushaniw"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n+\n+        if (StringUtils.isNotBlank(aut)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzM4Mw=="}, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzA4NjU5OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MjowM1rOHxAElw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0Njo0M1rOHxAQBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzQ0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        parameters.put(IntrospectionResponse.AUT, aut);\n          \n          \n            \n                        parameters.put(IntrospectionResponse.AUT, authorizedUserType);", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521143447", "createdAt": "2020-11-11T06:42:03Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n+\n+        if (StringUtils.isNotBlank(aut)) {\n+            parameters.put(IntrospectionResponse.AUT, aut);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NjM3NA==", "bodyText": "fixed with 66a2333", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521146374", "createdAt": "2020-11-11T06:46:43Z", "author": {"login": "dushaniw"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n+\n+        if (StringUtils.isNotBlank(aut)) {\n+            parameters.put(IntrospectionResponse.AUT, aut);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzQ0Nw=="}, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzA5MjA3OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/test/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0MzozOVrOHxAIAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0NjozMlrOHxAPhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NDMyMg==", "bodyText": "Shall we use already available constants for this?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521144322", "createdAt": "2020-11-11T06:43:39Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/test/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilderTest.java", "diffHunk": "@@ -88,6 +88,7 @@ public void testResposeBuilderWithVal(boolean isActive, int notBefore, int expir\n         introspectionResponseBuilder1.setClientId(\"rgfKVdnMQnJSSr_pKFTxj3apiwYa\");\n         introspectionResponseBuilder1.setErrorCode(\"Invalid input\");\n         introspectionResponseBuilder1.setErrorDescription(\"error_discription\");\n+        introspectionResponseBuilder1.setAuthorizedUserType(\"APPLICATION_USER\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NjI0Nw==", "bodyText": "+1 fixed with 66a2333", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521146247", "createdAt": "2020-11-11T06:46:32Z", "author": {"login": "dushaniw"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/test/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilderTest.java", "diffHunk": "@@ -88,6 +88,7 @@ public void testResposeBuilderWithVal(boolean isActive, int notBefore, int expir\n         introspectionResponseBuilder1.setClientId(\"rgfKVdnMQnJSSr_pKFTxj3apiwYa\");\n         introspectionResponseBuilder1.setErrorCode(\"Invalid input\");\n         introspectionResponseBuilder1.setErrorDescription(\"error_discription\");\n+        introspectionResponseBuilder1.setAuthorizedUserType(\"APPLICATION_USER\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NDMyMg=="}, "originalCommit": {"oid": "690092a91503d3141e87813057ea5bc052db0022"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3599, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}