{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MDM1NTQ4", "number": 1443, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMjoyNzo1NFrOEi8Rkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTowMjo0MVrOEjB9SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDc0NTc5OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMjoyNzo1NFrOHRB9Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMjoyNzo1NFrOHRB9Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYxOTkzMQ==", "bodyText": "Can we use Collections.emptyMap(), instead of creating new map object.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487619931", "createdAt": "2020-09-14T02:27:54Z", "author": {"login": "ruwanta"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,30 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                Map<String, Object> paramMap = new HashMap<>();\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, paramMap);\n+            } catch (IdentityOAuth2Exception e) {\n+                log.error(\"Error occurred when invoking post token revoke listener \", e);\n+            }\n+        }\n+    }\n+\n+    private void invokePreRevocationListeners(AccessTokenDO accessTokenDO) throws IdentityOAuth2Exception {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            Map<String, Object> paramMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b28bfae4a96729a821fc14a3db4ade7333a520a1"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDc0NTk1OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMjoyODowNVrOHRB9dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMjoyODowNVrOHRB9dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYxOTk1Ng==", "bodyText": "Can we use Collections.emptyMap(), instead of creating new map object.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487619956", "createdAt": "2020-09-14T02:28:05Z", "author": {"login": "ruwanta"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,30 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                Map<String, Object> paramMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b28bfae4a96729a821fc14a3db4ade7333a520a1"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDc0Nzc2OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMjoyOToxNVrOHRB-eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODowMjo0N1rOHRITjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYyMDIxNg==", "bodyText": "Can we change the method signature to\nprivate boolean revokeTokens(AccessTokenDO[] accessTokens) ,\nWhich helps us not to create a List from Array", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487620216", "createdAt": "2020-09-14T02:29:15Z", "author": {"login": "ruwanta"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -327,23 +330,27 @@ private boolean revokeTokens(String username, UserStoreManager userStoreManager)\n                 // Also, if token binding is enabled, there can be multiple active tokens for the same user, scope\n                 // and client combination.\n                 // So need to revoke all the tokens.\n-                return revokeTokens(accessTokens);\n+                try {\n+                    return revokeTokens(accessTokens);\n+                } catch (IdentityOAuth2Exception e) {\n+                    String errorMsg = \"Error occurred while revoking Access Token\";\n+                    log.error(errorMsg, e);\n+                    throw new UserStoreException(e);\n+                }\n             }\n         }\n         return true;\n     }\n \n-    private boolean revokeTokens(List<String> accessTokens) throws UserStoreException {\n+    private boolean revokeTokens(List<AccessTokenDO> accessTokens) throws IdentityOAuth2Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b28bfae4a96729a821fc14a3db4ade7333a520a1"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcyMzkxNw==", "bodyText": "This was leads to change [1] from List to Array.\n[1] - https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443/files/b28bfae4a96729a821fc14a3db4ade7333a520a1#diff-0daa59162506998f3129964e2307f192R334", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487723917", "createdAt": "2020-09-14T08:02:47Z", "author": {"login": "tharindu1st"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -327,23 +330,27 @@ private boolean revokeTokens(String username, UserStoreManager userStoreManager)\n                 // Also, if token binding is enabled, there can be multiple active tokens for the same user, scope\n                 // and client combination.\n                 // So need to revoke all the tokens.\n-                return revokeTokens(accessTokens);\n+                try {\n+                    return revokeTokens(accessTokens);\n+                } catch (IdentityOAuth2Exception e) {\n+                    String errorMsg = \"Error occurred while revoking Access Token\";\n+                    log.error(errorMsg, e);\n+                    throw new UserStoreException(e);\n+                }\n             }\n         }\n         return true;\n     }\n \n-    private boolean revokeTokens(List<String> accessTokens) throws UserStoreException {\n+    private boolean revokeTokens(List<AccessTokenDO> accessTokens) throws IdentityOAuth2Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYyMDIxNg=="}, "originalCommit": {"oid": "b28bfae4a96729a821fc14a3db4ade7333a520a1"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTY3NjA4OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTowMjozMFrOHRKfig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOToyODozN1rOHRLcnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTc1NA==", "bodyText": "Do we need log here? We can just throw here and log in the caller method.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487759754", "createdAt": "2020-09-14T09:02:30Z", "author": {"login": "IsuraD"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,28 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n+            } catch (IdentityOAuth2Exception e) {\n+                log.error(\"Error occurred when invoking post token revoke listener \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1b9a349dcd62e900833db68023045d244c98d0c"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc2OTM3NQ==", "bodyText": "since we need to iterate over the tokens we just log not throw into upper level", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487769375", "createdAt": "2020-09-14T09:18:36Z", "author": {"login": "tharindu1st"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,28 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n+            } catch (IdentityOAuth2Exception e) {\n+                log.error(\"Error occurred when invoking post token revoke listener \", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTc1NA=="}, "originalCommit": {"oid": "a1b9a349dcd62e900833db68023045d244c98d0c"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NDYxNw==", "bodyText": "Samething should be applied for PreRevocation?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487774617", "createdAt": "2020-09-14T09:27:17Z", "author": {"login": "IsuraD"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,28 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n+            } catch (IdentityOAuth2Exception e) {\n+                log.error(\"Error occurred when invoking post token revoke listener \", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTc1NA=="}, "originalCommit": {"oid": "a1b9a349dcd62e900833db68023045d244c98d0c"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NTM5MQ==", "bodyText": "Do you think, we need to skip revocation process through listeners?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487775391", "createdAt": "2020-09-14T09:28:37Z", "author": {"login": "IsuraD"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,28 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n+            } catch (IdentityOAuth2Exception e) {\n+                log.error(\"Error occurred when invoking post token revoke listener \", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTc1NA=="}, "originalCommit": {"oid": "a1b9a349dcd62e900833db68023045d244c98d0c"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTY3Njg4OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTowMjo0MVrOHRKf_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTowMjo0MVrOHRKf_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTg3MA==", "bodyText": "No need this line", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487759870", "createdAt": "2020-09-14T09:02:41Z", "author": {"login": "IsuraD"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,28 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n+            } catch (IdentityOAuth2Exception e) {\n+                log.error(\"Error occurred when invoking post token revoke listener \", e);\n+            }\n+        }\n+    }\n+\n+    private void invokePreRevocationListeners(AccessTokenDO accessTokenDO) throws IdentityOAuth2Exception {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            oAuthEventInterceptorProxy.onPreTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1b9a349dcd62e900833db68023045d244c98d0c"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3591, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}