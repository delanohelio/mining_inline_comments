{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDk2MTA1", "number": 1327, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNTowMzo0NVrODjVVhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNToyMDo1NlrODjVeWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mzc2MzI0OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth.scope.endpoint/src/main/resources/api.identity.oauth2.scope.endpoint.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNTowMzo0NVrOFvFV8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDo1MTowOFrOFvNpqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkxNDkzMQ==", "bodyText": "make more descriptive", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1327#discussion_r384914931", "createdAt": "2020-02-27T05:03:45Z", "author": {"login": "IsuraD"}, "path": "components/org.wso2.carbon.identity.oauth.scope.endpoint/src/main/resources/api.identity.oauth2.scope.endpoint.yaml", "diffHunk": "@@ -130,6 +130,16 @@ paths:\n           description: Number of scopes to retrieve from the point of the start index\n           required: false\n           type: integer\n+        - name: includeOIDCScopes\n+          in: query\n+          description: Retrieve OIDC scopes as well via OAuth2 scopes endpoint.\n+          required: false\n+          type: boolean\n+        - name: requestedScopes\n+          in: query\n+          description: Request a set of scopes  to be returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7388acaa20bd43e6ee5d92de0779e5f464d0cdc3"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA1MTA0OA==", "bodyText": "fixed", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1327#discussion_r385051048", "createdAt": "2020-02-27T10:51:08Z", "author": {"login": "sarubi"}, "path": "components/org.wso2.carbon.identity.oauth.scope.endpoint/src/main/resources/api.identity.oauth2.scope.endpoint.yaml", "diffHunk": "@@ -130,6 +130,16 @@ paths:\n           description: Number of scopes to retrieve from the point of the start index\n           required: false\n           type: integer\n+        - name: includeOIDCScopes\n+          in: query\n+          description: Retrieve OIDC scopes as well via OAuth2 scopes endpoint.\n+          required: false\n+          type: boolean\n+        - name: requestedScopes\n+          in: query\n+          description: Request a set of scopes  to be returned.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkxNDkzMQ=="}, "originalCommit": {"oid": "7388acaa20bd43e6ee5d92de0779e5f464d0cdc3"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mzc4NTg0OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2ScopeService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNToyMDo1NlrOFvFjWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDo1Mjo0M1rOFvNtXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkxODM2MQ==", "bodyText": "includeOIDCScopes is not required.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1327#discussion_r384918361", "createdAt": "2020-02-27T05:20:56Z", "author": {"login": "IsuraD"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2ScopeService.java", "diffHunk": "@@ -173,6 +207,42 @@ public boolean isScopeExists(String name) throws IdentityOAuth2ScopeException {\n         return isScopeExists;\n     }\n \n+    /**\n+     * Check the existence of a scope depends on scope type. Type can be OAUTH2 scopes or OIDC scopes.\n+     *\n+     * @param name              Name of the scope.\n+     * @param includeOIDCScopes Include OIDC scopes as well.\n+     * @return True if scope with the given scope name exists.\n+     * @throws IdentityOAuth2ScopeException\n+     */\n+    public boolean isScopeExists(String name, boolean includeOIDCScopes) throws IdentityOAuth2ScopeException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7388acaa20bd43e6ee5d92de0779e5f464d0cdc3"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA1MTk5Nw==", "bodyText": "As per the offline discussion, I'll keep as it is since we don't expose OIDC scopes, via isScopeExists method check.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1327#discussion_r385051997", "createdAt": "2020-02-27T10:52:43Z", "author": {"login": "sarubi"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2ScopeService.java", "diffHunk": "@@ -173,6 +207,42 @@ public boolean isScopeExists(String name) throws IdentityOAuth2ScopeException {\n         return isScopeExists;\n     }\n \n+    /**\n+     * Check the existence of a scope depends on scope type. Type can be OAUTH2 scopes or OIDC scopes.\n+     *\n+     * @param name              Name of the scope.\n+     * @param includeOIDCScopes Include OIDC scopes as well.\n+     * @return True if scope with the given scope name exists.\n+     * @throws IdentityOAuth2ScopeException\n+     */\n+    public boolean isScopeExists(String name, boolean includeOIDCScopes) throws IdentityOAuth2ScopeException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkxODM2MQ=="}, "originalCommit": {"oid": "7388acaa20bd43e6ee5d92de0779e5f464d0cdc3"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3639, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}