{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMzEwNzIy", "number": 1337, "title": "Fix validating id token encryption algorithm and method", "bodyText": "Proposed changes in this pull request\nFix wso2/product-is#7773\nAdded validation methods to check the Id Token and the Algorithms exists", "createdAt": "2020-02-28T10:17:35Z", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337", "merged": true, "mergeCommit": {"oid": "7433ac2c421c85345db38333035938ad6c25b56a"}, "closed": true, "closedAt": "2020-02-28T11:40:28Z", "author": {"login": "Sathiyakugan"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcItJn9gH2gAyMzgxMzEwNzIyOjJiYTZiODkyY2ZhMThhM2ZmMmM1MDE2YzJiOGIyMjYzY2UzNzRkYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdREJy4AFqTUwNjA2ODk1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2ba6b892cfa18a3ff2c5016c2b8b2263ce374dc1", "author": {"user": {"login": "Sathiyakugan", "name": "Sathiyakugan"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/2ba6b892cfa18a3ff2c5016c2b8b2263ce374dc1", "committedDate": "2020-02-28T10:13:43Z", "message": "Fix validating id token encryption algorithm and method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MzE1Nzk5", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#pullrequestreview-366315799", "createdAt": "2020-02-28T10:58:41Z", "commit": {"oid": "2ba6b892cfa18a3ff2c5016c2b8b2263ce374dc1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDo1ODo0MVrOFvxK5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDo1ODo0MVrOFvxK5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMjk5Ng==", "bodyText": "Add new line", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#discussion_r385632996", "createdAt": "2020-02-28T10:58:41Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "diffHunk": "@@ -1295,6 +1308,44 @@ void logOnInvalidConfig(String appName, String tokenType, long defaultValue) {\n         return requestedScopeValidators;\n     }\n \n+\n+    /**\n+     * Get the IdToken Encryption Method registered by the user and filter the allowed one.\n+     *\n+     * @param application Application user have registered\n+     * @return idTokenEncryptionMethod\n+     * @throws IdentityOAuthAdminException Identity OAuthAdmin exception.\n+     */\n+    String filterIdTokenEncryptionMethod(OAuthConsumerAppDTO application) throws IdentityOAuthAdminException {\n+        List<String> supportedIdTokenEncryptionMethods = OAuthServerConfiguration.getInstance()\n+                .getSupportedIdTokenEncryptionMethods();\n+        String idTokenEncryptionMethod = application.getIdTokenEncryptionMethod();\n+        if (!supportedIdTokenEncryptionMethods.contains(idTokenEncryptionMethod)) {\n+            String msg = String.format(\"'%s' IdToken Encryption Method is not allowed.\", idTokenEncryptionMethod);\n+            throw handleClientError(INVALID_REQUEST, msg);\n+        }\n+        return idTokenEncryptionMethod;\n+    }\n+\n+    /**\n+     * Get the IdToken Encryption Algorithm registered by the user and filter the allowed one.\n+     *\n+     * @param application Application user have registered\n+     * @return idTokenEncryptionAlgorithm\n+     * @throws IdentityOAuthAdminException Identity OAuthAdmin exception.\n+     */\n+    String filterIdTokenEncryptionAlgorithm(OAuthConsumerAppDTO application) throws IdentityOAuthAdminException {\n+        List<String> supportedIdTokenEncryptionAlgorithms = OAuthServerConfiguration.getInstance()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba6b892cfa18a3ff2c5016c2b8b2263ce374dc1"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MzE1OTE5", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#pullrequestreview-366315919", "createdAt": "2020-02-28T10:58:53Z", "commit": {"oid": "2ba6b892cfa18a3ff2c5016c2b8b2263ce374dc1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDo1ODo1M1rOFvxLSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDo1ODo1M1rOFvxLSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMzA5Ng==", "bodyText": "Remove extra line", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#discussion_r385633096", "createdAt": "2020-02-28T10:58:53Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "diffHunk": "@@ -1295,6 +1308,44 @@ void logOnInvalidConfig(String appName, String tokenType, long defaultValue) {\n         return requestedScopeValidators;\n     }\n \n+\n+    /**\n+     * Get the IdToken Encryption Method registered by the user and filter the allowed one.\n+     *\n+     * @param application Application user have registered\n+     * @return idTokenEncryptionMethod\n+     * @throws IdentityOAuthAdminException Identity OAuthAdmin exception.\n+     */\n+    String filterIdTokenEncryptionMethod(OAuthConsumerAppDTO application) throws IdentityOAuthAdminException {\n+        List<String> supportedIdTokenEncryptionMethods = OAuthServerConfiguration.getInstance()\n+                .getSupportedIdTokenEncryptionMethods();\n+        String idTokenEncryptionMethod = application.getIdTokenEncryptionMethod();\n+        if (!supportedIdTokenEncryptionMethods.contains(idTokenEncryptionMethod)) {\n+            String msg = String.format(\"'%s' IdToken Encryption Method is not allowed.\", idTokenEncryptionMethod);\n+            throw handleClientError(INVALID_REQUEST, msg);\n+        }\n+        return idTokenEncryptionMethod;\n+    }\n+\n+    /**\n+     * Get the IdToken Encryption Algorithm registered by the user and filter the allowed one.\n+     *\n+     * @param application Application user have registered\n+     * @return idTokenEncryptionAlgorithm\n+     * @throws IdentityOAuthAdminException Identity OAuthAdmin exception.\n+     */\n+    String filterIdTokenEncryptionAlgorithm(OAuthConsumerAppDTO application) throws IdentityOAuthAdminException {\n+        List<String> supportedIdTokenEncryptionAlgorithms = OAuthServerConfiguration.getInstance()\n+                .getSupportedIdTokenEncryptionAlgorithm();\n+        String idTokenEncryptionAlgorithm = application.getIdTokenEncryptionAlgorithm();\n+        if (!supportedIdTokenEncryptionAlgorithms.contains(idTokenEncryptionAlgorithm)) {\n+            String msg = String.format(\"'%s' IdToken Encryption Method is not allowed.\", idTokenEncryptionAlgorithm);\n+            throw handleClientError(INVALID_REQUEST, msg);\n+        }\n+        return idTokenEncryptionAlgorithm;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba6b892cfa18a3ff2c5016c2b8b2263ce374dc1"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MzE2MTQ5", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#pullrequestreview-366316149", "createdAt": "2020-02-28T10:59:17Z", "commit": {"oid": "2ba6b892cfa18a3ff2c5016c2b8b2263ce374dc1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDo1OToxN1rOFvxL9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDo1OToxN1rOFvxL9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMzI3MQ==", "bodyText": "remove extra line", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#discussion_r385633271", "createdAt": "2020-02-28T10:59:17Z", "author": {"login": "janakamarasena"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "diffHunk": "@@ -1295,6 +1308,44 @@ void logOnInvalidConfig(String appName, String tokenType, long defaultValue) {\n         return requestedScopeValidators;\n     }\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba6b892cfa18a3ff2c5016c2b8b2263ce374dc1"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4875b1c8a1e92f0fc8c01dcf04f5d27528c1364", "author": {"user": {"login": "Sathiyakugan", "name": "Sathiyakugan"}}, "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/b4875b1c8a1e92f0fc8c01dcf04f5d27528c1364", "committedDate": "2020-02-28T11:07:11Z", "message": "fix the formatting issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MzIyMDA3", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#pullrequestreview-366322007", "createdAt": "2020-02-28T11:09:36Z", "commit": {"oid": "b4875b1c8a1e92f0fc8c01dcf04f5d27528c1364"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDY4ODc2", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#pullrequestreview-506068876", "createdAt": "2020-10-10T05:42:49Z", "commit": {"oid": "b4875b1c8a1e92f0fc8c01dcf04f5d27528c1364"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNTo0Mjo0OVrOHfdcLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNTo0Mjo0OVrOHfdcLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1MDI1Mg==", "bodyText": "Isn't this redundant?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#discussion_r502750252", "createdAt": "2020-10-10T05:42:49Z", "author": {"login": "darshanasbg"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "diffHunk": "@@ -279,9 +279,16 @@ public OAuthConsumerAppDTO registerAndRetrieveOAuthApplicationData(OAuthConsumer\n                     // Set OIDC Config Properties.\n                     app.setRequestObjectSignatureValidationEnabled(\n                             application.isRequestObjectSignatureValidationEnabled());\n-                    app.setIdTokenEncryptionEnabled(application.isIdTokenEncryptionEnabled());\n-                    app.setIdTokenEncryptionAlgorithm(application.getIdTokenEncryptionAlgorithm());\n-                    app.setIdTokenEncryptionMethod(application.getIdTokenEncryptionMethod());\n+\n+                    // Validate IdToken Encryption configurations.\n+                    if (application.isIdTokenEncryptionEnabled()) {\n+                        app.setIdTokenEncryptionEnabled(application.isIdTokenEncryptionEnabled());\n+                        if (application.isIdTokenEncryptionEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4875b1c8a1e92f0fc8c01dcf04f5d27528c1364"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDY4ODgz", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#pullrequestreview-506068883", "createdAt": "2020-10-10T05:42:53Z", "commit": {"oid": "b4875b1c8a1e92f0fc8c01dcf04f5d27528c1364"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNTo0Mjo1NFrOHfdcNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNTo0Mjo1NFrOHfdcNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1MDI2MQ==", "bodyText": "Isn't this redundant?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#discussion_r502750261", "createdAt": "2020-10-10T05:42:54Z", "author": {"login": "darshanasbg"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "diffHunk": "@@ -449,9 +456,15 @@ public void updateConsumerApplication(OAuthConsumerAppDTO consumerAppDTO) throws\n             oauthappdo.setScopeValidators(filterScopeValidators(consumerAppDTO));\n             oauthappdo.setRequestObjectSignatureValidationEnabled(consumerAppDTO\n                     .isRequestObjectSignatureValidationEnabled());\n-            oauthappdo.setIdTokenEncryptionEnabled(consumerAppDTO.isIdTokenEncryptionEnabled());\n-            oauthappdo.setIdTokenEncryptionAlgorithm(consumerAppDTO.getIdTokenEncryptionAlgorithm());\n-            oauthappdo.setIdTokenEncryptionMethod(consumerAppDTO.getIdTokenEncryptionMethod());\n+            // Validate IdToken Encryption configurations.\n+            if (consumerAppDTO.isIdTokenEncryptionEnabled()) {\n+                oauthappdo.setIdTokenEncryptionEnabled(consumerAppDTO.isIdTokenEncryptionEnabled());\n+                if (consumerAppDTO.isIdTokenEncryptionEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4875b1c8a1e92f0fc8c01dcf04f5d27528c1364"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDY4OTUy", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#pullrequestreview-506068952", "createdAt": "2020-10-10T05:44:16Z", "commit": {"oid": "b4875b1c8a1e92f0fc8c01dcf04f5d27528c1364"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNTo0NDoxNlrOHfdcgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNTo0NDoxNlrOHfdcgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1MDMzNg==", "bodyText": "Should this be a private method?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1337#discussion_r502750336", "createdAt": "2020-10-10T05:44:16Z", "author": {"login": "darshanasbg"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "diffHunk": "@@ -1295,6 +1308,45 @@ void logOnInvalidConfig(String appName, String tokenType, long defaultValue) {\n         return requestedScopeValidators;\n     }\n \n+\n+    /**\n+     * Get the IdToken Encryption Method registered by the user and filter the allowed one.\n+     *\n+     * @param application Application user have registered\n+     * @return idTokenEncryptionMethod\n+     * @throws IdentityOAuthAdminException Identity OAuthAdmin exception.\n+     */\n+    String filterIdTokenEncryptionMethod(OAuthConsumerAppDTO application) throws IdentityOAuthAdminException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4875b1c8a1e92f0fc8c01dcf04f5d27528c1364"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3225, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}