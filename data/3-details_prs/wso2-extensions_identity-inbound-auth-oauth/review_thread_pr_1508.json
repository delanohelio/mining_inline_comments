{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MzI5MjI5", "number": 1508, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDo0ODo1MVrOE_F-Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzowNDozOVrOE_JAUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTkzNjE0OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDo0ODo1MVrOH8m7oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMTowNzo1MlrOH8noRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNDQ2NQ==", "bodyText": "shall we merge the nested if condition with this?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533314465", "createdAt": "2020-12-01T10:48:51Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java", "diffHunk": "@@ -2586,6 +2593,49 @@ private String appendAuthenticatedIDPs(SessionDataCacheEntry sessionDataCacheEnt\n         return redirectURL;\n     }\n \n+    /**\n+     * Store opbscookie in session context.\n+     *\n+     * @param sessionDataCacheEntry SessionDataCacheEntry.\n+     * @param opbscookie            opbscookie value.\n+     */\n+    private void storeOpbsInSessionContext(SessionDataCacheEntry sessionDataCacheEntry, String opbscookie) {\n+\n+        String sessionContextIdentifier = getSessionContextIdentifier(sessionDataCacheEntry);\n+        if (StringUtils.isNotBlank(sessionContextIdentifier)) {\n+            SessionContext sessionContext = FrameworkUtils.getSessionContextFromCache(sessionContextIdentifier);\n+            if (sessionContext != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be28dfb07b7720445f367b9150c5345873234d02"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyNTg5NA==", "bodyText": "there are two else part here", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533325894", "createdAt": "2020-12-01T11:07:52Z", "author": {"login": "piraveena"}, "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java", "diffHunk": "@@ -2586,6 +2593,49 @@ private String appendAuthenticatedIDPs(SessionDataCacheEntry sessionDataCacheEnt\n         return redirectURL;\n     }\n \n+    /**\n+     * Store opbscookie in session context.\n+     *\n+     * @param sessionDataCacheEntry SessionDataCacheEntry.\n+     * @param opbscookie            opbscookie value.\n+     */\n+    private void storeOpbsInSessionContext(SessionDataCacheEntry sessionDataCacheEntry, String opbscookie) {\n+\n+        String sessionContextIdentifier = getSessionContextIdentifier(sessionDataCacheEntry);\n+        if (StringUtils.isNotBlank(sessionContextIdentifier)) {\n+            SessionContext sessionContext = FrameworkUtils.getSessionContextFromCache(sessionContextIdentifier);\n+            if (sessionContext != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNDQ2NQ=="}, "originalCommit": {"oid": "be28dfb07b7720445f367b9150c5345873234d02"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTk0MDA5OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/token/bindings/impl/SSOSessionBasedTokenBinder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDo0OTo0NFrOH8m-Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDo0OTo0NFrOH8m-Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNTA3NQ==", "bodyText": "let's use multi-line comments", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533315075", "createdAt": "2020-12-01T10:49:44Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/token/bindings/impl/SSOSessionBasedTokenBinder.java", "diffHunk": "@@ -113,6 +118,28 @@ public void clearTokenBindingElements(HttpServletRequest request, HttpServletRes\n     @Override\n     public boolean isValidTokenBinding(Object request, String bindingReference) {\n \n+        try {\n+            String sessionIdentifier = getTokenBindingValue((HttpServletRequest) request);\n+            if (StringUtils.isBlank(sessionIdentifier)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"CommonAuthId cookie is not found in the request.\");\n+                }\n+                return false;\n+            }\n+            // Retrieve session context information using sessionIdentifier in order to check the validity of", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be28dfb07b7720445f367b9150c5345873234d02"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTk0MzU3OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDo1MDozOFrOH8nALg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDo1MDozOFrOH8nALg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNTYzMA==", "bodyText": "let's use StringUtils.isNotBlank", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533315630", "createdAt": "2020-12-01T10:50:38Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java", "diffHunk": "@@ -85,6 +81,73 @@ public String getName() {\n         return \"OIDCLogoutEventHandler\";\n     }\n \n+    private boolean isLogoutInitiatedFromOIDCApp(Event event) {\n+\n+        HttpServletRequest request = getHttpRequestFromEvent(event);\n+        if (request != null) {\n+            if (StringUtils.equals(request.getParameter(TYPE), FrameworkConstants.RequestType.CLAIM_TYPE_OIDC)) {\n+                // If a logout request is triggered from an OIDC app then the OIDCLogoutServlet\n+                // and OIDCLogoutEventHandler both are triggered and the logout request is handled in both\n+                // places. https://github.com/wso2/product-is/issues/6418\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private String getopbsCookieId(Event event) {\n+\n+        HttpServletRequest request = getHttpRequestFromEvent(event);\n+        String opbsCookie = null;\n+        if (request != null) {\n+            // Get the opbscookie from request.\n+            opbsCookie = getOpbsCookieFromRequest(request);\n+        }\n+        if (StringUtils.isEmpty(opbsCookie)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be28dfb07b7720445f367b9150c5345873234d02"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjQyNjg2OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/DefaultLogoutTokenBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzowMjo1N1rOH8rlTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzowMjo1N1rOH8rlTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM5MDY3MQ==", "bodyText": "Better if we could add a description to this param for consistency.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533390671", "createdAt": "2020-12-01T13:02:57Z", "author": {"login": "chamathns"}, "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/DefaultLogoutTokenBuilder.java", "diffHunk": "@@ -213,20 +238,17 @@ private String getSigningTenantDomain(OAuthAppDO oAuthAppDO) {\n     /**\n      * Returns the OIDCsessionState of the obps cookie.\n      *\n-     * @param request\n+     * @param opbscookie", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1a6e4d1d3139de85598482c0137bea08805022f"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjQyNzQzOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutRequestSender.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzowMzowOVrOH8rlqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzowMzowOVrOH8rlqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM5MDc2Mw==", "bodyText": "Better if we could add a description to this param for consistency.", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533390763", "createdAt": "2020-12-01T13:03:09Z", "author": {"login": "chamathns"}, "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutRequestSender.java", "diffHunk": "@@ -89,18 +106,19 @@ public void sendLogoutRequests(HttpServletRequest request) {\n         }\n     }\n \n+\n     /**\n      * Returns a Map with logout tokens and back-channel logut Url of Service providers.\n      *\n-     * @param request\n+     * @param opbsCookie", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1a6e4d1d3139de85598482c0137bea08805022f"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjQyOTU2OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutTokenBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzowMzo0N1rOH8rnGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzowMzo0N1rOH8rnGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM5MTEzMA==", "bodyText": "Shall we use sentence-case here for the descriptions?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533391130", "createdAt": "2020-12-01T13:03:47Z", "author": {"login": "chamathns"}, "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutTokenBuilder.java", "diffHunk": "@@ -38,4 +38,14 @@\n      */\n     Map<String, String> buildLogoutToken(HttpServletRequest request)\n             throws IdentityOAuth2Exception, InvalidOAuthClientException;\n+\n+    /**\n+     * Returns logout token and back-channel logout uri map.\n+     *\n+     * @param opbsCookie opbscookie value\n+     * @return a map of logout tokens and corresponding back-channel logout URLs.\n+     * @throws IdentityOAuth2Exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1a6e4d1d3139de85598482c0137bea08805022f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjQzMjgzOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzowNDozOVrOH8rpFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzowNDozOVrOH8rpFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM5MTYzNg==", "bodyText": "Shall we make use of a comment block here?", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533391636", "createdAt": "2020-12-01T13:04:39Z", "author": {"login": "chamathns"}, "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java", "diffHunk": "@@ -85,6 +81,73 @@ public String getName() {\n         return \"OIDCLogoutEventHandler\";\n     }\n \n+    private boolean isLogoutInitiatedFromOIDCApp(Event event) {\n+\n+        HttpServletRequest request = getHttpRequestFromEvent(event);\n+        if (request != null) {\n+            if (StringUtils.equals(request.getParameter(TYPE), FrameworkConstants.RequestType.CLAIM_TYPE_OIDC)) {\n+                // If a logout request is triggered from an OIDC app then the OIDCLogoutServlet\n+                // and OIDCLogoutEventHandler both are triggered and the logout request is handled in both\n+                // places. https://github.com/wso2/product-is/issues/6418", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1a6e4d1d3139de85598482c0137bea08805022f"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3543, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}