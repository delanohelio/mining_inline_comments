{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNjIxMTkz", "number": 9485, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzo1Nzo1M1rOE_Rdug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODozMDo1MFrOE_SQBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzgxODgyOnYy", "diffSide": "LEFT", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackendConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzo1Nzo1M1rOH85EHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzo1Nzo1M1rOH85EHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxMTU1MA==", "bodyText": "How about validating that the servers list is not empty? That way we can prevent errors later on.", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r533611550", "createdAt": "2020-12-01T17:57:53Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackendConfig.java", "diffHunk": "@@ -80,9 +80,6 @@\n \n     @Override\n     public void validate(ValidationResult result) {\n-        if (servers().size() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Nzg3OTM1OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoxMzozM1rOH85pnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoxMzozM1rOH85pnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMTE0OQ==", "bodyText": "Can we remove this comment?", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r533621149", "createdAt": "2020-12-01T18:13:33Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java", "diffHunk": "@@ -191,14 +195,42 @@ public AuthServiceBackendDTO prepareConfigUpdate(AuthServiceBackendDTO existingB\n     public AuthServiceBackendTestResult testConnection(@Nullable AuthServiceBackendDTO existingBackendConfig) {\n         final ADAuthServiceBackendConfig testConfig = buildTestConfig(existingBackendConfig);\n \n-        try (final LDAPConnection connection = ldapConnector.connect(testConfig.getLDAPConnectorConfig())) {\n+        final LDAPConnectorConfig config = testConfig.getLDAPConnectorConfig();\n+\n+        if (config.serverList().size() == 1) {\n+            return testSingleConnection(config, config.serverList().get(0));\n+        }\n+\n+        // Test each server separately, so we can see the result for each\n+        final List<AuthServiceBackendTestResult> testResults = config.serverList().stream().map(server -> testSingleConnection(config, server)).collect(Collectors.toList());\n+\n+        if (testResults.stream().anyMatch(res -> !res.isSuccess())) {\n+            return AuthServiceBackendTestResult\n+                    .createFailure(\"Test failure\",\n+                            //testResults.stream().map(AuthServiceBackendTestResult::errors).flatMap(Collection::stream).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Nzg3OTk3OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackend.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoxMzo0M1rOH85qAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoxMzo0M1rOH85qAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMTI0OA==", "bodyText": "Can we remove this comment?", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r533621248", "createdAt": "2020-12-01T18:13:43Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackend.java", "diffHunk": "@@ -171,14 +175,42 @@ public AuthServiceBackendDTO prepareConfigUpdate(AuthServiceBackendDTO existingB\n     public AuthServiceBackendTestResult testConnection(@Nullable AuthServiceBackendDTO existingBackendConfig) {\n         final LDAPAuthServiceBackendConfig testConfig = buildTestConfig(existingBackendConfig);\n \n-        try (final LDAPConnection connection = ldapConnector.connect(testConfig.getLDAPConnectorConfig())) {\n+        final LDAPConnectorConfig config = testConfig.getLDAPConnectorConfig();\n+\n+        if (config.serverList().size() == 1) {\n+            return testSingleConnection(config, config.serverList().get(0));\n+        }\n+\n+        // Test each server separately, so we can see the result for each\n+        final List<AuthServiceBackendTestResult> testResults = config.serverList().stream().map(server -> testSingleConnection(config, server)).collect(Collectors.toList());\n+\n+        if (testResults.stream().anyMatch(res -> !res.isSuccess())) {\n+            return AuthServiceBackendTestResult\n+                    .createFailure(\"Test failure\",\n+                            //testResults.stream().map(AuthServiceBackendTestResult::errors).flatMap(Collection::stream).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Nzg4MTc4OnYy", "diffSide": "LEFT", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackendConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoxNDoxM1rOH85rRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoxNDoxM1rOH85rRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMTU3NQ==", "bodyText": "Same as for the AD config, how about checking if the list is not empty?", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r533621575", "createdAt": "2020-12-01T18:14:13Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackendConfig.java", "diffHunk": "@@ -84,9 +84,6 @@\n \n     @Override\n     public void validate(ValidationResult result) {\n-        if (servers().size() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Nzk0NzU4OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/security/DefaultX509TrustManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODozMDo1MFrOH86UFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMToxNTozM1rOH9WIgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMjAyMQ==", "bodyText": "Is it actually okay to just check if the certificate matches any host in our list? I was wondering if this can be an issue because we don't know which host is giving us the certificate. So a host could give us the certificate of another host from our list.", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r533632021", "createdAt": "2020-12-01T18:30:50Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/security/DefaultX509TrustManager.java", "diffHunk": "@@ -107,10 +119,12 @@ private void validateHostnames(X509Certificate[] x509Certificates, String s) thr\n     }\n \n     private boolean certificateMatchesHostname(X509Certificate x509Certificate) {\n-        try {\n-            return this.authorizer.verify(this.host, x509Certificate);\n-        } catch (IOException e) {\n-            return false;\n-        }\n+        return this.hosts.stream().anyMatch(host -> {\n+            try {\n+                return this.authorizer.verify(host, x509Certificate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAyNjg0NQ==", "bodyText": "That's difficult to implement. I've added a javadoc comment to point this out.\nHowever, in our scenario, if I trust to talk to any of the servers in the list, it shouldn't matter which certificate they provide.", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r534026845", "createdAt": "2020-12-02T09:42:47Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog2/security/DefaultX509TrustManager.java", "diffHunk": "@@ -107,10 +119,12 @@ private void validateHostnames(X509Certificate[] x509Certificates, String s) thr\n     }\n \n     private boolean certificateMatchesHostname(X509Certificate x509Certificate) {\n-        try {\n-            return this.authorizer.verify(this.host, x509Certificate);\n-        } catch (IOException e) {\n-            return false;\n-        }\n+        return this.hosts.stream().anyMatch(host -> {\n+            try {\n+                return this.authorizer.verify(host, x509Certificate);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMjAyMQ=="}, "originalCommit": {"oid": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NzgwOA==", "bodyText": "Thanks! \ud83d\udc4d", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r534087808", "createdAt": "2020-12-02T11:15:33Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/security/DefaultX509TrustManager.java", "diffHunk": "@@ -107,10 +119,12 @@ private void validateHostnames(X509Certificate[] x509Certificates, String s) thr\n     }\n \n     private boolean certificateMatchesHostname(X509Certificate x509Certificate) {\n-        try {\n-            return this.authorizer.verify(this.host, x509Certificate);\n-        } catch (IOException e) {\n-            return false;\n-        }\n+        return this.hosts.stream().anyMatch(host -> {\n+            try {\n+                return this.authorizer.verify(host, x509Certificate);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMjAyMQ=="}, "originalCommit": {"oid": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4361, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}