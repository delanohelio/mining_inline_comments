{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NjM3Njg3", "number": 9561, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDozOTo0MlrOE8Ps5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTozMzo1MFrOE8RREA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjA3MjcwOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/DebugOverlay.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDozOTo0MlrOH4QUEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDozOTo0MlrOH4QUEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc0OTU4NA==", "bodyText": "This import is not needed.", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r528749584", "createdAt": "2020-11-23T14:39:42Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/DebugOverlay.tsx", "diffHunk": "@@ -26,6 +26,8 @@ import BootstrapModalWrapper from 'components/bootstrap/BootstrapModalWrapper';\n import type { ViewStoreState } from 'views/stores/ViewStore';\n import type { SearchStoreState } from 'views/stores/SearchStore';\n \n+import View from '../logic/views/View';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjA3NDEzOnYy", "diffSide": "LEFT", "path": "graylog2-web-interface/src/views/components/DebugOverlay.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDozOTo1OFrOH4QU4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTowNjoxN1rOH4y67Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc0OTc5Mg==", "bodyText": "Why did you remove the prop types here? The import still exists.", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r528749792", "createdAt": "2020-11-23T14:39:58Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/DebugOverlay.tsx", "diffHunk": "@@ -49,11 +51,4 @@ const DebugOverlay = ({ currentView, searches, show, onClose }: Props) => (\n   </BootstrapModalWrapper>\n );\n \n-DebugOverlay.propTypes = {\n-  currentView: PropTypes.object.isRequired,\n-  onClose: PropTypes.func.isRequired,\n-  searches: PropTypes.object.isRequired,\n-  show: PropTypes.bool.isRequired,\n-};\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMxNjU4OQ==", "bodyText": "We cannot get these in sync with the types of prop (object vs. ViewStoreState), so I removed them, as we do not rely on them for this debug component. I removed the import though.", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r529316589", "createdAt": "2020-11-24T09:06:17Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/DebugOverlay.tsx", "diffHunk": "@@ -49,11 +51,4 @@ const DebugOverlay = ({ currentView, searches, show, onClose }: Props) => (\n   </BootstrapModalWrapper>\n );\n \n-DebugOverlay.propTypes = {\n-  currentView: PropTypes.object.isRequired,\n-  onClose: PropTypes.func.isRequired,\n-  searches: PropTypes.object.isRequired,\n-  show: PropTypes.bool.isRequired,\n-};\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc0OTc5Mg=="}, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjA3NTY3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/QueryBar.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDo0MDoxOFrOH4QV0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOToxMDo1MFrOH4zQKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc1MDAzNQ==", "bodyText": "What about viewMetadata: ViewMetadata?", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r528750035", "createdAt": "2020-11-23T14:40:18Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/QueryBar.tsx", "diffHunk": "@@ -55,7 +56,16 @@ const onCloseTab = (queryId, currentQuery, queries) => {\n   return promise.then(() => QueriesActions.remove(queryId)).then(() => ViewStatesActions.remove(queryId));\n };\n \n-const QueryBar = ({ children, queries, queryTitles, viewMetadata }) => {\n+type Props = {\n+  children?: React.ReactElement,\n+  queries: string[],\n+  queryTitles: Immutable.Map<string, string>,\n+  viewMetadata: {\n+    activeQuery: string,\n+  },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMyMjAyNA==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r529322024", "createdAt": "2020-11-24T09:10:50Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/QueryBar.tsx", "diffHunk": "@@ -55,7 +56,16 @@ const onCloseTab = (queryId, currentQuery, queries) => {\n   return promise.then(() => QueriesActions.remove(queryId)).then(() => ViewStatesActions.remove(queryId));\n };\n \n-const QueryBar = ({ children, queries, queryTitles, viewMetadata }) => {\n+type Props = {\n+  children?: React.ReactElement,\n+  queries: string[],\n+  queryTitles: Immutable.Map<string, string>,\n+  viewMetadata: {\n+    activeQuery: string,\n+  },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc1MDAzNQ=="}, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjEyNjM3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDo1MToyN1rOH4Q1YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOToxMjoyNVrOH4zX7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc1ODExMg==", "bodyText": "Looks like it makes sense to require the children here, but we should also update the PropTypes.", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r528758112", "createdAt": "2020-11-23T14:51:27Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.tsx", "diffHunk": "@@ -26,7 +26,7 @@ import PossiblyHighlight from './PossiblyHighlight';\n import Highlight from './Highlight';\n \n type Props = {\n-  children: ?React.Node,\n+  children: React.ReactElement,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMyNDAxNQ==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r529324015", "createdAt": "2020-11-24T09:12:25Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.tsx", "diffHunk": "@@ -26,7 +26,7 @@ import PossiblyHighlight from './PossiblyHighlight';\n import Highlight from './Highlight';\n \n type Props = {\n-  children: ?React.Node,\n+  children: React.ReactElement,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc1ODExMg=="}, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjEzMTQ1OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/messagelist/HighlightMessageInQuery.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDo1MjoyOFrOH4Q4ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOToxNjoxNVrOH4zrdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc1ODkyMg==", "bodyText": "We should add default props.", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r528758922", "createdAt": "2020-11-23T14:52:28Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/messagelist/HighlightMessageInQuery.tsx", "diffHunk": "@@ -23,11 +23,14 @@ import type { Location } from 'routing/withLocation';\n import HighlightMessageContext from '../contexts/HighlightMessageContext';\n \n type Props = {\n-  children: ?React.Node,\n+  children: React.ReactElement,\n   location: Location,\n+  query?: any,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMyOTAxMg==", "bodyText": "\u2705  (I added it to support a test, but the prop is not used in that component it all, so I moved it to the test.)", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r529329012", "createdAt": "2020-11-24T09:16:15Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/messagelist/HighlightMessageInQuery.tsx", "diffHunk": "@@ -23,11 +23,14 @@ import type { Location } from 'routing/withLocation';\n import HighlightMessageContext from '../contexts/HighlightMessageContext';\n \n type Props = {\n-  children: ?React.Node,\n+  children: React.ReactElement,\n   location: Location,\n+  query?: any,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc1ODkyMg=="}, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjE0NDY0OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/messagelist/MessageField.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDo1NToxMVrOH4RAuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOToyOTowN1rOH40qTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc2MTAxOQ==", "bodyText": "Since a message has also other properties is .exact the best solution?", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r528761019", "createdAt": "2020-11-23T14:55:11Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/messagelist/MessageField.tsx", "diffHunk": "@@ -91,7 +91,11 @@ MessageField.propTypes = {\n   currentView: CustomPropTypes.CurrentView.isRequired,\n   fieldName: PropTypes.string.isRequired,\n   fieldType: CustomPropTypes.FieldType.isRequired,\n-  message: PropTypes.object.isRequired,\n+  message: PropTypes.exact({\n+    id: PropTypes.string.isRequired,\n+    index: PropTypes.string.isRequired,\n+    fields: PropTypes.object.isRequired,\n+  }).isRequired,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM0NTEwMA==", "bodyText": "We need to use exact in most cases as TS's objects are always exact. I completed the definition and added a Message custom prop type that we can reuse.", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r529345100", "createdAt": "2020-11-24T09:29:07Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/messagelist/MessageField.tsx", "diffHunk": "@@ -91,7 +91,11 @@ MessageField.propTypes = {\n   currentView: CustomPropTypes.CurrentView.isRequired,\n   fieldName: PropTypes.string.isRequired,\n   fieldType: CustomPropTypes.FieldType.isRequired,\n-  message: PropTypes.object.isRequired,\n+  message: PropTypes.exact({\n+    id: PropTypes.string.isRequired,\n+    index: PropTypes.string.isRequired,\n+    fields: PropTypes.object.isRequired,\n+  }).isRequired,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc2MTAxOQ=="}, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjIzNDI1OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/widgets/FieldSelect.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNToxMzo0NFrOH4R4Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOToxNzo0NlrOH4zy2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3NTE4Mg==", "bodyText": "Looks like these two need some default props.", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r528775182", "createdAt": "2020-11-23T15:13:44Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/widgets/FieldSelect.tsx", "diffHunk": "@@ -30,9 +30,11 @@ const ValueComponent = styled.span`\n `;\n \n type Props = {\n-  onChange: ({ label: string, value: string }[]) => void,\n+  onChange: (newFields: { label: string, value: string }[]) => void,\n   fields: Immutable.List<FieldTypeMapping>,\n-  value: ?{field: string}[],\n+  value: { field: string }[] | undefined | null,\n+  allowOptionCreation?: boolean,\n+  inputId?: string,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMzMDkwNA==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r529330904", "createdAt": "2020-11-24T09:17:46Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/widgets/FieldSelect.tsx", "diffHunk": "@@ -30,9 +30,11 @@ const ValueComponent = styled.span`\n `;\n \n type Props = {\n-  onChange: ({ label: string, value: string }[]) => void,\n+  onChange: (newFields: { label: string, value: string }[]) => void,\n   fields: Immutable.List<FieldTypeMapping>,\n-  value: ?{field: string}[],\n+  value: { field: string }[] | undefined | null,\n+  allowOptionCreation?: boolean,\n+  inputId?: string,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3NTE4Mg=="}, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjI2ODgzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/pages/ShowDashboardInBigDisplayMode.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNToyMToxN1rOH4SN4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOToxODoxMVrOH4z0xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4MDc3MA==", "bodyText": "This import can be removed", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r528780770", "createdAt": "2020-11-23T15:21:17Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/pages/ShowDashboardInBigDisplayMode.tsx", "diffHunk": "@@ -28,24 +28,21 @@ import View from 'views/logic/views/View';\n import { RefreshActions } from 'views/stores/RefreshStore';\n import type { UntypedBigDisplayModeQuery } from 'views/components/dashboard/BigDisplayModeConfiguration';\n import withParams from 'routing/withParams';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMzMTM5OQ==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r529331399", "createdAt": "2020-11-24T09:18:11Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/pages/ShowDashboardInBigDisplayMode.tsx", "diffHunk": "@@ -28,24 +28,21 @@ import View from 'views/logic/views/View';\n import { RefreshActions } from 'views/stores/RefreshStore';\n import type { UntypedBigDisplayModeQuery } from 'views/components/dashboard/BigDisplayModeConfiguration';\n import withParams from 'routing/withParams';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4MDc3MA=="}, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjI5OTAzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/sidebar/Sidebar.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNToyNzo0MlrOH4Sg4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOToyMzoxNlrOH40NQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4NTYzNQ==", "bodyText": "These props have no corresponding defaultProps declaration.", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r528785635", "createdAt": "2020-11-23T15:27:42Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/sidebar/Sidebar.tsx", "diffHunk": "@@ -23,22 +23,22 @@ import styled, { css } from 'styled-components';\n import type { StyledComponent } from 'styled-components';\n \n import type { ThemeInterface } from 'theme';\n-import { type ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n+import { ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n import QueryResult from 'views/logic/QueryResult';\n-import SearchPageLayoutContext, { type SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n+import SearchPageLayoutContext, { SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n \n import SidebarNavigation from './SidebarNavigation';\n import ContentColumn from './ContentColumn';\n-import sidebarSections, { type SidebarSection } from './sidebarSections';\n+import sidebarSections, { SidebarSection } from './sidebarSections';\n \n import CustomPropTypes from '../CustomPropTypes';\n \n type Props = {\n-  children: React.Element<any>,\n+  children: React.ReactNode,\n   queryId: string,\n   results: QueryResult,\n-  searchPageLayout: ?SearchPageLayout,\n-  sections: Array<SidebarSection>,\n+  searchPageLayout?: SearchPageLayout,\n+  sections?: Array<SidebarSection>,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMzNzY2NQ==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r529337665", "createdAt": "2020-11-24T09:23:16Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/sidebar/Sidebar.tsx", "diffHunk": "@@ -23,22 +23,22 @@ import styled, { css } from 'styled-components';\n import type { StyledComponent } from 'styled-components';\n \n import type { ThemeInterface } from 'theme';\n-import { type ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n+import { ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n import QueryResult from 'views/logic/QueryResult';\n-import SearchPageLayoutContext, { type SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n+import SearchPageLayoutContext, { SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n \n import SidebarNavigation from './SidebarNavigation';\n import ContentColumn from './ContentColumn';\n-import sidebarSections, { type SidebarSection } from './sidebarSections';\n+import sidebarSections, { SidebarSection } from './sidebarSections';\n \n import CustomPropTypes from '../CustomPropTypes';\n \n type Props = {\n-  children: React.Element<any>,\n+  children: React.ReactNode,\n   queryId: string,\n   results: QueryResult,\n-  searchPageLayout: ?SearchPageLayout,\n-  sections: Array<SidebarSection>,\n+  searchPageLayout?: SearchPageLayout,\n+  sections?: Array<SidebarSection>,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4NTYzNQ=="}, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjMyOTEyOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/visualizations/worldmap/__tests__/WorldMapVisualization.test.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTozMzo1MFrOH4Sztg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOToyMzo0NFrOH40Pkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc5MDQ1NA==", "bodyText": "This // $FlowFixMe: can be removed", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r528790454", "createdAt": "2020-11-23T15:33:50Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/visualizations/worldmap/__tests__/WorldMapVisualization.test.tsx", "diffHunk": "@@ -32,7 +34,7 @@ jest.mock('../MapVisualization', () => 'map-visualization');\n describe('WorldMapVisualization', () => {\n   // $FlowFixMe: type is always defined", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMzODI1OA==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/9561#discussion_r529338258", "createdAt": "2020-11-24T09:23:44Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/visualizations/worldmap/__tests__/WorldMapVisualization.test.tsx", "diffHunk": "@@ -32,7 +34,7 @@ jest.mock('../MapVisualization', () => 'map-visualization');\n describe('WorldMapVisualization', () => {\n   // $FlowFixMe: type is always defined", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc5MDQ1NA=="}, "originalCommit": {"oid": "b14fa23d79d4b0db2476b9cac1a7df8c9768f421"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4387, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}