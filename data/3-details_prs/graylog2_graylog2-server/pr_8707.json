{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNTMyNzg5", "number": 8707, "title": "Migrate dashboard and stream roles to grants", "bodyText": "This migrates the currently UI configurable roles\nfor dashboards and streams into grants.\nIf the permissions of a role are empty after the migration, it gets removed\ncompletely.\nIf entities has permissions other than read and edit, we don't migrate\nit, so we don't end up having permissions on two different places for a\nsingle entity.\nFixes #8594\n/jenkins-pr-deps Graylog2/graylog-plugin-enterprise#1569", "createdAt": "2020-08-05T17:20:29Z", "url": "https://github.com/Graylog2/graylog2-server/pull/8707", "merged": true, "mergeCommit": {"oid": "ccea8cbe2ee9c4901eee442fb610f4ab377deffd"}, "closed": true, "closedAt": "2020-08-25T09:37:00Z", "author": {"login": "mpfz0r"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9kLneABqjM2MzkzNzU1MjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCT6NyAFqTQ3NDMwODk4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bec95f2b605333e498bcd0e468734ca0c907de75", "author": {"user": {"login": "mpfz0r", "name": "Marco Pfatschbacher"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/bec95f2b605333e498bcd0e468734ca0c907de75", "committedDate": "2020-08-05T17:19:26Z", "message": "Migrate roles to grants"}, "afterCommit": {"oid": "888e61d5e6d0b69fd3a0d4b62107c166a94b6551", "author": {"user": {"login": "mpfz0r", "name": "Marco Pfatschbacher"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/888e61d5e6d0b69fd3a0d4b62107c166a94b6551", "committedDate": "2020-08-10T15:35:09Z", "message": "Migrate streams and dashboards roles to grants\n\nThis migrates the currently UI configurable roles\nfor dashboards and streams into grants.\n\nIf the permissions of a role are empty after the migration, it gets removed\ncompletely.\n\nIf entities has permissions other than read and edit, we don't migrate\nit, so we don't end up having permissions on two different places for a\nsingle entity."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MzU0ODE2", "url": "https://github.com/Graylog2/graylog2-server/pull/8707#pullrequestreview-467354816", "createdAt": "2020-08-14T07:13:38Z", "commit": {"oid": "888e61d5e6d0b69fd3a0d4b62107c166a94b6551"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNzoxNTo0N1rOHAqFWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTo0NDo0M1rOHAuelg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1MTU0Nw==", "bodyText": "We can join the declaration and assignment of these two.", "url": "https://github.com/Graylog2/graylog2-server/pull/8707#discussion_r470451547", "createdAt": "2020-08-14T07:15:47Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/system/stats/ClusterStatsService.java", "diffHunk": "@@ -115,10 +114,8 @@ public MongoStats mongoStats() {\n     public LdapStats ldapStats() {\n         int numberOfRoles = 0;\n         LdapSettings ldapSettings = null;\n-        try {\n-            numberOfRoles = roleService.loadAll().size();\n-            ldapSettings = ldapSettingsService.load();\n-        } catch (NotFoundException ignored) {}\n+        numberOfRoles = roleService.loadAll().size();\n+        ldapSettings = ldapSettingsService.load();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "888e61d5e6d0b69fd3a0d4b62107c166a94b6551"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUyMzU0Mg==", "bodyText": "Not really an issue, more like a FYI: you can reduce the setup and save some lines when using JUnit 5 tests with the new extensions:\ndiff --git graylog2-server/src/test/java/org/graylog2/migrations/V20200803120800_MigrateRolesToGrantsTest.java graylog2-server/src/test/java/org/graylog2/migrations/V20200803120800_MigrateRolesToGrantsTest.java\nindex 20bfb6ee20..fca0388ac0 100644\n--- graylog2-server/src/test/java/org/graylog2/migrations/V20200803120800_MigrateRolesToGrantsTest.java\n+++ graylog2-server/src/test/java/org/graylog2/migrations/V20200803120800_MigrateRolesToGrantsTest.java\n@@ -16,7 +16,6 @@\n  */\n package org.graylog2.migrations;\n \n-import com.fasterxml.jackson.databind.ObjectMapper;\n import com.google.common.collect.ImmutableSet;\n import com.google.common.collect.Iterables;\n import com.google.common.collect.Sets;\n@@ -31,8 +30,11 @@ import org.graylog.security.Capability;\n import org.graylog.security.DBGrantService;\n import org.graylog.security.GrantDTO;\n import org.graylog.security.permissions.GRNPermission;\n+import org.graylog.testing.GRNExtension;\n+import org.graylog.testing.mongodb.MongoDBExtension;\n import org.graylog.testing.mongodb.MongoDBFixtures;\n-import org.graylog.testing.mongodb.MongoDBInstance;\n+import org.graylog.testing.mongodb.MongoDBTestService;\n+import org.graylog.testing.mongodb.MongoJackExtension;\n import org.graylog2.Configuration;\n import org.graylog2.bindings.providers.MongoJackObjectMapperProvider;\n import org.graylog2.database.MongoConnection;\n@@ -40,7 +42,6 @@ import org.graylog2.database.NotFoundException;\n import org.graylog2.database.PersistedServiceImpl;\n import org.graylog2.plugin.database.ValidationException;\n import org.graylog2.plugin.database.users.User;\n-import org.graylog2.shared.bindings.providers.ObjectMapperProvider;\n import org.graylog2.shared.security.Permissions;\n import org.graylog2.shared.security.RestPermissions;\n import org.graylog2.shared.users.Role;\n@@ -49,12 +50,11 @@ import org.graylog2.users.RoleService;\n import org.graylog2.users.RoleServiceImpl;\n import org.graylog2.users.UserImpl;\n import org.graylog2.users.UserServiceImplTest;\n-import org.junit.Before;\n-import org.junit.Rule;\n-import org.junit.Test;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.Mock;\n-import org.mockito.junit.MockitoJUnit;\n-import org.mockito.junit.MockitoRule;\n+import org.mockito.junit.jupiter.MockitoExtension;\n \n import javax.annotation.Nullable;\n import javax.validation.Validator;\n@@ -70,34 +70,32 @@ import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.Mockito.when;\n \n+@ExtendWith(MongoDBExtension.class)\n+@ExtendWith(MongoJackExtension.class)\n+@ExtendWith(MockitoExtension.class)\n+@ExtendWith(GRNExtension.class)\n+@MongoDBFixtures(\"V20200803120800_MigrateRolesToGrantsTest.json\")\n public class V20200803120800_MigrateRolesToGrantsTest {\n     private V20200803120800_MigrateRolesToGrants migration;\n     private RoleService roleService;\n     private DBGrantService dbGrantService;\n-    private ObjectMapper objectMapper;\n-\n-    @Rule\n-    public final MockitoRule mockitoRule = MockitoJUnit.rule();\n-\n-    @Rule\n-    public final MongoDBInstance mongodb = MongoDBInstance.createForClass();\n \n     @Mock\n     private Permissions permissions;\n-\n     @Mock\n     private Validator validator;\n+\n     private GRNRegistry grnRegistry;\n     private UserService userService;\n \n-    @Before\n-    public void setUp() {\n-        objectMapper = new ObjectMapperProvider().get();\n-        final MongoJackObjectMapperProvider mongoJackObjectMapperProvider = new MongoJackObjectMapperProvider(objectMapper);\n+    @BeforeEach\n+    public void setUp(MongoDBTestService mongodb,\n+                      MongoJackObjectMapperProvider mongoJackObjectMapperProvider,\n+                      GRNRegistry grnRegistry) {\n         when(permissions.readerBasePermissions()).thenReturn(ImmutableSet.of());\n         when(validator.validate(any())).thenReturn(ImmutableSet.of());\n \n-        grnRegistry = GRNRegistry.createWithBuiltinTypes();\n+        this.grnRegistry = grnRegistry;\n \n         roleService = new RoleServiceImpl(mongodb.mongoConnection(), mongoJackObjectMapperProvider, permissions, validator);\n \n@@ -108,7 +106,6 @@ public class V20200803120800_MigrateRolesToGrantsTest {\n     }\n \n     @Test\n-    @MongoDBFixtures(\"V20200803120800_MigrateRolesToGrantsTest.json\")\n     public void migrateSimpleRole() throws NotFoundException {\n \n         final User testuser1 = userService.load(\"testuser1\");\n@@ -141,7 +138,6 @@ public class V20200803120800_MigrateRolesToGrantsTest {\n     }\n \n     @Test\n-    @MongoDBFixtures(\"V20200803120800_MigrateRolesToGrantsTest.json\")\n     public void nonMigratableRole() throws NotFoundException {\n \n         final User testuser3 = userService.load(\"testuser3\");\n@@ -161,7 +157,6 @@ public class V20200803120800_MigrateRolesToGrantsTest {\n     }\n \n     @Test\n-    @MongoDBFixtures(\"V20200803120800_MigrateRolesToGrantsTest.json\")\n     public void partlyMigratableRole() throws NotFoundException {\n \n         final User testuser4 = userService.load(\"testuser3\");", "url": "https://github.com/Graylog2/graylog2-server/pull/8707#discussion_r470523542", "createdAt": "2020-08-14T09:44:43Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/test/java/org/graylog2/migrations/V20200803120800_MigrateRolesToGrantsTest.java", "diffHunk": "@@ -0,0 +1,309 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog2.migrations;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.Iterables;\n+import com.google.common.collect.Sets;\n+import com.mongodb.BasicDBObject;\n+import com.mongodb.BasicDBObjectBuilder;\n+import com.mongodb.DBObject;\n+import org.apache.shiro.authz.Permission;\n+import org.apache.shiro.authz.permission.WildcardPermission;\n+import org.bson.types.ObjectId;\n+import org.graylog.grn.GRNRegistry;\n+import org.graylog.security.Capability;\n+import org.graylog.security.DBGrantService;\n+import org.graylog.security.GrantDTO;\n+import org.graylog.security.permissions.GRNPermission;\n+import org.graylog.testing.mongodb.MongoDBFixtures;\n+import org.graylog.testing.mongodb.MongoDBInstance;\n+import org.graylog2.Configuration;\n+import org.graylog2.bindings.providers.MongoJackObjectMapperProvider;\n+import org.graylog2.database.MongoConnection;\n+import org.graylog2.database.NotFoundException;\n+import org.graylog2.database.PersistedServiceImpl;\n+import org.graylog2.plugin.database.ValidationException;\n+import org.graylog2.plugin.database.users.User;\n+import org.graylog2.shared.bindings.providers.ObjectMapperProvider;\n+import org.graylog2.shared.security.Permissions;\n+import org.graylog2.shared.security.RestPermissions;\n+import org.graylog2.shared.users.Role;\n+import org.graylog2.shared.users.UserService;\n+import org.graylog2.users.RoleService;\n+import org.graylog2.users.RoleServiceImpl;\n+import org.graylog2.users.UserImpl;\n+import org.graylog2.users.UserServiceImplTest;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoRule;\n+\n+import javax.annotation.Nullable;\n+import javax.validation.Validator;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.when;\n+\n+public class V20200803120800_MigrateRolesToGrantsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "888e61d5e6d0b69fd3a0d4b62107c166a94b6551"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTE3MzU3", "url": "https://github.com/Graylog2/graylog2-server/pull/8707#pullrequestreview-467517357", "createdAt": "2020-08-14T11:55:44Z", "commit": {"oid": "888e61d5e6d0b69fd3a0d4b62107c166a94b6551"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMTo1NTo0NFrOHAx57g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMTo1NjoyOVrOHAx7Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU3OTY5NA==", "bodyText": "Since we have a String now, I think we should check that the userName is not null and not empty.", "url": "https://github.com/Graylog2/graylog2-server/pull/8707#discussion_r470579694", "createdAt": "2020-08-14T11:55:44Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/DBGrantService.java", "diffHunk": "@@ -89,10 +89,8 @@ public DBGrantService(MongoConnection mongoConnection,\n                 DBQuery.in(GrantDTO.FIELD_GRANTEE, grantees))).toArray();\n     }\n \n-    public GrantDTO create(GrantDTO grantDTO, @Nullable User currentUser) {\n+    public GrantDTO create(GrantDTO grantDTO, String userName) {\n         final ZonedDateTime now = ZonedDateTime.now(ZoneOffset.UTC);\n-        final String userName = requireNonNull(currentUser, \"currentUser cannot be null\").getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "888e61d5e6d0b69fd3a0d4b62107c166a94b6551"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4MDAwNg==", "bodyText": "How about adding a test for this? \ud83d\ude42", "url": "https://github.com/Graylog2/graylog2-server/pull/8707#discussion_r470580006", "createdAt": "2020-08-14T11:56:29Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/DBGrantService.java", "diffHunk": "@@ -89,10 +89,8 @@ public DBGrantService(MongoConnection mongoConnection,\n                 DBQuery.in(GrantDTO.FIELD_GRANTEE, grantees))).toArray();\n     }\n \n-    public GrantDTO create(GrantDTO grantDTO, @Nullable User currentUser) {\n+    public GrantDTO create(GrantDTO grantDTO, String userName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "888e61d5e6d0b69fd3a0d4b62107c166a94b6551"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "888e61d5e6d0b69fd3a0d4b62107c166a94b6551", "author": {"user": {"login": "mpfz0r", "name": "Marco Pfatschbacher"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/888e61d5e6d0b69fd3a0d4b62107c166a94b6551", "committedDate": "2020-08-10T15:35:09Z", "message": "Migrate streams and dashboards roles to grants\n\nThis migrates the currently UI configurable roles\nfor dashboards and streams into grants.\n\nIf the permissions of a role are empty after the migration, it gets removed\ncompletely.\n\nIf entities has permissions other than read and edit, we don't migrate\nit, so we don't end up having permissions on two different places for a\nsingle entity."}, "afterCommit": {"oid": "58f5fc9482bbc34dbb91387dc8c3fcb55f0cb150", "author": {"user": {"login": "mpfz0r", "name": "Marco Pfatschbacher"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/58f5fc9482bbc34dbb91387dc8c3fcb55f0cb150", "committedDate": "2020-08-18T10:44:55Z", "message": "Apply review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38f2a88646e847c551713d9c2b3c8b432b4a0f8f", "author": {"user": {"login": "mpfz0r", "name": "Marco Pfatschbacher"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/38f2a88646e847c551713d9c2b3c8b432b4a0f8f", "committedDate": "2020-08-21T12:25:46Z", "message": "Remove unneeded NotFoundException from RoleService.loadAll()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "966456d8d6aa422b250c079e103dc2edb7798a6e", "author": {"user": {"login": "mpfz0r", "name": "Marco Pfatschbacher"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/966456d8d6aa422b250c079e103dc2edb7798a6e", "committedDate": "2020-08-21T12:25:46Z", "message": "Migrate streams and dashboards roles to grants\n\nThis migrates the currently UI configurable roles\nfor dashboards and streams into grants.\n\nIf the permissions of a role are empty after the migration, it gets removed\ncompletely.\n\nIf entities has permissions other than read and edit, we don't migrate\nit, so we don't end up having permissions on two different places for a\nsingle entity."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14277d9fe61cfb932fed8d4f879391ec7493ae7a", "author": {"user": {"login": "mpfz0r", "name": "Marco Pfatschbacher"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/14277d9fe61cfb932fed8d4f879391ec7493ae7a", "committedDate": "2020-08-21T12:25:47Z", "message": "Apply review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58f5fc9482bbc34dbb91387dc8c3fcb55f0cb150", "author": {"user": {"login": "mpfz0r", "name": "Marco Pfatschbacher"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/58f5fc9482bbc34dbb91387dc8c3fcb55f0cb150", "committedDate": "2020-08-18T10:44:55Z", "message": "Apply review comments"}, "afterCommit": {"oid": "14277d9fe61cfb932fed8d4f879391ec7493ae7a", "author": {"user": {"login": "mpfz0r", "name": "Marco Pfatschbacher"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/14277d9fe61cfb932fed8d4f879391ec7493ae7a", "committedDate": "2020-08-21T12:25:47Z", "message": "Apply review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNTQyNjI1", "url": "https://github.com/Graylog2/graylog2-server/pull/8707#pullrequestreview-473542625", "createdAt": "2020-08-24T14:28:01Z", "commit": {"oid": "14277d9fe61cfb932fed8d4f879391ec7493ae7a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MzA4OTg0", "url": "https://github.com/Graylog2/graylog2-server/pull/8707#pullrequestreview-474308984", "createdAt": "2020-08-25T09:36:52Z", "commit": {"oid": "14277d9fe61cfb932fed8d4f879391ec7493ae7a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2929, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}