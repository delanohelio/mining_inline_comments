{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NTE2OTYz", "number": 8291, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0Mzo1NlrOEDaDwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzowNjoyOFrOED3k3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDA4MTI4OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0Mzo1NlrOGgaCbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0Mzo1NlrOGgaCbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNDIyMA==", "bodyText": "Instead of extracting a function for the update step, it would be more helpful to extract a predicate that checks if the new font size should be set, something like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                _updateFontSize(setFontSize, fontSize, newFontSize);\n          \n          \n            \n                if (newFontSize !== fontSize && isValidFontSize(newFontSize)) {\n          \n          \n            \n                  setFontSize(newFontSize);\n          \n          \n            \n                }", "url": "https://github.com/Graylog2/graylog2-server/pull/8291#discussion_r436634220", "createdAt": "2020-06-08T11:43:56Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "diffHunk": "@@ -16,45 +16,51 @@ type Props = {\n };\n \n const _multiplierForElement = (element, targetWidth, targetHeight) => {\n+  const childSizeRatio = 0.8; // Propotion of the child size in relation to the container\n   const contentWidth = element.offsetWidth;\n   const contentHeight = element.offsetHeight;\n \n-  const widthMultiplier = (targetWidth * 0.8) / contentWidth;\n-  const heightMultiplier = (targetHeight * 0.8) / contentHeight;\n+  const widthMultiplier = (targetWidth * childSizeRatio) / contentWidth;\n+  const heightMultiplier = (targetHeight * childSizeRatio) / contentHeight;\n   return Math.min(widthMultiplier, heightMultiplier);\n };\n \n-const AutoFontSizer = ({ children, target, height, width }: Props) => {\n+const _updateFontSize = (setFontSize, currentSize, newSize) => {\n+  if (currentSize !== newSize && newSize !== 0 && Number.isFinite(newSize)) {\n+    setFontSize(newSize);\n+  }\n+};\n+\n+const useAutoFontSize = (target, _container, height, width) => {\n+  // This hook will update the font size based on the difference between the dimensions of the container and its child.\n+  // The font size is being recalculated, until the mentioned difference is within the tolerance.\n+  const tolerance = 0.05;\n   const [fontSize, setFontSize] = useState(20);\n-  const _container = useRef<?HTMLElement>();\n \n   useEffect(() => {\n     const container = target ? { current: { children: [target] } } : _container;\n-    if (!container.current) {\n-      return;\n-    }\n-\n-    const { children: containerChildren } = container.current;\n+    const containerChildren = container?.current?.children;\n \n-    if (containerChildren.length <= 0) {\n+    if (!containerChildren || containerChildren.length <= 0) {\n       return;\n     }\n \n     const contentElement = containerChildren[0];\n     const multiplier = _multiplierForElement(contentElement, width, height);\n-\n-    if (Math.abs(1 - multiplier) <= 0.01) {\n+    if (Math.abs(1 - multiplier) <= tolerance) {\n       return;\n     }\n \n-    const newFontsize = Math.floor(fontSize * multiplier);\n-\n-    if (fontSize !== newFontsize && newFontsize !== 0 && Number.isFinite(newFontsize)) {\n-      // eslint-disable-next-line react/no-did-update-set-state\n-      setFontSize(newFontsize);\n-    }\n+    const newFontSize = Math.floor(fontSize * multiplier);\n+    _updateFontSize(setFontSize, fontSize, newFontSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d621ab592c12832f57a79d608297404fb7b08d79"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDA4Mzg2OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0NDo1NFrOGgaD_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0NDo1NFrOGgaD_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNDYyMA==", "bodyText": "This constant could be pulled out of the function scope and into the module scope. Also: Propotion -> Proportion", "url": "https://github.com/Graylog2/graylog2-server/pull/8291#discussion_r436634620", "createdAt": "2020-06-08T11:44:54Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "diffHunk": "@@ -16,45 +16,51 @@ type Props = {\n };\n \n const _multiplierForElement = (element, targetWidth, targetHeight) => {\n+  const childSizeRatio = 0.8; // Propotion of the child size in relation to the container", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d621ab592c12832f57a79d608297404fb7b08d79"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDA4NDkwOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0NToxM1rOGgaEjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0NToxM1rOGgaEjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNDc2Ng==", "bodyText": "This constant could be pulled out of the function scope and into the module scope.", "url": "https://github.com/Graylog2/graylog2-server/pull/8291#discussion_r436634766", "createdAt": "2020-06-08T11:45:13Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "diffHunk": "@@ -16,45 +16,51 @@ type Props = {\n };\n \n const _multiplierForElement = (element, targetWidth, targetHeight) => {\n+  const childSizeRatio = 0.8; // Propotion of the child size in relation to the container\n   const contentWidth = element.offsetWidth;\n   const contentHeight = element.offsetHeight;\n \n-  const widthMultiplier = (targetWidth * 0.8) / contentWidth;\n-  const heightMultiplier = (targetHeight * 0.8) / contentHeight;\n+  const widthMultiplier = (targetWidth * childSizeRatio) / contentWidth;\n+  const heightMultiplier = (targetHeight * childSizeRatio) / contentHeight;\n   return Math.min(widthMultiplier, heightMultiplier);\n };\n \n-const AutoFontSizer = ({ children, target, height, width }: Props) => {\n+const _updateFontSize = (setFontSize, currentSize, newSize) => {\n+  if (currentSize !== newSize && newSize !== 0 && Number.isFinite(newSize)) {\n+    setFontSize(newSize);\n+  }\n+};\n+\n+const useAutoFontSize = (target, _container, height, width) => {\n+  // This hook will update the font size based on the difference between the dimensions of the container and its child.\n+  // The font size is being recalculated, until the mentioned difference is within the tolerance.\n+  const tolerance = 0.05;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d621ab592c12832f57a79d608297404fb7b08d79"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDA4NjM3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0NTo0MlrOGgaFcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0NTo0MlrOGgaFcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNDk5Mw==", "bodyText": "We should turn this into a JSDoc comment.", "url": "https://github.com/Graylog2/graylog2-server/pull/8291#discussion_r436634993", "createdAt": "2020-06-08T11:45:42Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "diffHunk": "@@ -16,45 +16,51 @@ type Props = {\n };\n \n const _multiplierForElement = (element, targetWidth, targetHeight) => {\n+  const childSizeRatio = 0.8; // Propotion of the child size in relation to the container\n   const contentWidth = element.offsetWidth;\n   const contentHeight = element.offsetHeight;\n \n-  const widthMultiplier = (targetWidth * 0.8) / contentWidth;\n-  const heightMultiplier = (targetHeight * 0.8) / contentHeight;\n+  const widthMultiplier = (targetWidth * childSizeRatio) / contentWidth;\n+  const heightMultiplier = (targetHeight * childSizeRatio) / contentHeight;\n   return Math.min(widthMultiplier, heightMultiplier);\n };\n \n-const AutoFontSizer = ({ children, target, height, width }: Props) => {\n+const _updateFontSize = (setFontSize, currentSize, newSize) => {\n+  if (currentSize !== newSize && newSize !== 0 && Number.isFinite(newSize)) {\n+    setFontSize(newSize);\n+  }\n+};\n+\n+const useAutoFontSize = (target, _container, height, width) => {\n+  // This hook will update the font size based on the difference between the dimensions of the container and its child.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d621ab592c12832f57a79d608297404fb7b08d79"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDkwMTU0OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzowMzo0OVrOGhIoxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzowMzo0OVrOGhIoxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM5NzcwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * The calculation is based the difference between the dimensions of the container and its child.\n          \n          \n            \n             * The calculation is based on the ratio of the current dimensions of the child and the dimensions of its container.", "url": "https://github.com/Graylog2/graylog2-server/pull/8291#discussion_r437397700", "createdAt": "2020-06-09T13:03:49Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "diffHunk": "@@ -2,6 +2,15 @@\n import React, { type Element, type ElementRef, useEffect, useRef, useState } from 'react';\n import styled, { type StyledComponent } from 'styled-components';\n \n+/**\n+ * This component will calculate the largest possible font size for the provided child.\n+ * The calculation is based the difference between the dimensions of the container and its child.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e3cabba30ccab88741bd49b9a7a7458cc8f5a1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDkxNzQxOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzowNjoyOFrOGhIyNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzowNjoyOFrOGhIyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwMDExNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * The font size is being recalculated, until the mentioned difference is within the defined tolerance.\n          \n          \n            \n             * The font size is being multiplied by this ratio, unless it has a difference to 1 that is smaller than the defined tolerance.", "url": "https://github.com/Graylog2/graylog2-server/pull/8291#discussion_r437400116", "createdAt": "2020-06-09T13:06:28Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/visualizations/number/AutoFontSizer.jsx", "diffHunk": "@@ -2,6 +2,15 @@\n import React, { type Element, type ElementRef, useEffect, useRef, useState } from 'react';\n import styled, { type StyledComponent } from 'styled-components';\n \n+/**\n+ * This component will calculate the largest possible font size for the provided child.\n+ * The calculation is based the difference between the dimensions of the container and its child.\n+ * The font size is being recalculated, until the mentioned difference is within the defined tolerance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e3cabba30ccab88741bd49b9a7a7458cc8f5a1"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4246, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}