{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3Njk3MzI5", "number": 7821, "title": "Migrating InputStatusService", "bodyText": "Migrating the InputStatusService from the enterprise plugins repo to the main repo.\nThe InputStatusService was created to support Inputs that need to persist state for the duration of their lifecycle.  It was created to allow the Okta input to checkpoint on seen messages in order to avoid duplicate message processing when the input is restarted.\nOriginal PR: Graylog2/graylog-plugin-enterprise-integrations#136\nDescription\nMigrating the InputStatusService from the enterprise plugins repo to the main repo.\nThe InputStatusService was created to support Inputs that need to persist state for the duration of their lifecycle.  It stores Input state in the new input_status MongoDB collection. It was created to allow the Okta input to checkpoint on seen messages in order to avoid duplicate message processing when the input is restarted.\nMotivation and Context\nMigration to the main graylog2-server repo is needed to allow non-enterprise Inputs to use this service\nHow Has This Been Tested?\nThis feature has been tested locally by multiple Graylog developers.\nTypes of changes\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.", "createdAt": "2020-04-02T16:53:15Z", "url": "https://github.com/Graylog2/graylog2-server/pull/7821", "merged": true, "mergeCommit": {"oid": "a4ba23366bfb34973f1ed5883dc16922dc195967"}, "closed": true, "closedAt": "2020-04-06T14:37:04Z", "author": {"login": "waab76"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTvF2JAH2gAyMzk3Njk3MzI5Ojk4NTg0MTE1MGJlMjAyZmYyOWNlNDYwMzNmZTljOTYwZTI3OWNjZjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcU_r5YAFqTM4ODMxMzc0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "985841150be202ff29ce46033fe9c960e279ccf4", "author": {"user": {"login": "waab76", "name": "Rob Curtis"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/985841150be202ff29ce46033fe9c960e279ccf4", "committedDate": "2020-04-02T16:42:34Z", "message": "Migrating the InputStatusService from the enterprise plugins repo to the main repo.\n\nThe InputStatusService was created to support Inputs that need to persist state for the duration of their lifecycle.  It was created to allow the Okta input to checkpoint on seen messages in order to avoid duplicate message processing when the input is restarted.\n\nOriginal PR: https://github.com/Graylog2/graylog-plugin-enterprise-integrations/issues/136"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MDY2NDA0", "url": "https://github.com/Graylog2/graylog2-server/pull/7821#pullrequestreview-387066404", "createdAt": "2020-04-03T08:43:53Z", "commit": {"oid": "985841150be202ff29ce46033fe9c960e279ccf4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODo0Mzo1M1rOGALoAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODo0ODoxMVrOGAL2zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg0MzY1MQ==", "bodyText": "I think we should bind this service in a singleton scope (bind(InputStatusService.class).asEagerSingleton() and add @Singleton annotation to this class for documentation purposes) in the guice bindings to avoid multiple instances of this class. The problem is that every instance would register with the EventBus and since we don't have lifecycle support for this object where we could call unregister on shutdown, we would basically leak references into the event bus. We have that issue in other services as well and mostly solve it by binding the service as a singleton.", "url": "https://github.com/Graylog2/graylog2-server/pull/7821#discussion_r402843651", "createdAt": "2020-04-03T08:43:53Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/inputs/persistence/InputStatusService.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.graylog2.inputs.persistence;\n+\n+import com.google.common.eventbus.EventBus;\n+import com.mongodb.DB;\n+import com.mongodb.DBCollection;\n+import org.apache.shiro.event.Subscribe;\n+import org.bson.types.ObjectId;\n+import org.graylog2.bindings.providers.MongoJackObjectMapperProvider;\n+import org.graylog2.database.MongoConnection;\n+import org.graylog2.rest.models.system.inputs.responses.InputDeleted;\n+import org.mongojack.JacksonDBCollection;\n+import org.mongojack.WriteResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Optional;\n+\n+/**\n+ * This is a simple wrapper around MongoDB to allow storage of state data for stateful Inputs.\n+ *\n+ * Inputs using this service are responsible for defining their own model for InputStatusRecord.inputStateData\n+ */\n+public class InputStatusService {\n+    private static final Logger LOG = LoggerFactory.getLogger(InputStatusService.class);\n+\n+    private static final String INPUT_STATUS_COLLECTION = \"input_status\";\n+\n+    private final JacksonDBCollection<InputStatusRecord, ObjectId> statusCollection;\n+\n+    @Inject\n+    public InputStatusService(MongoConnection mongoConnection,\n+                              MongoJackObjectMapperProvider objectMapperProvider,\n+                              EventBus eventBus) {\n+        DB mongoDatabase = mongoConnection.getDatabase();\n+        DBCollection collection = mongoDatabase.getCollection(INPUT_STATUS_COLLECTION);\n+\n+        eventBus.register(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "985841150be202ff29ce46033fe9c960e279ccf4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg0NzQzOA==", "bodyText": "Great idea using any-getter/setter! \ud83d\udc4d", "url": "https://github.com/Graylog2/graylog2-server/pull/7821#discussion_r402847438", "createdAt": "2020-04-03T08:48:11Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/inputs/persistence/InputStateData.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.graylog2.inputs.persistence;\n+\n+import com.fasterxml.jackson.annotation.JsonAnyGetter;\n+import com.fasterxml.jackson.annotation.JsonAnySetter;\n+import com.fasterxml.jackson.annotation.JsonAutoDetect;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.google.common.collect.Maps;\n+\n+import java.util.Map;\n+import java.util.Objects;\n+\n+@JsonTypeInfo(\n+        use = JsonTypeInfo.Id.NAME,\n+        include = JsonTypeInfo.As.EXISTING_PROPERTY,\n+        property = InputStateData.TYPE_FIELD,\n+        visible = true,\n+        defaultImpl = InputStateData.Fallback.class\n+)\n+public interface InputStateData {\n+    String TYPE_FIELD = \"type\";\n+\n+    @JsonProperty\n+    String type();\n+\n+    public interface Builder<SELF> {\n+        @JsonProperty(TYPE_FIELD)\n+        SELF type(String type);\n+    }\n+\n+    @JsonAutoDetect\n+    class Fallback implements InputStateData {\n+        @JsonProperty\n+        private String type;\n+\n+        private Map<String, Object> props = Maps.newHashMap();\n+\n+        @Override\n+        public String type() {\n+            return type;\n+        }\n+\n+        @JsonAnySetter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "985841150be202ff29ce46033fe9c960e279ccf4"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f049f956ae638eb3d979b47c35c90dca1dc8debc", "author": {"user": {"login": "waab76", "name": "Rob Curtis"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/f049f956ae638eb3d979b47c35c90dca1dc8debc", "committedDate": "2020-04-03T17:48:09Z", "message": "Add singleton binding and JUnit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d58d4e7f8ffcf0603f45010c18caee5e6faf0a1", "author": {"user": {"login": "waab76", "name": "Rob Curtis"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/2d58d4e7f8ffcf0603f45010c18caee5e6faf0a1", "committedDate": "2020-04-03T22:07:25Z", "message": "Fix visibility on collection name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDMxNTc3", "url": "https://github.com/Graylog2/graylog2-server/pull/7821#pullrequestreview-388031577", "createdAt": "2020-04-06T08:25:48Z", "commit": {"oid": "2d58d4e7f8ffcf0603f45010c18caee5e6faf0a1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7aeada5b20570879b89f618f5266504c28e0aa3", "author": {"user": {"login": "waab76", "name": "Rob Curtis"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/b7aeada5b20570879b89f618f5266504c28e0aa3", "committedDate": "2020-04-06T13:16:37Z", "message": "Add licenses to new files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MzEzNzQw", "url": "https://github.com/Graylog2/graylog2-server/pull/7821#pullrequestreview-388313740", "createdAt": "2020-04-06T14:36:32Z", "commit": {"oid": "b7aeada5b20570879b89f618f5266504c28e0aa3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2490, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}