{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MjQ2MzYz", "number": 8498, "title": "Bootstrap integration tests for ES7, implement `CountsAdapter`.", "bodyText": "Description\n\nMotivation and Context\n\n\nThis PR is adding the required boilerplate to enable integration tests for the ES7 storage driver module. This is performed alongside an implementation of the small CountsAdapter for ES7.\nHow Has This Been Tested?\n\n\n\nScreenshots (if appropriate):\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.", "createdAt": "2020-07-07T08:26:54Z", "url": "https://github.com/Graylog2/graylog2-server/pull/8498", "merged": true, "mergeCommit": {"oid": "37042325c71e1ca2f3512489841b309a019ce32b"}, "closed": true, "closedAt": "2020-07-08T10:55:29Z", "author": {"login": "dennisoelkers"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyhnoXgH2gAyNDQ1MjQ2MzYzOjIwMTYyNmI3NDM1NjIwNzIxMzNiZjU2YjAxNDMzMDY2ZWQ4MWY1ZDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy38lfgH2gAyNDQ1MjQ2MzYzOjI4NWY2MTJhZGQzYmQ0OTY5MGY3MjQwOWNhY2I2OWZhMDlhMjYwMDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "201626b743562072133bf56b01433066ed81f5d7", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/201626b743562072133bf56b01433066ed81f5d7", "committedDate": "2020-07-07T08:32:27Z", "message": "Validating Elasticsearch version setting."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5a9a2b7b99ab71e934816fe48b97c72a92ad531", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/d5a9a2b7b99ab71e934816fe48b97c72a92ad531", "committedDate": "2020-07-07T08:32:27Z", "message": "Adding/fixing validators."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60230e38631de1279384f93c030f8a19825845dc", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/60230e38631de1279384f93c030f8a19825845dc", "committedDate": "2020-07-07T08:32:27Z", "message": "Adding boilerplate to start ES7 tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9bb32472c9ee8c4f17723252761389a97bb5e35", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/f9bb32472c9ee8c4f17723252761389a97bb5e35", "committedDate": "2020-07-07T08:32:27Z", "message": "Partial implementation of ES7 test client."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4be5219164c19ddd9869335f7e3e21c28cca9fa6", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/4be5219164c19ddd9869335f7e3e21c28cca9fa6", "committedDate": "2020-07-07T08:32:27Z", "message": "Adding Index Mapping for ES7."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0743cca06b5c266b6c2489fc9a666b7b6f73b283", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/0743cca06b5c266b6c2489fc9a666b7b6f73b283", "committedDate": "2020-07-07T08:32:27Z", "message": "Adding ES7 client code for tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44a39cf3aac71b51cbc717de16f647689d1ea47d", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/44a39cf3aac71b51cbc717de16f647689d1ea47d", "committedDate": "2020-07-07T08:32:27Z", "message": "Adding required code for `CountsAdapterES7`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aa412e1eb4444e876e50d97d8cfedb1f9356bad", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/2aa412e1eb4444e876e50d97d8cfedb1f9356bad", "committedDate": "2020-07-07T08:32:27Z", "message": "Adding creator method to `IndexNotFoundException`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2326d0c52f410a9f322022c4dfbbfd1e4853aa88", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/2326d0c52f410a9f322022c4dfbbfd1e4853aa88", "committedDate": "2020-07-07T08:32:27Z", "message": "Using multi search for count to avoid 4k limit, handling errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45c00057b13cd41ed19fc8c72bcadd30f22a679f", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/45c00057b13cd41ed19fc8c72bcadd30f22a679f", "committedDate": "2020-07-07T08:32:28Z", "message": "Adding module to bind `CountsAdapterES7`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7963ea38430fe4df5e316b29c13be7fc60554dba", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/7963ea38430fe4df5e316b29c13be7fc60554dba", "committedDate": "2020-07-07T08:32:28Z", "message": "Removing superfluous space."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c298a53b07ab39b5f4fab0a4158e2b3f138895ba", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c298a53b07ab39b5f4fab0a4158e2b3f138895ba", "committedDate": "2020-07-07T08:32:28Z", "message": "Removing superfluous space."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c504f209792bfcc424c133885f1a1faf7dc55920", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c504f209792bfcc424c133885f1a1faf7dc55920", "committedDate": "2020-07-06T11:51:11Z", "message": "Removing superfluous space."}, "afterCommit": {"oid": "c298a53b07ab39b5f4fab0a4158e2b3f138895ba", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c298a53b07ab39b5f4fab0a4158e2b3f138895ba", "committedDate": "2020-07-07T08:32:28Z", "message": "Removing superfluous space."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7288b44c22de91c46ca8bad7bf9349adfda427c3", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/7288b44c22de91c46ca8bad7bf9349adfda427c3", "committedDate": "2020-07-07T11:30:50Z", "message": "Adjusting test for index mapping factory."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ce8f2bcfc20a9bd162fc01737c3e351366d0944", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/0ce8f2bcfc20a9bd162fc01737c3e351366d0944", "committedDate": "2020-07-07T11:31:11Z", "message": "Making test name more precise."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "161a9662a985555be71ef9ae05878df179166051", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/161a9662a985555be71ef9ae05878df179166051", "committedDate": "2020-07-07T11:38:28Z", "message": "Consolidating and cleaning up index mapping class for ES7."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzOTMzODg0", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#pullrequestreview-443933884", "createdAt": "2020-07-07T14:15:06Z", "commit": {"oid": "161a9662a985555be71ef9ae05878df179166051"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDoxNTowNlrOGuAmwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwODo0NDo0M1rOGueMbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg5NzYwMA==", "bodyText": "I would suggest to extract RestClientBuilder to a variable. That would make it easier to see that all the configuration happens on the low level client builder.", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r450897600", "createdAt": "2020-07-07T14:15:06Z", "author": {"login": "alex-konn"}, "path": "graylog-storage-elasticsearch7/src/main/java/org/graylog/storage/elasticsearch7/ElasticsearchClient.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package org.graylog.storage.elasticsearch7;\n+\n+import com.github.joschi.jadconfig.util.Duration;\n+import org.graylog.shaded.elasticsearch7.org.apache.http.HttpHost;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.ElasticsearchException;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RequestOptions;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestClient;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestHighLevelClient;\n+import org.graylog2.indexer.IndexNotFoundException;\n+\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.List;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+public class ElasticsearchClient {\n+    private final RestHighLevelClient client;\n+\n+    @Inject\n+    public ElasticsearchClient(@Named(\"elasticsearch_hosts\") List<URI> elasticsearchHosts,\n+                               @Named(\"elasticsearch_connect_timeout\") Duration elasticsearchConnectTimeout,\n+                               @Named(\"elasticsearch_socket_timeout\") Duration elasticsearchSocketTimeout,\n+                               @Named(\"elasticsearch_idle_timeout\") Duration elasticsearchIdleTimeout,\n+                               @Named(\"elasticsearch_max_total_connections\") int elasticsearchMaxTotalConnections,\n+                               @Named(\"elasticsearch_max_total_connections_per_route\") int elasticsearchMaxTotalConnectionsPerRoute,\n+                               @Named(\"elasticsearch_max_retries\") int elasticsearchMaxRetries,\n+                               @Named(\"elasticsearch_discovery_enabled\") boolean discoveryEnabled,\n+                               @Named(\"elasticsearch_discovery_filter\") @Nullable String discoveryFilter,\n+                               @Named(\"elasticsearch_discovery_frequency\") Duration discoveryFrequency,\n+                               @Named(\"elasticsearch_discovery_default_scheme\") String defaultSchemeForDiscoveredNodes,\n+                               @Named(\"elasticsearch_compression_enabled\") boolean compressionEnabled) {\n+        this.client = new RestHighLevelClient(RestClient.builder(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161a9662a985555be71ef9ae05878df179166051"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxODc3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (result.getResponses()[0].getResponse() == null) {\n          \n          \n            \n                        throw exceptionFrom(result.getResponses()[0].getFailure(), errorMessage);\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    return result.getResponses()[0].getResponse();\n          \n          \n            \n                   final MultiSearchResponse.Item firstResponseItem = result.getResponses()[0];\n          \n          \n            \n                    \n          \n          \n            \n                    if (firstResponseItem.getResponse() == null) {\n          \n          \n            \n                        throw exceptionFrom(firstResponseItem.getFailure(), errorMessage);\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    return firstResponseItem.getResponse();", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r450918775", "createdAt": "2020-07-07T14:42:47Z", "author": {"login": "alex-konn"}, "path": "graylog-storage-elasticsearch7/src/main/java/org/graylog/storage/elasticsearch7/ElasticsearchClient.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package org.graylog.storage.elasticsearch7;\n+\n+import com.github.joschi.jadconfig.util.Duration;\n+import org.graylog.shaded.elasticsearch7.org.apache.http.HttpHost;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.ElasticsearchException;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RequestOptions;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestClient;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestHighLevelClient;\n+import org.graylog2.indexer.IndexNotFoundException;\n+\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.List;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+public class ElasticsearchClient {\n+    private final RestHighLevelClient client;\n+\n+    @Inject\n+    public ElasticsearchClient(@Named(\"elasticsearch_hosts\") List<URI> elasticsearchHosts,\n+                               @Named(\"elasticsearch_connect_timeout\") Duration elasticsearchConnectTimeout,\n+                               @Named(\"elasticsearch_socket_timeout\") Duration elasticsearchSocketTimeout,\n+                               @Named(\"elasticsearch_idle_timeout\") Duration elasticsearchIdleTimeout,\n+                               @Named(\"elasticsearch_max_total_connections\") int elasticsearchMaxTotalConnections,\n+                               @Named(\"elasticsearch_max_total_connections_per_route\") int elasticsearchMaxTotalConnectionsPerRoute,\n+                               @Named(\"elasticsearch_max_retries\") int elasticsearchMaxRetries,\n+                               @Named(\"elasticsearch_discovery_enabled\") boolean discoveryEnabled,\n+                               @Named(\"elasticsearch_discovery_filter\") @Nullable String discoveryFilter,\n+                               @Named(\"elasticsearch_discovery_frequency\") Duration discoveryFrequency,\n+                               @Named(\"elasticsearch_discovery_default_scheme\") String defaultSchemeForDiscoveredNodes,\n+                               @Named(\"elasticsearch_compression_enabled\") boolean compressionEnabled) {\n+        this.client = new RestHighLevelClient(RestClient.builder(\n+                elasticsearchHosts.stream().map(uri -> new HttpHost(uri.getHost(), uri.getPort(), uri.getScheme())).toArray(HttpHost[]::new)\n+        ).setRequestConfigCallback(requestConfig -> requestConfig\n+                .setConnectTimeout(Math.toIntExact(elasticsearchConnectTimeout.toMilliseconds()))\n+                .setSocketTimeout(Math.toIntExact(elasticsearchSocketTimeout.toMilliseconds()))\n+        ).setHttpClientConfigCallback(httpClientConfig -> httpClientConfig\n+                .setMaxConnTotal(elasticsearchMaxTotalConnections)\n+                .setMaxConnPerRoute(elasticsearchMaxTotalConnectionsPerRoute)\n+        ));\n+    }\n+\n+    public SearchResponse search(SearchRequest searchRequest, String errorMessage) {\n+        final MultiSearchRequest multiSearchRequest = new MultiSearchRequest()\n+                .add(searchRequest);\n+\n+        final MultiSearchResponse result = this.execute((c, requestOptions) -> c.msearch(multiSearchRequest, requestOptions), errorMessage);\n+\n+        return firstResponseFrom(result, errorMessage);\n+    }\n+\n+    private SearchResponse firstResponseFrom(MultiSearchResponse result, String errorMessage) {\n+        checkArgument(result != null);\n+        checkArgument(result.getResponses().length == 1);\n+\n+        if (result.getResponses()[0].getResponse() == null) {\n+            throw exceptionFrom(result.getResponses()[0].getFailure(), errorMessage);\n+        }\n+\n+        return result.getResponses()[0].getResponse();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161a9662a985555be71ef9ae05878df179166051"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkyNTczNQ==", "bodyText": "I would prefer using our own runtime exception here instead of org.elasticsearch.ElasticsearchException. The old JestUtils used org.graylog2.indexer.ElasticsearchException. Maybe a new one with a more generic name? StorageException?", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r450925735", "createdAt": "2020-07-07T14:51:46Z", "author": {"login": "alex-konn"}, "path": "graylog-storage-elasticsearch7/src/main/java/org/graylog/storage/elasticsearch7/ElasticsearchClient.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package org.graylog.storage.elasticsearch7;\n+\n+import com.github.joschi.jadconfig.util.Duration;\n+import org.graylog.shaded.elasticsearch7.org.apache.http.HttpHost;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.ElasticsearchException;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RequestOptions;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestClient;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestHighLevelClient;\n+import org.graylog2.indexer.IndexNotFoundException;\n+\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.List;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+public class ElasticsearchClient {\n+    private final RestHighLevelClient client;\n+\n+    @Inject\n+    public ElasticsearchClient(@Named(\"elasticsearch_hosts\") List<URI> elasticsearchHosts,\n+                               @Named(\"elasticsearch_connect_timeout\") Duration elasticsearchConnectTimeout,\n+                               @Named(\"elasticsearch_socket_timeout\") Duration elasticsearchSocketTimeout,\n+                               @Named(\"elasticsearch_idle_timeout\") Duration elasticsearchIdleTimeout,\n+                               @Named(\"elasticsearch_max_total_connections\") int elasticsearchMaxTotalConnections,\n+                               @Named(\"elasticsearch_max_total_connections_per_route\") int elasticsearchMaxTotalConnectionsPerRoute,\n+                               @Named(\"elasticsearch_max_retries\") int elasticsearchMaxRetries,\n+                               @Named(\"elasticsearch_discovery_enabled\") boolean discoveryEnabled,\n+                               @Named(\"elasticsearch_discovery_filter\") @Nullable String discoveryFilter,\n+                               @Named(\"elasticsearch_discovery_frequency\") Duration discoveryFrequency,\n+                               @Named(\"elasticsearch_discovery_default_scheme\") String defaultSchemeForDiscoveredNodes,\n+                               @Named(\"elasticsearch_compression_enabled\") boolean compressionEnabled) {\n+        this.client = new RestHighLevelClient(RestClient.builder(\n+                elasticsearchHosts.stream().map(uri -> new HttpHost(uri.getHost(), uri.getPort(), uri.getScheme())).toArray(HttpHost[]::new)\n+        ).setRequestConfigCallback(requestConfig -> requestConfig\n+                .setConnectTimeout(Math.toIntExact(elasticsearchConnectTimeout.toMilliseconds()))\n+                .setSocketTimeout(Math.toIntExact(elasticsearchSocketTimeout.toMilliseconds()))\n+        ).setHttpClientConfigCallback(httpClientConfig -> httpClientConfig\n+                .setMaxConnTotal(elasticsearchMaxTotalConnections)\n+                .setMaxConnPerRoute(elasticsearchMaxTotalConnectionsPerRoute)\n+        ));\n+    }\n+\n+    public SearchResponse search(SearchRequest searchRequest, String errorMessage) {\n+        final MultiSearchRequest multiSearchRequest = new MultiSearchRequest()\n+                .add(searchRequest);\n+\n+        final MultiSearchResponse result = this.execute((c, requestOptions) -> c.msearch(multiSearchRequest, requestOptions), errorMessage);\n+\n+        return firstResponseFrom(result, errorMessage);\n+    }\n+\n+    private SearchResponse firstResponseFrom(MultiSearchResponse result, String errorMessage) {\n+        checkArgument(result != null);\n+        checkArgument(result.getResponses().length == 1);\n+\n+        if (result.getResponses()[0].getResponse() == null) {\n+            throw exceptionFrom(result.getResponses()[0].getFailure(), errorMessage);\n+        }\n+\n+        return result.getResponses()[0].getResponse();\n+    }\n+\n+    public <R> R execute(ThrowingBiFunction<RestHighLevelClient, RequestOptions, R, IOException> fn) {\n+        return execute(fn, \"An error occurred: \");\n+    }\n+\n+    public <R> R execute(ThrowingBiFunction<RestHighLevelClient, RequestOptions, R, IOException> fn, String errorMessage) {\n+        try {\n+            return fn.apply(client, requestOptions());\n+        } catch (Exception e) {\n+            throw exceptionFrom(e, errorMessage);\n+        }\n+    }\n+\n+    private RequestOptions requestOptions() {\n+        return RequestOptions.DEFAULT;\n+    }\n+\n+    private ElasticsearchException exceptionFrom(Exception e, String errorMessage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161a9662a985555be71ef9ae05878df179166051"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4MjM4MQ==", "bodyText": "Wouldn't it be enough to only use elasticsearchMajorVersion and drop elasticsearchVersion?", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r451382381", "createdAt": "2020-07-08T08:44:43Z", "author": {"login": "alex-konn"}, "path": "graylog2-server/src/main/java/org/graylog2/storage/VersionAwareProvider.java", "diffHunk": "@@ -25,11 +25,13 @@\n \n public class VersionAwareProvider<T> implements Provider<T> {\n     private final Version elasticsearchVersion;\n+    private final String elasticsearchMajorVersion;\n     private final Map<Version, Provider<T>> pluginBindings;\n \n     @Inject\n     public VersionAwareProvider(@Named(\"elasticsearch_version\") String elasticsearchMajorVersion, Map<Version, Provider<T>> pluginBindings) {\n         this.elasticsearchVersion = constructElasticsearchVersion(elasticsearchMajorVersion);\n+        this.elasticsearchMajorVersion = elasticsearchMajorVersion;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161a9662a985555be71ef9ae05878df179166051"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41216cd31b4d204aee2a267f1c3cbde44c197071", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/41216cd31b4d204aee2a267f1c3cbde44c197071", "committedDate": "2020-07-08T09:28:21Z", "message": "Cleaning up rest client creation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "795d736fbfa34579d5534e679b6c0bf842a4b282", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/795d736fbfa34579d5534e679b6c0bf842a4b282", "committedDate": "2020-07-08T09:29:34Z", "message": "Extracting first response to variable."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffecb94e6e30a5b7bf3315d55d8d196098527686", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/ffecb94e6e30a5b7bf3315d55d8d196098527686", "committedDate": "2020-07-08T09:30:26Z", "message": "Using correct exception class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04b6949f4e66f58660b7714023a90dee068ecf26", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/04b6949f4e66f58660b7714023a90dee068ecf26", "committedDate": "2020-07-08T09:33:11Z", "message": "Removing duplicate version instance variable."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTc1NDA5", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#pullrequestreview-444575409", "createdAt": "2020-07-08T09:35:25Z", "commit": {"oid": "04b6949f4e66f58660b7714023a90dee068ecf26"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "285f612add3bd49690f72409cacb69fa09a26007", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/285f612add3bd49690f72409cacb69fa09a26007", "committedDate": "2020-07-08T10:33:15Z", "message": "Lowering default ES version."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2970, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}