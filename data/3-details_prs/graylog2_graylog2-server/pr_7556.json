{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5Njg4NzY3", "number": 7556, "title": "Store API tokens encrypted in MongoDB", "bodyText": "Description\n\nMotivation and Context\n\n\nAt the moment, API tokens are stored in plaintext. If we still want to support that they can be copied to the clipboard, we can't hash them. But we can at least try to encrypt them with symmetric encryption.\nHow Has This Been Tested?\n\n\n\nScreenshots (if appropriate):\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.", "createdAt": "2020-02-25T16:47:25Z", "url": "https://github.com/Graylog2/graylog2-server/pull/7556", "merged": true, "mergeCommit": {"oid": "97ea776e8df7b13069f3ad13d79d62aa9f402c8e"}, "closed": true, "closedAt": "2020-02-28T13:27:58Z", "author": {"login": "thll"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHbK57AH2gAyMzc5Njg4NzY3OmQwMTIwYjE4MTdjNGRhYjI1ODhhNjQ4NmExOGRlYjU4NDYzMjJkMDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIvh_6gFqTM2NjM3OTEyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d0120b1817c4dab2588a6486a18deb5846322d08", "author": {"user": {"login": "thll", "name": "Othello Maurer"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/d0120b1817c4dab2588a6486a18deb5846322d08", "committedDate": "2020-02-24T10:42:54Z", "message": "Move access token related implementation classes to separate package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60f997f11717fba5ec520d7a3f536f242dbe9e48", "author": {"user": {"login": "thll", "name": "Othello Maurer"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/60f997f11717fba5ec520d7a3f536f242dbe9e48", "committedDate": "2020-02-25T16:44:34Z", "message": "WIP: encrypt tokens when storing in DB, decrypt when reading\n\nThe encryption is not deterministic yet. But it has to be, to get this\nworking. We may need to switch to a different encryption algorithm."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "514de87f62c0e0e40e743251263b35ccb941861d", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/514de87f62c0e0e40e743251263b35ccb941861d", "committedDate": "2020-02-26T13:46:08Z", "message": "Merge branch 'master' into api-token-encryption"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64ccea5c1c088cf47d7e54718a8d026247e28a71", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/64ccea5c1c088cf47d7e54718a8d026247e28a71", "committedDate": "2020-02-26T15:30:19Z", "message": "Revert encrypt/decrypt methods with byte[] salt\n\nWe won't need it anymore."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "379b0f1aec1a6016fdb8e10e30cd579a4315e881", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/379b0f1aec1a6016fdb8e10e30cd579a4315e881", "committedDate": "2020-02-26T16:27:18Z", "message": "Use AES SIV to encrypt the access tokens\n\nThis ensures deterministic cipher text values so we can use the value to\nlookup the tokes in the database.\n\nWe need this because our API token implementation only knows about the\ntoken and has no user account or token name information. Changing this\nto get a more secure implementation would be a breaking API change."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c17925191717e09ab1614f788a9114240d446a64", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c17925191717e09ab1614f788a9114240d446a64", "committedDate": "2020-02-26T17:57:11Z", "message": "Support access token deletion by using the token ID\n\nPreviously the token deletion endpoint only supported using the plain\ntext token in the URL. This is an issue because URLs will be\nlogged in HTTP server and proxy logs.\n\nThe UI is now using the token ID for deletion."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a238f2a3798cab40e25f89ae61e02e8be851823", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/2a238f2a3798cab40e25f89ae61e02e8be851823", "committedDate": "2020-02-26T18:03:23Z", "message": "Add missing encrypt() call in token service\n\nThe create() method doesn't use save() but saveWithoutValidation()."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c3816b235b5c0e049f273b96c84664f13d9d5cd", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/8c3816b235b5c0e049f273b96c84664f13d9d5cd", "committedDate": "2020-02-26T18:13:57Z", "message": "Save a \"token_type\" field for each access token\n\nThis will help with migrating access tokens to a new encryption scheme."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4db568cb9c827131ae5fd5359be1596bf5076039", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/4db568cb9c827131ae5fd5359be1596bf5076039", "committedDate": "2020-02-27T08:40:33Z", "message": "Add migration to encrypt existing API access tokens"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bc7f708633389e8aef29e00d79c1dfc1b7b3dcf", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/8bc7f708633389e8aef29e00d79c1dfc1b7b3dcf", "committedDate": "2020-02-27T08:41:04Z", "message": "Add note about encrypted API access tokens to UPGRADING"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6fbe8ee45b1c4adf1511ca982ac521fccd79f3d", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/d6fbe8ee45b1c4adf1511ca982ac521fccd79f3d", "committedDate": "2020-02-27T09:00:30Z", "message": "Adjust TokenList.test.jsx after changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83070a5c3ffd450df13bef92e166d51566b23341", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/83070a5c3ffd450df13bef92e166d51566b23341", "committedDate": "2020-02-27T09:18:03Z", "message": "Only use 16 bytes for the SIV macKey"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "296cbbf50068132ae6327e082681857c2c58bab9", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/296cbbf50068132ae6327e082681857c2c58bab9", "committedDate": "2020-02-27T09:29:41Z", "message": "Add some comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NjkxMTM4", "url": "https://github.com/Graylog2/graylog2-server/pull/7556#pullrequestreview-365691138", "createdAt": "2020-02-27T13:46:15Z", "commit": {"oid": "296cbbf50068132ae6327e082681857c2c58bab9"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMzo0NjoxNlrOFvSv6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODo1MjozN1rOFvdIDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNDU2OA==", "bodyText": "I think we don't need @Nullable for id() (also in Token#create).", "url": "https://github.com/Graylog2/graylog2-server/pull/7556#discussion_r385134568", "createdAt": "2020-02-27T13:46:16Z", "author": {"login": "thll"}, "path": "graylog2-server/src/main/java/org/graylog2/rest/models/users/responses/Token.java", "diffHunk": "@@ -23,10 +23,16 @@\n import org.graylog.autovalue.WithBeanGetter;\n import org.joda.time.DateTime;\n \n+import javax.annotation.Nullable;\n+\n @JsonAutoDetect\n @AutoValue\n @WithBeanGetter\n public abstract class Token {\n+    @JsonProperty\n+    @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296cbbf50068132ae6327e082681857c2c58bab9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1MzU2Nw==", "bodyText": "This will throw a NPE in #fromDBObject when there is no a match for the given ID in the DB.", "url": "https://github.com/Graylog2/graylog2-server/pull/7556#discussion_r385153567", "createdAt": "2020-02-27T14:17:37Z", "author": {"login": "thll"}, "path": "graylog2-server/src/main/java/org/graylog2/security/token/AccessTokenServiceImpl.java", "diffHunk": "@@ -60,9 +67,19 @@ public AccessToken load(String token) {\n             LOG.error(\"Multiple access tokens found, this is a serious bug.\");\n             throw new IllegalStateException(\"Access tokens collection has no unique index!\");\n         }\n-        final DBObject tokenObject = objects.get(0);\n-        final Object id = tokenObject.get(\"_id\");\n-        return new AccessTokenImpl((ObjectId) id, tokenObject.toMap());\n+        return fromDBObject(objects.get(0));\n+    }\n+\n+    @Nullable\n+    @Override\n+    public AccessToken loadById(String id) {\n+        try {\n+            return fromDBObject(get(AccessTokenImpl.class, id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296cbbf50068132ae6327e082681857c2c58bab9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1ODU1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static void validateTextAndEntryptionKey(String text, byte[] encryptionKey) {\n          \n          \n            \n                private static void validateTextAndEncryptionKey(String text, byte[] encryptionKey) {", "url": "https://github.com/Graylog2/graylog2-server/pull/7556#discussion_r385158558", "createdAt": "2020-02-27T14:25:15Z", "author": {"login": "thll"}, "path": "graylog2-server/src/main/java/org/graylog2/security/AESTools.java", "diffHunk": "@@ -55,4 +61,61 @@ public static String decrypt(String cipherText, String encryptionKey, String sal\n         }\n         return null;\n     }\n+\n+    /**\n+     * Encrypt the given plain text value with the given encryption key using AES SIV. (RFC 5297)\n+     *\n+     * @param plainText     the plain text value to encrypt\n+     * @param encryptionKey the encryption key (must be at least 32 bytes)\n+     * @return the encrypted cipher text or null if encryption failed\n+     * @throws IllegalArgumentException if the encryption key is smaller than 32 bytes\n+     */\n+    @Nullable\n+    public static String encryptSiv(String plainText, byte[] encryptionKey) {\n+        validateTextAndEntryptionKey(plainText, encryptionKey);\n+        try {\n+            final byte[] cipherBytes = SIV_MODE.encrypt(\n+                    Arrays.copyOf(encryptionKey, 16),\n+                    Arrays.copyOfRange(encryptionKey, 16, 32),\n+                    plainText.getBytes(UTF_8)\n+            );\n+            return Hex.encodeToString(cipherBytes);\n+        } catch (Exception e) {\n+            LOG.error(\"Couldn't encrypt value\", e);\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Decrypt the given cipher text value with the given encryption key using AES SIV. (RFC 5297)\n+     *\n+     * @param cipherText    the cipher text value to decrypt\n+     * @param encryptionKey the encryption key (must be at least 32 bytes)\n+     * @return the decrypted cipher text or null if decryption failed\n+     * @throws IllegalArgumentException if the encryption key is smaller than 32 bytes\n+     */\n+    @Nullable\n+    public static String decryptSiv(String cipherText, byte[] encryptionKey) {\n+        validateTextAndEntryptionKey(cipherText, encryptionKey);\n+        try {\n+            final byte[] plainBytes = SIV_MODE.decrypt(\n+                    Arrays.copyOf(encryptionKey, 16),\n+                    Arrays.copyOfRange(encryptionKey, 16, 32),\n+                    Hex.decode(cipherText.getBytes(UTF_8))\n+            );\n+            return new String(plainBytes, UTF_8);\n+        } catch (Exception e) {\n+            LOG.error(\"Couldn't decrypt value\", e);\n+        }\n+        return null;\n+    }\n+\n+    private static void validateTextAndEntryptionKey(String text, byte[] encryptionKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296cbbf50068132ae6327e082681857c2c58bab9"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4OTYyMg==", "bodyText": "I think we should add a few more tests:\n\none that loads by ID\none that loads by ID which doesn't exist in the DB\none that generates a token, then loads it from the DB as well and compares it (because there was a bug where we\nwouldn't encrypt it when generating it)", "url": "https://github.com/Graylog2/graylog2-server/pull/7556#discussion_r385289622", "createdAt": "2020-02-27T18:24:42Z", "author": {"login": "thll"}, "path": "graylog2-server/src/test/java/org/graylog2/security/AccessTokenServiceImplTest.java", "diffHunk": "@@ -30,6 +33,9 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n public class AccessTokenServiceImplTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296cbbf50068132ae6327e082681857c2c58bab9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwMDk4NQ==", "bodyText": "I'm wondering if this is an implementation detail that should live in AccessTokenImpl.java instead. The type is not accessible via interface methods so it might be confusing that the enum is here.", "url": "https://github.com/Graylog2/graylog2-server/pull/7556#discussion_r385300985", "createdAt": "2020-02-27T18:45:55Z", "author": {"login": "thll"}, "path": "graylog2-server/src/main/java/org/graylog2/security/AccessToken.java", "diffHunk": "@@ -23,6 +23,24 @@\n  * @author Dennis Oelkers <dennis@torch.sh>\n  */\n public interface AccessToken extends Persisted {\n+    enum Type {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296cbbf50068132ae6327e082681857c2c58bab9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwMzA5NQ==", "bodyText": "I think this deserves a comment, explaining that the type is used to state the encryption algorithm in the database.", "url": "https://github.com/Graylog2/graylog2-server/pull/7556#discussion_r385303095", "createdAt": "2020-02-27T18:49:55Z", "author": {"login": "thll"}, "path": "graylog2-server/src/main/java/org/graylog2/security/token/AccessTokenImpl.java", "diffHunk": "@@ -81,6 +83,7 @@ public String getToken() {\n     @Override\n     public void setToken(String token) {\n         fields.put(TOKEN, token);\n+        fields.put(TOKEN_TYPE, Type.defaultType().getIntValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296cbbf50068132ae6327e082681857c2c58bab9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwNDU4OA==", "bodyText": "I guess we should add minimal documentation, explaining that we are encrypting the token on storage and decrypting on reading and that we always have them encrypted so we don't have too look at the token type.", "url": "https://github.com/Graylog2/graylog2-server/pull/7556#discussion_r385304588", "createdAt": "2020-02-27T18:52:37Z", "author": {"login": "thll"}, "path": "graylog2-server/src/main/java/org/graylog2/security/token/AccessTokenServiceImpl.java", "diffHunk": "@@ -14,43 +14,50 @@\n  * You should have received a copy of the GNU General Public License\n  * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n  */\n-package org.graylog2.security;\n+package org.graylog2.security.token;\n \n-import com.google.common.collect.Lists;\n import com.google.common.collect.Maps;\n import com.mongodb.BasicDBObject;\n import com.mongodb.BasicDBObjectBuilder;\n import com.mongodb.DBObject;\n import com.mongodb.DuplicateKeyException;\n+import org.apache.commons.lang3.StringUtils;\n import org.bson.types.ObjectId;\n import org.graylog2.database.MongoConnection;\n import org.graylog2.database.PersistedServiceImpl;\n import org.graylog2.plugin.Tools;\n import org.graylog2.plugin.database.ValidationException;\n+import org.graylog2.security.AccessToken;\n+import org.graylog2.security.AccessTokenService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import javax.annotation.Nullable;\n import javax.inject.Inject;\n import java.math.BigInteger;\n import java.security.SecureRandom;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n \n public class AccessTokenServiceImpl extends PersistedServiceImpl implements AccessTokenService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296cbbf50068132ae6327e082681857c2c58bab9"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41e2346080c3414d5df5ab970cd95b01ebae8ba7", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/41e2346080c3414d5df5ab970cd95b01ebae8ba7", "committedDate": "2020-02-27T19:32:26Z", "message": "Merge branch 'master' into api-token-encryption"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d3d052765f5cda23e6e72492dae42e95fa6ef6", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/e9d3d052765f5cda23e6e72492dae42e95fa6ef6", "committedDate": "2020-02-28T07:47:27Z", "message": "Token id doesn't need to be Nullable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b52e6b02a0b21b741cce8b8e5949ba050f6b26c", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/5b52e6b02a0b21b741cce8b8e5949ba050f6b26c", "committedDate": "2020-02-28T07:52:36Z", "message": "Avoid NPE in AccessTokenServiceImpl#loadById\n\nAlso add more tests to check that loadById() works correctly and that\ncreate() actually encrypts the token value."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59e7264259eb2e0b7bb5b5a719cedfa25b70ed44", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/59e7264259eb2e0b7bb5b5a719cedfa25b70ed44", "committedDate": "2020-02-28T09:53:50Z", "message": "Fix typo in private function name in AESTools"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ada38836ea0b9a0bdb3c41891f2a2d2896005ba8", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/ada38836ea0b9a0bdb3c41891f2a2d2896005ba8", "committedDate": "2020-02-28T09:58:45Z", "message": "Move access token type enum to AccessTokenImpl\n\nIt's actually an implementation detail and should not be in the\ninterface."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6d2ce8a6dd7ff328a068838319381402578ae8b", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a6d2ce8a6dd7ff328a068838319381402578ae8b", "committedDate": "2020-02-28T10:03:08Z", "message": "Add comments about the token_type field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ae8bf214c34df69e6888c3dc958301f2d65f644", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/8ae8bf214c34df69e6888c3dc958301f2d65f644", "committedDate": "2020-02-28T12:09:54Z", "message": "Remove AccessTokenImpl.Type.defaultType()\n\nWe think it's better to make this explicit."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5c619716a0396eec74bf0e036befe8885cf3d33", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c5c619716a0396eec74bf0e036befe8885cf3d33", "committedDate": "2020-02-28T12:10:38Z", "message": "Add some javadoc to AccessTokenServiceImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f591e70aa84b31d95c55ae969cbbe1bcb466a38", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/6f591e70aa84b31d95c55ae969cbbe1bcb466a38", "committedDate": "2020-02-28T12:20:40Z", "message": "Set index on \"token_type\" field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a740de73c05065e61125ed39d4c35268f1d01f38", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a740de73c05065e61125ed39d4c35268f1d01f38", "committedDate": "2020-02-28T12:33:21Z", "message": "Move classes back up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "043814a660eacea5edb82f4e9df05342eba6b6c7", "author": {"user": {"login": "bernd", "name": "Bernd Ahlers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/043814a660eacea5edb82f4e9df05342eba6b6c7", "committedDate": "2020-02-28T12:36:35Z", "message": "Fix enum naming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2Mzc5MTI2", "url": "https://github.com/Graylog2/graylog2-server/pull/7556#pullrequestreview-366379126", "createdAt": "2020-02-28T13:00:09Z", "commit": {"oid": "a740de73c05065e61125ed39d4c35268f1d01f38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2651, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}