{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMzg4MDI4", "number": 7141, "title": "Remove widget position from view state, on widget delete", "bodyText": "As described in #6985 the widget position persists in the view state when deleting a widget. When saving a dashboard the widget position still persists in the database as well.\nThis PR just removes all positions without a related widget, when updating the widgets.\nFixes #6985\nScreenshots (if appropriate):\nTypes of changes\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.", "createdAt": "2020-01-10T10:41:34Z", "url": "https://github.com/Graylog2/graylog2-server/pull/7141", "merged": true, "mergeCommit": {"oid": "979faf6c688822851ad047c117365bf6740cb1f6"}, "closed": true, "closedAt": "2020-01-17T08:52:25Z", "author": {"login": "linuspahl"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4-yOuAFqTM0MTE2ODQ3NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb7Kz-egFqTM0NDQzNDY0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMTY4NDc0", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#pullrequestreview-341168474", "createdAt": "2020-01-10T13:43:00Z", "commit": {"oid": "ec368b7fe66881ca87c9a91d55396e406b40d6a7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMzo0MzowMFrOFcUZQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMzo0MzowMFrOFcUZQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIzODU5NA==", "bodyText": "I think we should use await or then here to make sure that the promise returned from ViewStatesActions.update and its handlers are resolved before checking anything. I think that is also the case in the other test cases in this file.", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#discussion_r365238594", "createdAt": "2020-01-10T13:43:00Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/stores/CurrentViewStateStore.test.js", "diffHunk": "@@ -103,4 +103,39 @@ describe('CurrentViewStateStore', () => {\n     CurrentViewStateStore.widgets(expectedWidgets);\n     expect(updateFn).toHaveBeenCalledTimes(1);\n   });\n+\n+  it('should remove widget positions for deleted widgets', () => {\n+    const widgetOnePos = new WidgetPosition(1, 1, 5, 6);\n+    const widgetTwoPos = new WidgetPosition(1, 6, 5, 6);\n+    const widgetPositionsMap = { 'widget-one': widgetOnePos, 'widget-two': widgetTwoPos };\n+    const widgetOne = MessagesWidget.builder().id('widget-one').build();\n+    const widgetTwo = MessagesWidget.builder().id('widget-two').build();\n+    const existingWidgets = [widgetOne, widgetTwo];\n+    const existingViewState = viewState.toBuilder()\n+      .widgetPositions(widgetPositionsMap)\n+      .widgets(existingWidgets)\n+      .build();\n+\n+    viewStateMap[viewId] = existingViewState;\n+    const sMap = Immutable.Map(viewStateMap);\n+\n+    const expectedWidgets = [widgetOne];\n+    const expectedWidgetPosition = { 'widget-one': widgetOnePos };\n+    const expectedViewState = viewState.toBuilder()\n+      .widgetPositions(expectedWidgetPosition)\n+      .widgets(expectedWidgets)\n+      .build();\n+\n+    const updateFn = mockAction(jest.fn((id, newViewState) => {\n+      expect(id).toEqual(viewId);\n+      expect(newViewState).toEqual(expectedViewState);\n+      return Promise.resolve(expectedViewState);\n+    }));\n+\n+    ViewStatesActions.update = updateFn;\n+    CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: existingViewState });\n+    CurrentViewStateStore.onViewStatesStoreChange(sMap);\n+    CurrentViewStateStore.widgets(expectedWidgets);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec368b7fe66881ca87c9a91d55396e406b40d6a7"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxODU4NDkz", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#pullrequestreview-341858493", "createdAt": "2020-01-13T13:55:24Z", "commit": {"oid": "f9583b94c4f077238483273bbb722ac255482e5f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo1NToyNFrOFc3m_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo1OToyN1rOFc3usg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNTU1MA==", "bodyText": "We can also change this to:\nexpect(updateFn).toHaveBeenCalledWith(viewId, expectedViewState);\n\nand just turn the definition of updateFn into:\nconst updateFn = jest.fn(() => Promise.resolve(expectedViewState));\n\nWhich makes the actual expectation easier to read because the test case is way more linear (not having to jump from the expect back to the definition of updateFn.", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#discussion_r365815550", "createdAt": "2020-01-13T13:55:24Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/stores/CurrentViewStateStore.test.js", "diffHunk": "@@ -100,7 +100,42 @@ describe('CurrentViewStateStore', () => {\n     ViewStatesActions.update = updateFn;\n     CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: oldViewState });\n     CurrentViewStateStore.onViewStatesStoreChange(sMap);\n-    CurrentViewStateStore.widgets(expectedWidgets);\n+    await CurrentViewStateStore.widgets(expectedWidgets);\n+    expect(updateFn).toHaveBeenCalledTimes(1);\n+  });\n+\n+  it('should remove widget positions for deleted widgets', async () => {\n+    const widgetOnePos = new WidgetPosition(1, 1, 5, 6);\n+    const widgetTwoPos = new WidgetPosition(1, 6, 5, 6);\n+    const widgetPositionsMap = { 'widget-one': widgetOnePos, 'widget-two': widgetTwoPos };\n+    const widgetOne = MessagesWidget.builder().id('widget-one').build();\n+    const widgetTwo = MessagesWidget.builder().id('widget-two').build();\n+    const existingWidgets = [widgetOne, widgetTwo];\n+    const existingViewState = viewState.toBuilder()\n+      .widgetPositions(widgetPositionsMap)\n+      .widgets(existingWidgets)\n+      .build();\n+\n+    viewStateMap[viewId] = existingViewState;\n+    const sMap = Immutable.Map(viewStateMap);\n+\n+    const expectedWidgets = [widgetOne];\n+    const expectedWidgetPosition = { 'widget-one': widgetOnePos };\n+    const expectedViewState = viewState.toBuilder()\n+      .widgetPositions(expectedWidgetPosition)\n+      .widgets(expectedWidgets)\n+      .build();\n+\n+    const updateFn = mockAction(jest.fn((id, newViewState) => {\n+      expect(id).toEqual(viewId);\n+      expect(newViewState).toEqual(expectedViewState);\n+      return Promise.resolve(expectedViewState);\n+    }));\n+\n+    ViewStatesActions.update = updateFn;\n+    CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: existingViewState });\n+    CurrentViewStateStore.onViewStatesStoreChange(sMap);\n+    await CurrentViewStateStore.widgets(expectedWidgets);\n     expect(updateFn).toHaveBeenCalledTimes(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9583b94c4f077238483273bbb722ac255482e5f"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNjY3MQ==", "bodyText": "Imo the following variable declarations could be changed into one big inline declaration of the view state. We do not reuse these values, so we do not really need to capture them into variables.", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#discussion_r365816671", "createdAt": "2020-01-13T13:57:36Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/stores/CurrentViewStateStore.test.js", "diffHunk": "@@ -100,7 +100,42 @@ describe('CurrentViewStateStore', () => {\n     ViewStatesActions.update = updateFn;\n     CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: oldViewState });\n     CurrentViewStateStore.onViewStatesStoreChange(sMap);\n-    CurrentViewStateStore.widgets(expectedWidgets);\n+    await CurrentViewStateStore.widgets(expectedWidgets);\n+    expect(updateFn).toHaveBeenCalledTimes(1);\n+  });\n+\n+  it('should remove widget positions for deleted widgets', async () => {\n+    const widgetOnePos = new WidgetPosition(1, 1, 5, 6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9583b94c4f077238483273bbb722ac255482e5f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNzUyMg==", "bodyText": "Setup of the test case and the actual action(s) which are tested should be clearer, by adding new lines in between. Imo assigning ViewStatesActions.update is still part of the setup, I am not sure about this line. I think the actual action under test is CurrentViewStateStore.widgets, so it should be visually separated from the setup and checking the expectations afterwards.", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#discussion_r365817522", "createdAt": "2020-01-13T13:59:27Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/stores/CurrentViewStateStore.test.js", "diffHunk": "@@ -100,7 +100,42 @@ describe('CurrentViewStateStore', () => {\n     ViewStatesActions.update = updateFn;\n     CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: oldViewState });\n     CurrentViewStateStore.onViewStatesStoreChange(sMap);\n-    CurrentViewStateStore.widgets(expectedWidgets);\n+    await CurrentViewStateStore.widgets(expectedWidgets);\n+    expect(updateFn).toHaveBeenCalledTimes(1);\n+  });\n+\n+  it('should remove widget positions for deleted widgets', async () => {\n+    const widgetOnePos = new WidgetPosition(1, 1, 5, 6);\n+    const widgetTwoPos = new WidgetPosition(1, 6, 5, 6);\n+    const widgetPositionsMap = { 'widget-one': widgetOnePos, 'widget-two': widgetTwoPos };\n+    const widgetOne = MessagesWidget.builder().id('widget-one').build();\n+    const widgetTwo = MessagesWidget.builder().id('widget-two').build();\n+    const existingWidgets = [widgetOne, widgetTwo];\n+    const existingViewState = viewState.toBuilder()\n+      .widgetPositions(widgetPositionsMap)\n+      .widgets(existingWidgets)\n+      .build();\n+\n+    viewStateMap[viewId] = existingViewState;\n+    const sMap = Immutable.Map(viewStateMap);\n+\n+    const expectedWidgets = [widgetOne];\n+    const expectedWidgetPosition = { 'widget-one': widgetOnePos };\n+    const expectedViewState = viewState.toBuilder()\n+      .widgetPositions(expectedWidgetPosition)\n+      .widgets(expectedWidgets)\n+      .build();\n+\n+    const updateFn = mockAction(jest.fn((id, newViewState) => {\n+      expect(id).toEqual(viewId);\n+      expect(newViewState).toEqual(expectedViewState);\n+      return Promise.resolve(expectedViewState);\n+    }));\n+\n+    ViewStatesActions.update = updateFn;\n+    CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: existingViewState });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9583b94c4f077238483273bbb722ac255482e5f"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eeac338577e1267776f036e9f6b3abecf70534b9", "author": {"user": {"login": "linuspahl", "name": "Linus Pahl"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/eeac338577e1267776f036e9f6b3abecf70534b9", "committedDate": "2020-01-15T07:55:35Z", "message": "Remove widget position from view state, on widget delete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "479f8e21b92d2340b7eceea7aeb37f56977e22c2", "author": {"user": {"login": "linuspahl", "name": "Linus Pahl"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/479f8e21b92d2340b7eceea7aeb37f56977e22c2", "committedDate": "2020-01-15T07:55:35Z", "message": "Refactor CurrentViewStateStore widgets method code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2e716a97e2f51a22119ec0269395210a46aa1e2", "author": {"user": {"login": "linuspahl", "name": "Linus Pahl"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/f2e716a97e2f51a22119ec0269395210a46aa1e2", "committedDate": "2020-01-15T07:55:35Z", "message": "Implement async await for promises in CurrentViewStateStore tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0ba4b0630ddcd5f4254cd7e2a7c55f52f29dd58", "author": {"user": {"login": "linuspahl", "name": "Linus Pahl"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a0ba4b0630ddcd5f4254cd7e2a7c55f52f29dd58", "committedDate": "2020-01-15T07:55:35Z", "message": "Improve CurrenViewStateStore test code quality"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd1b20a149c40240fa4fae9a5f807c686550ea0f", "author": {"user": {"login": "linuspahl", "name": "Linus Pahl"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/dd1b20a149c40240fa4fae9a5f807c686550ea0f", "committedDate": "2020-01-15T07:55:35Z", "message": "Separate fixtures from expected state for CurrentViewStateStore test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6eb76d49f61cc5e4e1f0dc23a75fe96367801371", "author": {"user": {"login": "linuspahl", "name": "Linus Pahl"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/6eb76d49f61cc5e4e1f0dc23a75fe96367801371", "committedDate": "2020-01-14T14:17:05Z", "message": "Separate fixtures from expected state for CurrentViewStateStore test"}, "afterCommit": {"oid": "dd1b20a149c40240fa4fae9a5f807c686550ea0f", "author": {"user": {"login": "linuspahl", "name": "Linus Pahl"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/dd1b20a149c40240fa4fae9a5f807c686550ea0f", "committedDate": "2020-01-15T07:55:35Z", "message": "Separate fixtures from expected state for CurrentViewStateStore test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDM0NjQw", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#pullrequestreview-344434640", "createdAt": "2020-01-17T08:52:17Z", "commit": {"oid": "dd1b20a149c40240fa4fae9a5f807c686550ea0f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2806, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}