{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNTgzNDYx", "number": 8456, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozMDoyOFrOEPlIFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozNzoyM1rOEPlRpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzcyMzc0OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/BuiltinCapabilities.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozMDoyOFrOGzXhmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDozMjoxMlrOG1clfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxNTk5Mg==", "bodyText": "Shouldn't we add the read permissions to the VIEW capability as well?", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r456515992", "createdAt": "2020-07-17T15:30:28Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/BuiltinCapabilities.java", "diffHunk": "@@ -53,7 +53,9 @@ public BuiltinCapabilities() {\n                                 RestPermissions.STREAMS_EDIT,\n                                 RestPermissions.STREAMS_CHANGESTATE,\n                                 RestPermissions.DASHBOARDS_READ,\n-                                RestPermissions.DASHBOARDS_EDIT\n+                                RestPermissions.DASHBOARDS_EDIT,\n+                                RestPermissions.EVENT_DEFINITIONS_READ,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY5NjA2MQ==", "bodyText": "ah, good catch", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r458696061", "createdAt": "2020-07-22T10:32:12Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/security/BuiltinCapabilities.java", "diffHunk": "@@ -53,7 +53,9 @@ public BuiltinCapabilities() {\n                                 RestPermissions.STREAMS_EDIT,\n                                 RestPermissions.STREAMS_CHANGESTATE,\n                                 RestPermissions.DASHBOARDS_READ,\n-                                RestPermissions.DASHBOARDS_EDIT\n+                                RestPermissions.DASHBOARDS_EDIT,\n+                                RestPermissions.EVENT_DEFINITIONS_READ,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxNTk5Mg=="}, "originalCommit": {"oid": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzczMDYzOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/UserContextBinder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozMjoxOVrOGzXlyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozMjoxOVrOGzXlyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxNzA2Nw==", "bodyText": "How about removing the commented code? Or at least add a comment why this is commented and should stay.", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r456517067", "createdAt": "2020-07-17T15:32:19Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/UserContextBinder.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security;\n+\n+import org.glassfish.hk2.utilities.binding.AbstractBinder;\n+import org.glassfish.jersey.process.internal.RequestScoped;\n+\n+public class UserContextBinder extends AbstractBinder {\n+    @Override\n+    protected void configure() {\n+        bindFactory(UserContextFactory.class)\n+                .to(UserContext.class)\n+//                .proxy(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Nzc0MzU2OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozNjowMlrOGzXuCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozNjowMlrOGzXuCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxOTE3Nw==", "bodyText": "I think we should use GRNTypes.EVENT_DEFINITION.type() here instead of using the ModelTypes.", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r456519177", "createdAt": "2020-07-17T15:36:02Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security.entities;\n+\n+import org.graylog.grn.GRN;\n+import org.graylog.grn.GRNRegistry;\n+import org.graylog.security.Capability;\n+import org.graylog.security.DBGrantService;\n+import org.graylog.security.GrantDTO;\n+import org.graylog2.contentpacks.model.ModelTypes;\n+import org.graylog2.plugin.database.users.User;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class EntityOwnershipService {\n+    private static final Logger LOG = LoggerFactory.getLogger(EntityOwnershipService.class);\n+\n+    private final DBGrantService dbGrantService;\n+    private final GRNRegistry grnRegistry;\n+\n+\n+    @Inject\n+    public EntityOwnershipService(DBGrantService dbGrantService,\n+                                  GRNRegistry grnRegistry) {\n+        this.dbGrantService = dbGrantService;\n+        this.grnRegistry = grnRegistry;\n+    }\n+\n+    public void registerNewEventDefinition(String id, User user) {\n+        final GRN grn = grnRegistry.newGRN(ModelTypes.EVENT_DEFINITION_V1.name(), id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Nzc0NDkwOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozNjoyM1rOGzXu1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozNjoyM1rOGzXu1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxOTM4MA==", "bodyText": "Same as above, let's use GRNTypes.DASHBOARD.type() here.", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r456519380", "createdAt": "2020-07-17T15:36:23Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security.entities;\n+\n+import org.graylog.grn.GRN;\n+import org.graylog.grn.GRNRegistry;\n+import org.graylog.security.Capability;\n+import org.graylog.security.DBGrantService;\n+import org.graylog.security.GrantDTO;\n+import org.graylog2.contentpacks.model.ModelTypes;\n+import org.graylog2.plugin.database.users.User;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class EntityOwnershipService {\n+    private static final Logger LOG = LoggerFactory.getLogger(EntityOwnershipService.class);\n+\n+    private final DBGrantService dbGrantService;\n+    private final GRNRegistry grnRegistry;\n+\n+\n+    @Inject\n+    public EntityOwnershipService(DBGrantService dbGrantService,\n+                                  GRNRegistry grnRegistry) {\n+        this.dbGrantService = dbGrantService;\n+        this.grnRegistry = grnRegistry;\n+    }\n+\n+    public void registerNewEventDefinition(String id, User user) {\n+        final GRN grn = grnRegistry.newGRN(ModelTypes.EVENT_DEFINITION_V1.name(), id);\n+        registerNewEntity(grn, user);\n+    }\n+\n+    public void registerNewView(String id, User user) {\n+        final GRN grn = grnRegistry.newGRN(ModelTypes.DASHBOARD_V2.name(), id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Nzc0ODIwOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozNzoyM1rOGzXw5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTozNzoyM1rOGzXw5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxOTkwOA==", "bodyText": "How about writing a test for this class? \ud83d\ude04 Thanks!", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r456519908", "createdAt": "2020-07-17T15:37:23Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security.entities;\n+\n+import org.graylog.grn.GRN;\n+import org.graylog.grn.GRNRegistry;\n+import org.graylog.security.Capability;\n+import org.graylog.security.DBGrantService;\n+import org.graylog.security.GrantDTO;\n+import org.graylog2.contentpacks.model.ModelTypes;\n+import org.graylog2.plugin.database.users.User;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class EntityOwnershipService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4219, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}