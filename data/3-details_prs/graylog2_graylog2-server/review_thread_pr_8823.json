{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMDYzNTg3", "number": 8823, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzo0MjoyMFrOEdOm2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzo0MzoxN1rOEdOomA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDgzNDgzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/domainActions/users/UsersDomain.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzo0MjoyMFrOHIQ9DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzo0MjoyMFrOHIQ9DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyODQyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                message: `Updating user \"${payload?.username}\" failed with status: ${error}`,\n          \n          \n            \n                message: `Creating user \"${payload?.username}\" failed with status: ${error}`,", "url": "https://github.com/Graylog2/graylog2-server/pull/8823#discussion_r478428429", "createdAt": "2020-08-27T13:42:20Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/domainActions/users/UsersDomain.js", "diffHunk": "@@ -0,0 +1,107 @@\n+// @flow strict\n+import type { ActionsType } from 'actions/users/UsersActions';\n+import { UsersActions } from 'stores/users/UsersStore';\n+\n+import notifyingAction from '../notifyingAction';\n+\n+const create: $PropertyType<ActionsType, 'create'> = notifyingAction({\n+  action: UsersActions.create,\n+  success: (payload) => ({\n+    message: `User \"${payload?.username}\" was created successfully`,\n+  }),\n+  error: (error, payload) => ({\n+    message: `Updating user \"${payload?.username}\" failed with status: ${error}`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8131a1f203ab9151d67cd736e44b9ad0d077c92f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDgzOTI4OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/domainActions/users/UsersDomain.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzo0MzoxN1rOHIQ_rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzo0MzoxN1rOHIQ_rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyOTEwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                message: `Loading token for user \"${username}\" failed with status: ${error}`,\n          \n          \n            \n                message: `Loading tokens for user \"${username}\" failed with status: ${error}`,", "url": "https://github.com/Graylog2/graylog2-server/pull/8823#discussion_r478429101", "createdAt": "2020-08-27T13:43:17Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/domainActions/users/UsersDomain.js", "diffHunk": "@@ -0,0 +1,107 @@\n+// @flow strict\n+import type { ActionsType } from 'actions/users/UsersActions';\n+import { UsersActions } from 'stores/users/UsersStore';\n+\n+import notifyingAction from '../notifyingAction';\n+\n+const create: $PropertyType<ActionsType, 'create'> = notifyingAction({\n+  action: UsersActions.create,\n+  success: (payload) => ({\n+    message: `User \"${payload?.username}\" was created successfully`,\n+  }),\n+  error: (error, payload) => ({\n+    message: `Updating user \"${payload?.username}\" failed with status: ${error}`,\n+  }),\n+});\n+\n+const load: $PropertyType<ActionsType, 'load'> = notifyingAction({\n+  action: UsersActions.load,\n+  error: (error, username) => ({\n+    message: `Loading user \"${username}\" failed with status: ${error}`,\n+  }),\n+  notFoundRedirect: true,\n+});\n+\n+const update: $PropertyType<ActionsType, 'update'> = notifyingAction({\n+  action: UsersActions.update,\n+  success: (username) => ({\n+    message: `User \"${username}\" was updated successfully`,\n+  }),\n+  error: (error, username) => ({\n+    message: `Updating user \"${username}\" failed with status: ${error}`,\n+  }),\n+});\n+\n+const deleteAction: $PropertyType<ActionsType, 'delete'> = notifyingAction({\n+  action: UsersActions.delete,\n+  success: (username) => ({\n+    message: `User \"${username}\" was deleted successfully`,\n+  }),\n+  error: (error, username) => ({\n+    message: `Deleting user \"${username}\" failed with status: ${error}`,\n+  }),\n+});\n+\n+const changePassword: $PropertyType<ActionsType, 'changePassword'> = notifyingAction({\n+  action: UsersActions.changePassword,\n+  success: (username) => ({\n+    message: `Password was changed successfully for user \"${username}\"`,\n+  }),\n+  error: (error, username) => ({\n+    message: `Changing password for user \"${username}\" failed with status: ${error}`,\n+  }),\n+});\n+\n+const createToken: $PropertyType<ActionsType, 'createToken'> = notifyingAction({\n+  action: UsersActions.createToken,\n+  success: (username, tokenName) => ({\n+    message: `Token \"${tokenName}\" created successfully for user \"${username}\"`,\n+  }),\n+  error: (error, username, tokenName) => ({\n+    message: `Creating token \"${tokenName}\" for user \"${username}\" failed with status: ${error}`,\n+  }),\n+});\n+\n+const loadTokens: $PropertyType<ActionsType, 'loadTokens'> = notifyingAction({\n+  action: UsersActions.loadTokens,\n+  error: (error, username) => ({\n+    message: `Loading token for user \"${username}\" failed with status: ${error}`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8131a1f203ab9151d67cd736e44b9ad0d077c92f"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4027, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}