{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMzgwNDM1", "number": 7108, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDowNDo0NlrODWzB0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDo0ODoxNVrODWz24A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjMxMzE1OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/datatable/DataTableEntry.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDowNDo0NlrOFbwmvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMzo0MDoyNVrOFcUU1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY1MjIyMg==", "bodyText": "What is the purpose of !value !== undefined, should it be value !== undefined?", "url": "https://github.com/Graylog2/graylog2-server/pull/7108#discussion_r364652222", "createdAt": "2020-01-09T10:04:46Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/datatable/DataTableEntry.jsx", "diffHunk": "@@ -31,25 +32,34 @@ const _column = (field: string, value: *, selectedQuery: string, idx: number, ty\n   <td key={`${selectedQuery}-${field}=${value}-${idx}`}>\n     <AdditionalContext.Provider value={{ valuePath }}>\n       <CustomHighlighting field={field} value={value}>\n-        {value && <Value field={field} type={type} value={value} queryId={selectedQuery} render={DecoratedValue} />}\n+        {value !== null && !value !== undefined ? <Value field={field} type={type} value={value} queryId={selectedQuery} render={DecoratedValue} /> : <EmptyValue />}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "183069f9dcba0932466f9406e41ad8510131aff9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIzNzQ2Mw==", "bodyText": "Seems like it slipped in, fixed it. Thanks!", "url": "https://github.com/Graylog2/graylog2-server/pull/7108#discussion_r365237463", "createdAt": "2020-01-10T13:40:25Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/datatable/DataTableEntry.jsx", "diffHunk": "@@ -31,25 +32,34 @@ const _column = (field: string, value: *, selectedQuery: string, idx: number, ty\n   <td key={`${selectedQuery}-${field}=${value}-${idx}`}>\n     <AdditionalContext.Provider value={{ valuePath }}>\n       <CustomHighlighting field={field} value={value}>\n-        {value && <Value field={field} type={type} value={value} queryId={selectedQuery} render={DecoratedValue} />}\n+        {value !== null && !value !== undefined ? <Value field={field} type={type} value={value} queryId={selectedQuery} render={DecoratedValue} /> : <EmptyValue />}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY1MjIyMg=="}, "originalCommit": {"oid": "183069f9dcba0932466f9406e41ad8510131aff9"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjQ0ODk2OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/logic/valueactions/ShowDocumentsHandler.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDo0ODoxNVrOFbx3yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMzo0MDoxM1rOFcUUfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY3Mjk2OA==", "bodyText": "While testing these changes, I found another bug. When using the \"Show documents for value\" action, within a data table with the fields source and timestamp, the newly created widget will have these fields twice. Implementing something like this will fix the issue:\nconst newWidgetFields = uniq([...DEFAULT_MESSAGE_FIELDS, ...valuePathFields])\n...\n.fields(newWidgetFields)\n\nShould we fix the issue inside this PR or should I create an Issue, because the problem also exists in the master branch?", "url": "https://github.com/Graylog2/graylog2-server/pull/7108#discussion_r364672968", "createdAt": "2020-01-09T10:48:15Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/logic/valueactions/ShowDocumentsHandler.js", "diffHunk": "@@ -22,24 +22,35 @@ type Arguments = {\n   contexts: Contexts;\n };\n \n+const extractFieldsFromValuePath = (valuePath: ValuePath): Array<string> => {\n+  return valuePath.map(item => Object.entries(item)\n+    // $FlowFixMe: We know that values are strings\n+    .map(([key, value]: [string, string]) => (\n+      key === '_exists_' ? value : key)))\n+    .reduce((prev, cur) => [...prev, ...cur], [])\n+    .reduce((prev, cur) => (prev.includes(cur) ? prev : [...prev, cur]), []);\n+};\n+\n const ShowDocumentsHandler: ValueActionHandler = ({ contexts: { valuePath, widget, view } }: Arguments) => {\n   const mergedObject = valuePath.reduce((elem, acc) => ({ ...acc, ...elem }), {});\n   const widgetQuery = widget && widget.query ? widget.query.query_string : '';\n   const valuePathQuery = Object.entries(mergedObject)\n     .map(([k, v]) => `${k}:${escape(String(v))}`)\n     .reduce((prev: string, next: string) => addToQuery(prev, next), '');\n   const query = addToQuery(widgetQuery, valuePathQuery);\n+  const valuePathFields = extractFieldsFromValuePath(valuePath);\n   const newWidgetBuilder = MessagesWidget.builder()\n     .query(createElasticsearchQueryString(query))\n     .newId()\n     .config(new MessagesWidgetConfig.builder()\n-      .fields([...DEFAULT_MESSAGE_FIELDS, ...(Object.keys(mergedObject))])\n+      .fields([...DEFAULT_MESSAGE_FIELDS, ...valuePathFields])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "183069f9dcba0932466f9406e41ad8510131aff9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIzNzM3Mw==", "bodyText": "I fixed this in this PR as well. Thanks for finding this!", "url": "https://github.com/Graylog2/graylog2-server/pull/7108#discussion_r365237373", "createdAt": "2020-01-10T13:40:13Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/logic/valueactions/ShowDocumentsHandler.js", "diffHunk": "@@ -22,24 +22,35 @@ type Arguments = {\n   contexts: Contexts;\n };\n \n+const extractFieldsFromValuePath = (valuePath: ValuePath): Array<string> => {\n+  return valuePath.map(item => Object.entries(item)\n+    // $FlowFixMe: We know that values are strings\n+    .map(([key, value]: [string, string]) => (\n+      key === '_exists_' ? value : key)))\n+    .reduce((prev, cur) => [...prev, ...cur], [])\n+    .reduce((prev, cur) => (prev.includes(cur) ? prev : [...prev, cur]), []);\n+};\n+\n const ShowDocumentsHandler: ValueActionHandler = ({ contexts: { valuePath, widget, view } }: Arguments) => {\n   const mergedObject = valuePath.reduce((elem, acc) => ({ ...acc, ...elem }), {});\n   const widgetQuery = widget && widget.query ? widget.query.query_string : '';\n   const valuePathQuery = Object.entries(mergedObject)\n     .map(([k, v]) => `${k}:${escape(String(v))}`)\n     .reduce((prev: string, next: string) => addToQuery(prev, next), '');\n   const query = addToQuery(widgetQuery, valuePathQuery);\n+  const valuePathFields = extractFieldsFromValuePath(valuePath);\n   const newWidgetBuilder = MessagesWidget.builder()\n     .query(createElasticsearchQueryString(query))\n     .newId()\n     .config(new MessagesWidgetConfig.builder()\n-      .fields([...DEFAULT_MESSAGE_FIELDS, ...(Object.keys(mergedObject))])\n+      .fields([...DEFAULT_MESSAGE_FIELDS, ...valuePathFields])", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY3Mjk2OA=="}, "originalCommit": {"oid": "183069f9dcba0932466f9406e41ad8510131aff9"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3989, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}