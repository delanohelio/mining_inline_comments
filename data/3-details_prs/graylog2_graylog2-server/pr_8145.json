{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NDI1MjA0", "number": 8145, "title": "Add input selection for StreamRuleForm", "bodyText": "Description\nAdd a new StreamRuleType which matches Messages based on the input they are coming from.\nThe user can now select a input in the stream rule. The new stream rule match will then look if\nthe message has a gl2_source_input_id and will compare it to the user selected input id.\nMotivation and Context\nA often recurring use case for me is, that I create a new stream for a new input, right now I needed\nto make a match exactly rule, select the gl2_source_input_id and copy the input id into the value. This is error prone and take to long.\nHow Has This Been Tested?\n\nCreated new input and stream\nselected new input for the stream rule\nchecked that new messages were routed to the new stream coming from that input\n\nScreenshots (if appropriate):\n\nTBD\n\nI tested it with events as well but a second glance would be welcoming. The problem is, that\nevents do not have a gl2_source_input_id.\n\nTypes of changes\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.", "createdAt": "2020-05-18T11:01:14Z", "url": "https://github.com/Graylog2/graylog2-server/pull/8145", "merged": true, "mergeCommit": {"oid": "aabe1248ef529f1dda1d60649c9fa00943670d1f"}, "closed": true, "closedAt": "2020-07-20T14:02:52Z", "author": {"login": "kmerz"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcif52SgBqjMzNDczMzUzNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2yIs4gFqTQ1MTYzNTUzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6efd4a24f9e3a61231b2d697ea3aca033d7c841c", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/6efd4a24f9e3a61231b2d697ea3aca033d7c841c", "committedDate": "2020-05-18T12:20:02Z", "message": "Fix web linter"}, "afterCommit": {"oid": "94981df0805ad7e8607d435b6b51078e6e044bc4", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/94981df0805ad7e8607d435b6b51078e6e044bc4", "committedDate": "2020-05-18T13:29:34Z", "message": "Fix web linter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94981df0805ad7e8607d435b6b51078e6e044bc4", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/94981df0805ad7e8607d435b6b51078e6e044bc4", "committedDate": "2020-05-18T13:29:34Z", "message": "Fix web linter"}, "afterCommit": {"oid": "3429f4bf2ceb5348a0db5011c3456dd11104b6e7", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/3429f4bf2ceb5348a0db5011c3456dd11104b6e7", "committedDate": "2020-06-08T14:00:34Z", "message": "Add validation for selected input"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTkzMzYy", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#pullrequestreview-438993362", "createdAt": "2020-06-29T08:34:14Z", "commit": {"oid": "3429f4bf2ceb5348a0db5011c3456dd11104b6e7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODozNDoxNFrOGqKMig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODozNTozNVrOGqKPng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MDQyNg==", "bodyText": "IMO we can do a case-insensitive check in here, as afaics input IDs should be unique regarding the case.", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r446860426", "createdAt": "2020-06-29T08:34:14Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-server/src/main/java/org/graylog2/streams/matchers/MatchInput.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog2.streams.matchers;\n+\n+import org.graylog2.plugin.Message;\n+import org.graylog2.plugin.streams.StreamRule;\n+\n+public class MatchInput implements StreamRuleMatcher {\n+\n+    @Override\n+    public boolean match(Message msg, StreamRule rule) {\n+       if(msg.getField(Message.FIELD_GL2_SOURCE_INPUT) == null) {\n+           return rule.getInverted();\n+       }\n+        final String value = msg.getField(Message.FIELD_GL2_SOURCE_INPUT).toString();\n+        return rule.getInverted() ^ value.trim().equals(rule.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3429f4bf2ceb5348a0db5011c3456dd11104b6e7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MTIxNA==", "bodyText": "The rules list should be ordered by matching complexity of the rules (ascending), so the match input rules should be before or after exactRules.", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r446861214", "createdAt": "2020-06-29T08:35:35Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-server/src/main/java/org/graylog2/streams/StreamRouterEngine.java", "diffHunk": "@@ -135,6 +139,7 @@ public StreamRouterEngine(@Assisted List<Stream> streams,\n         this.rulesList.addAll(smallerRules);\n         this.rulesList.addAll(containsRules);\n         this.rulesList.addAll(regexRules);\n+        this.rulesList.addAll(matchInputRules);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3429f4bf2ceb5348a0db5011c3456dd11104b6e7"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3429f4bf2ceb5348a0db5011c3456dd11104b6e7", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/3429f4bf2ceb5348a0db5011c3456dd11104b6e7", "committedDate": "2020-06-08T14:00:34Z", "message": "Add validation for selected input"}, "afterCommit": {"oid": "7c8e8ade7024201c8fb363da04a49b49deff1f6d", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/7c8e8ade7024201c8fb363da04a49b49deff1f6d", "committedDate": "2020-07-02T09:19:25Z", "message": "Fix suggestions from @dennisoelkers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTUxODg3", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#pullrequestreview-444551887", "createdAt": "2020-07-08T09:05:03Z", "commit": {"oid": "b17c069d4eae077bbb372bbaca49adac1a612646"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwOTowNTowM1rOGue9hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwOTowNzo0NlrOGufDrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NDk1MA==", "bodyText": "The naming scheme for matchers is <Type>Matcher, so it should be InputMatcher for this one.", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r451394950", "createdAt": "2020-07-08T09:05:03Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-server/src/main/java/org/graylog2/streams/matchers/MatchInput.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog2.streams.matchers;\n+\n+import org.graylog2.plugin.Message;\n+import org.graylog2.plugin.streams.StreamRule;\n+\n+public class MatchInput implements StreamRuleMatcher {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17c069d4eae077bbb372bbaca49adac1a612646"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NTM1MA==", "bodyText": "It should be after the exactRules, as it does not do a contains check, but an equals check.", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r451395350", "createdAt": "2020-07-08T09:05:40Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-server/src/main/java/org/graylog2/streams/StreamRouterEngine.java", "diffHunk": "@@ -135,6 +139,7 @@ public StreamRouterEngine(@Assisted List<Stream> streams,\n         this.rulesList.addAll(smallerRules);\n         this.rulesList.addAll(containsRules);\n         this.rulesList.addAll(regexRules);\n+        this.rulesList.addAll(matchInputRules);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MTIxNA=="}, "originalCommit": {"oid": "3429f4bf2ceb5348a0db5011c3456dd11104b6e7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NjUyNA==", "bodyText": "Instead of message-id-... we should use input-id-... in the tests to make the intention clearer.", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r451396524", "createdAt": "2020-07-08T09:07:46Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-server/src/test/java/org/graylog2/streams/matchers/MatchInputTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog2.streams.matchers;\n+\n+import org.graylog2.plugin.Message;\n+import org.graylog2.plugin.streams.StreamRule;\n+import org.graylog2.plugin.streams.StreamRuleType;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class MatchInputTest extends MatcherTest {\n+\n+    @Test\n+    public void testSuccessfulMatch() {\n+        StreamRule rule = getSampleRule();\n+        rule.setValue(\"message-id-beef\");\n+\n+        Message msg = getSampleMessage();\n+        msg.addField(Message.FIELD_GL2_SOURCE_INPUT, \"message-id-beef\");\n+\n+        StreamRuleMatcher matcher = getMatcher(rule);\n+        assertTrue(matcher.match(msg, rule));\n+    }\n+\n+    @Test\n+    public void testUnsuccessfulMatch() {\n+        StreamRule rule = getSampleRule();\n+        rule.setValue(\"message-id-dead\");\n+\n+        Message msg = getSampleMessage();\n+        msg.addField(Message.FIELD_GL2_SOURCE_INPUT, \"message-id-beef\");\n+\n+        StreamRuleMatcher matcher = getMatcher(rule);\n+        assertFalse(matcher.match(msg, rule));\n+    }\n+\n+    @Test\n+    public void testUnsuccessfulMatchWhenMissing() {\n+        StreamRule rule = getSampleRule();\n+        rule.setValue(\"message-id-dead\");\n+\n+        Message msg = getSampleMessage();\n+\n+        StreamRuleMatcher matcher = getMatcher(rule);\n+        assertFalse(matcher.match(msg, rule));\n+    }\n+\n+    @Test\n+    public void testSuccessfulMatchInverted() {\n+        StreamRule rule = getSampleRule();\n+        rule.setValue(\"message-id-beef\");\n+        rule.setInverted(true);\n+\n+        Message msg = getSampleMessage();\n+        msg.addField(Message.FIELD_GL2_SOURCE_INPUT, \"message-id-beef\");\n+\n+        StreamRuleMatcher matcher = getMatcher(rule);\n+        assertFalse(matcher.match(msg, rule));\n+    }\n+\n+    @Test\n+    public void testUnsuccessfulMatchInverted() {\n+        StreamRule rule = getSampleRule();\n+        rule.setValue(\"message-id-dead\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17c069d4eae077bbb372bbaca49adac1a612646"}, "originalPosition": 80}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b17c069d4eae077bbb372bbaca49adac1a612646", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/b17c069d4eae077bbb372bbaca49adac1a612646", "committedDate": "2020-07-02T12:21:45Z", "message": "Fix snapshot tests"}, "afterCommit": {"oid": "917f2b2b1fa709129d482d798df0d3b95716b9ce", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/917f2b2b1fa709129d482d798df0d3b95716b9ce", "committedDate": "2020-07-09T17:34:40Z", "message": "Fix really good annotations from @dennisoelkers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MDQ4NzA4", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#pullrequestreview-448048708", "createdAt": "2020-07-14T12:14:13Z", "commit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoxNDoxM1rOGxQ9Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoyMDo0MFrOGxRKoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMTIxNQ==", "bodyText": "The function name is giving the wrong impression of what it's doing. It should be something like findInput.", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454311215", "createdAt": "2020-07-14T12:14:13Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -23,7 +20,21 @@ class HumanReadableStreamRule extends React.Component {\n     return undefined;\n   };\n \n+  _inputName = (inputId) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxNDY1Nw==", "bodyText": "Right now, if the input does not exist/is not started, only the id is shown. IMO we should also show an indicator, something like <deleted input>, like we do in message details.", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454314657", "createdAt": "2020-07-14T12:20:40Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -23,7 +20,21 @@ class HumanReadableStreamRule extends React.Component {\n     return undefined;\n   };\n \n+  _inputName = (inputId) => {\n+    const { inputs } = this.props;\n+\n+    return inputs.find((input) => input.id === inputId);\n+  }\n+\n   _formatRuleValue = (streamRule) => {\n+    if (String(streamRule.type) === String(this.MATCH_INPUT)) {\n+      const input = this._inputName(streamRule.value);\n+\n+      if (input) {\n+        return `${input.title} (${input.name}: ${input.id})`;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MDc5MTky", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#pullrequestreview-448079192", "createdAt": "2020-07-14T12:56:38Z", "commit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjo1NjozOFrOGxSb8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMzowNDoxM1rOGxStyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzNTQ3NQ==", "bodyText": "We do this String coercion a few times, not sure if it's worth doing once and setting as a const then comparing throughout the code?", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454335475", "createdAt": "2020-07-14T12:56:38Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -40,6 +51,10 @@ class HumanReadableStreamRule extends React.Component {\n       return streamRule.field;\n     }\n \n+    if (String(streamRule.type) === String(this.MATCH_INPUT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzNTYwNA==", "bodyText": "Is it possible to use shape here?", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454335604", "createdAt": "2020-07-14T12:56:52Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -63,4 +78,14 @@ class HumanReadableStreamRule extends React.Component {\n   }\n }\n \n+HumanReadableStreamRule.propTypes = {\n+  streamRule: PropTypes.object.isRequired,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzNTY4NA==", "bodyText": "Is it possible to use arrayOf here?", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454335684", "createdAt": "2020-07-14T12:57:01Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -63,4 +78,14 @@ class HumanReadableStreamRule extends React.Component {\n   }\n }\n \n+HumanReadableStreamRule.propTypes = {\n+  streamRule: PropTypes.object.isRequired,\n+  streamRuleTypes: PropTypes.array.isRequired,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzNTgyNg==", "bodyText": "Is it possible to use arrayOf here?", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454335826", "createdAt": "2020-07-14T12:57:16Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -63,4 +78,14 @@ class HumanReadableStreamRule extends React.Component {\n   }\n }\n \n+HumanReadableStreamRule.propTypes = {\n+  streamRule: PropTypes.object.isRequired,\n+  streamRuleTypes: PropTypes.array.isRequired,\n+  inputs: PropTypes.array,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzNzMzNQ==", "bodyText": "Is it possible for this to be arrayOf?", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454337335", "createdAt": "2020-07-14T12:59:40Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/components/streamrules/StreamRuleForm.jsx", "diffHunk": "@@ -129,10 +244,10 @@ StreamRuleForm.propTypes = {\n   streamRule: PropTypes.object,\n   streamRuleTypes: PropTypes.array.isRequired,\n   title: PropTypes.string.isRequired,\n+  inputs: PropTypes.array,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "originalPosition": 262}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzODk0Ng==", "bodyText": "I think constructor needs to pass props to super or else it could lead to bugs\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              constructor() {\n          \n          \n            \n                super();\n          \n          \n            \n              constructor(props) {\n          \n          \n            \n                super(props);", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454338946", "createdAt": "2020-07-14T13:02:29Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/components/streamrules/StreamRulesEditor.jsx", "diffHunk": "@@ -46,7 +46,13 @@ class StreamRulesEditor extends React.Component {\n     index: '',\n   }\n \n-  state = {};\n+  constructor() {\n+    super();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM0MDA0Mg==", "bodyText": "Could we use components/bootstrap/BootstrapModalConfirm.jsx instead of window.confirm?", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454340042", "createdAt": "2020-07-14T13:04:13Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/components/streams/Stream.jsx", "diffHunk": "@@ -78,10 +78,19 @@ class Stream extends React.Component {\n \n     this.state = {\n       loading: false,\n+      showStreamRuleForm: false,\n     };\n   }\n \n-  _onDelete = (stream) => {\n+  _closeStreamRuleForm = () => {\n+    this.setState({ showStreamRuleForm: false });\n+  };\n+\n+  _openStreamRuleForm = () => {\n+    this.setState({ showStreamRuleForm: true });\n+  };\n+\n+  _onDelete= (stream) => {\n     // eslint-disable-next-line no-alert\n     if (window.confirm('Do you really want to remove this stream?')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b759aa8c72efeea5a3411dce8f0f65a6fc2688c", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/7b759aa8c72efeea5a3411dce8f0f65a6fc2688c", "committedDate": "2020-07-16T06:53:32Z", "message": "Add backend logic to match streams based on an input"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea068a22762629a3ec2e422ae057750e998758da", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/ea068a22762629a3ec2e422ae057750e998758da", "committedDate": "2020-07-16T06:53:32Z", "message": "Add frontend logic and add fixes to backend"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51fdb921e5060226ebfc4a0df32767533de4ba5d", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/51fdb921e5060226ebfc4a0df32767533de4ba5d", "committedDate": "2020-07-16T06:53:33Z", "message": "Add MatchInput tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2fc1b2b5ada86ae5fe0b587368a15018329033b", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/f2fc1b2b5ada86ae5fe0b587368a15018329033b", "committedDate": "2020-07-16T06:53:33Z", "message": "Add flow annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55508c61eb0ecaaf1b97d4b74d6e69bf8830cef5", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/55508c61eb0ecaaf1b97d4b74d6e69bf8830cef5", "committedDate": "2020-07-16T06:53:33Z", "message": "Add some basic test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89a7d60a081b936d24b5d1336c8a8f3aec0f2626", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/89a7d60a081b936d24b5d1336c8a8f3aec0f2626", "committedDate": "2020-07-16T06:53:34Z", "message": "Add missing license headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ffc170d71f9d040e8a104315ec3be22f22b362f", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/7ffc170d71f9d040e8a104315ec3be22f22b362f", "committedDate": "2020-07-16T06:53:34Z", "message": "Fix web linter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b88f54388fe0de932e5246b783c7d64405383dfb", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/b88f54388fe0de932e5246b783c7d64405383dfb", "committedDate": "2020-07-16T06:53:34Z", "message": "Fix human readable stream rule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7797f37e7dc1aeb01439e03491524fc613bd2619", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/7797f37e7dc1aeb01439e03491524fc613bd2619", "committedDate": "2020-07-16T06:53:35Z", "message": "Add validation for selected input"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bc467c32e0731a32d824061edb84456a25358da", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/7bc467c32e0731a32d824061edb84456a25358da", "committedDate": "2020-07-16T06:53:35Z", "message": "Fix suggestions from @dennisoelkers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0110a880f7b9bf547717d1061e865a3fcc1ced8", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a0110a880f7b9bf547717d1061e865a3fcc1ced8", "committedDate": "2020-07-16T06:53:35Z", "message": "Fix linter warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a76a51e8acd1f1e9975aa87cb17a3d1f8a106972", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a76a51e8acd1f1e9975aa87cb17a3d1f8a106972", "committedDate": "2020-07-16T06:53:36Z", "message": "Fix linter and build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cacee30e33cb34ea1727f1c97f6c2f98bb48b7f1", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/cacee30e33cb34ea1727f1c97f6c2f98bb48b7f1", "committedDate": "2020-07-16T06:53:36Z", "message": "Fix linter warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "459db861e4cc9a364c57b6fd61e8279e562a87b9", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/459db861e4cc9a364c57b6fd61e8279e562a87b9", "committedDate": "2020-07-16T06:53:36Z", "message": "Fix snapshot tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d55b6558d98c1c9842d1d6bc900364830283194", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/6d55b6558d98c1c9842d1d6bc900364830283194", "committedDate": "2020-07-16T06:53:37Z", "message": "Fix really good annotations from @dennisoelkers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6609946c340fa3cc9b1e985b61fd3ca1f6da7ce8", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/6609946c340fa3cc9b1e985b61fd3ca1f6da7ce8", "committedDate": "2020-07-16T06:53:37Z", "message": "Fix snapshot tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffd7f12ae9bb842f2e5d8bffb5edea869a4a2035", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/ffd7f12ae9bb842f2e5d8bffb5edea869a4a2035", "committedDate": "2020-07-16T07:03:28Z", "message": "Fix annotations from @dennisoelkers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6288af01bcc2d3b0585116d3022f9de97c7e52ba", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/6288af01bcc2d3b0585116d3022f9de97c7e52ba", "committedDate": "2020-07-09T17:45:48Z", "message": "Fix snapshot tests"}, "afterCommit": {"oid": "ffd7f12ae9bb842f2e5d8bffb5edea869a4a2035", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/ffd7f12ae9bb842f2e5d8bffb5edea869a4a2035", "committedDate": "2020-07-16T07:03:28Z", "message": "Fix annotations from @dennisoelkers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b31bc4881b545aa707b98da596ebbf79df0abeb", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/4b31bc4881b545aa707b98da596ebbf79df0abeb", "committedDate": "2020-07-16T07:44:39Z", "message": "Update snapshots"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1201868e8b4aecb2e4e82fc402bdb2bc2886325c", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/1201868e8b4aecb2e4e82fc402bdb2bc2886325c", "committedDate": "2020-07-16T07:47:52Z", "message": "Update graylog2-web-interface/src/components/streamrules/StreamRulesEditor.jsx\n\nCo-authored-by: Kyle Knight <kyle@graylog.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjM1NTM4", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#pullrequestreview-451635538", "createdAt": "2020-07-20T14:02:45Z", "commit": {"oid": "1201868e8b4aecb2e4e82fc402bdb2bc2886325c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3231, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}