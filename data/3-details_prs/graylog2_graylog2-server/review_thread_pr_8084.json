{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTMzODIz", "number": 8084, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozOTo0OFrOD_u2uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0NTo1OFrOD_vC1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTU0NTU1OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/views/ViewPropertiesModal.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozOTo0OFrOGakV-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozOTo0OFrOGakV-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxMTYxMA==", "bodyText": "I does not have to be in this PR, but wouldn't it be wiser to make a functional component of this component, instead of adding a UNSAFE_", "url": "https://github.com/Graylog2/graylog2-server/pull/8084#discussion_r430511610", "createdAt": "2020-05-26T15:39:48Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/views/components/views/ViewPropertiesModal.jsx", "diffHunk": "@@ -23,7 +24,8 @@ export default class ViewPropertiesModal extends React.Component {\n     };\n   }\n \n-  componentWillReceiveProps(nextProps) {\n+  // eslint-disable-next-line camelcase", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41541b815e9b4ecdf4794e676f562d05be049fb9"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTU2MDkyOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/views/ViewPropertiesModal.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0MjoyM1rOGakfrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0MjoyM1rOGakfrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxNDA5Mw==", "bodyText": "When we turn this into a functional component, we should do something better then comparing the whole view.\n\nit is not very efficient\nwe do not really care about the whole view if I am not wrong", "url": "https://github.com/Graylog2/graylog2-server/pull/8084#discussion_r430514093", "createdAt": "2020-05-26T15:42:23Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/views/components/views/ViewPropertiesModal.jsx", "diffHunk": "@@ -23,7 +24,8 @@ export default class ViewPropertiesModal extends React.Component {\n     };\n   }\n \n-  componentWillReceiveProps(nextProps) {\n+  // eslint-disable-next-line camelcase\n+  UNSAFE_componentWillReceiveProps(nextProps) {\n     const { title } = this.props;\n     const { view } = this.state;\n     if (title !== nextProps.title || !isEqual(view, nextProps.view)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41541b815e9b4ecdf4794e676f562d05be049fb9"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTU3NjUyOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/sidebar/ViewDescription.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0NTo1OFrOGakpiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0NTo1OFrOGakpiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxNjYxOQ==", "bodyText": "The order of Sections does not make much sense to me:\n\nI would rather have the description and summary together and the result in the beginning or the end.", "url": "https://github.com/Graylog2/graylog2-server/pull/8084#discussion_r430516619", "createdAt": "2020-05-26T15:45:58Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/views/components/sidebar/ViewDescription.jsx", "diffHunk": "@@ -1,46 +1,55 @@\n // @flow strict\n-import React from 'react';\n+import * as React from 'react';\n+import { useContext } from 'react';\n import styled from 'styled-components';\n import PropTypes from 'prop-types';\n \n import type { ViewMetaData } from 'views/stores/ViewMetadataStore';\n+import QueryResult from 'views/logic/QueryResult';\n \n-import IfDashboard from 'views/components/dashboard/IfDashboard';\n+import ViewTypeLabel from 'views/components/ViewTypeLabel';\n+import ViewTypeContext from 'views/components/contexts/ViewTypeContext';\n import { SearchResultOverview } from 'views/components/sidebar';\n \n const Section = styled.div`\n   margin-bottom: 8px;\n `;\n \n-const defaultNewDashboardSummary = 'No dashboard summary.';\n-\n type Props = {\n-  results: Object,\n+  results: QueryResult,\n   viewMetadata: ViewMetaData,\n };\n \n const ViewDescription = ({ results, viewMetadata }: Props) => {\n-  const formatDashboardDescription = (view: ViewMetaData) => {\n-    const { description } = view;\n-    if (description) {\n-      return <span>{description}</span>;\n-    }\n-    return <i>No dashboard description.</i>;\n-  };\n+  const isAdHocSearch = !viewMetadata.id;\n+  const viewType = useContext(ViewTypeContext);\n+  const viewTypeLabel = viewType ? <ViewTypeLabel type={viewType} /> : '';\n+  const resultsSection = (\n+    <Section>\n+      <SearchResultOverview results={results} />\n+    </Section>\n+  );\n \n-  return (\n-    <>\n-      <IfDashboard>\n+  if (isAdHocSearch) {\n+    return (\n+      <>\n+        {resultsSection}\n         <Section>\n-          {viewMetadata.summary || defaultNewDashboardSummary}\n+          <i>Save the search or export it to a dashboard to add a custom description.</i>\n         </Section>\n-      </IfDashboard>\n+      </>\n+    );\n+  }\n+\n+  return (\n+    <>\n+      <Section>\n+        {viewMetadata.summary || <i>No {viewTypeLabel} summary.</i>}\n+      </Section>\n+      {resultsSection}\n       <Section>\n-        <SearchResultOverview results={results} />\n+        {viewMetadata.description || <i>No {viewTypeLabel} description.</i>}\n       </Section>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41541b815e9b4ecdf4794e676f562d05be049fb9"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4287, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}