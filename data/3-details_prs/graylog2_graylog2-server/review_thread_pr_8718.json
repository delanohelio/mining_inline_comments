{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTEzMDk2", "number": 8718, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowNTo0MFrOEX_GMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyMDo1OFrOEYAk2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTg2NDgyOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/components/navigation/UserMenu.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowNTo0MFrOHAE5ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowNTo0MFrOHAE5ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0MjM2Mg==", "bodyText": "ThemeModeToggle does not take a username as props. Or am I wrong?", "url": "https://github.com/Graylog2/graylog2-server/pull/8718#discussion_r469842362", "createdAt": "2020-08-13T10:05:40Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/components/navigation/UserMenu.jsx", "diffHunk": "@@ -29,6 +31,10 @@ class UserMenu extends React.Component {\n                    noCaret>\n         <MenuItem header>{fullName}</MenuItem>\n         <MenuItem divider />\n+        <MenuItem header>\n+          <ThemeModeToggle username={loginName} />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01d8b52f2f75e06541b0971d8a22b62cc3d3dabe"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTg3MjcwOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/hooks/usePrefersColorScheme.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowNzo1N1rOHAE-dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjozODoyNlrOHAJnCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0MzU3Mw==", "bodyText": "useBrowserColorScheme ???", "url": "https://github.com/Graylog2/graylog2-server/pull/8718#discussion_r469843573", "createdAt": "2020-08-13T10:07:57Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/hooks/usePrefersColorScheme.js", "diffHunk": "@@ -0,0 +1,50 @@\n+import { useState, useEffect } from 'react';\n+\n+import { THEME_MODE_DARK, THEME_MODE_LIGHT } from 'theme/constants';\n+\n+// * https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n+// * https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\n+// * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries\n+// * https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme\n+\n+const usePrefersColorScheme = () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01d8b52f2f75e06541b0971d8a22b62cc3d3dabe"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxOTQ5OA==", "bodyText": "It is called prefers-color-scheme.\nI feel it makes the most sense to use the actual name of the property.", "url": "https://github.com/Graylog2/graylog2-server/pull/8718#discussion_r469919498", "createdAt": "2020-08-13T12:38:26Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/hooks/usePrefersColorScheme.js", "diffHunk": "@@ -0,0 +1,50 @@\n+import { useState, useEffect } from 'react';\n+\n+import { THEME_MODE_DARK, THEME_MODE_LIGHT } from 'theme/constants';\n+\n+// * https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n+// * https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\n+// * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries\n+// * https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme\n+\n+const usePrefersColorScheme = () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0MzU3Mw=="}, "originalCommit": {"oid": "01d8b52f2f75e06541b0971d8a22b62cc3d3dabe"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjEwNzEzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/theme/GraylogThemeProvider.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyMDo1OFrOHAHL1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyMDo1OFrOHAHL1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg3OTc2Ng==", "bodyText": "I guess it is a matter of taste, but I would rather have a deconstructed import of useState and co.", "url": "https://github.com/Graylog2/graylog2-server/pull/8718#discussion_r469879766", "createdAt": "2020-08-13T11:20:58Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/theme/GraylogThemeProvider.jsx", "diffHunk": "@@ -1,30 +1,112 @@\n-import React from 'react';\n+// @flow strict\n+import * as React from 'react';\n import PropTypes from 'prop-types';\n import { ThemeProvider } from 'styled-components';\n \n+import { useStore } from 'stores/connect';\n+import Store from 'logic/local-storage/Store';\n import { breakpoints, colors, fonts, utils } from 'theme';\n+import type { ThemeInterface } from 'theme';\n+import usePrefersColorScheme from 'hooks/usePrefersColorScheme';\n import buttonStyles from 'components/graylog/styles/buttonStyles';\n import aceEditorStyles from 'components/graylog/styles/aceEditorStyles';\n+import StoreProvider from 'injection/StoreProvider';\n+import CombinedProvider from 'injection/CombinedProvider';\n \n-/* NOTE: mode will eventually need to come from User Preferences */\n-const THEME_MODE = 'teinte';\n-\n-const GraylogThemeProvider = ({ children }) => {\n-  return (\n-    <ThemeProvider theme={{\n-      mode: THEME_MODE,\n-      breakpoints,\n-      colors,\n-      fonts,\n-      components: {\n-        button: buttonStyles({ colors, utils }),\n-        aceEditor: aceEditorStyles({ colors }),\n-      },\n-      utils,\n-    }}>\n+import { PREFERENCES_THEME_MODE, DEFAULT_THEME_MODE, THEME_MODE_DARK, THEME_MODE_LIGHT } from './constants';\n+\n+type Props = {\n+  children: React.Node,\n+};\n+\n+const { CurrentUserStore } = CombinedProvider.get('CurrentUser');\n+const PreferencesStore = StoreProvider.getStore('Preferences');\n+\n+const GraylogThemeProvider = ({ children }: Props) => {\n+  const colorScheme = usePrefersColorScheme();\n+  const [theme, setTheme] = React.useState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01d8b52f2f75e06541b0971d8a22b62cc3d3dabe"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4094, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}