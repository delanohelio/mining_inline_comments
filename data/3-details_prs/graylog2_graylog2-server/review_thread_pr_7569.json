{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwODMzNzc3", "number": 7569, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoxOToxN1rODlIedg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozODo0NFrODlI5DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjYyNzc0OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoxOToxN1rOFx2Uzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOTo1Mjo0N1rOFyM6OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNDYwNg==", "bodyText": "It's unclear at first glance where \"stream1\" and \"someField\" come from.\nI'd suggest either declaring them in variables at the start of test and passing them down or extracting them from the messageList object.", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r387814606", "createdAt": "2020-03-04T17:19:17Z", "author": {"login": "alex-konn"}, "path": "graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java", "diffHunk": "@@ -88,6 +92,47 @@ public void appliesDecoratorsToQueryStringIfHighlightingActivated() {\n         JsonPathAssert.assertThat(doc).jsonPathAsString(\"$.highlight.highlight_query.query_string.query\").isEqualTo(\"Foobar!\");\n     }\n \n+    @Test\n+    public void passesTypeOfSortingFieldAsUnmappedType() {\n+        final MessageList messageList = someMessageListWithSorting();\n+        final ESGeneratedQueryContext context = mockQueryContext(messageList);\n+        when(context.fieldTypes(Collections.singleton(\"stream1\"))).thenReturn(Collections.singletonMap(\"somefield\", Collections.singleton(\"long\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473e7fe19e5f53bb64036b1536da5ffa6aac8194"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4NDYzMg==", "bodyText": "I decided to pass them to the method generating the message list, so they are close to the assertion.", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r388184632", "createdAt": "2020-03-05T09:52:47Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java", "diffHunk": "@@ -88,6 +92,47 @@ public void appliesDecoratorsToQueryStringIfHighlightingActivated() {\n         JsonPathAssert.assertThat(doc).jsonPathAsString(\"$.highlight.highlight_query.query_string.query\").isEqualTo(\"Foobar!\");\n     }\n \n+    @Test\n+    public void passesTypeOfSortingFieldAsUnmappedType() {\n+        final MessageList messageList = someMessageListWithSorting();\n+        final ESGeneratedQueryContext context = mockQueryContext(messageList);\n+        when(context.fieldTypes(Collections.singleton(\"stream1\"))).thenReturn(Collections.singletonMap(\"somefield\", Collections.singleton(\"long\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNDYwNg=="}, "originalCommit": {"oid": "473e7fe19e5f53bb64036b1536da5ffa6aac8194"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjYzMDM3OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoyMDowMVrOFx2Wcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOTo1Mjo1MlrOFyM6ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNTAyNg==", "bodyText": "Pass in allFieldTypes directly instead of both the context and the stream IDs.", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r387815026", "createdAt": "2020-03-04T17:20:01Z", "author": {"login": "alex-konn"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java", "diffHunk": "@@ -83,8 +85,22 @@ public void doGenerateQueryPart(SearchJob job, Query query, MessageList messageL\n \n         applyHighlightingIfActivated(searchSourceBuilder, job, query);\n \n+        final Set<String> effectiveStreamIds = messageList.effectiveStreams().isEmpty()\n+                ? query.usedStreamIds()\n+                : messageList.effectiveStreams();\n+\n         final List<Sort> sorts = firstNonNull(messageList.sort(), Collections.singletonList(Sort.create(Message.FIELD_TIMESTAMP, SortOrder.DESC)));\n-        sorts.forEach(sort -> searchSourceBuilder.sort(sort.field(), sort.order()));\n+        sorts.forEach(sort -> searchSourceBuilder.sort(\n+                SortBuilders.fieldSort(sort.field())\n+                        .order(sort.order())\n+                        .unmappedType(unmappedTypeForSort(sort, queryContext, effectiveStreamIds))\n+        ));\n+    }\n+\n+    private String unmappedTypeForSort(Sort sort, ESGeneratedQueryContext queryContext, Set<String> effectiveStreamIds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473e7fe19e5f53bb64036b1536da5ffa6aac8194"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4NDY3Nw==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r388184677", "createdAt": "2020-03-05T09:52:52Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java", "diffHunk": "@@ -83,8 +85,22 @@ public void doGenerateQueryPart(SearchJob job, Query query, MessageList messageL\n \n         applyHighlightingIfActivated(searchSourceBuilder, job, query);\n \n+        final Set<String> effectiveStreamIds = messageList.effectiveStreams().isEmpty()\n+                ? query.usedStreamIds()\n+                : messageList.effectiveStreams();\n+\n         final List<Sort> sorts = firstNonNull(messageList.sort(), Collections.singletonList(Sort.create(Message.FIELD_TIMESTAMP, SortOrder.DESC)));\n-        sorts.forEach(sort -> searchSourceBuilder.sort(sort.field(), sort.order()));\n+        sorts.forEach(sort -> searchSourceBuilder.sort(\n+                SortBuilders.fieldSort(sort.field())\n+                        .order(sort.order())\n+                        .unmappedType(unmappedTypeForSort(sort, queryContext, effectiveStreamIds))\n+        ));\n+    }\n+\n+    private String unmappedTypeForSort(Sort sort, ESGeneratedQueryContext queryContext, Set<String> effectiveStreamIds) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNTAyNg=="}, "originalCommit": {"oid": "473e7fe19e5f53bb64036b1536da5ffa6aac8194"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjY0OTU3OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoyNToyOVrOFx2igA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOTo1Mjo1OVrOFyM6oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxODExMg==", "bodyText": "I'd suggest pushing the null check down to ESGeneratedQueryContext or even FieldTypesLookup.\nI even think all of the logic in this method could be pushed down to FieldTypesLookup. Instead of asking for all field types for these streams, ask explicitly for the type of the field, i.e., FieldTypesLookup#getType(String fieldName, Set<String> streamIds). That would encapsulate all this stuff in FieldTypesLookup and this method could be replaced with: queryContext.getFieldType(sort.field(), effectiveStreamIds)", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r387818112", "createdAt": "2020-03-04T17:25:29Z", "author": {"login": "alex-konn"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java", "diffHunk": "@@ -83,8 +85,22 @@ public void doGenerateQueryPart(SearchJob job, Query query, MessageList messageL\n \n         applyHighlightingIfActivated(searchSourceBuilder, job, query);\n \n+        final Set<String> effectiveStreamIds = messageList.effectiveStreams().isEmpty()\n+                ? query.usedStreamIds()\n+                : messageList.effectiveStreams();\n+\n         final List<Sort> sorts = firstNonNull(messageList.sort(), Collections.singletonList(Sort.create(Message.FIELD_TIMESTAMP, SortOrder.DESC)));\n-        sorts.forEach(sort -> searchSourceBuilder.sort(sort.field(), sort.order()));\n+        sorts.forEach(sort -> searchSourceBuilder.sort(\n+                SortBuilders.fieldSort(sort.field())\n+                        .order(sort.order())\n+                        .unmappedType(unmappedTypeForSort(sort, queryContext, effectiveStreamIds))\n+        ));\n+    }\n+\n+    private String unmappedTypeForSort(Sort sort, ESGeneratedQueryContext queryContext, Set<String> effectiveStreamIds) {\n+        final Map<String, Set<String>> allFieldTypes = firstNonNull(queryContext.fieldTypes(effectiveStreamIds), Collections.emptyMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473e7fe19e5f53bb64036b1536da5ffa6aac8194"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4NDczNg==", "bodyText": "Good idea! \u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r388184736", "createdAt": "2020-03-05T09:52:59Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java", "diffHunk": "@@ -83,8 +85,22 @@ public void doGenerateQueryPart(SearchJob job, Query query, MessageList messageL\n \n         applyHighlightingIfActivated(searchSourceBuilder, job, query);\n \n+        final Set<String> effectiveStreamIds = messageList.effectiveStreams().isEmpty()\n+                ? query.usedStreamIds()\n+                : messageList.effectiveStreams();\n+\n         final List<Sort> sorts = firstNonNull(messageList.sort(), Collections.singletonList(Sort.create(Message.FIELD_TIMESTAMP, SortOrder.DESC)));\n-        sorts.forEach(sort -> searchSourceBuilder.sort(sort.field(), sort.order()));\n+        sorts.forEach(sort -> searchSourceBuilder.sort(\n+                SortBuilders.fieldSort(sort.field())\n+                        .order(sort.order())\n+                        .unmappedType(unmappedTypeForSort(sort, queryContext, effectiveStreamIds))\n+        ));\n+    }\n+\n+    private String unmappedTypeForSort(Sort sort, ESGeneratedQueryContext queryContext, Set<String> effectiveStreamIds) {\n+        final Map<String, Set<String>> allFieldTypes = firstNonNull(queryContext.fieldTypes(effectiveStreamIds), Collections.emptyMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxODExMg=="}, "originalCommit": {"oid": "473e7fe19e5f53bb64036b1536da5ffa6aac8194"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjY5NTgxOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozODo0NFrOFx2_kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOTo1MzowNlrOFyM61Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyNTU1NQ==", "bodyText": "This and the next test would become obsolete, if you followed my suggestion above to move that logic into FieldTypeLookup. I would add a few simpler unit tests for FieldTypesLookup instead.", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r387825555", "createdAt": "2020-03-04T17:38:44Z", "author": {"login": "alex-konn"}, "path": "graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java", "diffHunk": "@@ -88,6 +92,47 @@ public void appliesDecoratorsToQueryStringIfHighlightingActivated() {\n         JsonPathAssert.assertThat(doc).jsonPathAsString(\"$.highlight.highlight_query.query_string.query\").isEqualTo(\"Foobar!\");\n     }\n \n+    @Test\n+    public void passesTypeOfSortingFieldAsUnmappedType() {\n+        final MessageList messageList = someMessageListWithSorting();\n+        final ESGeneratedQueryContext context = mockQueryContext(messageList);\n+        when(context.fieldTypes(Collections.singleton(\"stream1\"))).thenReturn(Collections.singletonMap(\"somefield\", Collections.singleton(\"long\")));\n+\n+        final ESGeneratedQueryContext queryContext = generateQueryPartWithContextFor(messageList, true, Collections.emptySet(), context);\n+\n+        final DocumentContext doc = JsonPath.parse(queryContext.searchSourceBuilder(messageList).toString());\n+        JsonPathAssert.assertThat(doc).jsonPathAsString(\"$.sort[0].somefield.unmapped_type\").isEqualTo(\"long\");\n+    }\n+\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473e7fe19e5f53bb64036b1536da5ffa6aac8194"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4NDc4OQ==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r388184789", "createdAt": "2020-03-05T09:53:06Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java", "diffHunk": "@@ -88,6 +92,47 @@ public void appliesDecoratorsToQueryStringIfHighlightingActivated() {\n         JsonPathAssert.assertThat(doc).jsonPathAsString(\"$.highlight.highlight_query.query_string.query\").isEqualTo(\"Foobar!\");\n     }\n \n+    @Test\n+    public void passesTypeOfSortingFieldAsUnmappedType() {\n+        final MessageList messageList = someMessageListWithSorting();\n+        final ESGeneratedQueryContext context = mockQueryContext(messageList);\n+        when(context.fieldTypes(Collections.singleton(\"stream1\"))).thenReturn(Collections.singletonMap(\"somefield\", Collections.singleton(\"long\")));\n+\n+        final ESGeneratedQueryContext queryContext = generateQueryPartWithContextFor(messageList, true, Collections.emptySet(), context);\n+\n+        final DocumentContext doc = JsonPath.parse(queryContext.searchSourceBuilder(messageList).toString());\n+        JsonPathAssert.assertThat(doc).jsonPathAsString(\"$.sort[0].somefield.unmapped_type\").isEqualTo(\"long\");\n+    }\n+\n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyNTU1NQ=="}, "originalCommit": {"oid": "473e7fe19e5f53bb64036b1536da5ffa6aac8194"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3805, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}