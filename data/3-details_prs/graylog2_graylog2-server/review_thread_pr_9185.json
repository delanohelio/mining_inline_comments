{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0ODEzODIy", "number": 9185, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMjo0M1rOEvcq8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjozNzowMlrOEvnpsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTg4Mjc0OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/test/java/org/graylog/testing/UserServiceExtension.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMjo0M1rOHkcCbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTozNjo1MFrOHkesJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3MDE1Ng==", "bodyText": "Should we only inject TestUserService instances? That would make it clear that the user of the extension gets a TestUserService and not a fully featured UserServiceImpl. (we might want to rename the extension to TestUserServiceExtension in that case, too)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (UserService.class.equals(parameterType)) {\n          \n          \n            \n                    if (TeamUserService.class.equals(parameterType)) {", "url": "https://github.com/Graylog2/graylog2-server/pull/9185#discussion_r507970156", "createdAt": "2020-10-19T18:22:43Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/test/java/org/graylog/testing/UserServiceExtension.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.testing;\n+\n+import org.graylog.testing.mongodb.MongoDBExtension;\n+import org.graylog.testing.mongodb.MongoDBTestService;\n+import org.graylog2.shared.users.UserService;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+import org.junit.jupiter.api.extension.ParameterContext;\n+import org.junit.jupiter.api.extension.ParameterResolutionException;\n+import org.junit.jupiter.api.extension.ParameterResolver;\n+\n+import java.util.Objects;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class UserServiceExtension implements ParameterResolver {\n+    @Override\n+    public boolean supportsParameter(ParameterContext parameterContext, ExtensionContext extensionContext) throws ParameterResolutionException {\n+        return Objects.equals(UserService.class, parameterContext.getParameter().getType());\n+    }\n+\n+    @Override\n+    public Object resolveParameter(ParameterContext parameterContext, ExtensionContext extensionContext) throws ParameterResolutionException {\n+        final Class<?> parameterType = parameterContext.getParameter().getType();\n+\n+        if (UserService.class.equals(parameterType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba1dd73d6d2b568e1ba527f258c40476609979c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAxMzYwNw==", "bodyText": "Makes sense \ud83d\udc4d", "url": "https://github.com/Graylog2/graylog2-server/pull/9185#discussion_r508013607", "createdAt": "2020-10-19T19:36:50Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/test/java/org/graylog/testing/UserServiceExtension.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.testing;\n+\n+import org.graylog.testing.mongodb.MongoDBExtension;\n+import org.graylog.testing.mongodb.MongoDBTestService;\n+import org.graylog2.shared.users.UserService;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+import org.junit.jupiter.api.extension.ParameterContext;\n+import org.junit.jupiter.api.extension.ParameterResolutionException;\n+import org.junit.jupiter.api.extension.ParameterResolver;\n+\n+import java.util.Objects;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class UserServiceExtension implements ParameterResolver {\n+    @Override\n+    public boolean supportsParameter(ParameterContext parameterContext, ExtensionContext extensionContext) throws ParameterResolutionException {\n+        return Objects.equals(UserService.class, parameterContext.getParameter().getType());\n+    }\n+\n+    @Override\n+    public Object resolveParameter(ParameterContext parameterContext, ExtensionContext extensionContext) throws ParameterResolutionException {\n+        final Class<?> parameterType = parameterContext.getParameter().getType();\n+\n+        if (UserService.class.equals(parameterType)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3MDE1Ng=="}, "originalCommit": {"oid": "2ba1dd73d6d2b568e1ba527f258c40476609979c"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzY4MTc2OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/logic/permissions/GRN.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjozNzowMlrOHksr2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjozNDowOVrOHk6Cug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI0MjkwNw==", "bodyText": "Is this change intended?", "url": "https://github.com/Graylog2/graylog2-server/pull/9185#discussion_r508242907", "createdAt": "2020-10-20T06:37:02Z", "author": {"login": "bernd"}, "path": "graylog2-web-interface/src/logic/permissions/GRN.js", "diffHunk": "@@ -25,7 +25,7 @@ export const getShowRouteFromGRN = (grn: string) => {\n       return Routes.dashboard_show(id);\n     case 'event_definition':\n       return Routes.ALERTS.DEFINITIONS.edit(id);\n-    case 'event_notification':\n+    case 'notification':", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7523e010d8922e9c3b1439535a58b88a70b2ff74"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyMjI5NQ==", "bodyText": "oops, no. but after a merge it will be gone. It's in master already", "url": "https://github.com/Graylog2/graylog2-server/pull/9185#discussion_r508422295", "createdAt": "2020-10-20T11:26:54Z", "author": {"login": "mpfz0r"}, "path": "graylog2-web-interface/src/logic/permissions/GRN.js", "diffHunk": "@@ -25,7 +25,7 @@ export const getShowRouteFromGRN = (grn: string) => {\n       return Routes.dashboard_show(id);\n     case 'event_definition':\n       return Routes.ALERTS.DEFINITIONS.edit(id);\n-    case 'event_notification':\n+    case 'notification':", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI0MjkwNw=="}, "originalCommit": {"oid": "7523e010d8922e9c3b1439535a58b88a70b2ff74"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ2MTc1NA==", "bodyText": "Okay \ud83d\udc4d", "url": "https://github.com/Graylog2/graylog2-server/pull/9185#discussion_r508461754", "createdAt": "2020-10-20T12:34:09Z", "author": {"login": "bernd"}, "path": "graylog2-web-interface/src/logic/permissions/GRN.js", "diffHunk": "@@ -25,7 +25,7 @@ export const getShowRouteFromGRN = (grn: string) => {\n       return Routes.dashboard_show(id);\n     case 'event_definition':\n       return Routes.ALERTS.DEFINITIONS.edit(id);\n-    case 'event_notification':\n+    case 'notification':", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI0MjkwNw=="}, "originalCommit": {"oid": "7523e010d8922e9c3b1439535a58b88a70b2ff74"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4425, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}