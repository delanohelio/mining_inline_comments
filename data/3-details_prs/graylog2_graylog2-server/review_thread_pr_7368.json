{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNzY1OTI3", "number": 7368, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMzoyNTozNFrODc-cCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMzoyNjoxOFrODc-c7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzA5NzA3OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/migrations/V20191203120602_MigrateSavedSearchesToViewsSupport/savedsearch/Query.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMzoyNTozNFrOFlT4kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMzoyNTozNFrOFlT4kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY2NzQwOA==", "bodyText": "how about extracting a method here? E.g., addTimestampIfMissing", "url": "https://github.com/Graylog2/graylog2-server/pull/7368#discussion_r374667408", "createdAt": "2020-02-04T13:25:34Z", "author": {"login": "alex-konn"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/views/migrations/V20191203120602_MigrateSavedSearchesToViewsSupport/savedsearch/Query.java", "diffHunk": "@@ -34,16 +35,38 @@\n         @JsonSubTypes.Type(value = RelativeTimeRangeQuery.class, name = RelativeTimeRangeQuery.type)\n })\n public interface Query {\n+    String TIMESTAMP_FIELD = \"timestamp\";\n+    List<String> DEFAULT_FIELDS = ImmutableList.of(TIMESTAMP_FIELD, \"source\", \"message\");\n+\n     String rangeType();\n-    String fields();\n+    Optional<String> fields();\n     String query();\n     Optional<String> streamId();\n \n     TimeRange toTimeRange();\n \n+    default MessagesWidget toMessagesWidget(String messageListId) {\n+        final List<String> usedFieldsWithoutMessage = fieldsList().stream()\n+                .filter(field -> !field.equals(\"message\"))\n+                .collect(Collectors.toList());\n+        final boolean showMessageRow = fieldsList().contains(\"message\");\n+\n+        return MessagesWidget.create(messageListId, usedFieldsWithoutMessage, showMessageRow);\n+    }\n+\n     default List<String> fieldsList() {\n-        return isNullOrEmpty(fields())\n-                ? Collections.emptyList()\n-                : Splitter.on(\",\").splitToList(fields());\n+        return fields()\n+                .filter(fields -> !fields.trim().isEmpty())\n+                .map(fields -> Splitter.on(\",\").splitToList(fields))\n+                .map(fields -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fce3f12b794721f12b39cb0aef9ab7d743215322"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzA5OTMzOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/migrations/V20191203120602_MigrateSavedSearchesToViewsSupport/savedsearch/Query.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMzoyNjoxOFrOFlT56g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMzoyNjoxOFrOFlT56g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY2Nzc1NA==", "bodyText": "Suppress warning for splitToList", "url": "https://github.com/Graylog2/graylog2-server/pull/7368#discussion_r374667754", "createdAt": "2020-02-04T13:26:18Z", "author": {"login": "alex-konn"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/views/migrations/V20191203120602_MigrateSavedSearchesToViewsSupport/savedsearch/Query.java", "diffHunk": "@@ -34,16 +35,38 @@\n         @JsonSubTypes.Type(value = RelativeTimeRangeQuery.class, name = RelativeTimeRangeQuery.type)\n })\n public interface Query {\n+    String TIMESTAMP_FIELD = \"timestamp\";\n+    List<String> DEFAULT_FIELDS = ImmutableList.of(TIMESTAMP_FIELD, \"source\", \"message\");\n+\n     String rangeType();\n-    String fields();\n+    Optional<String> fields();\n     String query();\n     Optional<String> streamId();\n \n     TimeRange toTimeRange();\n \n+    default MessagesWidget toMessagesWidget(String messageListId) {\n+        final List<String> usedFieldsWithoutMessage = fieldsList().stream()\n+                .filter(field -> !field.equals(\"message\"))\n+                .collect(Collectors.toList());\n+        final boolean showMessageRow = fieldsList().contains(\"message\");\n+\n+        return MessagesWidget.create(messageListId, usedFieldsWithoutMessage, showMessageRow);\n+    }\n+\n     default List<String> fieldsList() {\n-        return isNullOrEmpty(fields())\n-                ? Collections.emptyList()\n-                : Splitter.on(\",\").splitToList(fields());\n+        return fields()\n+                .filter(fields -> !fields.trim().isEmpty())\n+                .map(fields -> Splitter.on(\",\").splitToList(fields))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fce3f12b794721f12b39cb0aef9ab7d743215322"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3966, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}