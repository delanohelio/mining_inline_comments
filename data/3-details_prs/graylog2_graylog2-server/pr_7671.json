{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MTE3Nzkx", "number": 7671, "title": "Implementing `shouldComponentUpdate` for `connect`.", "bodyText": "Description\n\nMotivation and Context\n\n\nIn the web interface we are using a connect HOC which can be used to wrap another component and specify a map of Reflux stores, whose states are synchronized with the props of the component. This allows us to use Reflux stores in functional and class-based components. This works by generating a component that gets the initial state of all stores and listens to them and update the props of its child component on every store update.\nBefore this change, a component wrapped with the connect HOC was rerendered whenever a store updated, even if the state of the store remained the same. E.g.:\n\nComponent Foo uses connect to synchronize with FooStore, but is only interested in the key bar of its state: connect(FooComponent, { foo: FooStore }, ({ foo: { bar } }) => ({ bar }))\nFooStore triggers an update, because the foo key is updated: this.trigger({ foo: 42 })\nFooComponent is rerendered although bar is not updated\n\nTo prevent this, this PR implements a shouldComponentUpdate method for each generated wrapper component and returns the result of a deep equality check for the generated props (after applying the props mapper function) of its child component.\nAlthough deep equality checks are generally discouraged, this still improves rendering times for e.g. the search by ~40%.\nNote:\nWhile doing this, it was noticed that the RefreshControls did trigger starting/stopping the auto refresh of a search/dashboard, but they did not render the correct state. This was traced back to the RefreshStore mutating its state inline, which is generally an anti-pattern and a source for subtle bugs. In this case it lead to shouldComponentUpdate always lead to false, because the state of the store before and after the update appeared to be identical (due to inline mutation). This was fixed in this PR as well. There might be other cases like this hidden in the source code. A structural search in the code base did not reveal other cases like this which have an effect, but this should therefore not be backported to 3.2 and instead tested well in master for 3.3.\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.", "createdAt": "2020-03-12T08:58:57Z", "url": "https://github.com/Graylog2/graylog2-server/pull/7671", "merged": true, "mergeCommit": {"oid": "9cade78e35c77569302dc61b0e7d11fc1c8c2a13"}, "closed": true, "closedAt": "2020-03-16T15:50:48Z", "author": {"login": "dennisoelkers"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM4PvZgBqjMxMjIwMjA3NDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOQDqNAFqTM3NTM0MDUxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55f02ab9863b8bc9f9a6ab71e3be599b8f0d0f0a", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/55f02ab9863b8bc9f9a6ab71e3be599b8f0d0f0a", "committedDate": "2020-03-09T16:24:49Z", "message": "Implementing `shouldComponentUpdate` for `connect`."}, "afterCommit": {"oid": "592755923355a9d13b5137b054b5e2ce226f74c2", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/592755923355a9d13b5137b054b5e2ce226f74c2", "committedDate": "2020-03-12T09:12:25Z", "message": "Fixing linter hints."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "592755923355a9d13b5137b054b5e2ce226f74c2", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/592755923355a9d13b5137b054b5e2ce226f74c2", "committedDate": "2020-03-12T09:12:25Z", "message": "Fixing linter hints."}, "afterCommit": {"oid": "eab3bb2e479fbbfab8cc1036856eaeb7a9c1c3be", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/eab3bb2e479fbbfab8cc1036856eaeb7a9c1c3be", "committedDate": "2020-03-12T16:15:56Z", "message": "Adding literal from default props."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6613140e821cde5196ddfb7beef59c90bef60c53", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/6613140e821cde5196ddfb7beef59c90bef60c53", "committedDate": "2020-03-13T11:29:52Z", "message": "Implementing `shouldComponentUpdate` for `connect`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df5baab5afb37a721511d80850ac8f429c39e5b7", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/df5baab5afb37a721511d80850ac8f429c39e5b7", "committedDate": "2020-03-13T11:29:52Z", "message": "Extracting `isDeepEqual` function."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cac9d94b9d4f8b16984c99d23d70c97c00bf0be3", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/cac9d94b9d4f8b16984c99d23d70c97c00bf0be3", "committedDate": "2020-03-13T11:29:52Z", "message": "Splitting up equality checking for general and search updates."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7de39f8a9bdff4cc895b214de235f922f2eb106", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/e7de39f8a9bdff4cc895b214de235f922f2eb106", "committedDate": "2020-03-13T11:29:53Z", "message": "Adding tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dd42c2b1523304fe44627cec04fa9063d773156", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/1dd42c2b1523304fe44627cec04fa9063d773156", "committedDate": "2020-03-13T11:29:53Z", "message": "Avoid mutating and leaking internal state."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09bf8295d0513457ea3a7e5ee137e826c8fa9ac4", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/09bf8295d0513457ea3a7e5ee137e826c8fa9ac4", "committedDate": "2020-03-13T11:29:53Z", "message": "Fixing linter hints."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e68335cab6a93423936696f41a52da7f914a7c8", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/8e68335cab6a93423936696f41a52da7f914a7c8", "committedDate": "2020-03-13T11:29:53Z", "message": "Typing `connect` properly."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31dcebf8cf3ec20bbfc0c151fbaf9a52a35f2cbc", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/31dcebf8cf3ec20bbfc0c151fbaf9a52a35f2cbc", "committedDate": "2020-03-13T11:29:53Z", "message": "Testing `connect` without expecting it to return a class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0487c0564223d1c15339e7938c4d1929d2bb14e", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/d0487c0564223d1c15339e7938c4d1929d2bb14e", "committedDate": "2020-03-13T11:29:53Z", "message": "Using proper view in test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66dadd6ca80b01e135eb501dff3f015c335db8e0", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/66dadd6ca80b01e135eb501dff3f015c335db8e0", "committedDate": "2020-03-13T11:29:53Z", "message": "Using full type for component."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df493f9a7ea154bb7b2e424399a416bb91301eb1", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/df493f9a7ea154bb7b2e424399a416bb91301eb1", "committedDate": "2020-03-13T11:29:53Z", "message": "Simplifying mocking `CurrentViewTypeProvider`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e4d2b5f9051d1c01a63ca39c8aad38914a63d18", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/2e4d2b5f9051d1c01a63ca39c8aad38914a63d18", "committedDate": "2020-03-13T11:29:54Z", "message": "Making component/props/connect usage more explicit."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d183534bc5fd8f06d3661f01b7075606b51ef7a", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/4d183534bc5fd8f06d3661f01b7075606b51ef7a", "committedDate": "2020-03-13T11:29:54Z", "message": "Fixing props type inference."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ba5c43345e96ebacd418f32971b18b7f89e1a1e", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/5ba5c43345e96ebacd418f32971b18b7f89e1a1e", "committedDate": "2020-03-13T11:29:54Z", "message": "Fixing handling of visualization types and props."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2dfd4469a7f759a218f722b8ef7996b5df85b50", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/e2dfd4469a7f759a218f722b8ef7996b5df85b50", "committedDate": "2020-03-13T11:29:54Z", "message": "Adding `asMock`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5cc47ddc35b5effe4fc3f82ae598379ed03adb6", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/f5cc47ddc35b5effe4fc3f82ae598379ed03adb6", "committedDate": "2020-03-13T11:29:54Z", "message": "Adding literal from default props."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7950c54b957b41ebfd48780bca0ba01b2e858782", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/7950c54b957b41ebfd48780bca0ba01b2e858782", "committedDate": "2020-03-13T11:29:54Z", "message": "Fixing flow hints."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42400ec6b488295f4a02716d93b295901ee90186", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/42400ec6b488295f4a02716d93b295901ee90186", "committedDate": "2020-03-13T11:29:54Z", "message": "Ensure that all mocked stores have `getInitialState`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9ffbc11d19097abe22727c83cad0f068d7982dc", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/f9ffbc11d19097abe22727c83cad0f068d7982dc", "committedDate": "2020-03-13T11:29:54Z", "message": "Qualifying import."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43cc94e123dd8b648ab9eff325dc0c1a1002f039", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/43cc94e123dd8b648ab9eff325dc0c1a1002f039", "committedDate": "2020-03-13T11:29:54Z", "message": "Adding types, adding default store methods."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c12d28db960683bf228d1516feb7ba864f9c2935", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c12d28db960683bf228d1516feb7ba864f9c2935", "committedDate": "2020-03-13T11:29:54Z", "message": "Fixing and improving `Sidebar` test."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c35bf546dff4d59cda8df01230e50e05274ccc1", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/7c35bf546dff4d59cda8df01230e50e05274ccc1", "committedDate": "2020-03-13T10:40:13Z", "message": "Fixing and improving `Sidebar` test."}, "afterCommit": {"oid": "c12d28db960683bf228d1516feb7ba864f9c2935", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c12d28db960683bf228d1516feb7ba864f9c2935", "committedDate": "2020-03-13T11:29:54Z", "message": "Fixing and improving `Sidebar` test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MTkwNjQy", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#pullrequestreview-375190642", "createdAt": "2020-03-16T13:00:59Z", "commit": {"oid": "c12d28db960683bf228d1516feb7ba864f9c2935"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MjI3MjEx", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#pullrequestreview-375227211", "createdAt": "2020-03-16T13:47:50Z", "commit": {"oid": "c12d28db960683bf228d1516feb7ba864f9c2935"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzo0Nzo1MFrOF204yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDozMDo0MVrOF23AJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMzkzMA==", "bodyText": "You could use isDeepEqual() for the redundant logic.", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#discussion_r393033930", "createdAt": "2020-03-16T13:47:50Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/stores/isEqualForSearch.js", "diffHunk": "@@ -0,0 +1,24 @@\n+// @flow strict\n+import { isEqualWith, isFunction } from 'lodash';\n+\n+const hasFn = (obj, fn) => (obj && obj[fn] && isFunction(obj[fn]));\n+const hasEquals = obj => hasFn(obj, 'equals');\n+const hasEqualsForSearch = obj => hasFn(obj, 'equalsForSearch');\n+const isImmutable = obj => hasFn(obj, 'toJS');\n+\n+const _isEqual = (first, second) => {\n+  if (hasEqualsForSearch(first)) {\n+    return first.equalsForSearch(second);\n+  }\n+  if (isImmutable(first) && isImmutable(second)) {\n+    return isEqualWith(first.toJS(), second.toJS(), _isEqual);\n+  }\n+  if (hasEquals(first)) {\n+    return first.equals(second);\n+  }\n+  return undefined;\n+};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12d28db960683bf228d1516feb7ba864f9c2935"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0NDk2Ng==", "bodyText": "I am currently seeing the following warning, when I open any search page:\nConnectStoresWrapper[Widget] stores=view: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop.", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#discussion_r393044966", "createdAt": "2020-03-16T14:04:11Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/stores/connect.jsx", "diffHunk": "@@ -27,57 +38,77 @@ import { isFunction } from 'lodash';\n  * connect(SamplesComponent, { samples: SamplesStore }, ({ samples }) => ({ samples: samples.filter(sample => sample.id === 4) }))\n  *\n  */\n-export default (Component, stores, mapProps = props => props) => {\n+\n+function connect<Stores: Object, Props, ComponentType: React.ComponentType<Props>, MappedProps>(\n+  Component: ComponentType,\n+  stores: Stores,\n+  mapProps: (ResultType<Stores>) => MappedProps = props => props,\n+): React.ComponentType<$Diff<$Call<ExtractComponentProps, ComponentType>, MappedProps>> {\n   const wrappedComponentName = Component.displayName || Component.name || 'Unknown/Anonymous';\n-  class ConnectStoresWrapper extends React.Component {\n-    constructor(props) {\n-      super(props);\n+  class ConnectStoresWrapper extends React.Component<$Diff<$Call<ExtractComponentProps, ComponentType>, MappedProps>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12d28db960683bf228d1516feb7ba864f9c2935"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2ODU4Mw==", "bodyText": "Due to the existing prop type warning we are receiving for some visualizations, I found out the component name gets lost here. Currently the warning looks like:\nWarning: Failed prop type: Invalid prop `data` of type `object` supplied to `<<anonymous>>`, expected an array.\n\nWhich means we need to add something like LineVisualization.displayName = 'LineVisualization' to every visualization, or we add an argument to this function makeVisualization(component, displayName, type) and add it here with visualizationComponent.displayName = displayName.\nThe first solution looks more familiar because the displayName clearly belongs to the component, but I prefer the second approach, because we only need to add the displayName when we use makeVisualization() and flow will remind us, whenever we could forget about adding the attribute.", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#discussion_r393068583", "createdAt": "2020-03-16T14:30:41Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/aggregationbuilder/AggregationBuilder.jsx", "diffHunk": "@@ -37,12 +37,19 @@ export type VisualizationComponentProps = {|\n   onChange: OnVisualizationConfigChange,\n   width: number,\n   toggleEdit: () => void,\n-|};\n+};\n \n export type VisualizationComponent =\n-  { type?: string, propTypes?: any }\n+  { type: string, propTypes?: any }\n   & React.ComponentType<VisualizationComponentProps>;\n \n+export const makeVisualization = (component: React.ComponentType<VisualizationComponentProps>, type: string): VisualizationComponent => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12d28db960683bf228d1516feb7ba864f9c2935"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5a1883ced226e8a75a8afc1525327899250673c", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c5a1883ced226e8a75a8afc1525327899250673c", "committedDate": "2020-03-16T15:21:34Z", "message": "Not extracting `key` pseudo-prop."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MzQwNTE5", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#pullrequestreview-375340519", "createdAt": "2020-03-16T15:43:30Z", "commit": {"oid": "c5a1883ced226e8a75a8afc1525327899250673c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2571, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}