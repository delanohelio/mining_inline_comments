{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDc3NDE3", "number": 7916, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0NDo0OVrOD1sF8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowMzoyN1rOD1sk8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjIzNTM5OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0NDo0OVrOGLPkVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0NDo0OVrOGLPkVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MjU4MQ==", "bodyText": "Functions names usually are snake case, this should be first_non_null.", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414442581", "createdAt": "2020-04-24T09:44:49Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjI5NDAyOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo1ODozNlrOGLQGTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo1ODozNlrOGLQGTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MTI3OA==", "bodyText": "I think this function should not stringify its return value and should simply return Object.\nThat way we can use it for IP addresses, lookup table results etc.", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414451278", "createdAt": "2020-04-24T09:58:36Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjMwMDY4OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowMDoxMlrOGLQKEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowNTo0M1rOGLQXZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjI0MQ==", "bodyText": "I believe <List, List> is the right signature here: we only accept lists anyway, so we should communicate that to the system, so it can generate meaningful error messages.\nRight now passing anything that's not a List silently returns \"\", which can be confusing.", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414452241", "createdAt": "2020-04-24T10:00:12Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";\n+\n+    private final ParameterDescriptor<Object, Object> valueParam;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1NTY1NQ==", "bodyText": "E.g. if the function accepts ParameterDescriptor<List, List> as its value, then the error message becomes:\norg.graylog.plugins.pipelineprocessor.parser.ParseException: Errors:\n Expected type List for argument value but found String in call to function firstNonNull in line 4 pos 21", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414455655", "createdAt": "2020-04-24T10:05:43Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";\n+\n+    private final ParameterDescriptor<Object, Object> valueParam;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjI0MQ=="}, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjMwMjM1OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowMDozOFrOGLQLDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowMDozOFrOGLQLDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjQ5Mg==", "bodyText": "This would become type(\"value\", List.class)", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414452492", "createdAt": "2020-04-24T10:00:38Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";\n+\n+    private final ParameterDescriptor<Object, Object> valueParam;\n+\n+    public FirstNonNull() {\n+        valueParam = object(\"value\").description(\"The list of fields to find first non null value\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjMxMjQzOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowMjo1NFrOGLQQ0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowMjo1NFrOGLQQ0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1Mzk2OA==", "bodyText": "I think the default should be null.", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414453968", "createdAt": "2020-04-24T10:02:54Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";\n+\n+    private final ParameterDescriptor<Object, Object> valueParam;\n+\n+    public FirstNonNull() {\n+        valueParam = object(\"value\").description(\"The list of fields to find first non null value\").build();\n+    }\n+\n+    @Override\n+    public String evaluate(FunctionArgs args, EvaluationContext context) {\n+        Object elements = valueParam.required(args, context);\n+        if (elements instanceof List) {\n+            List elementsList = (List) elements;\n+            return elementsList.stream().filter(Objects::nonNull).findFirst().orElse(\"\").toString();\n+        }\n+        return \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjMxNDcyOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowMzoyN1rOGLQSFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowMzoyN1rOGLQSFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1NDI5Mg==", "bodyText": "default would become null and no .toString()", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414454292", "createdAt": "2020-04-24T10:03:27Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";\n+\n+    private final ParameterDescriptor<Object, Object> valueParam;\n+\n+    public FirstNonNull() {\n+        valueParam = object(\"value\").description(\"The list of fields to find first non null value\").build();\n+    }\n+\n+    @Override\n+    public String evaluate(FunctionArgs args, EvaluationContext context) {\n+        Object elements = valueParam.required(args, context);\n+        if (elements instanceof List) {\n+            List elementsList = (List) elements;\n+            return elementsList.stream().filter(Objects::nonNull).findFirst().orElse(\"\").toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3720, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}