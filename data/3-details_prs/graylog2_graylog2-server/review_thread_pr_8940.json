{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNzM4NTU3", "number": 8940, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNDo0MlrOEjdTrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNjozOFrOEjdW9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjE1Nzg4OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/components/common/FormikFormGroup.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNDo0MlrOHR0RYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTo1NDowNFrOHSpTOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NDI1Nw==", "bodyText": "If you start with {...rest} you can never overwrite all the following props, is that intended?", "url": "https://github.com/Graylog2/graylog2-server/pull/8940#discussion_r488444257", "createdAt": "2020-09-15T07:24:42Z", "author": {"login": "Gaya"}, "path": "graylog2-web-interface/src/components/common/FormikFormGroup.jsx", "diffHunk": "@@ -0,0 +1,31 @@\n+// @flow strict\n+import * as React from 'react';\n+\n+import FormikInput from './FormikInput';\n+\n+type Props = {\n+  label: string,\n+  name: string,\n+  type?: string,\n+  help?: string,\n+  validate?: (string) => ?string,\n+};\n+\n+const FormikFormGroup = ({ label, name, type, help, validate, ...rest }: Props) => (\n+  <FormikInput {...rest}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254595e41c3cb54b9933a38acbc7a70dd91c2cc1"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMxMzA4MA==", "bodyText": "In this case I have to structure it like that, otherwise flow complains:\nCannot spread props because Flow cannot determine a type for  props [1].  rest of object pattern [2] is inexact, so it may contain valuewith a type that conflicts withvalue's definition in  props [1]. Try making  rest of object pattern [2] exact.", "url": "https://github.com/Graylog2/graylog2-server/pull/8940#discussion_r489313080", "createdAt": "2020-09-16T09:54:04Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/components/common/FormikFormGroup.jsx", "diffHunk": "@@ -0,0 +1,31 @@\n+// @flow strict\n+import * as React from 'react';\n+\n+import FormikInput from './FormikInput';\n+\n+type Props = {\n+  label: string,\n+  name: string,\n+  type?: string,\n+  help?: string,\n+  validate?: (string) => ?string,\n+};\n+\n+const FormikFormGroup = ({ label, name, type, help, validate, ...rest }: Props) => (\n+  <FormikInput {...rest}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NDI1Nw=="}, "originalCommit": {"oid": "254595e41c3cb54b9933a38acbc7a70dd91c2cc1"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjE2NjI5OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/components/common/ReadOnlyFormGroup.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNjozOFrOHR0WQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTo1OToyNlrOHSpgUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NTUwNg==", "bodyText": "You're only rendering text here in a container that looks like a form input. Maybe an <input disabled /> would work better?", "url": "https://github.com/Graylog2/graylog2-server/pull/8940#discussion_r488445506", "createdAt": "2020-09-15T07:26:38Z", "author": {"login": "Gaya"}, "path": "graylog2-web-interface/src/components/common/ReadOnlyFormGroup.jsx", "diffHunk": "@@ -0,0 +1,63 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled, { css, type StyledComponent } from 'styled-components';\n+\n+import type { ThemeInterface } from 'theme';\n+import { Col, Row, HelpBlock } from 'components/graylog';\n+import Icon from 'components/common/Icon';\n+\n+type Props = {\n+  label: React.Node,\n+  value: ?mixed,\n+  help?: string,\n+};\n+\n+const ValueCol = styled(Col)`\n+  padding-top: 7px;\n+`;\n+\n+const LabelCol = styled(ValueCol)(({ theme }) => css`\n+  font-weight: bold;\n+\n+  @media (min-width: ${theme.breakpoints.min.md}) {\n+    text-align: right;\n+  }\n+`);\n+\n+const BooleanIcon: StyledComponent<{value?: boolean}, ThemeInterface, Icon> = styled(Icon)(({ theme, value }) => `\n+  color: ${value ? theme.colors.variant.success : theme.colors.variant.danger};\n+`);\n+\n+const BooleanValue = ({ value }: { value: boolean }) => (\n+  <><BooleanIcon name={value ? 'check-circle' : 'times-circle'} value={value} /> {value ? 'yes' : 'no'}</>\n+);\n+\n+const readableValue = (value: $PropertyType<Props, 'value'>) => {\n+  if (typeof value === 'boolean') {\n+    return <BooleanValue value={value} />;\n+  }\n+\n+  if (value) {\n+    return value;\n+  }\n+\n+  return '-';\n+};\n+\n+const ReadOnlyFormGroup = ({ label, value, help }: Props) => (\n+  <Row>\n+    <LabelCol sm={3}>\n+      {label}\n+    </LabelCol>\n+    <ValueCol sm={9}>\n+      {readableValue(value)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254595e41c3cb54b9933a38acbc7a70dd91c2cc1"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMxNjQzNQ==", "bodyText": "In the context of the screenshot I posted, a disabled input would probably be the better option. But we will mainly use this component on a details pages where we just need this form group column and label styling. On these pages I prefer to display just text instead of a disabled input.", "url": "https://github.com/Graylog2/graylog2-server/pull/8940#discussion_r489316435", "createdAt": "2020-09-16T09:59:26Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/components/common/ReadOnlyFormGroup.jsx", "diffHunk": "@@ -0,0 +1,63 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled, { css, type StyledComponent } from 'styled-components';\n+\n+import type { ThemeInterface } from 'theme';\n+import { Col, Row, HelpBlock } from 'components/graylog';\n+import Icon from 'components/common/Icon';\n+\n+type Props = {\n+  label: React.Node,\n+  value: ?mixed,\n+  help?: string,\n+};\n+\n+const ValueCol = styled(Col)`\n+  padding-top: 7px;\n+`;\n+\n+const LabelCol = styled(ValueCol)(({ theme }) => css`\n+  font-weight: bold;\n+\n+  @media (min-width: ${theme.breakpoints.min.md}) {\n+    text-align: right;\n+  }\n+`);\n+\n+const BooleanIcon: StyledComponent<{value?: boolean}, ThemeInterface, Icon> = styled(Icon)(({ theme, value }) => `\n+  color: ${value ? theme.colors.variant.success : theme.colors.variant.danger};\n+`);\n+\n+const BooleanValue = ({ value }: { value: boolean }) => (\n+  <><BooleanIcon name={value ? 'check-circle' : 'times-circle'} value={value} /> {value ? 'yes' : 'no'}</>\n+);\n+\n+const readableValue = (value: $PropertyType<Props, 'value'>) => {\n+  if (typeof value === 'boolean') {\n+    return <BooleanValue value={value} />;\n+  }\n+\n+  if (value) {\n+    return value;\n+  }\n+\n+  return '-';\n+};\n+\n+const ReadOnlyFormGroup = ({ label, value, help }: Props) => (\n+  <Row>\n+    <LabelCol sm={3}>\n+      {label}\n+    </LabelCol>\n+    <ValueCol sm={9}>\n+      {readableValue(value)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NTUwNg=="}, "originalCommit": {"oid": "254595e41c3cb54b9933a38acbc7a70dd91c2cc1"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4484, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}