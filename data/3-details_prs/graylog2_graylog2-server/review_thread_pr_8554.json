{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTkxNDAz", "number": 8554, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNDoyNzoxOFrOEPJ9ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNDoyNzoxOFrOEPJ9ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzI3MzYzOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/parser/PipelineRuleParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNDoyNzoxOFrOGytj0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNDozMTo1NVrOGytzpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgyODQzMg==", "bodyText": "I might be nitpicking here, but wouldn't it be more correct to use:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (!Boolean.class.equals(type)) {\n          \n          \n            \n                        if (!Boolean.class.isAssignableFrom(type)) {", "url": "https://github.com/Graylog2/graylog2-server/pull/8554#discussion_r455828432", "createdAt": "2020-07-16T14:27:18Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/parser/PipelineRuleParser.java", "diffHunk": "@@ -758,6 +758,15 @@ public void exitOr(RuleLangParser.OrContext ctx) {\n             checkBinaryExpression(ctx);\n         }\n \n+        @Override\n+        public void exitNot(RuleLangParser.NotContext ctx) {\n+            final Expression expression = parseContext.expressions().get(ctx.expression());\n+            Class type = expression.getType();\n+            if (!Boolean.class.equals(type)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c23ac8d93a2fcf136dde5ff75482b37ea9f4774"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgzMjQ4NA==", "bodyText": "We could do that but Boolean is a final class, so it's effectively identical :)", "url": "https://github.com/Graylog2/graylog2-server/pull/8554#discussion_r455832484", "createdAt": "2020-07-16T14:31:55Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/parser/PipelineRuleParser.java", "diffHunk": "@@ -758,6 +758,15 @@ public void exitOr(RuleLangParser.OrContext ctx) {\n             checkBinaryExpression(ctx);\n         }\n \n+        @Override\n+        public void exitNot(RuleLangParser.NotContext ctx) {\n+            final Expression expression = parseContext.expressions().get(ctx.expression());\n+            Class type = expression.getType();\n+            if (!Boolean.class.equals(type)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgyODQzMg=="}, "originalCommit": {"oid": "6c23ac8d93a2fcf136dde5ff75482b37ea9f4774"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4160, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}