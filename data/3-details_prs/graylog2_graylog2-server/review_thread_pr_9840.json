{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNzc4Njk2", "number": 9840, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzoyNToxMVrOFOQT-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzozMjowMlrOFOQfcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDkxNjQwOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzoyNToxMVrOIS6Qhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwOTo1MDo1NFrOITdBEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjY5OTc4Mg==", "bodyText": "Can you please update to 5.3.7 release of oshi?", "url": "https://github.com/Graylog2/graylog2-server/pull/9840#discussion_r556699782", "createdAt": "2021-01-13T17:25:11Z", "author": {"login": "bernd"}, "path": "pom.xml", "diffHunk": "@@ -147,7 +147,7 @@\n         <scala.version>2.11.8</scala.version>\n         <semver4j.version>2.2.0-graylog.1</semver4j.version>\n         <shiro.version>1.5.2</shiro.version>\n-        <sigar.version>1.6.4</sigar.version>\n+        <oshi.version>5.3.6</oshi.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "425f7d94c9805cf8b20c3c6d161981d6cf28b0fe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzI2OTI2Ng==", "bodyText": "can do. but when I did this PR it wasn't even released \ud83e\udd37\u200d\u2642\ufe0f", "url": "https://github.com/Graylog2/graylog2-server/pull/9840#discussion_r557269266", "createdAt": "2021-01-14T09:50:54Z", "author": {"login": "mpfz0r"}, "path": "pom.xml", "diffHunk": "@@ -147,7 +147,7 @@\n         <scala.version>2.11.8</scala.version>\n         <semver4j.version>2.2.0-graylog.1</semver4j.version>\n         <shiro.version>1.5.2</shiro.version>\n-        <sigar.version>1.6.4</sigar.version>\n+        <oshi.version>5.3.6</oshi.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjY5OTc4Mg=="}, "originalCommit": {"oid": "425f7d94c9805cf8b20c3c6d161981d6cf28b0fe"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDkyMDkxOnYy", "diffSide": "RIGHT", "path": "misc/graylog.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzoyNjowMlrOIS6TDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzoyOTo0M1rOIS6czQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjcwMDQyOQ==", "bodyText": "I think we should add this change to the UPGRADING.rst file.", "url": "https://github.com/Graylog2/graylog2-server/pull/9840#discussion_r556700429", "createdAt": "2021-01-13T17:26:02Z", "author": {"login": "bernd"}, "path": "misc/graylog.conf", "diffHunk": "@@ -637,8 +637,8 @@ mongodb_threads_allowed_to_block_multiplier = 5\n # Connection timeout for a configured LDAP server (e. g. ActiveDirectory) in milliseconds.\n #ldap_connection_timeout = 2000\n \n-# Disable the use of SIGAR for collecting system stats\n-#disable_sigar = false\n+# Disable the use of OSHI for collecting system stats\n+#disable_oshi = false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "425f7d94c9805cf8b20c3c6d161981d6cf28b0fe"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjcwMjkyNQ==", "bodyText": "And what do you think about using something like disable_native_system_stats_collector instead? That way we don't have to rename it again in the future. \ud83d\ude09", "url": "https://github.com/Graylog2/graylog2-server/pull/9840#discussion_r556702925", "createdAt": "2021-01-13T17:29:43Z", "author": {"login": "bernd"}, "path": "misc/graylog.conf", "diffHunk": "@@ -637,8 +637,8 @@ mongodb_threads_allowed_to_block_multiplier = 5\n # Connection timeout for a configured LDAP server (e. g. ActiveDirectory) in milliseconds.\n #ldap_connection_timeout = 2000\n \n-# Disable the use of SIGAR for collecting system stats\n-#disable_sigar = false\n+# Disable the use of OSHI for collecting system stats\n+#disable_oshi = false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjcwMDQyOQ=="}, "originalCommit": {"oid": "425f7d94c9805cf8b20c3c6d161981d6cf28b0fe"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDk0NTc5OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/shared/system/stats/fs/OshiFsProbe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzozMjowMlrOIS6ivQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNzozMjowMlrOIS6ivQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjcwNDQ0NQ==", "bodyText": "Can we remove the commented code?", "url": "https://github.com/Graylog2/graylog2-server/pull/9840#discussion_r556704445", "createdAt": "2021-01-13T17:32:02Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/shared/system/stats/fs/OshiFsProbe.java", "diffHunk": "@@ -0,0 +1,225 @@\n+/*\n+ * Copyright (C) 2020 Graylog, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the Server Side Public License, version 1,\n+ * as published by MongoDB, Inc.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * Server Side Public License for more details.\n+ *\n+ * You should have received a copy of the Server Side Public License\n+ * along with this program. If not, see\n+ * <http://www.mongodb.com/licensing/server-side-public-license>.\n+ */\n+package org.graylog2.shared.system.stats.fs;\n+\n+import com.google.common.collect.ImmutableSet;\n+import org.apache.commons.lang3.StringUtils;\n+import org.graylog2.Configuration;\n+import org.graylog2.plugin.KafkaJournalConfiguration;\n+import org.graylog2.shared.system.stats.OshiService;\n+import oshi.hardware.HWDiskStore;\n+import oshi.hardware.HWPartition;\n+import oshi.hardware.HardwareAbstractionLayer;\n+import oshi.hardware.common.AbstractHWDiskStore;\n+import oshi.software.common.AbstractOSFileStore;\n+import oshi.software.os.FileSystem;\n+import oshi.software.os.OSFileStore;\n+import oshi.software.os.OperatingSystem;\n+import oshi.util.tuples.Pair;\n+\n+import javax.inject.Inject;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+public class OshiFsProbe implements FsProbe {\n+\n+    private final OshiService service;\n+\n+    private final Set<Path> locations;\n+    private final Map<Path, Pair<OSFileStore, HWDiskStore>> oshiFileSystems = new HashMap<>();\n+\n+    @Inject\n+    public OshiFsProbe(OshiService service, Configuration configuration,\n+                       KafkaJournalConfiguration kafkaJournalConfiguration) {\n+        this.service = service;\n+\n+        this.locations = ImmutableSet.of(\n+                configuration.getBinDir(),\n+                configuration.getDataDir(),\n+                configuration.getPluginDir(),\n+                kafkaJournalConfiguration.getMessageJournalDir()\n+        );\n+\n+        init();\n+    }\n+\n+    private void init() {\n+        final OperatingSystem os = service.getOs();\n+\n+        final FileSystem fileSystem = os.getFileSystem();\n+\n+        final HardwareAbstractionLayer hardware = service.getHal();\n+\n+        for (Path location : locations) {\n+            Path path = location.toAbsolutePath();\n+            oshiFileSystems.put(path,\n+                    fileSystem.getFileStores().stream()\n+                            .filter(fs -> path.startsWith(fs.getMount()))\n+                            // We want the mountpoint closest to our location\n+                            .max(Comparator.comparingInt(p -> Paths.get(p.getMount()).getNameCount()))\n+                            .map(fs -> {\n+                                // First try search for the diskstore with the logical volume or volume name\n+                                Optional<HWDiskStore> diskStore = hardware.getDiskStores().stream()\n+                                        .filter(ds -> ds.getName().equals(StringUtils.defaultIfEmpty(fs.getLogicalVolume(), fs.getVolume())))\n+                                        .findFirst(); //.orElse(generateDummyDiskStore());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "425f7d94c9805cf8b20c3c6d161981d6cf28b0fe"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4314, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}