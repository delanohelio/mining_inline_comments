{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDc3NDE3", "number": 7916, "title": "Add firstNonNull function to pipeline processor", "bodyText": "Description\nAdds a new function first_non_null to pipeline processor that accepts a list as unique parameter and returns the first non null value found in that list. Returns an empty string if none found.\nMotivation and Context\nFixes #7895\nHow Has This Been Tested?\n\n\n\nScreenshots (if appropriate):\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.", "createdAt": "2020-04-18T10:16:54Z", "url": "https://github.com/Graylog2/graylog2-server/pull/7916", "merged": true, "mergeCommit": {"oid": "14e0ae6ec139cad2e2486e81d02feabef45ea090"}, "closed": true, "closedAt": "2020-04-24T13:31:19Z", "author": {"login": "radykal-com"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYzH2kAH2gAyNDA1NDc3NDE3OmExYTk1NjQ4YTI5NWM4MmQyMTkwMDg3ZjcyMWFhYjdmMDE2MTVjODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaxcIHgFqTM5OTk0MjAzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80", "author": {"user": {"login": "radykal-com", "name": "Marc Ruiz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a1a95648a295c82d2190087f721aab7f01615c80", "committedDate": "2020-04-18T10:14:00Z", "message": "Add firstNonNull function to pipeline processor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Nzk4MTA1", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#pullrequestreview-399798105", "createdAt": "2020-04-24T09:44:49Z", "commit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0NDo0OVrOGLPkVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowNTo0M1rOGLQXZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MjU4MQ==", "bodyText": "Functions names usually are snake case, this should be first_non_null.", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414442581", "createdAt": "2020-04-24T09:44:49Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MTI3OA==", "bodyText": "I think this function should not stringify its return value and should simply return Object.\nThat way we can use it for IP addresses, lookup table results etc.", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414451278", "createdAt": "2020-04-24T09:58:36Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjI0MQ==", "bodyText": "I believe <List, List> is the right signature here: we only accept lists anyway, so we should communicate that to the system, so it can generate meaningful error messages.\nRight now passing anything that's not a List silently returns \"\", which can be confusing.", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414452241", "createdAt": "2020-04-24T10:00:12Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";\n+\n+    private final ParameterDescriptor<Object, Object> valueParam;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjQ5Mg==", "bodyText": "This would become type(\"value\", List.class)", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414452492", "createdAt": "2020-04-24T10:00:38Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";\n+\n+    private final ParameterDescriptor<Object, Object> valueParam;\n+\n+    public FirstNonNull() {\n+        valueParam = object(\"value\").description(\"The list of fields to find first non null value\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1Mzk2OA==", "bodyText": "I think the default should be null.", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414453968", "createdAt": "2020-04-24T10:02:54Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";\n+\n+    private final ParameterDescriptor<Object, Object> valueParam;\n+\n+    public FirstNonNull() {\n+        valueParam = object(\"value\").description(\"The list of fields to find first non null value\").build();\n+    }\n+\n+    @Override\n+    public String evaluate(FunctionArgs args, EvaluationContext context) {\n+        Object elements = valueParam.required(args, context);\n+        if (elements instanceof List) {\n+            List elementsList = (List) elements;\n+            return elementsList.stream().filter(Objects::nonNull).findFirst().orElse(\"\").toString();\n+        }\n+        return \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1NDI5Mg==", "bodyText": "default would become null and no .toString()", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414454292", "createdAt": "2020-04-24T10:03:27Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";\n+\n+    private final ParameterDescriptor<Object, Object> valueParam;\n+\n+    public FirstNonNull() {\n+        valueParam = object(\"value\").description(\"The list of fields to find first non null value\").build();\n+    }\n+\n+    @Override\n+    public String evaluate(FunctionArgs args, EvaluationContext context) {\n+        Object elements = valueParam.required(args, context);\n+        if (elements instanceof List) {\n+            List elementsList = (List) elements;\n+            return elementsList.stream().filter(Objects::nonNull).findFirst().orElse(\"\").toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1NTY1NQ==", "bodyText": "E.g. if the function accepts ParameterDescriptor<List, List> as its value, then the error message becomes:\norg.graylog.plugins.pipelineprocessor.parser.ParseException: Errors:\n Expected type List for argument value but found String in call to function firstNonNull in line 4 pos 21", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#discussion_r414455655", "createdAt": "2020-04-24T10:05:43Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/functions/strings/FirstNonNull.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.pipelineprocessor.functions.strings;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.graylog.plugins.pipelineprocessor.EvaluationContext;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.AbstractFunction;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionArgs;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.FunctionDescriptor;\n+import org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static org.graylog.plugins.pipelineprocessor.ast.functions.ParameterDescriptor.object;\n+\n+public class FirstNonNull extends AbstractFunction<String> {\n+    public static final String NAME = \"firstNonNull\";\n+\n+    private final ParameterDescriptor<Object, Object> valueParam;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MjI0MQ=="}, "originalCommit": {"oid": "a1a95648a295c82d2190087f721aab7f01615c80"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51e90ac75edfbee989711b9b94d509ea89241107", "author": {"user": {"login": "radykal-com", "name": "Marc Ruiz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/51e90ac75edfbee989711b9b94d509ea89241107", "committedDate": "2020-04-24T13:10:59Z", "message": "Return object and force list as only allowed parameter type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5OTQyMDMz", "url": "https://github.com/Graylog2/graylog2-server/pull/7916#pullrequestreview-399942033", "createdAt": "2020-04-24T13:24:11Z", "commit": {"oid": "51e90ac75edfbee989711b9b94d509ea89241107"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2403, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}