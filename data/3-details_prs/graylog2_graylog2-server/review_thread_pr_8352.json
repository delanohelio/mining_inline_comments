{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDIxNDg5", "number": 8352, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMTozNjoxMVrOEGT6jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMTozNjoxMVrOEGT6jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDUzMTk3OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/test/java/org/graylog/testing/elasticsearch/Client.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMTozNjoxMVrOGlBvyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMTo0Njo1N1rOGlCE0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3OTExNQ==", "bodyText": "I would suggest to extract Lambda blocks to private methods:\npublic void bulkIndex(BulkIndexRequest bulkIndexRequest) {\n    final Bulk.Builder bulkBuilder = new Bulk.Builder().refresh(true);\n\n    bulkIndexRequest.requests()\n            .entrySet()\n            .stream()\n            .flatMap(this::indexActionsFromRequestEntries)\n            .forEach(bulkBuilder::addAction);\n\n    final BulkResult bulkResult = executeWithExpectedSuccess(bulkBuilder.build(), \"failed to execute bulk request\");\n\n    assertThat(bulkResult.getFailedItems()).isEmpty();\n}\n\nprivate Stream<Index> indexActionsFromRequestEntries(Map.Entry<String, List<Map<String, Object>>> entry) {\n    final String indexName = entry.getKey();\n\n    return entry.getValue().stream()\n            .map(request -> indexActionWithNameFromRequest(indexName, request));\n}\n\nprivate Index indexActionWithNameFromRequest(String indexName, Map<String, Object> request) {\n    return new Index.Builder(request)\n            .index(indexName)\n            .type(\"test\")\n            .refresh(true)\n            .build();\n}", "url": "https://github.com/Graylog2/graylog2-server/pull/8352#discussion_r441479115", "createdAt": "2020-06-17T11:36:11Z", "author": {"login": "alex-konn"}, "path": "graylog2-server/src/test/java/org/graylog/testing/elasticsearch/Client.java", "diffHunk": "@@ -211,4 +214,28 @@ public void assertSucceeded(JestResult jestResult) {\n     public void refreshNode() {\n         executeWithExpectedSuccess(new Refresh.Builder().build(), \"Couldn't refresh elasticsearch node\");\n     }\n+\n+    public void bulkIndex(BulkIndexRequest bulkIndexRequest) {\n+        final Bulk.Builder bulkBuilder = new Bulk.Builder().refresh(true);\n+\n+        bulkIndexRequest.requests()\n+                .entrySet()\n+                .stream()\n+                .flatMap(entry -> {\n+                            final String indexName = entry.getKey();\n+\n+                            return entry.getValue().stream()\n+                                    .map(request -> new Index.Builder(request)\n+                                            .index(indexName)\n+                                            .type(\"test\")\n+                                            .refresh(true)\n+                                            .build());\n+                        })\n+                .forEach(bulkBuilder::addAction);\n+\n+        final BulkResult bulkResult = executeWithExpectedSuccess(bulkBuilder.build(), \"failed to execute bulk request\");\n+\n+        assertThat(bulkResult.getFailedItems()).isEmpty();\n+\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c49254f72257d0c7a8f481c939f630737bc791c1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ4NDQ5OQ==", "bodyText": "This will be done in a subsequent PR to avoid otherwise necessary rebasing and merging.", "url": "https://github.com/Graylog2/graylog2-server/pull/8352#discussion_r441484499", "createdAt": "2020-06-17T11:46:57Z", "author": {"login": "alex-konn"}, "path": "graylog2-server/src/test/java/org/graylog/testing/elasticsearch/Client.java", "diffHunk": "@@ -211,4 +214,28 @@ public void assertSucceeded(JestResult jestResult) {\n     public void refreshNode() {\n         executeWithExpectedSuccess(new Refresh.Builder().build(), \"Couldn't refresh elasticsearch node\");\n     }\n+\n+    public void bulkIndex(BulkIndexRequest bulkIndexRequest) {\n+        final Bulk.Builder bulkBuilder = new Bulk.Builder().refresh(true);\n+\n+        bulkIndexRequest.requests()\n+                .entrySet()\n+                .stream()\n+                .flatMap(entry -> {\n+                            final String indexName = entry.getKey();\n+\n+                            return entry.getValue().stream()\n+                                    .map(request -> new Index.Builder(request)\n+                                            .index(indexName)\n+                                            .type(\"test\")\n+                                            .refresh(true)\n+                                            .build());\n+                        })\n+                .forEach(bulkBuilder::addAction);\n+\n+        final BulkResult bulkResult = executeWithExpectedSuccess(bulkBuilder.build(), \"failed to execute bulk request\");\n+\n+        assertThat(bulkResult.getFailedItems()).isEmpty();\n+\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3OTExNQ=="}, "originalCommit": {"oid": "c49254f72257d0c7a8f481c939f630737bc791c1"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4190, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}