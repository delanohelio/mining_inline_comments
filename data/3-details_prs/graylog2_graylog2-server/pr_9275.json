{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMDIxMjk5", "number": 9275, "title": "Check periodically if running ES is compatible with initial ES version.", "bodyText": "Description\n\nMotivation and Context\n\n\nStarting with 4.x, the ES version is probed during startup and the code corresponding to the major version is bound. If ES is upgraded to a different major version while Graylog is running, the ES code bound might not be compatible to the ES version running. This can result in indexing/search errors.\nTo inform users about this condition, this PR is adding a periodical running every 30 seconds, which probes for the current ES version and compares it against the one probed initially during startup. If both are incompatible, a system notification is raised. If they are compatible, it is fixed. If either the version is overridden manually or no version can be probed, no change is performed (although an error is logged in the latter case).\nAn initial idea was to start the periodical with a delay of 30 seconds, but this would lead to the notification persisting after restarting Graylog, which might irritate users. Therefore the periodical is started immediately, resulting in a (mostly) unneeded first probe.\nFixes #9259.\nFixes #9246.\nHow Has This Been Tested?\n\n\n\nScreenshots (if appropriate):\n\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.", "createdAt": "2020-10-26T13:15:37Z", "url": "https://github.com/Graylog2/graylog2-server/pull/9275", "merged": true, "mergeCommit": {"oid": "17a5ca463239f04180ff8b41c70b108d5a1f01d7"}, "closed": true, "closedAt": "2020-10-28T10:15:09Z", "author": {"login": "dennisoelkers"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWUR8OABqjM5MjA2NjcwMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdW60JIgFqTUxODUwNzI4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a06f10887542ae1ad909c29e6dd8d4105ae7e7a0", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a06f10887542ae1ad909c29e6dd8d4105ae7e7a0", "committedDate": "2020-10-26T13:00:33Z", "message": "Adding test case for downgrading ES."}, "afterCommit": {"oid": "4e78c027741e2bffd778ded0506ab97c6ee46323", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/4e78c027741e2bffd778ded0506ab97c6ee46323", "committedDate": "2020-10-26T13:21:10Z", "message": "Adding test case for downgrading ES."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTAxNDQ3", "url": "https://github.com/Graylog2/graylog2-server/pull/9275#pullrequestreview-516901447", "createdAt": "2020-10-26T15:32:30Z", "commit": {"oid": "c087aade3da2ced1f096c7c709f30e88a5814f8e"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTozMjozMVrOHoVR2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTozNTozMlrOHoVbOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1MzcyMw==", "bodyText": "I think this can run in the daemon thread pool. What do you think?", "url": "https://github.com/Graylog2/graylog2-server/pull/9275#discussion_r512053723", "createdAt": "2020-10-26T15:32:31Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/periodical/ESVersionCheckPeriodical.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog2.periodical;\n+\n+import org.graylog2.notifications.Notification;\n+import org.graylog2.notifications.NotificationService;\n+import org.graylog2.plugin.Version;\n+import org.graylog2.plugin.periodical.Periodical;\n+import org.graylog2.storage.ElasticsearchVersion;\n+import org.graylog2.storage.versionprobe.VersionProbe;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import java.net.URI;\n+import java.util.List;\n+import java.util.Optional;\n+\n+public class ESVersionCheckPeriodical extends Periodical {\n+    private static final Logger LOG = LoggerFactory.getLogger(ESVersionCheckPeriodical.class);\n+    private final Version initialElasticsearchVersion;\n+    private final Optional<Version> versionOverride;\n+    private final List<URI> elasticsearchHosts;\n+    private final VersionProbe versionProbe;\n+    private final NotificationService notificationService;\n+\n+    @Inject\n+    public ESVersionCheckPeriodical(@ElasticsearchVersion Version elasticsearchVersion,\n+                                    @Named(\"elasticsearch_version\") @Nullable Version versionOverride,\n+                                    @Named(\"elasticsearch_hosts\") List<URI> elasticsearchHosts,\n+                                    VersionProbe versionProbe,\n+                                    NotificationService notificationService) {\n+        this.initialElasticsearchVersion = elasticsearchVersion;\n+        this.versionOverride = Optional.ofNullable(versionOverride);\n+        this.elasticsearchHosts = elasticsearchHosts;\n+        this.versionProbe = versionProbe;\n+        this.notificationService = notificationService;\n+    }\n+\n+    @Override\n+    public boolean runsForever() {\n+        return false;\n+    }\n+\n+    @Override\n+    public boolean stopOnGracefulShutdown() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean masterOnly() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean startOnThisNode() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean isDaemon() {\n+        return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c087aade3da2ced1f096c7c709f30e88a5814f8e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1NjEyMQ==", "bodyText": "Tiny nitpick: use placeholder instead of manual string concat makes it a bit more readable. \ud83d\ude04\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOG.warn(\"Elasticsearch version currently running (\" + version.toString() + \") is incompatible with the \" +\n          \n          \n            \n                                    \"one Graylog was started with (\" + initialElasticsearchVersion.toString() + \")\" +\n          \n          \n            \n                                    \" - a restart is required!\");\n          \n          \n            \n                            LOG.warn(\"Elasticsearch version currently running ({}) is incompatible with the \" +\n          \n          \n            \n                                    \"one Graylog was started with ({}) - a restart is required!\", version, initialElasticsearchVersion);", "url": "https://github.com/Graylog2/graylog2-server/pull/9275#discussion_r512056121", "createdAt": "2020-10-26T15:35:32Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/periodical/ESVersionCheckPeriodical.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog2.periodical;\n+\n+import org.graylog2.notifications.Notification;\n+import org.graylog2.notifications.NotificationService;\n+import org.graylog2.plugin.Version;\n+import org.graylog2.plugin.periodical.Periodical;\n+import org.graylog2.storage.ElasticsearchVersion;\n+import org.graylog2.storage.versionprobe.VersionProbe;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import java.net.URI;\n+import java.util.List;\n+import java.util.Optional;\n+\n+public class ESVersionCheckPeriodical extends Periodical {\n+    private static final Logger LOG = LoggerFactory.getLogger(ESVersionCheckPeriodical.class);\n+    private final Version initialElasticsearchVersion;\n+    private final Optional<Version> versionOverride;\n+    private final List<URI> elasticsearchHosts;\n+    private final VersionProbe versionProbe;\n+    private final NotificationService notificationService;\n+\n+    @Inject\n+    public ESVersionCheckPeriodical(@ElasticsearchVersion Version elasticsearchVersion,\n+                                    @Named(\"elasticsearch_version\") @Nullable Version versionOverride,\n+                                    @Named(\"elasticsearch_hosts\") List<URI> elasticsearchHosts,\n+                                    VersionProbe versionProbe,\n+                                    NotificationService notificationService) {\n+        this.initialElasticsearchVersion = elasticsearchVersion;\n+        this.versionOverride = Optional.ofNullable(versionOverride);\n+        this.elasticsearchHosts = elasticsearchHosts;\n+        this.versionProbe = versionProbe;\n+        this.notificationService = notificationService;\n+    }\n+\n+    @Override\n+    public boolean runsForever() {\n+        return false;\n+    }\n+\n+    @Override\n+    public boolean stopOnGracefulShutdown() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean masterOnly() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean startOnThisNode() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean isDaemon() {\n+        return false;\n+    }\n+\n+    @Override\n+    public int getInitialDelaySeconds() {\n+        return 0;\n+    }\n+\n+    @Override\n+    public int getPeriodSeconds() {\n+        return 30;\n+    }\n+\n+    @Override\n+    protected Logger getLogger() {\n+        return LOG;\n+    }\n+\n+    @Override\n+    public void doRun() {\n+        if (versionOverride.isPresent()) {\n+            LOG.debug(\"Elasticsearch version is set manually. Not running check.\");\n+            return;\n+        }\n+\n+        final Optional<Version> probedVersion = this.versionProbe.probe(this.elasticsearchHosts);\n+\n+        probedVersion.ifPresent(version -> {\n+            if (compatible(this.initialElasticsearchVersion, version)) {\n+                notificationService.fixed(Notification.Type.ES_VERSION_MISMATCH);\n+            } else {\n+                LOG.warn(\"Elasticsearch version currently running (\" + version.toString() + \") is incompatible with the \" +\n+                        \"one Graylog was started with (\" + initialElasticsearchVersion.toString() + \")\" +\n+                        \" - a restart is required!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c087aade3da2ced1f096c7c709f30e88a5814f8e"}, "originalPosition": 111}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3f93f731fe8dd125906eb28548030b4101dfcab", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a3f93f731fe8dd125906eb28548030b4101dfcab", "committedDate": "2020-10-27T14:08:23Z", "message": "Adding custom notification shown when ES version mismatches."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7d05bf5da01ddcc231969a819989328e6fecdc5", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a7d05bf5da01ddcc231969a819989328e6fecdc5", "committedDate": "2020-10-27T14:08:23Z", "message": "Returning full version for better reusability, logging it here instead of `VersionProbe`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59d9a432415508036fbc6ec0568a6b083dc94efa", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/59d9a432415508036fbc6ec0568a6b083dc94efa", "committedDate": "2020-10-27T14:08:23Z", "message": "Reducing to major version for driver provisioning."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88f9bc5b3ffda121337c0459ceea6741fad3f1d3", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/88f9bc5b3ffda121337c0459ceea6741fad3f1d3", "committedDate": "2020-10-27T14:08:23Z", "message": "Adding test cases."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a7b5d5427950f6e369f1c3be0c64c92449a6481", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/5a7b5d5427950f6e369f1c3be0c64c92449a6481", "committedDate": "2020-10-27T14:08:23Z", "message": "Adding and binding periodical to check for ES version compatibility."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21fd54c19872e0a1bc249aa9c60fa4ce9788ada8", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/21fd54c19872e0a1bc249aa9c60fa4ce9788ada8", "committedDate": "2020-10-27T14:08:23Z", "message": "Adding test case for downgrading ES."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cd21fd696dd26027b30cbb4fa55fcf9b25b16a0", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/4cd21fd696dd26027b30cbb4fa55fcf9b25b16a0", "committedDate": "2020-10-27T14:08:23Z", "message": "Using actual variables in log message."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f3605c7d8d986880c00b1d83f25564a0b8338dc", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/9f3605c7d8d986880c00b1d83f25564a0b8338dc", "committedDate": "2020-10-27T14:11:27Z", "message": "Use daemon pool and placeholders."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c087aade3da2ced1f096c7c709f30e88a5814f8e", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c087aade3da2ced1f096c7c709f30e88a5814f8e", "committedDate": "2020-10-26T14:00:22Z", "message": "Using actual variables in log message."}, "afterCommit": {"oid": "9f3605c7d8d986880c00b1d83f25564a0b8338dc", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/9f3605c7d8d986880c00b1d83f25564a0b8338dc", "committedDate": "2020-10-27T14:11:27Z", "message": "Use daemon pool and placeholders."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NTA3Mjg2", "url": "https://github.com/Graylog2/graylog2-server/pull/9275#pullrequestreview-518507286", "createdAt": "2020-10-28T10:15:01Z", "commit": {"oid": "9f3605c7d8d986880c00b1d83f25564a0b8338dc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3454, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}