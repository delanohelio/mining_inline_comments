{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMzc2NDU1", "number": 7401, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzoxNDoyNFrODdw4Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzoxNDoyNFrODdw4Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTM2MDc4OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/system/UrlWhitelistResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzoxNDoyNFrOFmjUrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMzoxOToxNFrOFqkI2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2ODk0MA==", "bodyText": "Should we check here if the placeholder is empty as well? (e.g. by using isNullOrEmpty(generationRequest.placeholder))", "url": "https://github.com/Graylog2/graylog2-server/pull/7401#discussion_r375968940", "createdAt": "2020-02-06T17:14:24Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/system/UrlWhitelistResource.java", "diffHunk": "@@ -84,9 +89,27 @@ public Response put(@ApiParam(name = \"whitelist\", required = true) @NotNull fina\n     @NoAuditEvent(\"Validation only\")\n     @Consumes(MediaType.APPLICATION_JSON)\n     @RequiresPermissions(RestPermissions.URL_WHITELIST_READ)\n-    public WhitelistCheckResponse check(@ApiParam(name = \"url\", required = true)\n+    public WhitelistCheckResponse check(@ApiParam(name = \"JSON body\", required = true)\n                              @Valid @NotNull final WhitelistCheckRequest checkRequest) {\n         final boolean isWhitelisted = urlWhitelistService.isWhitelisted(checkRequest.url());\n         return WhitelistCheckResponse.create(checkRequest.url(), isWhitelisted);\n     }\n+\n+    @POST\n+    @Path(\"/generate_regex\")\n+    @Timed\n+    @ApiOperation(value = \"Generates a regex that can be used as a value for a whitelist entry.\")\n+    @NoAuditEvent(\"Utility function only.\")\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    public WhitelistRegexGenerationResponse generateRegex(@ApiParam(name = \"JSON body\", required = true)\n+    @Valid @NotNull final WhitelistRegexGenerationRequest generationRequest) {\n+        final String regex;\n+        if (generationRequest.placeholder() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "728ab9173201a8932fdbe4638d1543b4ce1e45e0"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE3NjYwMQ==", "bodyText": "Yep, makes sense. Fixed that.", "url": "https://github.com/Graylog2/graylog2-server/pull/7401#discussion_r380176601", "createdAt": "2020-02-17T13:19:14Z", "author": {"login": "thll"}, "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/system/UrlWhitelistResource.java", "diffHunk": "@@ -84,9 +89,27 @@ public Response put(@ApiParam(name = \"whitelist\", required = true) @NotNull fina\n     @NoAuditEvent(\"Validation only\")\n     @Consumes(MediaType.APPLICATION_JSON)\n     @RequiresPermissions(RestPermissions.URL_WHITELIST_READ)\n-    public WhitelistCheckResponse check(@ApiParam(name = \"url\", required = true)\n+    public WhitelistCheckResponse check(@ApiParam(name = \"JSON body\", required = true)\n                              @Valid @NotNull final WhitelistCheckRequest checkRequest) {\n         final boolean isWhitelisted = urlWhitelistService.isWhitelisted(checkRequest.url());\n         return WhitelistCheckResponse.create(checkRequest.url(), isWhitelisted);\n     }\n+\n+    @POST\n+    @Path(\"/generate_regex\")\n+    @Timed\n+    @ApiOperation(value = \"Generates a regex that can be used as a value for a whitelist entry.\")\n+    @NoAuditEvent(\"Utility function only.\")\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    public WhitelistRegexGenerationResponse generateRegex(@ApiParam(name = \"JSON body\", required = true)\n+    @Valid @NotNull final WhitelistRegexGenerationRequest generationRequest) {\n+        final String regex;\n+        if (generationRequest.placeholder() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2ODk0MA=="}, "originalCommit": {"oid": "728ab9173201a8932fdbe4638d1543b4ce1e45e0"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3859, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}