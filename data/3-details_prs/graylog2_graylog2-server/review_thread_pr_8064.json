{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MTMwNzI3", "number": 8064, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODowNDoxN1rOD7IQLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODowNDoxN1rOD7IQLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzI3Nzg4OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/components/common/IconButton.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODowNDoxOFrOGTRIsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODowNDoxOFrOGTRIsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg1Njg4MA==", "bodyText": "I considered requiring the onClick prop, but e.g. in ReplaySearchButton we need to wrap the button with a link, because we can't open the page in another tab with history.push()", "url": "https://github.com/Graylog2/graylog2-server/pull/8064#discussion_r422856880", "createdAt": "2020-05-11T08:04:18Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/components/common/IconButton.jsx", "diffHunk": "@@ -0,0 +1,59 @@\n+// @flow strict\n+import * as React from 'react';\n+import PropTypes from 'prop-types';\n+import styled, { type StyledComponent } from 'styled-components';\n+\n+import { type ThemeInterface } from 'theme';\n+import { Icon } from 'components/common';\n+\n+const Wrapper: StyledComponent<{}, ThemeInterface, HTMLButtonElement> = styled.button(({ theme }) => `\n+  display: inline-flex;\n+  justify-content: center;\n+  align-items: center;\n+  \n+  height: 25px;\n+  width: 25px;\n+  border: 0\n+\n+  cursor: pointer;\n+  color: ${theme.color.gray[70]};\n+  font-size: 16px;\n+\n+  :hover {\n+    background-color: ${theme.color.gray[90]};\n+  }\n+\n+  :active {\n+    background-color: ${theme.color.gray[80]};\n+  }\n+`);\n+\n+\n+type Props = {\n+  title: string,\n+  onClick?: () => void,\n+};\n+\n+const handleClick = (onClick) => {\n+  if (typeof onClick === 'function') {\n+    onClick();\n+  }\n+};\n+\n+const IconButton = ({ title, onClick, ...rest }: Props) => (\n+  <Wrapper title={title} onClick={() => handleClick(onClick)}>\n+    <Icon {...rest} />\n+  </Wrapper>\n+);\n+\n+IconButton.propTypes = {\n+  title: PropTypes.string,\n+  onClick: PropTypes.func,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f062a03cd72aa0171d6b4faff2d67803cd1cee3"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4274, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}