{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NzQ0NzEz", "number": 8538, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMToyMzo0MVrOEONzSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMToyNDoyNFrOEON0aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzQxNjQzOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/authzroles/AuthzRoleDTO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMToyMzo0MVrOGxPbVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMToyMzo0MVrOGxPbVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4NjE2Ng==", "bodyText": "Custom roles can have an empty description.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @JsonProperty(FIELD_DESCRIPTION)\n          \n          \n            \n                @JsonProperty(FIELD_DESCRIPTION)\n          \n          \n            \n                @Nullable", "url": "https://github.com/Graylog2/graylog2-server/pull/8538#discussion_r454286166", "createdAt": "2020-07-14T11:23:41Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/security/authzroles/AuthzRoleDTO.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security.authzroles;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.google.auto.value.AutoValue;\n+import org.mongojack.Id;\n+import org.mongojack.ObjectId;\n+\n+import javax.annotation.Nullable;\n+import java.util.Set;\n+\n+@AutoValue\n+@JsonDeserialize(builder = AuthzRoleDTO.Builder.class)\n+public abstract class AuthzRoleDTO {\n+\n+    private static final String FIELD_ID = \"id\";\n+    public static final String FIELD_NAME = \"name\";\n+    public static final String FIELD_DESCRIPTION = \"description\";\n+    private static final String FIELD_PERMISSIONS = \"permissions\";\n+    private static final String FIELD_READ_ONLY = \"read_only\";\n+\n+    @Id\n+    @ObjectId\n+    @Nullable\n+    @JsonProperty(FIELD_ID)\n+    public abstract String id();\n+\n+    @JsonProperty(FIELD_NAME)\n+    public abstract String name();\n+\n+    @JsonProperty(FIELD_DESCRIPTION)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1a946f35ed00bd9fe2c04d363bd06a5979ac610"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzQxOTI4OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/authzroles/AuthzRoleDTO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMToyNDoyNFrOGxPc9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMToyNDoyNFrOGxPc9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4NjU4MQ==", "bodyText": "same here\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public abstract Builder description(String description);\n          \n          \n            \n                    public abstract Builder description(@Nullable String description);", "url": "https://github.com/Graylog2/graylog2-server/pull/8538#discussion_r454286581", "createdAt": "2020-07-14T11:24:24Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/security/authzroles/AuthzRoleDTO.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security.authzroles;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.google.auto.value.AutoValue;\n+import org.mongojack.Id;\n+import org.mongojack.ObjectId;\n+\n+import javax.annotation.Nullable;\n+import java.util.Set;\n+\n+@AutoValue\n+@JsonDeserialize(builder = AuthzRoleDTO.Builder.class)\n+public abstract class AuthzRoleDTO {\n+\n+    private static final String FIELD_ID = \"id\";\n+    public static final String FIELD_NAME = \"name\";\n+    public static final String FIELD_DESCRIPTION = \"description\";\n+    private static final String FIELD_PERMISSIONS = \"permissions\";\n+    private static final String FIELD_READ_ONLY = \"read_only\";\n+\n+    @Id\n+    @ObjectId\n+    @Nullable\n+    @JsonProperty(FIELD_ID)\n+    public abstract String id();\n+\n+    @JsonProperty(FIELD_NAME)\n+    public abstract String name();\n+\n+    @JsonProperty(FIELD_DESCRIPTION)\n+    public abstract String description();\n+\n+    @JsonProperty(FIELD_PERMISSIONS)\n+    public abstract Set<String> permissions();\n+\n+    @JsonProperty(FIELD_READ_ONLY)\n+    public abstract boolean readOnly();\n+\n+    public static Builder builder() {\n+        return Builder.create();\n+    }\n+\n+    public abstract Builder toBuilder();\n+\n+    @AutoValue.Builder\n+    @JsonIgnoreProperties({\"name_lower\"})\n+    public static abstract class Builder {\n+\n+        @JsonCreator\n+        public static Builder create() {\n+            return new AutoValue_AuthzRoleDTO.Builder();\n+        }\n+\n+        @Id\n+        @ObjectId\n+        @JsonProperty(FIELD_ID)\n+        public abstract Builder id(String id);\n+\n+        @JsonProperty(FIELD_NAME)\n+        public abstract Builder name(String name);\n+\n+        @JsonProperty(FIELD_DESCRIPTION)\n+        public abstract Builder description(String description);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1a946f35ed00bd9fe2c04d363bd06a5979ac610"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4140, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}