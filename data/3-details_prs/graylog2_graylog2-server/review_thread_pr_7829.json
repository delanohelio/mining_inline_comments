{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MjM2NTU0", "number": 7829, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMToyOTo1N1rODydaag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjoyOTo0NVrODyeqyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjM3MjkwOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/WidgetQueryControls.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMToyOTo1N1rOGGg7Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMToyOTo1N1rOGGg7Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4NDA2Nw==", "bodyText": "values can be typed as well.", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409484067", "createdAt": "2020-04-16T11:29:57Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/WidgetQueryControls.jsx", "diffHunk": "@@ -105,56 +68,77 @@ const ResetOverrideHint = () => (\n   </CenteredBox>\n );\n \n+const onSubmit = (values, widget: Widget) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjM4Nzg0OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/searchbar/TimeRangeOverrideTypeSelector.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMTozNDozNFrOGGhEKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDo0ODo1N1rOGGpF6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4NjM3Nw==", "bodyText": "The propTypes can be removed.", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409486377", "createdAt": "2020-04-16T11:34:34Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/TimeRangeOverrideTypeSelector.jsx", "diffHunk": "@@ -1,42 +1,48 @@\n-import React from 'react';\n+// @flow strict\n+import * as React from 'react';\n+import { useCallback } from 'react';\n+import { useField } from 'formik';\n \n import { ButtonToolbar, DropdownButton, MenuItem } from 'components/graylog';\n import { Icon } from 'components/common';\n-import PropTypes from 'views/components/CustomPropTypes';\n+import { migrateTimeRangeToNewType } from '../TimerangeForForm';\n \n-const TimeRangeOverrideTypeSelector = ({ onSelect, value }) => (\n-  <ButtonToolbar className=\"extended-search-timerange-chooser pull-left\">\n-    <DropdownButton bsStyle=\"info\"\n-                    title={<Icon name=\"clock-o\" />}\n-                    onSelect={onSelect}\n-                    id=\"dropdown-timerange-selector\">\n-      <MenuItem eventKey=\"disabled\"\n-                active={value === undefined}>\n-        No Override\n-      </MenuItem>\n-      <MenuItem eventKey=\"relative\"\n-                active={value === 'relative'}>\n-        Relative\n-      </MenuItem>\n-      <MenuItem eventKey=\"absolute\"\n-                active={value === 'absolute'}>\n-        Absolute\n-      </MenuItem>\n-      <MenuItem eventKey=\"keyword\"\n-                active={value === 'keyword'}>\n-        Keyword\n-      </MenuItem>\n-    </DropdownButton>\n-  </ButtonToolbar>\n-);\n-\n-TimeRangeOverrideTypeSelector.propTypes = {\n-  onSelect: PropTypes.func.isRequired,\n-  value: PropTypes.TimeRangeType,\n+const TimeRangeOverrideTypeSelector = () => {\n+  const [{ value, onChange, name }] = useField('timerange');\n+  const { type } = value || {};\n+  const onSelect = useCallback((newType) => onChange({\n+    target: {\n+      value: migrateTimeRangeToNewType(value, newType),\n+      name,\n+    },\n+  }), [onChange, value]);\n+  return (\n+    <ButtonToolbar className=\"extended-search-timerange-chooser pull-left\">\n+      <DropdownButton bsStyle=\"info\"\n+                      title={<Icon name=\"clock\" />}\n+                      onSelect={onSelect}\n+                      id=\"dropdown-timerange-selector\">\n+        <MenuItem eventKey=\"disabled\"\n+                  active={type === undefined}>\n+          No Override\n+        </MenuItem>\n+        <MenuItem eventKey=\"relative\"\n+                  active={type === 'relative'}>\n+          Relative\n+        </MenuItem>\n+        <MenuItem eventKey=\"absolute\"\n+                  active={type === 'absolute'}>\n+          Absolute\n+        </MenuItem>\n+        <MenuItem eventKey=\"keyword\"\n+                  active={type === 'keyword'}>\n+          Keyword\n+        </MenuItem>\n+      </DropdownButton>\n+    </ButtonToolbar>\n+  );\n };\n \n-TimeRangeOverrideTypeSelector.defaultProps = {\n-  value: undefined,\n-};\n+TimeRangeOverrideTypeSelector.propTypes = {};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNzg5OQ==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409617899", "createdAt": "2020-04-16T14:48:57Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/searchbar/TimeRangeOverrideTypeSelector.jsx", "diffHunk": "@@ -1,42 +1,48 @@\n-import React from 'react';\n+// @flow strict\n+import * as React from 'react';\n+import { useCallback } from 'react';\n+import { useField } from 'formik';\n \n import { ButtonToolbar, DropdownButton, MenuItem } from 'components/graylog';\n import { Icon } from 'components/common';\n-import PropTypes from 'views/components/CustomPropTypes';\n+import { migrateTimeRangeToNewType } from '../TimerangeForForm';\n \n-const TimeRangeOverrideTypeSelector = ({ onSelect, value }) => (\n-  <ButtonToolbar className=\"extended-search-timerange-chooser pull-left\">\n-    <DropdownButton bsStyle=\"info\"\n-                    title={<Icon name=\"clock-o\" />}\n-                    onSelect={onSelect}\n-                    id=\"dropdown-timerange-selector\">\n-      <MenuItem eventKey=\"disabled\"\n-                active={value === undefined}>\n-        No Override\n-      </MenuItem>\n-      <MenuItem eventKey=\"relative\"\n-                active={value === 'relative'}>\n-        Relative\n-      </MenuItem>\n-      <MenuItem eventKey=\"absolute\"\n-                active={value === 'absolute'}>\n-        Absolute\n-      </MenuItem>\n-      <MenuItem eventKey=\"keyword\"\n-                active={value === 'keyword'}>\n-        Keyword\n-      </MenuItem>\n-    </DropdownButton>\n-  </ButtonToolbar>\n-);\n-\n-TimeRangeOverrideTypeSelector.propTypes = {\n-  onSelect: PropTypes.func.isRequired,\n-  value: PropTypes.TimeRangeType,\n+const TimeRangeOverrideTypeSelector = () => {\n+  const [{ value, onChange, name }] = useField('timerange');\n+  const { type } = value || {};\n+  const onSelect = useCallback((newType) => onChange({\n+    target: {\n+      value: migrateTimeRangeToNewType(value, newType),\n+      name,\n+    },\n+  }), [onChange, value]);\n+  return (\n+    <ButtonToolbar className=\"extended-search-timerange-chooser pull-left\">\n+      <DropdownButton bsStyle=\"info\"\n+                      title={<Icon name=\"clock\" />}\n+                      onSelect={onSelect}\n+                      id=\"dropdown-timerange-selector\">\n+        <MenuItem eventKey=\"disabled\"\n+                  active={type === undefined}>\n+          No Override\n+        </MenuItem>\n+        <MenuItem eventKey=\"relative\"\n+                  active={type === 'relative'}>\n+          Relative\n+        </MenuItem>\n+        <MenuItem eventKey=\"absolute\"\n+                  active={type === 'absolute'}>\n+          Absolute\n+        </MenuItem>\n+        <MenuItem eventKey=\"keyword\"\n+                  active={type === 'keyword'}>\n+          Keyword\n+        </MenuItem>\n+      </DropdownButton>\n+    </ButtonToolbar>\n+  );\n };\n \n-TimeRangeOverrideTypeSelector.defaultProps = {\n-  value: undefined,\n-};\n+TimeRangeOverrideTypeSelector.propTypes = {};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4NjM3Nw=="}, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjM5ODc4OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/searchbar/TimeRangeOverrideTypeSelector.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMTozODoxNFrOGGhLQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDo0ODo1MVrOGGpFmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4ODE5Mg==", "bodyText": "We could extract the default options relative, absolute and keyword in a component which can be used for TimeRangeOverrideTypeSelector and TimeRangeTypeSelector", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409488192", "createdAt": "2020-04-16T11:38:14Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/TimeRangeOverrideTypeSelector.jsx", "diffHunk": "@@ -1,42 +1,48 @@\n-import React from 'react';\n+// @flow strict\n+import * as React from 'react';\n+import { useCallback } from 'react';\n+import { useField } from 'formik';\n \n import { ButtonToolbar, DropdownButton, MenuItem } from 'components/graylog';\n import { Icon } from 'components/common';\n-import PropTypes from 'views/components/CustomPropTypes';\n+import { migrateTimeRangeToNewType } from '../TimerangeForForm';\n \n-const TimeRangeOverrideTypeSelector = ({ onSelect, value }) => (\n-  <ButtonToolbar className=\"extended-search-timerange-chooser pull-left\">\n-    <DropdownButton bsStyle=\"info\"\n-                    title={<Icon name=\"clock-o\" />}\n-                    onSelect={onSelect}\n-                    id=\"dropdown-timerange-selector\">\n-      <MenuItem eventKey=\"disabled\"\n-                active={value === undefined}>\n-        No Override\n-      </MenuItem>\n-      <MenuItem eventKey=\"relative\"\n-                active={value === 'relative'}>\n-        Relative\n-      </MenuItem>\n-      <MenuItem eventKey=\"absolute\"\n-                active={value === 'absolute'}>\n-        Absolute\n-      </MenuItem>\n-      <MenuItem eventKey=\"keyword\"\n-                active={value === 'keyword'}>\n-        Keyword\n-      </MenuItem>\n-    </DropdownButton>\n-  </ButtonToolbar>\n-);\n-\n-TimeRangeOverrideTypeSelector.propTypes = {\n-  onSelect: PropTypes.func.isRequired,\n-  value: PropTypes.TimeRangeType,\n+const TimeRangeOverrideTypeSelector = () => {\n+  const [{ value, onChange, name }] = useField('timerange');\n+  const { type } = value || {};\n+  const onSelect = useCallback((newType) => onChange({\n+    target: {\n+      value: migrateTimeRangeToNewType(value, newType),\n+      name,\n+    },\n+  }), [onChange, value]);\n+  return (\n+    <ButtonToolbar className=\"extended-search-timerange-chooser pull-left\">\n+      <DropdownButton bsStyle=\"info\"\n+                      title={<Icon name=\"clock\" />}\n+                      onSelect={onSelect}\n+                      id=\"dropdown-timerange-selector\">\n+        <MenuItem eventKey=\"disabled\"\n+                  active={type === undefined}>\n+          No Override\n+        </MenuItem>\n+        <MenuItem eventKey=\"relative\"\n+                  active={type === 'relative'}>\n+          Relative\n+        </MenuItem>\n+        <MenuItem eventKey=\"absolute\"\n+                  active={type === 'absolute'}>\n+          Absolute\n+        </MenuItem>\n+        <MenuItem eventKey=\"keyword\"\n+                  active={type === 'keyword'}>\n+          Keyword\n+        </MenuItem>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNzgxOQ==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409617819", "createdAt": "2020-04-16T14:48:51Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/searchbar/TimeRangeOverrideTypeSelector.jsx", "diffHunk": "@@ -1,42 +1,48 @@\n-import React from 'react';\n+// @flow strict\n+import * as React from 'react';\n+import { useCallback } from 'react';\n+import { useField } from 'formik';\n \n import { ButtonToolbar, DropdownButton, MenuItem } from 'components/graylog';\n import { Icon } from 'components/common';\n-import PropTypes from 'views/components/CustomPropTypes';\n+import { migrateTimeRangeToNewType } from '../TimerangeForForm';\n \n-const TimeRangeOverrideTypeSelector = ({ onSelect, value }) => (\n-  <ButtonToolbar className=\"extended-search-timerange-chooser pull-left\">\n-    <DropdownButton bsStyle=\"info\"\n-                    title={<Icon name=\"clock-o\" />}\n-                    onSelect={onSelect}\n-                    id=\"dropdown-timerange-selector\">\n-      <MenuItem eventKey=\"disabled\"\n-                active={value === undefined}>\n-        No Override\n-      </MenuItem>\n-      <MenuItem eventKey=\"relative\"\n-                active={value === 'relative'}>\n-        Relative\n-      </MenuItem>\n-      <MenuItem eventKey=\"absolute\"\n-                active={value === 'absolute'}>\n-        Absolute\n-      </MenuItem>\n-      <MenuItem eventKey=\"keyword\"\n-                active={value === 'keyword'}>\n-        Keyword\n-      </MenuItem>\n-    </DropdownButton>\n-  </ButtonToolbar>\n-);\n-\n-TimeRangeOverrideTypeSelector.propTypes = {\n-  onSelect: PropTypes.func.isRequired,\n-  value: PropTypes.TimeRangeType,\n+const TimeRangeOverrideTypeSelector = () => {\n+  const [{ value, onChange, name }] = useField('timerange');\n+  const { type } = value || {};\n+  const onSelect = useCallback((newType) => onChange({\n+    target: {\n+      value: migrateTimeRangeToNewType(value, newType),\n+      name,\n+    },\n+  }), [onChange, value]);\n+  return (\n+    <ButtonToolbar className=\"extended-search-timerange-chooser pull-left\">\n+      <DropdownButton bsStyle=\"info\"\n+                      title={<Icon name=\"clock\" />}\n+                      onSelect={onSelect}\n+                      id=\"dropdown-timerange-selector\">\n+        <MenuItem eventKey=\"disabled\"\n+                  active={type === undefined}>\n+          No Override\n+        </MenuItem>\n+        <MenuItem eventKey=\"relative\"\n+                  active={type === 'relative'}>\n+          Relative\n+        </MenuItem>\n+        <MenuItem eventKey=\"absolute\"\n+                  active={type === 'absolute'}>\n+          Absolute\n+        </MenuItem>\n+        <MenuItem eventKey=\"keyword\"\n+                  active={type === 'keyword'}>\n+          Keyword\n+        </MenuItem>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4ODE5Mg=="}, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjQyMDY0OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/searchbar/TimeRangeInput.jsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMTo0NDo1MVrOGGhYtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDo1NjoyMVrOGGpdtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ5MTYzOQ==", "bodyText": "This check is not really necessary, because timerangeStrategies[undefined] is falsy as well. Or do you just prefer being explicit?", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409491639", "createdAt": "2020-04-16T11:44:51Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/TimeRangeInput.jsx", "diffHunk": "@@ -1,31 +1,50 @@\n-import React from 'react';\n+// @flow strict\n+import * as React from 'react';\n import PropTypes from 'prop-types';\n+import { useField } from 'formik';\n \n-import RelativeTimeRangeSelector from 'views/components/searchbar/RelativeTimeRangeSelector';\n+import type { SearchesConfig } from 'components/search/SearchConfig';\n import AbsoluteTimeRangeSelector from 'views/components/searchbar/AbsoluteTimeRangeSelector';\n import KeywordTimeRangeSelector from 'views/components/searchbar/KeywordTimeRangeSelector';\n+import RelativeTimeRangeSelector from 'views/components/searchbar/RelativeTimeRangeSelector';\n+import DisabledTimeRangeSelector from './DisabledTimeRangeSelector';\n \n-export default function TimeRangeInput({ disabled, rangeType, rangeParams, config, onChange }) {\n-  switch (rangeType) {\n-    case 'relative':\n-      return <RelativeTimeRangeSelector disabled={disabled} value={rangeParams} config={config} onChange={onChange} />;\n-    case 'absolute':\n-      return <AbsoluteTimeRangeSelector disabled={disabled} value={rangeParams} onChange={onChange} />;\n-    case 'keyword':\n-      return <KeywordTimeRangeSelector disabled={disabled} value={rangeParams} onChange={onChange} />;\n-    default:\n-      throw new Error(`Unsupported range type ${rangeType}`);\n+type Props = {\n+  disabled: boolean,\n+  config: SearchesConfig,\n+};\n+\n+const timerangeStrategies = {\n+  absolute: {\n+    component: AbsoluteTimeRangeSelector,\n+  },\n+  relative: {\n+    component: RelativeTimeRangeSelector,\n+  },\n+  keyword: {\n+    component: KeywordTimeRangeSelector,\n+  },\n+};\n+\n+const timerangeStrategy = (type) => {\n+  if (type === undefined) {\n+    return { component: DisabledTimeRangeSelector };\n   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUwMjU2Ng==", "bodyText": "We can type the param type here as well.", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409502566", "createdAt": "2020-04-16T12:05:17Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/TimeRangeInput.jsx", "diffHunk": "@@ -1,31 +1,50 @@\n-import React from 'react';\n+// @flow strict\n+import * as React from 'react';\n import PropTypes from 'prop-types';\n+import { useField } from 'formik';\n \n-import RelativeTimeRangeSelector from 'views/components/searchbar/RelativeTimeRangeSelector';\n+import type { SearchesConfig } from 'components/search/SearchConfig';\n import AbsoluteTimeRangeSelector from 'views/components/searchbar/AbsoluteTimeRangeSelector';\n import KeywordTimeRangeSelector from 'views/components/searchbar/KeywordTimeRangeSelector';\n+import RelativeTimeRangeSelector from 'views/components/searchbar/RelativeTimeRangeSelector';\n+import DisabledTimeRangeSelector from './DisabledTimeRangeSelector';\n \n-export default function TimeRangeInput({ disabled, rangeType, rangeParams, config, onChange }) {\n-  switch (rangeType) {\n-    case 'relative':\n-      return <RelativeTimeRangeSelector disabled={disabled} value={rangeParams} config={config} onChange={onChange} />;\n-    case 'absolute':\n-      return <AbsoluteTimeRangeSelector disabled={disabled} value={rangeParams} onChange={onChange} />;\n-    case 'keyword':\n-      return <KeywordTimeRangeSelector disabled={disabled} value={rangeParams} onChange={onChange} />;\n-    default:\n-      throw new Error(`Unsupported range type ${rangeType}`);\n+type Props = {\n+  disabled: boolean,\n+  config: SearchesConfig,\n+};\n+\n+const timerangeStrategies = {\n+  absolute: {\n+    component: AbsoluteTimeRangeSelector,\n+  },\n+  relative: {\n+    component: RelativeTimeRangeSelector,\n+  },\n+  keyword: {\n+    component: KeywordTimeRangeSelector,\n+  },\n+};\n+\n+const timerangeStrategy = (type) => {\n+  if (type === undefined) {\n+    return { component: DisabledTimeRangeSelector };\n   }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ5MTYzOQ=="}, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYyMzk5MA==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409623990", "createdAt": "2020-04-16T14:56:21Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/searchbar/TimeRangeInput.jsx", "diffHunk": "@@ -1,31 +1,50 @@\n-import React from 'react';\n+// @flow strict\n+import * as React from 'react';\n import PropTypes from 'prop-types';\n+import { useField } from 'formik';\n \n-import RelativeTimeRangeSelector from 'views/components/searchbar/RelativeTimeRangeSelector';\n+import type { SearchesConfig } from 'components/search/SearchConfig';\n import AbsoluteTimeRangeSelector from 'views/components/searchbar/AbsoluteTimeRangeSelector';\n import KeywordTimeRangeSelector from 'views/components/searchbar/KeywordTimeRangeSelector';\n+import RelativeTimeRangeSelector from 'views/components/searchbar/RelativeTimeRangeSelector';\n+import DisabledTimeRangeSelector from './DisabledTimeRangeSelector';\n \n-export default function TimeRangeInput({ disabled, rangeType, rangeParams, config, onChange }) {\n-  switch (rangeType) {\n-    case 'relative':\n-      return <RelativeTimeRangeSelector disabled={disabled} value={rangeParams} config={config} onChange={onChange} />;\n-    case 'absolute':\n-      return <AbsoluteTimeRangeSelector disabled={disabled} value={rangeParams} onChange={onChange} />;\n-    case 'keyword':\n-      return <KeywordTimeRangeSelector disabled={disabled} value={rangeParams} onChange={onChange} />;\n-    default:\n-      throw new Error(`Unsupported range type ${rangeType}`);\n+type Props = {\n+  disabled: boolean,\n+  config: SearchesConfig,\n+};\n+\n+const timerangeStrategies = {\n+  absolute: {\n+    component: AbsoluteTimeRangeSelector,\n+  },\n+  relative: {\n+    component: RelativeTimeRangeSelector,\n+  },\n+  keyword: {\n+    component: KeywordTimeRangeSelector,\n+  },\n+};\n+\n+const timerangeStrategy = (type) => {\n+  if (type === undefined) {\n+    return { component: DisabledTimeRangeSelector };\n   }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ5MTYzOQ=="}, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjUwMzc4OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/TimerangeForForm.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjowOToyOVrOGGiMAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDo0NTowOVrOGGo5xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUwNDc2OQ==", "bodyText": "We are checking if the provided type exists in comparable cases, let's check it here as well.", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409504769", "createdAt": "2020-04-16T12:09:29Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/TimerangeForForm.js", "diffHunk": "@@ -0,0 +1,66 @@\n+// @flow strict\n+import moment from 'moment';\n+\n+import DateTime from 'logic/datetimes/DateTime';\n+import type { TimeRange } from 'views/logic/queries/Query';\n+\n+const formatDatetime = (datetime) => datetime.toString(DateTime.Formats.TIMESTAMP);\n+\n+export const onSubmittingTimerange = (timerange: TimeRange): TimeRange => {\n+  switch (timerange.type) {\n+    case 'absolute':\n+      return {\n+        type: timerange.type,\n+        from: DateTime.parseFromString(timerange.from).toISOString(),\n+        to: DateTime.parseFromString(timerange.to).toISOString(),\n+      };\n+    case 'relative':\n+      return {\n+        type: timerange.type,\n+        range: timerange.range,\n+      };\n+    case 'keyword':\n+      return timerange;\n+    default: throw new Error(`Invalid time range type: ${timerange.type}`);\n+  }\n+};\n+\n+export const onInitializingTimerange = (timerange: TimeRange): TimeRange => {\n+  switch (timerange.type) {\n+    case 'absolute':\n+      return {\n+        type: timerange.type,\n+        from: formatDatetime(DateTime.parseFromString(timerange.from)),\n+        to: formatDatetime(DateTime.parseFromString(timerange.to)),\n+      };\n+    case 'relative':\n+      return {\n+        type: timerange.type,\n+        range: timerange.range,\n+      };\n+    case 'keyword':\n+      return timerange;\n+    default: throw new Error(`Invalid time range type: ${timerange.type}`);\n+  }\n+};\n+\n+const migrationStrategies = {\n+  absolute: (oldTimerange: ?TimeRange) => ({\n+    type: 'absolute',\n+    from: formatDatetime(new DateTime(moment().subtract((oldTimerange && oldTimerange.type === 'relative') ? oldTimerange.range : 300, 'seconds'))),\n+    to: formatDatetime(new DateTime(moment())),\n+  }),\n+  relative: () => ({ type: 'relative', range: 300 }),\n+  keyword: () => ({ type: 'keyword', keyword: 'Last five minutes' }),\n+  disabled: () => undefined,\n+};\n+\n+export const migrateTimeRangeToNewType = (oldTimerange: ?TimeRange, type: string): ?TimeRange => {\n+  const oldType = oldTimerange ? oldTimerange.type : 'disabled';\n+\n+  if (type === oldType) {\n+    return oldTimerange;\n+  }\n+\n+  return migrationStrategies[type](oldTimerange);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDc4OQ==", "bodyText": "\u2705", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409614789", "createdAt": "2020-04-16T14:45:09Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/TimerangeForForm.js", "diffHunk": "@@ -0,0 +1,66 @@\n+// @flow strict\n+import moment from 'moment';\n+\n+import DateTime from 'logic/datetimes/DateTime';\n+import type { TimeRange } from 'views/logic/queries/Query';\n+\n+const formatDatetime = (datetime) => datetime.toString(DateTime.Formats.TIMESTAMP);\n+\n+export const onSubmittingTimerange = (timerange: TimeRange): TimeRange => {\n+  switch (timerange.type) {\n+    case 'absolute':\n+      return {\n+        type: timerange.type,\n+        from: DateTime.parseFromString(timerange.from).toISOString(),\n+        to: DateTime.parseFromString(timerange.to).toISOString(),\n+      };\n+    case 'relative':\n+      return {\n+        type: timerange.type,\n+        range: timerange.range,\n+      };\n+    case 'keyword':\n+      return timerange;\n+    default: throw new Error(`Invalid time range type: ${timerange.type}`);\n+  }\n+};\n+\n+export const onInitializingTimerange = (timerange: TimeRange): TimeRange => {\n+  switch (timerange.type) {\n+    case 'absolute':\n+      return {\n+        type: timerange.type,\n+        from: formatDatetime(DateTime.parseFromString(timerange.from)),\n+        to: formatDatetime(DateTime.parseFromString(timerange.to)),\n+      };\n+    case 'relative':\n+      return {\n+        type: timerange.type,\n+        range: timerange.range,\n+      };\n+    case 'keyword':\n+      return timerange;\n+    default: throw new Error(`Invalid time range type: ${timerange.type}`);\n+  }\n+};\n+\n+const migrationStrategies = {\n+  absolute: (oldTimerange: ?TimeRange) => ({\n+    type: 'absolute',\n+    from: formatDatetime(new DateTime(moment().subtract((oldTimerange && oldTimerange.type === 'relative') ? oldTimerange.range : 300, 'seconds'))),\n+    to: formatDatetime(new DateTime(moment())),\n+  }),\n+  relative: () => ({ type: 'relative', range: 300 }),\n+  keyword: () => ({ type: 'keyword', keyword: 'Last five minutes' }),\n+  disabled: () => undefined,\n+};\n+\n+export const migrateTimeRangeToNewType = (oldTimerange: ?TimeRange, type: string): ?TimeRange => {\n+  const oldType = oldTimerange ? oldTimerange.type : 'disabled';\n+\n+  if (type === oldType) {\n+    return oldTimerange;\n+  }\n+\n+  return migrationStrategies[type](oldTimerange);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUwNDc2OQ=="}, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjUyMjAwOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/searchbar/SearchButton.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjoxNDo0NFrOGGiXUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjoxNDo0NFrOGGiXUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUwNzY2Ng==", "bodyText": "Something for a follow up PR: We should add this color to our theme.", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409507666", "createdAt": "2020-04-16T12:14:44Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/SearchButton.jsx", "diffHunk": "@@ -1,24 +1,60 @@\n+// @flow strict\n import React from 'react';\n import PropTypes from 'prop-types';\n+import styled from 'styled-components';\n+import type { StyledComponent } from 'styled-components';\n \n import { Button } from 'components/graylog';\n import { Spinner, Icon } from 'components/common';\n+import type { ThemeInterface } from 'theme/index';\n \n-const SearchButton = ({ running, disabled, glyph }) => (\n-  <Button type=\"submit\" bsStyle={running ? 'warning' : 'success'} disabled={disabled} className=\"pull-left search-button-execute\">\n-    {running ? <Spinner fixedWidth pulse text=\"\" /> : <Icon name={glyph} /> }\n-  </Button>\n-);\n+const DirtyButton: StyledComponent<{}, ThemeInterface, any> = styled(Button)`\n+  position: relative;\n+\n+  ::after {\n+    position: absolute;\n+    content: '';\n+    height: 16px;\n+    width: 16px;\n+    top: -5px;\n+    right: -6px;\n+    border-radius: 50%;\n+    background-color: #ffc107;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjU0NzE1OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/searchbar/SearchButton.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjoyMTozMVrOGGinFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDo1ODoyMFrOGGpkKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUxMTcwMA==", "bodyText": "Not related to this PR, but we are never defining the running prop. Are we not using the button loading state, because of to the global loading indicator?", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409511700", "createdAt": "2020-04-16T12:21:31Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/SearchButton.jsx", "diffHunk": "@@ -1,24 +1,60 @@\n+// @flow strict\n import React from 'react';\n import PropTypes from 'prop-types';\n+import styled from 'styled-components';\n+import type { StyledComponent } from 'styled-components';\n \n import { Button } from 'components/graylog';\n import { Spinner, Icon } from 'components/common';\n+import type { ThemeInterface } from 'theme/index';\n \n-const SearchButton = ({ running, disabled, glyph }) => (\n-  <Button type=\"submit\" bsStyle={running ? 'warning' : 'success'} disabled={disabled} className=\"pull-left search-button-execute\">\n-    {running ? <Spinner fixedWidth pulse text=\"\" /> : <Icon name={glyph} /> }\n-  </Button>\n-);\n+const DirtyButton: StyledComponent<{}, ThemeInterface, any> = styled(Button)`\n+  position: relative;\n+\n+  ::after {\n+    position: absolute;\n+    content: '';\n+    height: 16px;\n+    width: 16px;\n+    top: -5px;\n+    right: -6px;\n+    border-radius: 50%;\n+    background-color: #ffc107;\n+  }\n+`;\n+\n+type Props = {\n+  running: boolean,\n+  disabled: boolean,\n+  glyph: string,\n+  dirty: boolean,\n+};\n+\n+const SearchButton = ({ running, disabled, glyph, dirty }: Props) => {\n+  const ButtonComponent = dirty ? DirtyButton : Button;\n+  const title = dirty ? 'Perform search (changes were made after last search execution)' : 'Perform search';\n+  return (\n+    <ButtonComponent type=\"submit\"\n+                     bsStyle={running ? 'warning' : 'success'}\n+                     disabled={disabled}\n+                     title={title}\n+                     className=\"pull-left search-button-execute\">\n+      {running ? <Spinner fixedWidth pulse text=\"\" /> : <Icon name={glyph} />}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYyNTY0Mg==", "bodyText": "We never really used it, so I removed it.", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409625642", "createdAt": "2020-04-16T14:58:20Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/searchbar/SearchButton.jsx", "diffHunk": "@@ -1,24 +1,60 @@\n+// @flow strict\n import React from 'react';\n import PropTypes from 'prop-types';\n+import styled from 'styled-components';\n+import type { StyledComponent } from 'styled-components';\n \n import { Button } from 'components/graylog';\n import { Spinner, Icon } from 'components/common';\n+import type { ThemeInterface } from 'theme/index';\n \n-const SearchButton = ({ running, disabled, glyph }) => (\n-  <Button type=\"submit\" bsStyle={running ? 'warning' : 'success'} disabled={disabled} className=\"pull-left search-button-execute\">\n-    {running ? <Spinner fixedWidth pulse text=\"\" /> : <Icon name={glyph} /> }\n-  </Button>\n-);\n+const DirtyButton: StyledComponent<{}, ThemeInterface, any> = styled(Button)`\n+  position: relative;\n+\n+  ::after {\n+    position: absolute;\n+    content: '';\n+    height: 16px;\n+    width: 16px;\n+    top: -5px;\n+    right: -6px;\n+    border-radius: 50%;\n+    background-color: #ffc107;\n+  }\n+`;\n+\n+type Props = {\n+  running: boolean,\n+  disabled: boolean,\n+  glyph: string,\n+  dirty: boolean,\n+};\n+\n+const SearchButton = ({ running, disabled, glyph, dirty }: Props) => {\n+  const ButtonComponent = dirty ? DirtyButton : Button;\n+  const title = dirty ? 'Perform search (changes were made after last search execution)' : 'Perform search';\n+  return (\n+    <ButtonComponent type=\"submit\"\n+                     bsStyle={running ? 'warning' : 'success'}\n+                     disabled={disabled}\n+                     title={title}\n+                     className=\"pull-left search-button-execute\">\n+      {running ? <Spinner fixedWidth pulse text=\"\" /> : <Icon name={glyph} />}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUxMTcwMA=="}, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjU3ODY0OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/searchbar/SearchButton.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjoyOTo0NVrOGGi6LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDozNjoyMlrOGGoexQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUxNjU4OQ==", "bodyText": "There is no immediate benefit, but any can be replaces with HTMLButtonElement", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409516589", "createdAt": "2020-04-16T12:29:45Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/SearchButton.jsx", "diffHunk": "@@ -1,24 +1,60 @@\n+// @flow strict\n import React from 'react';\n import PropTypes from 'prop-types';\n+import styled from 'styled-components';\n+import type { StyledComponent } from 'styled-components';\n \n import { Button } from 'components/graylog';\n import { Spinner, Icon } from 'components/common';\n+import type { ThemeInterface } from 'theme/index';\n \n-const SearchButton = ({ running, disabled, glyph }) => (\n-  <Button type=\"submit\" bsStyle={running ? 'warning' : 'success'} disabled={disabled} className=\"pull-left search-button-execute\">\n-    {running ? <Spinner fixedWidth pulse text=\"\" /> : <Icon name={glyph} /> }\n-  </Button>\n-);\n+const DirtyButton: StyledComponent<{}, ThemeInterface, any> = styled(Button)`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNzg3Nw==", "bodyText": "Actually there is, because if we make wrappedTestingLibrary return a properly typed function, we will need explicit element types in tests.", "url": "https://github.com/Graylog2/graylog2-server/pull/7829#discussion_r409607877", "createdAt": "2020-04-16T14:36:22Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/searchbar/SearchButton.jsx", "diffHunk": "@@ -1,24 +1,60 @@\n+// @flow strict\n import React from 'react';\n import PropTypes from 'prop-types';\n+import styled from 'styled-components';\n+import type { StyledComponent } from 'styled-components';\n \n import { Button } from 'components/graylog';\n import { Spinner, Icon } from 'components/common';\n+import type { ThemeInterface } from 'theme/index';\n \n-const SearchButton = ({ running, disabled, glyph }) => (\n-  <Button type=\"submit\" bsStyle={running ? 'warning' : 'success'} disabled={disabled} className=\"pull-left search-button-execute\">\n-    {running ? <Spinner fixedWidth pulse text=\"\" /> : <Icon name={glyph} /> }\n-  </Button>\n-);\n+const DirtyButton: StyledComponent<{}, ThemeInterface, any> = styled(Button)`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUxNjU4OQ=="}, "originalCommit": {"oid": "1ff2800a1843b1249e9b2ea555edcecaf29ad0bb"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3784, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}