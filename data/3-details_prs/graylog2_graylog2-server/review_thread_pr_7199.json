{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNTYyOTc4", "number": 7199, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzoxMjoyMlrODYf2pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzozNDozOVrODYgQbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDE0MzEwOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/shared/buffers/processors/ProcessBufferProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzoxMjoyMlrOFeY16g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDozMzo1NVrOFebYVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQwODYxOA==", "bodyText": "I think we should make this variable volatile to ensure cross-thread visibility.", "url": "https://github.com/Graylog2/graylog2-server/pull/7199#discussion_r367408618", "createdAt": "2020-01-16T13:12:22Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/shared/buffers/processors/ProcessBufferProcessor.java", "diffHunk": "@@ -56,6 +57,7 @@\n     private final ULID ulid;\n     private final DecodingProcessor decodingProcessor;\n     private final Provider<Stream> defaultStreamProvider;\n+    private MessageEvent currentEvent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b9260b0f75a7f119ed435c103a001ba0c661881"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1MDE5OQ==", "bodyText": "Good catch \ud83d\udc4d", "url": "https://github.com/Graylog2/graylog2-server/pull/7199#discussion_r367450199", "createdAt": "2020-01-16T14:33:55Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog2/shared/buffers/processors/ProcessBufferProcessor.java", "diffHunk": "@@ -56,6 +57,7 @@\n     private final ULID ulid;\n     private final DecodingProcessor decodingProcessor;\n     private final Provider<Stream> defaultStreamProvider;\n+    private MessageEvent currentEvent;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQwODYxOA=="}, "originalCommit": {"oid": "9b9260b0f75a7f119ed435c103a001ba0c661881"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDE4MDc3OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/shared/buffers/processors/ProcessBufferProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzoyNTo0MVrOFeZNMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDozNjo0MFrOFebedQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQxNDU3OQ==", "bodyText": "How about setting (and clearing) this in #dispatchMessage() instead? That way we only get the single message. The MessageEvent could contain one or more messages.", "url": "https://github.com/Graylog2/graylog2-server/pull/7199#discussion_r367414579", "createdAt": "2020-01-16T13:25:41Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/shared/buffers/processors/ProcessBufferProcessor.java", "diffHunk": "@@ -75,11 +77,13 @@ public ProcessBufferProcessor(MetricRegistry metricRegistry,\n         incomingMessages = metricRegistry.meter(name(ProcessBufferProcessor.class, \"incomingMessages\"));\n         outgoingMessages = metricRegistry.meter(name(ProcessBufferProcessor.class, \"outgoingMessages\"));\n         processTime = metricRegistry.timer(name(ProcessBufferProcessor.class, \"processTime\"));\n+        currentEvent = null;\n     }\n \n     @Override\n     public void onEvent(MessageEvent event) throws Exception {\n         try {\n+            currentEvent = event;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b9260b0f75a7f119ed435c103a001ba0c661881"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1MTc2NQ==", "bodyText": "I agree. The downside is that we wouldn't see problems within a DecodingProcessor but that's less unlikely.", "url": "https://github.com/Graylog2/graylog2-server/pull/7199#discussion_r367451765", "createdAt": "2020-01-16T14:36:40Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog2/shared/buffers/processors/ProcessBufferProcessor.java", "diffHunk": "@@ -75,11 +77,13 @@ public ProcessBufferProcessor(MetricRegistry metricRegistry,\n         incomingMessages = metricRegistry.meter(name(ProcessBufferProcessor.class, \"incomingMessages\"));\n         outgoingMessages = metricRegistry.meter(name(ProcessBufferProcessor.class, \"outgoingMessages\"));\n         processTime = metricRegistry.timer(name(ProcessBufferProcessor.class, \"processTime\"));\n+        currentEvent = null;\n     }\n \n     @Override\n     public void onEvent(MessageEvent event) throws Exception {\n         try {\n+            currentEvent = event;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQxNDU3OQ=="}, "originalCommit": {"oid": "9b9260b0f75a7f119ed435c103a001ba0c661881"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDIwOTA5OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/cluster/ClusterSystemResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzozNDozOVrOFeZeFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTowNTo1MVrOFeciQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQxODkwMg==", "bodyText": "What do you think about adding another endpoint that returns the dumps for all nodes? That would make it way easier to use. We have ProxiedResource#getForAllNodes() for that. Example:\n\n  \n    \n      graylog2-server/graylog2-server/src/main/java/org/graylog2/rest/resources/cluster/ClusterSystemJobResource.java\n    \n    \n         Line 74\n      in\n      cb33786\n    \n    \n    \n    \n\n        \n          \n           return getForAllNodes(RemoteSystemJobResource::list, createRemoteInterfaceProvider(RemoteSystemJobResource.class));", "url": "https://github.com/Graylog2/graylog2-server/pull/7199#discussion_r367418902", "createdAt": "2020-01-16T13:34:39Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/cluster/ClusterSystemResource.java", "diffHunk": "@@ -116,5 +117,26 @@ public SystemThreadDumpResponse threadDump(@ApiParam(name = \"nodeId\", value = \"T\n             throw new WebApplicationException(response.message(), BAD_GATEWAY);\n         }\n     }\n+\n+    @GET\n+    @Timed\n+    @ApiOperation(value = \"Get a process buffer dump of the given node\")\n+    @RequiresPermissions(RestPermissions.PROCESSBUFFER_DUMP)\n+    @Path(\"{nodeId}/processbufferdump\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b9260b0f75a7f119ed435c103a001ba0c661881"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ2OTEyMw==", "bodyText": "Nice. Thanks. BTW, I think we should also add this to get all metrics (org.) from the cluster", "url": "https://github.com/Graylog2/graylog2-server/pull/7199#discussion_r367469123", "createdAt": "2020-01-16T15:05:51Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/cluster/ClusterSystemResource.java", "diffHunk": "@@ -116,5 +117,26 @@ public SystemThreadDumpResponse threadDump(@ApiParam(name = \"nodeId\", value = \"T\n             throw new WebApplicationException(response.message(), BAD_GATEWAY);\n         }\n     }\n+\n+    @GET\n+    @Timed\n+    @ApiOperation(value = \"Get a process buffer dump of the given node\")\n+    @RequiresPermissions(RestPermissions.PROCESSBUFFER_DUMP)\n+    @Path(\"{nodeId}/processbufferdump\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQxODkwMg=="}, "originalCommit": {"oid": "9b9260b0f75a7f119ed435c103a001ba0c661881"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3908, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}