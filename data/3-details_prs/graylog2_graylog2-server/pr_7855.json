{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMjI1MzY3", "number": 7855, "title": "String Interpolation for Pipeline Rules", "bodyText": "Implements string  interpolation for pipeline rules\nDescription\n\nMotivation and Context\n\navoid formulation like concat( \"str1\" , concat( \"str2\", ...) in pipeline rules\n\nGraylog2/graylog-plugin-pipeline-processor#95\nHow Has This Been Tested?\n\nAdded a unit test which execute the following pipeline rule:\nrule \"stringConcat\"\nwhen true\nthen\n    let result = \"aa\" + \"bb\" + \"cc\";\n    set_field(\"result\", result);\nend\n\nCheck that the field result is equal to \"aabbcc\"\n\n\nScreenshots (if appropriate):\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.\n\ndocumentation:\nGraylog2/documentation#851", "createdAt": "2020-04-09T05:58:11Z", "url": "https://github.com/Graylog2/graylog2-server/pull/7855", "merged": true, "mergeCommit": {"oid": "c28344f21a3804808c42acae8e388a33ddedd9be"}, "closed": true, "closedAt": "2020-04-24T09:38:46Z", "author": {"login": "rmanibus"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV5_gngH2gAyNDAxMjI1MzY3OmMzODE4MDUzZjE4ZThkYTllYzRkOTNlZDY3OTNmYzZhMmJlMzI4ZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcauNclAFqTM5OTc5MzYyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c3818053f18e8da9ec4d93ed6793fc6a2be328ea", "author": {"user": {"login": "rmanibus", "name": "Lo\u00efc Hermann"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c3818053f18e8da9ec4d93ed6793fc6a2be328ea", "committedDate": "2020-04-09T10:32:27Z", "message": "create LiteralExpression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d6f3d5e1738810c8a7f45a4412ac5659966d090", "author": {"user": {"login": "rmanibus", "name": "Lo\u00efc Hermann"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/2d6f3d5e1738810c8a7f45a4412ac5659966d090", "committedDate": "2020-04-09T10:32:27Z", "message": "handle string in AdditionExpression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee574ce42e98e27c497e5e6569ea8088624426af", "author": {"user": {"login": "rmanibus", "name": "Lo\u00efc Hermann"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/ee574ce42e98e27c497e5e6569ea8088624426af", "committedDate": "2020-04-09T10:32:27Z", "message": "exitAddition already ensure that left & right type are the same"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28bb0a5e0714b83c8fe2d506e3be0e369f6a11f1", "author": {"user": {"login": "rmanibus", "name": "Lo\u00efc Hermann"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/28bb0a5e0714b83c8fe2d506e3be0e369f6a11f1", "committedDate": "2020-04-09T10:32:27Z", "message": "add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52ada60cb79690bebd775098d91f19c466cc8e3a", "author": {"user": {"login": "rmanibus", "name": "Lo\u00efc Hermann"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/52ada60cb79690bebd775098d91f19c466cc8e3a", "committedDate": "2020-04-09T10:32:27Z", "message": "add third member to expression to be sure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4358a03992eb18c83b7e90f99fc50aa48a8966c7", "author": {"user": {"login": "rmanibus", "name": "Lo\u00efc Hermann"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/4358a03992eb18c83b7e90f99fc50aa48a8966c7", "committedDate": "2020-04-09T10:06:17Z", "message": "add third member to expression to be sure"}, "afterCommit": {"oid": "52ada60cb79690bebd775098d91f19c466cc8e3a", "author": {"user": {"login": "rmanibus", "name": "Lo\u00efc Hermann"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/52ada60cb79690bebd775098d91f19c466cc8e3a", "committedDate": "2020-04-09T10:32:27Z", "message": "add third member to expression to be sure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDQ2ODIz", "url": "https://github.com/Graylog2/graylog2-server/pull/7855#pullrequestreview-394446823", "createdAt": "2020-04-16T09:16:29Z", "commit": {"oid": "52ada60cb79690bebd775098d91f19c466cc8e3a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOToxNjoyOVrOGGcLcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOToyNTowNlrOGGchPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwNjMyMA==", "bodyText": "Please format whitespace here according to the rest of the file (space before and after keywords, between ) and { and no inner space in () expressions.", "url": "https://github.com/Graylog2/graylog2-server/pull/7855#discussion_r409406320", "createdAt": "2020-04-16T09:16:29Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/ast/expressions/AdditionExpression.java", "diffHunk": "@@ -92,6 +91,13 @@ public Object evaluateUnsafe(EvaluationContext context) {\n             } else {\n                 return new Duration(right, left);\n             }\n+        }else if(String.class.equals(type) ){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ada60cb79690bebd775098d91f19c466cc8e3a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwODE2Mg==", "bodyText": "Both this and the next line warn about Casting 'leftValue' to 'String' may produce 'ClassCastException'.\nWhile technically the code cannot throw that exception (leftValue is a string because we checked and rightValue has to be a string, too, because of the parser/typechecker checks, we try to avoid warnings in code when possible.\nMy suggestion would be to rewrite this as String.valueOf(leftValue) to be future proof.", "url": "https://github.com/Graylog2/graylog2-server/pull/7855#discussion_r409408162", "createdAt": "2020-04-16T09:19:15Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/ast/expressions/AdditionExpression.java", "diffHunk": "@@ -92,6 +91,13 @@ public Object evaluateUnsafe(EvaluationContext context) {\n             } else {\n                 return new Duration(right, left);\n             }\n+        }else if(String.class.equals(type) ){\n+            if(!isPlus){\n+                return null;\n+            }\n+            final String left = (String) leftValue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ada60cb79690bebd775098d91f19c466cc8e3a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwODIzNg==", "bodyText": "same as above", "url": "https://github.com/Graylog2/graylog2-server/pull/7855#discussion_r409408236", "createdAt": "2020-04-16T09:19:24Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/ast/expressions/AdditionExpression.java", "diffHunk": "@@ -92,6 +91,13 @@ public Object evaluateUnsafe(EvaluationContext context) {\n             } else {\n                 return new Duration(right, left);\n             }\n+        }else if(String.class.equals(type) ){\n+            if(!isPlus){\n+                return null;\n+            }\n+            final String left = (String) leftValue;\n+            final String right = (String) rightValue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ada60cb79690bebd775098d91f19c466cc8e3a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwODY1OA==", "bodyText": "Please change the name to stringConcat to look the same as the other tests.\nThat also requires the file string_concat.txt to be stringConcat.txt below.", "url": "https://github.com/Graylog2/graylog2-server/pull/7855#discussion_r409408658", "createdAt": "2020-04-16T09:20:01Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/test/java/org/graylog/plugins/pipelineprocessor/functions/FunctionsSnippetsTest.java", "diffHunk": "@@ -362,6 +362,15 @@ public static void registerFunctions() {\n         functionRegistry = new FunctionRegistry(functions);\n     }\n \n+    @Test\n+    public void string_concat(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ada60cb79690bebd775098d91f19c466cc8e3a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQxMTkwMQ==", "bodyText": "That is the correct return value, but I think the type checker should raise an error to the user when it sees this.\nThe corresponding code is at \n  \n    \n      graylog2-server/graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/parser/PipelineRuleParser.java\n    \n    \n        Lines 777 to 780\n      in\n      eb392d9\n    \n    \n    \n    \n\n        \n          \n           if (leftDate && rightDate) { \n        \n\n        \n          \n               if (addExpression.isPlus()) { \n        \n\n        \n          \n                   parseContext.addError(new InvalidOperation(ctx, addExpression, \"Unable to add two dates\")); \n        \n\n        \n          \n               } \n        \n    \n  \n\n\nIn that if/else I think it should have a check for leftType/rightType being String, and then in an extra if check for !isPlus() which then raises a properly described InvalidOperation error. That way the user doesn't get surprised at runtime.", "url": "https://github.com/Graylog2/graylog2-server/pull/7855#discussion_r409411901", "createdAt": "2020-04-16T09:25:06Z", "author": {"login": "kroepke"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/pipelineprocessor/ast/expressions/AdditionExpression.java", "diffHunk": "@@ -92,6 +91,13 @@ public Object evaluateUnsafe(EvaluationContext context) {\n             } else {\n                 return new Duration(right, left);\n             }\n+        }else if(String.class.equals(type) ){\n+            if(!isPlus){\n+                return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ada60cb79690bebd775098d91f19c466cc8e3a"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2da79f8541feb14c74d712a66ce8fb77da1a45da", "author": {"user": {"login": "rmanibus", "name": "Lo\u00efc Hermann"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/2da79f8541feb14c74d712a66ce8fb77da1a45da", "committedDate": "2020-04-17T21:23:50Z", "message": "handle string concatenation in type checker"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NzkzNjIz", "url": "https://github.com/Graylog2/graylog2-server/pull/7855#pullrequestreview-399793623", "createdAt": "2020-04-24T09:38:26Z", "commit": {"oid": "2da79f8541feb14c74d712a66ce8fb77da1a45da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2516, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}