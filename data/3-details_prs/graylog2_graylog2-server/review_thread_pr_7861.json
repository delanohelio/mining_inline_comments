{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODUxMzA3", "number": 7861, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjo0NjowMlrODxoMQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzozMjo1MFrODxpZ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzY1MzE1OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/contexts/CurrentUserPreferencesProvider.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjo0NjowMlrOGFM4IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjo0NjowMlrOGFM4IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwNzA0MQ==", "bodyText": "What is the reason to use CombinedProvider.get( here? Compared with import CurrentUserStore from 'stores/users/CurrentUserStore'; the only difference is that using the CombinedProvider, preferences is not undefined initially.", "url": "https://github.com/Graylog2/graylog2-server/pull/7861#discussion_r408107041", "createdAt": "2020-04-14T12:46:02Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/contexts/CurrentUserPreferencesProvider.jsx", "diffHunk": "@@ -0,0 +1,27 @@\n+// @flow strict\n+import * as React from 'react';\n+import PropTypes from 'prop-types';\n+import { get } from 'lodash';\n+\n+import { useStore } from 'stores/connect';\n+import CombinedProvider from 'injection/CombinedProvider';\n+import UserPreferencesContext from './UserPreferencesContext';\n+\n+const { CurrentUserStore } = CombinedProvider.get('CurrentUser');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1502b86dd10b986a4d6dffcb09d27d40ce8cff2"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzc1MzQyOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/pages/LoggedInPage.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoxMDoyMlrOGFN2nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoyOToyNVrOGFOrDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyMzAzOQ==", "bodyText": "One thought regarding the placement, which does not require a change right now: At some point it will be very useful to wrap the <GraylogThemeProvider> with the <CurrentUserPreferencesProvider> to show a specific theme based on the user settings. But we can still adjust this when we have the need.", "url": "https://github.com/Graylog2/graylog2-server/pull/7861#discussion_r408123039", "createdAt": "2020-04-14T13:10:22Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/pages/LoggedInPage.jsx", "diffHunk": "@@ -1,10 +1,11 @@\n import React from 'react';\n import AppRouter from 'routing/AppRouter';\n+import CurrentUserPreferencesProvider from '../contexts/CurrentUserPreferencesProvider';\n \n-class LoggedInPage extends React.Component {\n-  render() {\n-    return <AppRouter />;\n-  }\n-}\n+const LoggedInPage = () => (\n+  <CurrentUserPreferencesProvider>\n+    <AppRouter />\n+  </CurrentUserPreferencesProvider>\n+);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1502b86dd10b986a4d6dffcb09d27d40ce8cff2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzNjQ2MQ==", "bodyText": "Good point!", "url": "https://github.com/Graylog2/graylog2-server/pull/7861#discussion_r408136461", "createdAt": "2020-04-14T13:29:25Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/pages/LoggedInPage.jsx", "diffHunk": "@@ -1,10 +1,11 @@\n import React from 'react';\n import AppRouter from 'routing/AppRouter';\n+import CurrentUserPreferencesProvider from '../contexts/CurrentUserPreferencesProvider';\n \n-class LoggedInPage extends React.Component {\n-  render() {\n-    return <AppRouter />;\n-  }\n-}\n+const LoggedInPage = () => (\n+  <CurrentUserPreferencesProvider>\n+    <AppRouter />\n+  </CurrentUserPreferencesProvider>\n+);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyMzAzOQ=="}, "originalCommit": {"oid": "a1502b86dd10b986a4d6dffcb09d27d40ce8cff2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzg1MTk0OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/test/helpers/mocking/index.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzozMjo1MFrOGFOzzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzo1MzoxNlrOGFPuJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzODcwMQ==", "bodyText": "I guess it is a possible improvement for a follow up PR to replace the usage of StoreProviderMock and StoreMock in all our tests?", "url": "https://github.com/Graylog2/graylog2-server/pull/7861#discussion_r408138701", "createdAt": "2020-04-14T13:32:50Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/test/helpers/mocking/index.js", "diffHunk": "@@ -1,4 +1,7 @@\n export { default as CombinedProviderMock } from './CombinedProviderMock';\n+export { default as MockCombinedProvider } from './CombinedProviderMock';\n export { default as StoreMock } from './StoreMock';\n+export { default as MockStore } from './StoreMock';\n export { default as StoreProviderMock } from './StoreProviderMock';\n+export { default as MockStoreProvider } from './StoreProviderMock';\n export { default as asMock } from './AsMock';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1502b86dd10b986a4d6dffcb09d27d40ce8cff2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE1MzYzNg==", "bodyText": "Yes, that was the plan. Good catch!", "url": "https://github.com/Graylog2/graylog2-server/pull/7861#discussion_r408153636", "createdAt": "2020-04-14T13:53:16Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/test/helpers/mocking/index.js", "diffHunk": "@@ -1,4 +1,7 @@\n export { default as CombinedProviderMock } from './CombinedProviderMock';\n+export { default as MockCombinedProvider } from './CombinedProviderMock';\n export { default as StoreMock } from './StoreMock';\n+export { default as MockStore } from './StoreMock';\n export { default as StoreProviderMock } from './StoreProviderMock';\n+export { default as MockStoreProvider } from './StoreProviderMock';\n export { default as asMock } from './AsMock';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzODcwMQ=="}, "originalCommit": {"oid": "a1502b86dd10b986a4d6dffcb09d27d40ce8cff2"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3799, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}