{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2ODU5NjMw", "number": 8518, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODozMjo0MlrOEOKMjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODozMjo0MlrOEOKMjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjgyNTczOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/UserAuthorizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODozMjo0MlrOGxJyAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODowNTo0NlrOGxy86w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MzY2Nw==", "bodyText": "This will potentially build a \"user\" with the principal of a team..\nWe need to solve this sooner or later..", "url": "https://github.com/Graylog2/graylog2-server/pull/8518#discussion_r454193667", "createdAt": "2020-07-14T08:32:42Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/security/UserAuthorizer.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security;\n+\n+import com.google.inject.assistedinject.Assisted;\n+import org.apache.shiro.mgt.DefaultSecurityManager;\n+import org.apache.shiro.subject.SimplePrincipalCollection;\n+import org.apache.shiro.subject.Subject;\n+import org.graylog.grn.GRN;\n+\n+import javax.inject.Inject;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+\n+public class UserAuthorizer {\n+    public interface Factory {\n+        UserAuthorizer create(GRN grantee);\n+    }\n+\n+    private final Subject subject;\n+\n+    @Inject\n+    public UserAuthorizer(DefaultSecurityManager securityManager, @Assisted GRN grantee) {\n+        this.subject = new Subject.Builder(securityManager)\n+                .principals(new SimplePrincipalCollection(grantee.entity(), \"UserAuthorizer\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f342ca6f5af07f817ab171cf496d445bda2008e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg2ODIwMw==", "bodyText": "I refactored the code to also handle teams in the future.", "url": "https://github.com/Graylog2/graylog2-server/pull/8518#discussion_r454868203", "createdAt": "2020-07-15T08:05:46Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/UserAuthorizer.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security;\n+\n+import com.google.inject.assistedinject.Assisted;\n+import org.apache.shiro.mgt.DefaultSecurityManager;\n+import org.apache.shiro.subject.SimplePrincipalCollection;\n+import org.apache.shiro.subject.Subject;\n+import org.graylog.grn.GRN;\n+\n+import javax.inject.Inject;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+\n+public class UserAuthorizer {\n+    public interface Factory {\n+        UserAuthorizer create(GRN grantee);\n+    }\n+\n+    private final Subject subject;\n+\n+    @Inject\n+    public UserAuthorizer(DefaultSecurityManager securityManager, @Assisted GRN grantee) {\n+        this.subject = new Subject.Builder(securityManager)\n+                .principals(new SimplePrincipalCollection(grantee.entity(), \"UserAuthorizer\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MzY2Nw=="}, "originalCommit": {"oid": "4f342ca6f5af07f817ab171cf496d445bda2008e"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4124, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}