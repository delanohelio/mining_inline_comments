{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3Mjc2OTY2", "number": 8527, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzozNDozNlrOENLBxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1NTo0MlrOEOJZyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjQ3NjIyOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzozNDozNlrOGvtBog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1MjozMFrOGxIZ-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY3Mzk1NA==", "bodyText": "I could not find a function like isSystemAdmin(user). I prefer a separate function, but was not sure where to place it. Where would you place this kind of function?", "url": "https://github.com/Graylog2/graylog2-server/pull/8527#discussion_r452673954", "createdAt": "2020-07-10T07:34:36Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "diffHunk": "@@ -16,13 +20,28 @@ type Props = {\n   children: React.Node,\n   currentUser: ?User,\n   userPreferences: UserPreferences,\n+  viewType: ?ViewType,\n };\n \n-export const defaultLayoutConfig = (userPreferences?: UserPreferences) => ({\n-  sidebar: {\n-    isPinned: userPreferences?.searchSidebarIsPinned ?? false,\n-  },\n-});\n+export const defaultLayoutConfig = (currentUser: ?User, userPreferences?: UserPreferences) => {\n+  let dashboardSidebarIsPinned = false;\n+  let searchSidebarIsPinned = false;\n+\n+  if (currentUser?.id === 'local:admin') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d18a99b0bcb1fce2decbc2506dbed2ce18e3916"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3MTEzMQ==", "bodyText": "IMO it would be better to check if currentUser.read_only is true. This is a way more relevant criteria.", "url": "https://github.com/Graylog2/graylog2-server/pull/8527#discussion_r454171131", "createdAt": "2020-07-14T07:52:30Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "diffHunk": "@@ -16,13 +20,28 @@ type Props = {\n   children: React.Node,\n   currentUser: ?User,\n   userPreferences: UserPreferences,\n+  viewType: ?ViewType,\n };\n \n-export const defaultLayoutConfig = (userPreferences?: UserPreferences) => ({\n-  sidebar: {\n-    isPinned: userPreferences?.searchSidebarIsPinned ?? false,\n-  },\n-});\n+export const defaultLayoutConfig = (currentUser: ?User, userPreferences?: UserPreferences) => {\n+  let dashboardSidebarIsPinned = false;\n+  let searchSidebarIsPinned = false;\n+\n+  if (currentUser?.id === 'local:admin') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY3Mzk1NA=="}, "originalCommit": {"oid": "1d18a99b0bcb1fce2decbc2506dbed2ce18e3916"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjY4NzA4OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1MzoyMlrOGxIcEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1MzoyMlrOGxIcEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3MTY2Ng==", "bodyText": "We could use an object/a map instead of a switch here.", "url": "https://github.com/Graylog2/graylog2-server/pull/8527#discussion_r454171666", "createdAt": "2020-07-14T07:53:22Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "diffHunk": "@@ -31,31 +50,48 @@ const createUserPreferencesArray = (userPreferences) => {\n   }));\n };\n \n-const toggleSidebarPinning = (config, setConfig, userName, userPreferences) => {\n-  const newState = !config.sidebar.isPinned;\n+const sidebarPinningPreferenceKey = (viewType: ?ViewType): string => {\n+  switch (viewType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d18a99b0bcb1fce2decbc2506dbed2ce18e3916"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjY5MDg4OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1NDoyNlrOGxIeYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1NDoyNlrOGxIeYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3MjI1Nw==", "bodyText": "IMO we should check the search/dashboard cases and instead of defaulting to a value, throw an exception. Generally we should try to be fail safe towards the environment we are running in and fail early for programmatic errors. This way, if we add a new type, we will find out early if we forgot to add handling for it in here.", "url": "https://github.com/Graylog2/graylog2-server/pull/8527#discussion_r454172257", "createdAt": "2020-07-14T07:54:26Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "diffHunk": "@@ -31,31 +50,48 @@ const createUserPreferencesArray = (userPreferences) => {\n   }));\n };\n \n-const toggleSidebarPinning = (config, setConfig, userName, userPreferences) => {\n-  const newState = !config.sidebar.isPinned;\n+const sidebarPinningPreferenceKey = (viewType: ?ViewType): string => {\n+  switch (viewType) {\n+    case View.Type.Dashboard:\n+      return 'dashboardSidebarIsPinned';\n+    default:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d18a99b0bcb1fce2decbc2506dbed2ce18e3916"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjY5NTc2OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1NTo0MlrOGxIhTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1NTo0MlrOGxIhTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3MzAwNA==", "bodyText": "Typo: configWithHelpers", "url": "https://github.com/Graylog2/graylog2-server/pull/8527#discussion_r454173004", "createdAt": "2020-07-14T07:55:42Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "diffHunk": "@@ -31,31 +50,48 @@ const createUserPreferencesArray = (userPreferences) => {\n   }));\n };\n \n-const toggleSidebarPinning = (config, setConfig, userName, userPreferences) => {\n-  const newState = !config.sidebar.isPinned;\n+const sidebarPinningPreferenceKey = (viewType: ?ViewType): string => {\n+  switch (viewType) {\n+    case View.Type.Dashboard:\n+      return 'dashboardSidebarIsPinned';\n+    default:\n+      return 'searchSidebarIsPinned';\n+  }\n+};\n+\n+const toggleSidebarPinning = (config, setConfig, currentUser, userPreferences, viewType) => {\n+  const preferenceKey = sidebarPinningPreferenceKey(viewType);\n+  const newState = !config.sidebar[preferenceKey];\n   const newLayoutConfig = {\n     ...config,\n     sidebar: {\n       ...config.sidebar,\n-      isPinned: newState,\n+      [preferenceKey]: newState,\n     },\n   };\n-  const newUserPreferences = {\n-    ...userPreferences,\n-    searchSidebarIsPinned: newState,\n-  };\n \n   setConfig(newLayoutConfig);\n \n-  PreferencesActions.saveUserPreferences(userName, createUserPreferencesArray(newUserPreferences), undefined, false);\n+  if (currentUser?.id === 'local:admin') {\n+    Store.set(preferenceKey, newState);\n+  } else {\n+    const newUserPreferences = {\n+      ...userPreferences,\n+      [preferenceKey]: newState,\n+    };\n+    PreferencesActions.saveUserPreferences(currentUser?.username, createUserPreferencesArray(newUserPreferences), undefined, false);\n+  }\n };\n \n-const SearchPageLayoutProvider = ({ children, currentUser, userPreferences }: Props) => {\n-  const [config, setConfig] = useState(defaultLayoutConfig(userPreferences));\n-  const actions = { toggleSidebarPinning: () => toggleSidebarPinning(config, setConfig, currentUser?.username, userPreferences) };\n+const SearchPageLayoutProvider = ({ children, currentUser, userPreferences, viewType }: Props) => {\n+  const test = defaultLayoutConfig(currentUser, userPreferences);\n+  const [config, setConfig] = useState(test);\n+  const actions = { toggleSidebarPinning: () => toggleSidebarPinning(config, setConfig, currentUser, userPreferences, viewType) };\n+  const configHelpers = { sidebar: { isPinned: () => config.sidebar[sidebarPinningPreferenceKey(viewType)] } };\n+  const conigWithHelpers = merge(config, configHelpers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d18a99b0bcb1fce2decbc2506dbed2ce18e3916"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4134, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}