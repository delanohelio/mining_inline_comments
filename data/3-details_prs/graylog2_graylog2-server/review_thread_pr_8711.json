{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzOTM0NjQy", "number": 8711, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTozMTozMlrOEVyiRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzo0Mjo1NlrOEWr8cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjgzNTI2OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/actions/roles/AuthzRolesActions.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTozMTozMlrOG8vnKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTozMTozMlrOG8vnKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM0NzgxNw==", "bodyText": "The type for the response string[] is based on deleteUser. When the api route exists, we may need to adjust this.", "url": "https://github.com/Graylog2/graylog2-server/pull/8711#discussion_r466347817", "createdAt": "2020-08-06T11:31:32Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/actions/roles/AuthzRolesActions.js", "diffHunk": "@@ -6,6 +6,7 @@ import { singletonActions } from 'views/logic/singleton';\n import type { RefluxActions } from 'stores/StoreTypes';\n \n type AuthzRolesActionsType = RefluxActions<{\n+  deleteRole: (roleId: string) => Promise<string[]>,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18610e6cfd01791bab7245530d04fa3648a889b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzEyNjQ3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/components/roles/RolesOverview/ActionsCell.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjozOToxNVrOG9YRBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjozOToxNVrOG9YRBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxMzg5NA==", "bodyText": "I will update this in a follow-up PR", "url": "https://github.com/Graylog2/graylog2-server/pull/8711#discussion_r467013894", "createdAt": "2020-08-07T12:39:15Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/components/roles/RolesOverview/ActionsCell.jsx", "diffHunk": "@@ -0,0 +1,71 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled from 'styled-components';\n+import { LinkContainer } from 'react-router-bootstrap';\n+\n+import UserNotification from 'util/UserNotification';\n+import { AuthzRolesActions } from 'stores/roles/AuthzRolesStore';\n+import Routes from 'routing/Routes';\n+import Role from 'logic/roles/Role';\n+import { Button } from 'components/graylog';\n+import { IfPermitted } from 'components/common';\n+\n+type Props = {\n+  readOnly: $PropertyType<Role, 'readOnly'>,\n+  roleId: $PropertyType<Role, 'id'>,\n+  roleName: $PropertyType<Role, 'name'>,\n+};\n+\n+const ActtionsWrapper = styled.div`\n+  display: flex;\n+  justify-content: flex-end;\n+`;\n+\n+const ActionsCell = ({ roleId, roleName, readOnly }: Props) => {\n+  const _deleteRole = () => {\n+    // eslint-disable-next-line no-alert\n+    if (window.confirm(`Do you really want to delete role ${roleName}?`)) {\n+      AuthzRolesActions.deleteRole(roleId).then(() => {\n+        UserNotification.success(`Role \"${roleName}\" was deleted successfully`);\n+      }, () => {\n+        UserNotification.error(`There was an error deleting the role \"${roleName}\"`);\n+      });\n+\n+      // AuthzRolesActions.getMembers(roleName).then((membership) => {\n+      //   if (membership.users.length !== 0) {\n+      //     UserNotification.error(`Cannot delete role ${roleName}. It is still assigned to ${membership.users.length} users.`);\n+      //   } else {\n+      //     AuthzRolesActions.deleteRole(roleId).then(() => {\n+      //       UserNotification.success(`Role \"${roleName}\" was deleted successfully`);\n+      //     }, () => {\n+      //       UserNotification.error(`There was an error deleting the role \"${roleName}\"`);\n+      //     });\n+      //   }\n+      // });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b31c76dfbdd2dd28680ab22a3cffbc6bd6e1f6a"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjI0MTE0OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/components/roles/RolesOverview/ActionsCell.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzo0Mjo1NlrOG-ERmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzo0Mjo1NlrOG-ERmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczNDkzOA==", "bodyText": ".edit() should take the id of the role and not the role name", "url": "https://github.com/Graylog2/graylog2-server/pull/8711#discussion_r467734938", "createdAt": "2020-08-10T07:42:56Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/components/roles/RolesOverview/ActionsCell.jsx", "diffHunk": "@@ -0,0 +1,71 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled from 'styled-components';\n+import { LinkContainer } from 'react-router-bootstrap';\n+\n+import UserNotification from 'util/UserNotification';\n+import { AuthzRolesActions } from 'stores/roles/AuthzRolesStore';\n+import Routes from 'routing/Routes';\n+import Role from 'logic/roles/Role';\n+import { Button } from 'components/graylog';\n+import { IfPermitted } from 'components/common';\n+\n+type Props = {\n+  readOnly: $PropertyType<Role, 'readOnly'>,\n+  roleId: $PropertyType<Role, 'id'>,\n+  roleName: $PropertyType<Role, 'name'>,\n+};\n+\n+const ActtionsWrapper = styled.div`\n+  display: flex;\n+  justify-content: flex-end;\n+`;\n+\n+const ActionsCell = ({ roleId, roleName, readOnly }: Props) => {\n+  const _deleteRole = () => {\n+    // eslint-disable-next-line no-alert\n+    if (window.confirm(`Do you really want to delete role ${roleName}?`)) {\n+      AuthzRolesActions.deleteRole(roleId).then(() => {\n+        UserNotification.success(`Role \"${roleName}\" was deleted successfully`);\n+      }, () => {\n+        UserNotification.error(`There was an error deleting the role \"${roleName}\"`);\n+      });\n+\n+      // AuthzRolesActions.getMembers(roleName).then((membership) => {\n+      //   if (membership.users.length !== 0) {\n+      //     UserNotification.error(`Cannot delete role ${roleName}. It is still assigned to ${membership.users.length} users.`);\n+      //   } else {\n+      //     AuthzRolesActions.deleteRole(roleId).then(() => {\n+      //       UserNotification.success(`Role \"${roleName}\" was deleted successfully`);\n+      //     }, () => {\n+      //       UserNotification.error(`There was an error deleting the role \"${roleName}\"`);\n+      //     });\n+      //   }\n+      // });\n+    }\n+  };\n+\n+  return (\n+    <td>\n+      <ActtionsWrapper>\n+        <IfPermitted permissions={[`roles:edit:${roleName}`]}>\n+          <LinkContainer to={Routes.SYSTEM.AUTHZROLES.edit(encodeURIComponent(roleName))}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b31c76dfbdd2dd28680ab22a3cffbc6bd6e1f6a"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4087, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}