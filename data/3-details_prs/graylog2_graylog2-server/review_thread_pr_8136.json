{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTQ5NTgy", "number": 8136, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo1NzozMVrOD-5UxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo1NzozMVrOD-5UxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Mjc3NTA5OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/system/SessionsResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo1NzozMVrOGZRkEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo1NzozMVrOGZRkEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1NTM0NQ==", "bodyText": "I think we shouldn't expose too many details to unauthenticated users.\nThey shouldn't be able to discover which auth backends we are using.\nHow about\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new ServiceUnavailableException(e.getMessage());\n          \n          \n            \n                        throw new ServiceUnavailableException(\"Authentication service unavailable\");", "url": "https://github.com/Graylog2/graylog2-server/pull/8136#discussion_r429155345", "createdAt": "2020-05-22T09:57:31Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/system/SessionsResource.java", "diffHunk": "@@ -124,11 +126,15 @@ public JsonNode newSession(@Context ContainerRequestContext requestContext,\n         final String sessionId = shiroSecurityContext.getUsername();\n         final String host = RestTools.getRemoteAddrFromRequest(grizzlyRequest, trustedSubnets);\n \n-        Optional<Session> session = sessionCreator.create(sessionId, host, authToken);\n-        if (session.isPresent()) {\n-            return sessionResponseFactory.forSession(session.get());\n-        } else {\n-            throw new NotAuthorizedException(\"Invalid credentials.\", \"Basic realm=\\\"Graylog Server session\\\"\");\n+        try {\n+            Optional<Session> session = sessionCreator.create(sessionId, host, authToken);\n+            if (session.isPresent()) {\n+                return sessionResponseFactory.forSession(session.get());\n+            } else {\n+                throw new NotAuthorizedException(\"Invalid credentials.\", \"Basic realm=\\\"Graylog Server session\\\"\");\n+            }\n+        } catch (AuthenticationServiceUnavailableException e) {\n+            throw new ServiceUnavailableException(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fef2eaa368c12a15e8f2014bd148a15756e88934"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4291, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}