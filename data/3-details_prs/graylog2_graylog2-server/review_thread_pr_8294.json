{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NTM0Njgz", "number": 8294, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMzowMzoyOFrOEFDQYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODoxMTozN1rOEG3CWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzMxNjgzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/sidebar/Sidebar.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMzowMzoyOFrOGjDKCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMzowMzoyOFrOGjDKCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQwNTA2Nw==", "bodyText": "If you want to ensure that this is a boolean, we should do something like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const sidebarIsInline = !!searchPageLayout?.config.sidebar.isInline;\n          \n          \n            \n              const sidebarIsInline = searchPageLayout?.config.sidebar.isInline ?? false;\n          \n      \n    \n    \n  \n\nwhich is more expressive than a double negation.", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r439405067", "createdAt": "2020-06-12T13:03:28Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/sidebar/Sidebar.jsx", "diffHunk": "@@ -0,0 +1,108 @@\n+// @flow strict\n+import * as React from 'react';\n+import { useState } from 'react';\n+import chroma from 'chroma-js';\n+import PropTypes from 'prop-types';\n+import styled, { type StyledComponent } from 'styled-components';\n+\n+import { type ThemeInterface } from 'theme';\n+import { type ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n+import SearchPageLayoutContext, { type SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n+import CustomPropTypes from '../CustomPropTypes';\n+import SidebarNavigation from './SidebarNavigation';\n+import ContentColumn from './ContentColumn';\n+import sidebarSections, { type SidebarSection } from './sidebarSections';\n+\n+type Props = {\n+  children: React.Element<any>,\n+  queryId: string,\n+  results: {},\n+  searchPageLayout: ?SearchPageLayout,\n+  sections: Array<SidebarSection>,\n+  viewMetadata: ViewMetadata,\n+};\n+\n+const Container = styled.div`\n+  display: flex;\n+  height: 100%;\n+  width: min-content;\n+`;\n+\n+const ContentOverlay: StyledComponent<{}, ThemeInterface, HTMLDivElement> = styled.div(({ theme }) => `\n+  position: fixed;\n+  top: 0;\n+  bottom: 0;\n+  left: 50px;\n+  right: 0;\n+  background: ${chroma(theme.colors.brand.tertiary).alpha(0.25).css()};\n+  z-index: 2;  \n+`);\n+\n+const handleToggleSidebar = (sections: Array<SidebarSection>, activeSectionKey: ?string, setActiveSectionKey) => {\n+  if (activeSectionKey) {\n+    setActiveSectionKey(null);\n+    return;\n+  }\n+  setActiveSectionKey(sections[0].key);\n+};\n+\n+const Sidebar = ({ searchPageLayout, results, children, queryId, sections, viewMetadata }: Props) => {\n+  const [activeSectionKey, setActiveSectionKey] = useState<?string>(null);\n+  const activeSection = sections.find((section) => section.key === activeSectionKey);\n+  const sidebarIsInline = !!searchPageLayout?.config.sidebar.isInline;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e3d3d180a2100677664398d5d67f16cde43cfe5"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTg5NTc3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/sidebar/SectionInfo.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODozMjoxNVrOGk7aMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTozOTo0OFrOGlLulQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3NTI4Mw==", "bodyText": "IMO this is too light for anyone who is even slightly reading impaired. We should not use more than 50 for text, in this case 40 is even better.", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r441375283", "createdAt": "2020-06-17T08:32:15Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/sidebar/SectionInfo.jsx", "diffHunk": "@@ -0,0 +1,9 @@\n+// @flow strict\n+import styled, { type StyledComponent } from 'styled-components';\n+import { type ThemeInterface } from 'theme';\n+\n+const Title: StyledComponent<{}, ThemeInterface, HTMLParagraphElement> = styled.p(({ theme }) => `\n+  color: ${theme.colors.gray[60]};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2393776bffc205b9244689e721cbad7a7632c97b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MjY0NQ==", "bodyText": "That is true, I am now using the default text color.", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r441642645", "createdAt": "2020-06-17T15:39:48Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/sidebar/SectionInfo.jsx", "diffHunk": "@@ -0,0 +1,9 @@\n+// @flow strict\n+import styled, { type StyledComponent } from 'styled-components';\n+import { type ThemeInterface } from 'theme';\n+\n+const Title: StyledComponent<{}, ThemeInterface, HTMLParagraphElement> = styled.p(({ theme }) => `\n+  color: ${theme.colors.gray[60]};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3NTI4Mw=="}, "originalCommit": {"oid": "2393776bffc205b9244689e721cbad7a7632c97b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTkwMzAwOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/sidebar/ContentColumn.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODozNDoxOFrOGk7e8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODozNDoxOFrOGk7e8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3NjQ5Ng==", "bodyText": "The icon is not ideal, it does not really give away what it does. IMO the pin icon was better.", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r441376496", "createdAt": "2020-06-17T08:34:18Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/sidebar/ContentColumn.jsx", "diffHunk": "@@ -0,0 +1,162 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled, { type StyledComponent } from 'styled-components';\n+\n+import View, { type ViewType } from 'views/logic/views/View';\n+import { type ThemeInterface } from 'theme';\n+import { type SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n+import { type ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n+\n+import ViewTypeLabel from 'views/components/ViewTypeLabel';\n+import ViewTypeContext from 'views/components/contexts/ViewTypeContext';\n+import { IconButton } from 'components/common';\n+\n+type Props = {\n+  children: React.Node,\n+  closeSidebar: () => void,\n+  searchPageLayout: ?SearchPageLayout,\n+  sectionTitle: string,\n+  viewMetadata: ViewMetadata,\n+};\n+\n+export const Container: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  position: ${sidebarIsInline ? 'static' : 'fixed'}\n+  display: grid;\n+  display: -ms-grid;\n+  grid-templage-columns: 1fr;\n+  grid-template-rows: auto 1fr;\n+  -ms-grid-columns: 1fr;\n+  -ms-grid-rows: auto 1fr;\n+  top: ${sidebarIsInline ? 0 : '50px'};\n+  left: ${sidebarIsInline ? 0 : '50px'};\n+\n+  width: 270px;\n+  height:  ${sidebarIsInline ? '100%' : 'calc(100% - 50px)'};;\n+  padding: 5px 15px 15px 15px;\n+\n+  color: ${theme.colors.global.textDefault};\n+  background: ${theme.colors.global.contentBackground};\n+  border-right: 1px solid ${theme.colors.gray[80]};\n+  \n+  overflow-y: auto;\n+  z-index: 3;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 1;\n+    -ms-grid-row: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 2;\n+    -ms-grid-row: 2;\n+  }\n+`);\n+\n+const Header: StyledComponent<{}, void, HTMLDivElement> = styled.div`\n+  height: 35px;\n+  display: grid;\n+  display: -ms-grid;\n+  grid-template-columns: 1fr auto;\n+  -ms-grid-columns: 1fr auto;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 2;\n+    -ms-grid-column: 2;\n+  }\n+`;\n+\n+const Title = styled.h1`\n+  color: inherit;\n+  overflow: hidden;\n+  text-overflow: ellipsis;\n+  white-space: nowrap;\n+  font-size: 24px;\n+  cursor: pointer;\n+`;\n+\n+const OverlayToggle: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  > * {\n+    font-size: 18px;\n+    color: ${sidebarIsInline ? theme.colors.gray[30] : theme.colors.variant.info};\n+  }\n+`);\n+\n+const HorizontalRule = styled.hr`\n+  margin: 5px 0 10px 0;\n+`;\n+\n+const SectionTitle = styled.h2`\n+  margin-bottom: 10px;\n+`;\n+\n+const CenterVertical = styled.div`\n+  display: inline-grid;\n+  display: -ms-inline-grid;\n+  align-content: center;\n+`;\n+\n+const toggleSidebarPinning = (searchPageLayout) => {\n+  if (!searchPageLayout) {\n+    return;\n+  }\n+  const { setConfig, config } = searchPageLayout;\n+  const sidebarIsInline = config?.sidebar.isInline;\n+  const newLayoutConfig = {\n+    ...config,\n+    sidebar: { isInline: !sidebarIsInline },\n+  };\n+  setConfig(newLayoutConfig);\n+};\n+\n+const sidebarTitle = (viewMetadata: ViewMetadata, viewType: ?ViewType) => {\n+  if (!viewMetadata.id) {\n+    return 'Ad Hoc Search';\n+  }\n+  const defaultViewTitle = `Untitled ${viewType ? ViewTypeLabel({ type: viewType, capitalize: true }) : View.Type.Search}`;\n+  return viewMetadata.title || defaultViewTitle;\n+};\n+\n+const ContentColumn = ({ children, sectionTitle, closeSidebar, searchPageLayout, viewMetadata }: Props) => {\n+  const sidebarIsInline = searchPageLayout?.config.sidebar.isInline;\n+  return (\n+    <ViewTypeContext.Consumer>\n+      {(viewType) => {\n+        const title = sidebarTitle(viewMetadata, viewType);\n+        return (\n+          <Container sidebarIsInline={sidebarIsInline}>\n+            <div>\n+              <Header title={title}>\n+                <CenterVertical>\n+                  <Title onClick={closeSidebar}>{title}</Title>\n+                </CenterVertical>\n+                <CenterVertical>\n+                  <OverlayToggle sidebarIsInline={sidebarIsInline}>\n+                    <IconButton onClick={() => toggleSidebarPinning(searchPageLayout)}\n+                                title={`Display sidebar ${sidebarIsInline ? 'as overlay' : 'inline'}`}\n+                                name=\"layer-group\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2393776bffc205b9244689e721cbad7a7632c97b"}, "originalPosition": 145}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTkxMzMzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/sidebar/ContentColumn.jsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODozNjo1MVrOGk7lIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDowMzo1OVrOGniVBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3ODA4Mw==", "bodyText": "We should use isNew from ViewStore instead.", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r441378083", "createdAt": "2020-06-17T08:36:51Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/sidebar/ContentColumn.jsx", "diffHunk": "@@ -0,0 +1,162 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled, { type StyledComponent } from 'styled-components';\n+\n+import View, { type ViewType } from 'views/logic/views/View';\n+import { type ThemeInterface } from 'theme';\n+import { type SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n+import { type ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n+\n+import ViewTypeLabel from 'views/components/ViewTypeLabel';\n+import ViewTypeContext from 'views/components/contexts/ViewTypeContext';\n+import { IconButton } from 'components/common';\n+\n+type Props = {\n+  children: React.Node,\n+  closeSidebar: () => void,\n+  searchPageLayout: ?SearchPageLayout,\n+  sectionTitle: string,\n+  viewMetadata: ViewMetadata,\n+};\n+\n+export const Container: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  position: ${sidebarIsInline ? 'static' : 'fixed'}\n+  display: grid;\n+  display: -ms-grid;\n+  grid-templage-columns: 1fr;\n+  grid-template-rows: auto 1fr;\n+  -ms-grid-columns: 1fr;\n+  -ms-grid-rows: auto 1fr;\n+  top: ${sidebarIsInline ? 0 : '50px'};\n+  left: ${sidebarIsInline ? 0 : '50px'};\n+\n+  width: 270px;\n+  height:  ${sidebarIsInline ? '100%' : 'calc(100% - 50px)'};;\n+  padding: 5px 15px 15px 15px;\n+\n+  color: ${theme.colors.global.textDefault};\n+  background: ${theme.colors.global.contentBackground};\n+  border-right: 1px solid ${theme.colors.gray[80]};\n+  \n+  overflow-y: auto;\n+  z-index: 3;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 1;\n+    -ms-grid-row: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 2;\n+    -ms-grid-row: 2;\n+  }\n+`);\n+\n+const Header: StyledComponent<{}, void, HTMLDivElement> = styled.div`\n+  height: 35px;\n+  display: grid;\n+  display: -ms-grid;\n+  grid-template-columns: 1fr auto;\n+  -ms-grid-columns: 1fr auto;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 2;\n+    -ms-grid-column: 2;\n+  }\n+`;\n+\n+const Title = styled.h1`\n+  color: inherit;\n+  overflow: hidden;\n+  text-overflow: ellipsis;\n+  white-space: nowrap;\n+  font-size: 24px;\n+  cursor: pointer;\n+`;\n+\n+const OverlayToggle: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  > * {\n+    font-size: 18px;\n+    color: ${sidebarIsInline ? theme.colors.gray[30] : theme.colors.variant.info};\n+  }\n+`);\n+\n+const HorizontalRule = styled.hr`\n+  margin: 5px 0 10px 0;\n+`;\n+\n+const SectionTitle = styled.h2`\n+  margin-bottom: 10px;\n+`;\n+\n+const CenterVertical = styled.div`\n+  display: inline-grid;\n+  display: -ms-inline-grid;\n+  align-content: center;\n+`;\n+\n+const toggleSidebarPinning = (searchPageLayout) => {\n+  if (!searchPageLayout) {\n+    return;\n+  }\n+  const { setConfig, config } = searchPageLayout;\n+  const sidebarIsInline = config?.sidebar.isInline;\n+  const newLayoutConfig = {\n+    ...config,\n+    sidebar: { isInline: !sidebarIsInline },\n+  };\n+  setConfig(newLayoutConfig);\n+};\n+\n+const sidebarTitle = (viewMetadata: ViewMetadata, viewType: ?ViewType) => {\n+  if (!viewMetadata.id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2393776bffc205b9244689e721cbad7a7632c97b"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzNTY2MA==", "bodyText": "Using isNew here would lead to a slightly different behaviour. We would never display the title Untitled Dashboard. Right now this title is being displayed when a user creates a new dashboard (/dashboards/new).\nDo you prefer to display the title for the default search in this case as well?", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r442035660", "createdAt": "2020-06-18T07:52:29Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/sidebar/ContentColumn.jsx", "diffHunk": "@@ -0,0 +1,162 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled, { type StyledComponent } from 'styled-components';\n+\n+import View, { type ViewType } from 'views/logic/views/View';\n+import { type ThemeInterface } from 'theme';\n+import { type SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n+import { type ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n+\n+import ViewTypeLabel from 'views/components/ViewTypeLabel';\n+import ViewTypeContext from 'views/components/contexts/ViewTypeContext';\n+import { IconButton } from 'components/common';\n+\n+type Props = {\n+  children: React.Node,\n+  closeSidebar: () => void,\n+  searchPageLayout: ?SearchPageLayout,\n+  sectionTitle: string,\n+  viewMetadata: ViewMetadata,\n+};\n+\n+export const Container: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  position: ${sidebarIsInline ? 'static' : 'fixed'}\n+  display: grid;\n+  display: -ms-grid;\n+  grid-templage-columns: 1fr;\n+  grid-template-rows: auto 1fr;\n+  -ms-grid-columns: 1fr;\n+  -ms-grid-rows: auto 1fr;\n+  top: ${sidebarIsInline ? 0 : '50px'};\n+  left: ${sidebarIsInline ? 0 : '50px'};\n+\n+  width: 270px;\n+  height:  ${sidebarIsInline ? '100%' : 'calc(100% - 50px)'};;\n+  padding: 5px 15px 15px 15px;\n+\n+  color: ${theme.colors.global.textDefault};\n+  background: ${theme.colors.global.contentBackground};\n+  border-right: 1px solid ${theme.colors.gray[80]};\n+  \n+  overflow-y: auto;\n+  z-index: 3;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 1;\n+    -ms-grid-row: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 2;\n+    -ms-grid-row: 2;\n+  }\n+`);\n+\n+const Header: StyledComponent<{}, void, HTMLDivElement> = styled.div`\n+  height: 35px;\n+  display: grid;\n+  display: -ms-grid;\n+  grid-template-columns: 1fr auto;\n+  -ms-grid-columns: 1fr auto;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 2;\n+    -ms-grid-column: 2;\n+  }\n+`;\n+\n+const Title = styled.h1`\n+  color: inherit;\n+  overflow: hidden;\n+  text-overflow: ellipsis;\n+  white-space: nowrap;\n+  font-size: 24px;\n+  cursor: pointer;\n+`;\n+\n+const OverlayToggle: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  > * {\n+    font-size: 18px;\n+    color: ${sidebarIsInline ? theme.colors.gray[30] : theme.colors.variant.info};\n+  }\n+`);\n+\n+const HorizontalRule = styled.hr`\n+  margin: 5px 0 10px 0;\n+`;\n+\n+const SectionTitle = styled.h2`\n+  margin-bottom: 10px;\n+`;\n+\n+const CenterVertical = styled.div`\n+  display: inline-grid;\n+  display: -ms-inline-grid;\n+  align-content: center;\n+`;\n+\n+const toggleSidebarPinning = (searchPageLayout) => {\n+  if (!searchPageLayout) {\n+    return;\n+  }\n+  const { setConfig, config } = searchPageLayout;\n+  const sidebarIsInline = config?.sidebar.isInline;\n+  const newLayoutConfig = {\n+    ...config,\n+    sidebar: { isInline: !sidebarIsInline },\n+  };\n+  setConfig(newLayoutConfig);\n+};\n+\n+const sidebarTitle = (viewMetadata: ViewMetadata, viewType: ?ViewType) => {\n+  if (!viewMetadata.id) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3ODA4Mw=="}, "originalCommit": {"oid": "2393776bffc205b9244689e721cbad7a7632c97b"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAyMzUxNg==", "bodyText": "Imo these are two separate concerns. One is to find out if we have a new, unsaved search/dashboard, the other is to format the title. In my opinion, we should use isNew to determine the first and use viewType to format a title according to the type.", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r444023516", "createdAt": "2020-06-23T07:39:34Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/sidebar/ContentColumn.jsx", "diffHunk": "@@ -0,0 +1,162 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled, { type StyledComponent } from 'styled-components';\n+\n+import View, { type ViewType } from 'views/logic/views/View';\n+import { type ThemeInterface } from 'theme';\n+import { type SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n+import { type ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n+\n+import ViewTypeLabel from 'views/components/ViewTypeLabel';\n+import ViewTypeContext from 'views/components/contexts/ViewTypeContext';\n+import { IconButton } from 'components/common';\n+\n+type Props = {\n+  children: React.Node,\n+  closeSidebar: () => void,\n+  searchPageLayout: ?SearchPageLayout,\n+  sectionTitle: string,\n+  viewMetadata: ViewMetadata,\n+};\n+\n+export const Container: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  position: ${sidebarIsInline ? 'static' : 'fixed'}\n+  display: grid;\n+  display: -ms-grid;\n+  grid-templage-columns: 1fr;\n+  grid-template-rows: auto 1fr;\n+  -ms-grid-columns: 1fr;\n+  -ms-grid-rows: auto 1fr;\n+  top: ${sidebarIsInline ? 0 : '50px'};\n+  left: ${sidebarIsInline ? 0 : '50px'};\n+\n+  width: 270px;\n+  height:  ${sidebarIsInline ? '100%' : 'calc(100% - 50px)'};;\n+  padding: 5px 15px 15px 15px;\n+\n+  color: ${theme.colors.global.textDefault};\n+  background: ${theme.colors.global.contentBackground};\n+  border-right: 1px solid ${theme.colors.gray[80]};\n+  \n+  overflow-y: auto;\n+  z-index: 3;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 1;\n+    -ms-grid-row: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 2;\n+    -ms-grid-row: 2;\n+  }\n+`);\n+\n+const Header: StyledComponent<{}, void, HTMLDivElement> = styled.div`\n+  height: 35px;\n+  display: grid;\n+  display: -ms-grid;\n+  grid-template-columns: 1fr auto;\n+  -ms-grid-columns: 1fr auto;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 2;\n+    -ms-grid-column: 2;\n+  }\n+`;\n+\n+const Title = styled.h1`\n+  color: inherit;\n+  overflow: hidden;\n+  text-overflow: ellipsis;\n+  white-space: nowrap;\n+  font-size: 24px;\n+  cursor: pointer;\n+`;\n+\n+const OverlayToggle: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  > * {\n+    font-size: 18px;\n+    color: ${sidebarIsInline ? theme.colors.gray[30] : theme.colors.variant.info};\n+  }\n+`);\n+\n+const HorizontalRule = styled.hr`\n+  margin: 5px 0 10px 0;\n+`;\n+\n+const SectionTitle = styled.h2`\n+  margin-bottom: 10px;\n+`;\n+\n+const CenterVertical = styled.div`\n+  display: inline-grid;\n+  display: -ms-inline-grid;\n+  align-content: center;\n+`;\n+\n+const toggleSidebarPinning = (searchPageLayout) => {\n+  if (!searchPageLayout) {\n+    return;\n+  }\n+  const { setConfig, config } = searchPageLayout;\n+  const sidebarIsInline = config?.sidebar.isInline;\n+  const newLayoutConfig = {\n+    ...config,\n+    sidebar: { isInline: !sidebarIsInline },\n+  };\n+  setConfig(newLayoutConfig);\n+};\n+\n+const sidebarTitle = (viewMetadata: ViewMetadata, viewType: ?ViewType) => {\n+  if (!viewMetadata.id) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3ODA4Mw=="}, "originalCommit": {"oid": "2393776bffc205b9244689e721cbad7a7632c97b"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDExMDA4NQ==", "bodyText": "Thanks for the helpful feedback, I've updated the code. I also changed the default title for unsaved views to Unsaved ... in the same step.", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r444110085", "createdAt": "2020-06-23T10:03:59Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/sidebar/ContentColumn.jsx", "diffHunk": "@@ -0,0 +1,162 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled, { type StyledComponent } from 'styled-components';\n+\n+import View, { type ViewType } from 'views/logic/views/View';\n+import { type ThemeInterface } from 'theme';\n+import { type SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n+import { type ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n+\n+import ViewTypeLabel from 'views/components/ViewTypeLabel';\n+import ViewTypeContext from 'views/components/contexts/ViewTypeContext';\n+import { IconButton } from 'components/common';\n+\n+type Props = {\n+  children: React.Node,\n+  closeSidebar: () => void,\n+  searchPageLayout: ?SearchPageLayout,\n+  sectionTitle: string,\n+  viewMetadata: ViewMetadata,\n+};\n+\n+export const Container: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  position: ${sidebarIsInline ? 'static' : 'fixed'}\n+  display: grid;\n+  display: -ms-grid;\n+  grid-templage-columns: 1fr;\n+  grid-template-rows: auto 1fr;\n+  -ms-grid-columns: 1fr;\n+  -ms-grid-rows: auto 1fr;\n+  top: ${sidebarIsInline ? 0 : '50px'};\n+  left: ${sidebarIsInline ? 0 : '50px'};\n+\n+  width: 270px;\n+  height:  ${sidebarIsInline ? '100%' : 'calc(100% - 50px)'};;\n+  padding: 5px 15px 15px 15px;\n+\n+  color: ${theme.colors.global.textDefault};\n+  background: ${theme.colors.global.contentBackground};\n+  border-right: 1px solid ${theme.colors.gray[80]};\n+  \n+  overflow-y: auto;\n+  z-index: 3;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 1;\n+    -ms-grid-row: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 2;\n+    -ms-grid-row: 2;\n+  }\n+`);\n+\n+const Header: StyledComponent<{}, void, HTMLDivElement> = styled.div`\n+  height: 35px;\n+  display: grid;\n+  display: -ms-grid;\n+  grid-template-columns: 1fr auto;\n+  -ms-grid-columns: 1fr auto;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 2;\n+    -ms-grid-column: 2;\n+  }\n+`;\n+\n+const Title = styled.h1`\n+  color: inherit;\n+  overflow: hidden;\n+  text-overflow: ellipsis;\n+  white-space: nowrap;\n+  font-size: 24px;\n+  cursor: pointer;\n+`;\n+\n+const OverlayToggle: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  > * {\n+    font-size: 18px;\n+    color: ${sidebarIsInline ? theme.colors.gray[30] : theme.colors.variant.info};\n+  }\n+`);\n+\n+const HorizontalRule = styled.hr`\n+  margin: 5px 0 10px 0;\n+`;\n+\n+const SectionTitle = styled.h2`\n+  margin-bottom: 10px;\n+`;\n+\n+const CenterVertical = styled.div`\n+  display: inline-grid;\n+  display: -ms-inline-grid;\n+  align-content: center;\n+`;\n+\n+const toggleSidebarPinning = (searchPageLayout) => {\n+  if (!searchPageLayout) {\n+    return;\n+  }\n+  const { setConfig, config } = searchPageLayout;\n+  const sidebarIsInline = config?.sidebar.isInline;\n+  const newLayoutConfig = {\n+    ...config,\n+    sidebar: { isInline: !sidebarIsInline },\n+  };\n+  setConfig(newLayoutConfig);\n+};\n+\n+const sidebarTitle = (viewMetadata: ViewMetadata, viewType: ?ViewType) => {\n+  if (!viewMetadata.id) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3ODA4Mw=="}, "originalCommit": {"oid": "2393776bffc205b9244689e721cbad7a7632c97b"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTkyMTk3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/sidebar/ContentColumn.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODozOTowMFrOGk7qeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODozOTowMFrOGk7qeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3OTQ1MA==", "bodyText": "Ad Hoc Search is not a common way to describe that the search is new/untitled. I would prefer something more common. like New Search or Untitled Search. (I do remember why we changed from the first to the second option, but I am not convinced that someone could still mistake the heading for an action, the way it looks now)", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r441379450", "createdAt": "2020-06-17T08:39:00Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/sidebar/ContentColumn.jsx", "diffHunk": "@@ -0,0 +1,162 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled, { type StyledComponent } from 'styled-components';\n+\n+import View, { type ViewType } from 'views/logic/views/View';\n+import { type ThemeInterface } from 'theme';\n+import { type SearchPageLayout } from 'views/components/contexts/SearchPageLayoutContext';\n+import { type ViewMetaData as ViewMetadata } from 'views/stores/ViewMetadataStore';\n+\n+import ViewTypeLabel from 'views/components/ViewTypeLabel';\n+import ViewTypeContext from 'views/components/contexts/ViewTypeContext';\n+import { IconButton } from 'components/common';\n+\n+type Props = {\n+  children: React.Node,\n+  closeSidebar: () => void,\n+  searchPageLayout: ?SearchPageLayout,\n+  sectionTitle: string,\n+  viewMetadata: ViewMetadata,\n+};\n+\n+export const Container: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  position: ${sidebarIsInline ? 'static' : 'fixed'}\n+  display: grid;\n+  display: -ms-grid;\n+  grid-templage-columns: 1fr;\n+  grid-template-rows: auto 1fr;\n+  -ms-grid-columns: 1fr;\n+  -ms-grid-rows: auto 1fr;\n+  top: ${sidebarIsInline ? 0 : '50px'};\n+  left: ${sidebarIsInline ? 0 : '50px'};\n+\n+  width: 270px;\n+  height:  ${sidebarIsInline ? '100%' : 'calc(100% - 50px)'};;\n+  padding: 5px 15px 15px 15px;\n+\n+  color: ${theme.colors.global.textDefault};\n+  background: ${theme.colors.global.contentBackground};\n+  border-right: 1px solid ${theme.colors.gray[80]};\n+  \n+  overflow-y: auto;\n+  z-index: 3;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 1;\n+    -ms-grid-row: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+    grid-row: 2;\n+    -ms-grid-row: 2;\n+  }\n+`);\n+\n+const Header: StyledComponent<{}, void, HTMLDivElement> = styled.div`\n+  height: 35px;\n+  display: grid;\n+  display: -ms-grid;\n+  grid-template-columns: 1fr auto;\n+  -ms-grid-columns: 1fr auto;\n+\n+  > *:nth-child(1) {\n+    grid-column: 1;\n+    -ms-grid-column: 1;\n+  }\n+\n+  > *:nth-child(2) {\n+    grid-column: 2;\n+    -ms-grid-column: 2;\n+  }\n+`;\n+\n+const Title = styled.h1`\n+  color: inherit;\n+  overflow: hidden;\n+  text-overflow: ellipsis;\n+  white-space: nowrap;\n+  font-size: 24px;\n+  cursor: pointer;\n+`;\n+\n+const OverlayToggle: StyledComponent<{ sidebarIsInline: boolean }, ThemeInterface, HTMLDivElement> = styled.div(({ theme, sidebarIsInline }) => `\n+  > * {\n+    font-size: 18px;\n+    color: ${sidebarIsInline ? theme.colors.gray[30] : theme.colors.variant.info};\n+  }\n+`);\n+\n+const HorizontalRule = styled.hr`\n+  margin: 5px 0 10px 0;\n+`;\n+\n+const SectionTitle = styled.h2`\n+  margin-bottom: 10px;\n+`;\n+\n+const CenterVertical = styled.div`\n+  display: inline-grid;\n+  display: -ms-inline-grid;\n+  align-content: center;\n+`;\n+\n+const toggleSidebarPinning = (searchPageLayout) => {\n+  if (!searchPageLayout) {\n+    return;\n+  }\n+  const { setConfig, config } = searchPageLayout;\n+  const sidebarIsInline = config?.sidebar.isInline;\n+  const newLayoutConfig = {\n+    ...config,\n+    sidebar: { isInline: !sidebarIsInline },\n+  };\n+  setConfig(newLayoutConfig);\n+};\n+\n+const sidebarTitle = (viewMetadata: ViewMetadata, viewType: ?ViewType) => {\n+  if (!viewMetadata.id) {\n+    return 'Ad Hoc Search';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2393776bffc205b9244689e721cbad7a7632c97b"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTkyODYxOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/sidebar/highlighting/HighlightingRules.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo0MDo0NFrOGk7uww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo0MDo0NFrOGk7uww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MDU0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Search terms and field values can be highlighted. The search term highlighting can be configured in the graylog server config.\n          \n          \n            \n                    Search terms and field values can be highlighted. Highlighting your search query in the results can be enabled/disabled in the graylog server config.", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r441380547", "createdAt": "2020-06-17T08:40:44Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/sidebar/highlighting/HighlightingRules.jsx", "diffHunk": "@@ -1,23 +1,24 @@\n // @flow strict\n import * as React from 'react';\n import { useContext } from 'react';\n-import styled from 'styled-components';\n \n import { DEFAULT_HIGHLIGHT_COLOR } from 'views/Constants';\n import HighlightingRulesContext from 'views/components/contexts/HighlightingRulesContext';\n+import SectionInfo from '../SectionInfo';\n+import SectionSubheadline from '../SectionSubheadline';\n \n import HighlightingRule, { HighlightingRuleGrid } from './HighlightingRule';\n import ColorPreview from './ColorPreview';\n \n-const Headline = styled.h4`\n-  margin-bottom: 10px;\n-`;\n-\n const HighlightingRules = () => {\n   const rules = useContext(HighlightingRulesContext) ?? [];\n   return (\n     <>\n-      <Headline>Highlighting</Headline>\n+      <SectionInfo>\n+        Search terms and field values can be highlighted. The search term highlighting can be configured in the graylog server config.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2393776bffc205b9244689e721cbad7a7632c97b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTkzMTE1OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/sidebar/highlighting/HighlightingRules.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo0MToyMFrOGk7wUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo0MToyMFrOGk7wUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MDk0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    A field value can be highlighted by clicking on &quot;Highlight this value&quot; in its context menu.\n          \n          \n            \n                    Any field value can be highlighted by clicking on the value and selecting &quot;Highlight this value&quot;.", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r441380944", "createdAt": "2020-06-17T08:41:20Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/sidebar/highlighting/HighlightingRules.jsx", "diffHunk": "@@ -1,23 +1,24 @@\n // @flow strict\n import * as React from 'react';\n import { useContext } from 'react';\n-import styled from 'styled-components';\n \n import { DEFAULT_HIGHLIGHT_COLOR } from 'views/Constants';\n import HighlightingRulesContext from 'views/components/contexts/HighlightingRulesContext';\n+import SectionInfo from '../SectionInfo';\n+import SectionSubheadline from '../SectionSubheadline';\n \n import HighlightingRule, { HighlightingRuleGrid } from './HighlightingRule';\n import ColorPreview from './ColorPreview';\n \n-const Headline = styled.h4`\n-  margin-bottom: 10px;\n-`;\n-\n const HighlightingRules = () => {\n   const rules = useContext(HighlightingRulesContext) ?? [];\n   return (\n     <>\n-      <Headline>Highlighting</Headline>\n+      <SectionInfo>\n+        Search terms and field values can be highlighted. The search term highlighting can be configured in the graylog server config.\n+        A field value can be highlighted by clicking on &quot;Highlight this value&quot; in its context menu.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2393776bffc205b9244689e721cbad7a7632c97b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjI4NjM1OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODoxMTozN1rOGl6tdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzozNjo1NFrOGmLJuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMjQwNg==", "bodyText": "Could we load the default from localStorage or user preferences?", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r442412406", "createdAt": "2020-06-18T18:11:37Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "diffHunk": "@@ -0,0 +1,27 @@\n+// @flow strict\n+import * as React from 'react';\n+import { useState } from 'react';\n+import PropTypes from 'prop-types';\n+\n+import SearchPageLayoutContext from './SearchPageLayoutContext';\n+\n+const defaultLayoutConfig = {\n+  sidebar: {\n+    isInline: false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcd3b97c23fda5d8e21b505ebcccd877012f2349"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4MTc4NQ==", "bodyText": "Yes, the plan is to save this information as a user preference in another iteration.", "url": "https://github.com/Graylog2/graylog2-server/pull/8294#discussion_r442681785", "createdAt": "2020-06-19T07:36:54Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/contexts/SearchPageLayoutProvider.jsx", "diffHunk": "@@ -0,0 +1,27 @@\n+// @flow strict\n+import * as React from 'react';\n+import { useState } from 'react';\n+import PropTypes from 'prop-types';\n+\n+import SearchPageLayoutContext from './SearchPageLayoutContext';\n+\n+const defaultLayoutConfig = {\n+  sidebar: {\n+    isInline: false,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMjQwNg=="}, "originalCommit": {"oid": "bcd3b97c23fda5d8e21b505ebcccd877012f2349"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4249, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}