{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MzAyNzA0", "number": 8073, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTo0NjowNVrOD7NJpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTo0NjowNVrOD7NJpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNDA4MDM3OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/decorators/LinkFieldDecorator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTo0NjowNVrOGTYxLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTo0NjowNVrOGTYxLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4MTkzMw==", "bodyText": "I think we should also allow URLs with more than one slash:\nE.g.  https://graylog.org//releases would be invalid now\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    UrlValidator urlValidator = new UrlValidator(schemes, UrlValidator.ALLOW_LOCAL_URLS);\n          \n          \n            \n                    UrlValidator urlValidator = new UrlValidator(schemes, UrlValidator.ALLOW_LOCAL_URLS + UrlValidator.ALLOW_2_SLASHES);", "url": "https://github.com/Graylog2/graylog2-server/pull/8073#discussion_r422981933", "createdAt": "2020-05-11T11:46:05Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog2/decorators/LinkFieldDecorator.java", "diffHunk": "@@ -92,14 +89,36 @@ public SearchResponse apply(SearchResponse searchResponse) {\n                     }\n                     final Message message = new Message(ImmutableMap.copyOf(summary.message()));\n                     final String href = (String) summary.message().get(linkField);\n-                    final Map<String, String> decoratedField = new HashMap<>();\n-                    decoratedField.put(\"type\", \"a\");\n-                    decoratedField.put(\"href\", href);\n-                    message.addField(linkField, decoratedField);\n+                    if (isValidUrl(href)) {\n+                        final Map<String, String> decoratedField = new HashMap<>();\n+                        decoratedField.put(\"type\", \"a\");\n+                        decoratedField.put(\"href\", href);\n+                        message.addField(linkField, decoratedField);\n+                    } else {\n+                        message.addField(linkField, href);\n+                    }\n                     return summary.toBuilder().message(message.getFields()).build();\n                 })\n                 .collect(Collectors.toList());\n \n         return searchResponse.toBuilder().messages(summaries).build();\n     }\n+\n+    /**\n+     * @param url a String URL.\n+     * @return true if the URL is valid and false if the URL is invalid.\n+     *\n+     * All URLS that do not start with the protocol \"http\" or \"https\" protocol scheme are considered invalid.\n+     * All other non-URL text strings will be considered invalid. This includes inline javascript expressions such as:\n+     *  - javascript:...\n+     *  - alert()\n+     *  - or any other javascript expressions.\n+     */\n+    private boolean isValidUrl(String url) {\n+        String[] schemes = {\"http\", \"https\"};\n+        // UrlValidator.ALLOW_LOCAL_URLS allows local links to be permitted such as http://my-local-server\n+        // Some users may reference such local URLs, and there should be no issue with doing so.\n+        UrlValidator urlValidator = new UrlValidator(schemes, UrlValidator.ALLOW_LOCAL_URLS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad569c52f993f6971257bbbfb91cf779462063da"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4280, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}