{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTQyMzUz", "number": 7836, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOToxODoxMFrODveQDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwOTowMzoxMFrODy0ueQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTA1MjkzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOToxODoxMFrOGB6kXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOToxODoxMFrOGB6kXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY2MTM0MA==", "bodyText": "I had to use the ActionContext because AdditionalContext is not working with useContext, but I could also wrap the component in AdditionalContext.Provider, instead.", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r404661340", "createdAt": "2020-04-07T09:18:10Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.jsx", "diffHunk": "@@ -1,24 +1,22 @@\n // @flow strict\n import * as React from 'react';\n+import { useContext } from 'react';\n import PropTypes from 'prop-types';\n \n-import connect from 'stores/connect';\n-\n-import { HighlightingRulesStore } from 'views/stores/HighlightingRulesStore';\n+import { ActionContext } from 'views/logic/ActionContext';\n import DecoratorContext from 'views/components/messagelist/decoration/DecoratorContext';\n-import HighlightingRule from 'views/logic/views/formatting/highlighting/HighlightingRule';\n \n import PossiblyHighlight from './PossiblyHighlight';\n import Highlight from './Highlight';\n \n type Props = {\n   children: ?React.Node,\n   field: string,\n-  highlightingRules: { [string]: Array<HighlightingRule> },\n   value?: any,\n };\n \n-const CustomHighlighting = ({ children, field: fieldName, value: fieldValue, highlightingRules }: Props) => {\n+const CustomHighlighting = ({ children, field: fieldName, value: fieldValue }: Props) => {\n+  const { highlightingRules = {} } = useContext(ActionContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e66605adc6c64d56460571631765c394fcd5c2b8"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTQwMzQ4OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/searchbar/saved-search/SavedSearchControls.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNzo0MToyN1rOGGEl4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNzo0MToyN1rOGGEl4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAxOTg3Mg==", "bodyText": "Since we're revising this component already, could we use createRef?", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r409019872", "createdAt": "2020-04-15T17:41:27Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/views/components/searchbar/saved-search/SavedSearchControls.jsx", "diffHunk": "@@ -228,50 +205,48 @@ class SavedSearchControls extends React.Component<Props, State> {\n     );\n \n     return (\n-      <NewViewLoaderContext.Consumer>\n-        {(loadNewView) => (\n-          <div className=\"pull-right\">\n-            <ButtonGroup>\n-              <>\n-                <Button title={title} ref={(elem) => { this.formTarget = elem; }} onClick={this.toggleFormModal}>\n-                  <Icon style={{ color: savedSearchColor }} name={savedSearchStyle} /> Save\n-                </Button>\n-                {savedSearchForm}\n-              </>\n-              <Button title=\"Load a previously saved search\"\n-                      onClick={this.toggleListModal}>\n-                <Icon name=\"folder-o\" /> Load\n-              </Button>\n-              {savedSearchList}\n-              <DropdownButton title={<Icon name=\"ellipsis-h\" />} id=\"search-actions-dropdown\" pullRight noCaret>\n-                <MenuItem onSelect={this.loadAsDashboard}><Icon name=\"dashboard\" /> Export to dashboard</MenuItem>\n-                <MenuItem onSelect={this.toggleCSVExport}><Icon name=\"cloud-download\" /> Export to CSV</MenuItem>\n-                <MenuItem disabled={disableReset} onSelect={() => loadNewView()} data-testid=\"reset-search\">\n-                  <Icon name=\"eraser\" /> Reset search\n-                </MenuItem>\n-                <MenuItem divider />\n-                <MenuItem onSelect={this.toggleShareSearch} title=\"Share search\" disabled={!(view && view.id) || !_isAllowedToEdit(view, currentUser)}>\n-                  <Icon name=\"share-alt\" /> Share\n-                </MenuItem>\n-              </DropdownButton>\n-              {csvExport}\n-              {shareSearch}\n-            </ButtonGroup>\n-          </div>\n+      <CurrentUserContext.Consumer>\n+        {(currentUser) => (\n+          <NewViewLoaderContext.Consumer>\n+            {(loadNewView) => (\n+              <div className=\"pull-right\">\n+                <ButtonGroup>\n+                  <>\n+                    <Button title={title} ref={(elem) => { this.formTarget = elem; }} onClick={this.toggleFormModal}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7429ed2a66e202f48a31fede002e69845aa52a28"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTQzNjk3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/visualizations/XYPlot.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNzo1MDoyMlrOGGE7AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMDoxMTo1MVrOGGeTag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyNTI4MQ==", "bodyText": "graylog2-web-interface/config.js shows that the default timezone is 'Europe/Berlin'. Not sure if that's relevant. Also, should we hoist this default up into the context's default?", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r409025281", "createdAt": "2020-04-15T17:50:22Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/views/components/visualizations/XYPlot.jsx", "diffHunk": "@@ -50,14 +47,14 @@ const XYPlot = ({\n   config,\n   chartData,\n   currentQuery,\n-  timezone,\n   effectiveTimerange,\n   getChartColor,\n   setChartColor,\n   height,\n   plotLayout = {},\n   onZoom = OnZoom,\n }: Props) => {\n+  const { timezone } = useContext(CurrentUserContext) || { timezone: 'UTC' };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7429ed2a66e202f48a31fede002e69845aa52a28"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ0MTEzMA==", "bodyText": "I've implemented the AppConfig rootTimeZone  as a default fallback. I prefer to define the fall back inside the component, because we check e.g. in the App.jsx if the currentUser object is empty.", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r409441130", "createdAt": "2020-04-16T10:11:51Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/visualizations/XYPlot.jsx", "diffHunk": "@@ -50,14 +47,14 @@ const XYPlot = ({\n   config,\n   chartData,\n   currentQuery,\n-  timezone,\n   effectiveTimerange,\n   getChartColor,\n   setChartColor,\n   height,\n   plotLayout = {},\n   onZoom = OnZoom,\n }: Props) => {\n+  const { timezone } = useContext(CurrentUserContext) || { timezone: 'UTC' };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyNTI4MQ=="}, "originalCommit": {"oid": "7429ed2a66e202f48a31fede002e69845aa52a28"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjA2MjUxOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/common/UserTimezoneTimestamp.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODoyMzo1OFrOGHEpLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODoyMzo1OFrOGHEpLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA2OTI5Mg==", "bodyText": "Instead of || we can now use ??, which returns the right side only if the left side is null or undefined, not just falsy. We should favor this now that we can use it over ||.", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r410069292", "createdAt": "2020-04-17T08:23:58Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/common/UserTimezoneTimestamp.jsx", "diffHunk": "@@ -1,25 +1,14 @@\n-import React from 'react';\n-import PropTypes from 'prop-types';\n+import React, { useContext } from 'react';\n \n-import connect from 'stores/connect';\n-import CombinedProvider from 'injection/CombinedProvider';\n+import AppConfig from 'util/AppConfig';\n+import CurrentUserContext from 'contexts/CurrentUserContext';\n import Timestamp from 'components/common/Timestamp';\n import DateTime from 'logic/datetimes/DateTime';\n \n-const { CurrentUserStore } = CombinedProvider.get('CurrentUser');\n-\n-const UserTimezoneTimestamp = ({ timezone, ...rest }) => <Timestamp tz={timezone} format={DateTime.Formats.DATETIME_TZ} {...rest} />;\n-\n-UserTimezoneTimestamp.propTypes = {\n-  timezone: PropTypes.string,\n-};\n-\n-UserTimezoneTimestamp.defaultProps = {\n-  timezone: null,\n+const UserTimezoneTimestamp = ({ ...rest }) => {\n+  const currentUser = useContext(CurrentUserContext);\n+  const timezone = currentUser?.timezone || AppConfig.rootTimeZone();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjA4NjQ5OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODozMTowNVrOGHE4kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODozMTowNVrOGHE4kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA3MzIzNA==", "bodyText": "|| -> ??", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r410073234", "createdAt": "2020-04-17T08:31:05Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.jsx", "diffHunk": "@@ -1,26 +1,25 @@\n // @flow strict\n import * as React from 'react';\n+import { useContext } from 'react';\n import PropTypes from 'prop-types';\n \n-import connect from 'stores/connect';\n-\n-import { HighlightingRulesStore } from 'views/stores/HighlightingRulesStore';\n+import HighlightingRulesContext from 'views/components/contexts/HighlightingRulesContext';\n import DecoratorContext from 'views/components/messagelist/decoration/DecoratorContext';\n-import HighlightingRule from 'views/logic/views/formatting/highlighting/HighlightingRule';\n \n import PossiblyHighlight from './PossiblyHighlight';\n import Highlight from './Highlight';\n \n type Props = {\n   children: ?React.Node,\n   field: string,\n-  highlightingRules: { [string]: Array<HighlightingRule> },\n   value?: any,\n };\n \n-const CustomHighlighting = ({ children, field: fieldName, value: fieldValue, highlightingRules }: Props) => {\n+const CustomHighlighting = ({ children, field: fieldName, value: fieldValue }: Props) => {\n+  const highlightingRules = useContext(HighlightingRulesContext) || [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjA4ODE5OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODozMTozN1rOGHE5pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODozMTozN1rOGHE5pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA3MzUxMQ==", "bodyText": "|| -> ??", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r410073511", "createdAt": "2020-04-17T08:31:37Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.jsx", "diffHunk": "@@ -1,26 +1,25 @@\n // @flow strict\n import * as React from 'react';\n+import { useContext } from 'react';\n import PropTypes from 'prop-types';\n \n-import connect from 'stores/connect';\n-\n-import { HighlightingRulesStore } from 'views/stores/HighlightingRulesStore';\n+import HighlightingRulesContext from 'views/components/contexts/HighlightingRulesContext';\n import DecoratorContext from 'views/components/messagelist/decoration/DecoratorContext';\n-import HighlightingRule from 'views/logic/views/formatting/highlighting/HighlightingRule';\n \n import PossiblyHighlight from './PossiblyHighlight';\n import Highlight from './Highlight';\n \n type Props = {\n   children: ?React.Node,\n   field: string,\n-  highlightingRules: { [string]: Array<HighlightingRule> },\n   value?: any,\n };\n \n-const CustomHighlighting = ({ children, field: fieldName, value: fieldValue, highlightingRules }: Props) => {\n+const CustomHighlighting = ({ children, field: fieldName, value: fieldValue }: Props) => {\n+  const highlightingRules = useContext(HighlightingRulesContext) || [];\n+  const highlightingRulesMap = highlightingRules.reduce((prev, cur) => ({ ...prev, [cur.field]: prev[cur.field] ? [...prev[cur.field], cur] : [cur] }), {});\n   const decorators = [];\n-  const rules = highlightingRules[fieldName] || [];\n+  const rules = highlightingRulesMap[fieldName] || [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjA5MTIyOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODozMjozN1rOGHE7nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToxNjoyN1rOGLOc3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA3NDAxMg==", "bodyText": "I think we can simplify this to\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const highlightingRulesMap = highlightingRules.reduce((prev, cur) => ({ ...prev, [cur.field]: prev[cur.field] ? [...prev[cur.field], cur] : [cur] }), {});\n          \n          \n            \n              const highlightingRulesMap = highlightingRules.reduce((prev, cur) => ({ ...prev, [cur.field]: [...prev[cur.field], cur] }), {});", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r410074012", "createdAt": "2020-04-17T08:32:37Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.jsx", "diffHunk": "@@ -1,26 +1,25 @@\n // @flow strict\n import * as React from 'react';\n+import { useContext } from 'react';\n import PropTypes from 'prop-types';\n \n-import connect from 'stores/connect';\n-\n-import { HighlightingRulesStore } from 'views/stores/HighlightingRulesStore';\n+import HighlightingRulesContext from 'views/components/contexts/HighlightingRulesContext';\n import DecoratorContext from 'views/components/messagelist/decoration/DecoratorContext';\n-import HighlightingRule from 'views/logic/views/formatting/highlighting/HighlightingRule';\n \n import PossiblyHighlight from './PossiblyHighlight';\n import Highlight from './Highlight';\n \n type Props = {\n   children: ?React.Node,\n   field: string,\n-  highlightingRules: { [string]: Array<HighlightingRule> },\n   value?: any,\n };\n \n-const CustomHighlighting = ({ children, field: fieldName, value: fieldValue, highlightingRules }: Props) => {\n+const CustomHighlighting = ({ children, field: fieldName, value: fieldValue }: Props) => {\n+  const highlightingRules = useContext(HighlightingRulesContext) || [];\n+  const highlightingRulesMap = highlightingRules.reduce((prev, cur) => ({ ...prev, [cur.field]: prev[cur.field] ? [...prev[cur.field], cur] : [cur] }), {});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyNDI4Nw==", "bodyText": "We need to check in some way if prev[cur.field] is defined, because undefined is not iterable.", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r414424287", "createdAt": "2020-04-24T09:16:27Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/messagelist/CustomHighlighting.jsx", "diffHunk": "@@ -1,26 +1,25 @@\n // @flow strict\n import * as React from 'react';\n+import { useContext } from 'react';\n import PropTypes from 'prop-types';\n \n-import connect from 'stores/connect';\n-\n-import { HighlightingRulesStore } from 'views/stores/HighlightingRulesStore';\n+import HighlightingRulesContext from 'views/components/contexts/HighlightingRulesContext';\n import DecoratorContext from 'views/components/messagelist/decoration/DecoratorContext';\n-import HighlightingRule from 'views/logic/views/formatting/highlighting/HighlightingRule';\n \n import PossiblyHighlight from './PossiblyHighlight';\n import Highlight from './Highlight';\n \n type Props = {\n   children: ?React.Node,\n   field: string,\n-  highlightingRules: { [string]: Array<HighlightingRule> },\n   value?: any,\n };\n \n-const CustomHighlighting = ({ children, field: fieldName, value: fieldValue, highlightingRules }: Props) => {\n+const CustomHighlighting = ({ children, field: fieldName, value: fieldValue }: Props) => {\n+  const highlightingRules = useContext(HighlightingRulesContext) || [];\n+  const highlightingRulesMap = highlightingRules.reduce((prev, cur) => ({ ...prev, [cur.field]: prev[cur.field] ? [...prev[cur.field], cur] : [cur] }), {});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA3NDAxMg=="}, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjA5OTUwOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/sidebar/SearchResultOverview.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODozNTowM1rOGHFA9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODozNTowM1rOGHFA9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA3NTM4Mw==", "bodyText": "|| -> ??", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r410075383", "createdAt": "2020-04-17T08:35:03Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/sidebar/SearchResultOverview.jsx", "diffHunk": "@@ -1,20 +1,20 @@\n-import React from 'react';\n+import React, { useContext } from 'react';\n import PropTypes from 'prop-types';\n import numeral from 'numeral';\n-import { get } from 'lodash';\n \n+import AppConfig from 'util/AppConfig';\n import { Timestamp } from 'components/common';\n-import DateTime from 'logic/datetimes/DateTime';\n-import CurrentUserStore from 'stores/users/CurrentUserStore';\n-import connect from 'stores/connect';\n+import CurrentUserContext from 'contexts/CurrentUserContext';\n \n-const UserTimestamp = connect(Timestamp, { currentUser: CurrentUserStore }, ({ currentUser }) => ({ tz: get(currentUser, 'currentUser.timezone', 'UTC') }));\n+import DateTime from 'logic/datetimes/DateTime';\n \n const SearchResultOverview = ({ results }) => {\n   const { timestamp } = results;\n+  const currentUser = useContext(CurrentUserContext);\n+  const timezone = currentUser?.timezone || AppConfig.rootTimeZone();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjExNzAyOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/ViewActionsMenu.test.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODo0MDowMVrOGHFL2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToyMTo1N1rOGLOrQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA3ODE2OA==", "bodyText": "It looks like in none of the tests the currentUser is actually supplied. Do we need the context provider here?", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r410078168", "createdAt": "2020-04-17T08:40:01Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/ViewActionsMenu.test.jsx", "diffHunk": "@@ -66,23 +55,34 @@ jest.mock('views/stores/ViewSharingStore', () => ({\n describe('ViewActionsMenu', () => {\n   afterEach(cleanup);\n \n+  const SimpleViewActionMenu = ({ currentUser, ...props }: {currentUser?: User}) => (\n+    <CurrentUserContext.Provider value={currentUser}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyNzk2OA==", "bodyText": "We need to mock the currentUser here to be able to test the meta information and share modal. Otherwise the menu buttons would be disabled.", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r414427968", "createdAt": "2020-04-24T09:21:57Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/ViewActionsMenu.test.jsx", "diffHunk": "@@ -66,23 +55,34 @@ jest.mock('views/stores/ViewSharingStore', () => ({\n describe('ViewActionsMenu', () => {\n   afterEach(cleanup);\n \n+  const SimpleViewActionMenu = ({ currentUser, ...props }: {currentUser?: User}) => (\n+    <CurrentUserContext.Provider value={currentUser}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA3ODE2OA=="}, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjEyMDEyOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/contexts/HighlightingRulesContext.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODo0MTowMlrOGHFNyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODo0MTowMlrOGHFNyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA3ODY2NQ==", "bodyText": "We are favoring the Array<HighlightingRule> syntax in most other places. Generally I am fine with both (there is no semantic difference), but if we want to settle on one for consistency, it would be Array<T> right now.", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r410078665", "createdAt": "2020-04-17T08:41:02Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/contexts/HighlightingRulesContext.jsx", "diffHunk": "@@ -0,0 +1,8 @@\n+// @flow strict\n+import * as React from 'react';\n+import { singleton } from 'views/logic/singleton';\n+import HighlightingRule from 'views/logic/views/formatting/highlighting/HighlightingRule';\n+\n+const HighlightingRules = React.createContext<?HighlightingRule[]>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjE1NDIzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/visualizations/XYPlot.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODo1MToyMFrOGHFkAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODo1MToyMFrOGHFkAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA4NDM1NQ==", "bodyText": "|| -> ??", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r410084355", "createdAt": "2020-04-17T08:51:20Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/visualizations/XYPlot.jsx", "diffHunk": "@@ -50,14 +48,15 @@ const XYPlot = ({\n   config,\n   chartData,\n   currentQuery,\n-  timezone,\n   effectiveTimerange,\n   getChartColor,\n   setChartColor,\n   height,\n   plotLayout = {},\n   onZoom = OnZoom,\n }: Props) => {\n+  const currentUser = useContext(CurrentUserContext);\n+  const timezone = currentUser?.timezone || AppConfig.rootTimeZone();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjE2NzUyOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/test/setup-jest.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODo1NToyMlrOGHFstA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDo0NDowNVrOGLRwXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA4NjU4MA==", "bodyText": "I think we should use a separate file to feed AppConfig for our tests. This one is used by the dev server, using a separate one with different settings (especially a timezone that is not Europe/Berlin) could potentially uncover issues which we do not see when testing on dev machines (where we would use the same settings otherwise).", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r410086580", "createdAt": "2020-04-17T08:55:22Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/test/setup-jest.js", "diffHunk": "@@ -1,6 +1,8 @@\n import jQuery from 'jquery';\n import registerBuiltinStores from 'injection/registerBuiltinStores';\n \n+import '../config';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3ODQzMQ==", "bodyText": "Good point, I've created another config file and included it as a setupFile. At first I tried to reuse the config.js in a way we only need to define window.appConfig in one place, but in the end it was a cleaner solution to create another separate file and keep the config.js as simple as possible.", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r414478431", "createdAt": "2020-04-24T10:44:05Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/test/setup-jest.js", "diffHunk": "@@ -1,6 +1,8 @@\n import jQuery from 'jquery';\n import registerBuiltinStores from 'injection/registerBuiltinStores';\n \n+import '../config';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA4NjU4MA=="}, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjE5MjU3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/contexts/CurrentUserProvider.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwOTowMzoxMVrOGHF9cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwOTowMzoxMVrOGHF9cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5MDg2NA==", "bodyText": "CurrentUserPreferencesProvider -> CurrentUserProvider", "url": "https://github.com/Graylog2/graylog2-server/pull/7836#discussion_r410090864", "createdAt": "2020-04-17T09:03:11Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/contexts/CurrentUserProvider.jsx", "diffHunk": "@@ -0,0 +1,26 @@\n+// @flow strict\n+import * as React from 'react';\n+import PropTypes from 'prop-types';\n+import { get } from 'lodash';\n+\n+import { useStore } from 'stores/connect';\n+import CombinedProvider from 'injection/CombinedProvider';\n+import CurrentUserContext from './CurrentUserContext';\n+\n+const { CurrentUserStore } = CombinedProvider.get('CurrentUser');\n+const CurrentUserPreferencesProvider = ({ children }: { children: React.Node }) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be63f3f51517e2ba8cba2aa6117286d2f5a76b1d"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3787, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}