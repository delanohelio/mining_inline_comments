{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMTAyNTA3", "number": 8825, "title": "Merge webpack overrides from plugin into core config", "bodyText": "Description\n\nMotivation and Context\n\n\nBefore this change, adding a webpack config override in a plugin's\nwebpack.config.js lead to it being included in the webpack config used\nto build the plugin's assets in its own build (producing the plugin's\nproduction artifacts), but overrides were not integrated into the\nwebpack config used for development (when doing a yarn start in the\ncore repo).\nThis change is now adding logic to merge the generated plugin webpack\nconfigs together and merges the core config into to generate a final\nconfig including the core config and all plugin's overrides.\nNote: In a first attempt a multi-compiler (separate compilers for\nplugins, using their generated config) config was created. It works, but\nunfortunately there is no easy way to sync compiler runs with the core\ncompiler run and to assemble the generated assets from plugin compilers\nin order to include them in the boilerplate HTML. As this was a\ntimeboxed attempt, future attempts may be more successful.\nHow Has This Been Tested?\n\n\n\nScreenshots (if appropriate):\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.", "createdAt": "2020-08-19T11:28:50Z", "url": "https://github.com/Graylog2/graylog2-server/pull/8825", "merged": true, "mergeCommit": {"oid": "61e5b4170aa3d8c442b2e175033ae074fa3a8804"}, "closed": true, "closedAt": "2020-08-19T12:20:28Z", "author": {"login": "dennisoelkers"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAZ2xKgH2gAyNDcwMTAyNTA3OmMyODI0NDdhZjZhMzQxZWJjMWIyYjE1ZWQxMTUyZTEyY2NmZmNhZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAapjKgFqTQ3MDM5ODQ5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c282447af6a341ebc1b2b15ed1152e12ccffcae9", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/c282447af6a341ebc1b2b15ed1152e12ccffcae9", "committedDate": "2020-08-19T11:24:41Z", "message": "Merge actual plugin webpack config into dev webpack config."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0135a9ab1cd9d137d0150ae599acddf0f7eaa823", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/0135a9ab1cd9d137d0150ae599acddf0f7eaa823", "committedDate": "2020-08-19T11:24:41Z", "message": "Removing unused code, adding linter hints."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMzk4NDky", "url": "https://github.com/Graylog2/graylog2-server/pull/8825#pullrequestreview-470398492", "createdAt": "2020-08-19T12:18:08Z", "commit": {"oid": "0135a9ab1cd9d137d0150ae599acddf0f7eaa823"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjoxODowOFrOHDErWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjoxODowOFrOHDErWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk4NDQxMQ==", "bodyText": "This is exactly what I had planned to do! Cool", "url": "https://github.com/Graylog2/graylog2-server/pull/8825#discussion_r472984411", "createdAt": "2020-08-19T12:18:08Z", "author": {"login": "Gaya"}, "path": "graylog2-web-interface/webpack.combined.config.js", "diffHunk": "@@ -16,55 +12,46 @@ const globOptions = {\n   nodir: true,\n };\n \n-const pluginConfigs = process.env.disable_plugins === 'true' ? [] : glob.sync(pluginConfigPattern, globOptions).map(config => `${globCwd}/${config}`);\n+function isNotDependency(pluginConfig) {\n+  // Avoid including webpack configs of dependencies and built files.\n+  return !pluginConfig.includes('/target/') && !pluginConfig.includes('/node_modules/');\n+}\n+\n+const pluginConfigs = process.env.disable_plugins === 'true' ? [] : glob.sync(pluginConfigPattern, globOptions)\n+  .map((config) => `${globCwd}/${config}`)\n+  .filter(isNotDependency);\n \n process.env.web_src_path = path.resolve(__dirname);\n \n // eslint-disable-next-line import/no-dynamic-require\n const webpackConfig = require(path.resolve(__dirname, './webpack.config.js'));\n \n-function getPluginName(pluginConfig) {\n-  const packageConfig = path.join(path.dirname(pluginConfig), 'package.json');\n-  if (fs.existsSync(packageConfig)) {\n-    // If a package.json file exists (should normally be the case) use the package name for pluginName\n-    const pkg = JSON.parse(fs.readFileSync(packageConfig, 'utf8'));\n-    return pkg.name.replace(/\\s+/g, '');\n-  } else {\n-    // Otherwise just use the directory name of the webpack config file\n-    return path.basename(path.dirname(pluginConfig));\n-  }\n-}\n+const mergedPluginConfigs = pluginConfigs\n+  // eslint-disable-next-line global-require,import/no-dynamic-require\n+  .map((configFile) => require(configFile))\n+  .reduce((config, pluginConfig) => merge.smart(config, pluginConfig), {});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0135a9ab1cd9d137d0150ae599acddf0f7eaa823"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2843, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}