{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNjA3MzI1", "number": 8846, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMjozOToxOFrOEa83Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzo1ODo1MFrOEbcvoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2Njk1NjQzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/components/users/UserDetails/PreferencesSection.jsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMjozOToxOFrOHErlHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNTo0Njo1OFrOHFrNKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3MDM2NQ==", "bodyText": "This is a perfect example for code I would like to centralise, but don't really know a good place for. It is clearly presentation logic which means it should not be part of the PreferenceStore nor the directory logic/users", "url": "https://github.com/Graylog2/graylog2-server/pull/8846#discussion_r474670365", "createdAt": "2020-08-21T12:39:18Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/components/users/UserDetails/PreferencesSection.jsx", "diffHunk": "@@ -0,0 +1,52 @@\n+// @flow strict\n+import * as React from 'react';\n+\n+import { PREFERENCES_THEME_MODE } from 'theme/constants';\n+import Store from 'logic/local-storage/Store';\n+import User from 'logic/users/User';\n+import ReadOnlyFormGroup from 'components/common/ReadOnlyFormGroup';\n+import SectionComponent from 'components/common/Section/SectionComponent';\n+\n+type Props = {\n+  user: User,\n+};\n+\n+export const getPreferenceValueLabel = (preferenceType: string, preferenceValue: mixed): string => {\n+  if (preferenceType === 'boolean') {\n+    return preferenceValue ? 'yes' : 'no';\n+  }\n+\n+  return String(preferenceValue);\n+};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aee4f91027a3c8846f01a1a3e93666d3f8a1616"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5ODAwNg==", "bodyText": "I would move it to ReadOnlyFormGroup. It is quite certain the only place which ever needs it. In addition I would set a prop which is configuring it: <ReadOnlyFormGroup label=\"Search autocompletion\" value={enableSmartSearch}  valueConverter=\"boolean\" /> something like this.", "url": "https://github.com/Graylog2/graylog2-server/pull/8846#discussion_r475398006", "createdAt": "2020-08-24T07:37:25Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/components/users/UserDetails/PreferencesSection.jsx", "diffHunk": "@@ -0,0 +1,52 @@\n+// @flow strict\n+import * as React from 'react';\n+\n+import { PREFERENCES_THEME_MODE } from 'theme/constants';\n+import Store from 'logic/local-storage/Store';\n+import User from 'logic/users/User';\n+import ReadOnlyFormGroup from 'components/common/ReadOnlyFormGroup';\n+import SectionComponent from 'components/common/Section/SectionComponent';\n+\n+type Props = {\n+  user: User,\n+};\n+\n+export const getPreferenceValueLabel = (preferenceType: string, preferenceValue: mixed): string => {\n+  if (preferenceType === 'boolean') {\n+    return preferenceValue ? 'yes' : 'no';\n+  }\n+\n+  return String(preferenceValue);\n+};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3MDM2NQ=="}, "originalCommit": {"oid": "4aee4f91027a3c8846f01a1a3e93666d3f8a1616"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxMjA2Nw==", "bodyText": "I moved the getPreferenceValueLabel logic to the ReadOnlyFormGroup, instead of a valueConverter prop I used typeof and made sure the provided values are a boolean.\nI like the suggestion regarding the visual presentation.", "url": "https://github.com/Graylog2/graylog2-server/pull/8846#discussion_r475712067", "createdAt": "2020-08-24T15:45:49Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/components/users/UserDetails/PreferencesSection.jsx", "diffHunk": "@@ -0,0 +1,52 @@\n+// @flow strict\n+import * as React from 'react';\n+\n+import { PREFERENCES_THEME_MODE } from 'theme/constants';\n+import Store from 'logic/local-storage/Store';\n+import User from 'logic/users/User';\n+import ReadOnlyFormGroup from 'components/common/ReadOnlyFormGroup';\n+import SectionComponent from 'components/common/Section/SectionComponent';\n+\n+type Props = {\n+  user: User,\n+};\n+\n+export const getPreferenceValueLabel = (preferenceType: string, preferenceValue: mixed): string => {\n+  if (preferenceType === 'boolean') {\n+    return preferenceValue ? 'yes' : 'no';\n+  }\n+\n+  return String(preferenceValue);\n+};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3MDM2NQ=="}, "originalCommit": {"oid": "4aee4f91027a3c8846f01a1a3e93666d3f8a1616"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxMjgxMA==", "bodyText": "I thought about increasing the icon size, but in my opinion it looks better this way.", "url": "https://github.com/Graylog2/graylog2-server/pull/8846#discussion_r475712810", "createdAt": "2020-08-24T15:46:58Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/components/users/UserDetails/PreferencesSection.jsx", "diffHunk": "@@ -0,0 +1,52 @@\n+// @flow strict\n+import * as React from 'react';\n+\n+import { PREFERENCES_THEME_MODE } from 'theme/constants';\n+import Store from 'logic/local-storage/Store';\n+import User from 'logic/users/User';\n+import ReadOnlyFormGroup from 'components/common/ReadOnlyFormGroup';\n+import SectionComponent from 'components/common/Section/SectionComponent';\n+\n+type Props = {\n+  user: User,\n+};\n+\n+export const getPreferenceValueLabel = (preferenceType: string, preferenceValue: mixed): string => {\n+  if (preferenceType === 'boolean') {\n+    return preferenceValue ? 'yes' : 'no';\n+  }\n+\n+  return String(preferenceValue);\n+};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3MDM2NQ=="}, "originalCommit": {"oid": "4aee4f91027a3c8846f01a1a3e93666d3f8a1616"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MjE3OTUzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/stores/users/PreferencesStore.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzo1ODo1MFrOHFYsmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNTo0MTozNVrOHFq_Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQwOTU2Mg==", "bodyText": "Since we now exactly know what in the PreferenceMap is, we should do the real type here. So if someone is adding a new entry and accessing it he get's informed that it is not in the type.", "url": "https://github.com/Graylog2/graylog2-server/pull/8846#discussion_r475409562", "createdAt": "2020-08-24T07:58:50Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/stores/users/PreferencesStore.js", "diffHunk": "@@ -13,49 +13,38 @@ export type Preference = {\n   value: any,\n };\n \n-type PreferencesMap = {\n+export type PreferencesMap = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aee4f91027a3c8846f01a1a3e93666d3f8a1616"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcwOTI1OA==", "bodyText": "I had to adjust the existing type definitions a lot, but it was worth it! E.g. I added a UserOverviewJSON type definitions.", "url": "https://github.com/Graylog2/graylog2-server/pull/8846#discussion_r475709258", "createdAt": "2020-08-24T15:41:35Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/stores/users/PreferencesStore.js", "diffHunk": "@@ -13,49 +13,38 @@ export type Preference = {\n   value: any,\n };\n \n-type PreferencesMap = {\n+export type PreferencesMap = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQwOTU2Mg=="}, "originalCommit": {"oid": "4aee4f91027a3c8846f01a1a3e93666d3f8a1616"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4035, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}