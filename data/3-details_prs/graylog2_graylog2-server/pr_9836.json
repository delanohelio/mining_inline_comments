{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMzU4MTY1", "number": 9836, "title": "Use plotlys colorscales for Heatmap Aggregation", "bodyText": "Motivation and Context\nPlotly provides a list of predefined colorscales for its Heatmap. Instead of hard coding a single color scale\nwe should provide that list to the use so he can use a colorscale matching to his data.\nAlso it is often useful to define the range of the scale. For example if we have 100 data points in the range from 1 to 10\nand 2 data points in the range 60 to 70, the range of the colorscale is defined from 1 to 70. The 100 data points are now invisible.\nIf the user now selects the data range from 1 to 11 the 2 data point 2 with 60 and 70 will now still look out but the rest is more\nreadable.\nDescription\n\nAdd a select where we list the colorscales poltly accepts\nAdd a Min and Max field so the user can enter the range of the scale\nAdd Autoscale which enables of disables the Min, Max fields\nAdd a default value which will be rendered if a undefined value was found, until now we used 'None' and draw the hard\ncoded background, but we do not have it any longer, so the background will now\nAdd a checkbox to automatically set the default to the smallest value.\n\n\nHow Has This Been Tested?\n\nCreated a Heatmap and run through all possible values\n\nTypes of changes\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)", "createdAt": "2020-12-21T09:27:30Z", "url": "https://github.com/Graylog2/graylog2-server/pull/9836", "merged": true, "mergeCommit": {"oid": "e8f56667be2e146050a170693c2562694346a253"}, "closed": true, "closedAt": "2021-01-06T07:49:45Z", "author": {"login": "kmerz"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnA5_CgH2gAyNTQzMzU4MTY1OjAzNDc2MDIyZDJmMjJhMmJhNzVlZTBhMzZlM2QxNWIzYzNiNWFiYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtasNjgFqTU2MjM4MzcyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "03476022d2f22a2ba75ee0a36e3d15b3c3b5abc1", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/03476022d2f22a2ba75ee0a36e3d15b3c3b5abc1", "committedDate": "2020-12-17T10:23:37Z", "message": "Add HeatmapVisualizationConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2677f2de2e1c92656b9e00b7b421cbeab96dfd3", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/e2677f2de2e1c92656b9e00b7b421cbeab96dfd3", "committedDate": "2020-12-17T10:34:28Z", "message": "Add HeatMapVisualizationConfiguration component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6016e0e1cfa3af1c66094a60a7d989d9894a5635", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/6016e0e1cfa3af1c66094a60a7d989d9894a5635", "committedDate": "2020-12-17T10:47:32Z", "message": "Use VisualizationConfig in Component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6c8a0a0fab2e2d03820bf6d489f97cfd9df3a21", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/d6c8a0a0fab2e2d03820bf6d489f97cfd9df3a21", "committedDate": "2020-12-17T11:00:43Z", "message": "Add reverseScale config options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0100b7f1b35f9b20b06d04d257d5ace436dc3000", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/0100b7f1b35f9b20b06d04d257d5ace436dc3000", "committedDate": "2020-12-17T13:21:31Z", "message": "Add useful config options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50e85fe9a208fed9aa710ea28358358a40c58961", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/50e85fe9a208fed9aa710ea28358358a40c58961", "committedDate": "2020-12-17T15:25:46Z", "message": "xxx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e0e67b8808a1a11f4ca7a64a665b4ca399162ad", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/5e0e67b8808a1a11f4ca7a64a665b4ca399162ad", "committedDate": "2020-12-18T11:03:49Z", "message": "Create HeatmapVisualizationConfig for the Backend"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc8127b5129197b792687cc68e8409d6c7822ee9", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/cc8127b5129197b792687cc68e8409d6c7822ee9", "committedDate": "2020-12-18T14:26:44Z", "message": "Validation to color scheme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3c3c297588788900c57b53801bab8bf3d83abc5", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a3c3c297588788900c57b53801bab8bf3d83abc5", "committedDate": "2020-12-21T09:12:14Z", "message": "Adapting failing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b02a9c21bcb9612cbd222d0cf3ee122d416dfaf5", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/b02a9c21bcb9612cbd222d0cf3ee122d416dfaf5", "committedDate": "2020-12-21T09:14:27Z", "message": "Fix linter warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef13f9e6c0ef04d14865130be18b54d503cf9ac0", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/ef13f9e6c0ef04d14865130be18b54d503cf9ac0", "committedDate": "2020-12-21T10:07:51Z", "message": "Make possible to auto set the default value to the smallest value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "347dcc3e2cf8820263e4bfd2c6787f6f83a8a467", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/347dcc3e2cf8820263e4bfd2c6787f6f83a8a467", "committedDate": "2020-12-21T10:17:11Z", "message": "Add useSmallestAsDefault to backend"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMDQ5MDE0", "url": "https://github.com/Graylog2/graylog2-server/pull/9836#pullrequestreview-560049014", "createdAt": "2020-12-30T13:31:57Z", "commit": {"oid": "347dcc3e2cf8820263e4bfd2c6787f6f83a8a467"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMzozMTo1N1rOIMtTTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMzo0MjoxN1rOIMte2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE5NjA0NA==", "bodyText": "We could clean this up a bit by introducing something like this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const _onColorScaleChange = useCallback(({ value }) => onChange(config.toBuilder().colorScale(value).build()), [config, onChange]);\n          \n          \n            \n              const modifyConfig = useCallback((fn: (builder: HeatmapVisualizationConfigBuilder) => HeatmapVisualizationConfigBuilder) => {\n          \n          \n            \n                onChange(fn(config.toBuilder()).build());\n          \n          \n            \n              }, [onChange, config]);\n          \n          \n            \n              const _onColorScaleChange = useCallback(({ value }) => modifyConfig((builder) => builder.colorScale(value)), [modifyConfig]);\n          \n      \n    \n    \n  \n\nThe next five callbacks could then reuse modifyConfig as well. It would require exporting the type from the Builder class in HeatmapVisualizationConfig as HeatmapVisualizationConfigBuilder though.", "url": "https://github.com/Graylog2/graylog2-server/pull/9836#discussion_r550196044", "createdAt": "2020-12-30T13:31:57Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/aggregationbuilder/HeatmapVisualizationConfiguration.tsx", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright (C) 2020 Graylog, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the Server Side Public License, version 1,\n+ * as published by MongoDB, Inc.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * Server Side Public License for more details.\n+ *\n+ * You should have received a copy of the Server Side Public License\n+ * along with this program. If not, see\n+ * <http://www.mongodb.com/licensing/server-side-public-license>.\n+ */\n+import React, { useCallback, useState } from 'react';\n+import styled from 'styled-components';\n+\n+import { Checkbox } from 'components/graylog';\n+import { Input } from 'components/bootstrap';\n+import HeatmapVisualizationConfig, { COLORSCALES } from 'views/logic/aggregationbuilder/visualizations/HeatmapVisualizationConfig';\n+\n+import Select from '../Select';\n+\n+const StyledInput = styled(Input)`\n+  > label {\n+    font-weight: normal;\n+  }\n+`;\n+\n+type Props = {\n+  onChange: (config: HeatmapVisualizationConfig) => void,\n+  config: HeatmapVisualizationConfig,\n+};\n+\n+const _makeOption = (value) => ({ label: value, value });\n+const colorScalesOptions = COLORSCALES.map(_makeOption);\n+\n+type Error = {\n+  zmin?: string,\n+  zmax?: string,\n+  defaultValue?: string,\n+}\n+\n+const _validateConfig = (config: HeatmapVisualizationConfig, setErrors): boolean => {\n+  const { zMax, zMin, defaultValue } = config;\n+  const errors = {} as Error;\n+\n+  if (zMin || zMax) {\n+    if (zMin >= zMax) {\n+      errors.zmin = 'Min is bigger than Max';\n+    }\n+\n+    if (zMax <= zMin) {\n+      errors.zmin = 'Max is smaller than Min';\n+    }\n+\n+    if (defaultValue) {\n+      if (defaultValue > zMax || defaultValue < zMin) {\n+        errors.defaultValue = 'Default Value is out of range from Min and Max';\n+      }\n+    }\n+  }\n+\n+  setErrors(errors);\n+\n+  return Object.keys(errors).length <= 0;\n+};\n+\n+const _parseEvent = (event) => {\n+  const { value } = event.target;\n+\n+  if (value === undefined) {\n+    return undefined;\n+  }\n+\n+  return parseFloat(value);\n+};\n+\n+const HeatmapVisualizationConfiguration = ({ config = HeatmapVisualizationConfig.empty(), onChange: onChangeFunc }: Props) => {\n+  const [errors, setErrors] = useState<Error>({});\n+  const onChange = useCallback((newConfig) => {\n+    if (_validateConfig(newConfig, setErrors)) {\n+      onChangeFunc(newConfig);\n+    }\n+  }, [onChangeFunc]);\n+  const _onColorScaleChange = useCallback(({ value }) => onChange(config.toBuilder().colorScale(value).build()), [config, onChange]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "347dcc3e2cf8820263e4bfd2c6787f6f83a8a467"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE5NjQyNg==", "bodyText": "Why is this commented out?", "url": "https://github.com/Graylog2/graylog2-server/pull/9836#discussion_r550196426", "createdAt": "2020-12-30T13:33:17Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/visualizations/heatmap/HeatmapVisualization.tsx", "diffHunk": "@@ -134,7 +120,7 @@ const _chartLayout = (heatmapData) => {\n   return {\n     yaxis: axisConfig,\n     xaxis: axisConfig,\n-    plot_bgcolor: hasContent ? BG_COLOR : 'transparent',\n+    // plot_bgcolor: hasContent ? BG_COLOR : 'transparent',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "347dcc3e2cf8820263e4bfd2c6787f6f83a8a467"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE5NjU2MA==", "bodyText": "This could use some braces to make the operator precedence clearer.", "url": "https://github.com/Graylog2/graylog2-server/pull/9836#discussion_r550196560", "createdAt": "2020-12-30T13:33:46Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/visualizations/heatmap/HeatmapVisualization.tsx", "diffHunk": "@@ -98,11 +78,17 @@ const _transposeMatrix = (z: Array<Array<any>> = []) => {\n   return z[0].map((_, c) => { return z.map((r) => { return r[c]; }); });\n };\n \n-const _formatSeries = ({ valuesBySeries, xLabels }: {valuesBySeries: ValuesBySeries, xLabels: Array<any>}): ExtractedSeries => {\n+const _findSmallestValue = (valuesFound: Array<Array<number>>) => valuesFound.reduce((result, valueArray) => valueArray.reduce((acc, value) => (acc > value ? value : acc), result), valuesFound[0][0]);\n+\n+const _formatSeries = (visualizationConfig) => ({ valuesBySeries, xLabels }: {valuesBySeries: ValuesBySeries, xLabels: Array<any>}): ExtractedSeries => {\n+  const valuesFoundBySeries = values(valuesBySeries);\n   // When using the hovertemplate, we need to provie a value for empty z values.\n   // Otherwise plotly would throw errors when hovering over a field.\n   // We need to transpose the z matrix, because we are changing the x and y label in the generator function\n-  const z = _transposeMatrix(_fillUpMatrix(values(valuesBySeries), xLabels));\n+  const defaultValue = visualizationConfig.useSmallestAsDefault\n+    ? _findSmallestValue(valuesFoundBySeries)\n+    : visualizationConfig.defaultValue ?? 'None';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "347dcc3e2cf8820263e4bfd2c6787f6f83a8a467"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE5OTAwMQ==", "bodyText": "To avoid duplicating all values in the type, we can do:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            export const COLORSCALES = ['Greys', 'YlGnBu', 'Greens', 'YlOrRd', 'Bluered', 'RdBu', 'Reds', 'Blues', 'Picnic', 'Rainbow', 'Portland', 'Jet', 'Hot', 'Blackbody', 'Earth', 'Electric', 'Viridis', 'Cividis'];\n          \n          \n            \n            export const COLORSCALES = ['Greys', 'YlGnBu', 'Greens', 'YlOrRd', 'Bluered', 'RdBu', 'Reds', 'Blues', 'Picnic', 'Rainbow', 'Portland', 'Jet', 'Hot', 'Blackbody', 'Earth', 'Electric', 'Viridis', 'Cividis'];\n          \n          \n            \n            \n          \n          \n            \n            type ColorScale = typeof COLORSCALES[number];", "url": "https://github.com/Graylog2/graylog2-server/pull/9836#discussion_r550199001", "createdAt": "2020-12-30T13:42:17Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/logic/aggregationbuilder/visualizations/HeatmapVisualizationConfig.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+/*\n+ * Copyright (C) 2020 Graylog, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the Server Side Public License, version 1,\n+ * as published by MongoDB, Inc.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * Server Side Public License for more details.\n+ *\n+ * You should have received a copy of the Server Side Public License\n+ * along with this program. If not, see\n+ * <http://www.mongodb.com/licensing/server-side-public-license>.\n+ */\n+import * as Immutable from 'immutable';\n+\n+import VisualizationConfig from 'views/logic/aggregationbuilder/visualizations/VisualizationConfig';\n+\n+type ColorScale =\n+    'Greys'\n+  | 'YlGnBu'\n+  | 'Greens'\n+  | 'YlOrRd'\n+  | 'Bluered'\n+  | 'RdBu'\n+  | 'Reds'\n+  | 'Blues'\n+  | 'Picnic'\n+  | 'Rainbow'\n+  | 'Portland'\n+  | 'Jet'\n+  | 'Hot'\n+  | 'Blackbody'\n+  | 'Earth'\n+  | 'Electric'\n+  | 'Viridis'\n+  | 'Cividis';\n+\n+export const COLORSCALES = ['Greys', 'YlGnBu', 'Greens', 'YlOrRd', 'Bluered', 'RdBu', 'Reds', 'Blues', 'Picnic', 'Rainbow', 'Portland', 'Jet', 'Hot', 'Blackbody', 'Earth', 'Electric', 'Viridis', 'Cividis'];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "347dcc3e2cf8820263e4bfd2c6787f6f83a8a467"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fbf8a70fe0cf69e5d0edaf20a49932239389500", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/6fbf8a70fe0cf69e5d0edaf20a49932239389500", "committedDate": "2021-01-04T08:51:29Z", "message": "Recommendations and fixes from @dennisoelkers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxODA5NzA1", "url": "https://github.com/Graylog2/graylog2-server/pull/9836#pullrequestreview-561809705", "createdAt": "2021-01-05T14:01:09Z", "commit": {"oid": "6fbf8a70fe0cf69e5d0edaf20a49932239389500"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDowMTowOVrOIOYTSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDowMTowOVrOIOYTSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0OTEyOQ==", "bodyText": "Can we add isClearable={false} here? IMO it does not make sense to show the clear icon in here.", "url": "https://github.com/Graylog2/graylog2-server/pull/9836#discussion_r551949129", "createdAt": "2021-01-05T14:01:09Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/aggregationbuilder/HeatmapVisualizationConfiguration.tsx", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright (C) 2020 Graylog, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the Server Side Public License, version 1,\n+ * as published by MongoDB, Inc.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * Server Side Public License for more details.\n+ *\n+ * You should have received a copy of the Server Side Public License\n+ * along with this program. If not, see\n+ * <http://www.mongodb.com/licensing/server-side-public-license>.\n+ */\n+import React, { useCallback, useState } from 'react';\n+import styled from 'styled-components';\n+\n+import { Checkbox } from 'components/graylog';\n+import { Input } from 'components/bootstrap';\n+import HeatmapVisualizationConfig, { COLORSCALES, Builder as HeatmapConfigBuilder } from 'views/logic/aggregationbuilder/visualizations/HeatmapVisualizationConfig';\n+\n+import Select from '../Select';\n+\n+const StyledInput = styled(Input)`\n+  > label {\n+    font-weight: normal;\n+  }\n+`;\n+\n+type Props = {\n+  onChange: (config: HeatmapVisualizationConfig) => void,\n+  config: HeatmapVisualizationConfig,\n+};\n+\n+const _makeOption = (value) => ({ label: value, value });\n+const colorScalesOptions = COLORSCALES.map(_makeOption);\n+\n+type Error = {\n+  zmin?: string,\n+  zmax?: string,\n+  defaultValue?: string,\n+}\n+\n+const _validateConfig = (config: HeatmapVisualizationConfig, setErrors): boolean => {\n+  const { zMax, zMin, defaultValue } = config;\n+  const errors = {} as Error;\n+\n+  if (zMin || zMax) {\n+    if (zMin >= zMax) {\n+      errors.zmin = 'Min is bigger than Max';\n+    }\n+\n+    if (zMax <= zMin) {\n+      errors.zmin = 'Max is smaller than Min';\n+    }\n+\n+    if (defaultValue) {\n+      if (defaultValue > zMax || defaultValue < zMin) {\n+        errors.defaultValue = 'Default Value is out of range from Min and Max';\n+      }\n+    }\n+  }\n+\n+  setErrors(errors);\n+\n+  return Object.keys(errors).length <= 0;\n+};\n+\n+const _parseEvent = (event) => {\n+  const { value } = event.target;\n+\n+  if (value === undefined) {\n+    return undefined;\n+  }\n+\n+  return parseFloat(value);\n+};\n+\n+const HeatmapVisualizationConfiguration = ({ config = HeatmapVisualizationConfig.empty(), onChange: onChangeFunc }: Props) => {\n+  const [errors, setErrors] = useState<Error>({});\n+  const onChange = useCallback((newConfig) => {\n+    if (_validateConfig(newConfig, setErrors)) {\n+      onChangeFunc(newConfig);\n+    }\n+  }, [onChangeFunc]);\n+  const modifyConfig = useCallback((fn: (HeatmapConfigBuilder) => HeatmapConfigBuilder) => {\n+    onChange(fn(config.toBuilder()).build());\n+  }, [config, onChange]);\n+\n+  const _onColorScaleChange = useCallback(({ value }) => modifyConfig((builder: HeatmapConfigBuilder) => builder.colorScale(value)), [modifyConfig]);\n+  const _onReverseScaleChange = useCallback((e) => modifyConfig((builder: HeatmapConfigBuilder) => builder.reverseScale(e.target.checked)), [modifyConfig]);\n+  const _onAutoScaleChange = useCallback((e) => modifyConfig((builder: HeatmapConfigBuilder) => builder.autoScale(e.target.checked)), [modifyConfig]);\n+  const _onZminChange = useCallback((e) => modifyConfig((builder: HeatmapConfigBuilder) => builder.zMin(_parseEvent(e))), [modifyConfig]);\n+  const _onZmaxChange = useCallback((e) => modifyConfig((builder: HeatmapConfigBuilder) => builder.zMax(_parseEvent(e))), [modifyConfig]);\n+  const _onUseSmallestAsDefaultChange = useCallback((e) => modifyConfig((builder: HeatmapConfigBuilder) => builder.useSmallestAsDefault(e.target.checked)), [modifyConfig]);\n+  const _onDefaultValueChange = useCallback((e) => modifyConfig((builder: HeatmapConfigBuilder) => builder.defaultValue(_parseEvent(e))), [modifyConfig]);\n+\n+  return (\n+    <>\n+      <span>Color Scheme</span>\n+      <Select placeholder=\"Select Color Scheme\"\n+              onChange={_onColorScaleChange}\n+              options={colorScalesOptions}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fbf8a70fe0cf69e5d0edaf20a49932239389500"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7ce2e31e3b9dba9d8eccccbd6dc21e20ec5efce", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a7ce2e31e3b9dba9d8eccccbd6dc21e20ec5efce", "committedDate": "2021-01-05T16:24:44Z", "message": "Add isClearable=false"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzgzNzIy", "url": "https://github.com/Graylog2/graylog2-server/pull/9836#pullrequestreview-562383722", "createdAt": "2021-01-06T07:49:39Z", "commit": {"oid": "a7ce2e31e3b9dba9d8eccccbd6dc21e20ec5efce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3250, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}