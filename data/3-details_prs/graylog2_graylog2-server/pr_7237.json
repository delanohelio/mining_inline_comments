{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1Mzc3NDk5", "number": 7237, "title": "Add CSV export to new search", "bodyText": "Description\nAdd a button to the action list in the search which opens a modal. In the modal the user\ncan select the fields he wants to export and the stream he wants to filter the messages on.\nFor 3.2.0 we will use the old backend to provide the CSV export.\nMotivation and Context\nCSV export is the only way to export messages via gui. So the user needs this feature really\nbadly.\nThis PR is based on: Refs #7214\nScreenshots (if appropriate):\n\nTypes of changes\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Refactoring (non-breaking change)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist:\n\n My code follows the code style of this project.\n My change requires a change to the documentation.\n I have updated the documentation accordingly.\n I have read the CONTRIBUTING document.\n I have added tests to cover my changes.", "createdAt": "2020-01-21T15:52:15Z", "url": "https://github.com/Graylog2/graylog2-server/pull/7237", "merged": true, "mergeCommit": {"oid": "3e7cd987bdeead9088eca035b3c5f0068c90c1cb"}, "closed": true, "closedAt": "2020-01-23T13:00:13Z", "author": {"login": "kmerz"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8zV8rgFqTM0NjQzMTY4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9J89FAFqTM0NzI3NjU2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NDMxNjg0", "url": "https://github.com/Graylog2/graylog2-server/pull/7237#pullrequestreview-346431684", "createdAt": "2020-01-22T09:07:26Z", "commit": {"oid": "a05a2eb99299962e4b381c2d9f624a18c9621407"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwOTowNzoyNlrOFgUxmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDozODoyMVrOFgXjSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzOTEyOQ==", "bodyText": "When opening the modal, I am receiving the following PropType warning:\nWarning: Failed prop type: Invalid prop `availableFields` of type `object` supplied to `CSVExport`, expected `array`", "url": "https://github.com/Graylog2/graylog2-server/pull/7237#discussion_r369439129", "createdAt": "2020-01-22T09:07:26Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/CSVExport.jsx", "diffHunk": "@@ -0,0 +1,154 @@\n+// @flow strict\n+import React, { useState } from 'react';\n+import PropTypes from 'prop-types';\n+import URI from 'urijs';\n+import connect from 'stores/connect';\n+/* $FlowFixMe: Need to add to flow typed */\n+import styled from 'styled-components';\n+\n+import { StreamsStore } from 'views/stores/StreamsStore';\n+import { FieldTypesStore } from 'views/stores/FieldTypesStore';\n+import { ViewStore } from 'views/stores/ViewStore';\n+import URLUtils from 'util/URLUtils';\n+import { Modal, Button, Row } from 'components/graylog';\n+import { Icon } from 'components/common';\n+import ApiRoutes from 'routing/ApiRoutes';\n+import StoreProvider from 'injection/StoreProvider';\n+import View from 'views/logic/views/View';\n+import Select from 'views/components/Select';\n+\n+const SessionStore = StoreProvider.getStore('Session');\n+\n+type Option = {\n+  label: String,\n+  value: String,\n+};\n+\n+type Props = {\n+  availableStreams: Array<Option>,\n+  availableFields: Array<Option>,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05a2eb99299962e4b381c2d9f624a18c9621407"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ0MTgyNg==", "bodyText": "Could you implement the BootstrapModalWrapper? We mainly use the component to handle the modal state, but it also unifies the modal behaviour / settings.", "url": "https://github.com/Graylog2/graylog2-server/pull/7237#discussion_r369441826", "createdAt": "2020-01-22T09:13:28Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/CSVExport.jsx", "diffHunk": "@@ -0,0 +1,154 @@\n+// @flow strict\n+import React, { useState } from 'react';\n+import PropTypes from 'prop-types';\n+import URI from 'urijs';\n+import connect from 'stores/connect';\n+/* $FlowFixMe: Need to add to flow typed */\n+import styled from 'styled-components';\n+\n+import { StreamsStore } from 'views/stores/StreamsStore';\n+import { FieldTypesStore } from 'views/stores/FieldTypesStore';\n+import { ViewStore } from 'views/stores/ViewStore';\n+import URLUtils from 'util/URLUtils';\n+import { Modal, Button, Row } from 'components/graylog';\n+import { Icon } from 'components/common';\n+import ApiRoutes from 'routing/ApiRoutes';\n+import StoreProvider from 'injection/StoreProvider';\n+import View from 'views/logic/views/View';\n+import Select from 'views/components/Select';\n+\n+const SessionStore = StoreProvider.getStore('Session');\n+\n+type Option = {\n+  label: String,\n+  value: String,\n+};\n+\n+type Props = {\n+  availableStreams: Array<Option>,\n+  availableFields: Array<Option>,\n+  closeModal: () => void,\n+};\n+\n+const getURLForExportAsCSV = (selectedStream: ?string, selectedFields: Array<string> = []) => {\n+  const { view } = ViewStore.getInitialState() || {};\n+  if (view && view.type === View.Type.Search) {\n+    const { queries } = view.search;\n+    if (queries.size !== 1) {\n+      throw new Error('Searches must only have a single query!');\n+    }\n+    const firstQuery = queries.first();\n+    if (firstQuery) {\n+      const { query: { query_string: queryString }, timerange } = firstQuery;\n+      const query = !queryString ? '*' : queryString;\n+      const url = new URI(URLUtils.qualifyUrl(\n+        ApiRoutes.UniversalSearchApiController.export(\n+          timerange.type,\n+          query,\n+          timerange,\n+          selectedStream,\n+          0,\n+          0,\n+          selectedFields,\n+        ).url,\n+      ));\n+      if (URLUtils.areCredentialsInURLSupported()) {\n+        url\n+          .username(SessionStore.getSessionId())\n+          .password('session');\n+      }\n+\n+      return url.toString();\n+    }\n+  }\n+  return new URI(URLUtils.qualifyUrl('/notfound'));\n+};\n+\n+const wrapOption = o => ({ label: o, value: o });\n+const defaultFields = ['timestamp', 'source', 'message'];\n+const defaultFieldOptions = defaultFields.map(wrapOption);\n+\n+const CSVExport = ({ closeModal, availableStreams, availableFields }: Props) => {\n+  const [selectedStream, setSelectedStream] = useState();\n+  const [selectedFields, setSelectedFields] = useState(defaultFieldOptions);\n+\n+  const link = selectedFields.length > 0\n+    ? (\n+      /* eslint-disable-next-line react/jsx-no-target-blank */\n+      <a href={getURLForExportAsCSV((selectedStream || {}).value, selectedFields.map(f => f.value))} target=\"_blank\">\n+        <Icon name=\"cloud-download\" />&nbsp;\n+        Download\n+      </a>\n+    )\n+    : <p>Select at least on field to export messages as CSV.</p>;\n+\n+  const infoText = (URLUtils.areCredentialsInURLSupported()\n+    ? 'Please right click the download link below and choose \"Save Link As...\" to download the CSV file.'\n+    : 'Please click the download link below. Your browser may ask for your username and password to '\n+    + 'download the CSV file.');\n+\n+  const Content = styled.div`\n+    margin-left: 10px;\n+    margin-right: 10px;\n+  `;\n+  return (\n+    <Modal show>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05a2eb99299962e4b381c2d9f624a18c9621407"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ0MzU2NA==", "bodyText": "Because the component is a Modal, I would prefer the component name CSVExportModal. Comparable components have a similar name.", "url": "https://github.com/Graylog2/graylog2-server/pull/7237#discussion_r369443564", "createdAt": "2020-01-22T09:17:14Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/CSVExport.jsx", "diffHunk": "@@ -0,0 +1,154 @@\n+// @flow strict\n+import React, { useState } from 'react';\n+import PropTypes from 'prop-types';\n+import URI from 'urijs';\n+import connect from 'stores/connect';\n+/* $FlowFixMe: Need to add to flow typed */\n+import styled from 'styled-components';\n+\n+import { StreamsStore } from 'views/stores/StreamsStore';\n+import { FieldTypesStore } from 'views/stores/FieldTypesStore';\n+import { ViewStore } from 'views/stores/ViewStore';\n+import URLUtils from 'util/URLUtils';\n+import { Modal, Button, Row } from 'components/graylog';\n+import { Icon } from 'components/common';\n+import ApiRoutes from 'routing/ApiRoutes';\n+import StoreProvider from 'injection/StoreProvider';\n+import View from 'views/logic/views/View';\n+import Select from 'views/components/Select';\n+\n+const SessionStore = StoreProvider.getStore('Session');\n+\n+type Option = {\n+  label: String,\n+  value: String,\n+};\n+\n+type Props = {\n+  availableStreams: Array<Option>,\n+  availableFields: Array<Option>,\n+  closeModal: () => void,\n+};\n+\n+const getURLForExportAsCSV = (selectedStream: ?string, selectedFields: Array<string> = []) => {\n+  const { view } = ViewStore.getInitialState() || {};\n+  if (view && view.type === View.Type.Search) {\n+    const { queries } = view.search;\n+    if (queries.size !== 1) {\n+      throw new Error('Searches must only have a single query!');\n+    }\n+    const firstQuery = queries.first();\n+    if (firstQuery) {\n+      const { query: { query_string: queryString }, timerange } = firstQuery;\n+      const query = !queryString ? '*' : queryString;\n+      const url = new URI(URLUtils.qualifyUrl(\n+        ApiRoutes.UniversalSearchApiController.export(\n+          timerange.type,\n+          query,\n+          timerange,\n+          selectedStream,\n+          0,\n+          0,\n+          selectedFields,\n+        ).url,\n+      ));\n+      if (URLUtils.areCredentialsInURLSupported()) {\n+        url\n+          .username(SessionStore.getSessionId())\n+          .password('session');\n+      }\n+\n+      return url.toString();\n+    }\n+  }\n+  return new URI(URLUtils.qualifyUrl('/notfound'));\n+};\n+\n+const wrapOption = o => ({ label: o, value: o });\n+const defaultFields = ['timestamp', 'source', 'message'];\n+const defaultFieldOptions = defaultFields.map(wrapOption);\n+\n+const CSVExport = ({ closeModal, availableStreams, availableFields }: Props) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05a2eb99299962e4b381c2d9f624a18c9621407"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ0NzQxNQ==", "bodyText": "We could also use target=\"_parent\" to start the download in the same browser tab. When it comes to downloads, I would still use target=\"_blank\" for PDF's, because of PDF readers, but not for CSV files.", "url": "https://github.com/Graylog2/graylog2-server/pull/7237#discussion_r369447415", "createdAt": "2020-01-22T09:25:20Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/CSVExport.jsx", "diffHunk": "@@ -0,0 +1,154 @@\n+// @flow strict\n+import React, { useState } from 'react';\n+import PropTypes from 'prop-types';\n+import URI from 'urijs';\n+import connect from 'stores/connect';\n+/* $FlowFixMe: Need to add to flow typed */\n+import styled from 'styled-components';\n+\n+import { StreamsStore } from 'views/stores/StreamsStore';\n+import { FieldTypesStore } from 'views/stores/FieldTypesStore';\n+import { ViewStore } from 'views/stores/ViewStore';\n+import URLUtils from 'util/URLUtils';\n+import { Modal, Button, Row } from 'components/graylog';\n+import { Icon } from 'components/common';\n+import ApiRoutes from 'routing/ApiRoutes';\n+import StoreProvider from 'injection/StoreProvider';\n+import View from 'views/logic/views/View';\n+import Select from 'views/components/Select';\n+\n+const SessionStore = StoreProvider.getStore('Session');\n+\n+type Option = {\n+  label: String,\n+  value: String,\n+};\n+\n+type Props = {\n+  availableStreams: Array<Option>,\n+  availableFields: Array<Option>,\n+  closeModal: () => void,\n+};\n+\n+const getURLForExportAsCSV = (selectedStream: ?string, selectedFields: Array<string> = []) => {\n+  const { view } = ViewStore.getInitialState() || {};\n+  if (view && view.type === View.Type.Search) {\n+    const { queries } = view.search;\n+    if (queries.size !== 1) {\n+      throw new Error('Searches must only have a single query!');\n+    }\n+    const firstQuery = queries.first();\n+    if (firstQuery) {\n+      const { query: { query_string: queryString }, timerange } = firstQuery;\n+      const query = !queryString ? '*' : queryString;\n+      const url = new URI(URLUtils.qualifyUrl(\n+        ApiRoutes.UniversalSearchApiController.export(\n+          timerange.type,\n+          query,\n+          timerange,\n+          selectedStream,\n+          0,\n+          0,\n+          selectedFields,\n+        ).url,\n+      ));\n+      if (URLUtils.areCredentialsInURLSupported()) {\n+        url\n+          .username(SessionStore.getSessionId())\n+          .password('session');\n+      }\n+\n+      return url.toString();\n+    }\n+  }\n+  return new URI(URLUtils.qualifyUrl('/notfound'));\n+};\n+\n+const wrapOption = o => ({ label: o, value: o });\n+const defaultFields = ['timestamp', 'source', 'message'];\n+const defaultFieldOptions = defaultFields.map(wrapOption);\n+\n+const CSVExport = ({ closeModal, availableStreams, availableFields }: Props) => {\n+  const [selectedStream, setSelectedStream] = useState();\n+  const [selectedFields, setSelectedFields] = useState(defaultFieldOptions);\n+\n+  const link = selectedFields.length > 0\n+    ? (\n+      /* eslint-disable-next-line react/jsx-no-target-blank */\n+      <a href={getURLForExportAsCSV((selectedStream || {}).value, selectedFields.map(f => f.value))} target=\"_blank\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05a2eb99299962e4b381c2d9f624a18c9621407"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NDYxNg==", "bodyText": "Sorting availableStreams and availableFields would really improve the usability.", "url": "https://github.com/Graylog2/graylog2-server/pull/7237#discussion_r369484616", "createdAt": "2020-01-22T10:38:21Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/CSVExport.jsx", "diffHunk": "@@ -0,0 +1,154 @@\n+// @flow strict\n+import React, { useState } from 'react';\n+import PropTypes from 'prop-types';\n+import URI from 'urijs';\n+import connect from 'stores/connect';\n+/* $FlowFixMe: Need to add to flow typed */\n+import styled from 'styled-components';\n+\n+import { StreamsStore } from 'views/stores/StreamsStore';\n+import { FieldTypesStore } from 'views/stores/FieldTypesStore';\n+import { ViewStore } from 'views/stores/ViewStore';\n+import URLUtils from 'util/URLUtils';\n+import { Modal, Button, Row } from 'components/graylog';\n+import { Icon } from 'components/common';\n+import ApiRoutes from 'routing/ApiRoutes';\n+import StoreProvider from 'injection/StoreProvider';\n+import View from 'views/logic/views/View';\n+import Select from 'views/components/Select';\n+\n+const SessionStore = StoreProvider.getStore('Session');\n+\n+type Option = {\n+  label: String,\n+  value: String,\n+};\n+\n+type Props = {\n+  availableStreams: Array<Option>,\n+  availableFields: Array<Option>,\n+  closeModal: () => void,\n+};\n+\n+const getURLForExportAsCSV = (selectedStream: ?string, selectedFields: Array<string> = []) => {\n+  const { view } = ViewStore.getInitialState() || {};\n+  if (view && view.type === View.Type.Search) {\n+    const { queries } = view.search;\n+    if (queries.size !== 1) {\n+      throw new Error('Searches must only have a single query!');\n+    }\n+    const firstQuery = queries.first();\n+    if (firstQuery) {\n+      const { query: { query_string: queryString }, timerange } = firstQuery;\n+      const query = !queryString ? '*' : queryString;\n+      const url = new URI(URLUtils.qualifyUrl(\n+        ApiRoutes.UniversalSearchApiController.export(\n+          timerange.type,\n+          query,\n+          timerange,\n+          selectedStream,\n+          0,\n+          0,\n+          selectedFields,\n+        ).url,\n+      ));\n+      if (URLUtils.areCredentialsInURLSupported()) {\n+        url\n+          .username(SessionStore.getSessionId())\n+          .password('session');\n+      }\n+\n+      return url.toString();\n+    }\n+  }\n+  return new URI(URLUtils.qualifyUrl('/notfound'));\n+};\n+\n+const wrapOption = o => ({ label: o, value: o });\n+const defaultFields = ['timestamp', 'source', 'message'];\n+const defaultFieldOptions = defaultFields.map(wrapOption);\n+\n+const CSVExport = ({ closeModal, availableStreams, availableFields }: Props) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05a2eb99299962e4b381c2d9f624a18c9621407"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16f5d0af1725f78e0040d39e5a92943173e632c1", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/16f5d0af1725f78e0040d39e5a92943173e632c1", "committedDate": "2020-01-23T10:21:40Z", "message": "Introducing context for function to load new/reset view."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a4a06a48ba32cde297399a20bc6afb5e9b7f23f", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/8a4a06a48ba32cde297399a20bc6afb5e9b7f23f", "committedDate": "2020-01-23T10:21:41Z", "message": "Supply function for new view loader context."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3e9b97d7b7e7c809ad980257c8b4a7d11afe7dc", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/f3e9b97d7b7e7c809ad980257c8b4a7d11afe7dc", "committedDate": "2020-01-23T10:21:41Z", "message": "Changing glyphs, adding text & dropdown, fixing reset search."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9874c025c81d23f878ce13d92eb987affd5aae90", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/9874c025c81d23f878ce13d92eb987affd5aae90", "committedDate": "2020-01-23T10:21:41Z", "message": "Adding testid to reset search item."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a79048f4c41acfabd4576dd76ead577113ff9e80", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a79048f4c41acfabd4576dd76ead577113ff9e80", "committedDate": "2020-01-23T10:21:42Z", "message": "Simplifying & updating snapshots, adapting test case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d83e0f35386ea7c3dd4a5a68ad80db1da21b6a5", "author": {"user": {"login": "dennisoelkers", "name": "Dennis Oelkers"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/0d83e0f35386ea7c3dd4a5a68ad80db1da21b6a5", "committedDate": "2020-01-23T10:21:42Z", "message": "Fixing linter hints."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c2f20d3e3e109d7f41e9b608f0fe78d960da4fd", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/6c2f20d3e3e109d7f41e9b608f0fe78d960da4fd", "committedDate": "2020-01-23T10:21:43Z", "message": "Add modal to download the csv"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3faa0fa05aefb3506dfddd7c8d40e9026237900f", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/3faa0fa05aefb3506dfddd7c8d40e9026237900f", "committedDate": "2020-01-23T10:21:43Z", "message": "Add stream filter selection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59dcffc2b29c85206ebe478e236d329069eddaa8", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/59dcffc2b29c85206ebe478e236d329069eddaa8", "committedDate": "2020-01-23T10:21:43Z", "message": "Add fields selection for the CSV export"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3739c9511301583d1c67e0f473c1cd566563e9d", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/b3739c9511301583d1c67e0f473c1cd566563e9d", "committedDate": "2020-01-23T10:21:44Z", "message": "Add Icon and fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3eea8659d93672287f570da982c3d40de844a90b", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/3eea8659d93672287f570da982c3d40de844a90b", "committedDate": "2020-01-23T12:25:16Z", "message": "Fix annotations from @linuspahl"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a05a2eb99299962e4b381c2d9f624a18c9621407", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/a05a2eb99299962e4b381c2d9f624a18c9621407", "committedDate": "2020-01-21T15:49:31Z", "message": "Add Icon and fix typo"}, "afterCommit": {"oid": "3eea8659d93672287f570da982c3d40de844a90b", "author": {"user": {"login": "kmerz", "name": "Konrad Merz"}}, "url": "https://github.com/Graylog2/graylog2-server/commit/3eea8659d93672287f570da982c3d40de844a90b", "committedDate": "2020-01-23T12:25:16Z", "message": "Fix annotations from @linuspahl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3Mjc2NTYx", "url": "https://github.com/Graylog2/graylog2-server/pull/7237#pullrequestreview-347276561", "createdAt": "2020-01-23T13:00:02Z", "commit": {"oid": "3eea8659d93672287f570da982c3d40de844a90b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2705, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}