{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2Mzk2MzQ0", "number": 8371, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMToxODowNFrOEGtQ2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwODowMTo1MlrOEH27-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDY4NTA2OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/searchbar/SearchBarForm.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMToxODowNFrOGlq14Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMToxODowNFrOGlq14Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1MjQxNw==", "bodyText": "The biggest problem I faced while implementing these changes:\nI had to check here if the \"from\" date is a valid date string, which is also part of the AbsoluteTimeRangeSelector validation . Imagine the following scenario:\nStart date: 2020-06-18 11:04:34.82 (invalid date because last number is missing)\nEnd date: 2020-06-10 11:04:34.823\nIn this case the error message would be \"Start date must be before end date\" instead of \"Format must be: YYYY-MM-DD HH:mm:ss\", without the mentioned date string check in the form validation.\nAt one point I've created a SearchBarFormValidation file, but it was way more complex than the current implementation and I really prefer the component based validation approach. Unfortunately I could not find a way to give the field validation a higher priority than the form validation.", "url": "https://github.com/Graylog2/graylog2-server/pull/8371#discussion_r442152417", "createdAt": "2020-06-18T11:18:04Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/SearchBarForm.jsx", "diffHunk": "@@ -21,6 +22,16 @@ type Props = {\n   children: ((props: FormikProps<Values>) => React$Node) | React$Node,\n };\n \n+const validate = (values) => {\n+  const errors = {};\n+  if (values.timerange.type === 'absolute' && DateTime.isValidDateString(values.timerange.from) && values.timerange.from > values.timerange.to) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cf02ab0693687ea775683e750c5143db0770080"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1ODAxNTE3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/searchbar/AbsoluteTimeRangeSelector.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzo0NzowNlrOGmLc1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMTowMDoxM1rOGm72Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NjY3OA==", "bodyText": "During testing, I noticed that we have a slight inconsistency. The message says Format must be: YYYY-MM-DD HH:mm:ss, but we do allow specifying milliseconds. So the message should be Format must be: YYYY-MM-DD HH:mm:ss[.SSS]. This would mean not being able to reuse the DateTime.Formats.DATETIME constant, but this is okay, as we should support a couple of formats and use a combined format for the error message.\nA suggestion for a future improvement: I think we should be a bit more relaxed when parsing the date. Right now we expect to specify all units going down to seconds. Imo seconds should be optional, maybe it should even be possible to make hours & minutes optional as well.", "url": "https://github.com/Graylog2/graylog2-server/pull/8371#discussion_r442686678", "createdAt": "2020-06-19T07:47:06Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/searchbar/AbsoluteTimeRangeSelector.jsx", "diffHunk": "@@ -36,7 +36,7 @@ const _isValidDateString = (dateString: string) => {\n   }\n   return DateTime.isValidDateString(dateString)\n     ? undefined\n-    : `Invalid date: ${dateString}`;\n+    : `Format must be: ${DateTime.Formats.DATETIME}`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cf02ab0693687ea775683e750c5143db0770080"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ3OTYzOQ==", "bodyText": "Good point, I've updated the error message.", "url": "https://github.com/Graylog2/graylog2-server/pull/8371#discussion_r443479639", "createdAt": "2020-06-22T11:00:13Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/AbsoluteTimeRangeSelector.jsx", "diffHunk": "@@ -36,7 +36,7 @@ const _isValidDateString = (dateString: string) => {\n   }\n   return DateTime.isValidDateString(dateString)\n     ? undefined\n-    : `Invalid date: ${dateString}`;\n+    : `Format must be: ${DateTime.Formats.DATETIME}`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NjY3OA=="}, "originalCommit": {"oid": "5cf02ab0693687ea775683e750c5143db0770080"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2Njc1NTc3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/searchbar/AbsoluteTimeRangeSelector.jsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwODowMTo1MlrOGnd1qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMzoyMzoxMlrOGoR40Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAzNjUyMQ==", "bodyText": "This is now YYYY-MM-DD HH:mm:ss.SSS. It should be YYYY-MM-DD HH:mm:ss[.SSS] to indicate that milliseconds are optional. As mentioned in a previous comment, I think we cannot reuse an existing date format string, as we do combine multiple of them (two at the moment, more if we also make e.g. seconds optional).", "url": "https://github.com/Graylog2/graylog2-server/pull/8371#discussion_r444036521", "createdAt": "2020-06-23T08:01:52Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/searchbar/AbsoluteTimeRangeSelector.jsx", "diffHunk": "@@ -36,7 +36,7 @@ const _isValidDateString = (dateString: string) => {\n   }\n   return DateTime.isValidDateString(dateString)\n     ? undefined\n-    : `Invalid date: ${dateString}`;\n+    : `Format must be: ${DateTime.Formats.TIMESTAMP}`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "452e88ca22e46e3fc51fddb79c560df48c377e7c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDExODAzNg==", "bodyText": "I thought the parentheses mark the difference, but I like the idea.\nBut when we mark a part as optional, shouldn't we display a message like YYYY-MM-DD [HH:mm:ss[.SSS]] since you can enter 2020-06-23 in the same way like 2020-06-23 10:10:37?", "url": "https://github.com/Graylog2/graylog2-server/pull/8371#discussion_r444118036", "createdAt": "2020-06-23T10:18:16Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/searchbar/AbsoluteTimeRangeSelector.jsx", "diffHunk": "@@ -36,7 +36,7 @@ const _isValidDateString = (dateString: string) => {\n   }\n   return DateTime.isValidDateString(dateString)\n     ? undefined\n-    : `Invalid date: ${dateString}`;\n+    : `Format must be: ${DateTime.Formats.TIMESTAMP}`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAzNjUyMQ=="}, "originalCommit": {"oid": "452e88ca22e46e3fc51fddb79c560df48c377e7c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg4OTI5Nw==", "bodyText": "Yes, absolutely. I was not aware of being able to leave out the time, I only tested leaving out seconds, which unfortunately does not work yet :/", "url": "https://github.com/Graylog2/graylog2-server/pull/8371#discussion_r444889297", "createdAt": "2020-06-24T13:23:12Z", "author": {"login": "dennisoelkers"}, "path": "graylog2-web-interface/src/views/components/searchbar/AbsoluteTimeRangeSelector.jsx", "diffHunk": "@@ -36,7 +36,7 @@ const _isValidDateString = (dateString: string) => {\n   }\n   return DateTime.isValidDateString(dateString)\n     ? undefined\n-    : `Invalid date: ${dateString}`;\n+    : `Format must be: ${DateTime.Formats.TIMESTAMP}`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAzNjUyMQ=="}, "originalCommit": {"oid": "452e88ca22e46e3fc51fddb79c560df48c377e7c"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4198, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}