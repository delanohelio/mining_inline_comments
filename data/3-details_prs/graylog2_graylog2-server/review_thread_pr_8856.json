{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNTA0Mzg0", "number": 8856, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDo1ODo0MlrOEbnINw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwOTo0NzoxMFrOEb_fbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Mzg4MDg3OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/components/roles/RolesOverview/ActionsCell.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDo1ODo0MlrOHFpC1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNjowMjowNlrOHFr0TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY3NzM5Nw==", "bodyText": "Instead of asking for all users just to check if there is more then one, perhaps we should ask for one user? Because we will get a 'total' attribute in the pagination which tells us how many there are.", "url": "https://github.com/Graylog2/graylog2-server/pull/8856#discussion_r475677397", "createdAt": "2020-08-24T14:58:42Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/components/roles/RolesOverview/ActionsCell.jsx", "diffHunk": "@@ -21,29 +21,29 @@ const ActtionsWrapper = styled.div`\n   justify-content: flex-end;\n `;\n \n-const ActionsCell = ({ roleId, roleName, readOnly }: Props) => {\n-  const _deleteRole = () => {\n+const _deleteRole = (roleId: $PropertyType<Role, 'id'>, roleName: $PropertyType<Role, 'name'>, setDeleting: boolean => void) => {\n+  let confirmMessage = `Do you really want to delete role \"${roleName}?\"`;\n+  const getUnlimited = [1, 0, ''];\n+  setDeleting(true);\n+\n+  AuthzRolesActions.loadUsersForRole(roleId, ...getUnlimited).then((paginatedUsers) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59acea1d858768bd8d8aa4231be98cb7f2a4c818"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcyMjgyOQ==", "bodyText": "That totally makes sense, thanks!", "url": "https://github.com/Graylog2/graylog2-server/pull/8856#discussion_r475722829", "createdAt": "2020-08-24T16:02:06Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/components/roles/RolesOverview/ActionsCell.jsx", "diffHunk": "@@ -21,29 +21,29 @@ const ActtionsWrapper = styled.div`\n   justify-content: flex-end;\n `;\n \n-const ActionsCell = ({ roleId, roleName, readOnly }: Props) => {\n-  const _deleteRole = () => {\n+const _deleteRole = (roleId: $PropertyType<Role, 'id'>, roleName: $PropertyType<Role, 'name'>, setDeleting: boolean => void) => {\n+  let confirmMessage = `Do you really want to delete role \"${roleName}?\"`;\n+  const getUnlimited = [1, 0, ''];\n+  setDeleting(true);\n+\n+  AuthzRolesActions.loadUsersForRole(roleId, ...getUnlimited).then((paginatedUsers) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY3NzM5Nw=="}, "originalCommit": {"oid": "59acea1d858768bd8d8aa4231be98cb7f2a4c818"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Nzg3MjQ2OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/components/roles/RolesOverview/ActionsCell.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwOTo0NzoxMFrOHGQaBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwOTo0NzoxMFrOHGQaBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMyMjMwOA==", "bodyText": "paginationForFirstRole", "url": "https://github.com/Graylog2/graylog2-server/pull/8856#discussion_r476322308", "createdAt": "2020-08-25T09:47:10Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/components/roles/RolesOverview/ActionsCell.jsx", "diffHunk": "@@ -21,29 +21,29 @@ const ActtionsWrapper = styled.div`\n   justify-content: flex-end;\n `;\n \n-const ActionsCell = ({ roleId, roleName, readOnly }: Props) => {\n-  const _deleteRole = () => {\n+const _deleteRole = (roleId: $PropertyType<Role, 'id'>, roleName: $PropertyType<Role, 'name'>, setDeleting: boolean => void) => {\n+  let confirmMessage = `Do you really want to delete role \"${roleName}?\"`;\n+  const pagination = [1, 1, ''];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61f985d71a85e0b665860ca97888d90432416259"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4042, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}