{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3ODkzODA4", "number": 7952, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1MTo1MFrOD7OcMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1MTo1MFrOD7OcMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNDI5MTY4OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/events/MessagesExportEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1MTo1MFrOGTa20A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1MTo1MFrOGTa20A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxNjE0NA==", "bodyText": "I would add the limit for a rough estimation how many messages were exported. Or perhaps the total message count in the succeed case?", "url": "https://github.com/Graylog2/graylog2-server/pull/7952#discussion_r423016144", "createdAt": "2020-05-11T12:51:50Z", "author": {"login": "kmerz"}, "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/events/MessagesExportEvent.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.views.search.events;\n+\n+import com.fasterxml.jackson.annotation.JsonAutoDetect;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.google.auto.value.AutoValue;\n+import com.google.common.collect.ImmutableMap;\n+import org.graylog.plugins.views.search.export.ExportMessagesCommand;\n+import org.graylog2.plugin.indexer.searches.timeranges.AbsoluteRange;\n+import org.joda.time.DateTime;\n+\n+import java.util.LinkedHashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import static org.graylog.plugins.views.audit.ViewsAuditEventTypes.MESSAGES_EXPORT_REQUESTED;\n+import static org.graylog.plugins.views.audit.ViewsAuditEventTypes.MESSAGES_EXPORT_SUCCEEDED;\n+\n+@AutoValue\n+@JsonAutoDetect\n+public abstract class MessagesExportEvent {\n+\n+    public static MessagesExportEvent requested(DateTime startTime, String userName, ExportMessagesCommand command) {\n+        return from(startTime, userName, command, MESSAGES_EXPORT_REQUESTED);\n+    }\n+\n+    public static MessagesExportEvent succeeded(DateTime startTime, String userName, ExportMessagesCommand command) {\n+        return from(startTime, userName, command, MESSAGES_EXPORT_SUCCEEDED);\n+    }\n+\n+    private static MessagesExportEvent from(DateTime startTime, String userName, ExportMessagesCommand command, String auditType) {\n+        return Builder.create()\n+                .userName(userName)\n+                .auditType(auditType)\n+                .timestamp(startTime)\n+                .timeRange(command.timeRange())\n+                .queryString(command.queryString().queryString())\n+                .streams(command.streams())\n+                .fieldsInOrder(command.fieldsInOrder())\n+                .build();\n+    }\n+\n+    public abstract String userName();\n+\n+    public abstract String auditType();\n+\n+    public abstract DateTime timestamp();\n+\n+    public abstract AbsoluteRange timeRange();\n+\n+    public abstract String queryString();\n+\n+    public abstract Set<String> streams();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d10750d36395b6e71eba9abc4b91308c8f101553"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3735, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}