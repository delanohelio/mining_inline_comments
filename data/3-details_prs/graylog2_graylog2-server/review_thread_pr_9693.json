{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNjg0ODY0", "number": 9693, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDo1MzoyOVrOFAvkYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzo1Nzo0MFrOFAz_ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzIzNjgwOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/shared/messageq/kafka/KafkaMessageQueueReader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDo1MzoyOVrOH_Llqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDo1MzoyOVrOH_Llqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxMjIwMg==", "bodyText": "Yes please!", "url": "https://github.com/Graylog2/graylog2-server/pull/9693#discussion_r536012202", "createdAt": "2020-12-04T10:53:29Z", "author": {"login": "thll"}, "path": "graylog2-server/src/main/java/org/graylog2/shared/messageq/kafka/KafkaMessageQueueReader.java", "diffHunk": "@@ -16,22 +16,15 @@\n  */\n package org.graylog2.shared.messageq.kafka;\n \n-import com.google.common.base.Function;\n-import com.google.common.collect.Lists;\n import com.google.common.util.concurrent.AbstractService;\n-import org.graylog2.shared.journal.Journal;\n import org.graylog2.shared.journal.KafkaJournal;\n-import org.graylog2.shared.messageq.MessageQueue;\n import org.graylog2.shared.messageq.MessageQueueException;\n import org.graylog2.shared.messageq.MessageQueueReader;\n \n-import javax.annotation.Nullable;\n import javax.inject.Inject;\n-import java.util.ArrayList;\n import java.util.List;\n \n-import static com.google.common.collect.Lists.transform;\n-\n+// TODO this doesn't do anything but to please the interface. remove?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2019ee8378554555c133424a6cdc1bb53c65efb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Mzg1MjY4OnYy", "diffSide": "LEFT", "path": "graylog2-server/src/main/java/org/graylog2/shared/messageq/pulsar/PulsarMessageQueueEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzozMjoyM1rOH_RCpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzozMjoyM1rOH_RCpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEwMTU0Mw==", "bodyText": "Afaics the commitId can now not be null anymore, so we should also remove the @Nullable annotation from #commitId().", "url": "https://github.com/Graylog2/graylog2-server/pull/9693#discussion_r536101543", "createdAt": "2020-12-04T13:32:23Z", "author": {"login": "thll"}, "path": "graylog2-server/src/main/java/org/graylog2/shared/messageq/pulsar/PulsarMessageQueueEntry.java", "diffHunk": "@@ -43,15 +43,6 @@\n         this.timestamp = message.getEventTime();\n     }\n \n-    PulsarMessageQueueEntry(byte[] id, @Nullable byte[] key, byte[] value, long timestamp) {\n-        this.commitId = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2019ee8378554555c133424a6cdc1bb53c65efb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Mzk2MTMyOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/shared/buffers/JournallingMessageHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzo1Nzo0MFrOH_SAzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOTozNDo0OVrOIAdt8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjExNzQ1NQ==", "bodyText": "Do you think we still need the exception handling? If so, we should adjust the error message and re-add the filtering of null messages in #onEvent. I have the feeling we can just remove the exception handling though because we are not doing much which would be prone to throwing exceptions, except maybe a NPE in line 126 which we then probably should guard against.", "url": "https://github.com/Graylog2/graylog2-server/pull/9693#discussion_r536117455", "createdAt": "2020-12-04T13:57:40Z", "author": {"login": "thll"}, "path": "graylog2-server/src/main/java/org/graylog2/shared/buffers/JournallingMessageHandler.java", "diffHunk": "@@ -161,12 +132,7 @@ public DateTime getLatestReceiveTime() {\n                     latestReceiveTime = latestReceiveTime.isBefore(messageTimestamp) ? messageTimestamp : latestReceiveTime;\n                 }\n \n-                // clear for gc and to avoid promotion to tenured space\n-                input.setMessageIdBytes(null);\n-                input.setEncodedRawMessage(null);\n-                input.setMessageTimestamp(null);\n-                // convert to journal entry\n-                return journal.createEntry(messageIdBytes, encodedRawMessage);\n+                return input;\n             } catch (Exception e) {\n                 log.error(\"Unable to convert RawMessageEvent to Journal.Entry - skipping event\", e);\n                 return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2019ee8378554555c133424a6cdc1bb53c65efb"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM1NzgxMA==", "bodyText": "I agree. I've removed the try/catch.\nI think we don't need to handle a NPE in 126. If the RawMessageEncoder fails, we won't to this step in the disruptor chain.", "url": "https://github.com/Graylog2/graylog2-server/pull/9693#discussion_r537357810", "createdAt": "2020-12-07T09:34:49Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog2/shared/buffers/JournallingMessageHandler.java", "diffHunk": "@@ -161,12 +132,7 @@ public DateTime getLatestReceiveTime() {\n                     latestReceiveTime = latestReceiveTime.isBefore(messageTimestamp) ? messageTimestamp : latestReceiveTime;\n                 }\n \n-                // clear for gc and to avoid promotion to tenured space\n-                input.setMessageIdBytes(null);\n-                input.setEncodedRawMessage(null);\n-                input.setMessageTimestamp(null);\n-                // convert to journal entry\n-                return journal.createEntry(messageIdBytes, encodedRawMessage);\n+                return input;\n             } catch (Exception e) {\n                 log.error(\"Unable to convert RawMessageEvent to Journal.Entry - skipping event\", e);\n                 return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjExNzQ1NQ=="}, "originalCommit": {"oid": "f2019ee8378554555c133424a6cdc1bb53c65efb"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4334, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}