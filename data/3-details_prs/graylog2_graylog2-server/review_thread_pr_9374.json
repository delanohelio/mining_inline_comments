{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MTgxNDky", "number": 9374, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzoyMzowM1rOE1wrrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxODoxMzo1MVrOE2MFaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODA3NTk3OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/ldap/LDAPEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzoyMzowM1rOHuN6KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzoyMzowM1rOHuN6KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIyNDQyNA==", "bodyText": "See comment in LDAPUser.", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518224424", "createdAt": "2020-11-05T17:23:03Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/ldap/LDAPEntry.java", "diffHunk": "@@ -35,6 +35,8 @@\n \n     public abstract String base64UniqueId();\n \n+    public abstract ADUserAccountControl userAccountControl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODA4NDA5OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/ldap/LDAPUser.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzoyNTowM1rOHuN_bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDozMzoyNVrOHuootg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIyNTc3Mw==", "bodyText": "I don't think we should put AD specific code into the LDAPEntry and LDAPUser objects. How about using the AccountStatus instead? That makes it independent from AD. We could extract the AccountStatus into a separate enum out of the User interface to make it a bit more generic.\nWhat do you think?\nI also think we should only have an accountStatus() method in LDAPUser instead of also putting it into the LDAPEntry object. The LDAPEntry object is supposed to be generic. We can move the userAccountControl parsing into the createLDAPUser() method in UnboundLDAPConnector.", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518225773", "createdAt": "2020-11-05T17:25:03Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/ldap/LDAPUser.java", "diffHunk": "@@ -22,6 +22,8 @@\n public abstract class LDAPUser {\n     public abstract String base64UniqueId();\n \n+    public abstract ADUserAccountControl userAccountControl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYyMTQyNQ==", "bodyText": "I could remove it from LDAPEntry, because it would be still accessible within the attributes map.\nBut I'm not sure about using AccountStatus for that. A simple enum cannot reflect the userAccountControl flags.", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518621425", "createdAt": "2020-11-06T09:21:20Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/ldap/LDAPUser.java", "diffHunk": "@@ -22,6 +22,8 @@\n public abstract class LDAPUser {\n     public abstract String base64UniqueId();\n \n+    public abstract ADUserAccountControl userAccountControl();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIyNTc3Mw=="}, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYyNTgzNw==", "bodyText": "Ah, right. But do we need all the flags? We are only interested in the the account status here, no?", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518625837", "createdAt": "2020-11-06T09:28:34Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/ldap/LDAPUser.java", "diffHunk": "@@ -22,6 +22,8 @@\n public abstract class LDAPUser {\n     public abstract String base64UniqueId();\n \n+    public abstract ADUserAccountControl userAccountControl();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIyNTc3Mw=="}, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NDU0OA==", "bodyText": "If we want to display them in the test result.\nI don't see any other way right now :-/", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518644548", "createdAt": "2020-11-06T10:00:47Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/ldap/LDAPUser.java", "diffHunk": "@@ -22,6 +22,8 @@\n public abstract class LDAPUser {\n     public abstract String base64UniqueId();\n \n+    public abstract ADUserAccountControl userAccountControl();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIyNTc3Mw=="}, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0OTE4NA==", "bodyText": "Okay, if it's just for the test result I am fine with leaving the flags out. \ud83d\ude04 We can still show if a user is enabled/disabled in the test result.", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518649184", "createdAt": "2020-11-06T10:09:04Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/ldap/LDAPUser.java", "diffHunk": "@@ -22,6 +22,8 @@\n public abstract class LDAPUser {\n     public abstract String base64UniqueId();\n \n+    public abstract ADUserAccountControl userAccountControl();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIyNTc3Mw=="}, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY2MjMyNg==", "bodyText": "ok. \ud83d\uddd1\ufe0f", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518662326", "createdAt": "2020-11-06T10:33:25Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/ldap/LDAPUser.java", "diffHunk": "@@ -22,6 +22,8 @@\n public abstract class LDAPUser {\n     public abstract String base64UniqueId();\n \n+    public abstract ADUserAccountControl userAccountControl();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIyNTc3Mw=="}, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODE4NTg3OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzo0NTo1MlrOHuPA2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOToyMTozN1rOHumJjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI0MjUyMQ==", "bodyText": "How about only putting in the userAccountControl attribute as key and then all values as named flags?\n\"userAccountControl\": \"ACCOUNTDISABLED|NORMAL_ACCOUNT|PASSWORD_EXPIRED\"\n\nI think that would make it a bit clearer to AD admins. account_disabled, normal_user_account and password_expired are not really AD attributes.", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518242521", "createdAt": "2020-11-05T17:45:52Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java", "diffHunk": "@@ -257,13 +258,17 @@ private ADAuthServiceBackendConfig buildTestConfig(@Nullable AuthServiceBackendD\n                 .put(\"login_success\", loginSuccess);\n \n         if (user != null) {\n-            userDetails.put(\"user_details\", ImmutableMap.of(\n-                    \"dn\", user.dn(),\n-                    AD_OBJECT_GUID, user.base64UniqueId(),\n-                    config.userNameAttribute(), user.username(),\n-                    config.userFullNameAttribute(), user.fullName(),\n-                    \"email\", user.email()\n-            ));\n+            userDetails.put(\"user_details\", ImmutableMap.<String, String>builder()\n+                    .put(\"dn\", user.dn())\n+                    .put(\"account_disabled\", String.valueOf(user.userAccountControl().accountIsDisabled()))\n+                    .put(\"normal_user_account\", String.valueOf(user.userAccountControl().isUserAccount()))\n+                    .put(\"password_expired\", String.valueOf(user.userAccountControl().passwordExpired()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYyMTU4MQ==", "bodyText": "sure, I can do that.", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518621581", "createdAt": "2020-11-06T09:21:37Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java", "diffHunk": "@@ -257,13 +258,17 @@ private ADAuthServiceBackendConfig buildTestConfig(@Nullable AuthServiceBackendD\n                 .put(\"login_success\", loginSuccess);\n \n         if (user != null) {\n-            userDetails.put(\"user_details\", ImmutableMap.of(\n-                    \"dn\", user.dn(),\n-                    AD_OBJECT_GUID, user.base64UniqueId(),\n-                    config.userNameAttribute(), user.username(),\n-                    config.userFullNameAttribute(), user.fullName(),\n-                    \"email\", user.email()\n-            ));\n+            userDetails.put(\"user_details\", ImmutableMap.<String, String>builder()\n+                    .put(\"dn\", user.dn())\n+                    .put(\"account_disabled\", String.valueOf(user.userAccountControl().accountIsDisabled()))\n+                    .put(\"normal_user_account\", String.valueOf(user.userAccountControl().isUserAccount()))\n+                    .put(\"password_expired\", String.valueOf(user.userAccountControl().passwordExpired()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI0MjUyMQ=="}, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODE5NDMwOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackend.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzo0Nzo1NVrOHuPGYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMToxODowOVrOHuqKLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI0MzkzNg==", "bodyText": "Can you please add a comment about why we first provision and then authenticate?", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518243936", "createdAt": "2020-11-05T17:47:55Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackend.java", "diffHunk": "@@ -77,23 +77,24 @@ public LDAPAuthServiceBackend(UnboundLDAPConnector ldapConnector,\n \n             final LDAPUser userEntry = optionalUser.get();\n \n-            if (!authCredentials.isAuthenticated()) {\n-                if (!isAuthenticated(connection, userEntry, authCredentials)) {\n-                    LOG.debug(\"Invalid credentials for user <{}> (DN: {})\", authCredentials.username(), userEntry.dn());\n-                    return Optional.empty();\n-                }\n-            }\n-\n             final UserDetails userDetails = provisionerService.provision(provisionerService.newDetails(this)\n                     .authServiceType(backendType())\n                     .authServiceId(backendId())\n+                    .accountIsEnabled(true)\n                     .base64AuthServiceUid(userEntry.base64UniqueId())\n                     .username(userEntry.username())\n                     .fullName(userEntry.fullName())\n                     .email(userEntry.email())\n                     .defaultRoles(backend.defaultRoles())\n                     .build());\n \n+            if (!authCredentials.isAuthenticated()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY4NzI3OQ==", "bodyText": "I've changed my mind about changing this. We'll have to refactor this at some point anyhow.\nI'm leaving this untouched, as this is too close to release", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518687279", "createdAt": "2020-11-06T11:18:09Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackend.java", "diffHunk": "@@ -77,23 +77,24 @@ public LDAPAuthServiceBackend(UnboundLDAPConnector ldapConnector,\n \n             final LDAPUser userEntry = optionalUser.get();\n \n-            if (!authCredentials.isAuthenticated()) {\n-                if (!isAuthenticated(connection, userEntry, authCredentials)) {\n-                    LOG.debug(\"Invalid credentials for user <{}> (DN: {})\", authCredentials.username(), userEntry.dn());\n-                    return Optional.empty();\n-                }\n-            }\n-\n             final UserDetails userDetails = provisionerService.provision(provisionerService.newDetails(this)\n                     .authServiceType(backendType())\n                     .authServiceId(backendId())\n+                    .accountIsEnabled(true)\n                     .base64AuthServiceUid(userEntry.base64UniqueId())\n                     .username(userEntry.username())\n                     .fullName(userEntry.fullName())\n                     .email(userEntry.email())\n                     .defaultRoles(backend.defaultRoles())\n                     .build());\n \n+            if (!authCredentials.isAuthenticated()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI0MzkzNg=="}, "originalCommit": {"oid": "71425e8349ab1a35349124229861a06d02c375fb"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MjQ4ODE3OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNzo1MDozMFrOHu3u8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNzo1MDozMFrOHu3u8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkwOTY4Mg==", "bodyText": "Let's add a @NonBlank annotation here to make sure we always have a non-empty string.", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518909682", "createdAt": "2020-11-06T17:50:30Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java", "diffHunk": "@@ -546,6 +547,28 @@ public void changePassword(\n         }\n     }\n \n+    @PUT\n+    @Path(\"{userId}/status/{newStatus}\")\n+    @Consumes(MediaType.WILDCARD)\n+    @ApiOperation(\"Update the account status for a user\")\n+    @AuditEvent(type = AuditEventTypes.USER_UPDATE)\n+    public Response updateAccountStatus(\n+            @ApiParam(name = \"userId\", value = \"The id of the user whose status to change.\", required = true) @PathParam(\"userId\") String userId,\n+            @ApiParam(name = \"newStatus\", value = \"The account status to be set\", required = true,\n+                    defaultValue = \"enabled\", allowableValues = \"enabled,disabled,deleted\")\n+            @PathParam(\"newStatus\") String newStatus) throws ValidationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c8448581cf7fb291c812841461a24ecbd729d58"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MjQ5Mjg0OnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNzo1MTo0NlrOHu3xxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNzo1MTo0NlrOHu3xxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkxMDQwNw==", "bodyText": "How about moving the save() here? That way to don't touch the database object if nothing would change. (and prevent potential race conditions)", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518910407", "createdAt": "2020-11-06T17:51:46Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java", "diffHunk": "@@ -546,6 +547,28 @@ public void changePassword(\n         }\n     }\n \n+    @PUT\n+    @Path(\"{userId}/status/{newStatus}\")\n+    @Consumes(MediaType.WILDCARD)\n+    @ApiOperation(\"Update the account status for a user\")\n+    @AuditEvent(type = AuditEventTypes.USER_UPDATE)\n+    public Response updateAccountStatus(\n+            @ApiParam(name = \"userId\", value = \"The id of the user whose status to change.\", required = true) @PathParam(\"userId\") String userId,\n+            @ApiParam(name = \"newStatus\", value = \"The account status to be set\", required = true,\n+                    defaultValue = \"enabled\", allowableValues = \"enabled,disabled,deleted\")\n+            @PathParam(\"newStatus\") String newStatus) throws ValidationException {\n+\n+        final User user = loadUserById(userId);\n+        final User.AccountStatus oldStatus = user.getAccountStatus();\n+        user.setAccountStatus(User.AccountStatus.valueOf(newStatus.toUpperCase(Locale.US)));\n+        userService.save(user);\n+\n+        if (oldStatus.equals(user.getAccountStatus())) {\n+            return Response.notModified().build();\n+        }\n+        return Response.ok().build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c8448581cf7fb291c812841461a24ecbd729d58"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MjU2NTUzOnYy", "diffSide": "RIGHT", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxODoxMzo1MVrOHu4elw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNDo1N1rOHvmCTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkyMTg3OQ==", "bodyText": "How about moving this up in front of the if (!authCredentials.isAuthenticated()) { line? That way we get the warning when a disabled user tries to log in. Otherwise we will never see the warning because the authentication doesn't work.\ndiff --git graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java\nindex 17ac8a96a0..71a44266c5 100644\n--- graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java\n+++ graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java\n@@ -92,16 +92,16 @@ public class ADAuthServiceBackend implements AuthServiceBackend {\n \n             final LDAPUser userEntry = optionalUser.get();\n \n+            if (!userEntry.accountIsEnabled()) {\n+                LOG.warn(\"Account disabled within Active Directory for user <{}> (DN: {})\", authCredentials.username(), userEntry.dn());\n+                return Optional.empty();\n+            }\n             if (!authCredentials.isAuthenticated()) {\n                 if (!isAuthenticated(connection, userEntry, authCredentials)) {\n                     LOG.debug(\"Invalid credentials for user <{}> (DN: {})\", authCredentials.username(), userEntry.dn());\n                     return Optional.empty();\n                 }\n             }\n-            if (!userEntry.accountIsEnabled()) {\n-                LOG.warn(\"Account disabled within Active Directory for user <{}> (DN: {})\", authCredentials.username(), userEntry.dn());\n-                return Optional.empty();\n-            }\n \n             final UserDetails userDetails = provisionerService.provision(provisionerService.newDetails(this)\n                     .authServiceType(backendType())", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r518921879", "createdAt": "2020-11-06T18:13:51Z", "author": {"login": "bernd"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java", "diffHunk": "@@ -98,12 +98,17 @@ public ADAuthServiceBackend(UnboundLDAPConnector ldapConnector,\n                     return Optional.empty();\n                 }\n             }\n+            if (!userEntry.accountIsEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c8448581cf7fb291c812841461a24ecbd729d58"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY2ODMwMA==", "bodyText": "sure. makes sense", "url": "https://github.com/Graylog2/graylog2-server/pull/9374#discussion_r519668300", "createdAt": "2020-11-09T09:34:57Z", "author": {"login": "mpfz0r"}, "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java", "diffHunk": "@@ -98,12 +98,17 @@ public ADAuthServiceBackend(UnboundLDAPConnector ldapConnector,\n                     return Optional.empty();\n                 }\n             }\n+            if (!userEntry.accountIsEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkyMTg3OQ=="}, "originalCommit": {"oid": "7c8448581cf7fb291c812841461a24ecbd729d58"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4403, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}