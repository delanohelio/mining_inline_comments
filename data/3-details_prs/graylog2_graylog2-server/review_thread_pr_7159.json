{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMTI1ODM4", "number": 7159, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo0NzoxN1rODXhn_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo1MjoxOFrODXhuLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTk0NzUwOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/Select.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo0NzoxN1rOFc3Xgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo0NzoxN1rOFc3Xgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxMTU4Ng==", "bodyText": "Would it make sense to implement useMemo for this function call as well?", "url": "https://github.com/Graylog2/graylog2-server/pull/7159#discussion_r365811586", "createdAt": "2020-01-13T13:47:17Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/Select.jsx", "diffHunk": "@@ -62,9 +99,10 @@ const Select = ({ components, styles, ...rest }: Props) => {\n     multiValueLabel,\n     multiValueRemove,\n     valueContainer,\n+    menu: menu(selectRef),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ee1dc231ec287ae559bfff6b793389fd4e1d19"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTk1Njc2OnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/Select.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo1MDowMlrOFc3c7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwOTo0OTowMlrOFfYmSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxMjk3Mw==", "bodyText": "Should I make this min width optional?\nRight now I could not find a use case where the min width of 200px is not suitable.", "url": "https://github.com/Graylog2/graylog2-server/pull/7159#discussion_r365812973", "createdAt": "2020-01-13T13:50:02Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/Select.jsx", "diffHunk": "@@ -11,6 +14,20 @@ const MultiValueRemove = (props) => {\n   );\n };\n \n+const OverlayInner = ({ children, style }: {children: Node, style?: Object}) => React.Children.map(children,\n+  child => React.cloneElement(child, { style: Object.assign({}, style, child.props.style) }));\n+\n+const menu = (selectRef) => {\n+  const defaultMinWidth = 200;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ee1dc231ec287ae559bfff6b793389fd4e1d19"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1MzE5NA==", "bodyText": "I think it is fine that way. I would wait for the need.", "url": "https://github.com/Graylog2/graylog2-server/pull/7159#discussion_r368453194", "createdAt": "2020-01-20T09:49:02Z", "author": {"login": "kmerz"}, "path": "graylog2-web-interface/src/views/components/Select.jsx", "diffHunk": "@@ -11,6 +14,20 @@ const MultiValueRemove = (props) => {\n   );\n };\n \n+const OverlayInner = ({ children, style }: {children: Node, style?: Object}) => React.Children.map(children,\n+  child => React.cloneElement(child, { style: Object.assign({}, style, child.props.style) }));\n+\n+const menu = (selectRef) => {\n+  const defaultMinWidth = 200;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxMjk3Mw=="}, "originalCommit": {"oid": "d4ee1dc231ec287ae559bfff6b793389fd4e1d19"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTk2MzMzOnYy", "diffSide": "RIGHT", "path": "graylog2-web-interface/src/views/components/Select.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo1MjoxOFrOFc3hCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNzo0ODoyOFrOFc_MEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNDAyNQ==", "bodyText": "With this implementation we are defining the width without a unit. The px info gets added automatically. Do you prefer adding px manually with a template string, to be more explicit?", "url": "https://github.com/Graylog2/graylog2-server/pull/7159#discussion_r365814025", "createdAt": "2020-01-13T13:52:18Z", "author": {"login": "linuspahl"}, "path": "graylog2-web-interface/src/views/components/Select.jsx", "diffHunk": "@@ -11,6 +14,20 @@ const MultiValueRemove = (props) => {\n   );\n };\n \n+const OverlayInner = ({ children, style }: {children: Node, style?: Object}) => React.Children.map(children,\n+  child => React.cloneElement(child, { style: Object.assign({}, style, child.props.style) }));\n+\n+const menu = (selectRef) => {\n+  const defaultMinWidth = 200;\n+  const containerWidth = get(selectRef, 'current.select.controlRef.offsetWidth');\n+  const width = containerWidth > defaultMinWidth ? containerWidth : defaultMinWidth;\n+  return base => ({\n+    ...base,\n+    position: 'relative',\n+    width,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ee1dc231ec287ae559bfff6b793389fd4e1d19"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkzOTczMA==", "bodyText": "I think being explicit with the width is a good thing 50 does not tell me what width it will be... is that px, vw, em, etc", "url": "https://github.com/Graylog2/graylog2-server/pull/7159#discussion_r365939730", "createdAt": "2020-01-13T17:48:28Z", "author": {"login": "kyleknighted"}, "path": "graylog2-web-interface/src/views/components/Select.jsx", "diffHunk": "@@ -11,6 +14,20 @@ const MultiValueRemove = (props) => {\n   );\n };\n \n+const OverlayInner = ({ children, style }: {children: Node, style?: Object}) => React.Children.map(children,\n+  child => React.cloneElement(child, { style: Object.assign({}, style, child.props.style) }));\n+\n+const menu = (selectRef) => {\n+  const defaultMinWidth = 200;\n+  const containerWidth = get(selectRef, 'current.select.controlRef.offsetWidth');\n+  const width = containerWidth > defaultMinWidth ? containerWidth : defaultMinWidth;\n+  return base => ({\n+    ...base,\n+    position: 'relative',\n+    width,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNDAyNQ=="}, "originalCommit": {"oid": "d4ee1dc231ec287ae559bfff6b793389fd4e1d19"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4010, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}