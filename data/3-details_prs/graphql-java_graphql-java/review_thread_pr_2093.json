{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NDEwNjE5", "number": 2093, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDoyOTo0M1rOE0nRUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDoyOTo0M1rOE0nRUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjA0ODE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/execution/ValueUnboxer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDoyOTo0M1rOHscIWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDoyOTo0M1rOHscIWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM2MDI4MQ==", "bodyText": "just some better javadoc", "url": "https://github.com/graphql-java/graphql-java/pull/2093#discussion_r516360281", "createdAt": "2020-11-03T00:29:43Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/execution/ValueUnboxer.java", "diffHunk": "@@ -2,9 +2,17 @@\n \n import graphql.PublicSpi;\n \n+/**\n+ * A value unboxer takes values that are wrapped in classes like {@link java.util.Optional} / {@link java.util.OptionalInt} etc..\n+ * and returns value from them.  You can provide your own implementation if you have your own specific\n+ * holder classes.\n+ */\n @PublicSpi\n public interface ValueUnboxer {\n \n+    /**\n+     * The default value unboxer handles JDK classes such as {@link java.util.Optional} and {@link java.util.OptionalInt} etc..\n+     */\n     ValueUnboxer DEFAULT = new DefaultValueUnboxer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9f982145499727fa1da95a7834ad7a148d4b754"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4506, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}