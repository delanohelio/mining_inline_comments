{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjI5NjIx", "number": 1783, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMzoyNTo1NlrODdhGZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMTo1MzowN1rODdiouQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjc3NjA3OnYy", "diffSide": "RIGHT", "path": "src/test/groovy/graphql/parser/ParserTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMzoyNTo1NlrOFmKs9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMzozMDo1N1rOFmKzaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU2NTU1Ng==", "bodyText": "please make sure that source location is also set", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375565556", "createdAt": "2020-02-05T23:25:56Z", "author": {"login": "andimarek"}, "path": "src/test/groovy/graphql/parser/ParserTest.groovy", "diffHunk": "@@ -516,17 +516,18 @@ class ParserTest extends Specification {\n     }\n \n \n-    def \"parses null value\"() {\n+    def \"parses null values\"() {\n         given:\n-        def input = \"{ foo(bar: null) }\"\n+        def input = \"{ foo(bar: null, bell : null) }\"\n \n         when:\n         def document = new Parser().parseDocument(input)\n         def operation = document.definitions[0] as OperationDefinition\n         def selection = operation.selectionSet.selections[0] as Field\n \n         then:\n-        selection.arguments[0].value == NullValue.Null\n+        assert selection.arguments[0].value instanceof NullValue", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42962cd9b6729d29e61026d9db34c74cf6c92060"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU2NzIxMQ==", "bodyText": "The constant has been deleted - see changes to NullValue file.\nWhat do you mean by source location is set?", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375567211", "createdAt": "2020-02-05T23:30:57Z", "author": {"login": "simeonleatherland"}, "path": "src/test/groovy/graphql/parser/ParserTest.groovy", "diffHunk": "@@ -516,17 +516,18 @@ class ParserTest extends Specification {\n     }\n \n \n-    def \"parses null value\"() {\n+    def \"parses null values\"() {\n         given:\n-        def input = \"{ foo(bar: null) }\"\n+        def input = \"{ foo(bar: null, bell : null) }\"\n \n         when:\n         def document = new Parser().parseDocument(input)\n         def operation = document.definitions[0] as OperationDefinition\n         def selection = operation.selectionSet.selections[0] as Field\n \n         then:\n-        selection.arguments[0].value == NullValue.Null\n+        assert selection.arguments[0].value instanceof NullValue", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU2NTU1Ng=="}, "originalCommit": {"oid": "42962cd9b6729d29e61026d9db34c74cf6c92060"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzAyNjY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/parser/GraphqlAntlrToLanguage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMTo1MjoyNFrOFmNGNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMTo1MjoyNFrOFmNGNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNDc4OA==", "bodyText": "I don't thing this is correct: we need to record the source location, ?", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375604788", "createdAt": "2020-02-06T01:52:24Z", "author": {"login": "andimarek"}, "path": "src/main/java/graphql/parser/GraphqlAntlrToLanguage.java", "diffHunk": "@@ -716,7 +716,7 @@ protected Value createValue(GraphqlParser.ValueContext ctx) {\n             addCommonData(booleanValue, ctx);\n             return booleanValue.build();\n         } else if (ctx.NullValue() != null) {\n-            return Null;\n+            return NullValue.newNullValue().build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baaac04cf2e340386ac12c63ad594aa6d0cb177f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzAyNzc3OnYy", "diffSide": "RIGHT", "path": "src/test/groovy/graphql/parser/ParserTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMTo1MzowN1rOFmNG1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMzozMToxOVrOFnXriA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNDk1MQ==", "bodyText": "don't use assert: spock just takes a == b\nalso: this is the right test, yes, but not sure how this works, see the other comment above", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375604951", "createdAt": "2020-02-06T01:53:07Z", "author": {"login": "andimarek"}, "path": "src/test/groovy/graphql/parser/ParserTest.groovy", "diffHunk": "@@ -516,17 +516,21 @@ class ParserTest extends Specification {\n     }\n \n \n-    def \"parses null value\"() {\n+    def \"parses null values\"() {\n         given:\n-        def input = \"{ foo(bar: null) }\"\n+        def input = \"{ foo(bar: null, bell : null) }\"\n \n         when:\n         def document = new Parser().parseDocument(input)\n         def operation = document.definitions[0] as OperationDefinition\n         def selection = operation.selectionSet.selections[0] as Field\n \n         then:\n-        selection.arguments[0].value == NullValue.Null\n+        assert selection.arguments[0].value instanceof NullValue\n+        assert selection.arguments[1].value instanceof NullValue\n+\n+        assert selection.arguments[0].sourceLocation.toString() == \"SourceLocation{line=1, column=7}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baaac04cf2e340386ac12c63ad594aa6d0cb177f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyNjc2MA==", "bodyText": "Spock will fail a test when any statement in the then: block is non true\nSo selection.arguments[0].value instanceof NullValue is a valid statement - no need for assert\nAssert is needed if you create a common method that you call in a test eg\n\nwhen:\n     someCommonMethos(value)\n\ndef someCommonMethod(value) {\n    assert value != null\n    assert value instanceof Foo\n    return true\n}", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r376826760", "createdAt": "2020-02-09T23:31:19Z", "author": {"login": "bbakerman"}, "path": "src/test/groovy/graphql/parser/ParserTest.groovy", "diffHunk": "@@ -516,17 +516,21 @@ class ParserTest extends Specification {\n     }\n \n \n-    def \"parses null value\"() {\n+    def \"parses null values\"() {\n         given:\n-        def input = \"{ foo(bar: null) }\"\n+        def input = \"{ foo(bar: null, bell : null) }\"\n \n         when:\n         def document = new Parser().parseDocument(input)\n         def operation = document.definitions[0] as OperationDefinition\n         def selection = operation.selectionSet.selections[0] as Field\n \n         then:\n-        selection.arguments[0].value == NullValue.Null\n+        assert selection.arguments[0].value instanceof NullValue\n+        assert selection.arguments[1].value instanceof NullValue\n+\n+        assert selection.arguments[0].sourceLocation.toString() == \"SourceLocation{line=1, column=7}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNDk1MQ=="}, "originalCommit": {"oid": "baaac04cf2e340386ac12c63ad594aa6d0cb177f"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4591, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}