{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNjkwMjU2", "number": 2022, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNDozNDozNFrOEgxv9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNDozNDozNFrOEgxv9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODA0OTgyOnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/execution/Async.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNDozNDozNFrOHNv4IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjoyNDowM1rOHN9aWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE3Nzk1Mw==", "bodyText": "Change futures.toArray(new CompletableFuture[0])\nto futures.toArray(new CompletableFuture[futures.size()]) will be more efficient, since this will avoid create a new array object.\ntoArray() in ArrayList:\n    public <T> T[] toArray(T[] a) {\n        if (a.length < size)\n            // Make a new array of a's runtime type, but my contents:\n            return (T[]) Arrays.copyOf(elementData, size, a.getClass());\n        System.arraycopy(elementData, 0, a, 0, size);\n        if (a.length > size)\n            a[size] = null;\n        return a;\n    }", "url": "https://github.com/graphql-java/graphql-java/pull/2022#discussion_r484177953", "createdAt": "2020-09-07T04:34:34Z", "author": {"login": "dugenkui03"}, "path": "src/main/java/graphql/execution/Async.java", "diffHunk": "@@ -26,15 +26,17 @@\n     public static <U> CompletableFuture<List<U>> each(List<CompletableFuture<U>> futures) {\n         CompletableFuture<List<U>> overallResult = new CompletableFuture<>();\n \n+        @SuppressWarnings(\"unchecked\")\n+        CompletableFuture<U>[] arrayOfFutures = futures.toArray(new CompletableFuture[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bae41b79f06985194d2ab374306f93f1b4d08c1d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM5OTcwNQ==", "bodyText": "Actually see : https://shipilev.net/blog/2016/arrays-wisdom-ancients/", "url": "https://github.com/graphql-java/graphql-java/pull/2022#discussion_r484399705", "createdAt": "2020-09-07T12:24:03Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/execution/Async.java", "diffHunk": "@@ -26,15 +26,17 @@\n     public static <U> CompletableFuture<List<U>> each(List<CompletableFuture<U>> futures) {\n         CompletableFuture<List<U>> overallResult = new CompletableFuture<>();\n \n+        @SuppressWarnings(\"unchecked\")\n+        CompletableFuture<U>[] arrayOfFutures = futures.toArray(new CompletableFuture[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE3Nzk1Mw=="}, "originalCommit": {"oid": "bae41b79f06985194d2ab374306f93f1b4d08c1d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4545, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}