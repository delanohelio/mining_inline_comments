{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4Njg5NTM3", "number": 1779, "title": "Issue #1768 ExecutionInput: allow to set value a top level", "bodyText": "Here's the push request it's a proposal for the issue #1768", "createdAt": "2020-01-29T17:54:18Z", "url": "https://github.com/graphql-java/graphql-java/pull/1779", "merged": true, "mergeCommit": {"oid": "427f4933d0d6cf0e5d074582fb4439960b868a40"}, "closed": true, "closedAt": "2020-05-21T05:18:03Z", "author": {"login": "dimdimych"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_JutDgH2gAyMzY4Njg5NTM3OjUxYWI3ZTMyODkyZjgyN2FmZmEwNDc5ODdiNzRhODA4ZWI5MDAzMGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjWqo7gFqTQxNTg4NDA4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "51ab7e32892f827affa047987b74a808eb90030e", "author": {"user": {"login": "dimdimych", "name": "Dmitry Kudryavtsev"}}, "url": "https://github.com/graphql-java/graphql-java/commit/51ab7e32892f827affa047987b74a808eb90030e", "committedDate": "2020-01-29T17:52:19Z", "message": "ExecutionInput: allow to set value a top level"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04982cc3966223d4cbb6d7888ab943664a0818f0", "author": {"user": {"login": "dimdimych", "name": "Dmitry Kudryavtsev"}}, "url": "https://github.com/graphql-java/graphql-java/commit/04982cc3966223d4cbb6d7888ab943664a0818f0", "committedDate": "2020-01-31T18:08:38Z", "message": "ExecutionInput: fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTg5NzE2", "url": "https://github.com/graphql-java/graphql-java/pull/1779#pullrequestreview-351989716", "createdAt": "2020-02-03T01:47:56Z", "commit": {"oid": "04982cc3966223d4cbb6d7888ab943664a0818f0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTo0Nzo1NlrOFkk0vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTo0ODoxMFrOFkk05g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5NjM4MQ==", "bodyText": "can you remove the reference to the issue number? thanks", "url": "https://github.com/graphql-java/graphql-java/pull/1779#discussion_r373896381", "createdAt": "2020-02-03T01:47:56Z", "author": {"login": "andimarek"}, "path": "src/test/groovy/graphql/Issue1768.groovy", "diffHunk": "@@ -0,0 +1,81 @@\n+package graphql\n+\n+import graphql.schema.DataFetcher\n+import graphql.schema.GraphQLObjectType\n+import graphql.schema.GraphQLSchema\n+import graphql.schema.GraphQLSchemaElement\n+import graphql.schema.GraphQLTypeVisitorStub\n+import graphql.schema.SchemaTransformer\n+import graphql.schema.idl.NaturalEnumValuesProvider\n+import graphql.util.TraversalControl\n+import graphql.util.TraverserContext\n+import graphql.util.TreeTransformerUtil\n+import spock.lang.Specification\n+\n+import static graphql.schema.idl.RuntimeWiring.newRuntimeWiring\n+import static graphql.schema.idl.TypeRuntimeWiring.newTypeWiring\n+\n+class Issue1768 extends Specification {\n+\n+    static enum ThreadSort {\n+        NEWEST_FIRST,\n+        OLDEST_FIRST,\n+        MOST_COMMENTS_FIRST\n+    }\n+\n+    def \"#1768 check if the old behavior is not broken\" () {\n+        def spec = '''\n+            type Query {\n+                dummy: String                \n+            }\n+            '''\n+        GraphQL graphql = TestUtil.graphQL(spec, [Query: [dummy: (DataFetcher<String>) { null }]]).build()\n+\n+        when:\n+        ExecutionResult result = graphql.execute {\n+            it.query(\" { dummy } \")\n+        }\n+\n+        then:\n+        result.data.dummy == null\n+\n+    }\n+    def \"#1768 test if local context is set for top level\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04982cc3966223d4cbb6d7888ab943664a0818f0"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5NjQyMg==", "bodyText": "same here, please remove the reference to the issue", "url": "https://github.com/graphql-java/graphql-java/pull/1779#discussion_r373896422", "createdAt": "2020-02-03T01:48:10Z", "author": {"login": "andimarek"}, "path": "src/test/groovy/graphql/Issue1768.groovy", "diffHunk": "@@ -0,0 +1,81 @@\n+package graphql\n+\n+import graphql.schema.DataFetcher\n+import graphql.schema.GraphQLObjectType\n+import graphql.schema.GraphQLSchema\n+import graphql.schema.GraphQLSchemaElement\n+import graphql.schema.GraphQLTypeVisitorStub\n+import graphql.schema.SchemaTransformer\n+import graphql.schema.idl.NaturalEnumValuesProvider\n+import graphql.util.TraversalControl\n+import graphql.util.TraverserContext\n+import graphql.util.TreeTransformerUtil\n+import spock.lang.Specification\n+\n+import static graphql.schema.idl.RuntimeWiring.newRuntimeWiring\n+import static graphql.schema.idl.TypeRuntimeWiring.newTypeWiring\n+\n+class Issue1768 extends Specification {\n+\n+    static enum ThreadSort {\n+        NEWEST_FIRST,\n+        OLDEST_FIRST,\n+        MOST_COMMENTS_FIRST\n+    }\n+\n+    def \"#1768 check if the old behavior is not broken\" () {\n+        def spec = '''\n+            type Query {\n+                dummy: String                \n+            }\n+            '''\n+        GraphQL graphql = TestUtil.graphQL(spec, [Query: [dummy: (DataFetcher<String>) { null }]]).build()\n+\n+        when:\n+        ExecutionResult result = graphql.execute {\n+            it.query(\" { dummy } \")\n+        }\n+\n+        then:\n+        result.data.dummy == null\n+\n+    }\n+    def \"#1768 test if local context is set for top level\"() {\n+        def spec = '''\n+            type Query {\n+                dummy: String                \n+            }\n+            '''\n+        GraphQL graphql = TestUtil.graphQL(spec, [Query: [dummy: (DataFetcher<String>) { (String) it.localContext }]]).build()\n+\n+        when:\n+        ExecutionResult result = graphql.execute {\n+            it.localContext(\"test\").query(\" { dummy } \")\n+        }\n+\n+        then:\n+        result.data.dummy == \"test\"\n+    }\n+    def \"#1768 test if the top local context gets transferred to the next level\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04982cc3966223d4cbb6d7888ab943664a0818f0"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1ODg0MDgz", "url": "https://github.com/graphql-java/graphql-java/pull/1779#pullrequestreview-415884083", "createdAt": "2020-05-21T05:17:56Z", "commit": {"oid": "04982cc3966223d4cbb6d7888ab943664a0818f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4398, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}