{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NDEwNjE5", "number": 2093, "title": "Makes a default data fetcher exception handler possible", "bodyText": "This allows consumers to put ina  default data fetching exception handler more easily and after 2 years as deprecated we have removed the direct constructors on the GraphQL object", "createdAt": "2020-11-03T00:28:32Z", "url": "https://github.com/graphql-java/graphql-java/pull/2093", "merged": true, "mergeCommit": {"oid": "4213a3034aa18edc36207753ea274c3824593e1b"}, "closed": true, "closedAt": "2020-11-10T09:34:22Z", "author": {"login": "bbakerman"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYuAbTgH2gAyNTE0NDEwNjE5OmY5Zjk4MjE0NTQ5OTcyN2ZhMWRhOTVhNzgzNGFkN2ExNDhkNGI3NTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYzyClAFqTUyMjIyODU0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9f982145499727fa1da95a7834ad7a148d4b754", "author": {"user": {"login": "bbakerman", "name": "Brad Baker"}}, "url": "https://github.com/graphql-java/graphql-java/commit/f9f982145499727fa1da95a7834ad7a148d4b754", "committedDate": "2020-11-03T00:27:31Z", "message": "Makes a default data fetcher exception handler possible"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTI1NDU4", "url": "https://github.com/graphql-java/graphql-java/pull/2093#pullrequestreview-522125458", "createdAt": "2020-11-03T00:29:43Z", "commit": {"oid": "f9f982145499727fa1da95a7834ad7a148d4b754"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDoyOTo0M1rOHscIWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDoyOTo0M1rOHscIWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM2MDI4MQ==", "bodyText": "just some better javadoc", "url": "https://github.com/graphql-java/graphql-java/pull/2093#discussion_r516360281", "createdAt": "2020-11-03T00:29:43Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/execution/ValueUnboxer.java", "diffHunk": "@@ -2,9 +2,17 @@\n \n import graphql.PublicSpi;\n \n+/**\n+ * A value unboxer takes values that are wrapped in classes like {@link java.util.Optional} / {@link java.util.OptionalInt} etc..\n+ * and returns value from them.  You can provide your own implementation if you have your own specific\n+ * holder classes.\n+ */\n @PublicSpi\n public interface ValueUnboxer {\n \n+    /**\n+     * The default value unboxer handles JDK classes such as {@link java.util.Optional} and {@link java.util.OptionalInt} etc..\n+     */\n     ValueUnboxer DEFAULT = new DefaultValueUnboxer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9f982145499727fa1da95a7834ad7a148d4b754"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMjI4NTQ4", "url": "https://github.com/graphql-java/graphql-java/pull/2093#pullrequestreview-522228548", "createdAt": "2020-11-03T07:11:14Z", "commit": {"oid": "f9f982145499727fa1da95a7834ad7a148d4b754"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4299, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}