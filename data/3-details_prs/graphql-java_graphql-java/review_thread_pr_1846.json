{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4Mzc3Njgw", "number": 1846, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNzoxMjo0NFrODuqhBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1OTo1OFrODvp7oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjU3NjY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/schema/FieldCoordinates.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNzoxMjo0NFrOGAvzSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNzoxMzozMlrOGAvzgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQzNjM2MA==", "bodyText": "As discussed - pleake make this private (and hence no need for the javadoc)", "url": "https://github.com/graphql-java/graphql-java/pull/1846#discussion_r403436360", "createdAt": "2020-04-04T07:12:44Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/schema/FieldCoordinates.java", "diffHunk": "@@ -88,8 +108,28 @@ public static FieldCoordinates coordinates(String parentType, String fieldName)\n      * @return the coordinates\n      */\n     public static FieldCoordinates systemCoordinates(String fieldName) {\n-        assertTrue(fieldName.startsWith(\"__\"), \"Only __ system fields can be addressed without a parent type\");\n-        assertValidName(fieldName);\n+        return systemCoordinates(fieldName, true);\n+    }\n+\n+    /**\n+     * The exception to the general rule is the system __xxxx Introspection fields which have no parent type and\n+     * are able to be specified on any type.\n+     *\n+     * Note:  Whether or not validation is run depends on the {@code validate} boolean flag.  This method should only\n+     *   be used in non-validation mode in cases where it's known that the values passed have been previously\n+     *   validated.  That is, when those values are from objects such as {@code GraphQLFieldDefinition},\n+     *   {@code GraphQLNamedOutputType}, etc.  The reason for this is to optimize the creation of the FieldCoordinates\n+     *   object as validation can have a large impact on performance.\n+     *\n+     * @param fieldName the name of the system field which MUST start with __\n+     *\n+     * @return the coordinates\n+     */\n+    public static FieldCoordinates systemCoordinates(String fieldName, boolean validate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be101aab6ef5dfa9247f6fc315d31e4c2a637ebb"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQzNjQxOA==", "bodyText": "The reason for this is to optimize the creation of the FieldCoordinates\n*   object as validation can have a large impact on performance.\n\nDo you have any concrete evidence of the cost of these look ups?  I know regexes can be slow but I would love to see real perf data in how this lookup is used in real life.", "url": "https://github.com/graphql-java/graphql-java/pull/1846#discussion_r403436418", "createdAt": "2020-04-04T07:13:32Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/schema/FieldCoordinates.java", "diffHunk": "@@ -88,8 +108,28 @@ public static FieldCoordinates coordinates(String parentType, String fieldName)\n      * @return the coordinates\n      */\n     public static FieldCoordinates systemCoordinates(String fieldName) {\n-        assertTrue(fieldName.startsWith(\"__\"), \"Only __ system fields can be addressed without a parent type\");\n-        assertValidName(fieldName);\n+        return systemCoordinates(fieldName, true);\n+    }\n+\n+    /**\n+     * The exception to the general rule is the system __xxxx Introspection fields which have no parent type and\n+     * are able to be specified on any type.\n+     *\n+     * Note:  Whether or not validation is run depends on the {@code validate} boolean flag.  This method should only\n+     *   be used in non-validation mode in cases where it's known that the values passed have been previously\n+     *   validated.  That is, when those values are from objects such as {@code GraphQLFieldDefinition},\n+     *   {@code GraphQLNamedOutputType}, etc.  The reason for this is to optimize the creation of the FieldCoordinates\n+     *   object as validation can have a large impact on performance.\n+     *\n+     * @param fieldName the name of the system field which MUST start with __\n+     *\n+     * @return the coordinates\n+     */\n+    public static FieldCoordinates systemCoordinates(String fieldName, boolean validate) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQzNjM2MA=="}, "originalCommit": {"oid": "be101aab6ef5dfa9247f6fc315d31e4c2a637ebb"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjU3NzUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/schema/FieldCoordinates.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNzoxMzo1M1rOGAvzsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNzoxMzo1M1rOGAvzsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQzNjQ2Nw==", "bodyText": "Make this private as discussed and hence remove the JavaDoc", "url": "https://github.com/graphql-java/graphql-java/pull/1846#discussion_r403436467", "createdAt": "2020-04-04T07:13:53Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/schema/FieldCoordinates.java", "diffHunk": "@@ -74,8 +74,28 @@ public static FieldCoordinates coordinates(GraphQLFieldsContainer parentType, Gr\n      * @return new field coordinates represented by the two parameters\n      */\n     public static FieldCoordinates coordinates(String parentType, String fieldName) {\n-        assertValidName(parentType);\n-        assertValidName(fieldName);\n+        return coordinates(parentType, fieldName, true);\n+    }\n+\n+    /**\n+     * Creates new field coordinates.\n+     *\n+     * Note:  Whether or not validation is run depends on the {@code validate} boolean flag.  This method should only\n+     *   be used in non-validation mode in cases where it's known that the values passed have been previously\n+     *   validated.  That is, when those values are from objects such as {@code GraphQLFieldDefinition},\n+     *   {@code GraphQLNamedOutputType}, etc.  The reason for this is to optimize the creation of the FieldCoordinates\n+     *   object as validation can have a large impact on performance.\n+     *\n+     * @param parentType the container of the field\n+     * @param fieldName  the field name\n+     *\n+     * @return new field coordinates represented by the two parameters\n+     */\n+    public static FieldCoordinates coordinates(String parentType, String fieldName, boolean validate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be101aab6ef5dfa9247f6fc315d31e4c2a637ebb"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjk2MTM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/schema/FieldCoordinates.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1ODo0OVrOGCNNxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1ODo0OVrOGCNNxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2Njg1Mg==", "bodyText": "Note:  I chose to go with a method that asserts rather than return a boolean because currently the name validation is handled by the GraphQL assert classes.  I didn't want to expose that here and I didn't want to catch the exception so I can return the boolean and then have the GraphQLCodeRegistry methods call AssertTrue() again.", "url": "https://github.com/graphql-java/graphql-java/pull/1846#discussion_r404966852", "createdAt": "2020-04-07T16:58:49Z", "author": {"login": "fvilla-amazon"}, "path": "src/main/java/graphql/schema/FieldCoordinates.java", "diffHunk": "@@ -30,6 +33,25 @@ public String getFieldName() {\n         return fieldName;\n     }\n \n+\n+    /**\n+     * Checks the validity of the field coordinate names.  The validity checks vary by coordinate type.  Standard\n+     * coordinates validate both the {@code typeName} and {@code fieldName}, while system coordinates do not have\n+     * a parent so they only validate the {@code fieldName}.\n+     *\n+     * @throws AssertException if the coordinates are NOT valid; otherwise, returns normally.\n+     */\n+    public void assertValidNames() throws AssertException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5405e32ad98b8afc232ca383b17b118821483332"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjk2NjcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/schema/FieldCoordinates.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1OTo1OFrOGCNRBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxODowNjoyMFrOGDjrNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2NzY4Nw==", "bodyText": "I'm not sure whether this is correct or not.  I'm making the assumption that if the parent type has no name or the name is empty that we should consider this a system coordinate, similar to what is done in the string method", "url": "https://github.com/graphql-java/graphql-java/pull/1846#discussion_r404967687", "createdAt": "2020-04-07T16:59:58Z", "author": {"login": "fvilla-amazon"}, "path": "src/main/java/graphql/schema/FieldCoordinates.java", "diffHunk": "@@ -62,7 +84,9 @@ public String toString() {\n      * @return new field coordinates represented by the two parameters\n      */\n     public static FieldCoordinates coordinates(GraphQLFieldsContainer parentType, GraphQLFieldDefinition fieldDefinition) {\n-        return new FieldCoordinates(parentType.getName(), fieldDefinition.getName());\n+        final String parentTypeName = parentType.getName();\n+        return new FieldCoordinates(parentTypeName, fieldDefinition.getName(),\n+                (null == parentTypeName) || parentTypeName.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5405e32ad98b8afc232ca383b17b118821483332"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA5MzM3Ng==", "bodyText": "Just put false\nThe only true way to create a system coord is this method\n    public static FieldCoordinates systemCoordinates(String fieldName)", "url": "https://github.com/graphql-java/graphql-java/pull/1846#discussion_r406093376", "createdAt": "2020-04-09T09:58:37Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/schema/FieldCoordinates.java", "diffHunk": "@@ -62,7 +84,9 @@ public String toString() {\n      * @return new field coordinates represented by the two parameters\n      */\n     public static FieldCoordinates coordinates(GraphQLFieldsContainer parentType, GraphQLFieldDefinition fieldDefinition) {\n-        return new FieldCoordinates(parentType.getName(), fieldDefinition.getName());\n+        final String parentTypeName = parentType.getName();\n+        return new FieldCoordinates(parentTypeName, fieldDefinition.getName(),\n+                (null == parentTypeName) || parentTypeName.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2NzY4Nw=="}, "originalCommit": {"oid": "5405e32ad98b8afc232ca383b17b118821483332"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA5Mzk5NA==", "bodyText": "Please fix this one and this fix is ready to go", "url": "https://github.com/graphql-java/graphql-java/pull/1846#discussion_r406093994", "createdAt": "2020-04-09T09:59:34Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/schema/FieldCoordinates.java", "diffHunk": "@@ -62,7 +84,9 @@ public String toString() {\n      * @return new field coordinates represented by the two parameters\n      */\n     public static FieldCoordinates coordinates(GraphQLFieldsContainer parentType, GraphQLFieldDefinition fieldDefinition) {\n-        return new FieldCoordinates(parentType.getName(), fieldDefinition.getName());\n+        final String parentTypeName = parentType.getName();\n+        return new FieldCoordinates(parentTypeName, fieldDefinition.getName(),\n+                (null == parentTypeName) || parentTypeName.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2NzY4Nw=="}, "originalCommit": {"oid": "5405e32ad98b8afc232ca383b17b118821483332"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM4MzQxNQ==", "bodyText": "Thanks, will do.", "url": "https://github.com/graphql-java/graphql-java/pull/1846#discussion_r406383415", "createdAt": "2020-04-09T18:06:20Z", "author": {"login": "fvilla-amazon"}, "path": "src/main/java/graphql/schema/FieldCoordinates.java", "diffHunk": "@@ -62,7 +84,9 @@ public String toString() {\n      * @return new field coordinates represented by the two parameters\n      */\n     public static FieldCoordinates coordinates(GraphQLFieldsContainer parentType, GraphQLFieldDefinition fieldDefinition) {\n-        return new FieldCoordinates(parentType.getName(), fieldDefinition.getName());\n+        final String parentTypeName = parentType.getName();\n+        return new FieldCoordinates(parentTypeName, fieldDefinition.getName(),\n+                (null == parentTypeName) || parentTypeName.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2NzY4Nw=="}, "originalCommit": {"oid": "5405e32ad98b8afc232ca383b17b118821483332"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4601, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}