{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMTI4NzU0", "number": 1913, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMzozMToxNVrOD-dlqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMzozMTo0MFrOD-dl2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODIzMDgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/Assert.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMzozMToxNVrOGYlDQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMzozMToxNVrOGYlDQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQyNjA1MA==", "bodyText": "This is the KEY file changed and its test.\nThe others are all knock on effects", "url": "https://github.com/graphql-java/graphql-java/pull/1913#discussion_r428426050", "createdAt": "2020-05-21T03:31:15Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/Assert.java", "diffHunk": "@@ -1,25 +1,26 @@\n package graphql;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5b087b024d5c9d6884932e5a6ad8eb6b1238379"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODIzMTMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/Assert.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMzozMTo0MFrOGYlDlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNzowNToxOVrOGYoejA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQyNjEzNA==", "bodyText": "The above was missing but present for assertTrue so I made it", "url": "https://github.com/graphql-java/graphql-java/pull/1913#discussion_r428426134", "createdAt": "2020-05-21T03:31:40Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/Assert.java", "diffHunk": "@@ -83,11 +84,18 @@ public static void assertTrue(boolean condition) {\n         throw new AssertException(\"condition expected to be true\");\n     }\n \n-    public static void assertFalse(boolean condition, String format, Object... args) {\n+    public static void assertFalse(boolean condition, Supplier<String> msg) {\n         if (!condition) {\n             return;\n         }\n-        throw new AssertException(format(format, args));\n+        throw new AssertException(msg.get());\n+    }\n+\n+    public static void assertFalse(boolean condition) {\n+        if (!condition) {\n+            return;\n+        }\n+        throw new AssertException(\"condition expected to be false\");\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5b087b024d5c9d6884932e5a6ad8eb6b1238379"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MjE4OA==", "bodyText": "assertShouldNeverHappen can be as slow as it likes - its ALWAYS going to assert.\nI mean we could make it a supplier based on consistency but....I thought its ok to leave it", "url": "https://github.com/graphql-java/graphql-java/pull/1913#discussion_r428482188", "createdAt": "2020-05-21T07:05:19Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/Assert.java", "diffHunk": "@@ -83,11 +84,18 @@ public static void assertTrue(boolean condition) {\n         throw new AssertException(\"condition expected to be true\");\n     }\n \n-    public static void assertFalse(boolean condition, String format, Object... args) {\n+    public static void assertFalse(boolean condition, Supplier<String> msg) {\n         if (!condition) {\n             return;\n         }\n-        throw new AssertException(format(format, args));\n+        throw new AssertException(msg.get());\n+    }\n+\n+    public static void assertFalse(boolean condition) {\n+        if (!condition) {\n+            return;\n+        }\n+        throw new AssertException(\"condition expected to be false\");\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQyNjEzNA=="}, "originalCommit": {"oid": "f5b087b024d5c9d6884932e5a6ad8eb6b1238379"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4627, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}