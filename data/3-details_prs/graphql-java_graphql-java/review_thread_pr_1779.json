{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4Njg5NTM3", "number": 1779, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTo0Nzo1NlrODcgMpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTo0ODoxMFrODcgMxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjE0MjQ0OnYy", "diffSide": "RIGHT", "path": "src/test/groovy/graphql/Issue1768.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTo0Nzo1NlrOFkk0vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTo0Nzo1NlrOFkk0vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5NjM4MQ==", "bodyText": "can you remove the reference to the issue number? thanks", "url": "https://github.com/graphql-java/graphql-java/pull/1779#discussion_r373896381", "createdAt": "2020-02-03T01:47:56Z", "author": {"login": "andimarek"}, "path": "src/test/groovy/graphql/Issue1768.groovy", "diffHunk": "@@ -0,0 +1,81 @@\n+package graphql\n+\n+import graphql.schema.DataFetcher\n+import graphql.schema.GraphQLObjectType\n+import graphql.schema.GraphQLSchema\n+import graphql.schema.GraphQLSchemaElement\n+import graphql.schema.GraphQLTypeVisitorStub\n+import graphql.schema.SchemaTransformer\n+import graphql.schema.idl.NaturalEnumValuesProvider\n+import graphql.util.TraversalControl\n+import graphql.util.TraverserContext\n+import graphql.util.TreeTransformerUtil\n+import spock.lang.Specification\n+\n+import static graphql.schema.idl.RuntimeWiring.newRuntimeWiring\n+import static graphql.schema.idl.TypeRuntimeWiring.newTypeWiring\n+\n+class Issue1768 extends Specification {\n+\n+    static enum ThreadSort {\n+        NEWEST_FIRST,\n+        OLDEST_FIRST,\n+        MOST_COMMENTS_FIRST\n+    }\n+\n+    def \"#1768 check if the old behavior is not broken\" () {\n+        def spec = '''\n+            type Query {\n+                dummy: String                \n+            }\n+            '''\n+        GraphQL graphql = TestUtil.graphQL(spec, [Query: [dummy: (DataFetcher<String>) { null }]]).build()\n+\n+        when:\n+        ExecutionResult result = graphql.execute {\n+            it.query(\" { dummy } \")\n+        }\n+\n+        then:\n+        result.data.dummy == null\n+\n+    }\n+    def \"#1768 test if local context is set for top level\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04982cc3966223d4cbb6d7888ab943664a0818f0"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjE0Mjc5OnYy", "diffSide": "RIGHT", "path": "src/test/groovy/graphql/Issue1768.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTo0ODoxMFrOFkk05g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTo0ODoxMFrOFkk05g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5NjQyMg==", "bodyText": "same here, please remove the reference to the issue", "url": "https://github.com/graphql-java/graphql-java/pull/1779#discussion_r373896422", "createdAt": "2020-02-03T01:48:10Z", "author": {"login": "andimarek"}, "path": "src/test/groovy/graphql/Issue1768.groovy", "diffHunk": "@@ -0,0 +1,81 @@\n+package graphql\n+\n+import graphql.schema.DataFetcher\n+import graphql.schema.GraphQLObjectType\n+import graphql.schema.GraphQLSchema\n+import graphql.schema.GraphQLSchemaElement\n+import graphql.schema.GraphQLTypeVisitorStub\n+import graphql.schema.SchemaTransformer\n+import graphql.schema.idl.NaturalEnumValuesProvider\n+import graphql.util.TraversalControl\n+import graphql.util.TraverserContext\n+import graphql.util.TreeTransformerUtil\n+import spock.lang.Specification\n+\n+import static graphql.schema.idl.RuntimeWiring.newRuntimeWiring\n+import static graphql.schema.idl.TypeRuntimeWiring.newTypeWiring\n+\n+class Issue1768 extends Specification {\n+\n+    static enum ThreadSort {\n+        NEWEST_FIRST,\n+        OLDEST_FIRST,\n+        MOST_COMMENTS_FIRST\n+    }\n+\n+    def \"#1768 check if the old behavior is not broken\" () {\n+        def spec = '''\n+            type Query {\n+                dummy: String                \n+            }\n+            '''\n+        GraphQL graphql = TestUtil.graphQL(spec, [Query: [dummy: (DataFetcher<String>) { null }]]).build()\n+\n+        when:\n+        ExecutionResult result = graphql.execute {\n+            it.query(\" { dummy } \")\n+        }\n+\n+        then:\n+        result.data.dummy == null\n+\n+    }\n+    def \"#1768 test if local context is set for top level\"() {\n+        def spec = '''\n+            type Query {\n+                dummy: String                \n+            }\n+            '''\n+        GraphQL graphql = TestUtil.graphQL(spec, [Query: [dummy: (DataFetcher<String>) { (String) it.localContext }]]).build()\n+\n+        when:\n+        ExecutionResult result = graphql.execute {\n+            it.localContext(\"test\").query(\" { dummy } \")\n+        }\n+\n+        then:\n+        result.data.dummy == \"test\"\n+    }\n+    def \"#1768 test if the top local context gets transferred to the next level\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04982cc3966223d4cbb6d7888ab943664a0818f0"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4585, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}