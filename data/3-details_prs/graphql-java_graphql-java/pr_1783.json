{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjI5NjIx", "number": 1783, "title": "Removing the single instance of NullValue ", "bodyText": "NullValue represent a certain Ast element, therefore it should not be used as a singleton.", "createdAt": "2020-02-05T23:06:38Z", "url": "https://github.com/graphql-java/graphql-java/pull/1783", "merged": true, "mergeCommit": {"oid": "e33c252cf2309f7a71299032487c05bcb97cccd8"}, "closed": true, "closedAt": "2020-02-10T04:53:42Z", "author": {"login": "simeonleatherland"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBemmNgH2gAyMzcxNjI5NjIxOjQyOTYyY2Q5YjY3MjlkMjllNjEwMjZkOWRiMzRjNzRjZjZjOTIwNjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcC1yAPgFqTM1NTY5MDgxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "42962cd9b6729d29e61026d9db34c74cf6c92060", "author": {"user": {"login": "simeonleatherland", "name": "Simeon Leatherland"}}, "url": "https://github.com/graphql-java/graphql-java/commit/42962cd9b6729d29e61026d9db34c74cf6c92060", "committedDate": "2020-02-05T23:19:19Z", "message": "Removing NullValue single instace"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b31380037cf0d4a0d41e7c511e8ce3aa1e95a1bf", "author": {"user": {"login": "simeonleatherland", "name": "Simeon Leatherland"}}, "url": "https://github.com/graphql-java/graphql-java/commit/b31380037cf0d4a0d41e7c511e8ce3aa1e95a1bf", "committedDate": "2020-02-05T23:05:47Z", "message": "Removing the single instance of NullValue and instead using the builder for each argument that is null"}, "afterCommit": {"oid": "42962cd9b6729d29e61026d9db34c74cf6c92060", "author": {"user": {"login": "simeonleatherland", "name": "Simeon Leatherland"}}, "url": "https://github.com/graphql-java/graphql-java/commit/42962cd9b6729d29e61026d9db34c74cf6c92060", "committedDate": "2020-02-05T23:19:19Z", "message": "Removing NullValue single instace"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTExOTEy", "url": "https://github.com/graphql-java/graphql-java/pull/1783#pullrequestreview-354111912", "createdAt": "2020-02-05T23:25:56Z", "commit": {"oid": "42962cd9b6729d29e61026d9db34c74cf6c92060"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMzoyNTo1NlrOFmKs9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMzoyNTo1NlrOFmKs9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU2NTU1Ng==", "bodyText": "please make sure that source location is also set", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375565556", "createdAt": "2020-02-05T23:25:56Z", "author": {"login": "andimarek"}, "path": "src/test/groovy/graphql/parser/ParserTest.groovy", "diffHunk": "@@ -516,17 +516,18 @@ class ParserTest extends Specification {\n     }\n \n \n-    def \"parses null value\"() {\n+    def \"parses null values\"() {\n         given:\n-        def input = \"{ foo(bar: null) }\"\n+        def input = \"{ foo(bar: null, bell : null) }\"\n \n         when:\n         def document = new Parser().parseDocument(input)\n         def operation = document.definitions[0] as OperationDefinition\n         def selection = operation.selectionSet.selections[0] as Field\n \n         then:\n-        selection.arguments[0].value == NullValue.Null\n+        assert selection.arguments[0].value instanceof NullValue", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42962cd9b6729d29e61026d9db34c74cf6c92060"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baaac04cf2e340386ac12c63ad594aa6d0cb177f", "author": {"user": {"login": "simeonleatherland", "name": "Simeon Leatherland"}}, "url": "https://github.com/graphql-java/graphql-java/commit/baaac04cf2e340386ac12c63ad594aa6d0cb177f", "committedDate": "2020-02-06T00:55:51Z", "message": "Adding Check for source location to be as expected"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTU4ODY1", "url": "https://github.com/graphql-java/graphql-java/pull/1783#pullrequestreview-354158865", "createdAt": "2020-02-06T01:52:24Z", "commit": {"oid": "baaac04cf2e340386ac12c63ad594aa6d0cb177f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMTo1MjoyNFrOFmNGNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMTo1MjoyNFrOFmNGNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNDc4OA==", "bodyText": "I don't thing this is correct: we need to record the source location, ?", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375604788", "createdAt": "2020-02-06T01:52:24Z", "author": {"login": "andimarek"}, "path": "src/main/java/graphql/parser/GraphqlAntlrToLanguage.java", "diffHunk": "@@ -716,7 +716,7 @@ protected Value createValue(GraphqlParser.ValueContext ctx) {\n             addCommonData(booleanValue, ctx);\n             return booleanValue.build();\n         } else if (ctx.NullValue() != null) {\n-            return Null;\n+            return NullValue.newNullValue().build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baaac04cf2e340386ac12c63ad594aa6d0cb177f"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTU5MDU2", "url": "https://github.com/graphql-java/graphql-java/pull/1783#pullrequestreview-354159056", "createdAt": "2020-02-06T01:53:07Z", "commit": {"oid": "baaac04cf2e340386ac12c63ad594aa6d0cb177f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMTo1MzowN1rOFmNG1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMTo1MzowN1rOFmNG1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNDk1MQ==", "bodyText": "don't use assert: spock just takes a == b\nalso: this is the right test, yes, but not sure how this works, see the other comment above", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375604951", "createdAt": "2020-02-06T01:53:07Z", "author": {"login": "andimarek"}, "path": "src/test/groovy/graphql/parser/ParserTest.groovy", "diffHunk": "@@ -516,17 +516,21 @@ class ParserTest extends Specification {\n     }\n \n \n-    def \"parses null value\"() {\n+    def \"parses null values\"() {\n         given:\n-        def input = \"{ foo(bar: null) }\"\n+        def input = \"{ foo(bar: null, bell : null) }\"\n \n         when:\n         def document = new Parser().parseDocument(input)\n         def operation = document.definitions[0] as OperationDefinition\n         def selection = operation.selectionSet.selections[0] as Field\n \n         then:\n-        selection.arguments[0].value == NullValue.Null\n+        assert selection.arguments[0].value instanceof NullValue\n+        assert selection.arguments[1].value instanceof NullValue\n+\n+        assert selection.arguments[0].sourceLocation.toString() == \"SourceLocation{line=1, column=7}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baaac04cf2e340386ac12c63ad594aa6d0cb177f"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d3e5740abf53c8579527b1711b87d9f0f197ab9", "author": {"user": {"login": "simeonleatherland", "name": "Simeon Leatherland"}}, "url": "https://github.com/graphql-java/graphql-java/commit/1d3e5740abf53c8579527b1711b87d9f0f197ab9", "committedDate": "2020-02-10T04:42:59Z", "message": "Updating Tests and adding context to the null value"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NjkwODE1", "url": "https://github.com/graphql-java/graphql-java/pull/1783#pullrequestreview-355690815", "createdAt": "2020-02-10T04:53:31Z", "commit": {"oid": "1d3e5740abf53c8579527b1711b87d9f0f197ab9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4406, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}