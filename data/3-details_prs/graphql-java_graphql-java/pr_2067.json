{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MTIwODM4", "number": 2067, "title": "Support for Streams and Iterators", "bodyText": "Hi @bbakerman @andimarek,\nplease find my first attempt to be a bit more lazy during list processing in completeValueForList.\nThe basic idea is to avoid to \"materialize\" a Stream (and later maybe Iterator) into an ArrayList.\nI don't like some details of this PR (notably passing -1 as listSize) but let's start the discussion anyway. Maybe someone have better ideas there.", "createdAt": "2020-10-02T20:29:25Z", "url": "https://github.com/graphql-java/graphql-java/pull/2067", "merged": true, "mergeCommit": {"oid": "8e556663649cbbaab48852e70e90f8e8cf181de4"}, "closed": true, "closedAt": "2020-10-09T05:59:00Z", "author": {"login": "dfa1"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOz--RgBqjM4MzYyNTM0NDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP6RjdABqjM4NDYxNjY1MDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6bf6a87a0787494ca20693d4a47a298278350159", "author": {"user": {"login": "dfa1", "name": "Davide Angelocola"}}, "url": "https://github.com/graphql-java/graphql-java/commit/6bf6a87a0787494ca20693d4a47a298278350159", "committedDate": "2020-10-03T05:43:52Z", "message": "some notes"}, "afterCommit": {"oid": "a14f55ce3e098d7813d6a45ac7d415c6a416c284", "author": {"user": {"login": "dfa1", "name": "Davide Angelocola"}}, "url": "https://github.com/graphql-java/graphql-java/commit/a14f55ce3e098d7813d6a45ac7d415c6a416c284", "committedDate": "2020-10-03T05:45:58Z", "message": "centralizing isIterable logic in FpKit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjU0MjM2", "url": "https://github.com/graphql-java/graphql-java/pull/2067#pullrequestreview-502654236", "createdAt": "2020-10-06T07:29:08Z", "commit": {"oid": "a14f55ce3e098d7813d6a45ac7d415c6a416c284"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoyOTowOFrOHc5UVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoyOTowOFrOHc5UVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA2MTI2OQ==", "bodyText": "This is a mild breaking change - the input is \"Object\" but the actual type has changed.\nI think this is ok (did we say it WOULD always be a collection??) but I just want to call it out and see others thoughts on this.", "url": "https://github.com/graphql-java/graphql-java/pull/2067#discussion_r500061269", "createdAt": "2020-10-06T07:29:08Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/execution/ExecutionStrategy.java", "diffHunk": "@@ -494,19 +496,19 @@ protected FieldValueInfo completeValueForList(ExecutionContext executionContext,\n      */\n     protected FieldValueInfo completeValueForList(ExecutionContext executionContext, ExecutionStrategyParameters parameters, Iterable<Object> iterableValues) {\n \n-        Collection<Object> values = FpKit.toCollection(iterableValues);\n+        OptionalInt size = FpKit.toSize(iterableValues);\n         ExecutionStepInfo executionStepInfo = parameters.getExecutionStepInfo();\n \n-        InstrumentationFieldCompleteParameters instrumentationParams = new InstrumentationFieldCompleteParameters(executionContext, parameters, () -> executionStepInfo, values);\n+        InstrumentationFieldCompleteParameters instrumentationParams = new InstrumentationFieldCompleteParameters(executionContext, parameters, () -> executionStepInfo, iterableValues);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a14f55ce3e098d7813d6a45ac7d415c6a416c284"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjYyNjAz", "url": "https://github.com/graphql-java/graphql-java/pull/2067#pullrequestreview-502662603", "createdAt": "2020-10-06T07:40:24Z", "commit": {"oid": "a14f55ce3e098d7813d6a45ac7d415c6a416c284"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzo0MDoyNFrOHc5tEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzo0MzozNVrOHc50ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA2NzYwMw==", "bodyText": "I had a look at graphql.execution.ExecutionStrategyParameters#getListSize - we never use it.\nI was worried this -1 semantics could affect some one )badly but we never use it - I think this will be ok", "url": "https://github.com/graphql-java/graphql-java/pull/2067#discussion_r500067603", "createdAt": "2020-10-06T07:40:24Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/execution/ExecutionStrategy.java", "diffHunk": "@@ -519,7 +521,7 @@ protected FieldValueInfo completeValueForList(ExecutionContext executionContext,\n             ExecutionStrategyParameters newParameters = parameters.transform(builder ->\n                     builder.executionStepInfo(stepInfoForListElement)\n                             .nonNullFieldValidator(nonNullableFieldValidator)\n-                            .listSize(values.size())\n+                            .listSize(size.orElse(-1)) // -1 signals that we don't know the size", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a14f55ce3e098d7813d6a45ac7d415c6a416c284"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA2OTQ4Mg==", "bodyText": "At the end of the day we are still allocated an array the size of the list -  So source of the data can be a stream but we can stay streaming all the way.\nThis is an improvement - as you say it greatly reduces your memory usage (nearly half??) but longer term could we have streams all the way down to the turtles?\nThinking aloud here it might be too theoretical - I know there is code out there that assumes ExecutionResult is really a Map of lists and maps and values.  Would introducing \"streams\" in that break things?", "url": "https://github.com/graphql-java/graphql-java/pull/2067#discussion_r500069482", "createdAt": "2020-10-06T07:43:35Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/execution/ExecutionStrategy.java", "diffHunk": "@@ -494,19 +496,19 @@ protected FieldValueInfo completeValueForList(ExecutionContext executionContext,\n      */\n     protected FieldValueInfo completeValueForList(ExecutionContext executionContext, ExecutionStrategyParameters parameters, Iterable<Object> iterableValues) {\n \n-        Collection<Object> values = FpKit.toCollection(iterableValues);\n+        OptionalInt size = FpKit.toSize(iterableValues);\n         ExecutionStepInfo executionStepInfo = parameters.getExecutionStepInfo();\n \n-        InstrumentationFieldCompleteParameters instrumentationParams = new InstrumentationFieldCompleteParameters(executionContext, parameters, () -> executionStepInfo, values);\n+        InstrumentationFieldCompleteParameters instrumentationParams = new InstrumentationFieldCompleteParameters(executionContext, parameters, () -> executionStepInfo, iterableValues);\n         Instrumentation instrumentation = executionContext.getInstrumentation();\n \n         InstrumentationContext<ExecutionResult> completeListCtx = instrumentation.beginFieldListComplete(\n                 instrumentationParams\n         );\n \n-        List<FieldValueInfo> fieldValueInfos = new ArrayList<>(values.size());\n+        List<FieldValueInfo> fieldValueInfos = new ArrayList<>(size.orElse(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a14f55ce3e098d7813d6a45ac7d415c6a416c284"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "101e06aa7848959d60150732f630038638c62cf6", "author": {"user": {"login": "dfa1", "name": "Davide Angelocola"}}, "url": "https://github.com/graphql-java/graphql-java/commit/101e06aa7848959d60150732f630038638c62cf6", "committedDate": "2020-10-06T15:38:10Z", "message": "support for streams/iterators\n\nAllowing DataFetchers to return Stream<T> and Iterator<T>."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a14f55ce3e098d7813d6a45ac7d415c6a416c284", "author": {"user": {"login": "dfa1", "name": "Davide Angelocola"}}, "url": "https://github.com/graphql-java/graphql-java/commit/a14f55ce3e098d7813d6a45ac7d415c6a416c284", "committedDate": "2020-10-03T05:45:58Z", "message": "centralizing isIterable logic in FpKit"}, "afterCommit": {"oid": "101e06aa7848959d60150732f630038638c62cf6", "author": {"user": {"login": "dfa1", "name": "Davide Angelocola"}}, "url": "https://github.com/graphql-java/graphql-java/commit/101e06aa7848959d60150732f630038638c62cf6", "committedDate": "2020-10-06T15:38:10Z", "message": "support for streams/iterators\n\nAllowing DataFetchers to return Stream<T> and Iterator<T>."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4361, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}