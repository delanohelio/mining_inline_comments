{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzODU0NzQ2", "number": 2074, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzowODo0OVrOEt0imQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTowMjoyNVrOEvQo7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDgyMjAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/execution/MergedField.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzowODo0OVrOHh1gyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzowODo0OVrOHh1gyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0MTgwMA==", "bodyText": "used only in tests, could be a breaking change.\nMaybe this is the root cause of the additional copy that I've just removed in the constructor.", "url": "https://github.com/graphql-java/graphql-java/pull/2074#discussion_r505241800", "createdAt": "2020-10-15T07:08:49Z", "author": {"login": "dfa1"}, "path": "src/main/java/graphql/execution/MergedField.java", "diffHunk": "@@ -155,7 +156,7 @@ private Builder(MergedField existing) {\n         }\n \n         public Builder fields(List<Field> fields) {\n-            this.fields = fields;\n+            this.fields.addAll(fields);\n             return this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee6ed0dd8ae6f36b36608a755159dff6b59d0911"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTkxMTQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/execution/FieldCollectorParameters.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTowMjoyNVrOHkJAqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjowMjo1NFrOHkK-aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1ODQwOQ==", "bodyText": "This is a tricky one - generally we try for more immutable classes and hence by \"copying\" we gain some control in mutable Java land\nHowever as this class is repeatedly called, we probably need to change this general pattern if we see evidence that it costs us.", "url": "https://github.com/graphql-java/graphql-java/pull/2074#discussion_r507658409", "createdAt": "2020-10-19T11:02:25Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/execution/FieldCollectorParameters.java", "diffHunk": "@@ -70,12 +69,12 @@ public Builder objectType(GraphQLObjectType objectType) {\n         }\n \n         public Builder fragments(Map<String, FragmentDefinition> fragmentsByName) {\n-            this.fragmentsByName.putAll(fragmentsByName);\n+            this.fragmentsByName = fragmentsByName;\n             return this;\n         }\n \n         public Builder variables(Map<String, Object> variables) {\n-            this.variables.putAll(variables);\n+            this.variables = variables;\n             return this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee6ed0dd8ae6f36b36608a755159dff6b59d0911"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY5MDYwMQ==", "bodyText": "yes, I'm not sure too. I did that because the class is marked as @internal (so we may have more freedom) but I know that it is against the pattern mutable/builder -> immutable/built object.\nIt looks like it is always called with ExecutionContext data, that is unmodifiable.", "url": "https://github.com/graphql-java/graphql-java/pull/2074#discussion_r507690601", "createdAt": "2020-10-19T12:02:54Z", "author": {"login": "dfa1"}, "path": "src/main/java/graphql/execution/FieldCollectorParameters.java", "diffHunk": "@@ -70,12 +69,12 @@ public Builder objectType(GraphQLObjectType objectType) {\n         }\n \n         public Builder fragments(Map<String, FragmentDefinition> fragmentsByName) {\n-            this.fragmentsByName.putAll(fragmentsByName);\n+            this.fragmentsByName = fragmentsByName;\n             return this;\n         }\n \n         public Builder variables(Map<String, Object> variables) {\n-            this.variables.putAll(variables);\n+            this.variables = variables;\n             return this;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1ODQwOQ=="}, "originalCommit": {"oid": "ee6ed0dd8ae6f36b36608a755159dff6b59d0911"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4558, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}