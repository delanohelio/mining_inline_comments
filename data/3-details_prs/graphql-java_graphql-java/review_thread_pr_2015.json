{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NzM2ODI2", "number": 2015, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwODo0NDowOFrOEd9F9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMToxOTozM1rOE0_BJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODQ1MTExOnYy", "diffSide": "LEFT", "path": "src/main/java/graphql/language/InlineFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwODo0NDowOFrOHJaGTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwODo0NDowOFrOHJaGTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYyNjgyOA==", "bodyText": "Should never had had this repeated code but rather inherit it", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r479626828", "createdAt": "2020-08-29T08:44:08Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/language/InlineFragment.java", "diffHunk": "@@ -68,14 +67,6 @@ public TypeName getTypeCondition() {\n         return new ArrayList<>(directives);\n     }\n \n-    public Map<String, Directive> getDirectivesByName() {\n-        return directivesByName(directives);\n-    }\n-\n-    public Directive getDirective(String directiveName) {\n-        return getDirectivesByName().get(directiveName);\n-    }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a524c39e32efb90a77a3887266982f3f4efc7e3"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODQ1MTYzOnYy", "diffSide": "LEFT", "path": "src/main/java/graphql/schema/GraphQLEnumValueDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwODo0NDo1NFrOHJaGhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwODo0NDo1NFrOHJaGhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYyNjg4Ng==", "bodyText": "Should never had had this code", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r479626886", "createdAt": "2020-08-29T08:44:54Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/schema/GraphQLEnumValueDefinition.java", "diffHunk": "@@ -119,16 +119,6 @@ public String getDeprecationReason() {\n         return new ArrayList<>(directives);\n     }\n \n-    @Override\n-    public Map<String, GraphQLDirective> getDirectivesByName() {\n-        return DirectivesUtil.directivesByName(directives);\n-    }\n-\n-    @Override\n-    public GraphQLDirective getDirective(String directiveName) {\n-        return getDirectivesByName().get(directiveName);\n-    }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a524c39e32efb90a77a3887266982f3f4efc7e3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDAyNzE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/language/DirectivesContainer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMTowOToxNVrOHJlo7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMTowOToxNVrOHJlo7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgxNTkxOA==", "bodyText": "This method pattern is repeated in GraphqlDirectiveContainer as well - same names - same pattern - different types", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r479815918", "createdAt": "2020-08-30T21:09:15Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/language/DirectivesContainer.java", "diffHunk": "@@ -6,34 +6,67 @@\n import java.util.List;\n import java.util.Map;\n \n-import static graphql.language.NodeUtil.directivesByName;\n+import static graphql.language.NodeUtil.allDirectivesByName;\n+import static graphql.language.NodeUtil.nonRepeatableDirectivesByName;\n+import static graphql.language.NodeUtil.nonRepeatedDirectiveByNameWithAssert;\n+import static java.util.Collections.emptyList;\n \n /**\n- * Represents a language node that can contain Directives.\n+ * Represents a language node that can contain Directives.  Directives can be repeatable and (by default) non repeatable.\n+ * <p>\n+ * There are access methods here that get the two different types.\n+ *\n+ * @see graphql.language.DirectiveDefinition\n+ * @see DirectiveDefinition#isRepeatable()\n  */\n @PublicApi\n public interface DirectivesContainer<T extends DirectivesContainer> extends Node<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b11d16ff0f26aa1e7c3683f9724c6654c2b637ab"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzEzNjgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/language/DirectiveDefinition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1NDoxMlrOHKqRSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzoxNToyNlrOHNu9LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk0MDM2Mw==", "bodyText": "it is false by default :-)", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r480940363", "createdAt": "2020-09-01T07:54:12Z", "author": {"login": "andimarek"}, "path": "src/main/java/graphql/language/DirectiveDefinition.java", "diffHunk": "@@ -140,6 +153,7 @@ public DirectiveDefinition transform(Consumer<Builder> builderConsumer) {\n         private SourceLocation sourceLocation;\n         private List<Comment> comments = new ArrayList<>();\n         private String name;\n+        private boolean repeatable = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2Mjg2MQ==", "bodyText": "just making it clear! I know java defaults but hey - a readder will see this and know as well", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r484162861", "createdAt": "2020-09-07T03:15:26Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/language/DirectiveDefinition.java", "diffHunk": "@@ -140,6 +153,7 @@ public DirectiveDefinition transform(Consumer<Builder> builderConsumer) {\n         private SourceLocation sourceLocation;\n         private List<Comment> comments = new ArrayList<>();\n         private String name;\n+        private boolean repeatable = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk0MDM2Mw=="}, "originalCommit": {"oid": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTA5NTIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/DirectivesUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjo0NzoxMFrOHL4EvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjo0NzoxMFrOHL4EvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxNTEwMA==", "bodyText": "nonRepeatableDirectivesByName will travel directives three times. The code below seem to be faster:\n    public static Map<String, GraphQLDirective> nonRepeatableDirectivesByName(List<GraphQLDirective> directives) {\n        // filter the repeatable directives\n        List<GraphQLDirective> singletonDirectives = directives.stream()\n                .filter(d -> !d.isRepeatable()).collect(Collectors.toList());\n        \n        return FpKit.getByName(singletonDirectives, GraphQLDirective::getName);\n    }", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r482215100", "createdAt": "2020-09-02T16:47:10Z", "author": {"login": "dugenkui03"}, "path": "src/main/java/graphql/DirectivesUtil.java", "diffHunk": "@@ -7,20 +7,94 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import static graphql.Assert.assertNotNull;\n+import static java.util.Collections.emptyList;\n \n @Internal\n public class DirectivesUtil {\n \n-    public static Map<String, GraphQLDirective> directivesByName(List<GraphQLDirective> directiveList) {\n-        return FpKit.getByName(directiveList, GraphQLDirective::getName, FpKit.mergeFirst());\n+\n+    public static Map<String, GraphQLDirective> nonRepeatableDirectivesByName(List<GraphQLDirective> directives) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTE2MTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/DirectivesUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzowNDowN1rOHL4vEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzowNDowN1rOHL4vEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIyNTkzOQ==", "bodyText": "Do you think this is an more efficient way to implement enforceAdd:\n    public static List<GraphQLDirective> enforceAdd(List<GraphQLDirective> targetList, GraphQLDirective newDirective) {\n        assertNotNull(targetList, () -> \"directive list can't be null\");\n        assertNotNull(newDirective, () -> \"directive can't be null\");\n\n        // check whether the newDirective is repeatable in advance, to avoid needless operations\n        if(newDirective.isNonRepeatable()){\n            Map<String, List<GraphQLDirective>> map = allDirectivesByName(targetList);\n            assertNonRepeatable(newDirective, map);\n        }\n        targetList.add(newDirective);\n        return targetList;\n    }", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r482225939", "createdAt": "2020-09-02T17:04:07Z", "author": {"login": "dugenkui03"}, "path": "src/main/java/graphql/DirectivesUtil.java", "diffHunk": "@@ -7,20 +7,94 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import static graphql.Assert.assertNotNull;\n+import static java.util.Collections.emptyList;\n \n @Internal\n public class DirectivesUtil {\n \n-    public static Map<String, GraphQLDirective> directivesByName(List<GraphQLDirective> directiveList) {\n-        return FpKit.getByName(directiveList, GraphQLDirective::getName, FpKit.mergeFirst());\n+\n+    public static Map<String, GraphQLDirective> nonRepeatableDirectivesByName(List<GraphQLDirective> directives) {\n+        Map<String, List<GraphQLDirective>> map = allDirectivesByName(directives);\n+        List<GraphQLDirective> singletonDirectives = map.entrySet().stream()\n+                // only those that have 1 non repeated entry\n+                .filter(e -> e.getKey() != null && isAllNonRepeatable(e.getValue()))\n+                .flatMap(e -> e.getValue().stream()).collect(Collectors.toList());\n+        return FpKit.getByName(singletonDirectives, GraphQLDirective::getName);\n+    }\n+\n+    public static Map<String, List<GraphQLDirective>> allDirectivesByName(List<GraphQLDirective> directives) {\n+        return FpKit.groupingBy(directives, GraphQLDirective::getName);\n+    }\n+\n+    public static GraphQLDirective nonRepeatedDirectiveByNameWithAssert(Map<String, List<GraphQLDirective>> directives, String directiveName) {\n+        List<GraphQLDirective> directiveList = directives.get(directiveName);\n+        if (directiveList == null || directiveList.isEmpty()) {\n+            return null;\n+        }\n+        Assert.assertTrue(isAllNonRepeatable(directiveList), () -> String.format(\"'%s' is a repeatable directive and you have used a non repeatable access method\", directiveName));\n+        return directiveList.get(0);\n     }\n \n-    public static Optional<GraphQLArgument> directiveWithArg(List<GraphQLDirective> directiveList, String directiveName, String argumentName) {\n-        GraphQLDirective directive = directivesByName(directiveList).get(directiveName);\n+    public static Optional<GraphQLArgument> directiveWithArg(List<GraphQLDirective> directives, String directiveName, String argumentName) {\n+        GraphQLDirective directive = nonRepeatableDirectivesByName(directives).get(directiveName);\n         GraphQLArgument argument = null;\n         if (directive != null) {\n             argument = directive.getArgument(argumentName);\n         }\n         return Optional.ofNullable(argument);\n     }\n+\n+    public static boolean isAllNonRepeatable(List<GraphQLDirective> directives) {\n+        if (directives == null || directives.isEmpty()) {\n+            return false;\n+        }\n+        for (GraphQLDirective graphQLDirective : directives) {\n+            if (graphQLDirective.isRepeatable()) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    public static List<GraphQLDirective> enforceAdd(List<GraphQLDirective> targetList, GraphQLDirective newDirective) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTI4ODI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/language/NodeUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzozNDozMFrOHL6C7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTo0NDo1OFrOHtBi_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI0NzQwNQ==", "bodyText": "repeatable directive may used in Field one times, size() == 1 is not a prefect way to determain wether a directive is repeatable.", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r482247405", "createdAt": "2020-09-02T17:34:30Z", "author": {"login": "dugenkui03"}, "path": "src/main/java/graphql/language/NodeUtil.java", "diffHunk": "@@ -28,9 +30,26 @@ public static boolean isEqualTo(String thisStr, String thatStr) {\n         return true;\n     }\n \n+    public static Map<String, List<Directive>> allDirectivesByName(List<Directive> directives) {\n+        return FpKit.groupingBy(directives, Directive::getName);\n+    }\n+\n+    public static Map<String, Directive> nonRepeatableDirectivesByName(List<Directive> directives) {\n+        Map<String, List<Directive>> map = allDirectivesByName(directives);\n+        List<Directive> singletonDirectives = map.entrySet().stream()\n+                // only those that have 1 non repeated entry\n+                .filter(e -> e.getKey() != null && e.getValue().size() == 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NzYzNQ==", "bodyText": "@bbakerman so this method return only the directives used once?", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516957635", "createdAt": "2020-11-03T21:11:11Z", "author": {"login": "andimarek"}, "path": "src/main/java/graphql/language/NodeUtil.java", "diffHunk": "@@ -28,9 +30,26 @@ public static boolean isEqualTo(String thisStr, String thatStr) {\n         return true;\n     }\n \n+    public static Map<String, List<Directive>> allDirectivesByName(List<Directive> directives) {\n+        return FpKit.groupingBy(directives, Directive::getName);\n+    }\n+\n+    public static Map<String, Directive> nonRepeatableDirectivesByName(List<Directive> directives) {\n+        Map<String, List<Directive>> map = allDirectivesByName(directives);\n+        List<Directive> singletonDirectives = map.entrySet().stream()\n+                // only those that have 1 non repeated entry\n+                .filter(e -> e.getKey() != null && e.getValue().size() == 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI0NzQwNQ=="}, "originalCommit": {"oid": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3MzMwOQ==", "bodyText": "I have killed this method and its one usage", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516973309", "createdAt": "2020-11-03T21:44:58Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/language/NodeUtil.java", "diffHunk": "@@ -28,9 +30,26 @@ public static boolean isEqualTo(String thisStr, String thatStr) {\n         return true;\n     }\n \n+    public static Map<String, List<Directive>> allDirectivesByName(List<Directive> directives) {\n+        return FpKit.groupingBy(directives, Directive::getName);\n+    }\n+\n+    public static Map<String, Directive> nonRepeatableDirectivesByName(List<Directive> directives) {\n+        Map<String, List<Directive>> map = allDirectivesByName(directives);\n+        List<Directive> singletonDirectives = map.entrySet().stream()\n+                // only those that have 1 non repeated entry\n+                .filter(e -> e.getKey() != null && e.getValue().size() == 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI0NzQwNQ=="}, "originalCommit": {"oid": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4OTU3NDI2OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMDozMTo1MVrOHllN8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMDozMTo1MVrOHllN8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE2OTEzNg==", "bodyText": "This is some some rubbish left over testing - this is NOT needed", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r509169136", "createdAt": "2020-10-21T10:31:51Z", "author": {"login": "bbakerman"}, "path": "build.gradle", "diffHunk": "@@ -75,6 +76,8 @@ dependencies {\n \n     testCompile 'org.openjdk.jmh:jmh-core:1.21'\n     testCompile 'org.openjdk.jmh:jmh-generator-annprocess:1.21'\n+\n+    testCompile 'is.tagomor.woothee:woothee-java:1.11.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b73c100f26b1cbee9754cb070254a89221800557"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTkwMDk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/introspection/Introspection.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTowNzoxMFrOHtAeYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwNzozNzo0M1rOHzdY1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NTc0NQ==", "bodyText": "what is this fix here? did we have this wrong before?", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516955745", "createdAt": "2020-11-03T21:07:10Z", "author": {"login": "andimarek"}, "path": "src/main/java/graphql/introspection/Introspection.java", "diffHunk": "@@ -430,13 +430,17 @@ private static String print(Object value, GraphQLInputType type) {\n             .name(\"__Directive\")\n             .field(newFieldDefinition()\n                     .name(\"name\")\n-                    .type(GraphQLString))\n+                    .description(\"The __Directive type represents a Directive that a server supports.\")\n+                    .type(nonNull(GraphQLString)))\n             .field(newFieldDefinition()\n                     .name(\"description\")\n                     .type(GraphQLString))\n+            .field(newFieldDefinition()\n+                    .name(\"isRepeatable\")\n+                    .type(nonNull(GraphQLBoolean)))\n             .field(newFieldDefinition()\n                     .name(\"locations\")\n-                    .type(list(nonNull(__DirectiveLocation))))\n+                    .type(nonNull(list(__DirectiveLocation))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af3d66783b78e03a059b57aaf88171852b6d9739"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2NTI3Nw==", "bodyText": "let me check - this came from other code that I started this branch from - a PR from @dugenkui03  I think.", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516965277", "createdAt": "2020-11-03T21:27:14Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/introspection/Introspection.java", "diffHunk": "@@ -430,13 +430,17 @@ private static String print(Object value, GraphQLInputType type) {\n             .name(\"__Directive\")\n             .field(newFieldDefinition()\n                     .name(\"name\")\n-                    .type(GraphQLString))\n+                    .description(\"The __Directive type represents a Directive that a server supports.\")\n+                    .type(nonNull(GraphQLString)))\n             .field(newFieldDefinition()\n                     .name(\"description\")\n                     .type(GraphQLString))\n+            .field(newFieldDefinition()\n+                    .name(\"isRepeatable\")\n+                    .type(nonNull(GraphQLBoolean)))\n             .field(newFieldDefinition()\n                     .name(\"locations\")\n-                    .type(list(nonNull(__DirectiveLocation))))\n+                    .type(nonNull(list(__DirectiveLocation))))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NTc0NQ=="}, "originalCommit": {"oid": "af3d66783b78e03a059b57aaf88171852b6d9739"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3NDg0MA==", "bodyText": "The spec is not explicit\n\nlocations returns a List of __DirectiveLocation representing the valid locations this directive may be placed.\n\nSo I will make it\n.field(newFieldDefinition()\n                    .name(\"locations\")\n                    .type(nonNull(list(nonNull(__DirectiveLocation)))))", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516974840", "createdAt": "2020-11-03T21:48:16Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/introspection/Introspection.java", "diffHunk": "@@ -430,13 +430,17 @@ private static String print(Object value, GraphQLInputType type) {\n             .name(\"__Directive\")\n             .field(newFieldDefinition()\n                     .name(\"name\")\n-                    .type(GraphQLString))\n+                    .description(\"The __Directive type represents a Directive that a server supports.\")\n+                    .type(nonNull(GraphQLString)))\n             .field(newFieldDefinition()\n                     .name(\"description\")\n                     .type(GraphQLString))\n+            .field(newFieldDefinition()\n+                    .name(\"isRepeatable\")\n+                    .type(nonNull(GraphQLBoolean)))\n             .field(newFieldDefinition()\n                     .name(\"locations\")\n-                    .type(list(nonNull(__DirectiveLocation))))\n+                    .type(nonNull(list(__DirectiveLocation))))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NTc0NQ=="}, "originalCommit": {"oid": "af3d66783b78e03a059b57aaf88171852b6d9739"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcyMDkxNw==", "bodyText": "The spec is explicit (see https://spec.graphql.org/draft/#sec-Schema-Introspection):\ntype __Directive {\n  name: String!\n  description: String\n  locations: [__DirectiveLocation!]!\n  args: [__InputValue!]!\n  isRepeatable: Boolean!\n}", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r523720917", "createdAt": "2020-11-15T07:37:43Z", "author": {"login": "andimarek"}, "path": "src/main/java/graphql/introspection/Introspection.java", "diffHunk": "@@ -430,13 +430,17 @@ private static String print(Object value, GraphQLInputType type) {\n             .name(\"__Directive\")\n             .field(newFieldDefinition()\n                     .name(\"name\")\n-                    .type(GraphQLString))\n+                    .description(\"The __Directive type represents a Directive that a server supports.\")\n+                    .type(nonNull(GraphQLString)))\n             .field(newFieldDefinition()\n                     .name(\"description\")\n                     .type(GraphQLString))\n+            .field(newFieldDefinition()\n+                    .name(\"isRepeatable\")\n+                    .type(nonNull(GraphQLBoolean)))\n             .field(newFieldDefinition()\n                     .name(\"locations\")\n-                    .type(list(nonNull(__DirectiveLocation))))\n+                    .type(nonNull(list(__DirectiveLocation))))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NTc0NQ=="}, "originalCommit": {"oid": "af3d66783b78e03a059b57aaf88171852b6d9739"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTkzODk0OnYy", "diffSide": "RIGHT", "path": "src/test/groovy/graphql/language/AstPrinterTest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMToxOTozM1rOHtA1aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMToxOTozM1rOHtA1aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2MTY0Mw==", "bodyText": "we should have a test which actually prints multiple directives on a Node", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516961643", "createdAt": "2020-11-03T21:19:33Z", "author": {"login": "andimarek"}, "path": "src/test/groovy/graphql/language/AstPrinterTest.groovy", "diffHunk": "@@ -605,11 +601,41 @@ extend input Input @directive {\n                 .build()\n \n         when:\n-        def result = astPrinter.printAst(interfaceType)\n+        def result = AstPrinter.printAstCompact(interfaceType)\n \n         then:\n         result == \"extend interface Resource implements Node & Extra {}\"\n \n     }\n \n+    def \"directive definitions can be printed\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af3d66783b78e03a059b57aaf88171852b6d9739"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4536, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}