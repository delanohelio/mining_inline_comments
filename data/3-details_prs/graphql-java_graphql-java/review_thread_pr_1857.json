{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDI3OTc1", "number": 1857, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMzozNjowM1rODytl2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMzozNjowM1rODytl2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NTAyMzYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/graphql/validation/rules/UniqueArgumentNamesRule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMzozNjowM1rOGG61qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzoyMTowNVrOGHWkeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkwODY1MA==", "bodyText": "sizing collections is almost never needed.  but easier to read code is.\nI wont say not to this PR because of this but its not needed", "url": "https://github.com/graphql-java/graphql-java/pull/1857#discussion_r409908650", "createdAt": "2020-04-16T23:36:03Z", "author": {"login": "bbakerman"}, "path": "src/main/java/graphql/validation/rules/UniqueArgumentNamesRule.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package graphql.validation.rules;\n+\n+import graphql.language.Argument;\n+import graphql.language.Directive;\n+import graphql.language.Field;\n+import graphql.language.Node;\n+import graphql.validation.AbstractRule;\n+import graphql.validation.ValidationContext;\n+import graphql.validation.ValidationErrorCollector;\n+import graphql.validation.ValidationErrorType;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Unique argument names\n+ *\n+ * A GraphQL field or directive is only valid if all supplied arguments are uniquely named.\n+ */\n+public class UniqueArgumentNamesRule extends AbstractRule {\n+    public UniqueArgumentNamesRule(ValidationContext validationContext, ValidationErrorCollector validationErrorCollector) {\n+        super(validationContext, validationErrorCollector);\n+    }\n+\n+    @Override\n+    public void checkField(Field field) {\n+        if(field.getArguments()==null||field.getArguments().size()<=1){\n+            return;\n+        }\n+\n+        Set<String> arguments=new HashSet<>(field.getArguments().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8439c24fee6b746c9fe3e27897a368b1b79b1ad0"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM2MzAwMg==", "bodyText": "sizing collections is in order to avoid the cost for resize() in HashMap/HashSet, but I haven took loadFactor into consideration. In fact, I want to init Map:\n  int capacity = (int) (field.getArguments().size() / 0.75 + 1);\n\nBut default capacity of HashMap is enough in most case, I will remove this and make it clear.\nThanks for your code review .", "url": "https://github.com/graphql-java/graphql-java/pull/1857#discussion_r410363002", "createdAt": "2020-04-17T17:21:05Z", "author": {"login": "dugenkui03"}, "path": "src/main/java/graphql/validation/rules/UniqueArgumentNamesRule.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package graphql.validation.rules;\n+\n+import graphql.language.Argument;\n+import graphql.language.Directive;\n+import graphql.language.Field;\n+import graphql.language.Node;\n+import graphql.validation.AbstractRule;\n+import graphql.validation.ValidationContext;\n+import graphql.validation.ValidationErrorCollector;\n+import graphql.validation.ValidationErrorType;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Unique argument names\n+ *\n+ * A GraphQL field or directive is only valid if all supplied arguments are uniquely named.\n+ */\n+public class UniqueArgumentNamesRule extends AbstractRule {\n+    public UniqueArgumentNamesRule(ValidationContext validationContext, ValidationErrorCollector validationErrorCollector) {\n+        super(validationContext, validationErrorCollector);\n+    }\n+\n+    @Override\n+    public void checkField(Field field) {\n+        if(field.getArguments()==null||field.getArguments().size()<=1){\n+            return;\n+        }\n+\n+        Set<String> arguments=new HashSet<>(field.getArguments().size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkwODY1MA=="}, "originalCommit": {"oid": "8439c24fee6b746c9fe3e27897a368b1b79b1ad0"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4604, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}