{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNjkwMjU2", "number": 2022, "title": "Small tweak in a hot spot method that pre-allocates the array list", "bodyText": "Looking at Flight Recorder allocation I noticed that Asyc.each is a hot spot method and hence this pre-allocates the result array and iterate the array we have", "createdAt": "2020-09-06T08:40:13Z", "url": "https://github.com/graphql-java/graphql-java/pull/2022", "merged": true, "mergeCommit": {"oid": "be01c7f13b8a90e804fd16a11874ac24ff78f082"}, "closed": true, "closedAt": "2020-09-08T04:54:04Z", "author": {"login": "bbakerman"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGKQBgAH2gAyNDgwNjkwMjU2OmJhZTQxYjc5ZjA2OTg1MTk0ZDJhYjM3NDMwNmY5M2YxYjRkMDhjMWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGpfoHAFqTQ4MzcwODY4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bae41b79f06985194d2ab374306f93f1b4d08c1d", "author": {"user": {"login": "bbakerman", "name": "Brad Baker"}}, "url": "https://github.com/graphql-java/graphql-java/commit/bae41b79f06985194d2ab374306f93f1b4d08c1d", "committedDate": "2020-09-06T08:37:20Z", "message": "Small tweak in a hot spot method that pre-allocates the array list to the right size"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMjM1ODQw", "url": "https://github.com/graphql-java/graphql-java/pull/2022#pullrequestreview-483235840", "createdAt": "2020-09-07T04:34:34Z", "commit": {"oid": "bae41b79f06985194d2ab374306f93f1b4d08c1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNDozNDozNFrOHNv4IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNDozNDozNFrOHNv4IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE3Nzk1Mw==", "bodyText": "Change futures.toArray(new CompletableFuture[0])\nto futures.toArray(new CompletableFuture[futures.size()]) will be more efficient, since this will avoid create a new array object.\ntoArray() in ArrayList:\n    public <T> T[] toArray(T[] a) {\n        if (a.length < size)\n            // Make a new array of a's runtime type, but my contents:\n            return (T[]) Arrays.copyOf(elementData, size, a.getClass());\n        System.arraycopy(elementData, 0, a, 0, size);\n        if (a.length > size)\n            a[size] = null;\n        return a;\n    }", "url": "https://github.com/graphql-java/graphql-java/pull/2022#discussion_r484177953", "createdAt": "2020-09-07T04:34:34Z", "author": {"login": "dugenkui03"}, "path": "src/main/java/graphql/execution/Async.java", "diffHunk": "@@ -26,15 +26,17 @@\n     public static <U> CompletableFuture<List<U>> each(List<CompletableFuture<U>> futures) {\n         CompletableFuture<List<U>> overallResult = new CompletableFuture<>();\n \n+        @SuppressWarnings(\"unchecked\")\n+        CompletableFuture<U>[] arrayOfFutures = futures.toArray(new CompletableFuture[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bae41b79f06985194d2ab374306f93f1b4d08c1d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNzA4Njgx", "url": "https://github.com/graphql-java/graphql-java/pull/2022#pullrequestreview-483708681", "createdAt": "2020-09-07T21:01:26Z", "commit": {"oid": "bae41b79f06985194d2ab374306f93f1b4d08c1d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4351, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}