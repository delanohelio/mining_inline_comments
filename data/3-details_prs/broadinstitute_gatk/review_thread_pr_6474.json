{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxOTg4NTA2", "number": 6474, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTo0ODo0M1rODkb5zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTo1NjozNFrODkcDLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTMyNDk0OnYy", "diffSide": "RIGHT", "path": "src/testUtils/java/org/broadinstitute/hellbender/testutils/ArgumentsBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTo0ODo0M1rOFwwhtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNToxNzowMlrOFw4nuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3MTAyOQ==", "bodyText": "Could you update the class comment while you're here?", "url": "https://github.com/broadinstitute/gatk/pull/6474#discussion_r386671029", "createdAt": "2020-03-02T21:48:43Z", "author": {"login": "lbergelson"}, "path": "src/testUtils/java/org/broadinstitute/hellbender/testutils/ArgumentsBuilder.java", "diffHunk": "@@ -26,200 +26,169 @@ public ArgumentsBuilder(){}\n     public ArgumentsBuilder(Object[] args){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0502eaa53895bf806475488351055e2871c2ae91"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMzY0Mw==", "bodyText": "done", "url": "https://github.com/broadinstitute/gatk/pull/6474#discussion_r386803643", "createdAt": "2020-03-03T05:17:02Z", "author": {"login": "davidbenjamin"}, "path": "src/testUtils/java/org/broadinstitute/hellbender/testutils/ArgumentsBuilder.java", "diffHunk": "@@ -26,200 +26,169 @@ public ArgumentsBuilder(){}\n     public ArgumentsBuilder(Object[] args){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3MTAyOQ=="}, "originalCommit": {"oid": "0502eaa53895bf806475488351055e2871c2ae91"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTM0ODk0OnYy", "diffSide": "LEFT", "path": "src/test/java/org/broadinstitute/hellbender/testutils/ArgumentsBuilderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTo1NjozNFrOFwww9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNToxNTozMlrOFw4mcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3NDkzMg==", "bodyText": "No love for positional arguments?  There might be 1 tool that uses those somewhere....", "url": "https://github.com/broadinstitute/gatk/pull/6474#discussion_r386674932", "createdAt": "2020-03-02T21:56:34Z", "author": {"login": "lbergelson"}, "path": "src/test/java/org/broadinstitute/hellbender/testutils/ArgumentsBuilderTest.java", "diffHunk": "@@ -11,60 +10,52 @@\n     @Test\n     public void testArgumentsBuilder() {\n         ArgumentsBuilder args = new ArgumentsBuilder();\n-        args.add(\"--value1\");\n-        args.add(1);\n-        args.add(\"Input=\")\n-            .add(new File(\"path/to/somewhere\"))\n-            .add(\"Value2=2\")\n-            .add(\" Value3= 3 Value4=4\");\n+        args.addRaw(\"--value1\");\n+        args.addRaw(1);\n+        args.addRaw(\"--Input\")\n+            .addRaw(new File(\"path/to/somewhere\"))\n+            .addRaw(\"--Value2 2\")\n+            .addRaw(\" --Value3 3 --Value4 4\");\n \n         Assert.assertEquals(args.getArgsArray(), new String[]{\"--value1\", \"1\",\n                 \"--Input\", \"path/to/somewhere\",\"--Value2\",\"2\",\"--Value3\",\"3\",\"--Value4\",\"4\"});\n     }\n     @Test\n     public void testOneBigString(){\n         ArgumentsBuilder args = new ArgumentsBuilder();\n-        args.add(\" Value=1 Value=2 Value=3 Value= 4 \");\n+        args.addRaw(\" --Value 1 --Value 2 --Value 3 --Value 4 \");\n         Assert.assertEquals(args.getArgsList().toArray(), new String[]{\"--Value\", \"1\", \"--Value\", \"2\",\n                 \"--Value\", \"3\",\"--Value\", \"4\"});\n \n     }\n \n     @Test\n     public void testFromArray(){\n-        ArgumentsBuilder args = new ArgumentsBuilder(new Object[]{\"Option=\" + new File(\"path/to\"), \"OtherOption=\" + -1, new File(\"somewhere\")});\n+        ArgumentsBuilder args = new ArgumentsBuilder(new Object[]{\"--Option \" + new File(\"path/to\"), \"--OtherOption \" + -1, new File(\"somewhere\")});\n         Assert.assertEquals(args.getArgsArray(), new String[]{\"--Option\",\"path/to\", \"--OtherOption\", \"-1\", \"somewhere\"});\n     }\n \n     @Test\n     public void testAddArgument() throws Exception {\n         ArgumentsBuilder args = new ArgumentsBuilder();\n-        args.addArgument(\"foo\", \"bar\");\n+        args.add(\"foo\", \"bar\");\n         Assert.assertEquals(args.getArgsArray(), new String[]{\"--foo\",\"bar\"});\n         Assert.assertEquals(args.getString(), \"--foo bar\");\n     }\n \n-    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0502eaa53895bf806475488351055e2871c2ae91"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMzMxNQ==", "bodyText": "addPositional was just a wrapper for add, which struck me as confusing at best, misleading at worst.", "url": "https://github.com/broadinstitute/gatk/pull/6474#discussion_r386803315", "createdAt": "2020-03-03T05:15:32Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/testutils/ArgumentsBuilderTest.java", "diffHunk": "@@ -11,60 +10,52 @@\n     @Test\n     public void testArgumentsBuilder() {\n         ArgumentsBuilder args = new ArgumentsBuilder();\n-        args.add(\"--value1\");\n-        args.add(1);\n-        args.add(\"Input=\")\n-            .add(new File(\"path/to/somewhere\"))\n-            .add(\"Value2=2\")\n-            .add(\" Value3= 3 Value4=4\");\n+        args.addRaw(\"--value1\");\n+        args.addRaw(1);\n+        args.addRaw(\"--Input\")\n+            .addRaw(new File(\"path/to/somewhere\"))\n+            .addRaw(\"--Value2 2\")\n+            .addRaw(\" --Value3 3 --Value4 4\");\n \n         Assert.assertEquals(args.getArgsArray(), new String[]{\"--value1\", \"1\",\n                 \"--Input\", \"path/to/somewhere\",\"--Value2\",\"2\",\"--Value3\",\"3\",\"--Value4\",\"4\"});\n     }\n     @Test\n     public void testOneBigString(){\n         ArgumentsBuilder args = new ArgumentsBuilder();\n-        args.add(\" Value=1 Value=2 Value=3 Value= 4 \");\n+        args.addRaw(\" --Value 1 --Value 2 --Value 3 --Value 4 \");\n         Assert.assertEquals(args.getArgsList().toArray(), new String[]{\"--Value\", \"1\", \"--Value\", \"2\",\n                 \"--Value\", \"3\",\"--Value\", \"4\"});\n \n     }\n \n     @Test\n     public void testFromArray(){\n-        ArgumentsBuilder args = new ArgumentsBuilder(new Object[]{\"Option=\" + new File(\"path/to\"), \"OtherOption=\" + -1, new File(\"somewhere\")});\n+        ArgumentsBuilder args = new ArgumentsBuilder(new Object[]{\"--Option \" + new File(\"path/to\"), \"--OtherOption \" + -1, new File(\"somewhere\")});\n         Assert.assertEquals(args.getArgsArray(), new String[]{\"--Option\",\"path/to\", \"--OtherOption\", \"-1\", \"somewhere\"});\n     }\n \n     @Test\n     public void testAddArgument() throws Exception {\n         ArgumentsBuilder args = new ArgumentsBuilder();\n-        args.addArgument(\"foo\", \"bar\");\n+        args.add(\"foo\", \"bar\");\n         Assert.assertEquals(args.getArgsArray(), new String[]{\"--foo\",\"bar\"});\n         Assert.assertEquals(args.getString(), \"--foo bar\");\n     }\n \n-    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3NDkzMg=="}, "originalCommit": {"oid": "0502eaa53895bf806475488351055e2871c2ae91"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1117, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}