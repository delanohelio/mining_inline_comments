{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5ODc0MDE5", "number": 6542, "title": "Added JSON and Readme for workflows", "bodyText": "Added a ReadMe for the CNN workflow\nAdded a input JSON for the Mutect2 workflow files located in gs:// buckets\n\nThe reason for this is to have any workflow listed in the Dockstore site have an accompanying JSON for users to test the workflow. Also, have a ReadMe with a description of the workflow.", "createdAt": "2020-04-06T20:00:37Z", "url": "https://github.com/broadinstitute/gatk/pull/6542", "merged": true, "mergeCommit": {"oid": "8a38a50a10ae829b40e66c4e476c02a52b02f5eb"}, "closed": true, "closedAt": "2020-04-13T17:35:33Z", "author": {"login": "bshifaw"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVEEiUAH2gAyMzk5ODc0MDE5OmU0NGU3MTI1ODIzZWQ5MmI1MjFmOTM2YzFkOTk0YTliZGZjZDM0ZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWCOWZAFqTM5MTA5NjYzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e44e7125823ed92b521f936c1d994a9bdfcd34d8", "author": {"user": {"login": "bshifaw", "name": "bshifaw"}}, "url": "https://github.com/broadinstitute/gatk/commit/e44e7125823ed92b521f936c1d994a9bdfcd34d8", "committedDate": "2020-04-06T19:43:04Z", "message": "added json with resources for pathseq and m2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8", "author": {"user": {"login": "bshifaw", "name": "bshifaw"}}, "url": "https://github.com/broadinstitute/gatk/commit/87af67259301ac559f40d7ef8cba07fd9dc1b2e8", "committedDate": "2020-04-06T19:48:26Z", "message": "add readme for cnn wdl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5OTgzMzIw", "url": "https://github.com/broadinstitute/gatk/pull/6542#pullrequestreview-389983320", "createdAt": "2020-04-08T13:39:28Z", "commit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzozOToyOFrOGCvuTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzo1MDoxNFrOGCwMqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzMjIzNw==", "bodyText": "takes -> take\nGATKs -> GATK's\nMaybe instead of \"This repo\", \"This directory\"?  Or \"Here are workflows that...\"\ncomma after \"which\"", "url": "https://github.com/broadinstitute/gatk/pull/6542#discussion_r405532237", "createdAt": "2020-04-08T13:39:28Z", "author": {"login": "ldgauthier"}, "path": "scripts/cnn_variant_wdl/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# gatk4-cnn-variant-filter\n+\n+### Purpose :\n+This repo provides workflows that takes advantage of GATKs CNN tool which is a deep learning ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzMzQ5OQ==", "bodyText": "This link still works, but is it going to move to the new website?", "url": "https://github.com/broadinstitute/gatk/pull/6542#discussion_r405533499", "createdAt": "2020-04-08T13:41:13Z", "author": {"login": "ldgauthier"}, "path": "scripts/cnn_variant_wdl/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# gatk4-cnn-variant-filter\n+\n+### Purpose :\n+This repo provides workflows that takes advantage of GATKs CNN tool which is a deep learning \n+approach to filter variants based on Convolutional Neural Networks. \n+\n+Please read the following discussion to learn more about the CNN tool: [Deep Learning in GATK4](https://gatkforums.broadinstitute.org/gatk/discussion/10996/deep-learning-in-gatk4).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNDM0OQ==", "bodyText": "CNNVariant -> CNNScoreVariants\nWe have a default model based on Illumina exomes and genomes if none is specified", "url": "https://github.com/broadinstitute/gatk/pull/6542#discussion_r405534349", "createdAt": "2020-04-08T13:42:27Z", "author": {"login": "ldgauthier"}, "path": "scripts/cnn_variant_wdl/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# gatk4-cnn-variant-filter\n+\n+### Purpose :\n+This repo provides workflows that takes advantage of GATKs CNN tool which is a deep learning \n+approach to filter variants based on Convolutional Neural Networks. \n+\n+Please read the following discussion to learn more about the CNN tool: [Deep Learning in GATK4](https://gatkforums.broadinstitute.org/gatk/discussion/10996/deep-learning-in-gatk4).\n+\n+### cram2filtered.wdl\n+This workflow takes an input CRAM/BAM to call variants with HaplotypeCaller\n+then filters the calls with the CNNVariant neural net tool using the filtering model specified.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNTQwNQ==", "bodyText": "Correct keys are CNN_1D and CNN_2D", "url": "https://github.com/broadinstitute/gatk/pull/6542#discussion_r405535405", "createdAt": "2020-04-08T13:43:55Z", "author": {"login": "ldgauthier"}, "path": "scripts/cnn_variant_wdl/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# gatk4-cnn-variant-filter\n+\n+### Purpose :\n+This repo provides workflows that takes advantage of GATKs CNN tool which is a deep learning \n+approach to filter variants based on Convolutional Neural Networks. \n+\n+Please read the following discussion to learn more about the CNN tool: [Deep Learning in GATK4](https://gatkforums.broadinstitute.org/gatk/discussion/10996/deep-learning-in-gatk4).\n+\n+### cram2filtered.wdl\n+This workflow takes an input CRAM/BAM to call variants with HaplotypeCaller\n+then filters the calls with the CNNVariant neural net tool using the filtering model specified.\n+\n+The site-level scores are added to the `INFO` field of the VCF. The architecture arguments,\n+`info_key` and `tensor_type` arguments MUST be in agreement (e.g. 2D models must have\n+`tensor_type` of `read_tensor` and `info_key` of `CNN_2D`, 1D models have `tensor_type` of\n+`reference` and `info_key` of `CNN_1D`). The `INFO` field key will be `1D_CNN` or `2D_CNN`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNTY0Ng==", "bodyText": "\"like TO test\"", "url": "https://github.com/broadinstitute/gatk/pull/6542#discussion_r405535646", "createdAt": "2020-04-08T13:44:12Z", "author": {"login": "ldgauthier"}, "path": "scripts/cnn_variant_wdl/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# gatk4-cnn-variant-filter\n+\n+### Purpose :\n+This repo provides workflows that takes advantage of GATKs CNN tool which is a deep learning \n+approach to filter variants based on Convolutional Neural Networks. \n+\n+Please read the following discussion to learn more about the CNN tool: [Deep Learning in GATK4](https://gatkforums.broadinstitute.org/gatk/discussion/10996/deep-learning-in-gatk4).\n+\n+### cram2filtered.wdl\n+This workflow takes an input CRAM/BAM to call variants with HaplotypeCaller\n+then filters the calls with the CNNVariant neural net tool using the filtering model specified.\n+\n+The site-level scores are added to the `INFO` field of the VCF. The architecture arguments,\n+`info_key` and `tensor_type` arguments MUST be in agreement (e.g. 2D models must have\n+`tensor_type` of `read_tensor` and `info_key` of `CNN_2D`, 1D models have `tensor_type` of\n+`reference` and `info_key` of `CNN_1D`). The `INFO` field key will be `1D_CNN` or `2D_CNN`\n+depending on the neural net architecture used for inference. The architecture arguments\n+specify pre-trained networks. New networks can be trained by the GATK tools: CNNVariantWriteTensors \n+and CNNVariantTrain. The CRAM could be generated by the [single-sample pipeline](https://github.com/gatk-workflows/gatk4-data-processing/blob/master/processing-for-variant-discovery-gatk4.wdl).\n+If you would like test the workflow on a more representative example file, use the following ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNjM4OQ==", "bodyText": "Is it worth citing specific use cases, like for custom panels , non-human, or non-Illumina sequencing?", "url": "https://github.com/broadinstitute/gatk/pull/6542#discussion_r405536389", "createdAt": "2020-04-08T13:45:16Z", "author": {"login": "ldgauthier"}, "path": "scripts/cnn_variant_wdl/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# gatk4-cnn-variant-filter\n+\n+### Purpose :\n+This repo provides workflows that takes advantage of GATKs CNN tool which is a deep learning \n+approach to filter variants based on Convolutional Neural Networks. \n+\n+Please read the following discussion to learn more about the CNN tool: [Deep Learning in GATK4](https://gatkforums.broadinstitute.org/gatk/discussion/10996/deep-learning-in-gatk4).\n+\n+### cram2filtered.wdl\n+This workflow takes an input CRAM/BAM to call variants with HaplotypeCaller\n+then filters the calls with the CNNVariant neural net tool using the filtering model specified.\n+\n+The site-level scores are added to the `INFO` field of the VCF. The architecture arguments,\n+`info_key` and `tensor_type` arguments MUST be in agreement (e.g. 2D models must have\n+`tensor_type` of `read_tensor` and `info_key` of `CNN_2D`, 1D models have `tensor_type` of\n+`reference` and `info_key` of `CNN_1D`). The `INFO` field key will be `1D_CNN` or `2D_CNN`\n+depending on the neural net architecture used for inference. The architecture arguments\n+specify pre-trained networks. New networks can be trained by the GATK tools: CNNVariantWriteTensors \n+and CNNVariantTrain. The CRAM could be generated by the [single-sample pipeline](https://github.com/gatk-workflows/gatk4-data-processing/blob/master/processing-for-variant-discovery-gatk4.wdl).\n+If you would like test the workflow on a more representative example file, use the following \n+CRAM file as input and change the scatter count from 4 to 200: gs://gatk-best-practices/cnn-h38/NA12878_NA12878_IntraRun_1_SM-G947Y_v1.cram.\n+\n+#### Requirements/expectations :\n+ - CRAM/BAM\n+ - BAM Index (if input is BAM) \n+\n+#### Output :\n+ - Filtered VCF and its index. \n+\n+### cram2model.wdl\n+This **optional** workflow is for advanced users who would like to train a CNN model for filtering variants. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNjkwNw==", "bodyText": "GATK forum link needs updating", "url": "https://github.com/broadinstitute/gatk/pull/6542#discussion_r405536907", "createdAt": "2020-04-08T13:45:58Z", "author": {"login": "ldgauthier"}, "path": "scripts/cnn_variant_wdl/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# gatk4-cnn-variant-filter\n+\n+### Purpose :\n+This repo provides workflows that takes advantage of GATKs CNN tool which is a deep learning \n+approach to filter variants based on Convolutional Neural Networks. \n+\n+Please read the following discussion to learn more about the CNN tool: [Deep Learning in GATK4](https://gatkforums.broadinstitute.org/gatk/discussion/10996/deep-learning-in-gatk4).\n+\n+### cram2filtered.wdl\n+This workflow takes an input CRAM/BAM to call variants with HaplotypeCaller\n+then filters the calls with the CNNVariant neural net tool using the filtering model specified.\n+\n+The site-level scores are added to the `INFO` field of the VCF. The architecture arguments,\n+`info_key` and `tensor_type` arguments MUST be in agreement (e.g. 2D models must have\n+`tensor_type` of `read_tensor` and `info_key` of `CNN_2D`, 1D models have `tensor_type` of\n+`reference` and `info_key` of `CNN_1D`). The `INFO` field key will be `1D_CNN` or `2D_CNN`\n+depending on the neural net architecture used for inference. The architecture arguments\n+specify pre-trained networks. New networks can be trained by the GATK tools: CNNVariantWriteTensors \n+and CNNVariantTrain. The CRAM could be generated by the [single-sample pipeline](https://github.com/gatk-workflows/gatk4-data-processing/blob/master/processing-for-variant-discovery-gatk4.wdl).\n+If you would like test the workflow on a more representative example file, use the following \n+CRAM file as input and change the scatter count from 4 to 200: gs://gatk-best-practices/cnn-h38/NA12878_NA12878_IntraRun_1_SM-G947Y_v1.cram.\n+\n+#### Requirements/expectations :\n+ - CRAM/BAM\n+ - BAM Index (if input is BAM) \n+\n+#### Output :\n+ - Filtered VCF and its index. \n+\n+### cram2model.wdl\n+This **optional** workflow is for advanced users who would like to train a CNN model for filtering variants. \n+\n+#### Requirements/expectations :\n+ - CRAM\n+ - Truth VCF and its index\n+ - Truth Confidence Interval Bed\n+\n+#### Output :\n+ - Model HD5\n+ - Model JSON\n+ - Model Plots PNG\n+\n+### run_happy.wdl\n+This **optional** evaluation and plotting workflow runs a filtering model against truth data (e.g. [NIST Genomes in a Bottle](https://github.com/genome-in-a-bottle/giab_latest_release), [Synthic Diploid Truth Set](https://github.com/lh3/CHM-eval/releases) ) and plots the accuracy.\n+\n+#### Requirements/expectations :\n+ - File of VCF Files\n+ - Truth VCF and its index\n+ - Truth Confidence Interval Bed\n+\n+#### Output :\n+ - Evaluation summary\n+ - Plots\n+\n+### Important Notes :\n+- Runtime parameters are optimized for Broad's Google Cloud Platform implementation.\n+- For help running workflows on the Google Cloud Platform or locally please\n+view the following tutorial [(How to) Execute Workflows from the gatk-workflows Git Organization](https://gatk.broadinstitute.org/hc/en-us/articles/360035530952).\n+- Please visit the [User Guide](https://gatk.broadinstitute.org/hc/en-us/categories/360002310591) site for further documentation on our workflows and tools.\n+\n+### Contact Us :\n+- The following material is provided by the Data Science Platforum group at the Broad Institute. Please direct any questions or concerns to one of our forum sites : [GATK](https://gatk.broadinstitute.org/hc/en-us/community/topics) or [Terra](https://support.terra.bio/hc/en-us/community/topics/360000500432).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzOTIxOA==", "bodyText": "@bshifaw  -- @mwalker174 has some changes in PR for PathSeq, so maybe hold off on this PR until those go in so we can make sure everything is up to date.", "url": "https://github.com/broadinstitute/gatk/pull/6542#discussion_r405539218", "createdAt": "2020-04-08T13:49:09Z", "author": {"login": "ldgauthier"}, "path": "scripts/pathseq/wdl/pathseq_pipeline_template.json", "diffHunk": "@@ -1,19 +1,41 @@\n {\n-  \"PathSeqPipelineWorkflow.sample_name\": \"sample\",\n-  \"PathSeqPipelineWorkflow.input_bam\": \"gs://my-bucket/sample.bam\",\n+  \"##_COMMENT1\": \"Inputs\",\n+  \"PathSeqPipelineWorkflow.sample_name\": \"NA12878_24RG_med.hg380.7chicken0.3\",\n+  \"PathSeqPipelineWorkflow.input_bam\": \"gs://gatk-best-practices/pathseq/contaminated-bam/NA12878_24RG_med.hg380.7chicken0.3.bam\",\n \n-  \"PathSeqPipelineWorkflow.is_host_aligned\": false,\n-  \"PathSeqPipelineWorkflow.min_clipped_read_length\": 60,\n-  \"PathSeqPipelineWorkflow.filter_duplicates\": true,\n+  \"##_COMMENT1\": \"Reference and Resources\",\n+  \"PathSeqPipelineWorkflow.kmer_file\": \"gs://gatk-best-practices/pathseq/resources/pathseq_host.bfi\",\n+  \"PathSeqPipelineWorkflow.microbe_bwa_image\": \"gs://gatk-best-practices/pathseq/resources/meats.fa.img\",\n+  \"PathSeqPipelineWorkflow.microbe_fasta\": \"gs://gatk-best-practices/pathseq/resources/meats.fa\",\n+  \"PathSeqPipelineWorkflow.microbe_fasta_dict\": \"gs://gatk-best-practices/pathseq/resources/meats.dict\",\n+  \"PathSeqPipelineWorkflow.filter_bwa_image\": \"gs://gatk-best-practices/pathseq/resources/pathseq_host.fa.img\",\n+  \"PathSeqPipelineWorkflow.taxonomy_file\": \"gs://gatk-best-practices/pathseq/resources/meats.min2k.db\",\n+  \"PathSeqPipelineWorkflow.is_host_aligned\": \"false\",\n+\n+  \"##_COMMENT1\": \"Docker\",\n+  \"PathSeqPipelineWorkflow.gatk_docker_override\": \"broadinstitute/gatk:4.0.11.0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0MDAwOQ==", "bodyText": "I'm not the best person to review M2 inputs -- maybe @fleharty or @takutosato ?  (I don't want to bother David.)", "url": "https://github.com/broadinstitute/gatk/pull/6542#discussion_r405540009", "createdAt": "2020-04-08T13:50:14Z", "author": {"login": "ldgauthier"}, "path": "scripts/m2_cromwell_tests/mutect2.inputs.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"Mutect2.gatk_docker\": \"broadinstitute/gatk:4.1.4.1\",\n+\n+  \"Mutect2.intervals\": \"gs://gatk-best-practices/somatic-b37/whole_exome_agilent_1.1_refseq_plus_3_boosters.Homo_sapiens_assembly19.baits.interval_list\",\n+  \"Mutect2.scatter_count\": 50,\n+  \"Mutect2.m2_extra_args\": \"--downsampling-stride 20 --max-reads-per-alignment-start 6 --max-suspicious-reads-per-alignment-start 6\",\n+  \"Mutect2.filter_funcotations\": \"True\",\n+  \"Mutect2.funco_reference_version\": \"hg19\",\n+  \"Mutect2.funco_data_sources_tar_gz\": \"gs://broad-public-datasets/funcotator/funcotator_dataSources.v1.6.20190124s.tar.gz\",\n+  \"Mutect2.funco_transcript_selection_list\": \"gs://broad-public-datasets/funcotator/transcriptList.exact_uniprot_matches.AKT1_CRLF2_FGFR1.txt\",\n+\n+  \"Mutect2.ref_fasta\": \"gs://gatk-best-practices/somatic-b37/Homo_sapiens_assembly19.fasta\",\n+  \"Mutect2.ref_dict\": \"gs://gatk-best-practices/somatic-b37/Homo_sapiens_assembly19.dict\",\n+  \"Mutect2.ref_fai\": \"gs://gatk-best-practices/somatic-b37/Homo_sapiens_assembly19.fasta.fai\",\n+  \"Mutect2.normal_reads\": \"gs://gatk-best-practices/somatic-b37/HCC1143_normal.bam\",\n+  \"Mutect2.normal_reads_index\": \"gs://gatk-best-practices/somatic-b37/HCC1143_normal.bai\",\n+  \"Mutect2.tumor_reads\": \"gs://gatk-best-practices/somatic-b37/HCC1143.bam\",\n+  \"Mutect2.tumor_reads_index\": \"gs://gatk-best-practices/somatic-b37/HCC1143.bai\",\n+\n+  \"Mutect2.pon\": \"gs://gatk-best-practices/somatic-b37/Mutect2-exome-panel.vcf\",\n+  \"Mutect2.pon_idx\": \"gs://gatk-best-practices/somatic-b37/Mutect2-exome-panel.vcf.idx\",\n+  \"Mutect2.gnomad\": \"gs://gatk-best-practices/somatic-b37/af-only-gnomad.raw.sites.vcf\",\n+  \"Mutect2.gnomad_idx\": \"gs://gatk-best-practices/somatic-b37/af-only-gnomad.raw.sites.vcf.idx\",\n+  \"Mutect2.variants_for_contamination\": \"gs://gatk-best-practices/somatic-b37/small_exac_common_3.vcf\",\n+  \"Mutect2.variants_for_contamination_idx\": \"gs://gatk-best-practices/somatic-b37/small_exac_common_3.vcf.idx\",\n+  \"Mutect2.realignment_index_bundle\": \"gs://gatk-test-data/mutect2/Homo_sapiens_assembly38.index_bundle\"\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87af67259301ac559f40d7ef8cba07fd9dc1b2e8"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78d6a5df4a729a3ebffeb55218a22f1f1dab5131", "author": {"user": {"login": "bshifaw", "name": "bshifaw"}}, "url": "https://github.com/broadinstitute/gatk/commit/78d6a5df4a729a3ebffeb55218a22f1f1dab5131", "committedDate": "2020-04-08T14:21:03Z", "message": "reverted changes to pathseq json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "846729f44d05b050303f3c659cdd4b0410947134", "author": {"user": {"login": "bshifaw", "name": "bshifaw"}}, "url": "https://github.com/broadinstitute/gatk/commit/846729f44d05b050303f3c659cdd4b0410947134", "committedDate": "2020-04-08T14:55:07Z", "message": "minor ReadMe corrections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bce592d1870f248e3c4f279d09cfa54d205f3ab", "author": {"user": {"login": "bshifaw", "name": "bshifaw"}}, "url": "https://github.com/broadinstitute/gatk/commit/9bce592d1870f248e3c4f279d09cfa54d205f3ab", "committedDate": "2020-04-08T17:54:54Z", "message": "updated blog link in Readme"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDk2NjMx", "url": "https://github.com/broadinstitute/gatk/pull/6542#pullrequestreview-391096631", "createdAt": "2020-04-09T20:07:54Z", "commit": {"oid": "9bce592d1870f248e3c4f279d09cfa54d205f3ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2848, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}