{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMTcyMzk0", "number": 6934, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo0MDoyOFrOE048fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzowNjoxMVrOE05olg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODk0Mzk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo0MDoyOFrOHs3TcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo0MDoyOFrOHs3TcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNTQ4OA==", "bodyText": "we need to replace the line above with this since we might have actual data in the last field:\nout = out.substring(0, out.lastIndexOf(\"|\"));", "url": "https://github.com/broadinstitute/gatk/pull/6934#discussion_r516805488", "createdAt": "2020-11-03T16:40:28Z", "author": {"login": "ahaessly"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java", "diffHunk": "@@ -75,30 +73,55 @@ public String getColumnValue(final VariantContext variant) {\n         // TODO sci notation?\n         public String getColumnValue(final VariantContext variant) {\n             String out = getAttribute(variant, GATKVCFConstants.AS_RAW_RMS_MAPPING_QUALITY_KEY, null);\n-            if (out == null) {\n-                throw new UserException(\"Cannot be missing required value for alternate_bases.AS_RAW_MQ\");\n+            String outNotAlleleSpecific = getAttribute(variant, GATKVCFConstants.RAW_MAPPING_QUALITY_WITH_DEPTH_KEY, null);\n+            String outNotAlleleSpecificAndOld = getAttribute(variant, GATKVCFConstants.RAW_RMS_MAPPING_QUALITY_DEPRECATED, null);\n+            if (out == null && outNotAlleleSpecific == null && outNotAlleleSpecificAndOld == null) {\n+                throw new UserException(\"Cannot be missing required value for alternate_bases.AS_RAW_MQ, RAW_MQandDP or RAW_MQ.\");\n             }\n-            if (!out.endsWith(\"|0.00\")) {\n-                logger.warn(\"Expected AS_RAW_MQ value to end in |0.00. value is: \" + out + \" for variant \" + variant.toString());\n+            if (out != null) {\n+                if(!out.endsWith(\"|0.00\")) {\n+                    logger.warn(\"Expected AS_RAW_MQ value to end in |0.00. value is: \" + out + \" for variant \" + variant.toString());\n+                }\n+                    out = out.substring(0, out.length() - 5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4a740a6bed6fd9db49b538347ba6504993fd443"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODk4NjQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo1MDoxM1rOHs3uiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo1MDoxM1rOHs3uiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgxMjQyNA==", "bodyText": "I didn't notice before that we were setting this to a space (here and for MQRankSum). for PTG and PID we use the empty string if we don't have a value. can we change these to the empty string too?", "url": "https://github.com/broadinstitute/gatk/pull/6934#discussion_r516812424", "createdAt": "2020-11-03T16:50:13Z", "author": {"login": "ahaessly"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java", "diffHunk": "@@ -148,8 +171,8 @@ public String getColumnValue(final VariantContext variant) {\n \n     AS_RAW_ReadPosRankSum {  // TODO -- maybe rely on 1/1 for call_GT\n         public String getColumnValue(final VariantContext variant) {\n-            String out =  getAttribute(variant, GATKVCFConstants.AS_RAW_READ_POS_RANK_SUM_KEY, \"\");\n-            if (out.contentEquals(\"||\") || out.contentEquals(\"|||\") ) {\n+            String out =  getAttribute(variant, GATKVCFConstants.AS_RAW_READ_POS_RANK_SUM_KEY, null);\n+            if (out == null || out.contentEquals(\"||\") || out.contentEquals(\"|||\") ) {\n                 out = \" \"; // TODO is this better than null?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4a740a6bed6fd9db49b538347ba6504993fd443"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTA1Njg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzowNjoxMVrOHs4aBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzowNjoxMVrOHs4aBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyMzU1Ng==", "bodyText": "formatting nit - the 5 lines above should be tabbed out one level", "url": "https://github.com/broadinstitute/gatk/pull/6934#discussion_r516823556", "createdAt": "2020-11-03T17:06:11Z", "author": {"login": "ahaessly"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java", "diffHunk": "@@ -75,31 +73,56 @@ public String getColumnValue(final VariantContext variant) {\n         // TODO sci notation?\n         public String getColumnValue(final VariantContext variant) {\n             String out = getAttribute(variant, GATKVCFConstants.AS_RAW_RMS_MAPPING_QUALITY_KEY, null);\n-            if (out == null) {\n-                throw new UserException(\"Cannot be missing required value for alternate_bases.AS_RAW_MQ\");\n+            String outNotAlleleSpecific = getAttribute(variant, GATKVCFConstants.RAW_MAPPING_QUALITY_WITH_DEPTH_KEY, null);\n+            String outNotAlleleSpecificAndOld = getAttribute(variant, GATKVCFConstants.RAW_RMS_MAPPING_QUALITY_DEPRECATED, null);\n+            if (out == null && outNotAlleleSpecific == null && outNotAlleleSpecificAndOld == null) {\n+                throw new UserException(\"Cannot be missing required value for alternate_bases.AS_RAW_MQ, RAW_MQandDP or RAW_MQ.\");\n             }\n-            if (!out.endsWith(\"|0.00\")) {\n-                logger.warn(\"Expected AS_RAW_MQ value to end in |0.00. value is: \" + out + \" for variant \" + variant.toString());\n+            if (out != null) {\n+                if(!out.endsWith(\"|0.00\")) {\n+                    logger.warn(\"Expected AS_RAW_MQ value to end in |0.00. value is: \" + out + \" for variant \" + variant.toString());\n+                }\n+                    out = out.substring(0, out.lastIndexOf(\"|\"));\n+                    String[] outValues = out.split(\"\\\\|\");\n+                    out = Arrays\n+                            .stream(outValues)\n+                            .map(val -> val.endsWith(\".00\") ? val.substring(0, val.length() - 3) : val)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dfe90713fb3eacff8938426961b4def6aa2aabe"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 838, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}