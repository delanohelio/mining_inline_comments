{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NDE4MDAz", "number": 6661, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNToyNjowNlrOEHVf5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo1NDoyM1rOEXtsXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTI3NzE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/AssemblyResultSet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNToyNjowNlrOGmpwjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzo0MDo1M1rOG8T-nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4MzI0Nw==", "bodyText": "This feels both too private for the validation to be necessary and too deep for it to be helpful.  Could you find a higher entry point to check that the variant contexts in the EventMap are all biallelic, if one does not exist already?", "url": "https://github.com/broadinstitute/gatk/pull/6661#discussion_r443183247", "createdAt": "2020-06-21T05:26:06Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/AssemblyResultSet.java", "diffHunk": "@@ -519,13 +520,32 @@ public void regenerateVariationEvents(int maxMnpDistance) {\n     }\n \n     /**\n-     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position\n+     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position and then arbitrarily by indel length followed by bases\n      * @param haplotypes the set of haplotypes to grab the VCs from\n      * @return a sorted set of variant contexts\n      */\n     private static SortedSet<VariantContext> getAllVariantContexts( final List<Haplotype> haplotypes ) {\n         // Using the cigar from each called haplotype figure out what events need to be written out in a VCF file\n-        final TreeSet<VariantContext> vcs = new TreeSet<>(Comparator.comparingInt(VariantContext::getStart));\n+        final TreeSet<VariantContext> vcs = new TreeSet<>(\n+                Comparator.comparingInt(VariantContext::getStart)\n+                        // Decide arbitrarily so as not to accidentally throw away overlapping variants\n+                .thenComparing(new Comparator<VariantContext>() {\n+                    @Override\n+                    public int compare(VariantContext v1, VariantContext v2) {\n+                        List<Allele> v1Alleles = v1.getAlleles();\n+                        List<Allele> v2Alleles = v2.getAlleles();\n+                        Utils.validate(v1Alleles.size() == 2, () -> \"Error Haplotype event map Variant Context has too many alleles: \"+v1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1427651f76872128b2d51fcd5fb5ee583ec242"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg5NTA3MQ==", "bodyText": "I pushed this up into event map construction.", "url": "https://github.com/broadinstitute/gatk/pull/6661#discussion_r465895071", "createdAt": "2020-08-05T17:40:53Z", "author": {"login": "jamesemery"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/AssemblyResultSet.java", "diffHunk": "@@ -519,13 +520,32 @@ public void regenerateVariationEvents(int maxMnpDistance) {\n     }\n \n     /**\n-     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position\n+     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position and then arbitrarily by indel length followed by bases\n      * @param haplotypes the set of haplotypes to grab the VCs from\n      * @return a sorted set of variant contexts\n      */\n     private static SortedSet<VariantContext> getAllVariantContexts( final List<Haplotype> haplotypes ) {\n         // Using the cigar from each called haplotype figure out what events need to be written out in a VCF file\n-        final TreeSet<VariantContext> vcs = new TreeSet<>(Comparator.comparingInt(VariantContext::getStart));\n+        final TreeSet<VariantContext> vcs = new TreeSet<>(\n+                Comparator.comparingInt(VariantContext::getStart)\n+                        // Decide arbitrarily so as not to accidentally throw away overlapping variants\n+                .thenComparing(new Comparator<VariantContext>() {\n+                    @Override\n+                    public int compare(VariantContext v1, VariantContext v2) {\n+                        List<Allele> v1Alleles = v1.getAlleles();\n+                        List<Allele> v2Alleles = v2.getAlleles();\n+                        Utils.validate(v1Alleles.size() == 2, () -> \"Error Haplotype event map Variant Context has too many alleles: \"+v1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4MzI0Nw=="}, "originalCommit": {"oid": "6e1427651f76872128b2d51fcd5fb5ee583ec242"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTI3OTE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/AssemblyResultSet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNTozMTowMVrOGmpxjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzoyOToxNVrOG8TloQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4MzUwMw==", "bodyText": "It seems like the if (diff == 0) block would be more clearly expressed as a second thenComparing:\nComparator.comparingInt(VariantContext::getStart)\n   .thenComparing(Comparator.comparingInt(vc -> vc.getReference().length()))\n   .thenComparing(alt-allele-based tiebreaker)", "url": "https://github.com/broadinstitute/gatk/pull/6661#discussion_r443183503", "createdAt": "2020-06-21T05:31:01Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/AssemblyResultSet.java", "diffHunk": "@@ -519,13 +520,32 @@ public void regenerateVariationEvents(int maxMnpDistance) {\n     }\n \n     /**\n-     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position\n+     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position and then arbitrarily by indel length followed by bases\n      * @param haplotypes the set of haplotypes to grab the VCs from\n      * @return a sorted set of variant contexts\n      */\n     private static SortedSet<VariantContext> getAllVariantContexts( final List<Haplotype> haplotypes ) {\n         // Using the cigar from each called haplotype figure out what events need to be written out in a VCF file\n-        final TreeSet<VariantContext> vcs = new TreeSet<>(Comparator.comparingInt(VariantContext::getStart));\n+        final TreeSet<VariantContext> vcs = new TreeSet<>(\n+                Comparator.comparingInt(VariantContext::getStart)\n+                        // Decide arbitrarily so as not to accidentally throw away overlapping variants\n+                .thenComparing(new Comparator<VariantContext>() {\n+                    @Override\n+                    public int compare(VariantContext v1, VariantContext v2) {\n+                        List<Allele> v1Alleles = v1.getAlleles();\n+                        List<Allele> v2Alleles = v2.getAlleles();\n+                        Utils.validate(v1Alleles.size() == 2, () -> \"Error Haplotype event map Variant Context has too many alleles: \"+v1);\n+                        Utils.validate(v2Alleles.size() == 2, () -> \"Error Haplotype event map Variant Context has too many alleles: \"+v2);\n+\n+                        int diff = v1.getReference().length() - v2.getReference().length();\n+                        if (diff == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1427651f76872128b2d51fcd5fb5ee583ec242"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4ODY3Mw==", "bodyText": "you are right, done.", "url": "https://github.com/broadinstitute/gatk/pull/6661#discussion_r465888673", "createdAt": "2020-08-05T17:29:15Z", "author": {"login": "jamesemery"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/AssemblyResultSet.java", "diffHunk": "@@ -519,13 +520,32 @@ public void regenerateVariationEvents(int maxMnpDistance) {\n     }\n \n     /**\n-     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position\n+     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position and then arbitrarily by indel length followed by bases\n      * @param haplotypes the set of haplotypes to grab the VCs from\n      * @return a sorted set of variant contexts\n      */\n     private static SortedSet<VariantContext> getAllVariantContexts( final List<Haplotype> haplotypes ) {\n         // Using the cigar from each called haplotype figure out what events need to be written out in a VCF file\n-        final TreeSet<VariantContext> vcs = new TreeSet<>(Comparator.comparingInt(VariantContext::getStart));\n+        final TreeSet<VariantContext> vcs = new TreeSet<>(\n+                Comparator.comparingInt(VariantContext::getStart)\n+                        // Decide arbitrarily so as not to accidentally throw away overlapping variants\n+                .thenComparing(new Comparator<VariantContext>() {\n+                    @Override\n+                    public int compare(VariantContext v1, VariantContext v2) {\n+                        List<Allele> v1Alleles = v1.getAlleles();\n+                        List<Allele> v2Alleles = v2.getAlleles();\n+                        Utils.validate(v1Alleles.size() == 2, () -> \"Error Haplotype event map Variant Context has too many alleles: \"+v1);\n+                        Utils.validate(v2Alleles.size() == 2, () -> \"Error Haplotype event map Variant Context has too many alleles: \"+v2);\n+\n+                        int diff = v1.getReference().length() - v2.getReference().length();\n+                        if (diff == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4MzUwMw=="}, "originalCommit": {"oid": "6e1427651f76872128b2d51fcd5fb5ee583ec242"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzAxMzQxOnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo1NDoyNFrOG_qF3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoyMzoyOFrOHAN7XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwMzEwMQ==", "bodyText": "Maybe future-James would want you to run these results with --add-output-vcf-command-line false so he doesn't have to change headers again.", "url": "https://github.com/broadinstitute/gatk/pull/6661#discussion_r469403101", "createdAt": "2020-08-12T16:54:24Z", "author": {"login": "ldgauthier"}, "path": "src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf", "diffHunk": "@@ -8,7 +8,7 @@\n ##FORMAT=<ID=MIN_GQ,Number=1,Type=Integer,Description=\"Minimum GQ observed within the GVCF block\">\n ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification\">\n ##FORMAT=<ID=SB,Number=4,Type=Integer,Description=\"Per-sample component statistics which comprise the Fisher's Exact Test to detect strand bias.\">\n-##GATKCommandLine=<ID=CombineGVCFs,CommandLine=\"CombineGVCFs  --output /Users/davidben/broad/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf --break-bands-at-multiples-of 5 --variant /Users/davidben/broad/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample1.vcf --variant /Users/davidben/broad/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample2.vcf --intervals 20:69485-69791 --reference /Users/davidben/broad/gatk/src/test/resources/large/human_g1k_v37.20.21.fasta --verbosity ERROR --annotation ClippingRankSumTest  --convert-to-base-pair-resolution false --input-is-somatic false --drop-somatic-filtering-annotations false --ignore-variants-starting-outside-interval false --combine-variants-distance 0 --max-distance 2147483647 --ref-padding 1 --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays  --disable-tool-default-read-filters false --disable-tool-default-annotations false --enable-all-annotations false --allow-old-rms-mapping-quality-annotation-data false\",Version=\"Unavailable\",Date=\"March 17, 2020 1:36:02 AM EDT\">\n+##GATKCommandLine=<ID=CombineGVCFs,CommandLine=\"CombineGVCFs  --output /Users/emeryj/hellbender/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf --break-bands-at-multiples-of 5 --variant /Users/emeryj/hellbender/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample1.vcf --variant /Users/emeryj/hellbender/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample2.vcf --intervals 20:69485-69791 --reference /Users/emeryj/hellbender/gatk/src/test/resources/large/human_g1k_v37.20.21.fasta --verbosity ERROR --annotation ClippingRankSumTest  --convert-to-base-pair-resolution false --input-is-somatic false --drop-somatic-filtering-annotations false --ignore-variants-starting-outside-interval false --combine-variants-distance 0 --max-distance 2147483647 --ref-padding 1 --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays  --disable-tool-default-read-filters false --disable-tool-default-annotations false --enable-all-annotations false --allow-old-rms-mapping-quality-annotation-data false\",Version=\"Unavailable\",Date=\"August 10, 2020 4:07:09 PM EDT\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e554745622bbbf42bd0b48380b4e288374bef8af"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk5MDIzNg==", "bodyText": "I assumed that you left the headers in for documentation purposes. If that is not the case then i'll get rid of them...", "url": "https://github.com/broadinstitute/gatk/pull/6661#discussion_r469990236", "createdAt": "2020-08-13T14:23:28Z", "author": {"login": "jamesemery"}, "path": "src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf", "diffHunk": "@@ -8,7 +8,7 @@\n ##FORMAT=<ID=MIN_GQ,Number=1,Type=Integer,Description=\"Minimum GQ observed within the GVCF block\">\n ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification\">\n ##FORMAT=<ID=SB,Number=4,Type=Integer,Description=\"Per-sample component statistics which comprise the Fisher's Exact Test to detect strand bias.\">\n-##GATKCommandLine=<ID=CombineGVCFs,CommandLine=\"CombineGVCFs  --output /Users/davidben/broad/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf --break-bands-at-multiples-of 5 --variant /Users/davidben/broad/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample1.vcf --variant /Users/davidben/broad/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample2.vcf --intervals 20:69485-69791 --reference /Users/davidben/broad/gatk/src/test/resources/large/human_g1k_v37.20.21.fasta --verbosity ERROR --annotation ClippingRankSumTest  --convert-to-base-pair-resolution false --input-is-somatic false --drop-somatic-filtering-annotations false --ignore-variants-starting-outside-interval false --combine-variants-distance 0 --max-distance 2147483647 --ref-padding 1 --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays  --disable-tool-default-read-filters false --disable-tool-default-annotations false --enable-all-annotations false --allow-old-rms-mapping-quality-annotation-data false\",Version=\"Unavailable\",Date=\"March 17, 2020 1:36:02 AM EDT\">\n+##GATKCommandLine=<ID=CombineGVCFs,CommandLine=\"CombineGVCFs  --output /Users/emeryj/hellbender/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf --break-bands-at-multiples-of 5 --variant /Users/emeryj/hellbender/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample1.vcf --variant /Users/emeryj/hellbender/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample2.vcf --intervals 20:69485-69791 --reference /Users/emeryj/hellbender/gatk/src/test/resources/large/human_g1k_v37.20.21.fasta --verbosity ERROR --annotation ClippingRankSumTest  --convert-to-base-pair-resolution false --input-is-somatic false --drop-somatic-filtering-annotations false --ignore-variants-starting-outside-interval false --combine-variants-distance 0 --max-distance 2147483647 --ref-padding 1 --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays  --disable-tool-default-read-filters false --disable-tool-default-annotations false --enable-all-annotations false --allow-old-rms-mapping-quality-annotation-data false\",Version=\"Unavailable\",Date=\"August 10, 2020 4:07:09 PM EDT\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwMzEwMQ=="}, "originalCommit": {"oid": "e554745622bbbf42bd0b48380b4e288374bef8af"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 990, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}