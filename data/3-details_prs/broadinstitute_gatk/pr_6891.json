{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MjQyMDkz", "number": 6891, "title": "Add loci to annotation warnings", "bodyText": "Closes #5912", "createdAt": "2020-10-15T16:49:58Z", "url": "https://github.com/broadinstitute/gatk/pull/6891", "merged": true, "mergeCommit": {"oid": "382bd41c3a8f2303b7ac4f4c76d72bc31154f773"}, "closed": true, "closedAt": "2020-11-19T15:06:34Z", "author": {"login": "ldgauthier"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS1bYggFqTUwOTYxNjgwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdddmb0AH2gAyNTA0MjQyMDkzOjViZTQyYmQ3OTU1ZWFlYmNkZGQyZDY4ZWZhZTI0ODY4M2JlOWVlZDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjE2ODAy", "url": "https://github.com/broadinstitute/gatk/pull/6891#pullrequestreview-509616802", "createdAt": "2020-10-15T17:36:33Z", "commit": {"oid": "f352db4997f5ce605cff5f8b98ce38921bd01cdc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzozNjozM1rOHiSx7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzo0MjozMlrOHiS_dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMTMyNw==", "bodyText": "Can it ever be the case that both !g.isCalled() and likelihoods == null? If so, you might want to change this else if to just if so that we can get both messages when both are true.", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r505721327", "createdAt": "2020-10-15T17:36:33Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtils.java", "diffHunk": "@@ -85,4 +91,16 @@ public static boolean isAlleleSpecific(final InfoFieldAnnotation annotation) {\n         }\n         return Arrays.asList(rawDataString.split(ALLELE_SPECIFIC_SPLIT_REGEX));\n     }\n+\n+    static String generateMissingDataWarning(final VariantContext vc, final Genotype g, final AlleleLikelihoods<GATKRead, Allele> likelihoods) {\n+        final String positionString = \"Annotation will not be calculated at position \" + vc.getContig() + \":\" + vc.getStart() +\n+                \" and possibly subsequent\";\n+        if (!g.isCalled()) {\n+            return positionString + \"; genotype for sample \" + g.getSampleName() + \" is not called\";\n+        } else if (likelihoods == null) {\n+            return positionString +  \"; alleleLikelihoodMap is null\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f352db4997f5ce605cff5f8b98ce38921bd01cdc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMjMyMQ==", "bodyText": "I think the OneShotLogger should be separate from the normal logger in this class, with a clear name like oneShotLogger, so that people don't mistakenly try to write additional messages to the OneShotLogger and wonder why they don't show up.", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r505722321", "createdAt": "2020-10-15T17:38:21Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/DepthPerSampleHC.java", "diffHunk": "@@ -53,7 +53,7 @@ public void annotate( final ReferenceContext ref,\n         Utils.nonNull(gb);\n \n         if ( likelihoods == null || !g.isCalled() ) {\n-            logger.warn(\"Annotation will not be calculated, genotype is not called or alleleLikelihoodMap is null\");\n+            logger.warn(AnnotationUtils.generateMissingDataWarning(vc, g, likelihoods));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f352db4997f5ce605cff5f8b98ce38921bd01cdc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMjU5OA==", "bodyText": "Here too I think the OneShotLogger should be separate from the normal logger, with a clear name like oneShotLogger, so that people don't mistakenly try to write additional messages to the OneShotLogger and wonder why they don't show up.", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r505722598", "createdAt": "2020-10-15T17:38:49Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/StrandBiasBySample.java", "diffHunk": "@@ -52,7 +53,7 @@\n  */\n @DocumentedFeature(groupName=HelpConstants.DOC_CAT_ANNOTATORS, groupSummary=HelpConstants.DOC_CAT_ANNOTATORS_SUMMARY, summary=\"Number of forward and reverse reads that support REF and ALT alleles (SB)\")\n public final class StrandBiasBySample extends GenotypeAnnotation implements StandardMutectAnnotation {\n-    private final static Logger logger = LogManager.getLogger(StrandBiasBySample.class);\n+    private final static OneShotLogger logger = new OneShotLogger(LogManager.getLogger(StrandBiasBySample.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f352db4997f5ce605cff5f8b98ce38921bd01cdc"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyNDc5MA==", "bodyText": "I'm not sure there's any point to piggybacking on these existing tests to \"cover\" this warning message, since it affects only the logging and not the output. It would be better, I think, to write a 2-3 line unit test for the new generateMissingDataWarning() method that just exercises the two cases of likelihoods == null and ! g.isCalled()", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r505724790", "createdAt": "2020-10-15T17:42:32Z", "author": {"login": "droazen"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerIntegrationTest.java", "diffHunk": "@@ -1128,6 +1129,7 @@ public void test100PercentContaminationNoCallsInGVCFMode() throws Exception {\n                 \"-contamination\", \"1.0\",\n                 \"--\" + AssemblyBasedCallerArgumentCollection.EMIT_REF_CONFIDENCE_LONG_NAME, ReferenceConfidenceMode.GVCF.toString(),\n                 \"--\" + AssemblyBasedCallerArgumentCollection.ALLELE_EXTENSION_LONG_NAME, \"2\",\n+                \"--\" + StandardArgumentDefinitions.VERBOSITY_NAME, Log.LogLevel.WARNING.toString()  //shows DP and SB warnings", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f352db4997f5ce605cff5f8b98ce38921bd01cdc"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNzMxODY2", "url": "https://github.com/broadinstitute/gatk/pull/6891#pullrequestreview-510731866", "createdAt": "2020-10-16T19:04:58Z", "commit": {"oid": "f30259daccf4226d3c5cbb2068d6659b6bb475bb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOTowNDo1OFrOHjMrdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOToxMDowNVrOHjM0bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY2OTk0MA==", "bodyText": "Rename logger to oneShotLogger to avoid hypothetical future confusion.", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506669940", "createdAt": "2020-10-16T19:04:58Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/InbreedingCoeff.java", "diffHunk": "@@ -72,7 +72,8 @@ public InbreedingCoeff(final File pedigreeFile){\n         Utils.nonNull(vc);\n         final GenotypesContext genotypes = getFounderGenotypes(vc);\n         if (genotypes == null || genotypes.size() < MIN_SAMPLES || !vc.isVariant()) {\n-            logger.warn(\"InbreedingCoeff will not be calculated; at least \" + MIN_SAMPLES + \" samples must have called genotypes\");\n+            logger.warn(\"InbreedingCoeff will not be calculated at position \" + vc.getContig() + \":\" + vc.getStart() +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30259daccf4226d3c5cbb2068d6659b6bb475bb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3MTE3NQ==", "bodyText": "Should this one go to the regular logger? Or a separate OneShotLogger? We don't want to suppress this just because we had a site that hit the other warning above.", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506671175", "createdAt": "2020-10-16T19:07:38Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/DepthPerSampleHC.java", "diffHunk": "@@ -68,7 +68,7 @@ public void annotate( final ReferenceContext ref,\n \n         // make sure that there's a meaningful relationship between the alleles in the likelihoods and our VariantContext\n         if ( !likelihoods.alleles().containsAll(alleles) ) {\n-            logger.warn(\"VC alleles \" + alleles + \" not a strict subset of AlleleLikelihoods alleles \" + likelihoods.alleles());\n+            oneShotLogger.warn(\"VC alleles \" + alleles + \" not a strict subset of AlleleLikelihoods alleles \" + likelihoods.alleles());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30259daccf4226d3c5cbb2068d6659b6bb475bb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3MTk1OQ==", "bodyText": "So here we have a regular logger instead of a OneShotLogger. I think we should be consistent: either have a regular logger in both StrandBiasBySample and DepthPerSampleHC, or a OneShotLogger in both places. For debuggability, it might actually be better to keep them both as regular loggers for now.", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506671959", "createdAt": "2020-10-16T19:09:24Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/StrandBiasBySample.java", "diffHunk": "@@ -65,7 +65,7 @@ public void annotate(final ReferenceContext ref,\n         Utils.nonNull(gb);\n \n         if ( likelihoods == null || !g.isCalled() ) {\n-            logger.warn(\"Annotation will not be calculated, genotype is not called or alleleLikelihoodMap is null\");\n+            logger.warn(AnnotationUtils.generateMissingDataWarning(vc, g, likelihoods));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30259daccf4226d3c5cbb2068d6659b6bb475bb"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3MjEzNg==", "bodyText": "Erm, I assume that this was added by mistake?", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506672136", "createdAt": "2020-10-16T19:09:52Z", "author": {"login": "droazen"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/copynumber/GermlineCNVCallerIntegrationTest.java", "diffHunk": "@@ -57,6 +58,7 @@ public void testCase() {\n                 .add(StandardArgumentDefinitions.OUTPUT_LONG_NAME, OUTPUT_DIR.getAbsolutePath())\n                 .add(CopyNumberStandardArgument.OUTPUT_PREFIX_LONG_NAME, \"test-germline-cnv-case\");\n         runCommandLine(argsBuilder);\n+        Assert.assertTrue(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30259daccf4226d3c5cbb2068d6659b6bb475bb"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3MjIzNg==", "bodyText": "extends GATKBaseTest", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506672236", "createdAt": "2020-10-16T19:10:05Z", "author": {"login": "droazen"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtilsUnitTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.broadinstitute.hellbender.tools.walkers.annotator;\n+\n+import htsjdk.samtools.TextCigarCodec;\n+import htsjdk.variant.variantcontext.Allele;\n+import org.broadinstitute.hellbender.testutils.ArtificialAnnotationUtils;\n+import org.broadinstitute.hellbender.testutils.VariantContextTestUtils;\n+import org.broadinstitute.hellbender.utils.genotyper.AlleleLikelihoods;\n+import org.broadinstitute.hellbender.utils.read.ArtificialReadUtils;\n+import org.broadinstitute.hellbender.utils.read.GATKRead;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+\n+import static org.testng.Assert.*;\n+\n+public class AnnotationUtilsUnitTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30259daccf4226d3c5cbb2068d6659b6bb475bb"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODI1MTc1", "url": "https://github.com/broadinstitute/gatk/pull/6891#pullrequestreview-518825175", "createdAt": "2020-10-28T15:59:21Z", "commit": {"oid": "e32a4952bbe1e0b62dd66fbdc3bbfc615730cc77"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de0dcc2f335307470097ac07801ffa454b48ed7c", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/de0dcc2f335307470097ac07801ffa454b48ed7c", "committedDate": "2020-11-13T20:46:53Z", "message": "Add more info when annotations are not output"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e32a4952bbe1e0b62dd66fbdc3bbfc615730cc77", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/e32a4952bbe1e0b62dd66fbdc3bbfc615730cc77", "committedDate": "2020-10-16T19:56:49Z", "message": "Take two"}, "afterCommit": {"oid": "de0dcc2f335307470097ac07801ffa454b48ed7c", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/de0dcc2f335307470097ac07801ffa454b48ed7c", "committedDate": "2020-11-13T20:46:53Z", "message": "Add more info when annotations are not output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be42bd7955eaebcddd2d68efae248683be9eed4", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/5be42bd7955eaebcddd2d68efae248683be9eed4", "committedDate": "2020-11-17T18:10:16Z", "message": "Import"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2522, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}