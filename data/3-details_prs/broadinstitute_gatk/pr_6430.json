{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzUwMzY0", "number": 6430, "title": "Ensure CalculateGenotypePosteriors resources have same sequence dictionary as input VCF", "bodyText": "Addresses #4383", "createdAt": "2020-01-31T20:05:24Z", "url": "https://github.com/broadinstitute/gatk/pull/6430", "merged": true, "mergeCommit": {"oid": "956fc0dc8b1e87d983d879e78b88ddc942cf0b2a"}, "closed": true, "closedAt": "2020-12-04T15:36:16Z", "author": {"login": "ldgauthier"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBiY5DAFqTM1NDE4Mzk4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdilaqMAH2gAyMzY5NzUwMzY0OmVhZmRkNTlkMTNjYjM4ZTY3OGNmZDU2ZjQxNmFmM2UwOTY5ZmQ4ZTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTgzOTg5", "url": "https://github.com/broadinstitute/gatk/pull/6430#pullrequestreview-354183989", "createdAt": "2020-02-06T03:37:47Z", "commit": {"oid": "e8032449305e250e47ed722ef190c3fc39a01b05"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMzozNzo0N1rOFmOaxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMzo0Mjo1OFrOFmOePQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNjQzNg==", "bodyText": "Is there any reason why this check is particular to CalculateGenotypePosteriors?  It seems like it could be extracted and used with every List<FeatureInput<VariantContext>> in the GATK.", "url": "https://github.com/broadinstitute/gatk/pull/6430#discussion_r375626436", "createdAt": "2020-02-06T03:37:47Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors.java", "diffHunk": "@@ -265,9 +267,22 @@\n \n     @Override\n     public void onTraversalStart() {\n+        //check references\n+        final SAMSequenceDictionary mainDict = getBestAvailableSequenceDictionary();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8032449305e250e47ed722ef190c3fc39a01b05"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNjY3OQ==", "bodyText": "Use CalculateGenotypePosteriors.SUPPORTING_CALLSETS_LONG_NAME", "url": "https://github.com/broadinstitute/gatk/pull/6430#discussion_r375626679", "createdAt": "2020-02-06T03:39:20Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriorsIntegrationTest.java", "diffHunk": "@@ -184,4 +184,17 @@ public void testBadInputFilesAreRejectedWithReasonableError(String badFile) thro\n \n         runCommandLine(args);\n     }\n+\n+    @Test(expectedExceptions = UserException.BadInput.class)\n+    public void testMismatchedReferences(){\n+        final File out = createTempFile(\"out\", \".vcf.gz\");\n+\n+        final ArgumentsBuilder args = new ArgumentsBuilder();\n+        args.addOutput(out)\n+                .addVCF(getTestFile(\"testFamilyPriors_chr20.vcf\")) //contig 20 and 21\n+                .addArgument(\"supporting-callsets\", toolsTestDir + \"/walkers/GnarlyGenotyper/sample1.vcf\");  //contigs chr21 and chr21", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8032449305e250e47ed722ef190c3fc39a01b05"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNjc3OA==", "bodyText": "The comment suggests the the file name is only half-true.", "url": "https://github.com/broadinstitute/gatk/pull/6430#discussion_r375626778", "createdAt": "2020-02-06T03:40:01Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriorsIntegrationTest.java", "diffHunk": "@@ -184,4 +184,17 @@ public void testBadInputFilesAreRejectedWithReasonableError(String badFile) thro\n \n         runCommandLine(args);\n     }\n+\n+    @Test(expectedExceptions = UserException.BadInput.class)\n+    public void testMismatchedReferences(){\n+        final File out = createTempFile(\"out\", \".vcf.gz\");\n+\n+        final ArgumentsBuilder args = new ArgumentsBuilder();\n+        args.addOutput(out)\n+                .addVCF(getTestFile(\"testFamilyPriors_chr20.vcf\")) //contig 20 and 21", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8032449305e250e47ed722ef190c3fc39a01b05"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNzI4OA==", "bodyText": "Also, do we need to be as strict as isSameDictionary()?  Maybe it's enough just to have the same sequence dictionary when subset to the contigs used for traversal.", "url": "https://github.com/broadinstitute/gatk/pull/6430#discussion_r375627288", "createdAt": "2020-02-06T03:42:48Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors.java", "diffHunk": "@@ -265,9 +267,22 @@\n \n     @Override\n     public void onTraversalStart() {\n+        //check references\n+        final SAMSequenceDictionary mainDict = getBestAvailableSequenceDictionary();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNjQzNg=="}, "originalCommit": {"oid": "e8032449305e250e47ed722ef190c3fc39a01b05"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNzMyNQ==", "bodyText": "chain this to the constructor: new ArgumentsBuilder().addOutput(out). . .", "url": "https://github.com/broadinstitute/gatk/pull/6430#discussion_r375627325", "createdAt": "2020-02-06T03:42:58Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriorsIntegrationTest.java", "diffHunk": "@@ -184,4 +184,17 @@ public void testBadInputFilesAreRejectedWithReasonableError(String badFile) thro\n \n         runCommandLine(args);\n     }\n+\n+    @Test(expectedExceptions = UserException.BadInput.class)\n+    public void testMismatchedReferences(){\n+        final File out = createTempFile(\"out\", \".vcf.gz\");\n+\n+        final ArgumentsBuilder args = new ArgumentsBuilder();\n+        args.addOutput(out)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8032449305e250e47ed722ef190c3fc39a01b05"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NzQzNTA4", "url": "https://github.com/broadinstitute/gatk/pull/6430#pullrequestreview-515743508", "createdAt": "2020-10-23T14:53:16Z", "commit": {"oid": "4c7afaa6368c6ee8b8e648e6bb4f0472631a01cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8560dd17020a7b34298602d5c6c88a305e09d553", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/8560dd17020a7b34298602d5c6c88a305e09d553", "committedDate": "2020-10-29T15:28:18Z", "message": "Ensure CalculateGenotypePosteriors resources have same sequence\ndictionary as input"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fb7749911245c6f076e758508826dbd1fc349e7", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/2fb7749911245c6f076e758508826dbd1fc349e7", "committedDate": "2020-10-29T15:30:12Z", "message": "Update ArgBuilder method name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c7afaa6368c6ee8b8e648e6bb4f0472631a01cd", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/4c7afaa6368c6ee8b8e648e6bb4f0472631a01cd", "committedDate": "2020-10-08T14:22:54Z", "message": "Generalize input feature source dictionary checks"}, "afterCommit": {"oid": "2fb7749911245c6f076e758508826dbd1fc349e7", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/2fb7749911245c6f076e758508826dbd1fc349e7", "committedDate": "2020-10-29T15:30:12Z", "message": "Update ArgBuilder method name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddafafe1629c92cbbb5fb7267490e4864cc4bd45", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/ddafafe1629c92cbbb5fb7267490e4864cc4bd45", "committedDate": "2020-11-19T15:05:42Z", "message": "Fix tests that don't validate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82b378adc6d3f5852a6baf49655cba66cce1c507", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/82b378adc6d3f5852a6baf49655cba66cce1c507", "committedDate": "2020-11-19T19:29:21Z", "message": "Whitespace betrayal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aaee60bcc47f16ab76cfe53dfbb3c594416893d", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/4aaee60bcc47f16ab76cfe53dfbb3c594416893d", "committedDate": "2020-11-19T21:55:59Z", "message": "Turn of seq dict validation in test to force replacement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0ODkwNTc3", "url": "https://github.com/broadinstitute/gatk/pull/6430#pullrequestreview-534890577", "createdAt": "2020-11-19T21:59:36Z", "commit": {"oid": "4aaee60bcc47f16ab76cfe53dfbb3c594416893d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo1OTozNlrOH2zlgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo1OTozNlrOH2zlgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIzMDMzNg==", "bodyText": "@cmnbroad the changes I made here are catching a contig length mismatch in these tests.  Given that the subsequent test, where the input VCF has no lengths defined in the dictionary, requires turning off validation, I thought that might be acceptable here, but I wanted to check with you as test author.", "url": "https://github.com/broadinstitute/gatk/pull/6430#discussion_r527230336", "createdAt": "2020-11-19T21:59:36Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/variantutils/UpdateVCFSequenceDictionaryIntegrationTest.java", "diffHunk": "@@ -36,9 +36,9 @@\n                 // can't handle CRAM - see https://github.com/samtools/htsjdk/issues/731\n                 new Object[]{ new File(testDir, \"variantsNoDict.vcf\"), new File(testDir, \"exampleBAM.bam\"), null, null, false, false},\n                 // already has a dictionary - but force a replace\n-                new Object[]{ new File(testDir, \"variantsWithDict.vcf\"), new File(testDir, \"exampleFASTA.dict\"), null, null, true, false},\n+                new Object[]{ new File(testDir, \"variantsWithDict.vcf\"), new File(testDir, \"exampleFASTA.dict\"), null, null, true, true},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aaee60bcc47f16ab76cfe53dfbb3c594416893d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b966c5898bb12ef0e11ccc9da205d09f0ec6085f", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/b966c5898bb12ef0e11ccc9da205d09f0ec6085f", "committedDate": "2020-12-02T18:31:20Z", "message": "Add/modify test to overwrite valid dictionary with a different valid\ndictionary"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eafdd59d13cb38e678cfd56f416af3e0969fd8e7", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/eafdd59d13cb38e678cfd56f416af3e0969fd8e7", "committedDate": "2020-12-03T16:06:16Z", "message": "Every.  Single.  Time."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2743, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}