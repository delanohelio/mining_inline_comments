{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNTM2MjU2", "number": 6358, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDoyMToxMFrODcWR6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDo0NzozN1rODdW6GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDUxNzUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/AssemblyRegionArgumentCollection.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDoyMToxMFrOFkW7sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzo1MDoyMlrOFlrDwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2ODc4Ng==", "bodyText": "Awesome documentation! Thanks for doing this", "url": "https://github.com/broadinstitute/gatk/pull/6358#discussion_r373668786", "createdAt": "2020-01-31T20:21:10Z", "author": {"login": "takutosato"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/AssemblyRegionArgumentCollection.java", "diffHunk": "@@ -24,19 +25,51 @@\n     public static final int DEFAULT_MAX_READS_PER_ALIGNMENT = 50;\n     public static final double DEFAULT_ACTIVE_PROB_THRESHOLD = 0.002;\n     public static final int DEFAULT_MAX_PROB_PROPAGATION_DISTANCE = 50;\n+    public static final String INDEL_PADDING_LONG_NAME = \"padding-around-indels\";\n+    public static final String SNP_PADDING_LONG_NAME = \"padding-around-snps\";\n+\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1cb3133c368f2572d9e6114ad891022c37891f5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0NDIzOA==", "bodyText": "\"within those bounds are determined...\"\nMaybe this sentence could be clearer?", "url": "https://github.com/broadinstitute/gatk/pull/6358#discussion_r374944238", "createdAt": "2020-02-04T21:53:20Z", "author": {"login": "takutosato"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/AssemblyRegionArgumentCollection.java", "diffHunk": "@@ -24,19 +25,51 @@\n     public static final int DEFAULT_MAX_READS_PER_ALIGNMENT = 50;\n     public static final double DEFAULT_ACTIVE_PROB_THRESHOLD = 0.002;\n     public static final int DEFAULT_MAX_PROB_PROPAGATION_DISTANCE = 50;\n+    public static final String INDEL_PADDING_LONG_NAME = \"padding-around-indels\";\n+    public static final String SNP_PADDING_LONG_NAME = \"padding-around-snps\";\n+\n+    /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2ODc4Ng=="}, "originalCommit": {"oid": "b1cb3133c368f2572d9e6114ad891022c37891f5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0NDMzMQ==", "bodyText": "\"excusively\" -> \"exclusively\"", "url": "https://github.com/broadinstitute/gatk/pull/6358#discussion_r374944331", "createdAt": "2020-02-04T21:53:32Z", "author": {"login": "takutosato"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/AssemblyRegionArgumentCollection.java", "diffHunk": "@@ -24,19 +25,51 @@\n     public static final int DEFAULT_MAX_READS_PER_ALIGNMENT = 50;\n     public static final double DEFAULT_ACTIVE_PROB_THRESHOLD = 0.002;\n     public static final int DEFAULT_MAX_PROB_PROPAGATION_DISTANCE = 50;\n+    public static final String INDEL_PADDING_LONG_NAME = \"padding-around-indels\";\n+    public static final String SNP_PADDING_LONG_NAME = \"padding-around-snps\";\n+\n+    /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2ODc4Ng=="}, "originalCommit": {"oid": "b1cb3133c368f2572d9e6114ad891022c37891f5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA0NzEwNg==", "bodyText": "done, done", "url": "https://github.com/broadinstitute/gatk/pull/6358#discussion_r375047106", "createdAt": "2020-02-05T03:50:22Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/AssemblyRegionArgumentCollection.java", "diffHunk": "@@ -24,19 +25,51 @@\n     public static final int DEFAULT_MAX_READS_PER_ALIGNMENT = 50;\n     public static final double DEFAULT_ACTIVE_PROB_THRESHOLD = 0.002;\n     public static final int DEFAULT_MAX_PROB_PROPAGATION_DISTANCE = 50;\n+    public static final String INDEL_PADDING_LONG_NAME = \"padding-around-indels\";\n+    public static final String SNP_PADDING_LONG_NAME = \"padding-around-snps\";\n+\n+    /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2ODc4Ng=="}, "originalCommit": {"oid": "b1cb3133c368f2572d9e6114ad891022c37891f5"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODczMTgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/engine/AssemblyRegion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMToxODo1OVrOFlj0jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMToxODo1OVrOFlj0jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyODUyNg==", "bodyText": "This is great", "url": "https://github.com/broadinstitute/gatk/pull/6358#discussion_r374928526", "createdAt": "2020-02-04T21:18:59Z", "author": {"login": "takutosato"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/AssemblyRegion.java", "diffHunk": "@@ -44,20 +44,20 @@\n     private final List<GATKRead> reads;\n \n     /**\n-     * The raw span of this assembly region, not including the region extension\n+     * The active span in which this AssemblyRegion is responsible for calling variants", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f12fb3606d823b1351a0b154481db98acf83df4"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODg2NDIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/AssemblyRegionArgumentCollection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMjowNDoxNFrOFllFXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzo1NjoxNVrOFlrH0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0OTIxNQ==", "bodyText": "I think mentioning the defaults here (snp genotyping padding = 25, indel genotyping padding = 75, assembly region padding = 100) would be helpful for the reader (i.e. me)", "url": "https://github.com/broadinstitute/gatk/pull/6358#discussion_r374949215", "createdAt": "2020-02-04T22:04:14Z", "author": {"login": "takutosato"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/AssemblyRegionArgumentCollection.java", "diffHunk": "@@ -24,19 +25,51 @@\n     public static final int DEFAULT_MAX_READS_PER_ALIGNMENT = 50;\n     public static final double DEFAULT_ACTIVE_PROB_THRESHOLD = 0.002;\n     public static final int DEFAULT_MAX_PROB_PROPAGATION_DISTANCE = 50;\n+    public static final String INDEL_PADDING_LONG_NAME = \"padding-around-indels\";\n+    public static final String SNP_PADDING_LONG_NAME = \"padding-around-snps\";\n+\n+    /**\n+     * The following parameters can be confusing due to the overlap between active regions, assembly regions, and genotyping regions,\n+     * all of which are implemented as the {@link org.broadinstitute.hellbender.engine.AssemblyRegion} class.\n+     *\n+     * An active region is a genomic interval in which we call variants.  In order to output phased calls we try to put nearby variants\n+     * in the same active region.  The size of active regions are bounded by the {@code minAssemblyRegionSize} and {@code maxAssemblyRegionSize}\n+     * parameters, and within those bounds are determined by the variants present and the {@code activeProbThreshold} and {@code maxProbPropagationDistance}.\n+     * Importantly active regions are excusively a matter of delegating responsibility for calling and have nothing to do with the size\n+     * of the span over which we perform local assembly and pair-HMM.\n+     *\n+     * An assembly region is the padded interval surrounding an active region over which we perform local assembly.  Padding is useful to phase with\n+     * any variation that may be just outside the active region, to avoid dangling ends in the assembly region, and to resolve indels.  The\n+     * {@code assemblyRegionPadding} parameter determines the number of extra bases as assembly region contains on either side of the active region\n+     * it surrounds.\n+     *\n+     * A genotyping region is an interval surrounding an active region in which we perform pair-HMM and Smith-Waterman alignment.  Even though\n+     * we ultimately only genotype and call variants within the active region, we call entire haplotypes as an intermediate step, hence the\n+     * needed for an expanded genotyping region.  The parameters {@code snpPaddingForGenotyping} and {@code indelPaddingForGenotyping} determine", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1cb3133c368f2572d9e6114ad891022c37891f5"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA0ODE0NQ==", "bodyText": "I'm nervous about hard-coding numbers -- what if they change? -- but I replaced the {@code }s with {@link }s so the reader can quickly navigate to the defaults in the IDE.", "url": "https://github.com/broadinstitute/gatk/pull/6358#discussion_r375048145", "createdAt": "2020-02-05T03:56:15Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/AssemblyRegionArgumentCollection.java", "diffHunk": "@@ -24,19 +25,51 @@\n     public static final int DEFAULT_MAX_READS_PER_ALIGNMENT = 50;\n     public static final double DEFAULT_ACTIVE_PROB_THRESHOLD = 0.002;\n     public static final int DEFAULT_MAX_PROB_PROPAGATION_DISTANCE = 50;\n+    public static final String INDEL_PADDING_LONG_NAME = \"padding-around-indels\";\n+    public static final String SNP_PADDING_LONG_NAME = \"padding-around-snps\";\n+\n+    /**\n+     * The following parameters can be confusing due to the overlap between active regions, assembly regions, and genotyping regions,\n+     * all of which are implemented as the {@link org.broadinstitute.hellbender.engine.AssemblyRegion} class.\n+     *\n+     * An active region is a genomic interval in which we call variants.  In order to output phased calls we try to put nearby variants\n+     * in the same active region.  The size of active regions are bounded by the {@code minAssemblyRegionSize} and {@code maxAssemblyRegionSize}\n+     * parameters, and within those bounds are determined by the variants present and the {@code activeProbThreshold} and {@code maxProbPropagationDistance}.\n+     * Importantly active regions are excusively a matter of delegating responsibility for calling and have nothing to do with the size\n+     * of the span over which we perform local assembly and pair-HMM.\n+     *\n+     * An assembly region is the padded interval surrounding an active region over which we perform local assembly.  Padding is useful to phase with\n+     * any variation that may be just outside the active region, to avoid dangling ends in the assembly region, and to resolve indels.  The\n+     * {@code assemblyRegionPadding} parameter determines the number of extra bases as assembly region contains on either side of the active region\n+     * it surrounds.\n+     *\n+     * A genotyping region is an interval surrounding an active region in which we perform pair-HMM and Smith-Waterman alignment.  Even though\n+     * we ultimately only genotype and call variants within the active region, we call entire haplotypes as an intermediate step, hence the\n+     * needed for an expanded genotyping region.  The parameters {@code snpPaddingForGenotyping} and {@code indelPaddingForGenotyping} determine", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0OTIxNQ=="}, "originalCommit": {"oid": "b1cb3133c368f2572d9e6114ad891022c37891f5"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTEwNjE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/AssemblyRegionArgumentCollection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDo0NzozOFrOFl6baA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDo0NzozOFrOFl6baA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI5ODkyMA==", "bodyText": "Thanks these links work great", "url": "https://github.com/broadinstitute/gatk/pull/6358#discussion_r375298920", "createdAt": "2020-02-05T14:47:38Z", "author": {"login": "takutosato"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/AssemblyRegionArgumentCollection.java", "diffHunk": "@@ -34,19 +34,21 @@\n      * all of which are implemented as the {@link org.broadinstitute.hellbender.engine.AssemblyRegion} class.\n      *\n      * An active region is a genomic interval in which we call variants.  In order to output phased calls we try to put nearby variants\n-     * in the same active region.  The size of active regions are bounded by the {@code minAssemblyRegionSize} and {@code maxAssemblyRegionSize}\n-     * parameters, and within those bounds are determined by the variants present and the {@code activeProbThreshold} and {@code maxProbPropagationDistance}.\n-     * Importantly active regions are excusively a matter of delegating responsibility for calling and have nothing to do with the size\n-     * of the span over which we perform local assembly and pair-HMM.\n+     * in the same active region.  The size of active regions are determined by the variants present, {@link AssemblyRegionArgumentCollection.activeProbThreshold},\n+     * and {@link AssemblyRegionArgumentCollection.maxProbPropagationDistance}, and are bounded by the parameters {@link AssemblyRegionArgumentCollection.minAssemblyRegionSize}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47a90c4bb9aa432f91767b3d04102aba9f97b70e"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1217, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}