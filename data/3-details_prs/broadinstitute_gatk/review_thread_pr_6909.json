{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTk2NTI4", "number": 6909, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1NjozMlrOEzcE9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1ODowMVrOEzcH0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzcyODUyOnYy", "diffSide": "RIGHT", "path": ".travis.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1NjozMlrOHqqPwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1NjozMlrOHqqPwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NDQwMg==", "bodyText": "why?", "url": "https://github.com/broadinstitute/gatk/pull/6909#discussion_r514494402", "createdAt": "2020-10-29T18:56:32Z", "author": {"login": "lbergelson"}, "path": ".travis.yml", "diffHunk": "@@ -110,14 +110,14 @@ install:\n   elif [[ $TEST_DOCKER == true ]]; then\n     echo \"Skip the install because we're doing a docker build\";\n   else\n-    ./gradlew assemble;\n-    ./gradlew installDist;\n+    sudo ./gradlew assemble;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091bafbe3134f402a9f6430af0a7933a5054ddaf"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzczMjE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/rnaseq/OverhangFixingManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1NzowN1rOHqqRsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1NzowN1rOHqqRsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NDg5Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/broadinstitute/gatk/pull/6909#discussion_r514494896", "createdAt": "2020-10-29T18:57:07Z", "author": {"login": "lbergelson"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/rnaseq/OverhangFixingManager.java", "diffHunk": "@@ -422,9 +422,11 @@ public void setMateChanged() {\n         }\n     }\n \n-    // Generates the string key to be used for\n-    private static String makeKey(String name, boolean firstOfPair, int mateStart) {\n-        return name + (firstOfPair ? 1 : 0) + mateStart;\n+    // Generates the string key to be used for storing mates that had their cigar strings changed between iterations over the input reads\n+    @VisibleForTesting\n+    static String makeKey(String name, boolean firstOfPair, int mateStart) {\n+        // NOTE: We use the '@' character here because it is explicitly forbidden for use in read names by the SAM Spec and we don't want to risk accidental matches across read pairs\n+        return name + \"@\" +  (firstOfPair ? 1 : 0) + \"@\" + mateStart;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091bafbe3134f402a9f6430af0a7933a5054ddaf"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzczNTg2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/rnaseq/OverhangFixingManagerUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1ODowMVrOHqqT7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1ODowMVrOHqqT7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NTQ2OA==", "bodyText": "@jamesemery Have you tested what happens if you add a read with a @s in the name which could recreate the problem?", "url": "https://github.com/broadinstitute/gatk/pull/6909#discussion_r514495468", "createdAt": "2020-10-29T18:58:01Z", "author": {"login": "lbergelson"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/rnaseq/OverhangFixingManagerUnitTest.java", "diffHunk": "@@ -201,6 +201,20 @@ public void testMappingReadMateRepair() {\n         Assert.assertEquals(read2.getMateStart(), 10003);\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091bafbe3134f402a9f6430af0a7933a5054ddaf"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 835, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}