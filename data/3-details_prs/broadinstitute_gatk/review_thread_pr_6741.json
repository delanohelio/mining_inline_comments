{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNTI5NTIw", "number": 6741, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1MDozNVrOEViQeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1MDo0MFrOEViQlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDE2ODI1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssemblerUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1MDozNVrOG8WUYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1MDozNVrOG8WUYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzMzQxMA==", "bodyText": "add a comment with a link to the issue here so that people have some clue about the origin of this if they ever look at this test", "url": "https://github.com/broadinstitute/gatk/pull/6741#discussion_r465933410", "createdAt": "2020-08-05T18:50:35Z", "author": {"login": "lbergelson"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssemblerUnitTest.java", "diffHunk": "@@ -48,6 +48,17 @@ public void cleanup() throws IOException {\n         seq.close();\n     }\n \n+    @Test\n+    public void testReadThreadingAssemblerDoesntModifyInputKmerList() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca43e96805cd19f4f3b86036bc1744e90c612c70"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDE2ODUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1MDo0MFrOG8WUig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMDo0MzowM1rOG8Z5IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzMzQ1MA==", "bodyText": "this is such a hard to notice mistake.  I wonder if intellij can catch this for us...\nYou could change it to\nthis.kmerSizes = kmerSizes.stream().sort().collect(Collectors.toList()) if we wanted to avoid the sort call.", "url": "https://github.com/broadinstitute/gatk/pull/6741#discussion_r465933450", "createdAt": "2020-08-05T18:50:40Z", "author": {"login": "lbergelson"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java", "diffHunk": "@@ -78,7 +78,7 @@ public ReadThreadingAssembler(final int maxAllowedPathsForReadThreadingAssembler\n                                   final int maxUnprunedVariants, final boolean useLinkedDebruijnGraphs) {\n         Utils.validateArg( maxAllowedPathsForReadThreadingAssembler >= 1, \"numBestHaplotypesPerGraph should be >= 1 but got \" + maxAllowedPathsForReadThreadingAssembler);\n         this.kmerSizes = new ArrayList<>(kmerSizes);\n-        kmerSizes.sort(Integer::compareTo);\n+        this.kmerSizes.sort(Integer::compareTo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca43e96805cd19f4f3b86036bc1744e90c612c70"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk5MTk2OQ==", "bodyText": "You know i think its actually cleaner and a little more future proof to do this in one line so i'll take that.", "url": "https://github.com/broadinstitute/gatk/pull/6741#discussion_r465991969", "createdAt": "2020-08-05T20:43:03Z", "author": {"login": "jamesemery"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java", "diffHunk": "@@ -78,7 +78,7 @@ public ReadThreadingAssembler(final int maxAllowedPathsForReadThreadingAssembler\n                                   final int maxUnprunedVariants, final boolean useLinkedDebruijnGraphs) {\n         Utils.validateArg( maxAllowedPathsForReadThreadingAssembler >= 1, \"numBestHaplotypesPerGraph should be >= 1 but got \" + maxAllowedPathsForReadThreadingAssembler);\n         this.kmerSizes = new ArrayList<>(kmerSizes);\n-        kmerSizes.sort(Integer::compareTo);\n+        this.kmerSizes.sort(Integer::compareTo);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzMzQ1MA=="}, "originalCommit": {"oid": "ca43e96805cd19f4f3b86036bc1744e90c612c70"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1032, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}