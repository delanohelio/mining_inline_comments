{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNzk3NzA4", "number": 7010, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxNzoyMzoxOVrOFNyZ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxNzoyMzoxOVrOFNyZ5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMDAxNjM2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/utils/BaseUtilsUnitTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxNzoyMzoxOVrOISMLCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxODoxNjoyOVrOISOOjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk0NDcxMw==", "bodyText": "Can you also add a call to BaseUtils.simpleBaseToBaseIndex() in this test method, to cover the other change you made?", "url": "https://github.com/broadinstitute/gatk/pull/7010#discussion_r555944713", "createdAt": "2021-01-12T17:23:19Z", "author": {"login": "droazen"}, "path": "src/test/java/org/broadinstitute/hellbender/utils/BaseUtilsUnitTest.java", "diffHunk": "@@ -27,34 +29,49 @@ public void testConvertIUPACtoN() {\n         checkBytesAreEqual(BaseUtils.convertIUPACtoN(new byte[]{'M', 'M', 'M'}, false, false), new byte[]{'N', 'N', 'N'});\n     }\n \n+    @DataProvider\n+    Iterator<Object[]> allByteValues() {\n+        final List<Object[]> bytes = new ArrayList<>(256);\n+        for (int i = 0; i < 256; i++) {\n+            final byte oneByte = (byte) i;\n+            bytes.add(new Object[]{oneByte});\n+        }\n+        return bytes.iterator();\n+    }\n+\n+    @Test(dataProvider = \"allByteValues\")\n+    public void testCanConvertAllBytes(final byte b) {\n+        BaseUtils.convertIUPACtoN(new byte[]{b, b, b}, false, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0357d17bc33157ff671708cc5fc66f6f3acceef"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk3ODM4Mg==", "bodyText": "will do.", "url": "https://github.com/broadinstitute/gatk/pull/7010#discussion_r555978382", "createdAt": "2021-01-12T18:16:29Z", "author": {"login": "yfarjoun"}, "path": "src/test/java/org/broadinstitute/hellbender/utils/BaseUtilsUnitTest.java", "diffHunk": "@@ -27,34 +29,49 @@ public void testConvertIUPACtoN() {\n         checkBytesAreEqual(BaseUtils.convertIUPACtoN(new byte[]{'M', 'M', 'M'}, false, false), new byte[]{'N', 'N', 'N'});\n     }\n \n+    @DataProvider\n+    Iterator<Object[]> allByteValues() {\n+        final List<Object[]> bytes = new ArrayList<>(256);\n+        for (int i = 0; i < 256; i++) {\n+            final byte oneByte = (byte) i;\n+            bytes.add(new Object[]{oneByte});\n+        }\n+        return bytes.iterator();\n+    }\n+\n+    @Test(dataProvider = \"allByteValues\")\n+    public void testCanConvertAllBytes(final byte b) {\n+        BaseUtils.convertIUPACtoN(new byte[]{b, b, b}, false, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk0NDcxMw=="}, "originalCommit": {"oid": "e0357d17bc33157ff671708cc5fc66f6f3acceef"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 773, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}