{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzk1NDM2", "number": 6448, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToyMTowM1rODe7hfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTo1MzoxNVrODe8K9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzU5MTAwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToyMTowM1rOFoV5QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTo1NDowM1rOFofaCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NjA4MA==", "bodyText": "It would be great to fix these typos for searchability -- tripoid > triploid", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r377846080", "createdAt": "2020-02-11T19:21:03Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -105,19 +107,20 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n         // for P=3 and N=2, the ordering is 000, 001, 011, 111, 002, 012, 112, 022, 122, 222\n         final double[] triploidRef3AllelesPL = new double[]{0, -10, -20, -30, -40, -50, -60, -70, -80, -90};\n         final double[] tripoidAltC3AllelesPL = new double[]{-10, 0, -20, -30, -40, -50, -60, -70, -80, -90};\n+        final double[] tripoidAltG3AllelesPL = new double[]{-10, -40, -70, -90, 0, -50, -80, -20, -60, -30};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAwMTkzMA==", "bodyText": "done", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r378001930", "createdAt": "2020-02-12T01:54:03Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -105,19 +107,20 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n         // for P=3 and N=2, the ordering is 000, 001, 011, 111, 002, 012, 112, 022, 122, 222\n         final double[] triploidRef3AllelesPL = new double[]{0, -10, -20, -30, -40, -50, -60, -70, -80, -90};\n         final double[] tripoidAltC3AllelesPL = new double[]{-10, 0, -20, -30, -40, -50, -60, -70, -80, -90};\n+        final double[] tripoidAltG3AllelesPL = new double[]{-10, -40, -70, -90, 0, -50, -80, -20, -60, -30};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NjA4MA=="}, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzYwNzk0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToyNjoxMFrOFoWEWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMjoxMDozNVrOFofpZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0ODkyMA==", "bodyText": "The genotypes around line 74 have bad ADs too -- Genotype acGT and Genotype ccGT", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r377848920", "createdAt": "2020-02-11T19:26:10Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -56,7 +56,9 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n         final List<Allele> AA = Arrays.asList(Aref, Aref);\n         final List<Allele> AC = Arrays.asList(Aref,C);\n         final List<Allele> CC = Arrays.asList(C,C);\n+        final List<Allele> CG = Arrays.asList(C,G);\n         final List<Allele> AG = Arrays.asList(Aref,G);\n+        final List<Allele> GG = Arrays.asList(G,G);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAwNTg2Mw==", "bodyText": "done", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r378005863", "createdAt": "2020-02-12T02:10:35Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -56,7 +56,9 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n         final List<Allele> AA = Arrays.asList(Aref, Aref);\n         final List<Allele> AC = Arrays.asList(Aref,C);\n         final List<Allele> CC = Arrays.asList(C,C);\n+        final List<Allele> CG = Arrays.asList(C,G);\n         final List<Allele> AG = Arrays.asList(Aref,G);\n+        final List<Allele> GG = Arrays.asList(G,G);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0ODkyMA=="}, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzY3MDEwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTo0NToxOFrOFoWrbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMjoxODoxOFrOFofwng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1ODkyNg==", "bodyText": "The allele balance on this AD isn't great -- can we do like {14,7} so the genotype is more obvious?", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r377858926", "createdAt": "2020-02-11T19:45:18Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -130,9 +133,9 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                 Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, C)).PL(new double[]{-10, 0, -20, -30}).AD(new int[]{10, 10}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).AD(homRef3AllelesAD).PL(triploidRef3AllelesPL).make()).make(),\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).AD(hetRefG3AllelesAD).PL(tripoidAltG3AllelesPL).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AG).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).PL(new double[]{0, -40, -70, -90}).AD(new int[]{20, 1}).GQ(400).make())});\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).PL(new double[]{-10, 0, -20, -30}).AD(new int[]{10, 11}).GQ(100).make())});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAwNzcxMA==", "bodyText": "done", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r378007710", "createdAt": "2020-02-12T02:18:18Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -130,9 +133,9 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                 Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, C)).PL(new double[]{-10, 0, -20, -30}).AD(new int[]{10, 10}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).AD(homRef3AllelesAD).PL(triploidRef3AllelesPL).make()).make(),\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).AD(hetRefG3AllelesAD).PL(tripoidAltG3AllelesPL).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AG).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).PL(new double[]{0, -40, -70, -90}).AD(new int[]{20, 1}).GQ(400).make())});\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).PL(new double[]{-10, 0, -20, -30}).AD(new int[]{10, 11}).GQ(100).make())});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1ODkyNg=="}, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzY4MTA5OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTo0ODoyN1rOFoWx-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDo1OTowMlrOFohzYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MDYwMQ==", "bodyText": "Same here -- I'd rather a 2:1 ratio on AD.  And the PLs don't look big enough.", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r377860601", "createdAt": "2020-02-11T19:48:27Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -130,9 +133,9 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                 Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, C)).PL(new double[]{-10, 0, -20, -30}).AD(new int[]{10, 10}).GQ(100).make())});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0MTE4NA==", "bodyText": "done and made the PLs more realistic", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r378041184", "createdAt": "2020-02-12T04:59:02Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -130,9 +133,9 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                 Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, C)).PL(new double[]{-10, 0, -20, -30}).AD(new int[]{10, 10}).GQ(100).make())});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MDYwMQ=="}, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzY5NzE5OnYy", "diffSide": "LEFT", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTo1MzoxNVrOFoW77Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzoxNjo0N1rOFo3ZwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MzE0OQ==", "bodyText": "What was wrong with this test case?", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r377863149", "createdAt": "2020-02-11T19:53:15Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -149,38 +152,31 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{20, 19, 0, 1}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetRefC3AllelesAD).PL(hetRefC3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AC).AD(hetRefC3AllelesAD).PL(hetRefC3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, hetRefC3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AC).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-10, 0, -20}).AD(new int[]{10, 10}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(AC).PL(new double[]{-10, 0, -20}).AD(new int[]{10, 10}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{10, 9, 10, 9}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(homC3AllelesAD).PL(homC3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(CC).AD(homC3AllelesAD).PL(homC3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, homC3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AC).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-20, -10, 0}).AD(new int[]{0, 20}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(CC).PL(new double[]{-20, -10, 0}).AD(new int[]{0, 20}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{0, 0, 20, 20}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetRefG3AllelesAD).PL(hetRefG3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AG).AD(hetRefG3AllelesAD).PL(hetRefG3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, hetRefG3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AG).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-20, 0, -50}).AD(new int[]{10, 11}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(AG).PL(new double[]{-20, 0, -50}).AD(new int[]{10, 11}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{10, 10, 11, 11}).GQ(200).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetCG3AllelesAD).PL(hetCG3AllelesPL).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNTEwNg==", "bodyText": "Based on the ADs and PLs this case was supposed to be: triallelic (A,C,G) variant with het alt (C/G) genotype, subset to just the ref and one alt allele.  But that throws an error since the genotype has both alt alleles.  Previously no error was thrown because the genotype was accidentally set as hom ref, contradicting the ADs and PLs.  The test as intended was inherently impossible.", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r378035106", "createdAt": "2020-02-12T04:26:03Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -149,38 +152,31 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{20, 19, 0, 1}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetRefC3AllelesAD).PL(hetRefC3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AC).AD(hetRefC3AllelesAD).PL(hetRefC3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, hetRefC3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AC).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-10, 0, -20}).AD(new int[]{10, 10}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(AC).PL(new double[]{-10, 0, -20}).AD(new int[]{10, 10}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{10, 9, 10, 9}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(homC3AllelesAD).PL(homC3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(CC).AD(homC3AllelesAD).PL(homC3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, homC3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AC).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-20, -10, 0}).AD(new int[]{0, 20}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(CC).PL(new double[]{-20, -10, 0}).AD(new int[]{0, 20}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{0, 0, 20, 20}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetRefG3AllelesAD).PL(hetRefG3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AG).AD(hetRefG3AllelesAD).PL(hetRefG3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, hetRefG3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AG).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-20, 0, -50}).AD(new int[]{10, 11}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(AG).PL(new double[]{-20, 0, -50}).AD(new int[]{10, 11}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{10, 10, 11, 11}).GQ(200).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetCG3AllelesAD).PL(hetCG3AllelesPL).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MzE0OQ=="}, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2NDQyNA==", "bodyText": "Got it.  You can take it out entirely then.", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r378364424", "createdAt": "2020-02-12T16:27:47Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -149,38 +152,31 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{20, 19, 0, 1}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetRefC3AllelesAD).PL(hetRefC3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AC).AD(hetRefC3AllelesAD).PL(hetRefC3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, hetRefC3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AC).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-10, 0, -20}).AD(new int[]{10, 10}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(AC).PL(new double[]{-10, 0, -20}).AD(new int[]{10, 10}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{10, 9, 10, 9}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(homC3AllelesAD).PL(homC3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(CC).AD(homC3AllelesAD).PL(homC3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, homC3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AC).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-20, -10, 0}).AD(new int[]{0, 20}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(CC).PL(new double[]{-20, -10, 0}).AD(new int[]{0, 20}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{0, 0, 20, 20}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetRefG3AllelesAD).PL(hetRefG3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AG).AD(hetRefG3AllelesAD).PL(hetRefG3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, hetRefG3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AG).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-20, 0, -50}).AD(new int[]{10, 11}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(AG).PL(new double[]{-20, 0, -50}).AD(new int[]{10, 11}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{10, 10, 11, 11}).GQ(200).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetCG3AllelesAD).PL(hetCG3AllelesPL).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MzE0OQ=="}, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5NTA3Mg==", "bodyText": "It's gone; the diff mixed-and-matched similar lines to give the appearance that part of this case remained.", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r378395072", "createdAt": "2020-02-12T17:16:47Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -149,38 +152,31 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{20, 19, 0, 1}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetRefC3AllelesAD).PL(hetRefC3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AC).AD(hetRefC3AllelesAD).PL(hetRefC3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, hetRefC3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AC).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-10, 0, -20}).AD(new int[]{10, 10}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(AC).PL(new double[]{-10, 0, -20}).AD(new int[]{10, 10}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{10, 9, 10, 9}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(homC3AllelesAD).PL(homC3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(CC).AD(homC3AllelesAD).PL(homC3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, homC3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AC).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-20, -10, 0}).AD(new int[]{0, 20}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(CC).PL(new double[]{-20, -10, 0}).AD(new int[]{0, 20}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{0, 0, 20, 20}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetRefG3AllelesAD).PL(hetRefG3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AG).AD(hetRefG3AllelesAD).PL(hetRefG3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, hetRefG3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AG).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-20, 0, -50}).AD(new int[]{10, 11}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(AG).PL(new double[]{-20, 0, -50}).AD(new int[]{10, 11}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{10, 10, 11, 11}).GQ(200).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetCG3AllelesAD).PL(hetCG3AllelesPL).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MzE0OQ=="}, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1096, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}