{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMTUxODM5", "number": 6376, "title": "Yf fix GenotypeAlleleCount's toString", "bodyText": "GenotypeAlleleCount's toString function was broken, leading to a misleading debugging information showing up in the debugger\nThis PR fixes the bug and adds tests for toString output.", "createdAt": "2020-01-15T14:00:48Z", "url": "https://github.com/broadinstitute/gatk/pull/6376", "merged": true, "mergeCommit": {"oid": "e8bccd98772016763a766e08261ba036f2636d78"}, "closed": true, "closedAt": "2020-01-20T21:38:12Z", "author": {"login": "yfarjoun"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6l79dgH2gAyMzYzMTUxODM5Ojk0MGJmNDFhMTA0ZmJjZmE0YWIzNDk5NjI2YzE3ODI5YjIwZTRmZGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8RHQlAFqTM0NTQ4MzIyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "940bf41a104fbcfa4ab3499626c17829b20e4fdc", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/gatk/commit/940bf41a104fbcfa4ab3499626c17829b20e4fdc", "committedDate": "2020-01-15T13:54:31Z", "message": "added test for toString and fixed implementation (useful for debuging...)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfea6f489852e36a449ac339d549af037084d476", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/gatk/commit/dfea6f489852e36a449ac339d549af037084d476", "committedDate": "2020-01-15T13:56:39Z", "message": "fixing linting suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5545dbfb18114eb05cda82beddf295d873b894fd", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/gatk/commit/5545dbfb18114eb05cda82beddf295d873b894fd", "committedDate": "2020-01-15T13:56:54Z", "message": "formatting lines"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDg1NTI0", "url": "https://github.com/broadinstitute/gatk/pull/6376#pullrequestreview-345085524", "createdAt": "2020-01-20T05:27:55Z", "commit": {"oid": "5545dbfb18114eb05cda82beddf295d873b894fd"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNToyNzo1NVrOFfTzXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTozMDozN1rOFfT1Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3NDYyMw==", "bodyText": "Can you avoid the multiplication * 2 at each iteration? Don't know if the VM will optimize this out. I wonder whether you could compare against sortedAlleleCounts.length but need to see the rest of the code to confirm.... too lazy\nIf you change this loop consider to skip the +2 increment on i and simple increase as it is need to access the index and count:\nfor (int i = 0; i < stop; ) {\n    int index = sortedAlleleCounts[i++];\n    int count = sortedAlleleCounts[i++];\n    ....\n}", "url": "https://github.com/broadinstitute/gatk/pull/6376#discussion_r368374623", "createdAt": "2020-01-20T05:27:55Z", "author": {"login": "vruano"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypeAlleleCounts.java", "diffHunk": "@@ -371,13 +371,12 @@ public String toUnphasedGenotypeString() {\n             return \"\";\n         }\n         final StringBuilder sb = new StringBuilder(distinctAlleleCount * 3);\n-        for (int i = 0; i < distinctAlleleCount; i += 2) {\n+        for (int i = 0; i < distinctAlleleCount * 2; i += 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5545dbfb18114eb05cda82beddf295d873b894fd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3NTEyMw==", "bodyText": "Since counts is guaranteed not to be 0, then the string composition could be  rather:\nsb.append(index);\nfor (int j = 1; j < count; j++) {\n    sb.append('/').append(index);\n}\nreturn sb.toString();", "url": "https://github.com/broadinstitute/gatk/pull/6376#discussion_r368375123", "createdAt": "2020-01-20T05:30:37Z", "author": {"login": "vruano"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypeAlleleCounts.java", "diffHunk": "@@ -371,13 +371,12 @@ public String toUnphasedGenotypeString() {\n             return \"\";\n         }\n         final StringBuilder sb = new StringBuilder(distinctAlleleCount * 3);\n-        for (int i = 0; i < distinctAlleleCount; i += 2) {\n+        for (int i = 0; i < distinctAlleleCount * 2; i += 2) {\n             final int alleleIndex = sortedAlleleCounts[i];\n             final int alleleCount = sortedAlleleCounts[i + 1];\n             for (int j = 0; j < alleleCount; j++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5545dbfb18114eb05cda82beddf295d873b894fd"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebebe1ebbb97fbd1968184a23ceb830f15858c56", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/gatk/commit/ebebe1ebbb97fbd1968184a23ceb830f15858c56", "committedDate": "2020-01-20T15:56:21Z", "message": "- responded to review suggestions\n- made tests more explicit\n- added some more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9f06b4b21a70a09124b294c2a1add98ec111156", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/gatk/commit/a9f06b4b21a70a09124b294c2a1add98ec111156", "committedDate": "2020-01-20T15:57:43Z", "message": "- agreed with IntelliJ suggestions."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NDgzMjIw", "url": "https://github.com/broadinstitute/gatk/pull/6376#pullrequestreview-345483220", "createdAt": "2020-01-20T18:44:28Z", "commit": {"oid": "a9f06b4b21a70a09124b294c2a1add98ec111156"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxODo0NDoyOFrOFfmw9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxODo0NjoxN1rOFfmzFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY4NTMwMg==", "bodyText": "index is 0 and 1, count is 1 and 1. ... (index=0, count=1) ... then (index=1, count=1). count is always 1 or larger or that is my understanding....\nat least in the example that you are giving count for both alleles (0 and 1) is 1 (the second number of the pair. (0, 1, 1, 1) is decomposed into (0, 1) and (1, 1)", "url": "https://github.com/broadinstitute/gatk/pull/6376#discussion_r368685302", "createdAt": "2020-01-20T18:44:28Z", "author": {"login": "vruano"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypeAlleleCounts.java", "diffHunk": "@@ -371,13 +371,12 @@ public String toUnphasedGenotypeString() {\n             return \"\";\n         }\n         final StringBuilder sb = new StringBuilder(distinctAlleleCount * 3);\n-        for (int i = 0; i < distinctAlleleCount; i += 2) {\n+        for (int i = 0; i < distinctAlleleCount * 2; i += 2) {\n             final int alleleIndex = sortedAlleleCounts[i];\n             final int alleleCount = sortedAlleleCounts[i + 1];\n             for (int j = 0; j < alleleCount; j++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3NTEyMw=="}, "originalCommit": {"oid": "5545dbfb18114eb05cda82beddf295d873b894fd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY4NTg0Nw==", "bodyText": "In any case you could leave the code as it is... just noticed this optimization opportunity near your change so I suggested the edit but it has no concern with fix, so.", "url": "https://github.com/broadinstitute/gatk/pull/6376#discussion_r368685847", "createdAt": "2020-01-20T18:46:17Z", "author": {"login": "vruano"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypeAlleleCounts.java", "diffHunk": "@@ -371,13 +371,12 @@ public String toUnphasedGenotypeString() {\n             return \"\";\n         }\n         final StringBuilder sb = new StringBuilder(distinctAlleleCount * 3);\n-        for (int i = 0; i < distinctAlleleCount; i += 2) {\n+        for (int i = 0; i < distinctAlleleCount * 2; i += 2) {\n             final int alleleIndex = sortedAlleleCounts[i];\n             final int alleleCount = sortedAlleleCounts[i + 1];\n             for (int j = 0; j < alleleCount; j++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3NTEyMw=="}, "originalCommit": {"oid": "5545dbfb18114eb05cda82beddf295d873b894fd"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2919, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}