{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NjcxODAx", "number": 6406, "title": "Test data to illustrate bug in GenotypeGVCFs.removeNonRefAlleles()", "bodyText": "@davidbenjamin @ldgauthier: in #6263 you added --force-output-intervals to GenotypeGVCFs, which forces the tool to output variants based on a whitelist of sites.  I believe this exposed a pre-existing, not related bug.  GenotypeGVCFsEngine.removeNonRefAlleles() currently assumes the input has only one alternate allele.  If the gVCF has a site with 3 or more alleles, GenotypeGVCFsEngine.removeNonRefAlleles() isnt going to work as intended.  If any NON_REF is found, it should remove ALT allele header lines and return the new VC with NON_REF removed.  It currently only does this if \"newAlleles.size() == 1\", which I assume is a proxy for not having alternates.  That assumes the input had only 2 alleles, which isnt safe.  This PR includes a fix for this.\nWhen I started investigating this I made a repro case (the attached VCF) and test case in GenotypeGVCFsIntegration test that uses --force-output-intervals to illustrate this.  Now that the actual problem is clearer, I could understand if you dont want to add more test data to GATK.\nI tried to write a unit test for removeNonRefAlleles(), but it didnt seem like it was going to be easy to make a new instance of GenotypeGVCFsEngine.", "createdAt": "2020-01-22T05:29:28Z", "url": "https://github.com/broadinstitute/gatk/pull/6406", "merged": true, "mergeCommit": {"oid": "46ef721ed435584f99f08d8082edd1f686b0bd13"}, "closed": true, "closedAt": "2020-02-05T16:09:59Z", "author": {"login": "bbimber"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb86Vv3AFqTM0NjgxMzcyNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBYcR4gFqTM1Mzg0MTQwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2ODEzNzI3", "url": "https://github.com/broadinstitute/gatk/pull/6406#pullrequestreview-346813727", "createdAt": "2020-01-22T18:39:58Z", "commit": {"oid": "b1115baedfe2bf5497b6fd314a7dadd0760f0dd0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODozOTo1OFrOFgmx9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODo0Mzo0OVrOFgm5nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczNDEzNQ==", "bodyText": "Should this comment instead say \"no site has output\"?", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r369734135", "createdAt": "2020-01-22T18:39:58Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsIntegrationTest.java", "diffHunk": "@@ -562,6 +562,43 @@ public void testForceOutput() {\n         Assert.assertTrue(actualVC2.get(1).isPolymorphicInSamples());\n     }\n \n+    @Test\n+    public void testForceOutputNonRef() {\n+        final File input = getTestFile(\"ForceOutputNonRef.g.vcf\");\n+        final File output1 = createTempFile(\"output\", \".vcf\");\n+\n+        final ArgumentsBuilder argsWithAllSites = new ArgumentsBuilder()\n+                .addReference(b37Reference)\n+                .addVCF(input)\n+                .addBooleanArgument(RMSMappingQuality.RMS_MAPPING_QUALITY_OLD_BEHAVIOR_OVERRIDE_ARGUMENT, true)\n+                .addOutput(output1);\n+\n+        Utils.resetRandomGenerator();\n+        runCommandLine(argsWithAllSites);\n+\n+        final List<VariantContext> actualVC = VariantContextTestUtils.getVariantContexts(output1);\n+\n+        // every site has output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1115baedfe2bf5497b6fd314a7dadd0760f0dd0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczNDg1Mw==", "bodyText": "Add a comment that this checks that the non-ref is removed even for multiple alt alleles", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r369734853", "createdAt": "2020-01-22T18:41:22Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsIntegrationTest.java", "diffHunk": "@@ -562,6 +562,43 @@ public void testForceOutput() {\n         Assert.assertTrue(actualVC2.get(1).isPolymorphicInSamples());\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1115baedfe2bf5497b6fd314a7dadd0760f0dd0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczNTc5Mg==", "bodyText": "Could you also force output at the site 1051053, where there is a * allele?", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r369735792", "createdAt": "2020-01-22T18:43:12Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsIntegrationTest.java", "diffHunk": "@@ -562,6 +562,43 @@ public void testForceOutput() {\n         Assert.assertTrue(actualVC2.get(1).isPolymorphicInSamples());\n     }\n \n+    @Test\n+    public void testForceOutputNonRef() {\n+        final File input = getTestFile(\"ForceOutputNonRef.g.vcf\");\n+        final File output1 = createTempFile(\"output\", \".vcf\");\n+\n+        final ArgumentsBuilder argsWithAllSites = new ArgumentsBuilder()\n+                .addReference(b37Reference)\n+                .addVCF(input)\n+                .addBooleanArgument(RMSMappingQuality.RMS_MAPPING_QUALITY_OLD_BEHAVIOR_OVERRIDE_ARGUMENT, true)\n+                .addOutput(output1);\n+\n+        Utils.resetRandomGenerator();\n+        runCommandLine(argsWithAllSites);\n+\n+        final List<VariantContext> actualVC = VariantContextTestUtils.getVariantContexts(output1);\n+\n+        // every site has output\n+        Assert.assertEquals(actualVC.size(), 0);\n+\n+        final File output2 = createTempFile(\"output\", \".vcf\");\n+\n+        final ArgumentsBuilder argsWithSpecificSites = new ArgumentsBuilder()\n+                .addReference(b37Reference)\n+                .addVCF(input)\n+                .addArgument(GenotypeGVCFs.FORCE_OUTPUT_INTERVALS_NAME, \"1:1048236-1048236\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1115baedfe2bf5497b6fd314a7dadd0760f0dd0"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczNjA5NQ==", "bodyText": "Could you doctor this VCF to include a site with two non-symbolic alt alleles in addition to the NON-REF?", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r369736095", "createdAt": "2020-01-22T18:43:49Z", "author": {"login": "davidbenjamin"}, "path": "src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/ForceOutputNonRef.g.vcf", "diffHunk": "@@ -0,0 +1,142 @@\n+##fileformat=VCFv4.2\n+##ALT=<ID=NON_REF,Description=\"Represents any possible alternative allele at this location\">\n+##FILTER=<ID=LowQual,Description=\"Low quality\">\n+##FORMAT=<ID=AD,Number=R,Type=Integer,Description=\"Allelic depths for the ref and alt alleles in the order listed\">\n+##FORMAT=<ID=DP,Number=1,Type=Integer,Description=\"Approximate read depth (reads with MQ=255 or with bad mates are filtered)\">\n+##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=\"Genotype Quality\">\n+##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n+##FORMAT=<ID=MIN_DP,Number=1,Type=Integer,Description=\"Minimum DP observed within the GVCF block\">\n+##FORMAT=<ID=PGT,Number=1,Type=String,Description=\"Physical phasing haplotype information, describing how the alternate alleles are phased in relation to one another\">\n+##FORMAT=<ID=PID,Number=1,Type=String,Description=\"Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing group\">\n+##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification\">\n+##FORMAT=<ID=SB,Number=4,Type=Integer,Description=\"Per-sample component statistics which comprise the Fisher's Exact Test to detect strand bias.\">\n+##GATKCommandLine.CombineGVCFs=<ID=CombineGVCFs,Version=3.7-0-g56f2c1a,Date=\"Fri Nov 29 11:06:41 PST 2019\",Epoch=1575054401520,CommandLineOptions=\"analysis_type=CombineGVCFs input_file=[] showFullBamList=false read_buffer_size=null read_filter=[] disable_read_filter=[] intervals=null excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/home/groups/prime-seq/production/Shared/@files/.referenceLibraries/80/80_Mmul_8.0.1.fasta nonDeterministicRandomSeed=false disableDithering=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 baq=OFF baqGapOpenPenalty=40.0 refactor_NDN_cigar_string=false fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false useOriginalQualities=false defaultBaseQualities=-1 performanceLog=null BQSR=null quantize_quals=0 static_quantized_quals=null round_down_quantized=false disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 globalQScorePrior=-1.0 secondsBetweenProgressUpdates=10 validation_strictness=SILENT remove_program_records=false keep_program_records=false sample_rename_mapping_file=null unsafe=null disable_auto_index_creation_and_locking_when_reading_rods=false no_cmdline_in_header=false sites_only=false never_trim_vcf_format_field=false bcf=false bam_compression=null simplifyBAM=false disable_bam_indexing=false generate_md5=false num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false variant_index_type=DYNAMIC_SEEK variant_index_parameter=-1 reference_window_stop=0 phone_home= gatk_key=null tag=NA logging_level=INFO log_to_file=null help=false version=false annotation=[AS_RMSMappingQuality] dbsnp=(RodBinding name= source=UNBOUND) variant=[(RodBindingCollection [(RodBinding name=variant source=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/BCM-NEPRC-34595.g.vcf.gz)]), (RodBindingCollection [(RodBinding name=variant2 source=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/BCM-NEPRC-34601.g.vcf.gz)]), (RodBindingCollection [(RodBinding name=variant3 source=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/BCM-NEPRC-34598.g.vcf.gz)]), (RodBindingCollection [(RodBinding name=variant4 source=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/BCM-NEPRC-34600.g.vcf.gz)]), (RodBindingCollection [(RodBinding name=variant5 source=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/BCM-NEPRC-34599.g.vcf.gz)]), (RodBindingCollection [(RodBinding name=variant6 source=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/BCM-NEPRC-34593.g.vcf.gz)]), (RodBindingCollection [(RodBinding name=variant7 source=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/BCM-NEPRC-34597.g.vcf.gz)]), (RodBindingCollection [(RodBinding name=variant8 source=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/BCM-NEPRC-34596.g.vcf.gz)]), (RodBindingCollection [(RodBinding name=variant9 source=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/BCM-NEPRC-34594.g.vcf.gz)]), (RodBindingCollection [(RodBinding name=variant10 source=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/BCM-NEPRC-34602.g.vcf.gz)])] out=/home/exacloud/lustre1/prime-seq/workDir/c40f485f-f505-1037-ada9-f8f3fc863e9f/SequenceO.work/NEPRC_WXS_10.g.vcf.gz convertToBasePairResolution=false breakBandsAtMultiplesOf=0 filter_reads_with_N_cigar=false filter_mismatching_base_and_quals=false filter_bases_not_stored=false\">\n+##GATKCommandLine.HaplotypeCaller=<ID=HaplotypeCaller,Version=3.7-0-g56f2c1a,Date=\"Fri Feb 01 00:34:45 PST 2019\",Epoch=1549010085977,CommandLineOptions=\"analysis_type=HaplotypeCaller input_file=[/home/exacloud/lustre1/prime-seq/workDir/493375bc-0590-1037-a9b4-2143bcd26ec9/SequenceA.work/SRR1975642_1/Alignment/BCM-NEPRC-34594.bam] showFullBamList=false read_buffer_size=null read_filter=[] disable_read_filter=[] intervals=null excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/home/groups/prime-seq/production/Shared/@files/.referenceLibraries/80/80_Mmul_8.0.1.fasta nonDeterministicRandomSeed=false disableDithering=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=500 baq=OFF baqGapOpenPenalty=40.0 refactor_NDN_cigar_string=false fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false useOriginalQualities=false defaultBaseQualities=-1 performanceLog=null BQSR=null quantize_quals=0 static_quantized_quals=null round_down_quantized=false disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 globalQScorePrior=-1.0 secondsBetweenProgressUpdates=10 validation_strictness=SILENT remove_program_records=false keep_program_records=false sample_rename_mapping_file=null unsafe=null disable_auto_index_creation_and_locking_when_reading_rods=false no_cmdline_in_header=false sites_only=false never_trim_vcf_format_field=false bcf=false bam_compression=null simplifyBAM=false disable_bam_indexing=false generate_md5=false num_threads=1 num_cpu_threads_per_data_thread=12 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false variant_index_type=DYNAMIC_SEEK variant_index_parameter=-1 reference_window_stop=0 phone_home= gatk_key=null tag=NA logging_level=INFO log_to_file=null help=false version=false likelihoodCalculationEngine=PairHMM heterogeneousKmerSizeResolution=COMBO_MIN dbsnp=(RodBinding name= source=UNBOUND) dontTrimActiveRegions=false maxDiscARExtension=25 maxGGAARExtension=300 paddingAroundIndels=150 paddingAroundSNPs=20 comp=[] annotation=[DepthPerSampleHC, HomopolymerRun, StrandBiasBySample] excludeAnnotation=[ChromosomeCounts, FisherStrand, StrandOddsRatio, QualByDepth] group=[StandardAnnotation, StandardHCAnnotation] debug=false useFilteredReadsForAnnotations=false emitRefConfidence=GVCF bamOutput=null bamWriterType=CALLED_HAPLOTYPES emitDroppedReads=false disableOptimizations=false annotateNDA=false useNewAFCalculator=true heterozygosity=0.001 indel_heterozygosity=1.25E-4 heterozygosity_stdev=0.01 standard_min_confidence_threshold_for_calling=-0.0 standard_min_confidence_threshold_for_emitting=30.0 max_alternate_alleles=12 max_genotype_count=1024 max_num_PL_values=100 input_prior=[] sample_ploidy=2 genotyping_mode=DISCOVERY alleles=(RodBinding name= source=UNBOUND) contamination_fraction_to_filter=0.0 contamination_fraction_per_sample_file=null p_nonref_model=null exactcallslog=null output_mode=EMIT_VARIANTS_ONLY allSitePLs=true gcpHMM=10 pair_hmm_implementation=VECTOR_LOGLESS_CACHING pair_hmm_sub_implementation=ENABLE_ALL always_load_vector_logless_PairHMM_lib=false phredScaledGlobalReadMismappingRate=45 noFpga=false sample_name=null kmerSize=[10, 25] dontIncreaseKmerSizesForCycles=false allowNonUniqueKmersInRef=false numPruningSamples=1 recoverDanglingHeads=false doNotRecoverDanglingBranches=false minDanglingBranchLength=4 consensus=false maxNumHaplotypesInPopulation=128 errorCorrectKmers=false minPruning=2 debugGraphTransformations=false allowCyclesInKmerGraphToGeneratePaths=false graphOutput=null kmerLengthForReadErrorCorrection=25 minObservationsForKmerToBeSolid=20 GVCFGQBands=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 80, 90, 99] indelSizeToEliminateInRefModel=10 min_base_quality_score=10 includeUmappedReads=false useAllelesTrigger=false doNotRunPhysicalPhasing=false keepRG=null justDetermineActiveRegions=false dontGenotype=false dontUseSoftClippedBases=false captureAssemblyFailureBAM=false errorCorrectReads=false pcr_indel_model=CONSERVATIVE maxReadsInRegionPerSample=10000 minReadsPerAlignmentStart=10 mergeVariantsViaLD=false activityProfileOut=null activeRegionOut=null activeRegionIn=null activeRegionExtension=null forceActive=false activeRegionMaxSize=null bandPassSigma=null maxReadsInMemoryPerSample=30000 maxTotalReadsInMemory=10000000 maxProbPropagationDistance=50 activeProbabilityThreshold=0.002 min_mapping_quality_score=20 filter_reads_with_N_cigar=false filter_mismatching_base_and_quals=false filter_bases_not_stored=false\">\n+##GATKCommandLine=<ID=SelectVariants,CommandLine=\"SelectVariants  --output NEPRC.subset.g.vcf --variant /home/groups/prime-seq/production/Internal/ColonyData/51/@files/sequenceOutputPipeline/SequenceOutput_2019-11-29_11-04-28/NEPRC_WXS_10.g.vcf.gz --intervals intervals.intervals  --invertSelect false --exclude-non-variants false --exclude-filtered false --preserve-alleles false --remove-unused-alternates false --restrict-alleles-to ALL --keep-original-ac false --keep-original-dp false --mendelian-violation false --invert-mendelian-violation false --mendelian-violation-qual-threshold 0.0 --select-random-fraction 0.0 --remove-fraction-genotypes 0.0 --fully-decode false --max-indel-size 2147483647 --min-indel-size 0 --max-filtered-genotypes 2147483647 --min-filtered-genotypes 0 --max-fraction-filtered-genotypes 1.0 --min-fraction-filtered-genotypes 0.0 --max-nocall-number 2147483647 --max-nocall-fraction 1.0 --set-filtered-gt-to-nocall false --allow-nonoverlapping-command-line-samples false --suppress-reference-path false --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --verbosity INFO --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays  --disable-tool-default-read-filters false\",Version=\"4.1.4.0-27-g3fb979f-SNAPSHOT\",Date=\"January 21, 2020 8:40:46 PM PST\">\n+##GVCFBlock0-1=minGQ=0(inclusive),maxGQ=1(exclusive)\n+##GVCFBlock1-2=minGQ=1(inclusive),maxGQ=2(exclusive)\n+##GVCFBlock10-11=minGQ=10(inclusive),maxGQ=11(exclusive)\n+##GVCFBlock11-12=minGQ=11(inclusive),maxGQ=12(exclusive)\n+##GVCFBlock12-13=minGQ=12(inclusive),maxGQ=13(exclusive)\n+##GVCFBlock13-14=minGQ=13(inclusive),maxGQ=14(exclusive)\n+##GVCFBlock14-15=minGQ=14(inclusive),maxGQ=15(exclusive)\n+##GVCFBlock15-16=minGQ=15(inclusive),maxGQ=16(exclusive)\n+##GVCFBlock16-17=minGQ=16(inclusive),maxGQ=17(exclusive)\n+##GVCFBlock17-18=minGQ=17(inclusive),maxGQ=18(exclusive)\n+##GVCFBlock18-19=minGQ=18(inclusive),maxGQ=19(exclusive)\n+##GVCFBlock19-20=minGQ=19(inclusive),maxGQ=20(exclusive)\n+##GVCFBlock2-3=minGQ=2(inclusive),maxGQ=3(exclusive)\n+##GVCFBlock20-21=minGQ=20(inclusive),maxGQ=21(exclusive)\n+##GVCFBlock21-22=minGQ=21(inclusive),maxGQ=22(exclusive)\n+##GVCFBlock22-23=minGQ=22(inclusive),maxGQ=23(exclusive)\n+##GVCFBlock23-24=minGQ=23(inclusive),maxGQ=24(exclusive)\n+##GVCFBlock24-25=minGQ=24(inclusive),maxGQ=25(exclusive)\n+##GVCFBlock25-26=minGQ=25(inclusive),maxGQ=26(exclusive)\n+##GVCFBlock26-27=minGQ=26(inclusive),maxGQ=27(exclusive)\n+##GVCFBlock27-28=minGQ=27(inclusive),maxGQ=28(exclusive)\n+##GVCFBlock28-29=minGQ=28(inclusive),maxGQ=29(exclusive)\n+##GVCFBlock29-30=minGQ=29(inclusive),maxGQ=30(exclusive)\n+##GVCFBlock3-4=minGQ=3(inclusive),maxGQ=4(exclusive)\n+##GVCFBlock30-31=minGQ=30(inclusive),maxGQ=31(exclusive)\n+##GVCFBlock31-32=minGQ=31(inclusive),maxGQ=32(exclusive)\n+##GVCFBlock32-33=minGQ=32(inclusive),maxGQ=33(exclusive)\n+##GVCFBlock33-34=minGQ=33(inclusive),maxGQ=34(exclusive)\n+##GVCFBlock34-35=minGQ=34(inclusive),maxGQ=35(exclusive)\n+##GVCFBlock35-36=minGQ=35(inclusive),maxGQ=36(exclusive)\n+##GVCFBlock36-37=minGQ=36(inclusive),maxGQ=37(exclusive)\n+##GVCFBlock37-38=minGQ=37(inclusive),maxGQ=38(exclusive)\n+##GVCFBlock38-39=minGQ=38(inclusive),maxGQ=39(exclusive)\n+##GVCFBlock39-40=minGQ=39(inclusive),maxGQ=40(exclusive)\n+##GVCFBlock4-5=minGQ=4(inclusive),maxGQ=5(exclusive)\n+##GVCFBlock40-41=minGQ=40(inclusive),maxGQ=41(exclusive)\n+##GVCFBlock41-42=minGQ=41(inclusive),maxGQ=42(exclusive)\n+##GVCFBlock42-43=minGQ=42(inclusive),maxGQ=43(exclusive)\n+##GVCFBlock43-44=minGQ=43(inclusive),maxGQ=44(exclusive)\n+##GVCFBlock44-45=minGQ=44(inclusive),maxGQ=45(exclusive)\n+##GVCFBlock45-46=minGQ=45(inclusive),maxGQ=46(exclusive)\n+##GVCFBlock46-47=minGQ=46(inclusive),maxGQ=47(exclusive)\n+##GVCFBlock47-48=minGQ=47(inclusive),maxGQ=48(exclusive)\n+##GVCFBlock48-49=minGQ=48(inclusive),maxGQ=49(exclusive)\n+##GVCFBlock49-50=minGQ=49(inclusive),maxGQ=50(exclusive)\n+##GVCFBlock5-6=minGQ=5(inclusive),maxGQ=6(exclusive)\n+##GVCFBlock50-51=minGQ=50(inclusive),maxGQ=51(exclusive)\n+##GVCFBlock51-52=minGQ=51(inclusive),maxGQ=52(exclusive)\n+##GVCFBlock52-53=minGQ=52(inclusive),maxGQ=53(exclusive)\n+##GVCFBlock53-54=minGQ=53(inclusive),maxGQ=54(exclusive)\n+##GVCFBlock54-55=minGQ=54(inclusive),maxGQ=55(exclusive)\n+##GVCFBlock55-56=minGQ=55(inclusive),maxGQ=56(exclusive)\n+##GVCFBlock56-57=minGQ=56(inclusive),maxGQ=57(exclusive)\n+##GVCFBlock57-58=minGQ=57(inclusive),maxGQ=58(exclusive)\n+##GVCFBlock58-59=minGQ=58(inclusive),maxGQ=59(exclusive)\n+##GVCFBlock59-60=minGQ=59(inclusive),maxGQ=60(exclusive)\n+##GVCFBlock6-7=minGQ=6(inclusive),maxGQ=7(exclusive)\n+##GVCFBlock60-70=minGQ=60(inclusive),maxGQ=70(exclusive)\n+##GVCFBlock7-8=minGQ=7(inclusive),maxGQ=8(exclusive)\n+##GVCFBlock70-80=minGQ=70(inclusive),maxGQ=80(exclusive)\n+##GVCFBlock8-9=minGQ=8(inclusive),maxGQ=9(exclusive)\n+##GVCFBlock80-90=minGQ=80(inclusive),maxGQ=90(exclusive)\n+##GVCFBlock9-10=minGQ=9(inclusive),maxGQ=10(exclusive)\n+##GVCFBlock90-99=minGQ=90(inclusive),maxGQ=99(exclusive)\n+##GVCFBlock99-100=minGQ=99(inclusive),maxGQ=100(exclusive)\n+##INFO=<ID=AC,Number=A,Type=Integer,Description=\"Allele count in genotypes, for each ALT allele, in the same order as listed\">\n+##INFO=<ID=AF,Number=A,Type=Float,Description=\"Allele Frequency, for each ALT allele, in the same order as listed\">\n+##INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total number of alleles in called genotypes\">\n+##INFO=<ID=BaseQRankSum,Number=1,Type=Float,Description=\"Z-score from Wilcoxon rank sum test of Alt Vs. Ref base qualities\">\n+##INFO=<ID=ClippingRankSum,Number=1,Type=Float,Description=\"Z-score From Wilcoxon rank sum test of Alt vs. Ref number of hard clipped bases\">\n+##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Approximate read depth; some reads may have been filtered\">\n+##INFO=<ID=DS,Number=0,Type=Flag,Description=\"Were any of the samples downsampled?\">\n+##INFO=<ID=END,Number=1,Type=Integer,Description=\"Stop position of the interval\">\n+##INFO=<ID=ExcessHet,Number=1,Type=Float,Description=\"Phred-scaled p-value for exact test of excess heterozygosity\">\n+##INFO=<ID=HRun,Number=1,Type=Integer,Description=\"Largest Contiguous Homopolymer Run of Variant Allele In Either Direction\">\n+##INFO=<ID=HaplotypeScore,Number=1,Type=Float,Description=\"Consistency of the site with at most two segregating haplotypes\">\n+##INFO=<ID=InbreedingCoeff,Number=1,Type=Float,Description=\"Inbreeding coefficient as estimated from the genotype likelihoods per-sample when compared against the Hardy-Weinberg expectation\">\n+##INFO=<ID=MAF,Number=1,Type=Float,Description=\"The minor allele frequency (frequency of second most common allele), derived from the AF field.\">\n+##INFO=<ID=MLEAC,Number=A,Type=Integer,Description=\"Maximum likelihood expectation (MLE) for the allele counts (not necessarily the same as the AC), for each ALT allele, in the same order as listed\">\n+##INFO=<ID=MLEAF,Number=A,Type=Float,Description=\"Maximum likelihood expectation (MLE) for the allele frequency (not necessarily the same as the AF), for each ALT allele, in the same order as listed\">\n+##INFO=<ID=MQ,Number=1,Type=Float,Description=\"RMS Mapping Quality\">\n+##INFO=<ID=MQRankSum,Number=1,Type=Float,Description=\"Z-score From Wilcoxon rank sum test of Alt vs. Ref read mapping qualities\">\n+##INFO=<ID=RAW_MQ,Number=1,Type=Float,Description=\"Raw data for RMS Mapping Quality\">\n+##INFO=<ID=ReadPosRankSum,Number=1,Type=Float,Description=\"Z-score from Wilcoxon rank sum test of Alt vs. Ref read position bias\">\n+##contig=<ID=1,length=249250621,assembly=b37>\n+##contig=<ID=2,length=243199373,assembly=b37>\n+##contig=<ID=3,length=198022430,assembly=b37>\n+##contig=<ID=4,length=191154276,assembly=b37>\n+##contig=<ID=5,length=180915260,assembly=b37>\n+##contig=<ID=6,length=171115067,assembly=b37>\n+##contig=<ID=7,length=159138663,assembly=b37>\n+##contig=<ID=8,length=146364022,assembly=b37>\n+##contig=<ID=9,length=141213431,assembly=b37>\n+##contig=<ID=10,length=135534747,assembly=b37>\n+##contig=<ID=11,length=135006516,assembly=b37>\n+##contig=<ID=12,length=133851895,assembly=b37>\n+##contig=<ID=13,length=115169878,assembly=b37>\n+##contig=<ID=14,length=107349540,assembly=b37>\n+##contig=<ID=15,length=102531392,assembly=b37>\n+##contig=<ID=16,length=90354753,assembly=b37>\n+##contig=<ID=17,length=81195210,assembly=b37>\n+##contig=<ID=18,length=78077248,assembly=b37>\n+##contig=<ID=19,length=59128983,assembly=b37>\n+##contig=<ID=20,length=63025520,assembly=b37>\n+##contig=<ID=21,length=48129895,assembly=b37>\n+##contig=<ID=22,length=51304566,assembly=b37>\n+##contig=<ID=X,length=155270560,assembly=b37>\n+##contig=<ID=Y,length=59373566,assembly=b37>\n+##contig=<ID=MT,length=16569,assembly=b37>\n+##source=SelectVariants\n+#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tBCM-NEPRC-34593\tBCM-NEPRC-34594\tBCM-NEPRC-34595\tBCM-NEPRC-34596\tBCM-NEPRC-34597\tBCM-NEPRC-34598\tBCM-NEPRC-34599\tBCM-NEPRC-34600\tBCM-NEPRC-34601\tBCM-NEPRC-34602", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1115baedfe2bf5497b6fd314a7dadd0760f0dd0"}, "originalPosition": 126}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MDIwNjkw", "url": "https://github.com/broadinstitute/gatk/pull/6406#pullrequestreview-347020690", "createdAt": "2020-01-23T01:55:26Z", "commit": {"oid": "5177e890cf1ec44ec935d4f8c7866636b327c5ac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMTo1NToyNlrOFgw4YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMjowMTozMlrOFgw95Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5OTYxNw==", "bodyText": "Make the Set<String> argument final", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r369899617", "createdAt": "2020-01-23T01:55:26Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsEngine.java", "diffHunk": "@@ -185,7 +185,7 @@ private VariantContext regenotypeVC(final VariantContext originalVC, final Refer\n      * @param vc   the variant context\n      * @return variant context with the NON-REF alleles removed if multiallelic or replaced with NO-CALL alleles if biallelic\n      */\n-    private VariantContext removeNonRefAlleles(final VariantContext vc) {\n+    protected static VariantContext removeNonRefAlleles(final VariantContext vc, Set<String> infoHeaderAltAllelesLineNames) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5177e890cf1ec44ec935d4f8c7866636b327c5ac"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkwMDExNA==", "bodyText": "And don't forget the @VisibleForTesting annotation.  In such cases, it's typical in the GATK to omit the protected modifier to denote package-level visibility for testing.", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r369900114", "createdAt": "2020-01-23T01:57:42Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsEngine.java", "diffHunk": "@@ -185,7 +185,7 @@ private VariantContext regenotypeVC(final VariantContext originalVC, final Refer\n      * @param vc   the variant context\n      * @return variant context with the NON-REF alleles removed if multiallelic or replaced with NO-CALL alleles if biallelic\n      */\n-    private VariantContext removeNonRefAlleles(final VariantContext vc) {\n+    protected static VariantContext removeNonRefAlleles(final VariantContext vc, Set<String> infoHeaderAltAllelesLineNames) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5OTYxNw=="}, "originalCommit": {"oid": "5177e890cf1ec44ec935d4f8c7866636b327c5ac"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkwMDY3MA==", "bodyText": "Instead of creating a file, just specify multiple interval literals\n. . .\n   .addArgument(GenotypeGVCFs.FORCE_OUTPUT_INTERVALS_NAME, \"1:1048236-1048236\")\n   .addArgument(GenotypeGVCFs.FORCE_OUTPUT_INTERVALS_NAME, \"1:1051053-1051053\")\n   .addArgument(GenotypeGVCFs.FORCE_OUTPUT_INTERVALS_NAME, \"1:2364622-2364622\")\n   . . .", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r369900670", "createdAt": "2020-01-23T02:00:07Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsIntegrationTest.java", "diffHunk": "@@ -562,6 +564,60 @@ public void testForceOutput() {\n         Assert.assertTrue(actualVC2.get(1).isPolymorphicInSamples());\n     }\n \n+    /**\n+     * This tests whether NON_REF alleles are properly removed, including multi-allelic sites\n+     */\n+    @Test\n+    public void testForceOutputNonRef() {\n+        final File input = getTestFile(\"ForceOutputNonRef.g.vcf\");\n+        final File output1 = createTempFile(\"output\", \".vcf\");\n+\n+        // build intervals\n+        final File output2 = createTempFile(\"output\", \".vcf\");\n+        final File intervalFile = createTempFile(\"testForceOutputNonRef\", \".intervals\");\n+        try (PrintWriter writer = new PrintWriter(IOUtil.openFileForWriting(intervalFile))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5177e890cf1ec44ec935d4f8c7866636b327c5ac"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkwMTAyOQ==", "bodyText": "argsWithAllSites is confusing because one would expect more output than for argsWithSpecificSites.  Therefore argsWith(out)ForceCalling would be clearer.", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r369901029", "createdAt": "2020-01-23T02:01:32Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsIntegrationTest.java", "diffHunk": "@@ -562,6 +564,60 @@ public void testForceOutput() {\n         Assert.assertTrue(actualVC2.get(1).isPolymorphicInSamples());\n     }\n \n+    /**\n+     * This tests whether NON_REF alleles are properly removed, including multi-allelic sites\n+     */\n+    @Test\n+    public void testForceOutputNonRef() {\n+        final File input = getTestFile(\"ForceOutputNonRef.g.vcf\");\n+        final File output1 = createTempFile(\"output\", \".vcf\");\n+\n+        // build intervals\n+        final File output2 = createTempFile(\"output\", \".vcf\");\n+        final File intervalFile = createTempFile(\"testForceOutputNonRef\", \".intervals\");\n+        try (PrintWriter writer = new PrintWriter(IOUtil.openFileForWriting(intervalFile))) {\n+            writer.println(\"1:1048236-1048236\");\n+            writer.println(\"1:1051053-1051053\");\n+            writer.println(\"1:2364622-2364622\");\n+        }\n+\n+        // No sites should be output\n+        final ArgumentsBuilder argsWithAllSites = new ArgumentsBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5177e890cf1ec44ec935d4f8c7866636b327c5ac"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjg2MTU4", "url": "https://github.com/broadinstitute/gatk/pull/6406#pullrequestreview-353286158", "createdAt": "2020-02-04T20:41:53Z", "commit": {"oid": "935f2bca60245b7a1d72f0090d9df74dac0a9236"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDo0MTo1M1rOFliwQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDo1MjoxOVrOFljDIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkxMTA0MQ==", "bodyText": "Instead of tracking this boolean, why not replace if(altAllelesChanged) with if(newAlleles.size() < vc.getNAlleles()?", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r374911041", "createdAt": "2020-02-04T20:41:53Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsEngine.java", "diffHunk": "@@ -183,21 +185,37 @@ private VariantContext regenotypeVC(final VariantContext originalVC, final Refer\n      * Remove NON-REF alleles from the variant context\n      *\n      * @param vc   the variant context\n+     * @param infoHeaderAltAllelesLineNames INFO Header names that require alt alleles, which will be removed if the ALT alleles change.\n+     * @param removeUnusedAlternates If true, unused alternate alleles will also be trimmed.\n      * @return variant context with the NON-REF alleles removed if multiallelic or replaced with NO-CALL alleles if biallelic\n      */\n-    private VariantContext removeNonRefAlleles(final VariantContext vc) {\n+    @VisibleForTesting\n+    static VariantContext removeNonRefAlleles(final VariantContext vc, final Set<String> infoHeaderAltAllelesLineNames, final boolean removeUnusedAlternates) {\n \n         // If NON_REF is the only alt allele, ignore this site\n         final List<Allele> newAlleles = new ArrayList<>();\n         // Only keep alleles that are not NON-REF\n+        boolean altAllelesChanged = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "935f2bca60245b7a1d72f0090d9df74dac0a9236"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkxNTE1Nw==", "bodyText": "Can we simplify the bulk of this method to just\nfinal Set<Allele> allelesToKeep = removeUnusedAlternates ? vc.getGenotypes().stream().flatMap(g->g.getAlleles().stream()).collect(Collectors.toSet()) : vc.getAlleles();\nallelesToKeep.remove(Allele.NON_REF_ALLELE);\nfinal List<Allele> newAlleles = vc.getAlleles().stream().filter(allelesToKeep::contains).collect(Collectors.toList());", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r374915157", "createdAt": "2020-02-04T20:50:48Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsEngine.java", "diffHunk": "@@ -183,21 +185,37 @@ private VariantContext regenotypeVC(final VariantContext originalVC, final Refer\n      * Remove NON-REF alleles from the variant context\n      *\n      * @param vc   the variant context\n+     * @param infoHeaderAltAllelesLineNames INFO Header names that require alt alleles, which will be removed if the ALT alleles change.\n+     * @param removeUnusedAlternates If true, unused alternate alleles will also be trimmed.\n      * @return variant context with the NON-REF alleles removed if multiallelic or replaced with NO-CALL alleles if biallelic\n      */\n-    private VariantContext removeNonRefAlleles(final VariantContext vc) {\n+    @VisibleForTesting\n+    static VariantContext removeNonRefAlleles(final VariantContext vc, final Set<String> infoHeaderAltAllelesLineNames, final boolean removeUnusedAlternates) {\n \n         // If NON_REF is the only alt allele, ignore this site\n         final List<Allele> newAlleles = new ArrayList<>();\n         // Only keep alleles that are not NON-REF\n+        boolean altAllelesChanged = false;\n         for ( final Allele allele : vc.getAlleles() ) {\n             if ( !allele.equals(Allele.NON_REF_ALLELE) ) {\n                 newAlleles.add(allele);\n             }\n+            else {\n+                altAllelesChanged = true;\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "935f2bca60245b7a1d72f0090d9df74dac0a9236"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkxNTg3NA==", "bodyText": "Looks like there's one last place to rename argsWithAllSites", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r374915874", "createdAt": "2020-02-04T20:52:19Z", "author": {"login": "davidbenjamin"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsIntegrationTest.java", "diffHunk": "@@ -562,6 +562,70 @@ public void testForceOutput() {\n         Assert.assertTrue(actualVC2.get(1).isPolymorphicInSamples());\n     }\n \n+    /**\n+     * This tests whether NON_REF alleles are properly removed, including multi-allelic sites\n+     */\n+    @Test\n+    public void testForceOutputNonRef() {\n+        final File input = new File(getToolTestDataDir() + \"../CombineGVCFs/NA12878.AS.chr20snippet.g.vcf\");\n+\n+        // No sites should be output\n+        final File output1 = createTempFile(\"output\", \".vcf\");\n+        final ArgumentsBuilder argsWithAllSites = new ArgumentsBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "935f2bca60245b7a1d72f0090d9df74dac0a9236"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "408cc6c674ba563f450e005fd2a4cbd46f47f572", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/408cc6c674ba563f450e005fd2a4cbd46f47f572", "committedDate": "2020-02-05T06:44:40Z", "message": "Test data to illustrate bug in GenotypeGVCFs.removeNonRefAlleles()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8d3dd385c5c76c7ca4c2d1fd84e1b937fc7e841", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/e8d3dd385c5c76c7ca4c2d1fd84e1b937fc7e841", "committedDate": "2020-02-05T06:44:40Z", "message": "Test updates following code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f43110ef3c17035e27649ffa4838f8ce7e12c340", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/f43110ef3c17035e27649ffa4838f8ce7e12c340", "committedDate": "2020-02-05T06:44:40Z", "message": "Dont create vcf index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3f3d9533005e4bba03b5cc00bfbd26ca5e84a0a", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/e3f3d9533005e4bba03b5cc00bfbd26ca5e84a0a", "committedDate": "2020-02-05T06:44:41Z", "message": "Modify gVCF to add site with multiple ALT alleles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e53d4da72819230617d9041ebf5ef7d2a0db6c1", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/7e53d4da72819230617d9041ebf5ef7d2a0db6c1", "committedDate": "2020-02-05T06:44:41Z", "message": "Changes after code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d7efd271ae7ca20c1162c19e7d68f779d4c2f3f", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/5d7efd271ae7ca20c1162c19e7d68f779d4c2f3f", "committedDate": "2020-02-05T06:44:41Z", "message": "- Switch test data to use pre-existing gVCF\n- Tests now produce some genotype calls\n- Prune unused alternates from sites with no variation that are forced output from GenotypeGVCFs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52f1ea32a47567649b6300019dab30b095c5b16f", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/52f1ea32a47567649b6300019dab30b095c5b16f", "committedDate": "2020-02-05T06:44:41Z", "message": "Respond to code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84b23a31b6229834d156fbd2f2f8a55f67a87932", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/84b23a31b6229834d156fbd2f2f8a55f67a87932", "committedDate": "2020-02-05T06:46:02Z", "message": "- Prune alternates in callRegion()\n- Update test data accordingly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6109b382a43842200abb12c0014f3e549fc72eea", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/6109b382a43842200abb12c0014f3e549fc72eea", "committedDate": "2020-02-05T06:26:09Z", "message": "- Prune alternates in callRegion()\n- Update test data accordingly"}, "afterCommit": {"oid": "84b23a31b6229834d156fbd2f2f8a55f67a87932", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/84b23a31b6229834d156fbd2f2f8a55f67a87932", "committedDate": "2020-02-05T06:46:02Z", "message": "- Prune alternates in callRegion()\n- Update test data accordingly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ba0d638ab24c9579bd31ecbb72bd63c451feead", "author": {"user": {"login": "bbimber", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/6ba0d638ab24c9579bd31ecbb72bd63c451feead", "committedDate": "2020-02-05T06:54:53Z", "message": "Update test data after rebase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNzc1MTU3", "url": "https://github.com/broadinstitute/gatk/pull/6406#pullrequestreview-353775157", "createdAt": "2020-02-05T14:50:39Z", "commit": {"oid": "6ba0d638ab24c9579bd31ecbb72bd63c451feead"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDo1MDo0MFrOFl6ivQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDo1MDo0MFrOFl6ivQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMwMDc5Nw==", "bodyText": "It's weird that this monomorphic site still has a qual, but given that it was already doing thatI don't consider it your responsibility.  I will look into it later.", "url": "https://github.com/broadinstitute/gatk/pull/6406#discussion_r375300797", "createdAt": "2020-02-05T14:50:40Z", "author": {"login": "davidbenjamin"}, "path": "src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/expected/includeLowQualSites.vcf", "diffHunk": "@@ -38,14 +38,14 @@\n ##reference=file:///Users/cnorman/projects/gatk/src/test/resources/large/human_g1k_v37.20.21.fasta\n ##source=GenotypeGVCFs\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tGTEX-OXRP-0003\tGTEX-QXCU-0004\tGTEX-RVPV-0003\n-20\t10012730\t.\tG\t.\t26.18\tLowQual\tDP=4\tGT:AD:DP:RGQ\t0/0:2,0:2:6\t./.:0,0:0\t0/0:2,0:2:6\n-20\t10012731\t.\tC\t.\t26.18\tLowQual\tDP=4\tGT:AD:DP:RGQ\t0/0:2,0:2:6\t./.:0,0:0\t0/0:2,0:2:6\n-20\t10012732\t.\tA\t.\t26.18\tLowQual\tDP=4\tGT:AD:DP:RGQ\t0/0:2,0:2:6\t./.:0,0:0\t0/0:2,0:2:6\n-20\t10012733\t.\tG\t.\t26.18\tLowQual\tDP=4\tGT:AD:DP:RGQ\t0/0:2,0:2:6\t./.:0,0:0\t0/0:2,0:2:6\n-20\t10012734\t.\tG\t.\t0.02\tLowQual\tDP=4;ExcessHet=3.01;MQ=NaN;RAW_MQ=7200.00\tGT:DP:RGQ\t0/0:2:6\t0/0:0:0\t0/0:2:6\n-20\t10012735\t.\tC\t.\t26.18\tLowQual\tDP=4\tGT:AD:DP:RGQ\t0/0:2,0:2:6\t./.:0,0:0\t0/0:2,0:2:6\n-20\t10012736\t.\tA\t.\t26.18\tLowQual\tDP=4\tGT:AD:DP:RGQ\t0/0:2,0:2:6\t./.:0,0:0\t0/0:2,0:2:6\n-20\t10012737\t.\tG\t.\t26.18\tLowQual\tDP=4\tGT:AD:DP:RGQ\t0/0:2,0:2:6\t./.:0,0:0\t0/0:2,0:2:6\n-20\t10012738\t.\tC\t.\t26.18\tLowQual\tDP=4\tGT:AD:DP:RGQ\t0/0:2,0:2:6\t./.:0,0:0\t0/0:2,0:2:6\n-20\t10012739\t.\tT\t.\t26.18\tLowQual\tDP=4\tGT:AD:DP:RGQ\t0/0:2,0:2:6\t./.:0,0:0\t0/0:2,0:2:6\n-20\t10012740\t.\tC\t.\t26.18\tLowQual\tDP=4\tGT:AD:DP:RGQ\t0/0:2,0:2:6\t./.:0,0:0\t0/0:2,0:2:6\n+20\t10012730\t.\tG\t.\t.\t.\tDP=4\tGT:DP:RGQ\t0/0:2:6\t./.:0:0\t0/0:2:6\n+20\t10012731\t.\tC\t.\t.\t.\tDP=4\tGT:DP:RGQ\t0/0:2:6\t./.:0:0\t0/0:2:6\n+20\t10012732\t.\tA\t.\t.\t.\tDP=4\tGT:DP:RGQ\t0/0:2:6\t./.:0:0\t0/0:2:6\n+20\t10012733\t.\tG\t.\t.\t.\tDP=4\tGT:DP:RGQ\t0/0:2:6\t./.:0:0\t0/0:2:6\n+20\t10012734\t.\tG\t.\t0.02\tLowQual\tDP=4;ExcessHet=3.01;MLEAC=.;MLEAF=.;MQ=NaN;RAW_MQ=7200.00\tGT:DP:RGQ\t0/0:2:6\t0/0:0:0\t0/0:2:6", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ba0d638ab24c9579bd31ecbb72bd63c451feead"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzODQxNDA5", "url": "https://github.com/broadinstitute/gatk/pull/6406#pullrequestreview-353841409", "createdAt": "2020-02-05T16:08:37Z", "commit": {"oid": "6ba0d638ab24c9579bd31ecbb72bd63c451feead"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2722, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}