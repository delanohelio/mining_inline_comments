{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NzY4MjU1", "number": 6641, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjozOTowOFrOEEYH6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyMjozOFrOEEcqKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDI1MDAwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjozOTowOFrOGh9c6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxNTowM1rOGktb6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2MzAxNw==", "bodyText": "Remove commented-out code", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r438263017", "createdAt": "2020-06-10T16:39:08Z", "author": {"login": "droazen"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "diffHunk": "@@ -214,24 +239,35 @@ private void verifyPositiveResults(\n         }\n     }\n \n-    @Test\n-    public void testSanitizeAndDeduplicateRecords() throws Exception {\n-        final File input  = BaseTest.createTempFile(\"test-input-santize-and-deduplicate-records\", \".sam\");\n-        final File output = BaseTest.createTempFile(\"test-output-santize-and-deduplicate-records\", \".sam\");\n+    @DataProvider\n+    public Object[][] getFileTypes(){\n+        return new Object[][] {\n+//                {\".sam\"\"},\n+//                {RevertSam.FileType.bam},\n+//                {RevertSam.FileType.cram},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 188}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MzQzNQ==", "bodyText": "woops", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r438383435", "createdAt": "2020-06-10T20:16:50Z", "author": {"login": "lbergelson"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "diffHunk": "@@ -214,24 +239,35 @@ private void verifyPositiveResults(\n         }\n     }\n \n-    @Test\n-    public void testSanitizeAndDeduplicateRecords() throws Exception {\n-        final File input  = BaseTest.createTempFile(\"test-input-santize-and-deduplicate-records\", \".sam\");\n-        final File output = BaseTest.createTempFile(\"test-output-santize-and-deduplicate-records\", \".sam\");\n+    @DataProvider\n+    public Object[][] getFileTypes(){\n+        return new Object[][] {\n+//                {\".sam\"\"},\n+//                {RevertSam.FileType.bam},\n+//                {RevertSam.FileType.cram},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2MzAxNw=="}, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 188}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NjM0Nw==", "bodyText": "done", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r441146347", "createdAt": "2020-06-16T21:15:03Z", "author": {"login": "lbergelson"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "diffHunk": "@@ -214,24 +239,35 @@ private void verifyPositiveResults(\n         }\n     }\n \n-    @Test\n-    public void testSanitizeAndDeduplicateRecords() throws Exception {\n-        final File input  = BaseTest.createTempFile(\"test-input-santize-and-deduplicate-records\", \".sam\");\n-        final File output = BaseTest.createTempFile(\"test-output-santize-and-deduplicate-records\", \".sam\");\n+    @DataProvider\n+    public Object[][] getFileTypes(){\n+        return new Object[][] {\n+//                {\".sam\"\"},\n+//                {RevertSam.FileType.bam},\n+//                {RevertSam.FileType.cram},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2MzAxNw=="}, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDI2MzYzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo0MzowMFrOGh9mGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo0MDoyNFrOGiHQ0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NTM2OA==", "bodyText": "This is fine, but should we also add some tests with \"non-basic\" / less trivial bams and crams? Also, we might want to have an explicit test for a cram with an embedded reference.", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r438265368", "createdAt": "2020-06-10T16:43:00Z", "author": {"login": "droazen"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "diffHunk": "@@ -20,14 +21,16 @@\n @Test(groups = \"Spark\")\n public class RevertSamSparkIntegrationTest extends CommandLineProgramTest {\n \n-    private static List<String> defaultAttributesToClearPlusXT = new ArrayList<String>() {\n+    private static final List<String> defaultAttributesToClearPlusXT = new ArrayList<String>() {\n         private static final long serialVersionUID = 1L;\n         {\n         addAll(RevertSamSpark.DEFAULT_ATTRIBUTES_TO_CLEAR);\n         add(\"XT\");\n     }};\n \n     private final File basicSamToRevert = getTestFile(\"revert_sam_basic.sam\");\n+    private final File basicBamToRevert = getTestFile(\"revert_sam_basic.bam\");\n+    private final File basicCramToRevert = getTestFile(\"revert_sam_basic.cram\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MzMzMQ==", "bodyText": "Crams with embedded references currently do not work.", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r438383331", "createdAt": "2020-06-10T20:16:37Z", "author": {"login": "lbergelson"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "diffHunk": "@@ -20,14 +21,16 @@\n @Test(groups = \"Spark\")\n public class RevertSamSparkIntegrationTest extends CommandLineProgramTest {\n \n-    private static List<String> defaultAttributesToClearPlusXT = new ArrayList<String>() {\n+    private static final List<String> defaultAttributesToClearPlusXT = new ArrayList<String>() {\n         private static final long serialVersionUID = 1L;\n         {\n         addAll(RevertSamSpark.DEFAULT_ATTRIBUTES_TO_CLEAR);\n         add(\"XT\");\n     }};\n \n     private final File basicSamToRevert = getTestFile(\"revert_sam_basic.sam\");\n+    private final File basicBamToRevert = getTestFile(\"revert_sam_basic.bam\");\n+    private final File basicCramToRevert = getTestFile(\"revert_sam_basic.cram\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NTM2OA=="}, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MzU0NA==", "bodyText": "As james said \"we have as many tests as picard does for their tool\"", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r438383544", "createdAt": "2020-06-10T20:17:04Z", "author": {"login": "lbergelson"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "diffHunk": "@@ -20,14 +21,16 @@\n @Test(groups = \"Spark\")\n public class RevertSamSparkIntegrationTest extends CommandLineProgramTest {\n \n-    private static List<String> defaultAttributesToClearPlusXT = new ArrayList<String>() {\n+    private static final List<String> defaultAttributesToClearPlusXT = new ArrayList<String>() {\n         private static final long serialVersionUID = 1L;\n         {\n         addAll(RevertSamSpark.DEFAULT_ATTRIBUTES_TO_CLEAR);\n         add(\"XT\");\n     }};\n \n     private final File basicSamToRevert = getTestFile(\"revert_sam_basic.sam\");\n+    private final File basicBamToRevert = getTestFile(\"revert_sam_basic.bam\");\n+    private final File basicCramToRevert = getTestFile(\"revert_sam_basic.cram\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NTM2OA=="}, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDUzOA==", "bodyText": "Do we understand why embedded references aren't working? The last HTSJDK release claims that they are now supported (for reading, at least).", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r438384538", "createdAt": "2020-06-10T20:19:07Z", "author": {"login": "droazen"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "diffHunk": "@@ -20,14 +21,16 @@\n @Test(groups = \"Spark\")\n public class RevertSamSparkIntegrationTest extends CommandLineProgramTest {\n \n-    private static List<String> defaultAttributesToClearPlusXT = new ArrayList<String>() {\n+    private static final List<String> defaultAttributesToClearPlusXT = new ArrayList<String>() {\n         private static final long serialVersionUID = 1L;\n         {\n         addAll(RevertSamSpark.DEFAULT_ATTRIBUTES_TO_CLEAR);\n         add(\"XT\");\n     }};\n \n     private final File basicSamToRevert = getTestFile(\"revert_sam_basic.sam\");\n+    private final File basicBamToRevert = getTestFile(\"revert_sam_basic.bam\");\n+    private final File basicCramToRevert = getTestFile(\"revert_sam_basic.cram\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NTM2OA=="}, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQyMzc2Mw==", "bodyText": "Yes.   There are explicit guards in our code that prevent reading crams without references.  We need to remove them but I didn't do that in this pr.", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r438423763", "createdAt": "2020-06-10T21:40:24Z", "author": {"login": "lbergelson"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "diffHunk": "@@ -20,14 +21,16 @@\n @Test(groups = \"Spark\")\n public class RevertSamSparkIntegrationTest extends CommandLineProgramTest {\n \n-    private static List<String> defaultAttributesToClearPlusXT = new ArrayList<String>() {\n+    private static final List<String> defaultAttributesToClearPlusXT = new ArrayList<String>() {\n         private static final long serialVersionUID = 1L;\n         {\n         addAll(RevertSamSpark.DEFAULT_ATTRIBUTES_TO_CLEAR);\n         add(\"XT\");\n     }};\n \n     private final File basicSamToRevert = getTestFile(\"revert_sam_basic.sam\");\n+    private final File basicBamToRevert = getTestFile(\"revert_sam_basic.bam\");\n+    private final File basicCramToRevert = getTestFile(\"revert_sam_basic.cram\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NTM2OA=="}, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDMwOTU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/spark/RevertSamSpark.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo1NjowNVrOGh-EFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMzo1M1rOGktZvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3MzA0NQ==", "bodyText": "Update the tool docs to mention that it will also take cram files.", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r438273045", "createdAt": "2020-06-10T16:56:05Z", "author": {"login": "jamesemery"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/spark/RevertSamSpark.java", "diffHunk": "@@ -503,9 +503,8 @@ static String getDefaultExtension(final GATKPathSpecifier inputPath, final FileT\n         if (setting == FileType.dynamic) {\n             if (inputPath.isSam()) {\n                 return FileExtensions.SAM;\n-            }\n-            if (inputPath.isCram()) {\n-                throw new UserException.UnimplementedFeature(\"Input file is a cram. This is currently unsupported for this tool\");\n+            } else if(inputPath.isCram()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NTc4OQ==", "bodyText": "done", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r441145789", "createdAt": "2020-06-16T21:13:53Z", "author": {"login": "lbergelson"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/spark/RevertSamSpark.java", "diffHunk": "@@ -503,9 +503,8 @@ static String getDefaultExtension(final GATKPathSpecifier inputPath, final FileT\n         if (setting == FileType.dynamic) {\n             if (inputPath.isSam()) {\n                 return FileExtensions.SAM;\n-            }\n-            if (inputPath.isCram()) {\n-                throw new UserException.UnimplementedFeature(\"Input file is a cram. This is currently unsupported for this tool\");\n+            } else if(inputPath.isCram()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3MzA0NQ=="}, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDk5MzA3OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyMjozOFrOGiE-pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxNDoyMVrOGktalA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NjM0Mg==", "bodyText": "It might be useful to include in this array of test various output types, like cram and bam. Take this one with a grain of salt as I'm not sure its necessarily the job of THIS tool to test writing functionality for cram.", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r438386342", "createdAt": "2020-06-10T20:22:38Z", "author": {"login": "jamesemery"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "diffHunk": "@@ -44,45 +47,57 @@\n     @DataProvider(name=\"positiveTestData\")\n     public Object[][] positiveTestData() {\n         return new Object[][] {\n-                {null, false, false, true, true, null, null, Collections.EMPTY_LIST},\n-                {SAMFileHeader.SortOrder.queryname, false, false, true, false, \"Hey,Dad!\", null, defaultAttributesToClearPlusXT},\n-                {null, true, false, false, false, \"Hey,Dad!\", \"NewLibraryName\", defaultAttributesToClearPlusXT},\n-                {null, true, true, false, false, null, null, Collections.EMPTY_LIST}\n+                {basicSamToRevert, null, false, false, true, true, null, null, Collections.EMPTY_LIST},\n+                {basicSamToRevert, SAMFileHeader.SortOrder.queryname, false, false, true, false, \"Hey,Dad!\", null, defaultAttributesToClearPlusXT},\n+                {basicSamToRevert, null, true, false, false, false, \"Hey,Dad!\", \"NewLibraryName\", defaultAttributesToClearPlusXT},\n+                {basicSamToRevert, null, true, true, false, false, null, null, Collections.EMPTY_LIST},\n+\n+                {basicBamToRevert, null, false, false, true, true, null, null, Collections.EMPTY_LIST},\n+                {basicBamToRevert, SAMFileHeader.SortOrder.queryname, false, false, true, false, \"Hey,Dad!\", null, defaultAttributesToClearPlusXT},\n+                {basicBamToRevert, null, true, false, false, false, \"Hey,Dad!\", \"NewLibraryName\", defaultAttributesToClearPlusXT},\n+                {basicBamToRevert, null, true, true, false, false, null, null, Collections.EMPTY_LIST},\n+\n+                {basicCramToRevert, null, false, false, true, true, null, null, Collections.EMPTY_LIST},\n+                {basicCramToRevert, SAMFileHeader.SortOrder.queryname, false, false, true, false, \"Hey,Dad!\", null, defaultAttributesToClearPlusXT},\n+                {basicCramToRevert, null, true, false, false, false, \"Hey,Dad!\", \"NewLibraryName\", defaultAttributesToClearPlusXT},\n+                {basicCramToRevert, null, true, true, false, false, null, null, Collections.EMPTY_LIST}\n         };\n     }\n \n     @Test(dataProvider= \"positiveTestData\")\n-    public void basicPositiveTests(final SAMFileHeader.SortOrder so, final boolean removeDuplicates, final boolean removeAlignmentInfo,\n+    public void basicPositiveTests(final File input, final SAMFileHeader.SortOrder so, final boolean removeDuplicates, final boolean removeAlignmentInfo,\n                                    final boolean restoreOriginalQualities, final boolean outputByReadGroup, final String sample, final String library,\n                                    final List<String> attributesToClear) throws Exception {\n \n         final File output = outputByReadGroup ? Files.createTempDirectory(\"picardRevertSamSparkTest\").toFile() : BaseTest.createTempFile(\"reverted\", \".sam\");\n-        File output0 = new File(output.getPath()+\"/0.sam\");\n-        File output1 = new File(output.getPath()+\"/1.sam\");\n-        File output2 = new File(output.getPath()+\"/2.sam\");\n-        File output3 = new File(output.getPath()+\"/3.sam\");\n+        final File output0 = new File(output.getPath()+\"/0.sam\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NjAwNA==", "bodyText": "I'm going to pass on this one for now.", "url": "https://github.com/broadinstitute/gatk/pull/6641#discussion_r441146004", "createdAt": "2020-06-16T21:14:21Z", "author": {"login": "lbergelson"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/RevertSamSparkIntegrationTest.java", "diffHunk": "@@ -44,45 +47,57 @@\n     @DataProvider(name=\"positiveTestData\")\n     public Object[][] positiveTestData() {\n         return new Object[][] {\n-                {null, false, false, true, true, null, null, Collections.EMPTY_LIST},\n-                {SAMFileHeader.SortOrder.queryname, false, false, true, false, \"Hey,Dad!\", null, defaultAttributesToClearPlusXT},\n-                {null, true, false, false, false, \"Hey,Dad!\", \"NewLibraryName\", defaultAttributesToClearPlusXT},\n-                {null, true, true, false, false, null, null, Collections.EMPTY_LIST}\n+                {basicSamToRevert, null, false, false, true, true, null, null, Collections.EMPTY_LIST},\n+                {basicSamToRevert, SAMFileHeader.SortOrder.queryname, false, false, true, false, \"Hey,Dad!\", null, defaultAttributesToClearPlusXT},\n+                {basicSamToRevert, null, true, false, false, false, \"Hey,Dad!\", \"NewLibraryName\", defaultAttributesToClearPlusXT},\n+                {basicSamToRevert, null, true, true, false, false, null, null, Collections.EMPTY_LIST},\n+\n+                {basicBamToRevert, null, false, false, true, true, null, null, Collections.EMPTY_LIST},\n+                {basicBamToRevert, SAMFileHeader.SortOrder.queryname, false, false, true, false, \"Hey,Dad!\", null, defaultAttributesToClearPlusXT},\n+                {basicBamToRevert, null, true, false, false, false, \"Hey,Dad!\", \"NewLibraryName\", defaultAttributesToClearPlusXT},\n+                {basicBamToRevert, null, true, true, false, false, null, null, Collections.EMPTY_LIST},\n+\n+                {basicCramToRevert, null, false, false, true, true, null, null, Collections.EMPTY_LIST},\n+                {basicCramToRevert, SAMFileHeader.SortOrder.queryname, false, false, true, false, \"Hey,Dad!\", null, defaultAttributesToClearPlusXT},\n+                {basicCramToRevert, null, true, false, false, false, \"Hey,Dad!\", \"NewLibraryName\", defaultAttributesToClearPlusXT},\n+                {basicCramToRevert, null, true, true, false, false, null, null, Collections.EMPTY_LIST}\n         };\n     }\n \n     @Test(dataProvider= \"positiveTestData\")\n-    public void basicPositiveTests(final SAMFileHeader.SortOrder so, final boolean removeDuplicates, final boolean removeAlignmentInfo,\n+    public void basicPositiveTests(final File input, final SAMFileHeader.SortOrder so, final boolean removeDuplicates, final boolean removeAlignmentInfo,\n                                    final boolean restoreOriginalQualities, final boolean outputByReadGroup, final String sample, final String library,\n                                    final List<String> attributesToClear) throws Exception {\n \n         final File output = outputByReadGroup ? Files.createTempDirectory(\"picardRevertSamSparkTest\").toFile() : BaseTest.createTempFile(\"reverted\", \".sam\");\n-        File output0 = new File(output.getPath()+\"/0.sam\");\n-        File output1 = new File(output.getPath()+\"/1.sam\");\n-        File output2 = new File(output.getPath()+\"/2.sam\");\n-        File output3 = new File(output.getPath()+\"/3.sam\");\n+        final File output0 = new File(output.getPath()+\"/0.sam\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NjM0Mg=="}, "originalCommit": {"oid": "44f8efe51232617cfcfedfe5ad29219a6c620498"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 971, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}