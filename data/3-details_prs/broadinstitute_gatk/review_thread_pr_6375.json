{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNzMxMTg5", "number": 6375, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxODo1OToxM1rODX9GUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxOTowMDoyMFrODX9Hig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NDQ0ODgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/utils/IntervalUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxODo1OToxM1rOFdiW5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzo1ODoyNFrOFj0acw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNTk0MQ==", "bodyText": "There is at least one other call to parseGenomeLoc that are still not trimmed.  See line 332.  I think it should also be trimmed or the trimming should just be pushed down into parseGenomeLoc as well to be sure that it always happens.", "url": "https://github.com/broadinstitute/gatk/pull/6375#discussion_r366515941", "createdAt": "2020-01-14T18:59:13Z", "author": {"login": "lbergelson"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/IntervalUtils.java", "diffHunk": "@@ -403,8 +403,9 @@ else if ( glParser.isValidGenomeLoc(interval.getContig(), interval.getStart(), i\n             } else {\n                 try (PathLineIterator reader = new PathLineIterator(inputPath)) {\n                     for (final String line : reader) {\n-                        if (!line.trim().isEmpty()) {\n-                            ret.add(glParser.parseGenomeLoc(line));\n+                        final String trimmedLine = line.trim();\n+                        if (!trimmedLine.isEmpty()) {\n+                            ret.add(glParser.parseGenomeLoc(trimmedLine));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66d3da82e7e7bb73afa860c2a34ac03512f00fd2"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwMzIxOQ==", "bodyText": "Added trim call to GenomeParserLoc, with a test.", "url": "https://github.com/broadinstitute/gatk/pull/6375#discussion_r373103219", "createdAt": "2020-01-30T17:58:24Z", "author": {"login": "cmnbroad"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/IntervalUtils.java", "diffHunk": "@@ -403,8 +403,9 @@ else if ( glParser.isValidGenomeLoc(interval.getContig(), interval.getStart(), i\n             } else {\n                 try (PathLineIterator reader = new PathLineIterator(inputPath)) {\n                     for (final String line : reader) {\n-                        if (!line.trim().isEmpty()) {\n-                            ret.add(glParser.parseGenomeLoc(line));\n+                        final String trimmedLine = line.trim();\n+                        if (!trimmedLine.isEmpty()) {\n+                            ret.add(glParser.parseGenomeLoc(trimmedLine));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNTk0MQ=="}, "originalCommit": {"oid": "66d3da82e7e7bb73afa860c2a34ac03512f00fd2"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NDQ1MTk0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/utils/IntervalUtilsUnitTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxOTowMDoyMFrOFdiY8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzo1OToyN1rOFj0ciQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNjQ2NQ==", "bodyText": "Huh, I've never seen this method which creates the temp file and writes to it before.   That seems useful.  Maybe it should be promote somewhere.", "url": "https://github.com/broadinstitute/gatk/pull/6375#discussion_r366516465", "createdAt": "2020-01-14T19:00:20Z", "author": {"login": "lbergelson"}, "path": "src/test/java/org/broadinstitute/hellbender/utils/IntervalUtilsUnitTest.java", "diffHunk": "@@ -1120,6 +1120,22 @@ public void testUnmergedIntervals(String unmergedIntervals) {\n         Assert.assertEquals(merged.size(), 1);\n     }\n \n+    @Test\n+    public void testIntervalFileIntervalsAreTrimmed() throws Exception {\n+        final GenomeLoc expectedGenomeLoc = hg19GenomeLocParser.createGenomeLoc(\"1\", 1, 10);\n+        final File gatkIntervalFile = createTempFile(\"testIntervalFileIntervalsAreTrimmed\", \".intervals.list\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66d3da82e7e7bb73afa860c2a34ac03512f00fd2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwMzc1Mw==", "bodyText": "I moved it to IOUtils with other methods with similar functionality, though now its no longer test-only.", "url": "https://github.com/broadinstitute/gatk/pull/6375#discussion_r373103753", "createdAt": "2020-01-30T17:59:27Z", "author": {"login": "cmnbroad"}, "path": "src/test/java/org/broadinstitute/hellbender/utils/IntervalUtilsUnitTest.java", "diffHunk": "@@ -1120,6 +1120,22 @@ public void testUnmergedIntervals(String unmergedIntervals) {\n         Assert.assertEquals(merged.size(), 1);\n     }\n \n+    @Test\n+    public void testIntervalFileIntervalsAreTrimmed() throws Exception {\n+        final GenomeLoc expectedGenomeLoc = hg19GenomeLocParser.createGenomeLoc(\"1\", 1, 10);\n+        final File gatkIntervalFile = createTempFile(\"testIntervalFileIntervalsAreTrimmed\", \".intervals.list\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNjQ2NQ=="}, "originalCommit": {"oid": "66d3da82e7e7bb73afa860c2a34ac03512f00fd2"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1222, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}