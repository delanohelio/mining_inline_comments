{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NjI4NTM4", "number": 6570, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0NjowNFrOD3OyVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo0MTo1NFrOEMfllw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjQwNTMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantDataManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0NjowNFrOGNXwJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0NjowNFrOGNXwJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3MzgyOQ==", "bodyText": "We often just use a set final Set uniqueAnnotations = new HashSet<>(annotationKeys); to uniquify a list, but this is fine.", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416673829", "createdAt": "2020-04-28T14:46:04Z", "author": {"login": "cmnbroad"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantDataManager.java", "diffHunk": "@@ -35,7 +36,11 @@\n \n     public VariantDataManager( final List<String> annotationKeys, final VariantRecalibratorArgumentCollection VRAC ) {\n         this.data = Collections.emptyList();\n-        this.annotationKeys = new ArrayList<>( annotationKeys );\n+        final List<String> uniqueAnnotations = annotationKeys.stream().distinct().collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjQ2Mzg0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo1Nzo0M1rOGNYVYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo1Nzo0M1rOGNYVYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4MzM2Mw==", "bodyText": "Not sure if the emptiness is deliberate, but I'm pretty certain any test that uses this data provider will not be run at all.", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416683363", "createdAt": "2020-04-28T14:57:43Z", "author": {"login": "cmnbroad"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "diffHunk": "@@ -122,11 +185,18 @@ public void initializeVariantRecalTests() {\n         };\n     }\n \n+    @DataProvider(name=\"BadVarRecal\")\n+    public Object[][] BadVarRecal() {\n+        return new Object[][] {\n+\n+        };\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjQ4NjQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantDataManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowMjoyMFrOGNYjsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowMjoyMFrOGNYjsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NzAyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warn(\"Specified annotations for recalibration contain duplicates.\");\n          \n          \n            \n                        logger.warn(\"Ignoring duplicate annotations for recalibration %s.\", Utils.getDuplicatedItems(annotationKeys));", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416687027", "createdAt": "2020-04-28T15:02:20Z", "author": {"login": "cmnbroad"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantDataManager.java", "diffHunk": "@@ -35,7 +36,11 @@\n \n     public VariantDataManager( final List<String> annotationKeys, final VariantRecalibratorArgumentCollection VRAC ) {\n         this.data = Collections.emptyList();\n-        this.annotationKeys = new ArrayList<>( annotationKeys );\n+        final List<String> uniqueAnnotations = annotationKeys.stream().distinct().collect(Collectors.toList());\n+        if (annotationKeys.size() != uniqueAnnotations.size()) {\n+            logger.warn(\"Specified annotations for recalibration contain duplicates.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjUwMDQ4OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowNToyN1rOGNYsxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODo0NzowOFrOGXDZKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4OTM1MQ==", "bodyText": "See comment above.", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416689351", "createdAt": "2020-04-28T15:05:27Z", "author": {"login": "cmnbroad"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "diffHunk": "@@ -187,6 +257,11 @@ public void testVariantRecalibratorSNP(final String[] params, final String tranc\n         doSNPTest(params, tranchesPath, recalPath);\n     }\n \n+    @Test(dataProvider = \"BadVarRecal\", expectedExceptions = {UserException.BadInput.class})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyNjAyNQ==", "bodyText": "The \"bad\" cases are covered in other more specific tests.  I'll take it out.", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r426826025", "createdAt": "2020-05-18T18:47:08Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "diffHunk": "@@ -187,6 +257,11 @@ public void testVariantRecalibratorSNP(final String[] params, final String tranc\n         doSNPTest(params, tranchesPath, recalPath);\n     }\n \n+    @Test(dataProvider = \"BadVarRecal\", expectedExceptions = {UserException.BadInput.class})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4OTM1MQ=="}, "originalCommit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTM1ODk1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo0MTo1NFrOGuonmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo0MTo1NFrOGuonmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU1MzE3Nw==", "bodyText": "Minor nit - it would be nice if the common part of the command line string was factored out of these, since it takes some staring to spot the subtle differences (ie, the duplicate annotation). Up to you. No good deed goes unpunished...", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r451553177", "createdAt": "2020-07-08T13:41:54Z", "author": {"login": "cmnbroad"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "diffHunk": "@@ -44,6 +45,64 @@\n             \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\"\n         };\n \n+    private final String[] VQSRSNPsWithAnnotationDupe =\n+            new String[] {\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf\",\n+                    \"-L\",\"20:1,000,000-10,000,000\",\n+                    \"--resource:known,known=true,prior=10.0\",\n+                    getLargeVQSRTestDataDir() + \"dbsnp_132_b37.leftAligned.20.1M-10M.vcf\",\n+                    \"--resource:truth_training1,truth=true,training=true,prior=15.0\",\n+                    getLargeVQSRTestDataDir() + \"sites_r27_nr.b37_fwd.20.1M-10M.vcf\",\n+                    \"--resource:truth_training2,training=true,truth=true,prior=12.0\",\n+                    getLargeVQSRTestDataDir() + \"Omni25_sites_1525_samples.b37.20.1M-10M.vcf\",\n+                    \"-an\", \"QD\", \"-an\", \"HaplotypeScore\", \"-an\", \"HRun\", \"-an\", \"HRun\",\n+                    \"--trust-all-polymorphic\", // for speed\n+                    \"-mode\", \"SNP\",\n+                    \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\"\n+            };\n+\n+    private final String[] VQSRBothParamsWithResources =\n+            new String[] {\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf\",\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"g94982_20_1m_10m_python_2dcnn.indels.vcf.gz\",\n+                    \"-L\",\"20:1,000,000-10,000,000\",\n+                    \"--resource:known,known=true,prior=10.0\",\n+                    getLargeVQSRTestDataDir() + \"dbsnp_132_b37.leftAligned.20.1M-10M.vcf\",\n+                    \"--resource:truth_training1,truth=true,training=true,prior=15.0\",\n+                    getLargeVQSRTestDataDir() + \"sites_r27_nr.b37_fwd.20.1M-10M.vcf\",\n+                    \"--resource:truth_training2,training=true,truth=true,prior=12.0\",\n+                    getLargeVQSRTestDataDir() + \"Omni25_sites_1525_samples.b37.20.1M-10M.vcf\",\n+                    \"-an\", \"QD\", \"-an\", \"HaplotypeScore\", \"-an\", \"HRun\",\n+                    \"--trust-all-polymorphic\", // for speed\n+                    \"-mode\", \"BOTH\",\n+                    \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\",\n+                    \"--max-gaussians\", \"6\"\n+            };\n+\n+    private final String[] VQSRBothAggregateParamsWithResources =\n+            new String[] {\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf\",\n+                    \"--aggregate\",\n+                    getLargeVQSRTestDataDir() + \"g94982_20_1m_10m_python_2dcnn.indels.vcf.gz\",\n+                    \"-L\",\"20:1,000,000-10,000,000\",\n+                    \"--resource:known,known=true,prior=10.0\",\n+                    getLargeVQSRTestDataDir() + \"dbsnp_132_b37.leftAligned.20.1M-10M.vcf\",\n+                    \"--resource:truth_training1,truth=true,training=true,prior=15.0\",\n+                    getLargeVQSRTestDataDir() + \"sites_r27_nr.b37_fwd.20.1M-10M.vcf\",\n+                    \"--resource:truth_training2,training=true,truth=true,prior=12.0\",\n+                    getLargeVQSRTestDataDir() + \"Omni25_sites_1525_samples.b37.20.1M-10M.vcf\",\n+                    \"-an\", \"QD\", \"-an\", \"HaplotypeScore\", \"-an\", \"HRun\",\n+                    \"--trust-all-polymorphic\", // for speed\n+                    \"-mode\", \"BOTH\",\n+                    \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\",\n+                    \" --output %s\" + \" -tranches-file %s\",\n+                    \"--max-gaussians\", \"6\"\n+            };\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e5a70699ee3fc1dac7853fcaf23614986e2e4a"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 881, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}