{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTM2MTg3", "number": 6482, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDoyNToxM1rOD1TPtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDoyNTo0OVrOD1TREg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjE2NDM4OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/copynumber/plotting/PlotDenoisedCopyRatiosIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDoyNToxM1rOGKq3nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozODoyNFrOGKrkkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0MTMwOQ==", "bodyText": "Why does this StandardArgumentDefinitions us \"--\" but the next one for OUTPUT_SHORT_NAME uses only \"-\".", "url": "https://github.com/broadinstitute/gatk/pull/6482#discussion_r413841309", "createdAt": "2020-04-23T14:25:13Z", "author": {"login": "fleharty"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/copynumber/plotting/PlotDenoisedCopyRatiosIntegrationTest.java", "diffHunk": "@@ -62,13 +49,44 @@ public void testPlotting() {\n         Assert.assertEquals(scaledDeltaMAD, (standardizedMAD - denoisedMAD) / standardizedMAD);\n     }\n \n+    //checks that output files with reasonable file sizes are generated, but correctness of output is not checked\n+    @Test(groups = \"R\")\n+    public void testPlotting() {\n+        final File outputDir = createTempDir(\"testDir\");\n+        final String[] arguments = {\n+                \"--\" + CopyNumberStandardArgument.STANDARDIZED_COPY_RATIOS_FILE_LONG_NAME, STANDARDIZED_COPY_RATIOS_FILE.getAbsolutePath(),\n+                \"--\" + CopyNumberStandardArgument.DENOISED_COPY_RATIOS_FILE_LONG_NAME, DENOISED_COPY_RATIOS_FILE.getAbsolutePath(),\n+                \"--\" + StandardArgumentDefinitions.SEQUENCE_DICTIONARY_NAME, SEQUENCE_DICTIONARY_FILE.getAbsolutePath(),\n+                \"-\" + StandardArgumentDefinitions.OUTPUT_SHORT_NAME, outputDir.getAbsolutePath(),\n+                \"--\" + CopyNumberStandardArgument.OUTPUT_PREFIX_LONG_NAME, OUTPUT_PREFIX\n+        };\n+        runCommandLine(arguments);\n+        assertFilesCreated(outputDir);\n+    }\n+\n+    //checks that output files with reasonable file sizes are generated, but correctness of output is not checked\n+    @Test(groups = \"R\")\n+    public void testPlottingInfiniteMaximumCopyRatio() {\n+        final File outputDir = createTempDir(\"testDir\");\n+        final String[] arguments = {\n+                \"--\" + CopyNumberStandardArgument.STANDARDIZED_COPY_RATIOS_FILE_LONG_NAME, STANDARDIZED_COPY_RATIOS_FILE.getAbsolutePath(),\n+                \"--\" + CopyNumberStandardArgument.DENOISED_COPY_RATIOS_FILE_LONG_NAME, DENOISED_COPY_RATIOS_FILE.getAbsolutePath(),\n+                \"--\" + StandardArgumentDefinitions.SEQUENCE_DICTIONARY_NAME, SEQUENCE_DICTIONARY_FILE.getAbsolutePath(),\n+                \"--\" + PlottingUtils.MAXIMUM_COPY_RATIO_LONG_NAME, \"Infinity\",\n+                \"-\" + StandardArgumentDefinitions.OUTPUT_SHORT_NAME, outputDir.getAbsolutePath(),\n+                \"--\" + CopyNumberStandardArgument.OUTPUT_PREFIX_LONG_NAME, OUTPUT_PREFIX\n+        };\n+        runCommandLine(arguments);\n+        assertFilesCreated(outputDir);\n+    }\n+\n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testMinimumContigLength() {\n         final File outputDir = createTempDir(\"testDir\");\n         final String[] arguments = {\n                 \"--\" + CopyNumberStandardArgument.STANDARDIZED_COPY_RATIOS_FILE_LONG_NAME, STANDARDIZED_COPY_RATIOS_FILE.getAbsolutePath(),\n                 \"--\" + CopyNumberStandardArgument.DENOISED_COPY_RATIOS_FILE_LONG_NAME, DENOISED_COPY_RATIOS_FILE.getAbsolutePath(),\n-                \"-\" + StandardArgumentDefinitions.SEQUENCE_DICTIONARY_NAME, SEQUENCE_DICTIONARY_WITH_NO_CONTIGS_ABOVE_MINIMUM_LENGTH_FILE.getAbsolutePath(),\n+                \"--\" + StandardArgumentDefinitions.SEQUENCE_DICTIONARY_NAME, SEQUENCE_DICTIONARY_WITH_NO_CONTIGS_ABOVE_MINIMUM_LENGTH_FILE.getAbsolutePath(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd4b4aa2e3334ccf1783d08a5278b3de551eca7"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1MjgxOQ==", "bodyText": "Short names use -, long names use --.  It just happens that the short and long names for sequence dictionary are the same for the CNV plotting tools, but this line of code would've broken if that was ever changed.", "url": "https://github.com/broadinstitute/gatk/pull/6482#discussion_r413852819", "createdAt": "2020-04-23T14:38:24Z", "author": {"login": "samuelklee"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/copynumber/plotting/PlotDenoisedCopyRatiosIntegrationTest.java", "diffHunk": "@@ -62,13 +49,44 @@ public void testPlotting() {\n         Assert.assertEquals(scaledDeltaMAD, (standardizedMAD - denoisedMAD) / standardizedMAD);\n     }\n \n+    //checks that output files with reasonable file sizes are generated, but correctness of output is not checked\n+    @Test(groups = \"R\")\n+    public void testPlotting() {\n+        final File outputDir = createTempDir(\"testDir\");\n+        final String[] arguments = {\n+                \"--\" + CopyNumberStandardArgument.STANDARDIZED_COPY_RATIOS_FILE_LONG_NAME, STANDARDIZED_COPY_RATIOS_FILE.getAbsolutePath(),\n+                \"--\" + CopyNumberStandardArgument.DENOISED_COPY_RATIOS_FILE_LONG_NAME, DENOISED_COPY_RATIOS_FILE.getAbsolutePath(),\n+                \"--\" + StandardArgumentDefinitions.SEQUENCE_DICTIONARY_NAME, SEQUENCE_DICTIONARY_FILE.getAbsolutePath(),\n+                \"-\" + StandardArgumentDefinitions.OUTPUT_SHORT_NAME, outputDir.getAbsolutePath(),\n+                \"--\" + CopyNumberStandardArgument.OUTPUT_PREFIX_LONG_NAME, OUTPUT_PREFIX\n+        };\n+        runCommandLine(arguments);\n+        assertFilesCreated(outputDir);\n+    }\n+\n+    //checks that output files with reasonable file sizes are generated, but correctness of output is not checked\n+    @Test(groups = \"R\")\n+    public void testPlottingInfiniteMaximumCopyRatio() {\n+        final File outputDir = createTempDir(\"testDir\");\n+        final String[] arguments = {\n+                \"--\" + CopyNumberStandardArgument.STANDARDIZED_COPY_RATIOS_FILE_LONG_NAME, STANDARDIZED_COPY_RATIOS_FILE.getAbsolutePath(),\n+                \"--\" + CopyNumberStandardArgument.DENOISED_COPY_RATIOS_FILE_LONG_NAME, DENOISED_COPY_RATIOS_FILE.getAbsolutePath(),\n+                \"--\" + StandardArgumentDefinitions.SEQUENCE_DICTIONARY_NAME, SEQUENCE_DICTIONARY_FILE.getAbsolutePath(),\n+                \"--\" + PlottingUtils.MAXIMUM_COPY_RATIO_LONG_NAME, \"Infinity\",\n+                \"-\" + StandardArgumentDefinitions.OUTPUT_SHORT_NAME, outputDir.getAbsolutePath(),\n+                \"--\" + CopyNumberStandardArgument.OUTPUT_PREFIX_LONG_NAME, OUTPUT_PREFIX\n+        };\n+        runCommandLine(arguments);\n+        assertFilesCreated(outputDir);\n+    }\n+\n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testMinimumContigLength() {\n         final File outputDir = createTempDir(\"testDir\");\n         final String[] arguments = {\n                 \"--\" + CopyNumberStandardArgument.STANDARDIZED_COPY_RATIOS_FILE_LONG_NAME, STANDARDIZED_COPY_RATIOS_FILE.getAbsolutePath(),\n                 \"--\" + CopyNumberStandardArgument.DENOISED_COPY_RATIOS_FILE_LONG_NAME, DENOISED_COPY_RATIOS_FILE.getAbsolutePath(),\n-                \"-\" + StandardArgumentDefinitions.SEQUENCE_DICTIONARY_NAME, SEQUENCE_DICTIONARY_WITH_NO_CONTIGS_ABOVE_MINIMUM_LENGTH_FILE.getAbsolutePath(),\n+                \"--\" + StandardArgumentDefinitions.SEQUENCE_DICTIONARY_NAME, SEQUENCE_DICTIONARY_WITH_NO_CONTIGS_ABOVE_MINIMUM_LENGTH_FILE.getAbsolutePath(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0MTMwOQ=="}, "originalCommit": {"oid": "8cd4b4aa2e3334ccf1783d08a5278b3de551eca7"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjE2Nzg2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/broadinstitute/hellbender/tools/copynumber/plotting/PlotDenoisedCopyRatiosIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDoyNTo0OVrOGKq5wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDoyNTo0OVrOGKq5wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0MTg1Ng==", "bodyText": "Do StandardArgumentDefinitions use \"-\" or \"--\"?", "url": "https://github.com/broadinstitute/gatk/pull/6482#discussion_r413841856", "createdAt": "2020-04-23T14:25:49Z", "author": {"login": "fleharty"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/copynumber/plotting/PlotDenoisedCopyRatiosIntegrationTest.java", "diffHunk": "@@ -81,7 +99,7 @@ public void testNonExistentStandardizedFile() {\n         final String[] arguments = {\n                 \"--\" + CopyNumberStandardArgument.STANDARDIZED_COPY_RATIOS_FILE_LONG_NAME, \"Non-existent-file\",\n                 \"--\" + CopyNumberStandardArgument.DENOISED_COPY_RATIOS_FILE_LONG_NAME, DENOISED_COPY_RATIOS_FILE.getAbsolutePath(),\n-                \"-\" + StandardArgumentDefinitions.SEQUENCE_DICTIONARY_NAME, SEQUENCE_DICTIONARY_FILE.getAbsolutePath(),\n+                \"--\" + StandardArgumentDefinitions.SEQUENCE_DICTIONARY_NAME, SEQUENCE_DICTIONARY_FILE.getAbsolutePath(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd4b4aa2e3334ccf1783d08a5278b3de551eca7"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1124, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}