{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjY3Njkx", "number": 6987, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowMzowNVrOE_zvGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowODo0MlrOE_z2kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzQzMzg0OnYy", "diffSide": "RIGHT", "path": "scripts/variantstore/wdl/ngs_filter_extract.wdl", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowMzowNVrOH9uCcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowMzowNVrOH9uCcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ3OTQ3NA==", "bodyText": "can you add a comment here on why we are setting the max?", "url": "https://github.com/broadinstitute/gatk/pull/6987#discussion_r534479474", "createdAt": "2020-12-02T21:03:05Z", "author": {"login": "ahaessly"}, "path": "scripts/variantstore/wdl/ngs_filter_extract.wdl", "diffHunk": "@@ -458,7 +458,7 @@ task SNPsVariantRecalibrator {\n \n     MODEL_REPORT=~{model_report}\n \n-    gatk --java-options -Xms~{java_mem}g \\\n+    gatk --java-options -Xmx~{java_mem}g \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9197542941f250de49401316a8f872766c3c10e5"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzQ1Mjk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/PetTsvWriter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowODo0MlrOH9uODg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowODo0MlrOH9uODg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4MjQ0Ng==", "bodyText": "why does this do nothing?", "url": "https://github.com/broadinstitute/gatk/pull/6987#discussion_r534482446", "createdAt": "2020-12-02T21:08:42Z", "author": {"login": "ahaessly"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/PetTsvWriter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.broadinstitute.hellbender.tools.variantdb.nextgen;\n+\n+import java.io.BufferedWriter;\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+\n+import org.broadinstitute.hellbender.tools.variantdb.IngestConstants;\n+\n+\n+public class PetTsvWriter implements Closeable {\n+    private BufferedWriter writer;\n+    private final static char SEPARATOR = IngestConstants.SEPARATOR;\n+\n+//    static private TypeDescription schema = TypeDescription.fromString(\"struct<location:int,sample:int,state:char(1)>\");\n+\n+    public PetTsvWriter(String outputFile) throws IOException{\n+        writer = Files.newBufferedWriter(Paths.get(outputFile));\n+\n+        writer.append(\"location\");\n+        writer.append(SEPARATOR);\n+        writer.append(\"sample\");\n+        writer.append(SEPARATOR);\n+        writer.append(\"state\");\n+    }\n+\n+    public void addRow(long location, long sampleId, String state) throws IOException {              \n+        // writer.append(String.valueOf(location));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9197542941f250de49401316a8f872766c3c10e5"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 761, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}