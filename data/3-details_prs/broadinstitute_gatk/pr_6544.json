{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMjM1Mzk4", "number": 6544, "title": "Fixed regression where alt haplotypes with deletion at end of padded region caused exceptions", "bodyText": "@jamesemery Here is the bug fix.  It's working on a lot of bams.  It all comes down to keeping anything ref-consuming in an alt haplotype's cigar, even leading/trailing deletions.  My mistake earlier was to treat haplotype cigars like read cigars.", "createdAt": "2020-04-07T12:26:26Z", "url": "https://github.com/broadinstitute/gatk/pull/6544", "merged": true, "mergeCommit": {"oid": "21edd5b2e805f7aa6d25b2d79fecf4bdae56c2f8"}, "closed": true, "closedAt": "2020-04-21T17:59:20Z", "author": {"login": "davidbenjamin"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVMNScAH2gAyNDAwMjM1Mzk4OjNmNGVmMzA0NjAxNGI2MTU4MmViYzBiODEwNzMwZmFmYjRiOWYzOGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ139mgFqTM5NzQ1ODk5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3f4ef3046014b61582ebc0b810730fafb4b9f38c", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/3f4ef3046014b61582ebc0b810730fafb4b9f38c", "committedDate": "2020-04-07T05:11:52Z", "message": "Fixed regression where alt haplotypes with deletion at end of padded region caused exceptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MTc5Nzc1", "url": "https://github.com/broadinstitute/gatk/pull/6544#pullrequestreview-389179775", "createdAt": "2020-04-07T14:35:13Z", "commit": {"oid": "3f4ef3046014b61582ebc0b810730fafb4b9f38c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDozNToxM1rOGCGmog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNToyNzowN1rOGCJIlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1ODUzMA==", "bodyText": "Can you add a test to HaplotypeUnitTest that asserts this works reasonably with leading insertions and deletions? You should hopefullh be able to use the constructor to build dummy haplotype objects and assert that leading/trailing indels are being destroyed correctly.", "url": "https://github.com/broadinstitute/gatk/pull/6544#discussion_r404858530", "createdAt": "2020-04-07T14:35:13Z", "author": {"login": "jamesemery"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/haplotype/Haplotype.java", "diffHunk": "@@ -98,11 +98,21 @@ public Haplotype trim(final Locatable loc) {\n             return null;\n         }\n \n-        // note: trimCigarByReference does not remove leading indels, while getBasesCoveringRefInterval does remove bases\n-        // of leading indels.  We must remove leading indels from the Cigar manually.\n+        // note: trimCigarByReference does not remove leading or trailing indels, while getBasesCoveringRefInterval does remove bases", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f4ef3046014b61582ebc0b810730fafb4b9f38c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg2NjQzMA==", "bodyText": "This would also consume other leading/trailing signals like softclips correct?", "url": "https://github.com/broadinstitute/gatk/pull/6544#discussion_r404866430", "createdAt": "2020-04-07T14:45:11Z", "author": {"login": "jamesemery"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/haplotype/Haplotype.java", "diffHunk": "@@ -98,11 +98,21 @@ public Haplotype trim(final Locatable loc) {\n             return null;\n         }\n \n-        // note: trimCigarByReference does not remove leading indels, while getBasesCoveringRefInterval does remove bases\n-        // of leading indels.  We must remove leading indels from the Cigar manually.\n+        // note: trimCigarByReference does not remove leading or trailing indels, while getBasesCoveringRefInterval does remove bases\n+        // of leading and trailing insertions.  We must remove leading and trailing insertions from the Cigar manually.\n+        // we keep leading and trailing deletions because these are necessary for haplotypes to maintain consistent reference coordinates\n         final Cigar newCigar = AlignmentUtils.trimCigarByReference(getCigar(), newStart, newStop).getCigar();\n-        final Cigar leadingIndelTrimmedNewCigar = newCigar.getFirstCigarElement().getOperator().consumesReferenceBases() ? newCigar :\n-                new CigarBuilder().addAll(newCigar.getCigarElements().subList(1, newCigar.numCigarElements())).make();\n+        final boolean leadingInsertion = !newCigar.getFirstCigarElement().getOperator().consumesReferenceBases();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f4ef3046014b61582ebc0b810730fafb4b9f38c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg4MjE4Ng==", "bodyText": "I like that we have an integration test. Generally even if the test is intended to assert that we aren't getting an exception its best to actually assert something about the output. It wouldn't be too difficult to check in an output VCF for this file I shouldn't think.", "url": "https://github.com/broadinstitute/gatk/pull/6544#discussion_r404882186", "createdAt": "2020-04-07T15:04:22Z", "author": {"login": "jamesemery"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerIntegrationTest.java", "diffHunk": "@@ -1318,6 +1318,23 @@ public void testAdjacentIndels() {\n                 .allMatch(vc -> vc.isBiallelic() && (vc.getReference().length() == 1 || vc.getAlternateAllele(0).length() == 1)));\n     }\n \n+    // this test has a reference with 8 repeats of a 28-mer and an alt with 7 repeats.  This deletion left-aligns to the\n+    // beginning of the padded assembly region, and an exception occurs if we carelessly drop the leading deletion from\n+    // the alt haplotype's cigar.  This is a regression test for https://github.com/broadinstitute/gatk/issues/6533.\n+    @Test\n+    public void testLeadingDeletionInAltHaplotype() {\n+        final File bam = new File(TEST_FILES_DIR, \"alt-haplotype-leading-deletion.bam\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f4ef3046014b61582ebc0b810730fafb4b9f38c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg5OTk4OQ==", "bodyText": "Add a run of tests asserting both true and false cases for this variable.", "url": "https://github.com/broadinstitute/gatk/pull/6544#discussion_r404899989", "createdAt": "2020-04-07T15:27:07Z", "author": {"login": "jamesemery"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/read/CigarBuilder.java", "diffHunk": "@@ -34,11 +36,19 @@\n \n     private Section section = Section.LEFT_HARD_CLIP;\n \n+    private final boolean removeDeletionsAtEnds;\n+\n     private int leadingDeletionBasesRemoved = 0;\n     private int trailingDeletionBasesRemoved = 0;\n     private int trailingDeletionBasesRemovedInMake = 0;\n \n-    public CigarBuilder() { }\n+    public CigarBuilder(final boolean removeDeletionsAtEnds) {\n+        this.removeDeletionsAtEnds = removeDeletionsAtEnds;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f4ef3046014b61582ebc0b810730fafb4b9f38c"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "375a625c92c6a6cf2c1e700d8265da5e1122712b", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/375a625c92c6a6cf2c1e700d8265da5e1122712b", "committedDate": "2020-04-12T06:03:57Z", "message": "review edits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NDU0NjY3", "url": "https://github.com/broadinstitute/gatk/pull/6544#pullrequestreview-397454667", "createdAt": "2020-04-21T15:47:17Z", "commit": {"oid": "375a625c92c6a6cf2c1e700d8265da5e1122712b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NDU4OTk0", "url": "https://github.com/broadinstitute/gatk/pull/6544#pullrequestreview-397458994", "createdAt": "2020-04-21T16:00:17Z", "commit": {"oid": "375a625c92c6a6cf2c1e700d8265da5e1122712b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2850, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}