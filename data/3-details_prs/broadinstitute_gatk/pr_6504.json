{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjU3ODU3", "number": 6504, "title": "WDL generation.", "bodyText": "This requires a Barclay upgrade (that is not yet published) since most of the basic WDL generation code is in Barclay. WDL is only generated for tools that are annotated with @RuntimeProperties, and that have input/output files arguments that are annotated with@WorkflowResource.\nFor each WDL generated, an accompanying JSON input file is generated that contains all the tool's arguments, with the optional arguments initialized to the tool's default values, and the required args initialized to a string that describes the required type. A temporary commit that contains a sample WDL/JSON generated by the WDL gen task in included to make it easier to see the WDL that results.\nThe only commits in this branch that are directly WDL-gen related are the WDL Gen commit itself, and the sample output commit. The other commits are either related to GATKPathSpecifier migration (not required for WDL gen) or Barclay upgrade migration (required for WDL gen).", "createdAt": "2020-03-16T14:02:24Z", "url": "https://github.com/broadinstitute/gatk/pull/6504", "merged": true, "mergeCommit": {"oid": "896e54e3ba85114a6b2348c9d5a63034def280df"}, "closed": true, "closedAt": "2020-06-30T21:42:27Z", "author": {"login": "cmnbroad"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ667oABqjMxNjE4MzYzNzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwct5LgFqTQ0MDQwNjkzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bfccfa3ebdb8c1e3bb853a3fac19f90a544a5b63", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/bfccfa3ebdb8c1e3bb853a3fac19f90a544a5b63", "committedDate": "2020-03-16T13:50:38Z", "message": "Temporary commit with a couple of generated WDL and input json files."}, "afterCommit": {"oid": "e36a24345745b632e0c9540dc7dbab4127e97ae3", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/e36a24345745b632e0c9540dc7dbab4127e97ae3", "committedDate": "2020-03-24T14:40:38Z", "message": "Upgrade barclay."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjA5MDA5", "url": "https://github.com/broadinstitute/gatk/pull/6504#pullrequestreview-390209009", "createdAt": "2020-04-08T18:04:33Z", "commit": {"oid": "e36a24345745b632e0c9540dc7dbab4127e97ae3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e36a24345745b632e0c9540dc7dbab4127e97ae3", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/e36a24345745b632e0c9540dc7dbab4127e97ae3", "committedDate": "2020-03-24T14:40:38Z", "message": "Upgrade barclay."}, "afterCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/c46d36293a8b26a3e3ad6d325a9cba5a6133f904", "committedDate": "2020-04-28T22:33:19Z", "message": "Update Barclay version."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTMzMDMz", "url": "https://github.com/broadinstitute/gatk/pull/6504#pullrequestreview-408533033", "createdAt": "2020-05-08T21:16:55Z", "commit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMToxNjo1NVrOGSz_8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODoyNTo1NVrOGUTffw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3OTUwNg==", "bodyText": "Do we want to update to a newer cromwell / womtool version?  Looks like v47 is used in the gatkWDLGenValidation build task.", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r422379506", "createdAt": "2020-05-08T21:16:55Z", "author": {"login": "jonn-smith"}, "path": ".travis.yml", "diffHunk": "@@ -41,8 +41,9 @@ env:\n   - ARTIFACTORY_USERNAME=gatkci\n   #artifactory password\n   - secure: \"E0LWXgX3aWSE/DWHXXDx4vrAq4uX6vKg402wToaZ5otbHQ/UP0H7/FA5jomavAXoC46oMVHZcEltZ5OVhuJ0NW8yYxUCecJ1D/YvVQmnfFABcV/qLM+k4e2rYQOKVw/pejB2gG8XdTA+XE2WyTeENbmIkputS8f1ndKWCmZxuuk=\"\n-  # For cromwell jar download\n+  # For cromwell/womtool jar downloads\n   - CROMWELL_JAR=$HOME/cromwell-36.jar\n+  - WOMTOOL_JAR=$HOME/womtool-36.jar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMTgxNw==", "bodyText": "Reminder to remove.", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r422401817", "createdAt": "2020-05-08T22:20:49Z", "author": {"login": "jonn-smith"}, "path": "build.gradle", "diffHunk": "@@ -744,7 +744,72 @@ task gatkTabComplete(type: Javadoc, dependsOn: classes) {\n     options.addStringOption(\"caller-post-arg-max-occurs\", \"1 1 1 1 1 1 1 1 1 1\")\n }\n \n+// Generate GATK Tool WDL\n+task gatkWDLGen(type: Javadoc, dependsOn: classes) {\n+    final File gatkWDLDir = new File(\"$docBuildDir/wdlGen\")\n+    outputs.dir(gatkWDLDir)\n+    doFirst {\n+        // make sure the output folder exists or we can create it\n+        if (!gatkWDLDir.exists() && !gatkWDLDir.mkdirs()) {\n+            throw new GradleException(String.format(\"Failure creating folder (%s) for GATK DL output in task (%s)\",\n+                    gatkWDLDir.getAbsolutePath(),\n+                    it.name));\n+        }\n+        copy {\n+            from('src/main/resources/org/broadinstitute/hellbender/utils/wdlTemplates/common.html')\n+            into gatkWDLDir\n+        }\n+    }\n+    // NOTE: For now we don't generate WDL for Picard tools since they're not annotated, so we don't include\n+    // the Picard source jar for this task.\n+    source = sourceSets.main.allJava\n+    include '**/*.java'\n \n+    // The gatkWDLGen process instantiates any documented feature classes, so to run it we need the entire\n+    // runtime classpath, as well as jdk javadoc files such as tools.jar, where com.sun.javadoc lives.\n+    classpath = sourceSets.main.runtimeClasspath + javadocJDKFiles\n+    options.docletpath = classpath.asType(List)\n+    options.doclet = \"org.broadinstitute.hellbender.utils.help.GATKWDLDoclet\"\n+\n+    outputs.dir(gatkWDLDir)\n+    options.destinationDirectory(gatkWDLDir)\n+\n+    options.addStringOption(\"settings-dir\", \"src/main/resources/org/broadinstitute/hellbender/utils/wdlTemplates\");\n+    options.addStringOption(\"output-file-extension\", \"wdl\")\n+    options.addStringOption(\"index-file-extension\", \"html\")\n+\n+    options.addStringOption(\"absolute-version\", getVersion())\n+    options.addStringOption(\"build-timestamp\", ZonedDateTime.now().format(DateTimeFormatter.RFC_1123_DATE_TIME))\n+}\n+\n+task gatkWDLGenValidation(dependsOn: gatkWDLGen) {\n+    def execWOMToolValidation = { validateWDL ->\n+        println \"Executing: $validateWDL\"\n+        try {\n+            def retCode = validateWDL.execute().waitFor()\n+            if (retCode.intValue() != 0) {\n+                throw new GradleException(\"Execution of \\\"$validateWDL\\\" failed with exit code: $retCode.\")\n+            }\n+            return retCode\n+        } catch (IOException e) {\n+            throw new GradleException(\"An IOException occurred while attempting to execute the command $validateWDL.\")\n+        }\n+    }\n+\n+    doLast {\n+        final wdlGenFolder = \"build/docs/wdlgen\"\n+        def wdlFiles = fileTree(dir: wdlGenFolder)\n+        wdlFiles = wdlFiles.filter { f -> !f.getAbsolutePath().endsWith(\".html\") && !f.getAbsolutePath().endsWith(\".json\")}\n+        return wdlFiles.any() { wdlFile ->\n+            //TODO: fix this before submitting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc2Njk0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Run PrintReads (GATK Version 4.1.7.0-7-gcd21b9c-SNAPSHOT)\n          \n          \n            \n            # Run PrintReads (WDL Autogenerated from: GATK Version 4.1.7.0-7-gcd21b9c-SNAPSHOT)", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r423766949", "createdAt": "2020-05-12T14:13:09Z", "author": {"login": "jonn-smith"}, "path": "tempCommit/PrintReads.wdl", "diffHunk": "@@ -0,0 +1,297 @@\n+version 1.0\n+\n+# Run PrintReads (GATK Version 4.1.7.0-7-gcd21b9c-SNAPSHOT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyNDI1MQ==", "bodyText": "I've been thinking about versioning and how it applies to the docker image and GATK executables here.\nI think we should have a default value here for the gatk executable so this can run out of the box on a GATK docker image.\nShould we have a default for a docker image here?  Or should we make a check in the command block below to make sure the GATK is the right version?  I'm a little concerned about version mismatches.", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r423924251", "createdAt": "2020-05-12T17:53:18Z", "author": {"login": "jonn-smith"}, "path": "tempCommit/PrintReads.wdl", "diffHunk": "@@ -0,0 +1,297 @@\n+version 1.0\n+\n+# Run PrintReads (GATK Version 4.1.7.0-7-gcd21b9c-SNAPSHOT)\n+#\n+# Print reads in the SAM/BAM/CRAM file\n+#\n+#  General Workflow (non-tool) Arguments\n+#    dockerImage                                        Docker image for this workflow\n+#    gatk                                               Location of gatk to run for this workflow\n+#    memoryRequirements                                 Runtime memory requirements for this workflow\n+#    diskRequirements                                   Runtime disk requirements for this workflow\n+#\n+#  Required Tool Arguments\n+#    input_arg                                          BAM/SAM/CRAM file containing reads                          \n+#    output_arg                                         Write output to this file                                   \n+#\n+#  Optional Tool Arguments\n+#    arguments_file                                     read one or more arguments files and add them to the command line\n+#    cloud_index_prefetch_buffer                        Size of the cloud-only prefetch buffer (in MB; 0 to disable). Defaults to cloudP\n+#    cloud_prefetch_buffer                              Size of the cloud-only prefetch buffer (in MB; 0 to disable).\n+#    disable_bam_index_caching                          If true, don't cache bam indexes, this will reduce memory requirements but may h\n+#    disable_sequence_dictionary_validation             If specified, do not check the sequence dictionaries from our inputs for compati\n+#    gcs_max_retries                                    If the GCS bucket channel errors out, how many times it will attempt to re-initi\n+#    gcs_project_for_requester_pays                     Project to bill when accessing \"requester pays\" buckets. If unset, these buckets\n+#    help                                               display the help message                                    \n+#    interval_merging_rule                              Interval merging rule for abutting intervals                \n+#    intervals                                          One or more genomic intervals over which to operate         \n+#    reference                                          Reference sequence                                          \n+#    sites_only_vcf_output                              If true, don't emit genotype fields when writing vcf file output.\n+#    version_arg                                        display the version number for this tool                    \n+#\n+#  Optional Common Arguments\n+#    add_output_sam_program_record                      If true, adds a PG tag to created SAM/BAM/CRAM files.       \n+#    add_output_vcf_command_line                        If true, adds a command line header line to created VCF files.\n+#    create_output_bam_index                            If true, create a BAM/CRAM index when writing a coordinate-sorted BAM/CRAM file.\n+#    create_output_bam_md5                              If true, create a MD5 digest for any BAM/SAM/CRAM file created\n+#    create_output_variant_index                        If true, create a VCF index when writing a coordinate-sorted VCF file.\n+#    create_output_variant_md5                          If true, create a a MD5 digest any VCF file created.        \n+#    disable_read_filter                                Read filters to be disabled before analysis                 \n+#    disable_tool_default_read_filters                  Disable all tool default read filters (WARNING: many tools will not function cor\n+#    exclude_intervals                                  One or more genomic intervals to exclude from processing    \n+#    gatk_config_file                                   A configuration file to use with the GATK.                  \n+#    interval_exclusion_padding                         Amount of padding (in bp) to add to each interval you are excluding.\n+#    interval_padding                                   Amount of padding (in bp) to add to each interval you are including.\n+#    interval_set_rule                                  Set merging approach to use for combining interval inputs   \n+#    lenient                                            Lenient processing of VCF files                             \n+#    QUIET                                              Whether to suppress job-summary info on System.err.         \n+#    read_filter                                        Read filters to be applied before analysis                  \n+#    read_index                                         Indices to use for the read inputs. If specified, an index must be provided for \n+#    read_validation_stringency                         Validation stringency for all SAM/BAM/CRAM/SRA files read by this program.  The \n+#    seconds_between_progress_updates                   Output traversal statistics every time this many seconds elapse\n+#    sequence_dictionary                                Use the given sequence dictionary as the master/canonical sequence dictionary.  \n+#    tmp_dir                                            Temp directory to use.                                      \n+#    use_jdk_deflater                                   Whether to use the JdkDeflater (as opposed to IntelDeflater)\n+#    use_jdk_inflater                                   Whether to use the JdkInflater (as opposed to IntelInflater)\n+#    verbosity                                          Control verbosity of logging.                               \n+\n+workflow PrintReads {\n+\n+  input {\n+    #Docker to use\n+    String dockerImage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyNjE5MA==", "bodyText": "Do we want to give some default parameters for memory and disk?\nI typically start with some defaults.  Here's something like what I usually start with:\n    input {\n        Int? mem_gb\n        Int? preemptible_attempts\n        Int? disk_space_gb\n        Int? cpu\n        Int? boot_disk_size_gb\n    }\n\n    Boolean use_ssd = false\n\n    Float input_files_size_gb = size(reads_file, \"GiB\") + size(segments_fasta, \"GiB\") + size(boundaries_file, \"GiB\")\n\n    # You may have to change the following two parameter values depending on the task requirements\n    Int default_ram_mb = 2048\n    Int default_disk_space_gb = ceil((input_files_size_gb * 2) + 1024)\n\n    Int default_boot_disk_size_gb = 15\n\n    # Mem is in units of GB but our command and memory runtime values are in MB\n    Int machine_mem = if defined(mem_gb) then mem_gb * 1024 else default_ram_mb\n\n\n     runtime {\n         docker: docker_image\n         memory: machine_mem + \" MB\"\n         disks: \"local-disk \" + select_first([disk_space_gb, default_disk_space_gb]) + if use_ssd then \" SSD\" else \" HDD\"\n         bootDiskSizeGb: select_first([boot_disk_size_gb, default_boot_disk_size_gb])\n         preemptible: select_first([preemptible_attempts, 1])\n         cpu: select_first([cpu, 1])\n     }", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r423926190", "createdAt": "2020-05-12T17:56:23Z", "author": {"login": "jonn-smith"}, "path": "tempCommit/PrintReads.wdl", "diffHunk": "@@ -0,0 +1,297 @@\n+version 1.0\n+\n+# Run PrintReads (GATK Version 4.1.7.0-7-gcd21b9c-SNAPSHOT)\n+#\n+# Print reads in the SAM/BAM/CRAM file\n+#\n+#  General Workflow (non-tool) Arguments\n+#    dockerImage                                        Docker image for this workflow\n+#    gatk                                               Location of gatk to run for this workflow\n+#    memoryRequirements                                 Runtime memory requirements for this workflow\n+#    diskRequirements                                   Runtime disk requirements for this workflow\n+#\n+#  Required Tool Arguments\n+#    input_arg                                          BAM/SAM/CRAM file containing reads                          \n+#    output_arg                                         Write output to this file                                   \n+#\n+#  Optional Tool Arguments\n+#    arguments_file                                     read one or more arguments files and add them to the command line\n+#    cloud_index_prefetch_buffer                        Size of the cloud-only prefetch buffer (in MB; 0 to disable). Defaults to cloudP\n+#    cloud_prefetch_buffer                              Size of the cloud-only prefetch buffer (in MB; 0 to disable).\n+#    disable_bam_index_caching                          If true, don't cache bam indexes, this will reduce memory requirements but may h\n+#    disable_sequence_dictionary_validation             If specified, do not check the sequence dictionaries from our inputs for compati\n+#    gcs_max_retries                                    If the GCS bucket channel errors out, how many times it will attempt to re-initi\n+#    gcs_project_for_requester_pays                     Project to bill when accessing \"requester pays\" buckets. If unset, these buckets\n+#    help                                               display the help message                                    \n+#    interval_merging_rule                              Interval merging rule for abutting intervals                \n+#    intervals                                          One or more genomic intervals over which to operate         \n+#    reference                                          Reference sequence                                          \n+#    sites_only_vcf_output                              If true, don't emit genotype fields when writing vcf file output.\n+#    version_arg                                        display the version number for this tool                    \n+#\n+#  Optional Common Arguments\n+#    add_output_sam_program_record                      If true, adds a PG tag to created SAM/BAM/CRAM files.       \n+#    add_output_vcf_command_line                        If true, adds a command line header line to created VCF files.\n+#    create_output_bam_index                            If true, create a BAM/CRAM index when writing a coordinate-sorted BAM/CRAM file.\n+#    create_output_bam_md5                              If true, create a MD5 digest for any BAM/SAM/CRAM file created\n+#    create_output_variant_index                        If true, create a VCF index when writing a coordinate-sorted VCF file.\n+#    create_output_variant_md5                          If true, create a a MD5 digest any VCF file created.        \n+#    disable_read_filter                                Read filters to be disabled before analysis                 \n+#    disable_tool_default_read_filters                  Disable all tool default read filters (WARNING: many tools will not function cor\n+#    exclude_intervals                                  One or more genomic intervals to exclude from processing    \n+#    gatk_config_file                                   A configuration file to use with the GATK.                  \n+#    interval_exclusion_padding                         Amount of padding (in bp) to add to each interval you are excluding.\n+#    interval_padding                                   Amount of padding (in bp) to add to each interval you are including.\n+#    interval_set_rule                                  Set merging approach to use for combining interval inputs   \n+#    lenient                                            Lenient processing of VCF files                             \n+#    QUIET                                              Whether to suppress job-summary info on System.err.         \n+#    read_filter                                        Read filters to be applied before analysis                  \n+#    read_index                                         Indices to use for the read inputs. If specified, an index must be provided for \n+#    read_validation_stringency                         Validation stringency for all SAM/BAM/CRAM/SRA files read by this program.  The \n+#    seconds_between_progress_updates                   Output traversal statistics every time this many seconds elapse\n+#    sequence_dictionary                                Use the given sequence dictionary as the master/canonical sequence dictionary.  \n+#    tmp_dir                                            Temp directory to use.                                      \n+#    use_jdk_deflater                                   Whether to use the JdkDeflater (as opposed to IntelDeflater)\n+#    use_jdk_inflater                                   Whether to use the JdkInflater (as opposed to IntelInflater)\n+#    verbosity                                          Control verbosity of logging.                               \n+\n+workflow PrintReads {\n+\n+  input {\n+    #Docker to use\n+    String dockerImage\n+    #App location\n+    String gatk\n+    #Memory to use\n+    String memoryRequirements\n+    #Disk requirements for this workflow\n+    String diskRequirements\n+\n+    # Required Arguments\n+    Array[String] input_arg\n+    File output_arg\n+    File outputcompanionIndex\n+\n+    # Optional Tool Arguments\n+    Array[File]? arguments_file\n+    Int? cloud_index_prefetch_buffer\n+    Int? cloud_prefetch_buffer\n+    Boolean? disable_bam_index_caching\n+    Boolean? disable_sequence_dictionary_validation\n+    Int? gcs_max_retries\n+    String? gcs_project_for_requester_pays\n+    Boolean? help\n+    String? interval_merging_rule\n+    Array[String]? intervals\n+    File? reference\n+    File? referenceDictionary\n+    File? referenceIndex\n+    Boolean? sites_only_vcf_output\n+    Boolean? version_arg\n+\n+    # Optional Common Arguments\n+    Boolean? add_output_sam_program_record\n+    Boolean? add_output_vcf_command_line\n+    Boolean? create_output_bam_index\n+    Boolean? create_output_bam_md5\n+    Boolean? create_output_variant_index\n+    Boolean? create_output_variant_md5\n+    Array[String]? disable_read_filter\n+    Boolean? disable_tool_default_read_filters\n+    Array[String]? exclude_intervals\n+    String? gatk_config_file\n+    Int? interval_exclusion_padding\n+    Int? interval_padding\n+    String? interval_set_rule\n+    Boolean? lenient\n+    Boolean? QUIET\n+    Array[String]? read_filter\n+    Array[String]? read_index\n+    String? read_validation_stringency\n+    Float? seconds_between_progress_updates\n+    String? sequence_dictionary\n+    File? tmp_dir\n+    Boolean? use_jdk_deflater\n+    Boolean? use_jdk_inflater\n+    String? verbosity\n+\n+  }\n+\n+  call PrintReadsTask {\n+\n+    input:\n+    #Docker\n+    dockerImage                                        = dockerImage,\n+    #App location\n+    gatk                                               = gatk,\n+    #Memory to use\n+    memoryRequirements                                 = memoryRequirements,\n+    #Disk requirements for this workflow\n+    diskRequirements                                   = diskRequirements,\n+\n+\n+    # Required Arguments\n+    input_arg                                          = input_arg,\n+    output_arg                                         = output_arg,\n+    outputcompanionIndex                               = outputcompanionIndex,\n+\n+    # Optional Tool Arguments\n+    arguments_file                                     = arguments_file,\n+    cloud_index_prefetch_buffer                        = cloud_index_prefetch_buffer,\n+    cloud_prefetch_buffer                              = cloud_prefetch_buffer,\n+    disable_bam_index_caching                          = disable_bam_index_caching,\n+    disable_sequence_dictionary_validation             = disable_sequence_dictionary_validation,\n+    gcs_max_retries                                    = gcs_max_retries,\n+    gcs_project_for_requester_pays                     = gcs_project_for_requester_pays,\n+    help                                               = help,\n+    interval_merging_rule                              = interval_merging_rule,\n+    intervals                                          = intervals,\n+    reference                                          = reference,\n+    referenceDictionary                                = referenceDictionary,\n+    referenceIndex                                     = referenceIndex,\n+    sites_only_vcf_output                              = sites_only_vcf_output,\n+    version_arg                                        = version_arg,\n+\n+    # Optional Common Arguments\n+    add_output_sam_program_record                      = add_output_sam_program_record,\n+    add_output_vcf_command_line                        = add_output_vcf_command_line,\n+    create_output_bam_index                            = create_output_bam_index,\n+    create_output_bam_md5                              = create_output_bam_md5,\n+    create_output_variant_index                        = create_output_variant_index,\n+    create_output_variant_md5                          = create_output_variant_md5,\n+    disable_read_filter                                = disable_read_filter,\n+    disable_tool_default_read_filters                  = disable_tool_default_read_filters,\n+    exclude_intervals                                  = exclude_intervals,\n+    gatk_config_file                                   = gatk_config_file,\n+    interval_exclusion_padding                         = interval_exclusion_padding,\n+    interval_padding                                   = interval_padding,\n+    interval_set_rule                                  = interval_set_rule,\n+    lenient                                            = lenient,\n+    QUIET                                              = QUIET,\n+    read_filter                                        = read_filter,\n+    read_index                                         = read_index,\n+    read_validation_stringency                         = read_validation_stringency,\n+    seconds_between_progress_updates                   = seconds_between_progress_updates,\n+    sequence_dictionary                                = sequence_dictionary,\n+    tmp_dir                                            = tmp_dir,\n+    use_jdk_deflater                                   = use_jdk_deflater,\n+    use_jdk_inflater                                   = use_jdk_inflater,\n+    verbosity                                          = verbosity,\n+\n+  }\n+\n+  output {\n+    # Workflow Outputs                                  \n+    File PrintReadsoutput_arg = PrintReadsTask.PrintReadsTask_output_arg\n+    File PrintReadsoutputcompanionIndex = PrintReadsTask.PrintReadsTask_outputcompanionIndex\n+  }\n+}\n+\n+task PrintReadsTask {\n+\n+  input {\n+    String dockerImage\n+    String gatk\n+    String memoryRequirements\n+    String diskRequirements\n+    Array[String] input_arg\n+    File output_arg\n+    File outputcompanionIndex\n+    Array[File]? arguments_file\n+    Int? cloud_index_prefetch_buffer\n+    Int? cloud_prefetch_buffer\n+    Boolean? disable_bam_index_caching\n+    Boolean? disable_sequence_dictionary_validation\n+    Int? gcs_max_retries\n+    String? gcs_project_for_requester_pays\n+    Boolean? help\n+    String? interval_merging_rule\n+    Array[String]? intervals\n+    File? reference\n+    File? referenceDictionary\n+    File? referenceIndex\n+    Boolean? sites_only_vcf_output\n+    Boolean? version_arg\n+    Boolean? add_output_sam_program_record\n+    Boolean? add_output_vcf_command_line\n+    Boolean? create_output_bam_index\n+    Boolean? create_output_bam_md5\n+    Boolean? create_output_variant_index\n+    Boolean? create_output_variant_md5\n+    Array[String]? disable_read_filter\n+    Boolean? disable_tool_default_read_filters\n+    Array[String]? exclude_intervals\n+    String? gatk_config_file\n+    Int? interval_exclusion_padding\n+    Int? interval_padding\n+    String? interval_set_rule\n+    Boolean? lenient\n+    Boolean? QUIET\n+    Array[String]? read_filter\n+    Array[String]? read_index\n+    String? read_validation_stringency\n+    Float? seconds_between_progress_updates\n+    String? sequence_dictionary\n+    File? tmp_dir\n+    Boolean? use_jdk_deflater\n+    Boolean? use_jdk_inflater\n+    String? verbosity\n+\n+  }\n+\n+  command <<<\n+    ~{gatk} PrintReads \\\n+    --input_arg ~{sep=' --input_arg ' input_arg} \\\n+    --output_arg ~{sep=' --output_arg ' output_arg} \\\n+    ~{true='--arguments_file ' false='' defined(arguments_file)}~{sep=' --arguments_file ' arguments_file} \\\n+    ~{true='--cloud_index_prefetch_buffer ' false='' defined(cloud_index_prefetch_buffer)}~{sep=' --cloud_index_prefetch_buffer ' cloud_index_prefetch_buffer} \\\n+    ~{true='--cloud_prefetch_buffer ' false='' defined(cloud_prefetch_buffer)}~{sep=' --cloud_prefetch_buffer ' cloud_prefetch_buffer} \\\n+    ~{true='--disable_bam_index_caching ' false='' defined(disable_bam_index_caching)}~{sep=' --disable_bam_index_caching ' disable_bam_index_caching} \\\n+    ~{true='--disable_sequence_dictionary_validation ' false='' defined(disable_sequence_dictionary_validation)}~{sep=' --disable_sequence_dictionary_validation ' disable_sequence_dictionary_validation} \\\n+    ~{true='--gcs_max_retries ' false='' defined(gcs_max_retries)}~{sep=' --gcs_max_retries ' gcs_max_retries} \\\n+    ~{true='--gcs_project_for_requester_pays ' false='' defined(gcs_project_for_requester_pays)}~{sep=' --gcs_project_for_requester_pays ' gcs_project_for_requester_pays} \\\n+    ~{true='--help ' false='' defined(help)}~{sep=' --help ' help} \\\n+    ~{true='--interval_merging_rule ' false='' defined(interval_merging_rule)}~{sep=' --interval_merging_rule ' interval_merging_rule} \\\n+    ~{true='--intervals ' false='' defined(intervals)}~{sep=' --intervals ' intervals} \\\n+    ~{true='--reference ' false='' defined(reference)}~{sep=' --reference ' reference} \\\n+    ~{true='--sites_only_vcf_output ' false='' defined(sites_only_vcf_output)}~{sep=' --sites_only_vcf_output ' sites_only_vcf_output} \\\n+    ~{true='--version_arg ' false='' defined(version_arg)}~{sep=' --version_arg ' version_arg} \\\n+    ~{true='--add_output_sam_program_record ' false='' defined(add_output_sam_program_record)}~{sep=' --add_output_sam_program_record ' add_output_sam_program_record} \\\n+    ~{true='--add_output_vcf_command_line ' false='' defined(add_output_vcf_command_line)}~{sep=' --add_output_vcf_command_line ' add_output_vcf_command_line} \\\n+    ~{true='--create_output_bam_index ' false='' defined(create_output_bam_index)}~{sep=' --create_output_bam_index ' create_output_bam_index} \\\n+    ~{true='--create_output_bam_md5 ' false='' defined(create_output_bam_md5)}~{sep=' --create_output_bam_md5 ' create_output_bam_md5} \\\n+    ~{true='--create_output_variant_index ' false='' defined(create_output_variant_index)}~{sep=' --create_output_variant_index ' create_output_variant_index} \\\n+    ~{true='--create_output_variant_md5 ' false='' defined(create_output_variant_md5)}~{sep=' --create_output_variant_md5 ' create_output_variant_md5} \\\n+    ~{true='--disable_read_filter ' false='' defined(disable_read_filter)}~{sep=' --disable_read_filter ' disable_read_filter} \\\n+    ~{true='--disable_tool_default_read_filters ' false='' defined(disable_tool_default_read_filters)}~{sep=' --disable_tool_default_read_filters ' disable_tool_default_read_filters} \\\n+    ~{true='--exclude_intervals ' false='' defined(exclude_intervals)}~{sep=' --exclude_intervals ' exclude_intervals} \\\n+    ~{true='--gatk_config_file ' false='' defined(gatk_config_file)}~{sep=' --gatk_config_file ' gatk_config_file} \\\n+    ~{true='--interval_exclusion_padding ' false='' defined(interval_exclusion_padding)}~{sep=' --interval_exclusion_padding ' interval_exclusion_padding} \\\n+    ~{true='--interval_padding ' false='' defined(interval_padding)}~{sep=' --interval_padding ' interval_padding} \\\n+    ~{true='--interval_set_rule ' false='' defined(interval_set_rule)}~{sep=' --interval_set_rule ' interval_set_rule} \\\n+    ~{true='--lenient ' false='' defined(lenient)}~{sep=' --lenient ' lenient} \\\n+    ~{true='--QUIET ' false='' defined(QUIET)}~{sep=' --QUIET ' QUIET} \\\n+    ~{true='--read_filter ' false='' defined(read_filter)}~{sep=' --read_filter ' read_filter} \\\n+    ~{true='--read_index ' false='' defined(read_index)}~{sep=' --read_index ' read_index} \\\n+    ~{true='--read_validation_stringency ' false='' defined(read_validation_stringency)}~{sep=' --read_validation_stringency ' read_validation_stringency} \\\n+    ~{true='--seconds_between_progress_updates ' false='' defined(seconds_between_progress_updates)}~{sep=' --seconds_between_progress_updates ' seconds_between_progress_updates} \\\n+    ~{true='--sequence_dictionary ' false='' defined(sequence_dictionary)}~{sep=' --sequence_dictionary ' sequence_dictionary} \\\n+    ~{true='--tmp_dir ' false='' defined(tmp_dir)}~{sep=' --tmp_dir ' tmp_dir} \\\n+    ~{true='--use_jdk_deflater ' false='' defined(use_jdk_deflater)}~{sep=' --use_jdk_deflater ' use_jdk_deflater} \\\n+    ~{true='--use_jdk_inflater ' false='' defined(use_jdk_inflater)}~{sep=' --use_jdk_inflater ' use_jdk_inflater} \\\n+    ~{true='--verbosity ' false='' defined(verbosity)}~{sep=' --verbosity ' verbosity} \\\n+  >>>\n+\n+  runtime {\n+      docker: dockerImage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 286}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyNzc5Ng==", "bodyText": "This is nice syntax.  I didn't  know the latest WDL supported this kind of thing.", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r423927796", "createdAt": "2020-05-12T17:59:01Z", "author": {"login": "jonn-smith"}, "path": "tempCommit/PrintReads.wdl", "diffHunk": "@@ -0,0 +1,297 @@\n+version 1.0\n+\n+# Run PrintReads (GATK Version 4.1.7.0-7-gcd21b9c-SNAPSHOT)\n+#\n+# Print reads in the SAM/BAM/CRAM file\n+#\n+#  General Workflow (non-tool) Arguments\n+#    dockerImage                                        Docker image for this workflow\n+#    gatk                                               Location of gatk to run for this workflow\n+#    memoryRequirements                                 Runtime memory requirements for this workflow\n+#    diskRequirements                                   Runtime disk requirements for this workflow\n+#\n+#  Required Tool Arguments\n+#    input_arg                                          BAM/SAM/CRAM file containing reads                          \n+#    output_arg                                         Write output to this file                                   \n+#\n+#  Optional Tool Arguments\n+#    arguments_file                                     read one or more arguments files and add them to the command line\n+#    cloud_index_prefetch_buffer                        Size of the cloud-only prefetch buffer (in MB; 0 to disable). Defaults to cloudP\n+#    cloud_prefetch_buffer                              Size of the cloud-only prefetch buffer (in MB; 0 to disable).\n+#    disable_bam_index_caching                          If true, don't cache bam indexes, this will reduce memory requirements but may h\n+#    disable_sequence_dictionary_validation             If specified, do not check the sequence dictionaries from our inputs for compati\n+#    gcs_max_retries                                    If the GCS bucket channel errors out, how many times it will attempt to re-initi\n+#    gcs_project_for_requester_pays                     Project to bill when accessing \"requester pays\" buckets. If unset, these buckets\n+#    help                                               display the help message                                    \n+#    interval_merging_rule                              Interval merging rule for abutting intervals                \n+#    intervals                                          One or more genomic intervals over which to operate         \n+#    reference                                          Reference sequence                                          \n+#    sites_only_vcf_output                              If true, don't emit genotype fields when writing vcf file output.\n+#    version_arg                                        display the version number for this tool                    \n+#\n+#  Optional Common Arguments\n+#    add_output_sam_program_record                      If true, adds a PG tag to created SAM/BAM/CRAM files.       \n+#    add_output_vcf_command_line                        If true, adds a command line header line to created VCF files.\n+#    create_output_bam_index                            If true, create a BAM/CRAM index when writing a coordinate-sorted BAM/CRAM file.\n+#    create_output_bam_md5                              If true, create a MD5 digest for any BAM/SAM/CRAM file created\n+#    create_output_variant_index                        If true, create a VCF index when writing a coordinate-sorted VCF file.\n+#    create_output_variant_md5                          If true, create a a MD5 digest any VCF file created.        \n+#    disable_read_filter                                Read filters to be disabled before analysis                 \n+#    disable_tool_default_read_filters                  Disable all tool default read filters (WARNING: many tools will not function cor\n+#    exclude_intervals                                  One or more genomic intervals to exclude from processing    \n+#    gatk_config_file                                   A configuration file to use with the GATK.                  \n+#    interval_exclusion_padding                         Amount of padding (in bp) to add to each interval you are excluding.\n+#    interval_padding                                   Amount of padding (in bp) to add to each interval you are including.\n+#    interval_set_rule                                  Set merging approach to use for combining interval inputs   \n+#    lenient                                            Lenient processing of VCF files                             \n+#    QUIET                                              Whether to suppress job-summary info on System.err.         \n+#    read_filter                                        Read filters to be applied before analysis                  \n+#    read_index                                         Indices to use for the read inputs. If specified, an index must be provided for \n+#    read_validation_stringency                         Validation stringency for all SAM/BAM/CRAM/SRA files read by this program.  The \n+#    seconds_between_progress_updates                   Output traversal statistics every time this many seconds elapse\n+#    sequence_dictionary                                Use the given sequence dictionary as the master/canonical sequence dictionary.  \n+#    tmp_dir                                            Temp directory to use.                                      \n+#    use_jdk_deflater                                   Whether to use the JdkDeflater (as opposed to IntelDeflater)\n+#    use_jdk_inflater                                   Whether to use the JdkInflater (as opposed to IntelInflater)\n+#    verbosity                                          Control verbosity of logging.                               \n+\n+workflow PrintReads {\n+\n+  input {\n+    #Docker to use\n+    String dockerImage\n+    #App location\n+    String gatk\n+    #Memory to use\n+    String memoryRequirements\n+    #Disk requirements for this workflow\n+    String diskRequirements\n+\n+    # Required Arguments\n+    Array[String] input_arg\n+    File output_arg\n+    File outputcompanionIndex\n+\n+    # Optional Tool Arguments\n+    Array[File]? arguments_file\n+    Int? cloud_index_prefetch_buffer\n+    Int? cloud_prefetch_buffer\n+    Boolean? disable_bam_index_caching\n+    Boolean? disable_sequence_dictionary_validation\n+    Int? gcs_max_retries\n+    String? gcs_project_for_requester_pays\n+    Boolean? help\n+    String? interval_merging_rule\n+    Array[String]? intervals\n+    File? reference\n+    File? referenceDictionary\n+    File? referenceIndex\n+    Boolean? sites_only_vcf_output\n+    Boolean? version_arg\n+\n+    # Optional Common Arguments\n+    Boolean? add_output_sam_program_record\n+    Boolean? add_output_vcf_command_line\n+    Boolean? create_output_bam_index\n+    Boolean? create_output_bam_md5\n+    Boolean? create_output_variant_index\n+    Boolean? create_output_variant_md5\n+    Array[String]? disable_read_filter\n+    Boolean? disable_tool_default_read_filters\n+    Array[String]? exclude_intervals\n+    String? gatk_config_file\n+    Int? interval_exclusion_padding\n+    Int? interval_padding\n+    String? interval_set_rule\n+    Boolean? lenient\n+    Boolean? QUIET\n+    Array[String]? read_filter\n+    Array[String]? read_index\n+    String? read_validation_stringency\n+    Float? seconds_between_progress_updates\n+    String? sequence_dictionary\n+    File? tmp_dir\n+    Boolean? use_jdk_deflater\n+    Boolean? use_jdk_inflater\n+    String? verbosity\n+\n+  }\n+\n+  call PrintReadsTask {\n+\n+    input:\n+    #Docker\n+    dockerImage                                        = dockerImage,\n+    #App location\n+    gatk                                               = gatk,\n+    #Memory to use\n+    memoryRequirements                                 = memoryRequirements,\n+    #Disk requirements for this workflow\n+    diskRequirements                                   = diskRequirements,\n+\n+\n+    # Required Arguments\n+    input_arg                                          = input_arg,\n+    output_arg                                         = output_arg,\n+    outputcompanionIndex                               = outputcompanionIndex,\n+\n+    # Optional Tool Arguments\n+    arguments_file                                     = arguments_file,\n+    cloud_index_prefetch_buffer                        = cloud_index_prefetch_buffer,\n+    cloud_prefetch_buffer                              = cloud_prefetch_buffer,\n+    disable_bam_index_caching                          = disable_bam_index_caching,\n+    disable_sequence_dictionary_validation             = disable_sequence_dictionary_validation,\n+    gcs_max_retries                                    = gcs_max_retries,\n+    gcs_project_for_requester_pays                     = gcs_project_for_requester_pays,\n+    help                                               = help,\n+    interval_merging_rule                              = interval_merging_rule,\n+    intervals                                          = intervals,\n+    reference                                          = reference,\n+    referenceDictionary                                = referenceDictionary,\n+    referenceIndex                                     = referenceIndex,\n+    sites_only_vcf_output                              = sites_only_vcf_output,\n+    version_arg                                        = version_arg,\n+\n+    # Optional Common Arguments\n+    add_output_sam_program_record                      = add_output_sam_program_record,\n+    add_output_vcf_command_line                        = add_output_vcf_command_line,\n+    create_output_bam_index                            = create_output_bam_index,\n+    create_output_bam_md5                              = create_output_bam_md5,\n+    create_output_variant_index                        = create_output_variant_index,\n+    create_output_variant_md5                          = create_output_variant_md5,\n+    disable_read_filter                                = disable_read_filter,\n+    disable_tool_default_read_filters                  = disable_tool_default_read_filters,\n+    exclude_intervals                                  = exclude_intervals,\n+    gatk_config_file                                   = gatk_config_file,\n+    interval_exclusion_padding                         = interval_exclusion_padding,\n+    interval_padding                                   = interval_padding,\n+    interval_set_rule                                  = interval_set_rule,\n+    lenient                                            = lenient,\n+    QUIET                                              = QUIET,\n+    read_filter                                        = read_filter,\n+    read_index                                         = read_index,\n+    read_validation_stringency                         = read_validation_stringency,\n+    seconds_between_progress_updates                   = seconds_between_progress_updates,\n+    sequence_dictionary                                = sequence_dictionary,\n+    tmp_dir                                            = tmp_dir,\n+    use_jdk_deflater                                   = use_jdk_deflater,\n+    use_jdk_inflater                                   = use_jdk_inflater,\n+    verbosity                                          = verbosity,\n+\n+  }\n+\n+  output {\n+    # Workflow Outputs                                  \n+    File PrintReadsoutput_arg = PrintReadsTask.PrintReadsTask_output_arg\n+    File PrintReadsoutputcompanionIndex = PrintReadsTask.PrintReadsTask_outputcompanionIndex\n+  }\n+}\n+\n+task PrintReadsTask {\n+\n+  input {\n+    String dockerImage\n+    String gatk\n+    String memoryRequirements\n+    String diskRequirements\n+    Array[String] input_arg\n+    File output_arg\n+    File outputcompanionIndex\n+    Array[File]? arguments_file\n+    Int? cloud_index_prefetch_buffer\n+    Int? cloud_prefetch_buffer\n+    Boolean? disable_bam_index_caching\n+    Boolean? disable_sequence_dictionary_validation\n+    Int? gcs_max_retries\n+    String? gcs_project_for_requester_pays\n+    Boolean? help\n+    String? interval_merging_rule\n+    Array[String]? intervals\n+    File? reference\n+    File? referenceDictionary\n+    File? referenceIndex\n+    Boolean? sites_only_vcf_output\n+    Boolean? version_arg\n+    Boolean? add_output_sam_program_record\n+    Boolean? add_output_vcf_command_line\n+    Boolean? create_output_bam_index\n+    Boolean? create_output_bam_md5\n+    Boolean? create_output_variant_index\n+    Boolean? create_output_variant_md5\n+    Array[String]? disable_read_filter\n+    Boolean? disable_tool_default_read_filters\n+    Array[String]? exclude_intervals\n+    String? gatk_config_file\n+    Int? interval_exclusion_padding\n+    Int? interval_padding\n+    String? interval_set_rule\n+    Boolean? lenient\n+    Boolean? QUIET\n+    Array[String]? read_filter\n+    Array[String]? read_index\n+    String? read_validation_stringency\n+    Float? seconds_between_progress_updates\n+    String? sequence_dictionary\n+    File? tmp_dir\n+    Boolean? use_jdk_deflater\n+    Boolean? use_jdk_inflater\n+    String? verbosity\n+\n+  }\n+\n+  command <<<\n+    ~{gatk} PrintReads \\\n+    --input_arg ~{sep=' --input_arg ' input_arg} \\\n+    --output_arg ~{sep=' --output_arg ' output_arg} \\\n+    ~{true='--arguments_file ' false='' defined(arguments_file)}~{sep=' --arguments_file ' arguments_file} \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 246}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MTM2Mg==", "bodyText": "Do we need another newline here because of the trailing backslash?", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r423941362", "createdAt": "2020-05-12T18:21:16Z", "author": {"login": "jonn-smith"}, "path": "tempCommit/PrintReads.wdl", "diffHunk": "@@ -0,0 +1,297 @@\n+version 1.0\n+\n+# Run PrintReads (GATK Version 4.1.7.0-7-gcd21b9c-SNAPSHOT)\n+#\n+# Print reads in the SAM/BAM/CRAM file\n+#\n+#  General Workflow (non-tool) Arguments\n+#    dockerImage                                        Docker image for this workflow\n+#    gatk                                               Location of gatk to run for this workflow\n+#    memoryRequirements                                 Runtime memory requirements for this workflow\n+#    diskRequirements                                   Runtime disk requirements for this workflow\n+#\n+#  Required Tool Arguments\n+#    input_arg                                          BAM/SAM/CRAM file containing reads                          \n+#    output_arg                                         Write output to this file                                   \n+#\n+#  Optional Tool Arguments\n+#    arguments_file                                     read one or more arguments files and add them to the command line\n+#    cloud_index_prefetch_buffer                        Size of the cloud-only prefetch buffer (in MB; 0 to disable). Defaults to cloudP\n+#    cloud_prefetch_buffer                              Size of the cloud-only prefetch buffer (in MB; 0 to disable).\n+#    disable_bam_index_caching                          If true, don't cache bam indexes, this will reduce memory requirements but may h\n+#    disable_sequence_dictionary_validation             If specified, do not check the sequence dictionaries from our inputs for compati\n+#    gcs_max_retries                                    If the GCS bucket channel errors out, how many times it will attempt to re-initi\n+#    gcs_project_for_requester_pays                     Project to bill when accessing \"requester pays\" buckets. If unset, these buckets\n+#    help                                               display the help message                                    \n+#    interval_merging_rule                              Interval merging rule for abutting intervals                \n+#    intervals                                          One or more genomic intervals over which to operate         \n+#    reference                                          Reference sequence                                          \n+#    sites_only_vcf_output                              If true, don't emit genotype fields when writing vcf file output.\n+#    version_arg                                        display the version number for this tool                    \n+#\n+#  Optional Common Arguments\n+#    add_output_sam_program_record                      If true, adds a PG tag to created SAM/BAM/CRAM files.       \n+#    add_output_vcf_command_line                        If true, adds a command line header line to created VCF files.\n+#    create_output_bam_index                            If true, create a BAM/CRAM index when writing a coordinate-sorted BAM/CRAM file.\n+#    create_output_bam_md5                              If true, create a MD5 digest for any BAM/SAM/CRAM file created\n+#    create_output_variant_index                        If true, create a VCF index when writing a coordinate-sorted VCF file.\n+#    create_output_variant_md5                          If true, create a a MD5 digest any VCF file created.        \n+#    disable_read_filter                                Read filters to be disabled before analysis                 \n+#    disable_tool_default_read_filters                  Disable all tool default read filters (WARNING: many tools will not function cor\n+#    exclude_intervals                                  One or more genomic intervals to exclude from processing    \n+#    gatk_config_file                                   A configuration file to use with the GATK.                  \n+#    interval_exclusion_padding                         Amount of padding (in bp) to add to each interval you are excluding.\n+#    interval_padding                                   Amount of padding (in bp) to add to each interval you are including.\n+#    interval_set_rule                                  Set merging approach to use for combining interval inputs   \n+#    lenient                                            Lenient processing of VCF files                             \n+#    QUIET                                              Whether to suppress job-summary info on System.err.         \n+#    read_filter                                        Read filters to be applied before analysis                  \n+#    read_index                                         Indices to use for the read inputs. If specified, an index must be provided for \n+#    read_validation_stringency                         Validation stringency for all SAM/BAM/CRAM/SRA files read by this program.  The \n+#    seconds_between_progress_updates                   Output traversal statistics every time this many seconds elapse\n+#    sequence_dictionary                                Use the given sequence dictionary as the master/canonical sequence dictionary.  \n+#    tmp_dir                                            Temp directory to use.                                      \n+#    use_jdk_deflater                                   Whether to use the JdkDeflater (as opposed to IntelDeflater)\n+#    use_jdk_inflater                                   Whether to use the JdkInflater (as opposed to IntelInflater)\n+#    verbosity                                          Control verbosity of logging.                               \n+\n+workflow PrintReads {\n+\n+  input {\n+    #Docker to use\n+    String dockerImage\n+    #App location\n+    String gatk\n+    #Memory to use\n+    String memoryRequirements\n+    #Disk requirements for this workflow\n+    String diskRequirements\n+\n+    # Required Arguments\n+    Array[String] input_arg\n+    File output_arg\n+    File outputcompanionIndex\n+\n+    # Optional Tool Arguments\n+    Array[File]? arguments_file\n+    Int? cloud_index_prefetch_buffer\n+    Int? cloud_prefetch_buffer\n+    Boolean? disable_bam_index_caching\n+    Boolean? disable_sequence_dictionary_validation\n+    Int? gcs_max_retries\n+    String? gcs_project_for_requester_pays\n+    Boolean? help\n+    String? interval_merging_rule\n+    Array[String]? intervals\n+    File? reference\n+    File? referenceDictionary\n+    File? referenceIndex\n+    Boolean? sites_only_vcf_output\n+    Boolean? version_arg\n+\n+    # Optional Common Arguments\n+    Boolean? add_output_sam_program_record\n+    Boolean? add_output_vcf_command_line\n+    Boolean? create_output_bam_index\n+    Boolean? create_output_bam_md5\n+    Boolean? create_output_variant_index\n+    Boolean? create_output_variant_md5\n+    Array[String]? disable_read_filter\n+    Boolean? disable_tool_default_read_filters\n+    Array[String]? exclude_intervals\n+    String? gatk_config_file\n+    Int? interval_exclusion_padding\n+    Int? interval_padding\n+    String? interval_set_rule\n+    Boolean? lenient\n+    Boolean? QUIET\n+    Array[String]? read_filter\n+    Array[String]? read_index\n+    String? read_validation_stringency\n+    Float? seconds_between_progress_updates\n+    String? sequence_dictionary\n+    File? tmp_dir\n+    Boolean? use_jdk_deflater\n+    Boolean? use_jdk_inflater\n+    String? verbosity\n+\n+  }\n+\n+  call PrintReadsTask {\n+\n+    input:\n+    #Docker\n+    dockerImage                                        = dockerImage,\n+    #App location\n+    gatk                                               = gatk,\n+    #Memory to use\n+    memoryRequirements                                 = memoryRequirements,\n+    #Disk requirements for this workflow\n+    diskRequirements                                   = diskRequirements,\n+\n+\n+    # Required Arguments\n+    input_arg                                          = input_arg,\n+    output_arg                                         = output_arg,\n+    outputcompanionIndex                               = outputcompanionIndex,\n+\n+    # Optional Tool Arguments\n+    arguments_file                                     = arguments_file,\n+    cloud_index_prefetch_buffer                        = cloud_index_prefetch_buffer,\n+    cloud_prefetch_buffer                              = cloud_prefetch_buffer,\n+    disable_bam_index_caching                          = disable_bam_index_caching,\n+    disable_sequence_dictionary_validation             = disable_sequence_dictionary_validation,\n+    gcs_max_retries                                    = gcs_max_retries,\n+    gcs_project_for_requester_pays                     = gcs_project_for_requester_pays,\n+    help                                               = help,\n+    interval_merging_rule                              = interval_merging_rule,\n+    intervals                                          = intervals,\n+    reference                                          = reference,\n+    referenceDictionary                                = referenceDictionary,\n+    referenceIndex                                     = referenceIndex,\n+    sites_only_vcf_output                              = sites_only_vcf_output,\n+    version_arg                                        = version_arg,\n+\n+    # Optional Common Arguments\n+    add_output_sam_program_record                      = add_output_sam_program_record,\n+    add_output_vcf_command_line                        = add_output_vcf_command_line,\n+    create_output_bam_index                            = create_output_bam_index,\n+    create_output_bam_md5                              = create_output_bam_md5,\n+    create_output_variant_index                        = create_output_variant_index,\n+    create_output_variant_md5                          = create_output_variant_md5,\n+    disable_read_filter                                = disable_read_filter,\n+    disable_tool_default_read_filters                  = disable_tool_default_read_filters,\n+    exclude_intervals                                  = exclude_intervals,\n+    gatk_config_file                                   = gatk_config_file,\n+    interval_exclusion_padding                         = interval_exclusion_padding,\n+    interval_padding                                   = interval_padding,\n+    interval_set_rule                                  = interval_set_rule,\n+    lenient                                            = lenient,\n+    QUIET                                              = QUIET,\n+    read_filter                                        = read_filter,\n+    read_index                                         = read_index,\n+    read_validation_stringency                         = read_validation_stringency,\n+    seconds_between_progress_updates                   = seconds_between_progress_updates,\n+    sequence_dictionary                                = sequence_dictionary,\n+    tmp_dir                                            = tmp_dir,\n+    use_jdk_deflater                                   = use_jdk_deflater,\n+    use_jdk_inflater                                   = use_jdk_inflater,\n+    verbosity                                          = verbosity,\n+\n+  }\n+\n+  output {\n+    # Workflow Outputs                                  \n+    File PrintReadsoutput_arg = PrintReadsTask.PrintReadsTask_output_arg\n+    File PrintReadsoutputcompanionIndex = PrintReadsTask.PrintReadsTask_outputcompanionIndex\n+  }\n+}\n+\n+task PrintReadsTask {\n+\n+  input {\n+    String dockerImage\n+    String gatk\n+    String memoryRequirements\n+    String diskRequirements\n+    Array[String] input_arg\n+    File output_arg\n+    File outputcompanionIndex\n+    Array[File]? arguments_file\n+    Int? cloud_index_prefetch_buffer\n+    Int? cloud_prefetch_buffer\n+    Boolean? disable_bam_index_caching\n+    Boolean? disable_sequence_dictionary_validation\n+    Int? gcs_max_retries\n+    String? gcs_project_for_requester_pays\n+    Boolean? help\n+    String? interval_merging_rule\n+    Array[String]? intervals\n+    File? reference\n+    File? referenceDictionary\n+    File? referenceIndex\n+    Boolean? sites_only_vcf_output\n+    Boolean? version_arg\n+    Boolean? add_output_sam_program_record\n+    Boolean? add_output_vcf_command_line\n+    Boolean? create_output_bam_index\n+    Boolean? create_output_bam_md5\n+    Boolean? create_output_variant_index\n+    Boolean? create_output_variant_md5\n+    Array[String]? disable_read_filter\n+    Boolean? disable_tool_default_read_filters\n+    Array[String]? exclude_intervals\n+    String? gatk_config_file\n+    Int? interval_exclusion_padding\n+    Int? interval_padding\n+    String? interval_set_rule\n+    Boolean? lenient\n+    Boolean? QUIET\n+    Array[String]? read_filter\n+    Array[String]? read_index\n+    String? read_validation_stringency\n+    Float? seconds_between_progress_updates\n+    String? sequence_dictionary\n+    File? tmp_dir\n+    Boolean? use_jdk_deflater\n+    Boolean? use_jdk_inflater\n+    String? verbosity\n+\n+  }\n+\n+  command <<<\n+    ~{gatk} PrintReads \\\n+    --input_arg ~{sep=' --input_arg ' input_arg} \\\n+    --output_arg ~{sep=' --output_arg ' output_arg} \\\n+    ~{true='--arguments_file ' false='' defined(arguments_file)}~{sep=' --arguments_file ' arguments_file} \\\n+    ~{true='--cloud_index_prefetch_buffer ' false='' defined(cloud_index_prefetch_buffer)}~{sep=' --cloud_index_prefetch_buffer ' cloud_index_prefetch_buffer} \\\n+    ~{true='--cloud_prefetch_buffer ' false='' defined(cloud_prefetch_buffer)}~{sep=' --cloud_prefetch_buffer ' cloud_prefetch_buffer} \\\n+    ~{true='--disable_bam_index_caching ' false='' defined(disable_bam_index_caching)}~{sep=' --disable_bam_index_caching ' disable_bam_index_caching} \\\n+    ~{true='--disable_sequence_dictionary_validation ' false='' defined(disable_sequence_dictionary_validation)}~{sep=' --disable_sequence_dictionary_validation ' disable_sequence_dictionary_validation} \\\n+    ~{true='--gcs_max_retries ' false='' defined(gcs_max_retries)}~{sep=' --gcs_max_retries ' gcs_max_retries} \\\n+    ~{true='--gcs_project_for_requester_pays ' false='' defined(gcs_project_for_requester_pays)}~{sep=' --gcs_project_for_requester_pays ' gcs_project_for_requester_pays} \\\n+    ~{true='--help ' false='' defined(help)}~{sep=' --help ' help} \\\n+    ~{true='--interval_merging_rule ' false='' defined(interval_merging_rule)}~{sep=' --interval_merging_rule ' interval_merging_rule} \\\n+    ~{true='--intervals ' false='' defined(intervals)}~{sep=' --intervals ' intervals} \\\n+    ~{true='--reference ' false='' defined(reference)}~{sep=' --reference ' reference} \\\n+    ~{true='--sites_only_vcf_output ' false='' defined(sites_only_vcf_output)}~{sep=' --sites_only_vcf_output ' sites_only_vcf_output} \\\n+    ~{true='--version_arg ' false='' defined(version_arg)}~{sep=' --version_arg ' version_arg} \\\n+    ~{true='--add_output_sam_program_record ' false='' defined(add_output_sam_program_record)}~{sep=' --add_output_sam_program_record ' add_output_sam_program_record} \\\n+    ~{true='--add_output_vcf_command_line ' false='' defined(add_output_vcf_command_line)}~{sep=' --add_output_vcf_command_line ' add_output_vcf_command_line} \\\n+    ~{true='--create_output_bam_index ' false='' defined(create_output_bam_index)}~{sep=' --create_output_bam_index ' create_output_bam_index} \\\n+    ~{true='--create_output_bam_md5 ' false='' defined(create_output_bam_md5)}~{sep=' --create_output_bam_md5 ' create_output_bam_md5} \\\n+    ~{true='--create_output_variant_index ' false='' defined(create_output_variant_index)}~{sep=' --create_output_variant_index ' create_output_variant_index} \\\n+    ~{true='--create_output_variant_md5 ' false='' defined(create_output_variant_md5)}~{sep=' --create_output_variant_md5 ' create_output_variant_md5} \\\n+    ~{true='--disable_read_filter ' false='' defined(disable_read_filter)}~{sep=' --disable_read_filter ' disable_read_filter} \\\n+    ~{true='--disable_tool_default_read_filters ' false='' defined(disable_tool_default_read_filters)}~{sep=' --disable_tool_default_read_filters ' disable_tool_default_read_filters} \\\n+    ~{true='--exclude_intervals ' false='' defined(exclude_intervals)}~{sep=' --exclude_intervals ' exclude_intervals} \\\n+    ~{true='--gatk_config_file ' false='' defined(gatk_config_file)}~{sep=' --gatk_config_file ' gatk_config_file} \\\n+    ~{true='--interval_exclusion_padding ' false='' defined(interval_exclusion_padding)}~{sep=' --interval_exclusion_padding ' interval_exclusion_padding} \\\n+    ~{true='--interval_padding ' false='' defined(interval_padding)}~{sep=' --interval_padding ' interval_padding} \\\n+    ~{true='--interval_set_rule ' false='' defined(interval_set_rule)}~{sep=' --interval_set_rule ' interval_set_rule} \\\n+    ~{true='--lenient ' false='' defined(lenient)}~{sep=' --lenient ' lenient} \\\n+    ~{true='--QUIET ' false='' defined(QUIET)}~{sep=' --QUIET ' QUIET} \\\n+    ~{true='--read_filter ' false='' defined(read_filter)}~{sep=' --read_filter ' read_filter} \\\n+    ~{true='--read_index ' false='' defined(read_index)}~{sep=' --read_index ' read_index} \\\n+    ~{true='--read_validation_stringency ' false='' defined(read_validation_stringency)}~{sep=' --read_validation_stringency ' read_validation_stringency} \\\n+    ~{true='--seconds_between_progress_updates ' false='' defined(seconds_between_progress_updates)}~{sep=' --seconds_between_progress_updates ' seconds_between_progress_updates} \\\n+    ~{true='--sequence_dictionary ' false='' defined(sequence_dictionary)}~{sep=' --sequence_dictionary ' sequence_dictionary} \\\n+    ~{true='--tmp_dir ' false='' defined(tmp_dir)}~{sep=' --tmp_dir ' tmp_dir} \\\n+    ~{true='--use_jdk_deflater ' false='' defined(use_jdk_deflater)}~{sep=' --use_jdk_deflater ' use_jdk_deflater} \\\n+    ~{true='--use_jdk_inflater ' false='' defined(use_jdk_inflater)}~{sep=' --use_jdk_inflater ' use_jdk_inflater} \\\n+    ~{true='--verbosity ' false='' defined(verbosity)}~{sep=' --verbosity ' verbosity} \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 282}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MjE5MA==", "bodyText": "I was looking for something like this.  This is great!", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r423942190", "createdAt": "2020-05-12T18:22:38Z", "author": {"login": "jonn-smith"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/PrintReads.java", "diffHunk": "@@ -83,17 +85,20 @@\n         programGroup = ReadDataManipulationProgramGroup.class\n )\n @DocumentedFeature\n+@RuntimeProperties(memoryRequirements = \"1GB\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MjU5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Given a ArgumentDefinition for an argument known to be of type FeatureInput (or a Collection thereof), retrieves the type\n          \n          \n            \n                 * Given an ArgumentDefinition for an argument known to be of type FeatureInput (or a Collection thereof), retrieves the type", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r423942593", "createdAt": "2020-05-12T18:23:16Z", "author": {"login": "jonn-smith"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/FeatureManager.java", "diffHunk": "@@ -248,29 +247,29 @@ void addToFeatureSources(final int featureQueryLookahead, final FeatureInput<? e\n     }\n \n     /**\n-     * Given a Field known to be of type FeatureInput (or a Collection thereof), retrieves the type\n+     * Given a ArgumentDefinition for an argument known to be of type FeatureInput (or a Collection thereof), retrieves the type", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0Mjk1Mg==", "bodyText": "Can this be removed since it's commented out?", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r423942952", "createdAt": "2020-05-12T18:23:54Z", "author": {"login": "jonn-smith"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/help/GATKHelpDocWorkUnitHandler.java", "diffHunk": "@@ -58,4 +64,27 @@ protected void addCustomBindings(final DocWorkUnit currentWorkUnit) {\n         }\n     }\n \n+//    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0NDA2Mw==", "bodyText": "hoo boy.  Are we really still using PHP?  Not really a question for this code review\u2026 but I'm surprised.", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r423944063", "createdAt": "2020-05-12T18:25:55Z", "author": {"login": "jonn-smith"}, "path": "src/main/resources/org/broadinstitute/hellbender/utils/wdlTemplates/common.html", "diffHunk": "@@ -0,0 +1,68 @@\n+<#--\n+        This file contains part of the theming neccesary to present GATKDocs on the GATK website. Included are the\n+        paths to our bootstrap assets as well as helper functions to generate relevant links. Styling is separated\n+        out, so pages will be minimalistic html unless replacement styling is provided.\n+\n+        -->\n+\n+    <#global siteRoot = \"https://software.broadinstitute.org/gatk/\" />\n+    <#global guideIndex = \"https://software.broadinstitute.org/gatk/documentation/\" />\n+    <#global forum = \"https://gatkforums.broadinstitute.org/gatk/\" />\n+\n+    <#macro footerInfo>\n+        <hr>\n+        <p><a href='#top'><i class='fa fa-chevron-up'></i> Return to top</a></p>\n+        <hr>\n+        <p class=\"see-also\">See also \n+        \t<a href=\"${guideIndex}\">General Documentation</a> |\n+        \t<a class=\"hide_me_php\" href=\"index.html\">Tool WDL Index</a> <a class=\"hide_me_html\" href=\"index\">Tool WDL Index</a> |\n+        \t<a href=\"${forum}\">Support Forum</a>\n+        </p>\n+\n+        <p class=\"version\">GATK version ${version} built at ${timestamp}.\n+        <#-- closing P tag in next macro -->\n+    </#macro>\n+    \n+    <#macro footerClose>\n+    \t<#-- ugly little hack to enable adding tool-specific info inline -->\n+        </p>\n+    </#macro>\n+\n+    <#macro getCategories groups>\n+\n+        <style>\n+            #sidenav .accordion-body a {\n+                color : gray;\n+            }\n+\n+            .accordion-body li {\n+                list-style : none;\n+            }\n+        </style>\n+\n+        <ul class=\"nav nav-pills nav-stacked\" id=\"sidenav\">\n+        \t<#assign seq = [\"engine\", \"tools\", \"other\", \"utilities\"]>\n+        \t<#list seq as supercat>\n+        \t\t<hr>\n+        \t\t<#list groups?sort_by(\"name\") as group>\n+        \t\t\t<#if group.supercat == supercat>\n+\t\t\t\t\t\t<li><a data-toggle=\"collapse\" data-parent=\"#sidenav\" href=\"#${group.id}\">${group.name}</a>\n+\t\t\t\t\t\t\t<div id=\"${group.id}\"\n+\t\t\t\t\t\t\t\t<?php echo ($group == '${group.name}')? 'class=\"accordion-body collapse in\"'.chr(62) : 'class=\"accordion-body collapse\"'.chr(62);?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46d36293a8b26a3e3ad6d325a9cba5a6133f904"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b45647603570c56cc9ecbcfce8094b61621b80c", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/7b45647603570c56cc9ecbcfce8094b61621b80c", "committedDate": "2020-05-27T20:39:02Z", "message": "Remove task name suffix."}, "afterCommit": {"oid": "b64e20ef8985d3424e1701ddf521517f4476157a", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/b64e20ef8985d3424e1701ddf521517f4476157a", "committedDate": "2020-06-16T15:16:20Z", "message": "Temporarily do only womtool validation for WDL gen using Barclay pre-relase."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de42cb2872dfc610dc1b5669b778a66bad04831c", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/de42cb2872dfc610dc1b5669b778a66bad04831c", "committedDate": "2020-06-16T17:06:23Z", "message": "fix env var."}, "afterCommit": {"oid": "42e249378e79ba95db1c25b0175b292cbe47e7f2", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/42e249378e79ba95db1c25b0175b292cbe47e7f2", "committedDate": "2020-06-16T17:26:59Z", "message": "Fix WDL validation command and travis script, and suppress Java 11 removal warnings."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42e249378e79ba95db1c25b0175b292cbe47e7f2", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/42e249378e79ba95db1c25b0175b292cbe47e7f2", "committedDate": "2020-06-16T17:26:59Z", "message": "Fix WDL validation command and travis script, and suppress Java 11 removal warnings."}, "afterCommit": {"oid": "8e3560ebdc09a4e3628ec1a2298987bf54cdd71c", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/8e3560ebdc09a4e3628ec1a2298987bf54cdd71c", "committedDate": "2020-06-20T15:08:40Z", "message": "Update wdlGen folder def."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e3560ebdc09a4e3628ec1a2298987bf54cdd71c", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/8e3560ebdc09a4e3628ec1a2298987bf54cdd71c", "committedDate": "2020-06-20T15:08:40Z", "message": "Update wdlGen folder def."}, "afterCommit": {"oid": "4c576e4203ee20bc49609200c82556e303f92065", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/4c576e4203ee20bc49609200c82556e303f92065", "committedDate": "2020-06-22T13:12:32Z", "message": "Temp commit with WDL/JSON outputs (one pair each of default, all args, test case)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e804c218feead2ec4aa1facbc4965fd55a44e734", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/e804c218feead2ec4aa1facbc4965fd55a44e734", "committedDate": "2020-06-22T20:40:37Z", "message": "Turn on validation on travis."}, "afterCommit": {"oid": "b0920f09e07f1bc81f29210c877f6a4b3f4b9d5c", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/b0920f09e07f1bc81f29210c877f6a4b3f4b9d5c", "committedDate": "2020-06-23T14:05:47Z", "message": "Use a better companion index name in PrintReads."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0920f09e07f1bc81f29210c877f6a4b3f4b9d5c", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/b0920f09e07f1bc81f29210c877f6a4b3f4b9d5c", "committedDate": "2020-06-23T14:05:47Z", "message": "Use a better companion index name in PrintReads."}, "afterCommit": {"oid": "4b3c42b637c7f1839225ee2d6e45049d9b2da09e", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/4b3c42b637c7f1839225ee2d6e45049d9b2da09e", "committedDate": "2020-06-23T16:29:14Z", "message": "Use a better companion index name in PrintReads."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "237af65f0bbd57b761ae5767fcce5c86599ef007", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/237af65f0bbd57b761ae5767fcce5c86599ef007", "committedDate": "2020-06-23T18:29:57Z", "message": "Create the input test file in the right place on Travis."}, "afterCommit": {"oid": "3329cc6a62673abc75ffeddbb7eac46019fa8032", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/3329cc6a62673abc75ffeddbb7eac46019fa8032", "committedDate": "2020-06-23T18:56:00Z", "message": "Create the input test file in the right place on Travis."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3329cc6a62673abc75ffeddbb7eac46019fa8032", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/3329cc6a62673abc75ffeddbb7eac46019fa8032", "committedDate": "2020-06-23T18:56:00Z", "message": "Create the input test file in the right place on Travis."}, "afterCommit": {"oid": "45b362c50be1e0a53ef06b2e545fca1c172e0a00", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/45b362c50be1e0a53ef06b2e545fca1c172e0a00", "committedDate": "2020-06-23T20:09:53Z", "message": "Create the input test file in the right place on Travis."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "45b362c50be1e0a53ef06b2e545fca1c172e0a00", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/45b362c50be1e0a53ef06b2e545fca1c172e0a00", "committedDate": "2020-06-23T20:09:53Z", "message": "Create the input test file in the right place on Travis."}, "afterCommit": {"oid": "70e1bbd906b9eb063a06a6108460c9458e3d5fa5", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/70e1bbd906b9eb063a06a6108460c9458e3d5fa5", "committedDate": "2020-06-23T20:50:46Z", "message": "Create the input test file in the right place on Travis."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDU1NTE1", "url": "https://github.com/broadinstitute/gatk/pull/6504#pullrequestreview-440055515", "createdAt": "2020-06-30T14:10:54Z", "commit": {"oid": "70e1bbd906b9eb063a06a6108460c9458e3d5fa5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoxMDo1NVrOGq-R_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozMTo1NFrOGq_ScQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxMzc5MQ==", "bodyText": "It might be worth adding in some documentation / naming the class to indicate that it really only validates the command line arguments for a given tool.", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r447713791", "createdAt": "2020-06-30T14:10:55Z", "author": {"login": "jonn-smith"}, "path": "src/main/java/org/broadinstitute/hellbender/cmdline/CommandLineProgramValidator.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package org.broadinstitute.hellbender.cmdline;\n+\n+import org.broadinstitute.hellbender.exceptions.GATKException;\n+\n+/**\n+ * Adapter shim for use within GATK to run tools in command line validation mode. Note that this\n+ * class does not have it's own CommandLineProgramProperties annotation, and isn't intended to be\n+ * run directly from the command line.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e1bbd906b9eb063a06a6108460c9458e3d5fa5"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcyNjEyNQ==", "bodyText": "javadoc needs updating here", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r447726125", "createdAt": "2020-06-30T14:26:43Z", "author": {"login": "jonn-smith"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/help/GATKWDLDoclet.java", "diffHunk": "@@ -0,0 +1,218 @@\n+package org.broadinstitute.hellbender.utils.help;\n+\n+import freemarker.template.Configuration;\n+import freemarker.template.Template;\n+import freemarker.template.TemplateException;\n+import org.apache.commons.io.FilenameUtils;\n+import org.broadinstitute.barclay.argparser.CommandLineProgramProperties;\n+import org.broadinstitute.barclay.argparser.RuntimeProperties;\n+import org.broadinstitute.barclay.help.*;\n+\n+import java.io.*;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Custom Barclay-based Javadoc Doclet used for generating tool WDL.\n+ *\n+ * NOTE: Methods in this class are intended to be called by Gradle/Javadoc only, and should not be called\n+ * by methods that are used by the GATK runtime. This class has a dependency on com.sun.javadoc classes,\n+ * which may not be present since they're not provided as part of the normal GATK runtime classpath.\n+ */\n+@SuppressWarnings(\"removal\")\n+public class GATKWDLDoclet extends WDLDoclet {\n+\n+    // emit an index file with links to all of the .wdl files\n+    private final static String GATK_FREEMARKER_INDEX_TEMPLATE_NAME = \"wdlIndexTemplate.html.ftl\";\n+\n+    // the directory where the wdlgen build is running\n+    public final static String OPT_BUILD_DIR = \"-build-dir\";\n+    private String buildDir;\n+\n+    /**\n+     * Validates the given options against options supported by this doclet.\n+     *\n+     * @param option Option to validate.\n+     * @return Number of potential parameters; 0 if not supported.\n+     */\n+    public static int optionLength(final String option) {\n+        // Any arguments used for the doclet need to be recognized here. Many javadoc plugins (ie. gradle)\n+        // automatically add some such as \"-doctitle\", \"-windowtitle\", which we ignore.\n+        if (option.equals(OPT_BUILD_DIR)) {\n+            return 2;\n+        }\n+        return WDLDoclet.optionLength(option);\n+    }\n+\n+    @Override\n+    protected boolean parseOption(final String[] option) {\n+        if (option[0].equals(OPT_BUILD_DIR)) {\n+            buildDir = option[1];\n+            return true;\n+        } else {\n+            return super.parseOption(option);\n+        }\n+    }\n+\n+    /**\n+     * Create a WDL doclet and generate the FreeMarker templates properties.\n+     * @param rootDoc\n+     * @throws IOException\n+     */\n+    public static boolean start(final com.sun.javadoc.RootDoc rootDoc) throws IOException {\n+        return new GATKWDLDoclet().startProcessDocs(rootDoc);\n+    }\n+\n+    /**\n+     * @return the location where the build is running; used in the cromwell validation tests to generate a dummy\n+     * input file to satisfy cromwell file localization\n+     */\n+    public String getBuildDir() { return buildDir; }\n+\n+    /**\n+     * Return the name of the freemarker template to be used for the index generated by Barclay.\n+     * For WDL gen, we create an index file that links to each of the generated WDL files.\n+     * Must reside in the folder passed to the Barclay Javadc Doclet via the \"-settings-dir\" parameter.\n+     * @return name of freemarker index template\n+     */\n+    @Override\n+    public String getIndexTemplateName() {\n+        return GATK_FREEMARKER_INDEX_TEMPLATE_NAME;\n+    }\n+\n+    /**\n+     * @return Create and return a DocWorkUnit-derived object to handle documentation\n+     * for the target feature(s) represented by documentedFeature.\n+     *\n+     * @param documentedFeature DocumentedFeature annotation for the target feature\n+     * @param classDoc javadoc classDoc for the target feature\n+     * @param clazz class of the target feature\n+     * @return DocWorkUnit to be used for this feature\n+     */\n+    @Override\n+    protected DocWorkUnit createWorkUnit(\n+            final DocumentedFeature documentedFeature,\n+            final com.sun.javadoc.ClassDoc classDoc,\n+            final Class<?> clazz)\n+    {\n+        return includeInDocs(documentedFeature, classDoc, clazz) ?\n+                // for WDL we don't need to customize the work unit, only the handler, so just use the\n+                // Barclay default WorkUnit class\n+                new DocWorkUnit(\n+                    new GATKWDLWorkUnitHandler(this),\n+                    documentedFeature,\n+                    classDoc,\n+                    clazz) :\n+                null;\n+    }\n+\n+    @Override\n+    protected void processWorkUnitTemplate(\n+            final Configuration cfg,\n+            final DocWorkUnit workUnit,\n+            final List<Map<String, String>> indexByGroupMaps,\n+            final List<Map<String, String>> featureMaps)\n+    {\n+        final String defaultWDLOutputFileName = workUnit.getTargetFileName();\n+        final String defaultJSONOutputFileName = workUnit.getJSONFileName();\n+\n+        // generate the default WDL and input JSON, which expose only required args\n+        exportWorkUnitTemplate(\n+                cfg,\n+                workUnit,\n+                workUnit.getTemplateName(),\n+                new File(getDestinationDir(), defaultWDLOutputFileName));\n+        exportWorkUnitTemplate(\n+                cfg,\n+                workUnit,\n+                \"wdlJSONTemplate.json.ftl\",\n+                new File(getDestinationDir(), defaultJSONOutputFileName));\n+\n+        // generate a second pair of files containing ALL arguments\n+        exportWorkUnitTemplate(\n+                cfg,\n+                workUnit,\n+                \"wdlToolTemplateAllArgs.wdl.ftl\",\n+                new File(getDestinationDir(),\n+                        String.format(\"%sAllArgs.%s\",\n+                                FilenameUtils.getBaseName(defaultWDLOutputFileName),\n+                                FilenameUtils.getExtension(defaultWDLOutputFileName)))\n+        );\n+        exportWorkUnitTemplate(\n+                cfg,\n+                workUnit,\n+                \"wdlJSONTemplateAllArgs.json.ftl\",\n+                new File(getDestinationDir(),\n+                        String.format(\"%sAllArgsInputs.json\",\n+                                FilenameUtils.getBaseName(defaultWDLOutputFileName)))\n+        );\n+\n+        // Finally, we need to emit a test WDL and JSON pair for use by the cromwell execution test (which\n+        // runs GATK in command line evaluation only mode). The JSON file is primed with dummy values for any\n+        // required args. The test WDL specifies no docker image, and has no runtime outputs, since in\n+        // command line validation mode no outputs are produced, so otherwise cromwell will fail attempting to\n+        // de-localize them.\n+        exportWorkUnitTemplate(\n+                cfg,\n+                workUnit,\n+                \"wdlToolTemplateAllArgsTest.wdl.ftl\",\n+                new File(getDestinationDir(),\n+                        String.format(\"%sAllArgsTest.%s\",\n+                                FilenameUtils.getBaseName(defaultWDLOutputFileName),\n+                                FilenameUtils.getExtension(defaultWDLOutputFileName)))\n+        );\n+        exportWorkUnitTemplate(\n+                cfg,\n+                workUnit,\n+                \"wdlJSONTemplateAllArgsTest.json.ftl\",\n+                new File(getDestinationDir(),\n+                        String.format(\"%sAllArgsTestInputs.json\",\n+                                FilenameUtils.getBaseName(defaultWDLOutputFileName)))\n+        );\n+    }\n+\n+    /**\n+     * Export the generated files from templates for a single work unit.\n+     *\n+     * @param cfg freemarker config\n+     * @param workUnit the WorkUnit being processed\n+     * @param wdlTemplateName name of the template to use\n+     * @param wdlOutputPath output file\n+     */\n+    protected final void exportWorkUnitTemplate(\n+            final Configuration cfg,\n+            final DocWorkUnit workUnit,\n+            final String wdlTemplateName,\n+            final File wdlOutputPath) {\n+        try {\n+            // Merge data-model with wdl template\n+            final Template wdlTemplate = cfg.getTemplate(wdlTemplateName);\n+            try (final Writer out = new OutputStreamWriter(new FileOutputStream(wdlOutputPath))) {\n+                wdlTemplate.process(workUnit.getRootMap(), out);\n+            }\n+        } catch (IOException e) {\n+            throw new DocException(\"IOException during documentation creation\", e);\n+        } catch (TemplateException e) {\n+            throw new DocException(\"TemplateException during documentation creation\", e);\n+        }\n+    }\n+\n+    /**\n+     * Adds a super-category so that we can custom-order the categories in the doc index\n+     *\n+     * @param docWorkUnit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e1bbd906b9eb063a06a6108460c9458e3d5fa5"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczMDI4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Add the named argument {@code argDed}to the property map if applicable.\n          \n          \n            \n                 * Add the named argument {@code argDed} to the property map if applicable.", "url": "https://github.com/broadinstitute/gatk/pull/6504#discussion_r447730289", "createdAt": "2020-06-30T14:31:54Z", "author": {"login": "jonn-smith"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/help/GATKWDLWorkUnitHandler.java", "diffHunk": "@@ -0,0 +1,261 @@\n+package org.broadinstitute.hellbender.utils.help;\n+\n+import htsjdk.samtools.util.Iso8601Date;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import org.broadinstitute.barclay.argparser.*;\n+import org.broadinstitute.barclay.help.DocWorkUnit;\n+import org.broadinstitute.barclay.help.HelpDoclet;\n+import org.broadinstitute.barclay.help.WDLWorkUnitHandler;\n+import org.broadinstitute.hellbender.engine.FeatureInput;\n+import org.broadinstitute.hellbender.engine.GATKPath;\n+import org.broadinstitute.hellbender.exceptions.GATKException;\n+import picard.illumina.parser.ReadStructure;\n+\n+import java.util.*;\n+\n+// Note: WDL Gen doesn't handle arguments that accept tagged argument values\n+\n+/**\n+ * The GATK WDL work unit handler. Its main task is to convert the types for all arguments for a given work\n+ * unit (tool) from Java types to WDL-compatible types by updating the freemarker map with the transformed types.\n+ *\n+ * NOTE: Methods in this class are intended to be called by Gradle/Javadoc only, and should not be called\n+ * by methods that are used by the GATK runtime, as this class assumes a dependency on com.sun.javadoc classes\n+ * which may not be present.\n+ */\n+public class GATKWDLWorkUnitHandler extends WDLWorkUnitHandler {\n+\n+    private final static String GATK_FREEMARKER_TEMPLATE_NAME = \"wdlToolTemplate.wdl.ftl\";\n+\n+    // This must be kept in sync with the value used in build.gradle, where the file is created\n+    private final static String dummyWDLTestFileName = \"dummyWDLTestFile\";\n+\n+    // Map of Java argument types that the WDL generator knows how to convert to a WDL type, along with the\n+    // corresponding string substitution that needs to be run on the (Barclay-generated) string that describes\n+    // the type. From a purely string perspective, some of these transforms are no-ops in that no actual\n+    // conversion is required because the type names are identical in Java and WDL (i.e, File->File or\n+    // String->String), but they're included here for completeness, and to document the allowed type transitions.\n+    private final static Map<Class<?>, ImmutablePair<String, String>> javaToWDLTypeMap =\n+            new HashMap<Class<?>, ImmutablePair<String, String>>() {\n+                private static final long serialVersionUID = 1L;\n+                {\n+                    // GATK-specific File Types\n+                    put(GATKPath.class, new ImmutablePair<>(GATKPath.class.getSimpleName(), \"File\"));\n+                    // FeatureInputs require special handling to account for the generic type param(s)\n+                    put(FeatureInput.class, new ImmutablePair<>(FeatureInput.class.getSimpleName(), \"File\"));\n+\n+                    put(Iso8601Date.class, new ImmutablePair<>(Iso8601Date.class.getSimpleName(), \"String\"));\n+                    put(Date.class, new ImmutablePair<>(Date.class.getSimpleName(), \"String\"));\n+                    put(ReadStructure.class, new ImmutablePair<>(ReadStructure.class.getSimpleName(), \"String\"));\n+                }\n+        };\n+\n+    public GATKWDLWorkUnitHandler(final HelpDoclet doclet) {\n+        super(doclet);\n+    }\n+\n+    /**\n+     * @param workUnit the DocWorkUnit object being processed\n+     * @return the name of a the freemarker template to be used for the class being documented.\n+     * Must reside in the folder passed to the Barclay Doclet via the \"-settings-dir\" parameter to\n+     * Javadoc.\n+     */\n+    @Override\n+    public String getTemplateName(final DocWorkUnit workUnit) { return GATK_FREEMARKER_TEMPLATE_NAME; }\n+\n+    /**\n+     * Return the flat filename (no paths) that the handler would like the Doclet to\n+     * write out the documentation for workUnit.\n+     * @param workUnit\n+     * @return the name of the destination file to which documentation output will be written\n+     */\n+    @Override\n+    public String getDestinationFilename(final DocWorkUnit workUnit) {\n+        return workUnit.getClazz().getSimpleName() + \".wdl\";\n+    }\n+\n+    /**\n+     * Returns the JSON output file name.\n+     */\n+    @Override\n+    public String getJSONFilename(final DocWorkUnit workUnit) {\n+        return workUnit.getClazz().getSimpleName() + \"Inputs.json\";\n+    }\n+\n+    /**\n+     * Add the named argument {@code argDed}to the property map if applicable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e1bbd906b9eb063a06a6108460c9458e3d5fa5"}, "originalPosition": 88}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce2be8763870bb5e983af553bdb0018c9fbf7a0e", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/ce2be8763870bb5e983af553bdb0018c9fbf7a0e", "committedDate": "2020-06-30T15:45:28Z", "message": "Fix copy and paste error in WDL template."}, "afterCommit": {"oid": "6550649c31d90cf3b81484fd64ca0d14b83faa02", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/6550649c31d90cf3b81484fd64ca0d14b83faa02", "committedDate": "2020-06-30T17:22:15Z", "message": "WDL generation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6550649c31d90cf3b81484fd64ca0d14b83faa02", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/6550649c31d90cf3b81484fd64ca0d14b83faa02", "committedDate": "2020-06-30T17:22:15Z", "message": "WDL generation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62b7d5eb0e67302a0b47d0a0881b84a7067d26d2", "author": {"user": {"login": "cmnbroad", "name": "Chris Norman"}}, "url": "https://github.com/broadinstitute/gatk/commit/62b7d5eb0e67302a0b47d0a0881b84a7067d26d2", "committedDate": "2020-06-30T19:14:18Z", "message": "Fix a template reference issue discvoered while testing with annotations on a separate branch."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDA2OTM4", "url": "https://github.com/broadinstitute/gatk/pull/6504#pullrequestreview-440406938", "createdAt": "2020-06-30T21:41:55Z", "commit": {"oid": "62b7d5eb0e67302a0b47d0a0881b84a7067d26d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2807, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}