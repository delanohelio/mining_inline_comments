{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyODA4MzI1", "number": 6654, "title": "Move to GenomicsDB 1.3.0 and add support for shared posixfs optimizations", "bodyText": "Add new arg genomicsdb-shared-posixfs-optimizations to help with shared posix filesystems like NFS and Lustre. This turns on disable file locking and for GenomicsDB import it minimizes writes to disks. The performance on some of the gatk datasets for the import of about 10 samples went from 23.72m to 6.34m on NFS which was comparable to importing to a local filesystem. Hopefully this helps with Issue #6487 and #6627. Also, fixes Issue #6519.\nThis version of GenomicsDB also uses pre-compression filters for offset and compression files for new workspaces and genomicsdb arrays. The total sizes for a GenomicsDB workspace using the same dataset as above and the 10 samples went from 313MB to 170MB with no change in import and query times. Smaller GenomicsDB arrays also help with performance on distributed and cloud file systems.\nThis version has added support to handle MNVs similar to deletions as described in Issue #6500.  See GenomicsDB PR 88. Thanks @kgururaj.\nThere is added support in the GenomicsDBImporter to have multiple contigs in the same GenomicsDB partition/array. This will hopefully help import times in cases where users have many thousands of contigs. See GenomicsDB PR 91. Changes will be needed from the gatk side to avail this support. Thanks @mlathara.\nLogging has been improved somewhat with the native C/C++ code using spdlog and fmt and the Java layer using apache log4j and log4j.properties provided by the application. Also, info messages like No valid combination operation found for INFO field AA  - the field will NOT be part of INFO fields in the generated VCF records will only be output once for the operation. Also see open PR #6514 for code to actually suppress these warnings for known fields.", "createdAt": "2020-06-11T02:57:30Z", "url": "https://github.com/broadinstitute/gatk/pull/6654", "merged": true, "mergeCommit": {"oid": "3e921c66de9d0126a1e94f16d8e36fb972aff0f9"}, "closed": true, "closedAt": "2020-06-17T15:26:32Z", "author": {"login": "nalinigans"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpKiSqgH2gAyNDMyODA4MzI1OjZmYjBlMGZjY2I4MzNmNGQzMDk2ODgyNDJmZjRlMjg1YTMzODRhNGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsLg_AAFqTQzMjUxNzIxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6fb0e0fccb833f4d309688242ff4e285a3384a4a", "author": {"user": {"login": "nalinigans", "name": "Nalini Ganapati"}}, "url": "https://github.com/broadinstitute/gatk/commit/6fb0e0fccb833f4d309688242ff4e285a3384a4a", "committedDate": "2020-06-08T06:33:29Z", "message": "Move to GenomicsDB Version 1.2.3 for optimization options, pre-compression filters and bug fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "324577f0066114132d58220b4ab75dcf1b93511e", "author": {"user": {"login": "nalinigans", "name": "Nalini Ganapati"}}, "url": "https://github.com/broadinstitute/gatk/commit/324577f0066114132d58220b4ab75dcf1b93511e", "committedDate": "2020-06-08T16:42:59Z", "message": "Debug failing build GCS tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f637eb80b23b95725d972c5c2bde336b76be4f3", "author": {"user": {"login": "nalinigans", "name": "Nalini Ganapati"}}, "url": "https://github.com/broadinstitute/gatk/commit/7f637eb80b23b95725d972c5c2bde336b76be4f3", "committedDate": "2020-06-11T00:39:46Z", "message": "Use GenomicsDB 1.3.0 release that works with the older 1.6.3 GCS connector"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTU5ODM4", "url": "https://github.com/broadinstitute/gatk/pull/6654#pullrequestreview-428559838", "createdAt": "2020-06-11T02:59:15Z", "commit": {"oid": "7f637eb80b23b95725d972c5c2bde336b76be4f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjo1OToxNVrOGiM3Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjo1OToxNVrOGiM3Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxNTUwMw==", "bodyText": "Cleaned up code as the names of the GenomicsDB arrays are no longer constant and are based on the interval.", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r438515503", "createdAt": "2020-06-11T02:59:15Z", "author": {"login": "nalinigans"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBImport.java", "diffHunk": "@@ -621,12 +622,12 @@ public void onTraversalStart() {\n \n         if (doIncrementalImport) {\n             logger.info(\"Callset Map JSON file will be re-written to \" + callsetMapJSONFile);\n-            logger.info(\"Incrementally importing to array - \" + workspaceDir + \"/\" + GenomicsDBConstants.DEFAULT_ARRAY_NAME);\n+            logger.info(\"Incrementally importing to workspace - \" + workspaceDir);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f637eb80b23b95725d972c5c2bde336b76be4f3"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTYzMTcz", "url": "https://github.com/broadinstitute/gatk/pull/6654#pullrequestreview-430963173", "createdAt": "2020-06-15T20:19:07Z", "commit": {"oid": "7f637eb80b23b95725d972c5c2bde336b76be4f3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoxOTowN1rOGkBTwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoyODoyOFrOGkBl1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMzM2Mg==", "bodyText": "Can you just use GenomicsDBArgumentCollection.SHARED_POSIXFS_OPTIMIZATIONS directly in this class instead of duplicating it here?", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r440423362", "createdAt": "2020-06-15T20:19:07Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBImport.java", "diffHunk": "@@ -200,6 +200,8 @@\n     public static final String MAX_NUM_INTERVALS_TO_IMPORT_IN_PARALLEL = \"max-num-intervals-to-import-in-parallel\";\n     public static final int INTERVAL_LIST_SIZE_WARNING_THRESHOLD = 100;\n \n+    public static final String SHARED_POSIXFS_OPTIMIZATIONS = \"genomicsdb-shared-posixfs-optimizations\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f637eb80b23b95725d972c5c2bde336b76be4f3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMzY1OQ==", "bodyText": "@lbergelson Can you comment on this change to the exclusions for the GenomicsDB dependency? Do you foresee any issues as a result of this change?", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r440423659", "createdAt": "2020-06-15T20:19:46Z", "author": {"login": "droazen"}, "path": "build.gradle", "diffHunk": "@@ -255,7 +255,8 @@ dependencies {\n     compile 'com.github.broadinstitute:picard:' + picardVersion\n     externalSourceConfiguration 'com.github.broadinstitute:picard:' + picardVersion + ':sources'\n     compile ('org.genomicsdb:genomicsdb:' + genomicsdbVersion)  {\n-        exclude module: 'log4j'\n+        exclude module: 'log4j-api'\n+        exclude module: 'log4j-core'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f637eb80b23b95725d972c5c2bde336b76be4f3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNzYwNw==", "bodyText": "Would be nicer to have a separate test case to test the overwrite workspace option, with a proper TestNG-style  expectedExceptions = GenomicsDBImport.UnableToCreateGenomicsDBWorkspace.class clause instead of this try-catch.", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r440427607", "createdAt": "2020-06-15T20:27:47Z", "author": {"login": "droazen"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBImportIntegrationTest.java", "diffHunk": "@@ -1026,6 +1026,50 @@ private void createAndCheckIntervalListFromExistingWorkspace(final String worksp\n         Assert.assertTrue(generatedInterval.sorted().equals(expectedInterval.sorted()));\n     }\n \n+    void basicWriteAndQueryWithOptions(String workspace, Map<String, Object> options) throws IOException {\n+        final ArgumentsBuilder args = new ArgumentsBuilder();\n+        args.add(GenomicsDBImport.WORKSPACE_ARG_LONG_NAME, workspace);\n+        INTERVAL.forEach(args::addInterval);\n+        LOCAL_GVCFS.forEach(vcf -> args.add(\"V\", vcf));\n+        for ( String key : options.keySet()) {\n+            if (key.equals(GenomicsDBImport.SHARED_POSIXFS_OPTIMIZATIONS)) {\n+                Assert.assertTrue(options.get(key) instanceof Boolean);\n+                args.add(GenomicsDBImport.SHARED_POSIXFS_OPTIMIZATIONS, (Boolean)options.get(key));\n+            }\n+            if (key.equals(GenomicsDBImport.OVERWRITE_WORKSPACE_LONG_NAME)) {\n+                Assert.assertTrue(options.get(key) instanceof Boolean);\n+                args.add(GenomicsDBImport.OVERWRITE_WORKSPACE_LONG_NAME, (Boolean)options.get(key));\n+            }\n+        }\n+        runCommandLine(args);\n+        checkJSONFilesAreWritten(workspace);\n+        checkGenomicsDBAgainstExpected(workspace, INTERVAL, COMBINED, b38_reference_20_21, true, ATTRIBUTES_TO_IGNORE);\n+    }\n+\n+    @Test\n+    public void testWithMiscOptions() throws IOException {\n+        final String workspace = createTempDir(\"genomicsdb-misc-options\").getAbsolutePath() + \"/workspace\";\n+        IOUtils.deleteOnExit(IOUtils.getPath(workspace));\n+        Map<String, Object> options = new HashMap<String, Object>();\n+\n+        // Test with shared posixfs optimizations set\n+        options.put(GenomicsDBImport.SHARED_POSIXFS_OPTIMIZATIONS, true);\n+        basicWriteAndQueryWithOptions(workspace, options);\n+\n+        // Test with shared posixfs optimizations and overwrite workspace set\n+        options.put(GenomicsDBImport.OVERWRITE_WORKSPACE_LONG_NAME, true);\n+        basicWriteAndQueryWithOptions(workspace, options);\n+\n+        // Test with overwrite workspace set to false - should throw an exception\n+        options.replace(GenomicsDBImport.OVERWRITE_WORKSPACE_LONG_NAME, false);\n+        try {\n+            basicWriteAndQueryWithOptions(workspace, options);\n+            Assert.fail();\n+        } catch (GenomicsDBImport.UnableToCreateGenomicsDBWorkspace e) {\n+            // pass\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f637eb80b23b95725d972c5c2bde336b76be4f3"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNzk5MQ==", "bodyText": "Should the constant GenomicsDBConstants.DEFAULT_ARRAY_NAME be itself removed as well?", "url": "https://github.com/broadinstitute/gatk/pull/6654#discussion_r440427991", "createdAt": "2020-06-15T20:28:28Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBImport.java", "diffHunk": "@@ -621,12 +622,12 @@ public void onTraversalStart() {\n \n         if (doIncrementalImport) {\n             logger.info(\"Callset Map JSON file will be re-written to \" + callsetMapJSONFile);\n-            logger.info(\"Incrementally importing to array - \" + workspaceDir + \"/\" + GenomicsDBConstants.DEFAULT_ARRAY_NAME);\n+            logger.info(\"Incrementally importing to workspace - \" + workspaceDir);\n         } else {\n             logger.info(\"Vid Map JSON file will be written to \" + vidMapJSONFile);\n             logger.info(\"Callset Map JSON file will be written to \" + callsetMapJSONFile);\n             logger.info(\"Complete VCF Header will be written to \" + vcfHeaderFile);\n-            logger.info(\"Importing to array - \" + workspaceDir + \"/\" + GenomicsDBConstants.DEFAULT_ARRAY_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f637eb80b23b95725d972c5c2bde336b76be4f3"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6686ff1c05b53010ca1e5ca447d60f800aef951", "author": {"user": {"login": "nalinigans", "name": "Nalini Ganapati"}}, "url": "https://github.com/broadinstitute/gatk/commit/e6686ff1c05b53010ca1e5ca447d60f800aef951", "committedDate": "2020-06-15T22:43:09Z", "message": "Address review concerns : Separate test case for overwrite workspace option with proper TestNG-style Exceptions clause"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTE3MjE3", "url": "https://github.com/broadinstitute/gatk/pull/6654#pullrequestreview-432517217", "createdAt": "2020-06-17T15:23:44Z", "commit": {"oid": "e6686ff1c05b53010ca1e5ca447d60f800aef951"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2639, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}