{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3ODg4MzQz", "number": 6729, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTo1MzoxNFrOES4ORw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTo1MzoxNFrOES4ORw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjMwOTgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTo1MzoxNFrOG4TVMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODoyMzozMFrOG8VaTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MDE2MQ==", "bodyText": "If you want to exactly match the previous behavior while still getting rid of the O(n^2) complexity, you could cache the result of vc.getGenotypes().stream().anyMatch(Genotype::hasLikelihoods) before entering the enclosing for loop, and check it here.", "url": "https://github.com/broadinstitute/gatk/pull/6729#discussion_r461690161", "createdAt": "2020-07-28T15:53:14Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants.java", "diffHunk": "@@ -714,11 +714,13 @@ private void initalizeAlleleAnyploidIndicesCache(final VariantContext vc) {\n                 // Make a new entry if the we have not yet cached a PL to allele indices map for this ploidy and allele count\n                 // skip if there are no PLs -- this avoids hanging on high-allelic somatic samples, for example, where\n                 // there's no need for the PL indices since they don't exist\n-                if (g.getPloidy() != 0 && (!ploidyToNumberOfAlleles.containsKey(g.getPloidy()) || ploidyToNumberOfAlleles.get(g.getPloidy()) < vc.getNAlleles())) {\n-                    if (vc.getGenotypes().stream().anyMatch(Genotype::hasLikelihoods)) {\n-                        GenotypeLikelihoods.initializeAnyploidPLIndexToAlleleIndices(vc.getNAlleles() - 1, g.getPloidy());\n-                        ploidyToNumberOfAlleles.put(g.getPloidy(), vc.getNAlleles());\n-                    }\n+                final int genotypePloidy = g.getPloidy();\n+                final int nAlleles = vc.getNAlleles();\n+                if (genotypePloidy != 0\n+                        && (!ploidyToNumberOfAlleles.containsKey(genotypePloidy) || ploidyToNumberOfAlleles.get(genotypePloidy) < nAlleles)\n+                        && g.hasLikelihoods()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a53d3210074424cdfac215f28276613c3f9fa41a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MTMwMg==", "bodyText": "(Otherwise the behavior will differ from the previous behavior if some genotypes have PLs and others don't)", "url": "https://github.com/broadinstitute/gatk/pull/6729#discussion_r461691302", "createdAt": "2020-07-28T15:54:58Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants.java", "diffHunk": "@@ -714,11 +714,13 @@ private void initalizeAlleleAnyploidIndicesCache(final VariantContext vc) {\n                 // Make a new entry if the we have not yet cached a PL to allele indices map for this ploidy and allele count\n                 // skip if there are no PLs -- this avoids hanging on high-allelic somatic samples, for example, where\n                 // there's no need for the PL indices since they don't exist\n-                if (g.getPloidy() != 0 && (!ploidyToNumberOfAlleles.containsKey(g.getPloidy()) || ploidyToNumberOfAlleles.get(g.getPloidy()) < vc.getNAlleles())) {\n-                    if (vc.getGenotypes().stream().anyMatch(Genotype::hasLikelihoods)) {\n-                        GenotypeLikelihoods.initializeAnyploidPLIndexToAlleleIndices(vc.getNAlleles() - 1, g.getPloidy());\n-                        ploidyToNumberOfAlleles.put(g.getPloidy(), vc.getNAlleles());\n-                    }\n+                final int genotypePloidy = g.getPloidy();\n+                final int nAlleles = vc.getNAlleles();\n+                if (genotypePloidy != 0\n+                        && (!ploidyToNumberOfAlleles.containsKey(genotypePloidy) || ploidyToNumberOfAlleles.get(genotypePloidy) < nAlleles)\n+                        && g.hasLikelihoods()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MDE2MQ=="}, "originalCommit": {"oid": "a53d3210074424cdfac215f28276613c3f9fa41a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NTUwOQ==", "bodyText": "Oh, you're right.  I was thinking that since its just building up a cache it would hit it anyway when it got to one with PLs, but if the ploidy is different it will end up missing some.  Good call.", "url": "https://github.com/broadinstitute/gatk/pull/6729#discussion_r461695509", "createdAt": "2020-07-28T16:01:05Z", "author": {"login": "lbergelson"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants.java", "diffHunk": "@@ -714,11 +714,13 @@ private void initalizeAlleleAnyploidIndicesCache(final VariantContext vc) {\n                 // Make a new entry if the we have not yet cached a PL to allele indices map for this ploidy and allele count\n                 // skip if there are no PLs -- this avoids hanging on high-allelic somatic samples, for example, where\n                 // there's no need for the PL indices since they don't exist\n-                if (g.getPloidy() != 0 && (!ploidyToNumberOfAlleles.containsKey(g.getPloidy()) || ploidyToNumberOfAlleles.get(g.getPloidy()) < vc.getNAlleles())) {\n-                    if (vc.getGenotypes().stream().anyMatch(Genotype::hasLikelihoods)) {\n-                        GenotypeLikelihoods.initializeAnyploidPLIndexToAlleleIndices(vc.getNAlleles() - 1, g.getPloidy());\n-                        ploidyToNumberOfAlleles.put(g.getPloidy(), vc.getNAlleles());\n-                    }\n+                final int genotypePloidy = g.getPloidy();\n+                final int nAlleles = vc.getNAlleles();\n+                if (genotypePloidy != 0\n+                        && (!ploidyToNumberOfAlleles.containsKey(genotypePloidy) || ploidyToNumberOfAlleles.get(genotypePloidy) < nAlleles)\n+                        && g.hasLikelihoods()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MDE2MQ=="}, "originalCommit": {"oid": "a53d3210074424cdfac215f28276613c3f9fa41a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5OTg1Nw==", "bodyText": "Thanks for catching that @droazen. Probably best to preserve behavior. LGTM otherwise, thanks @lbergelson!", "url": "https://github.com/broadinstitute/gatk/pull/6729#discussion_r461699857", "createdAt": "2020-07-28T16:07:31Z", "author": {"login": "samuelklee"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants.java", "diffHunk": "@@ -714,11 +714,13 @@ private void initalizeAlleleAnyploidIndicesCache(final VariantContext vc) {\n                 // Make a new entry if the we have not yet cached a PL to allele indices map for this ploidy and allele count\n                 // skip if there are no PLs -- this avoids hanging on high-allelic somatic samples, for example, where\n                 // there's no need for the PL indices since they don't exist\n-                if (g.getPloidy() != 0 && (!ploidyToNumberOfAlleles.containsKey(g.getPloidy()) || ploidyToNumberOfAlleles.get(g.getPloidy()) < vc.getNAlleles())) {\n-                    if (vc.getGenotypes().stream().anyMatch(Genotype::hasLikelihoods)) {\n-                        GenotypeLikelihoods.initializeAnyploidPLIndexToAlleleIndices(vc.getNAlleles() - 1, g.getPloidy());\n-                        ploidyToNumberOfAlleles.put(g.getPloidy(), vc.getNAlleles());\n-                    }\n+                final int genotypePloidy = g.getPloidy();\n+                final int nAlleles = vc.getNAlleles();\n+                if (genotypePloidy != 0\n+                        && (!ploidyToNumberOfAlleles.containsKey(genotypePloidy) || ploidyToNumberOfAlleles.get(genotypePloidy) < nAlleles)\n+                        && g.hasLikelihoods()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MDE2MQ=="}, "originalCommit": {"oid": "a53d3210074424cdfac215f28276613c3f9fa41a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxODU0Mg==", "bodyText": "@droazen  Instead of caching I moved it up to the outer guard.  Why loop at all if we're always going to skip.  Could you take a peak just to verify that that makes sense to you.", "url": "https://github.com/broadinstitute/gatk/pull/6729#discussion_r465918542", "createdAt": "2020-08-05T18:23:30Z", "author": {"login": "lbergelson"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants.java", "diffHunk": "@@ -714,11 +714,13 @@ private void initalizeAlleleAnyploidIndicesCache(final VariantContext vc) {\n                 // Make a new entry if the we have not yet cached a PL to allele indices map for this ploidy and allele count\n                 // skip if there are no PLs -- this avoids hanging on high-allelic somatic samples, for example, where\n                 // there's no need for the PL indices since they don't exist\n-                if (g.getPloidy() != 0 && (!ploidyToNumberOfAlleles.containsKey(g.getPloidy()) || ploidyToNumberOfAlleles.get(g.getPloidy()) < vc.getNAlleles())) {\n-                    if (vc.getGenotypes().stream().anyMatch(Genotype::hasLikelihoods)) {\n-                        GenotypeLikelihoods.initializeAnyploidPLIndexToAlleleIndices(vc.getNAlleles() - 1, g.getPloidy());\n-                        ploidyToNumberOfAlleles.put(g.getPloidy(), vc.getNAlleles());\n-                    }\n+                final int genotypePloidy = g.getPloidy();\n+                final int nAlleles = vc.getNAlleles();\n+                if (genotypePloidy != 0\n+                        && (!ploidyToNumberOfAlleles.containsKey(genotypePloidy) || ploidyToNumberOfAlleles.get(genotypePloidy) < nAlleles)\n+                        && g.hasLikelihoods()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MDE2MQ=="}, "originalCommit": {"oid": "a53d3210074424cdfac215f28276613c3f9fa41a"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1023, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}