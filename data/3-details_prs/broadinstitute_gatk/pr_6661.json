{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NDE4MDAz", "number": 6661, "title": "Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows", "bodyText": "Noticed this while drilling into sites for #6634. Pulling it out since this is a separate bugfix. On occasion this would result in funky hmm trimming behavior (like only trimming to 20 bases on the edges of an indel when we should have trimmed to 75) and possibly other bizarre issues.", "createdAt": "2020-06-16T19:17:26Z", "url": "https://github.com/broadinstitute/gatk/pull/6661", "merged": true, "mergeCommit": {"oid": "a269d063e245bf44846e0e54dfaab708b9116920"}, "closed": true, "closedAt": "2020-08-26T20:31:26Z", "author": {"login": "jamesemery"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr6OAUgH2gAyNDM1NDE4MDAzOjA0M2MwZTI3YzUzYjY2NmFlYjVlYTk4ZTQ5NzM1NTM0NmJkNTAyODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAoeg3AFqTQ3MTE5MzIxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "043c0e27c53b666aeb5ea98e497355346bd50289", "author": {"user": {"login": "jamesemery", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/043c0e27c53b666aeb5ea98e497355346bd50289", "committedDate": "2020-06-16T19:14:37Z", "message": "Fixed a bug in variation event detection code that could sometimes lead to mistreating indel assembly windows as SNP assembly windows"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c204ff3757d62fb92a6ec1218a135116d769e373", "author": {"user": {"login": "jamesemery", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/c204ff3757d62fb92a6ec1218a135116d769e373", "committedDate": "2020-06-16T19:38:59Z", "message": "whoops alleles are already comparable... something about invention and wheels..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e1427651f76872128b2d51fcd5fb5ee583ec242", "author": {"user": {"login": "jamesemery", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/6e1427651f76872128b2d51fcd5fb5ee583ec242", "committedDate": "2020-06-17T13:57:57Z", "message": "updating test outputs with the new number jitter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDcxMDAw", "url": "https://github.com/broadinstitute/gatk/pull/6661#pullrequestreview-434471000", "createdAt": "2020-06-21T05:26:06Z", "commit": {"oid": "6e1427651f76872128b2d51fcd5fb5ee583ec242"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNToyNjowNlrOGmpwjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNTozMTowMVrOGmpxjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4MzI0Nw==", "bodyText": "This feels both too private for the validation to be necessary and too deep for it to be helpful.  Could you find a higher entry point to check that the variant contexts in the EventMap are all biallelic, if one does not exist already?", "url": "https://github.com/broadinstitute/gatk/pull/6661#discussion_r443183247", "createdAt": "2020-06-21T05:26:06Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/AssemblyResultSet.java", "diffHunk": "@@ -519,13 +520,32 @@ public void regenerateVariationEvents(int maxMnpDistance) {\n     }\n \n     /**\n-     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position\n+     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position and then arbitrarily by indel length followed by bases\n      * @param haplotypes the set of haplotypes to grab the VCs from\n      * @return a sorted set of variant contexts\n      */\n     private static SortedSet<VariantContext> getAllVariantContexts( final List<Haplotype> haplotypes ) {\n         // Using the cigar from each called haplotype figure out what events need to be written out in a VCF file\n-        final TreeSet<VariantContext> vcs = new TreeSet<>(Comparator.comparingInt(VariantContext::getStart));\n+        final TreeSet<VariantContext> vcs = new TreeSet<>(\n+                Comparator.comparingInt(VariantContext::getStart)\n+                        // Decide arbitrarily so as not to accidentally throw away overlapping variants\n+                .thenComparing(new Comparator<VariantContext>() {\n+                    @Override\n+                    public int compare(VariantContext v1, VariantContext v2) {\n+                        List<Allele> v1Alleles = v1.getAlleles();\n+                        List<Allele> v2Alleles = v2.getAlleles();\n+                        Utils.validate(v1Alleles.size() == 2, () -> \"Error Haplotype event map Variant Context has too many alleles: \"+v1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1427651f76872128b2d51fcd5fb5ee583ec242"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4MzUwMw==", "bodyText": "It seems like the if (diff == 0) block would be more clearly expressed as a second thenComparing:\nComparator.comparingInt(VariantContext::getStart)\n   .thenComparing(Comparator.comparingInt(vc -> vc.getReference().length()))\n   .thenComparing(alt-allele-based tiebreaker)", "url": "https://github.com/broadinstitute/gatk/pull/6661#discussion_r443183503", "createdAt": "2020-06-21T05:31:01Z", "author": {"login": "davidbenjamin"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/AssemblyResultSet.java", "diffHunk": "@@ -519,13 +520,32 @@ public void regenerateVariationEvents(int maxMnpDistance) {\n     }\n \n     /**\n-     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position\n+     * Get all of the VariantContexts in the event maps for all haplotypes, sorted by their start position and then arbitrarily by indel length followed by bases\n      * @param haplotypes the set of haplotypes to grab the VCs from\n      * @return a sorted set of variant contexts\n      */\n     private static SortedSet<VariantContext> getAllVariantContexts( final List<Haplotype> haplotypes ) {\n         // Using the cigar from each called haplotype figure out what events need to be written out in a VCF file\n-        final TreeSet<VariantContext> vcs = new TreeSet<>(Comparator.comparingInt(VariantContext::getStart));\n+        final TreeSet<VariantContext> vcs = new TreeSet<>(\n+                Comparator.comparingInt(VariantContext::getStart)\n+                        // Decide arbitrarily so as not to accidentally throw away overlapping variants\n+                .thenComparing(new Comparator<VariantContext>() {\n+                    @Override\n+                    public int compare(VariantContext v1, VariantContext v2) {\n+                        List<Allele> v1Alleles = v1.getAlleles();\n+                        List<Allele> v2Alleles = v2.getAlleles();\n+                        Utils.validate(v1Alleles.size() == 2, () -> \"Error Haplotype event map Variant Context has too many alleles: \"+v1);\n+                        Utils.validate(v2Alleles.size() == 2, () -> \"Error Haplotype event map Variant Context has too many alleles: \"+v2);\n+\n+                        int diff = v1.getReference().length() - v2.getReference().length();\n+                        if (diff == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1427651f76872128b2d51fcd5fb5ee583ec242"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f32eaffb7d17e467a50ea1b9ee1e81ccf058a198", "author": {"user": {"login": "jamesemery", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/f32eaffb7d17e467a50ea1b9ee1e81ccf058a198", "committedDate": "2020-08-05T17:41:13Z", "message": "responded to reveiw commnets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a857c44e06da351de1ce02eb9a1356bdecf0ccbe", "author": {"user": {"login": "jamesemery", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/a857c44e06da351de1ce02eb9a1356bdecf0ccbe", "committedDate": "2020-08-05T17:52:06Z", "message": "updating a spark test with the bugfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e554745622bbbf42bd0b48380b4e288374bef8af", "author": {"user": {"login": "jamesemery", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/e554745622bbbf42bd0b48380b4e288374bef8af", "committedDate": "2020-08-10T20:07:47Z", "message": "updating an integration test difference in CombineGVCFs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MTAwNTQy", "url": "https://github.com/broadinstitute/gatk/pull/6661#pullrequestreview-466100542", "createdAt": "2020-08-12T16:54:23Z", "commit": {"oid": "e554745622bbbf42bd0b48380b4e288374bef8af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo1NDoyNFrOG_qF3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo1NDoyNFrOG_qF3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwMzEwMQ==", "bodyText": "Maybe future-James would want you to run these results with --add-output-vcf-command-line false so he doesn't have to change headers again.", "url": "https://github.com/broadinstitute/gatk/pull/6661#discussion_r469403101", "createdAt": "2020-08-12T16:54:24Z", "author": {"login": "ldgauthier"}, "path": "src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf", "diffHunk": "@@ -8,7 +8,7 @@\n ##FORMAT=<ID=MIN_GQ,Number=1,Type=Integer,Description=\"Minimum GQ observed within the GVCF block\">\n ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification\">\n ##FORMAT=<ID=SB,Number=4,Type=Integer,Description=\"Per-sample component statistics which comprise the Fisher's Exact Test to detect strand bias.\">\n-##GATKCommandLine=<ID=CombineGVCFs,CommandLine=\"CombineGVCFs  --output /Users/davidben/broad/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf --break-bands-at-multiples-of 5 --variant /Users/davidben/broad/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample1.vcf --variant /Users/davidben/broad/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample2.vcf --intervals 20:69485-69791 --reference /Users/davidben/broad/gatk/src/test/resources/large/human_g1k_v37.20.21.fasta --verbosity ERROR --annotation ClippingRankSumTest  --convert-to-base-pair-resolution false --input-is-somatic false --drop-somatic-filtering-annotations false --ignore-variants-starting-outside-interval false --combine-variants-distance 0 --max-distance 2147483647 --ref-padding 1 --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays  --disable-tool-default-read-filters false --disable-tool-default-annotations false --enable-all-annotations false --allow-old-rms-mapping-quality-annotation-data false\",Version=\"Unavailable\",Date=\"March 17, 2020 1:36:02 AM EDT\">\n+##GATKCommandLine=<ID=CombineGVCFs,CommandLine=\"CombineGVCFs  --output /Users/emeryj/hellbender/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf --break-bands-at-multiples-of 5 --variant /Users/emeryj/hellbender/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample1.vcf --variant /Users/emeryj/hellbender/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample2.vcf --intervals 20:69485-69791 --reference /Users/emeryj/hellbender/gatk/src/test/resources/large/human_g1k_v37.20.21.fasta --verbosity ERROR --annotation ClippingRankSumTest  --convert-to-base-pair-resolution false --input-is-somatic false --drop-somatic-filtering-annotations false --ignore-variants-starting-outside-interval false --combine-variants-distance 0 --max-distance 2147483647 --ref-padding 1 --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays  --disable-tool-default-read-filters false --disable-tool-default-annotations false --enable-all-annotations false --allow-old-rms-mapping-quality-annotation-data false\",Version=\"Unavailable\",Date=\"August 10, 2020 4:07:09 PM EDT\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e554745622bbbf42bd0b48380b4e288374bef8af"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa91a9e1d0f957e9198db72005b92cfb6d7e5986", "author": {"user": {"login": "jamesemery", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/aa91a9e1d0f957e9198db72005b92cfb6d7e5986", "committedDate": "2020-08-13T14:37:45Z", "message": "updating more chained test file changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMTkzMjEy", "url": "https://github.com/broadinstitute/gatk/pull/6661#pullrequestreview-471193212", "createdAt": "2020-08-20T04:26:46Z", "commit": {"oid": "aa91a9e1d0f957e9198db72005b92cfb6d7e5986"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2645, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}