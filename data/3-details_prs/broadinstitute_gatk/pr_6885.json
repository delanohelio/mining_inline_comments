{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMDI2ODc2", "number": 6885, "title": "Exposed Smith-Waterman parameters in HaplotypeCaller, Mutect2, and FilterAlignmentArtifacts.", "bodyText": "EDIT: Parameters are now exposed as individual arguments, so the following quoted text is outdated; see below for more details.\n\nAdds the parameters --dangling-end-smith-waterman-parameters-table <GATKPath>, --haplotype-to-reference-smith-waterman-parameters-table <GATKPath>, and --read-to-haplotype-smith-waterman-parameters-table <GATKPath> to HaplotypeCaller and Mutect2. This allows for input via a TSV containing the column headers MATCH_VALUE\\tMISMATCH_PENALTY\\tGAP_OPEN_PENALTY\\tGAP_EXTEND_PENALTY and one row of integers.\n\nEnables investigation of #2498 and #5564\nCloses #6863\nJust opening this in case anyone wants to play around with it. I'll do some further testing on human and malaria data, but we have already found some cases in the latter for which changing some of the quizzical values to more reasonable ones yields immediate benefits. If anyone has any suggestions for possible evaluations, I'm all ears!\nA few notes:\n\nI still need to add doc strings for the new arguments.\nPer #6863 (comment), we can wait until after the DRAGEN-GATK dust settles to review/reevaluate/merge.\nAt that time, I'll add a few simple integration tests to check that I've properly bubbled up each set of parameters.\nThe reviewer might find the diagram at #6863 (comment) useful.", "createdAt": "2020-10-14T00:27:55Z", "url": "https://github.com/broadinstitute/gatk/pull/6885", "merged": true, "mergeCommit": {"oid": "0f89f4633330d0a4360a67fb5c377f136a1ae329"}, "closed": true, "closedAt": "2021-09-07T13:17:55Z", "author": {"login": "samuelklee"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABewx6GrAFqTcyMTI5MzI0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABe4gMaYABqjUyMTkwNTc1NTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIxMjkzMjQ0", "url": "https://github.com/broadinstitute/gatk/pull/6885#pullrequestreview-721293244", "createdAt": "2021-08-03T14:45:34Z", "commit": {"oid": "c84a0a5188dd5638350fa7f222a6583147325644"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wM1QxNDo0NTozNFrOKKPnmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wM1QxNDo0NTozNFrOKKPnmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTgzMDI5OA==", "bodyText": "Here's the aforementioned optimization.", "url": "https://github.com/broadinstitute/gatk/pull/6885#discussion_r681830298", "createdAt": "2021-08-03T14:45:34Z", "author": {"login": "samuelklee"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/read/CigarUtils.java", "diffHunk": "@@ -175,26 +163,21 @@ public static Cigar calculateCigar(final byte[] refSeq, final byte[] altSeq, fin\n \n         //Note: this is a performance optimization.\n         // If two strings are equal (a O(n) check) then it's trivial to get CIGAR for them.\n-        // Furthermore, if their lengths are equal and their element-by-element comparison yields two or fewer mismatches\n-        // it's also a trivial M-only CIGAR, because in order to have equal length one would need at least one insertion and\n-        // one deletion, in which case two substitutions is a better alignment.\n-        if (altSeq.length == refSeq.length){\n-            int mismatchCount = 0;\n-            for (int n = 0; n < refSeq.length && mismatchCount <= 2; n++) {\n-                mismatchCount += (altSeq[n] == refSeq[n] ? 0 : 1);\n-            }\n-            if (mismatchCount <= 2) {\n-                final Cigar matching = new Cigar();\n-                matching.add(new CigarElement(refSeq.length, CigarOperator.MATCH_OR_MISMATCH));\n-                return matching;\n-            }\n+        //TODO: in addressing http://github.com/broadinstitute/gatk/issues/6863,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c84a0a5188dd5638350fa7f222a6583147325644"}, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c84a0a5188dd5638350fa7f222a6583147325644", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/c84a0a5188dd5638350fa7f222a6583147325644", "committedDate": "2020-10-13T21:27:01Z", "message": "expose through AssemblyBasedCallerArgumentCollection"}, "afterCommit": {"oid": "667bd5d5d2fca7a3ffa0db973c0683e6a32d443a", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/667bd5d5d2fca7a3ffa0db973c0683e6a32d443a", "committedDate": "2021-08-03T17:33:16Z", "message": "expose through AssemblyBasedCallerArgumentCollection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dcf477b9e7656fc1ce6f9c066b81de73d3922f8", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/9dcf477b9e7656fc1ce6f9c066b81de73d3922f8", "committedDate": "2021-08-10T20:07:56Z", "message": "missed some SWParameters in FeaturizedReadSets in the rebase"}, "afterCommit": {"oid": "036b9affc125aa024e9fa3db04ff2f0a25059003", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/036b9affc125aa024e9fa3db04ff2f0a25059003", "committedDate": "2021-08-10T20:21:33Z", "message": "missed some SWParameters in ReadThreadingGraphUnitTest in the rebase"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d816f572d2f85a0db2d3b2c027c3ed370011bdf", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/8d816f572d2f85a0db2d3b2c027c3ed370011bdf", "committedDate": "2021-08-11T15:14:22Z", "message": "HC integration test passed...phew"}, "afterCommit": {"oid": "ec927130a22558eef799d1e898bb0c5fbb1db6f6", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/ec927130a22558eef799d1e898bb0c5fbb1db6f6", "committedDate": "2021-08-11T18:41:25Z", "message": "added integration tests for HC and M2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec927130a22558eef799d1e898bb0c5fbb1db6f6", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/ec927130a22558eef799d1e898bb0c5fbb1db6f6", "committedDate": "2021-08-11T18:41:25Z", "message": "added integration tests for HC and M2"}, "afterCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b", "committedDate": "2021-08-11T19:14:10Z", "message": "added integration tests for HC and M2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3ODUwMjEy", "url": "https://github.com/broadinstitute/gatk/pull/6885#pullrequestreview-727850212", "createdAt": "2021-08-11T19:15:55Z", "commit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xMVQxOToxNTo1NVrOKPRnxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xMVQxOToxNTo1NVrOKPRnxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzEwNTk5MQ==", "bodyText": "Reminder to fix this and analogous parameter docs up, if needed.", "url": "https://github.com/broadinstitute/gatk/pull/6885#discussion_r687105991", "createdAt": "2021-08-11T19:15:55Z", "author": {"login": "samuelklee"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/AbstractReadThreadingGraph.java", "diffHunk": "@@ -656,14 +653,14 @@ int mergeDanglingHead(final DanglingChainMergeHelper danglingHeadMergeResult) {\n      * Generates the CIGAR string from the Smith-Waterman alignment of the dangling path (where the\n      * provided vertex is the sink) and the reference path.\n      *\n-     * @param aligner\n      * @param vertex      the sink of the dangling chain\n      * @param pruneFactor the prune factor to use in ignoring chain pieces if edge multiplicity is < pruneFactor\n      * @param recoverAll  recover even branches with forks\n+     * @param danglingTailSWParameters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3ODUxODE2", "url": "https://github.com/broadinstitute/gatk/pull/6885#pullrequestreview-727851816", "createdAt": "2021-08-11T19:17:57Z", "commit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xMVQxOToxNzo1N1rOKPRscw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xMVQxOToxNzo1N1rOKPRscw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzEwNzE4Nw==", "bodyText": "SmithWaterman -> Smith-Waterman", "url": "https://github.com/broadinstitute/gatk/pull/6885#discussion_r687107187", "createdAt": "2021-08-11T19:17:57Z", "author": {"login": "samuelklee"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java", "diffHunk": "@@ -300,13 +305,14 @@ private void assembleGraphsAndExpandKmersGivenHaplotypes(final Haplotype refHapl\n      * @param activeRegionWindow    window of the active region (without padding)\n      * @param resultSet             (can be null) the results set into which to deposit discovered haplotypes\n      * @param aligner               SmithWaterman aligner to use for aligning the discovered haplotype to the reference haplotype\n+     * @param haplotypeToReferenceSWParameters SmithWaterman parameters to use for aligning the discovered haplotype to the reference haplotype", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3OTMxOTEz", "url": "https://github.com/broadinstitute/gatk/pull/6885#pullrequestreview-727931913", "createdAt": "2021-08-11T20:34:39Z", "commit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xMVQyMDozNDozOVrOKPVp2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xMVQyMDozNDozOVrOKPVp2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzE3MjA1Nw==", "bodyText": "Not sure if we really wanted to keep this around...but I took it out.", "url": "https://github.com/broadinstitute/gatk/pull/6885#discussion_r687172057", "createdAt": "2021-08-11T20:34:39Z", "author": {"login": "samuelklee"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/read/AlignmentUtils.java", "diffHunk": "@@ -91,9 +92,6 @@ public static GATKRead createReadAlignedToRef(final GATKRead originalRead,\n         // whether left-alignment shifted the start position.\n         final int readStartOnReferenceHaplotype = readStartOnReferenceHaplotype(rightPaddedHaplotypeVsRefCigar, readToHaplotypeSWAlignment.getAlignmentOffset());\n \n-\n-        //final int readStartOnReference = referenceStart + haplotype.getAlignmentStartHapwrtRef() + readStartOnHaplotype;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM5NzQyMzU3", "url": "https://github.com/broadinstitute/gatk/pull/6885#pullrequestreview-739742357", "createdAt": "2021-08-26T17:16:33Z", "commit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0yNlQxNzoxNjozM1rOKYjEBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0yNlQxODo0MTo0OVrOKYmvSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NjgyODkzMw==", "bodyText": "Just another reminder to fix this doc.", "url": "https://github.com/broadinstitute/gatk/pull/6885#discussion_r696828933", "createdAt": "2021-08-26T17:16:33Z", "author": {"login": "fleharty"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/AbstractReadThreadingGraph.java", "diffHunk": "@@ -656,14 +653,14 @@ int mergeDanglingHead(final DanglingChainMergeHelper danglingHeadMergeResult) {\n      * Generates the CIGAR string from the Smith-Waterman alignment of the dangling path (where the\n      * provided vertex is the sink) and the reference path.\n      *\n-     * @param aligner\n      * @param vertex      the sink of the dangling chain\n      * @param pruneFactor the prune factor to use in ignoring chain pieces if edge multiplicity is < pruneFactor\n      * @param recoverAll  recover even branches with forks\n+     * @param danglingTailSWParameters", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzEwNTk5MQ=="}, "originalCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NjgzMjQzMA==", "bodyText": "For consistency, make sure you get line 307 too", "url": "https://github.com/broadinstitute/gatk/pull/6885#discussion_r696832430", "createdAt": "2021-08-26T17:21:33Z", "author": {"login": "fleharty"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java", "diffHunk": "@@ -300,13 +305,14 @@ private void assembleGraphsAndExpandKmersGivenHaplotypes(final Haplotype refHapl\n      * @param activeRegionWindow    window of the active region (without padding)\n      * @param resultSet             (can be null) the results set into which to deposit discovered haplotypes\n      * @param aligner               SmithWaterman aligner to use for aligning the discovered haplotype to the reference haplotype\n+     * @param haplotypeToReferenceSWParameters SmithWaterman parameters to use for aligning the discovered haplotype to the reference haplotype", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzEwNzE4Nw=="}, "originalCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Njg0NTg4Mg==", "bodyText": "You can be brutally honest if you like and say, \"These parameters have not been rigorously optimized\"\nbut I'll leave that decision to you.", "url": "https://github.com/broadinstitute/gatk/pull/6885#discussion_r696845882", "createdAt": "2021-08-26T17:40:21Z", "author": {"login": "fleharty"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/smithwaterman/SmithWatermanAlignmentConstants.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.broadinstitute.hellbender.utils.smithwaterman;\n+\n+import org.broadinstitute.gatk.nativebindings.smithwaterman.SWParameters;\n+import org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.AbstractReadThreadingGraph;\n+import org.broadinstitute.hellbender.utils.read.AlignmentUtils;\n+import org.broadinstitute.hellbender.utils.read.CigarUtils;\n+\n+/**\n+ * This class collects the various {@link SWParameters} that are used for various alignment procedures.\n+ * It is likely that these parameters have not been rigorously optimized.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Njg0ODUzNQ==", "bodyText": "The NEW_SW_PARAMETERS have now been around for 6 years, is it time to rename this?", "url": "https://github.com/broadinstitute/gatk/pull/6885#discussion_r696848535", "createdAt": "2021-08-26T17:44:11Z", "author": {"login": "fleharty"}, "path": "src/main/java/org/broadinstitute/hellbender/utils/smithwaterman/SmithWatermanAlignmentConstants.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.broadinstitute.hellbender.utils.smithwaterman;\n+\n+import org.broadinstitute.gatk.nativebindings.smithwaterman.SWParameters;\n+import org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.AbstractReadThreadingGraph;\n+import org.broadinstitute.hellbender.utils.read.AlignmentUtils;\n+import org.broadinstitute.hellbender.utils.read.CigarUtils;\n+\n+/**\n+ * This class collects the various {@link SWParameters} that are used for various alignment procedures.\n+ * It is likely that these parameters have not been rigorously optimized.\n+ * Documentation is also somewhat lacking, but we preserve any original comments that may have accompanied each set.\n+ * See also some relevant issues and comments:\n+ *  <p>\n+ *      <a href=\"http://github.com/broadinstitute/gatk/issues/2498\">http://github.com/broadinstitute/gatk/issues/2498</a>\n+ *      <a href=\"http://github.com/broadinstitute/gatk/issues/5564\">http://github.com/broadinstitute/gatk/issues/5564</a>\n+ *      <a href=\"http://github.com/broadinstitute/gatk/pull/4858#discussion_r194048530\">http://github.com/broadinstitute/gatk/pull/4858#discussion_r194048530</a>\n+ *  </p>\n+ */\n+public final class SmithWatermanAlignmentConstants {\n+    private SmithWatermanAlignmentConstants() {}\n+\n+    /**\n+     * {@code ORIGINAL_DEFAULT} is only used in test code. It is worth noting that these tests are somewhat insensitive\n+     * to the particular values used; (e.g., the majority pass if {@link SmithWatermanAlignmentConstants#STANDARD_NGS}\n+     * is substituted, and all pass if {@link SmithWatermanAlignmentConstants#NEW_SW_PARAMETERS} is substituted).\n+     *\n+     * Original comments:\n+     *      match=1, mismatch = -1/3, gap=-(1+k/3)\n+     */\n+    public static final SWParameters ORIGINAL_DEFAULT = new SWParameters(3, -1, -4, -3);\n+\n+    /**\n+     * {@code STANDARD_NGS} is the default for {@link AbstractReadThreadingGraph} methods for the recovery of dangling heads/tails.\n+     *\n+     * Original comments:\n+     *      none\n+     */\n+    public static final SWParameters STANDARD_NGS = new SWParameters(25, -50, -110, -6);\n+\n+    /**\n+     * {@code NEW_SW_PARAMETERS} is the default for {@link CigarUtils#calculateCigar} for haplotype-to-reference alignment.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Njg1ODA4Mw==", "bodyText": "Why did you chose to use AVX_LOGLESS_CACHING rather than LOGLESS_CACHING?", "url": "https://github.com/broadinstitute/gatk/pull/6885#discussion_r696858083", "createdAt": "2021-08-26T17:57:25Z", "author": {"login": "fleharty"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerIntegrationTest.java", "diffHunk": "@@ -130,6 +130,49 @@ public void testLinkedDebruijnModeIsConsistentWithPastResults(final String input\n         }\n     }\n \n+    /**\n+     * Test that exposure and modification of Smith-Waterman parameters that were previously constants is consistent with past results (over non-complicated data).\n+     * Expected outputs were generated by changing previously hardcoded constants in the previous commit to the exposed values below.\n+     * See https://github.com/broadinstitute/gatk/pull/6885.\n+     */\n+    @Test(dataProvider=\"HaplotypeCallerTestInputs\")\n+    public void testExposureOfSmithWatermanParametersIsConsistentWithPastResults(final String inputFileName, final String referenceFileName) throws Exception {\n+        Utils.resetRandomGenerator();\n+\n+        final File output = createTempFile(\"testExposureOfSmithWatermanParametersIsConsistentWithPastResults\", \".vcf\");\n+        final File expected = new File(TEST_FILES_DIR, \"expected.testExposureOfSmithWatermanParameters.HC.gatk4.vcf\");\n+\n+        final String outputPath = UPDATE_EXACT_MATCH_EXPECTED_OUTPUTS ? expected.getAbsolutePath() : output.getAbsolutePath();\n+\n+        final String[] args = {\n+                \"-I\", inputFileName,\n+                \"-R\", referenceFileName,\n+                \"-L\", \"20:10000000-10100000\",\n+                \"-O\", outputPath,\n+                \"-pairHMM\", \"AVX_LOGLESS_CACHING\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Njg4OTE2Mg==", "bodyText": "I suggest using the non AVX... LOGLESS_CACHING instead.\nbecause of this...\n/* Optimized AVX implementation of LOGLESS_CACHING called through JNI. Throws if AVX is not available */", "url": "https://github.com/broadinstitute/gatk/pull/6885#discussion_r696889162", "createdAt": "2021-08-26T18:41:49Z", "author": {"login": "fleharty"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/mutect/Mutect2IntegrationTest.java", "diffHunk": "@@ -927,6 +928,51 @@ public void testFilteringHeaders() {\n         }\n     }\n \n+\n+    @DataProvider(name=\"ExposureOfSmithWatermanParametersTestInputs\")\n+    public Object[][] getExposureOfSmithWatermanParametersTestInputs() {\n+        return new Object[][] {\n+                {NA12878_20_21_WGS_bam, b37_reference_20_21}\n+        };\n+    }\n+\n+    /**\n+     * See {@link org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerIntegrationTest#testExposureOfSmithWatermanParametersIsConsistentWithPastResults}.\n+     */\n+    @Test(dataProvider=\"ExposureOfSmithWatermanParametersTestInputs\")\n+    public void testExposureOfSmithWatermanParametersIsConsistentWithPastResults(final String inputFileName, final String referenceFileName) throws Exception {\n+        Utils.resetRandomGenerator();\n+\n+        final File output = createTempFile(\"testExposureOfSmithWatermanParametersIsConsistentWithPastResults\", \".vcf\");\n+        final File expected = new File(toolsTestDir + \"mutect\", \"expected.testExposureOfSmithWatermanParameters.M2.gatk4.vcf\");\n+\n+        final String outputPath = output.getAbsolutePath();\n+\n+        final String[] args = {\n+                \"-I\", inputFileName,\n+                \"-R\", referenceFileName,\n+                \"-L\", \"20:10000000-10100000\",\n+                \"-O\", outputPath,\n+                \"-pairHMM\", \"AVX_LOGLESS_CACHING\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e56a31aa725bab3822f0e0669ec3a505a951d651", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/e56a31aa725bab3822f0e0669ec3a505a951d651", "committedDate": "2021-08-27T14:19:20Z", "message": "extracted constants, added docs, added TSV methods and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a77f83f92e530ed8ecbde68bacaf9e6cfd250c56", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/a77f83f92e530ed8ecbde68bacaf9e6cfd250c56", "committedDate": "2021-08-27T14:19:20Z", "message": "bubbled up ALIGNMENT_TO_BEST_HAPLOTYPE_SW_PARAMETERS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbc01611c27a0ca00d45d106140966f1337772eb", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/fbc01611c27a0ca00d45d106140966f1337772eb", "committedDate": "2021-08-27T14:19:20Z", "message": "bubbled up ORIGINAL_DEFAULT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1d5f7ef35b08158dcf08d878618eeb3638c88fa", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/a1d5f7ef35b08158dcf08d878618eeb3638c88fa", "committedDate": "2021-08-27T14:19:20Z", "message": "bubbled up NEW_SW_PARAMETERS and reverted calculateCigar optimization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5626de6c3446454db616e00242a8c476944720b3", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/5626de6c3446454db616e00242a8c476944720b3", "committedDate": "2021-08-27T14:19:20Z", "message": "bubbled up STANDARD_NGS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "900070df097d6fc8123700df550ec72d75dcf8b1", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/900070df097d6fc8123700df550ec72d75dcf8b1", "committedDate": "2021-08-27T14:19:20Z", "message": "exposed parameters through AssemblyBasedCallerArgumentCollection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3eb7ebab88dde425a69434330658136417ab2d0e", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/3eb7ebab88dde425a69434330658136417ab2d0e", "committedDate": "2021-08-27T14:19:20Z", "message": "rebased with some fixups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29a096152b1bd57f9c46e894ceb8a9fafdcbac98", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/29a096152b1bd57f9c46e894ceb8a9fafdcbac98", "committedDate": "2021-08-27T14:19:21Z", "message": "replaced TSV input of args with explicit args"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0724f24af11d2156691374851a80205dfd5e2b3", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/d0724f24af11d2156691374851a80205dfd5e2b3", "committedDate": "2021-08-27T14:19:21Z", "message": "added integration tests for HC and M2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e09b81102e666d3d3d1241754dc7c4ea887f1afd", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/e09b81102e666d3d3d1241754dc7c4ea887f1afd", "committedDate": "2021-08-27T14:38:33Z", "message": "addressed review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/b2b4feab78ef1c18b0f6e272f9b5b5bc55d9fb7b", "committedDate": "2021-08-11T19:14:10Z", "message": "added integration tests for HC and M2"}, "afterCommit": {"oid": "e09b81102e666d3d3d1241754dc7c4ea887f1afd", "author": {"user": {"login": "samuelklee", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/e09b81102e666d3d3d1241754dc7c4ea887f1afd", "committedDate": "2021-08-27T14:38:33Z", "message": "addressed review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2517, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}