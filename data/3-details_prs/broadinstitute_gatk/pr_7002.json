{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMzIzNDI0", "number": 7002, "title": "Fixed a NPE when null ReadNameRegex provided to MDSpark", "bodyText": "Fixes #7001", "createdAt": "2020-12-15T15:12:54Z", "url": "https://github.com/broadinstitute/gatk/pull/7002", "merged": true, "mergeCommit": {"oid": "77aec4b8d1faf185cf6f8569a552df843d37d8f2"}, "closed": true, "closedAt": "2021-01-12T20:29:35Z", "author": {"login": "jamesemery"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmbmSigH2gAyNTQwMzIzNDI0OjRmMDNlOTI5ODUwNGYyNmNmMmU1NDU4NThiMzdjNzVlMWNjZDQxMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvhHxfAFqTU2NjY2OTY3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4f03e9298504f26cf2e545858b37c75e1ccd4133", "author": {"user": {"login": "jamesemery", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/4f03e9298504f26cf2e545858b37c75e1ccd4133", "committedDate": "2020-12-15T14:55:37Z", "message": "fixed a NPE when null ReadNameRegex provided to MDSpark"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2NTA5Mzg1", "url": "https://github.com/broadinstitute/gatk/pull/7002#pullrequestreview-566509385", "createdAt": "2021-01-12T17:32:45Z", "commit": {"oid": "4f03e9298504f26cf2e545858b37c75e1ccd4133"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxNzozMjo0NVrOISMjuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxNzozMjo0NVrOISMjuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk1MTAzMw==", "bodyText": "Is this really testing with an actual null pointer in the READ_NAME_REGEX field, or just the literal String \"null\"?\nCan you add in a unit test showing that OpticalDuplicateFinder can be constructed from a null READ_NAME_REGEX, and that methods like addLocationInformation() can still function?", "url": "https://github.com/broadinstitute/gatk/pull/7002#discussion_r555951033", "createdAt": "2021-01-12T17:32:45Z", "author": {"login": "droazen"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/spark/pipelines/MarkDuplicatesSparkIntegrationTest.java", "diffHunk": "@@ -495,6 +496,33 @@ public void testAssertCorrectSortOrderMultipleBamsOverriding() {\n         runCommandLine(args);\n     }\n \n+    @Test\n+    public void testNullOpticalDuplicates() {\n+        final File output = createTempFile(\"supplementaryReadUnmappedMate\", \"bam\");\n+        final ArgumentsBuilder args = new ArgumentsBuilder();\n+        args.addOutput(output);\n+        args.addInput(new File(TEST_DATA_DIR,\"optical_dupes.bam\"));\n+        args.addFlag(MarkDuplicatesSpark.ALLOW_MULTIPLE_SORT_ORDERS_IN_INPUT_ARG);\n+        args.add(OpticalDuplicatesArgumentCollection.READ_NAME_REGEX_LONG_NAME, \"null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f03e9298504f26cf2e545858b37c75e1ccd4133"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2NjY5Njc1", "url": "https://github.com/broadinstitute/gatk/pull/7002#pullrequestreview-566669675", "createdAt": "2021-01-12T20:27:02Z", "commit": {"oid": "4f03e9298504f26cf2e545858b37c75e1ccd4133"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2458, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}