{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NjI4NTM4", "number": 6570, "title": "CNN filtering should run for all-SNP VCF (#6411)", "bodyText": "New test for multi-input BOTH mode\nUniquify annotations to fix #2221", "createdAt": "2020-04-24T15:47:42Z", "url": "https://github.com/broadinstitute/gatk/pull/6570", "merged": true, "mergeCommit": {"oid": "54220d4d7de353bef919837ded0256952375e138"}, "closed": true, "closedAt": "2020-09-09T19:01:23Z", "author": {"login": "ldgauthier"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccFTLVAFqTQwMTkxMTE5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy6uB8AFqTQ0NDc3NjI4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxOTExMTk5", "url": "https://github.com/broadinstitute/gatk/pull/6570#pullrequestreview-401911199", "createdAt": "2020-04-28T14:46:04Z", "commit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo0NjowNFrOGNXwJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowNToyN1rOGNYsxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3MzgyOQ==", "bodyText": "We often just use a set final Set uniqueAnnotations = new HashSet<>(annotationKeys); to uniquify a list, but this is fine.", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416673829", "createdAt": "2020-04-28T14:46:04Z", "author": {"login": "cmnbroad"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantDataManager.java", "diffHunk": "@@ -35,7 +36,11 @@\n \n     public VariantDataManager( final List<String> annotationKeys, final VariantRecalibratorArgumentCollection VRAC ) {\n         this.data = Collections.emptyList();\n-        this.annotationKeys = new ArrayList<>( annotationKeys );\n+        final List<String> uniqueAnnotations = annotationKeys.stream().distinct().collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4MzM2Mw==", "bodyText": "Not sure if the emptiness is deliberate, but I'm pretty certain any test that uses this data provider will not be run at all.", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416683363", "createdAt": "2020-04-28T14:57:43Z", "author": {"login": "cmnbroad"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "diffHunk": "@@ -122,11 +185,18 @@ public void initializeVariantRecalTests() {\n         };\n     }\n \n+    @DataProvider(name=\"BadVarRecal\")\n+    public Object[][] BadVarRecal() {\n+        return new Object[][] {\n+\n+        };\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NzAyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warn(\"Specified annotations for recalibration contain duplicates.\");\n          \n          \n            \n                        logger.warn(\"Ignoring duplicate annotations for recalibration %s.\", Utils.getDuplicatedItems(annotationKeys));", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416687027", "createdAt": "2020-04-28T15:02:20Z", "author": {"login": "cmnbroad"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantDataManager.java", "diffHunk": "@@ -35,7 +36,11 @@\n \n     public VariantDataManager( final List<String> annotationKeys, final VariantRecalibratorArgumentCollection VRAC ) {\n         this.data = Collections.emptyList();\n-        this.annotationKeys = new ArrayList<>( annotationKeys );\n+        final List<String> uniqueAnnotations = annotationKeys.stream().distinct().collect(Collectors.toList());\n+        if (annotationKeys.size() != uniqueAnnotations.size()) {\n+            logger.warn(\"Specified annotations for recalibration contain duplicates.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4OTM1MQ==", "bodyText": "See comment above.", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416689351", "createdAt": "2020-04-28T15:05:27Z", "author": {"login": "cmnbroad"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "diffHunk": "@@ -187,6 +257,11 @@ public void testVariantRecalibratorSNP(final String[] params, final String tranc\n         doSNPTest(params, tranchesPath, recalPath);\n     }\n \n+    @Test(dataProvider = \"BadVarRecal\", expectedExceptions = {UserException.BadInput.class})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517"}, "originalPosition": 129}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17e5a70699ee3fc1dac7853fcaf23614986e2e4a", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/17e5a70699ee3fc1dac7853fcaf23614986e2e4a", "committedDate": "2020-05-18T18:46:35Z", "message": "CNN filtering should run for all-SNP VCF (#6411)\nNew test for multi-input BOTH mode\nUniquify annotations as for #2221"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a13ac99b278d656ba0b3a8abcd244f126571517", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/3a13ac99b278d656ba0b3a8abcd244f126571517", "committedDate": "2020-04-27T14:28:32Z", "message": "One more"}, "afterCommit": {"oid": "17e5a70699ee3fc1dac7853fcaf23614986e2e4a", "author": {"user": {"login": "ldgauthier", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/17e5a70699ee3fc1dac7853fcaf23614986e2e4a", "committedDate": "2020-05-18T18:46:35Z", "message": "CNN filtering should run for all-SNP VCF (#6411)\nNew test for multi-input BOTH mode\nUniquify annotations as for #2221"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0Nzc2Mjgz", "url": "https://github.com/broadinstitute/gatk/pull/6570#pullrequestreview-444776283", "createdAt": "2020-07-08T13:41:53Z", "commit": {"oid": "17e5a70699ee3fc1dac7853fcaf23614986e2e4a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo0MTo1NFrOGuonmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo0MTo1NFrOGuonmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU1MzE3Nw==", "bodyText": "Minor nit - it would be nice if the common part of the command line string was factored out of these, since it takes some staring to spot the subtle differences (ie, the duplicate annotation). Up to you. No good deed goes unpunished...", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r451553177", "createdAt": "2020-07-08T13:41:54Z", "author": {"login": "cmnbroad"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "diffHunk": "@@ -44,6 +45,64 @@\n             \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\"\n         };\n \n+    private final String[] VQSRSNPsWithAnnotationDupe =\n+            new String[] {\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf\",\n+                    \"-L\",\"20:1,000,000-10,000,000\",\n+                    \"--resource:known,known=true,prior=10.0\",\n+                    getLargeVQSRTestDataDir() + \"dbsnp_132_b37.leftAligned.20.1M-10M.vcf\",\n+                    \"--resource:truth_training1,truth=true,training=true,prior=15.0\",\n+                    getLargeVQSRTestDataDir() + \"sites_r27_nr.b37_fwd.20.1M-10M.vcf\",\n+                    \"--resource:truth_training2,training=true,truth=true,prior=12.0\",\n+                    getLargeVQSRTestDataDir() + \"Omni25_sites_1525_samples.b37.20.1M-10M.vcf\",\n+                    \"-an\", \"QD\", \"-an\", \"HaplotypeScore\", \"-an\", \"HRun\", \"-an\", \"HRun\",\n+                    \"--trust-all-polymorphic\", // for speed\n+                    \"-mode\", \"SNP\",\n+                    \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\"\n+            };\n+\n+    private final String[] VQSRBothParamsWithResources =\n+            new String[] {\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf\",\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"g94982_20_1m_10m_python_2dcnn.indels.vcf.gz\",\n+                    \"-L\",\"20:1,000,000-10,000,000\",\n+                    \"--resource:known,known=true,prior=10.0\",\n+                    getLargeVQSRTestDataDir() + \"dbsnp_132_b37.leftAligned.20.1M-10M.vcf\",\n+                    \"--resource:truth_training1,truth=true,training=true,prior=15.0\",\n+                    getLargeVQSRTestDataDir() + \"sites_r27_nr.b37_fwd.20.1M-10M.vcf\",\n+                    \"--resource:truth_training2,training=true,truth=true,prior=12.0\",\n+                    getLargeVQSRTestDataDir() + \"Omni25_sites_1525_samples.b37.20.1M-10M.vcf\",\n+                    \"-an\", \"QD\", \"-an\", \"HaplotypeScore\", \"-an\", \"HRun\",\n+                    \"--trust-all-polymorphic\", // for speed\n+                    \"-mode\", \"BOTH\",\n+                    \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\",\n+                    \"--max-gaussians\", \"6\"\n+            };\n+\n+    private final String[] VQSRBothAggregateParamsWithResources =\n+            new String[] {\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf\",\n+                    \"--aggregate\",\n+                    getLargeVQSRTestDataDir() + \"g94982_20_1m_10m_python_2dcnn.indels.vcf.gz\",\n+                    \"-L\",\"20:1,000,000-10,000,000\",\n+                    \"--resource:known,known=true,prior=10.0\",\n+                    getLargeVQSRTestDataDir() + \"dbsnp_132_b37.leftAligned.20.1M-10M.vcf\",\n+                    \"--resource:truth_training1,truth=true,training=true,prior=15.0\",\n+                    getLargeVQSRTestDataDir() + \"sites_r27_nr.b37_fwd.20.1M-10M.vcf\",\n+                    \"--resource:truth_training2,training=true,truth=true,prior=12.0\",\n+                    getLargeVQSRTestDataDir() + \"Omni25_sites_1525_samples.b37.20.1M-10M.vcf\",\n+                    \"-an\", \"QD\", \"-an\", \"HaplotypeScore\", \"-an\", \"HRun\",\n+                    \"--trust-all-polymorphic\", // for speed\n+                    \"-mode\", \"BOTH\",\n+                    \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\",\n+                    \" --output %s\" + \" -tranches-file %s\",\n+                    \"--max-gaussians\", \"6\"\n+            };\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e5a70699ee3fc1dac7853fcaf23614986e2e4a"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2563, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}