{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NTAyNDYz", "number": 6404, "title": "fixed error in RealignmentEngine due to inclusive vs exclusive ends", "bodyText": "Closes #6344, I think.  @takutosato can you review this?", "createdAt": "2020-01-21T20:42:49Z", "url": "https://github.com/broadinstitute/gatk/pull/6404", "merged": true, "mergeCommit": {"oid": "6810c5ebec78e98fc767f9aafbb8b670d73f53b2"}, "closed": true, "closedAt": "2020-01-21T23:50:07Z", "author": {"login": "davidbenjamin"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8nYuEgFqTM0NjE3ODEwNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8o0eJAFqTM0NjIzNDEzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MTc4MTA2", "url": "https://github.com/broadinstitute/gatk/pull/6404#pullrequestreview-346178106", "createdAt": "2020-01-21T20:43:40Z", "commit": {"oid": "f1b4e607be3731ce33680ae009b3c6c6ba95759d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDo0Mzo0MFrOFgIL6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDo0Mzo0MFrOFgIL6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIzMjg3Mg==", "bodyText": "I think we need to go the other way don't we?  Increase the start and leave the end alone?", "url": "https://github.com/broadinstitute/gatk/pull/6404#discussion_r369232872", "createdAt": "2020-01-21T20:43:40Z", "author": {"login": "lbergelson"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/realignmentfilter/RealignmentEngine.java", "diffHunk": "@@ -132,8 +132,9 @@ private final static boolean mightSupportInsertion(final CigarElement cigarEleme\n         return new ArrayList<>(commonAlignments);\n     }\n \n+    // note the conversion from exclusive end (BWAMemAlignment) to inclusive end (SimpleInterval)\n     private static SimpleInterval convertToInterval(final BwaMemAlignment alignment) {\n-        return new SimpleInterval(Integer.toString(alignment.getRefId()), alignment.getRefStart(), alignment.getRefEnd());\n+        return new SimpleInterval(Integer.toString(alignment.getRefId()), alignment.getRefStart(), alignment.getRefEnd() - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1b4e607be3731ce33680ae009b3c6c6ba95759d"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d33c3f8ebb062a52215207a505a042ad5845261", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/5d33c3f8ebb062a52215207a505a042ad5845261", "committedDate": "2020-01-21T20:49:15Z", "message": "fixed error in RealignmentEngine due to converting from exclusive to inclusive interval ends"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1b4e607be3731ce33680ae009b3c6c6ba95759d", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/f1b4e607be3731ce33680ae009b3c6c6ba95759d", "committedDate": "2020-01-21T20:31:37Z", "message": "fixed error in RealignmentEngine due to converting from exclusive to inclusive interval ends"}, "afterCommit": {"oid": "5d33c3f8ebb062a52215207a505a042ad5845261", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/5d33c3f8ebb062a52215207a505a042ad5845261", "committedDate": "2020-01-21T20:49:15Z", "message": "fixed error in RealignmentEngine due to converting from exclusive to inclusive interval ends"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MTkyNjEx", "url": "https://github.com/broadinstitute/gatk/pull/6404#pullrequestreview-346192611", "createdAt": "2020-01-21T21:09:11Z", "commit": {"oid": "5d33c3f8ebb062a52215207a505a042ad5845261"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MjM0MTM4", "url": "https://github.com/broadinstitute/gatk/pull/6404#pullrequestreview-346234138", "createdAt": "2020-01-21T22:23:53Z", "commit": {"oid": "5d33c3f8ebb062a52215207a505a042ad5845261"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjoyMzo1NFrOFgKz7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjoyMzo1NFrOFgKz7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3NTg4NA==", "bodyText": "@davidbenjamin Are we sure that the contig is correct?  I think alignment.getRefId() is likely to be 0 indexed, which means that you'll start with contig 0 when you want contig 1.  And obviously it doesn't work for non-numbered contigs.  I think what you need to be doing here is looking it up from bwaMemIndex.getReferenceContigNames().", "url": "https://github.com/broadinstitute/gatk/pull/6404#discussion_r369275884", "createdAt": "2020-01-21T22:23:54Z", "author": {"login": "lbergelson"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/realignmentfilter/RealignmentEngine.java", "diffHunk": "@@ -132,8 +132,11 @@ private final static boolean mightSupportInsertion(final CigarElement cigarEleme\n         return new ArrayList<>(commonAlignments);\n     }\n \n+    // note the conversion from exclusive end (BWAMemAlignment) to inclusive end (SimpleInterval) (subtract 1 from the end)\n+    // combined with the conversion from 0-based to 1-based contigs (add 1 to start and end)\n+    // which has the net result of adding 1 to the start and leaving the end alone\n     private static SimpleInterval convertToInterval(final BwaMemAlignment alignment) {\n-        return new SimpleInterval(Integer.toString(alignment.getRefId()), alignment.getRefStart(), alignment.getRefEnd());\n+        return new SimpleInterval(Integer.toString(alignment.getRefId()), alignment.getRefStart() + 1, alignment.getRefEnd());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d33c3f8ebb062a52215207a505a042ad5845261"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2719, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}