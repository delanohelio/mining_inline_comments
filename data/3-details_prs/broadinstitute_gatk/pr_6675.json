{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4OTY5NTUw", "number": 6675, "title": "Make VCFCodec the default for query streams from GenomicsDB", "bodyText": "GenomicsDB sometimes returns a 64 bit type as a result of computations. This type is not supported by BCF2Codec while decoding resulting in NPEs - see #6548 and #6667.  The initial reservation against using VCFCodec as the default was performance related, benchmarks show the BCF2Codec to be about 10-15% faster than VCF2Codec, but VCFCodec handles all the types correctly. This PR makes VCFCodec the default and the argument --genomicsdb-use-vcf-codec has been replaced by --genomicsdb-use-bcf-codec.\nAlso, included in this PR are some argument documentation fixes and one bug fix where a com.google.cloud.storage.StorageException was being thrown if a -V argument pointing to a genomicsdb GCS workspace(e.g. gendb.gs://mybucket/myworkspace) did not end in a slash.", "createdAt": "2020-06-24T05:25:25Z", "url": "https://github.com/broadinstitute/gatk/pull/6675", "merged": true, "mergeCommit": {"oid": "bc0994c180312cdca7afbe45b410b2c6fc312043"}, "closed": true, "closedAt": "2020-06-26T16:45:47Z", "author": {"login": "nalinigans"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuRnABgH2gAyNDM4OTY5NTUwOmQ3ODQwYjkzYjMxMzE0OThjMmQxNzY5MTE4ZmExZDNkZDAyYjdiNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvGEBogFqTQzODQ0Mzg5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d7840b93b3131498c2d1769118fa1d3dd02b7b56", "author": {"user": {"login": "nalinigans", "name": "Nalini Ganapati"}}, "url": "https://github.com/broadinstitute/gatk/commit/d7840b93b3131498c2d1769118fa1d3dd02b7b56", "committedDate": "2020-06-24T03:37:35Z", "message": "Make VCFCodec the default for query streams from GenomicsDB and other minor changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2Nzg1NjUw", "url": "https://github.com/broadinstitute/gatk/pull/6675#pullrequestreview-436785650", "createdAt": "2020-06-24T15:55:17Z", "commit": {"oid": "d7840b93b3131498c2d1769118fa1d3dd02b7b56"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTo1NToxN1rOGoYnjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjoxMDo1NVrOGoZPUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk5OTU2Ng==", "bodyText": "Perhaps you should just normalize the workspace to end with a slash on tool startup?", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r444999566", "createdAt": "2020-06-24T15:55:17Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/FeatureDataSource.java", "diffHunk": "@@ -387,8 +387,8 @@ final void printCacheStats() {\n     protected static FeatureReader<VariantContext> getGenomicsDBFeatureReader(final GATKPath path, final File reference, final GenomicsDBOptions genomicsDBOptions) {\n         final String workspace = IOUtils.getGenomicsDBAbsolutePath(path) ;\n         if (workspace == null) {\n-            throw new IllegalArgumentException(\"Trying to create a GenomicsDBReader from  non-GenomicsDB inputpath \" + path);\n-        } else if (Files.notExists(IOUtils.getPath(workspace))) {\n+            throw new IllegalArgumentException(\"Trying to create a GenomicsDBReader from  non-GenomicsDB input path \" + path);\n+        } else if (Files.notExists(IOUtils.getPath(workspace.endsWith(\"/\")?workspace:workspace+\"/\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7840b93b3131498c2d1769118fa1d3dd02b7b56"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAwNzU0Mg==", "bodyText": "I notice that this argument does not control which codec is used in GenomicsDBImport.getReaderFromPath(), which is hardcoded to use a VCFCodec. Should this argument affect the codec used in GenomicsDBImport?", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r445007542", "createdAt": "2020-06-24T16:07:27Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBArgumentCollection.java", "diffHunk": "@@ -8,11 +8,11 @@\n \n public class GenomicsDBArgumentCollection implements Serializable {\n   private static final long serialVersionUID = 1L;\n-  public static final String USE_VCF_CODEC_LONG_NAME = \"genomicsdb-use-vcf-codec\";\n+  public static final String USE_BCF_CODEC_LONG_NAME = \"genomicsdb-use-bcf-codec\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7840b93b3131498c2d1769118fa1d3dd02b7b56"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAwOTc0NQ==", "bodyText": "Can you add at least one integration test for GenotypeGVCFs that uses the BCF codec?\nAlso for GenotypeGVCFs, do you have a simple test case with a 64-bit value that fails with BCF and passes with VCF? If so, it would be good to have both a positive test case with VCF that passes and a negative test case with BCF that fails with an expected exception.", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r445009745", "createdAt": "2020-06-24T16:10:55Z", "author": {"login": "droazen"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/GnarlyGenotyperIntegrationTest.java", "diffHunk": "@@ -37,28 +37,28 @@\n                 //No variants outside requested intervals; no SNPs with QUAL < 60, no INDELs with QUAL < 69?; has star alleles after deletion at chr20:263497; has AC, AF, AN, DP, ExcessHet, FS, MQ, (MQRankSum), (ReadPosRankSum), SOR, QD; has called genotypes\n                 {new File[]{getTestFile(\"sample1.vcf\"), getTestFile(\"sample2.vcf\"), getTestFile(\"sample3.vcf\"), getTestFile(\"sample4.vcf\"), getTestFile(\"sample5.vcf\")},\n                          getTestFile(\"fiveSampleTest.vcf\"), null, Arrays.asList(new SimpleInterval(\"chr20\", 251370, 252000), new SimpleInterval(\"chr20\", 263000, 265600)), Arrays.asList(\"--merge-input-intervals\", \"--only-output-calls-starting-in-intervals\"), b38_reference_20_21},\n-                // Same as above, but with GenomicsDB using VCFCodec for interchange\n+                // Same as above, but with GenomicsDB using BCF2Codec for interchange\n                 {new File[]{getTestFile(\"sample1.vcf\"), getTestFile(\"sample2.vcf\"), getTestFile(\"sample3.vcf\"), getTestFile(\"sample4.vcf\"), getTestFile(\"sample5.vcf\")},\n-                         getTestFile(\"fiveSampleTest.vcf\"), null, Arrays.asList(new SimpleInterval(\"chr20\", 251370, 252000), new SimpleInterval(\"chr20\", 263000, 265600)), Arrays.asList(\"--merge-input-intervals\", \"--only-output-calls-starting-in-intervals\", \"--genomicsdb-use-vcf-codec\"), b38_reference_20_21},\n+                         getTestFile(\"fiveSampleTest.vcf\"), null, Arrays.asList(new SimpleInterval(\"chr20\", 251370, 252000), new SimpleInterval(\"chr20\", 263000, 265600)), Arrays.asList(\"--merge-input-intervals\", \"--only-output-calls-starting-in-intervals\", \"--genomicsdb-use-bcf-codec\"), b38_reference_20_21},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7840b93b3131498c2d1769118fa1d3dd02b7b56"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20c2dcd11c2c1eca60c67bd14c6f584924c73133", "author": {"user": {"login": "nalinigans", "name": "Nalini Ganapati"}}, "url": "https://github.com/broadinstitute/gatk/commit/20c2dcd11c2c1eca60c67bd14c6f584924c73133", "committedDate": "2020-06-25T21:56:18Z", "message": "Add GenotypeGVCFs integration test for both VCF and BCF2 codecs. Also add test to check that a  combined INFO field resulting in a 64-bit value is handled by VCFCodec, but not by BCF2Codec"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4Mzg0NzQx", "url": "https://github.com/broadinstitute/gatk/pull/6675#pullrequestreview-438384741", "createdAt": "2020-06-26T15:21:09Z", "commit": {"oid": "20c2dcd11c2c1eca60c67bd14c6f584924c73133"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNToyMToxMFrOGpk6Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNToyMToxMFrOGpk6Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI0OTUzOA==", "bodyText": "I wasn't actually suggesting that you remove this check completely, as I think it's a necessary check -- just that it might be better to normalize the workspace name to end with a slash at an earlier point in the code, if we can't handle lack of a trailing slash.\nSince time is short and the rest of the PR looks good, I am going to restore the previous version of this line via a separate commit.", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r446249538", "createdAt": "2020-06-26T15:21:10Z", "author": {"login": "droazen"}, "path": "src/main/java/org/broadinstitute/hellbender/engine/FeatureDataSource.java", "diffHunk": "@@ -387,9 +387,7 @@ final void printCacheStats() {\n     protected static FeatureReader<VariantContext> getGenomicsDBFeatureReader(final GATKPath path, final File reference, final GenomicsDBOptions genomicsDBOptions) {\n         final String workspace = IOUtils.getGenomicsDBAbsolutePath(path) ;\n         if (workspace == null) {\n-            throw new IllegalArgumentException(\"Trying to create a GenomicsDBReader from  non-GenomicsDB inputpath \" + path);\n-        } else if (Files.notExists(IOUtils.getPath(workspace))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20c2dcd11c2c1eca60c67bd14c6f584924c73133"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cc80ad16e4230c70bf7f2424565707ef798d1a0", "author": {"user": {"login": "droazen", "name": null}}, "url": "https://github.com/broadinstitute/gatk/commit/2cc80ad16e4230c70bf7f2424565707ef798d1a0", "committedDate": "2020-06-26T15:30:53Z", "message": "Restore workspace existence check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NDQzODk4", "url": "https://github.com/broadinstitute/gatk/pull/6675#pullrequestreview-438443898", "createdAt": "2020-06-26T16:44:21Z", "commit": {"oid": "2cc80ad16e4230c70bf7f2424565707ef798d1a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2655, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}