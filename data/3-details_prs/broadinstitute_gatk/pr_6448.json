{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzk1NDM2", "number": 6448, "title": "fixed incoherent unit test cases in allele subsetting utils", "bodyText": "Closes #3672.\n@ldgauthier The ADs, GTs, and PLs were inconsistent.", "createdAt": "2020-02-09T06:18:31Z", "url": "https://github.com/broadinstitute/gatk/pull/6448", "merged": true, "mergeCommit": {"oid": "5887df8227b6bd7bb96daf256dda2eee2ff5f57e"}, "closed": true, "closedAt": "2020-02-16T04:01:02Z", "author": {"login": "davidbenjamin"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDXQ6ugFqTM1NjkyNzEzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEvJM1ABqjMwNDEyNjcwNDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTI3MTM5", "url": "https://github.com/broadinstitute/gatk/pull/6448#pullrequestreview-356927139", "createdAt": "2020-02-11T19:21:03Z", "commit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOToyMTowM1rOFoV5QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTo1MzoxNVrOFoW77Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0NjA4MA==", "bodyText": "It would be great to fix these typos for searchability -- tripoid > triploid", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r377846080", "createdAt": "2020-02-11T19:21:03Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -105,19 +107,20 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n         // for P=3 and N=2, the ordering is 000, 001, 011, 111, 002, 012, 112, 022, 122, 222\n         final double[] triploidRef3AllelesPL = new double[]{0, -10, -20, -30, -40, -50, -60, -70, -80, -90};\n         final double[] tripoidAltC3AllelesPL = new double[]{-10, 0, -20, -30, -40, -50, -60, -70, -80, -90};\n+        final double[] tripoidAltG3AllelesPL = new double[]{-10, -40, -70, -90, 0, -50, -80, -20, -60, -30};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0ODkyMA==", "bodyText": "The genotypes around line 74 have bad ADs too -- Genotype acGT and Genotype ccGT", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r377848920", "createdAt": "2020-02-11T19:26:10Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -56,7 +56,9 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n         final List<Allele> AA = Arrays.asList(Aref, Aref);\n         final List<Allele> AC = Arrays.asList(Aref,C);\n         final List<Allele> CC = Arrays.asList(C,C);\n+        final List<Allele> CG = Arrays.asList(C,G);\n         final List<Allele> AG = Arrays.asList(Aref,G);\n+        final List<Allele> GG = Arrays.asList(G,G);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1ODkyNg==", "bodyText": "The allele balance on this AD isn't great -- can we do like {14,7} so the genotype is more obvious?", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r377858926", "createdAt": "2020-02-11T19:45:18Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -130,9 +133,9 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                 Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, C)).PL(new double[]{-10, 0, -20, -30}).AD(new int[]{10, 10}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).AD(homRef3AllelesAD).PL(triploidRef3AllelesPL).make()).make(),\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).AD(hetRefG3AllelesAD).PL(tripoidAltG3AllelesPL).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AG).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).PL(new double[]{0, -40, -70, -90}).AD(new int[]{20, 1}).GQ(400).make())});\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, G)).PL(new double[]{-10, 0, -20, -30}).AD(new int[]{10, 11}).GQ(100).make())});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MDYwMQ==", "bodyText": "Same here -- I'd rather a 2:1 ratio on AD.  And the PLs don't look big enough.", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r377860601", "createdAt": "2020-02-11T19:48:27Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -130,9 +133,9 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                 Collections.singletonList(new GenotypeBuilder(base).alleles(Arrays.asList(Aref, Aref, C)).PL(new double[]{-10, 0, -20, -30}).AD(new int[]{10, 10}).GQ(100).make())});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MzE0OQ==", "bodyText": "What was wrong with this test case?", "url": "https://github.com/broadinstitute/gatk/pull/6448#discussion_r377863149", "createdAt": "2020-02-11T19:53:15Z", "author": {"login": "ldgauthier"}, "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtilsUnitTest.java", "diffHunk": "@@ -149,38 +152,31 @@ public void testUpdatePLsAndADData(final VariantContext originalVC,\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{20, 19, 0, 1}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetRefC3AllelesAD).PL(hetRefC3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AC).AD(hetRefC3AllelesAD).PL(hetRefC3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, hetRefC3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AC).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-10, 0, -20}).AD(new int[]{10, 10}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(AC).PL(new double[]{-10, 0, -20}).AD(new int[]{10, 10}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{10, 9, 10, 9}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(homC3AllelesAD).PL(homC3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(CC).AD(homC3AllelesAD).PL(homC3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, homC3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AC).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-20, -10, 0}).AD(new int[]{0, 20}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(CC).PL(new double[]{-20, -10, 0}).AD(new int[]{0, 20}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{0, 0, 20, 20}).GQ(100).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetRefG3AllelesAD).PL(hetRefG3AllelesPL).\n+                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AG).AD(hetRefG3AllelesAD).PL(hetRefG3AllelesPL).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, hetRefG3AllelesSAC).make()).make(),\n                 new VariantContextBuilder(vcBase).alleles(AG).make(),\n-                Collections.singletonList(new GenotypeBuilder(base).alleles(AA).PL(new double[]{-20, 0, -50}).AD(new int[]{10, 11}).\n+                Collections.singletonList(new GenotypeBuilder(base).alleles(AG).PL(new double[]{-20, 0, -50}).AD(new int[]{10, 11}).\n                         attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, new int[]{10, 10, 11, 11}).GQ(200).make())});\n \n         tests.add(new Object[]{\n-                new VariantContextBuilder(vcBase).alleles(ACG).genotypes(new GenotypeBuilder(base).alleles(AA).AD(hetCG3AllelesAD).PL(hetCG3AllelesPL).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b14c71dbbeace5b5756cfecc4a272bba8b7ae2"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NTk5NTU1", "url": "https://github.com/broadinstitute/gatk/pull/6448#pullrequestreview-357599555", "createdAt": "2020-02-12T16:29:00Z", "commit": {"oid": "21c2d05b33cacf1b8ae601b3690073dac49100d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21c2d05b33cacf1b8ae601b3690073dac49100d5", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/21c2d05b33cacf1b8ae601b3690073dac49100d5", "committedDate": "2020-02-12T04:59:22Z", "message": "review edits"}, "afterCommit": {"oid": "306dd0670af62de408f3251f690e6fc7faf94980", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/306dd0670af62de408f3251f690e6fc7faf94980", "committedDate": "2020-02-12T19:09:18Z", "message": "review edits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ef84fb548c27e5994d7ede4cfedcd36719c88b5", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/4ef84fb548c27e5994d7ede4cfedcd36719c88b5", "committedDate": "2020-02-16T02:17:13Z", "message": "fixed incoherent unit test cases in allele subsetting utils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4e6390a19aaccd317e438f5ad4b58f675b8df92", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/a4e6390a19aaccd317e438f5ad4b58f675b8df92", "committedDate": "2020-02-16T02:17:13Z", "message": "review edits"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "306dd0670af62de408f3251f690e6fc7faf94980", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/306dd0670af62de408f3251f690e6fc7faf94980", "committedDate": "2020-02-12T19:09:18Z", "message": "review edits"}, "afterCommit": {"oid": "a4e6390a19aaccd317e438f5ad4b58f675b8df92", "author": {"user": {"login": "davidbenjamin", "name": "David Benjamin"}}, "url": "https://github.com/broadinstitute/gatk/commit/a4e6390a19aaccd317e438f5ad4b58f675b8df92", "committedDate": "2020-02-16T02:17:13Z", "message": "review edits"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2760, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}