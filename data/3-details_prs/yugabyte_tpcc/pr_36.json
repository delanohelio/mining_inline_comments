{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODM4NjM1", "number": 36, "title": "Sharded TPCC", "bodyText": "Summary:\n\nEnabled loading with a start warehouse id so as to perform sharded\nloading of TPCC.\nEnabled execution with a start warehouse id so as to perform sharded\nexecution of TPCC.\nAdded a new phase where we enable the foreign keys.\n\nSteps to perform the experiment in the new way:\n\n\nCreate the database:\n./tpccbenchmark --nodes=127.0.0.1 --create=true\n\n\nRun the loading of data in a parallel manner:\n./tpccbenchmark --nodes=127.0.0.1 --start-warehouse-id=1 --warehouses=10 --load=true\n./tpccbenchmark --nodes=127.0.0.1 --start-warehouse-id=11 --warehouses=10 --load=true\n\n\nEnable foreign keys after the loading is done:\n./tpccbenchmark --nodes=127.0.0.1 --enable-foreign-keys=true\n\n\nExecute the runs in a parallel manner:\n./tpccbenchmark --nodes=127.0.0.1 --start-warehouse-id=1 --warehouses=10 --total-warehouses=20 --execute=true --warmup-time-secs=0   --initial-delay-secs=60\n./tpccbenchmark --nodes=127.0.0.1 --start-warehouse-id=11 --warehouses=10 --total-warehouses=20 --execute=true --warmup-time-secs=60   --initial-delay-secs=0\n\n\nThe older way of execution still works when we don't want to use the\nparallel form of execution.\nReviewers:\nNeha, Karthik", "createdAt": "2020-07-12T01:40:04Z", "url": "https://github.com/yugabyte/tpcc/pull/36", "merged": true, "mergeCommit": {"oid": "1f43d208d7f9863d5430bfee0a8497493ea60168"}, "closed": true, "closedAt": "2020-07-22T19:26:51Z", "author": {"login": "psudheer21"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1CywVgH2gAyNDQ3ODM4NjM1OjY3YTcxOGQyYzdlZjQ3MjBlYzE5ODNlOWI0ODYwMTRkOGJlMWRlYmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3Vt4JABqjM1NzQ0NjMwMzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "67a718d2c7ef4720ec1983e9b486014d8be1debe", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/67a718d2c7ef4720ec1983e9b486014d8be1debe", "committedDate": "2020-07-15T04:19:19Z", "message": "Sharded TPCC\n\nSummary:\n1. Used a normal connection for Loading data instead of using the Hikari\n   pool.\n2. Enabled loading with a start warehouse id so as to perform sharded\n   loading of TPCC.\n3. Enabled execution with a start warehouse id so as to perform sharded\n   execution of TPCC.\n4. Added a new phase where we enable the foreign keys.\n\nSteps to perform the experiment in the new way:\n\n1. Create the database:\n   ./tpccbenchmark --nodes=127.0.0.1 --create=true\n\n2. Run the loading of data in a parallel manner:\n   ./tpccbenchmark --nodes=127.0.0.1 --startwarehouse=1 --warehouses=10 --load=true\n   ./tpccbenchmark --nodes=127.0.0.1 --startwarehouse=11 --warehouses=10 --load=true\n\n3. Enable foreign keys after the loading is done:\n   ./tpccbenchmark --nodes=127.0.0.1 --enableforeignkeys=true\n\n4. Execute the runs in a parallel manner:\n   ./tpccbenchmark --nodes=127.0.0.1 --startwarehouse=1 --warehouses=10 --totalwarehouses=20 --execute=true\n   ./tpccbenchmark --nodes=127.0.0.1 --startwarehouse=11 --warehouses=10 --totalwarehouses=20 --execute=true\n\nThe older way of execution still works when we don't want to use the\nparallel form of execution\n\nReviewers:\nNeha, Karthik"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NjI2OTQ0", "url": "https://github.com/yugabyte/tpcc/pull/36#pullrequestreview-448626944", "createdAt": "2020-07-15T04:51:41Z", "commit": {"oid": "a8c55afea5188c63d002c1ff9871bd2a5a09bdba"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDo1MTo0MVrOGxuMXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDo1Mjo0MVrOGxuNVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MDIzNw==", "bodyText": "Rename these to startWarehouseIdForShard and totalWarehousesAcrossShards", "url": "https://github.com/yugabyte/tpcc/pull/36#discussion_r454790237", "createdAt": "2020-07-15T04:51:41Z", "author": {"login": "rkarthik007"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -60,6 +60,8 @@\n \n     private static int newOrderTxnId = -1;\n     private static int numWarehouses = 10;\n+    private static int startWarehouseId = -1;\n+    private static int totalWarehousesAcrossExecutions = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8c55afea5188c63d002c1ff9871bd2a5a09bdba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MDM0Ng==", "bodyText": "Comment that this is the number of warehouses (or better yet rename the variable)", "url": "https://github.com/yugabyte/tpcc/pull/36#discussion_r454790346", "createdAt": "2020-07-15T04:52:09Z", "author": {"login": "rkarthik007"}, "path": "src/com/oltpbenchmark/WorkloadConfiguration.java", "diffHunk": "@@ -48,7 +48,9 @@ public void setBenchmarkName(String benchmarkName) {\n   private String db_username;\n   private String db_password;\n   private String db_driver;\n-  private double scaleFactor = 1.0;\n+  private int scaleFactor = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8c55afea5188c63d002c1ff9871bd2a5a09bdba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MDQzNg==", "bodyText": "Rebase should take this out", "url": "https://github.com/yugabyte/tpcc/pull/36#discussion_r454790436", "createdAt": "2020-07-15T04:52:27Z", "author": {"login": "rkarthik007"}, "path": "src/com/oltpbenchmark/api/BenchmarkModule.java", "diffHunk": "@@ -135,6 +137,20 @@ public final HikariDataSource getDataSource() {\n         return listDataSource.get(r);\n     }\n \n+    public final Connection makeConnection() throws SQLException {\n+        java.util.Properties props = new java.util.Properties();\n+        props.put(\"user\", workConf.getDBUsername());\n+        props.put(\"password\", workConf.getDBPassword());\n+        props.put(\"reWriteBatchedInserts\", \"true\");\n+\n+        int r = dataSourceCounter.getAndIncrement() % workConf.getNodes().size();\n+\n+        String connectStr = String.format(\"jdbc:postgresql://%s:%d/%s\", workConf.getNodes().get(r),\n+            workConf.getPort(),\n+            workConf.getDBName());\n+        return DriverManager.getConnection(connectStr, props);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8c55afea5188c63d002c1ff9871bd2a5a09bdba"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MDQ4NA==", "bodyText": "Comment on what this array stores.", "url": "https://github.com/yugabyte/tpcc/pull/36#discussion_r454790484", "createdAt": "2020-07-15T04:52:41Z", "author": {"login": "rkarthik007"}, "path": "src/com/oltpbenchmark/benchmarks/tpcc/TPCCBenchmark.java", "diffHunk": "@@ -122,9 +123,8 @@ protected Package getProcedurePackageImpl() {\n \t\t\t\tTPCCWorker terminal = new TPCCWorker(this, workerId++,\n \t\t\t\t\t\tw_id, lowerDistrictId, upperDistrictId,\n \t\t\t\t\t\tnumWarehouses);\n-\t\t\t\tterminals[lowerTerminalId + terminalId] = terminal;\n+\t\t\t\tterminals[k++] = terminal;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8c55afea5188c63d002c1ff9871bd2a5a09bdba"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8c55afea5188c63d002c1ff9871bd2a5a09bdba", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/a8c55afea5188c63d002c1ff9871bd2a5a09bdba", "committedDate": "2020-07-12T01:38:50Z", "message": "Sharded TPCC\n\nSummary:\n1. Used a normal connection for Loading data instead of using the Hikari\n   pool.\n2. Enabled loading with a start warehouse id so as to perform sharded\n   loading of TPCC.\n3. Enabled execution with a start warehouse id so as to perform sharded\n   execution of TPCC.\n4. Added a new phase where we enable the foreign keys.\n\nSteps to perform the experiment in the new way:\n\n1. Create the database:\n   ./tpccbenchmark --nodes=127.0.0.1 --create=true\n\n2. Run the loading of data in a parallel manner:\n   ./tpccbenchmark --nodes=127.0.0.1 --startwarehouse=1 --warehouses=10 --load=true\n   ./tpccbenchmark --nodes=127.0.0.1 --startwarehouse=11 --warehouses=10 --load=true\n\n3. Enable foreign keys after the loading is done:\n   ./tpccbenchmark --nodes=127.0.0.1 --enableforeignkeys=true\n\n4. Execute the runs in a parallel manner:\n   ./tpccbenchmark --nodes=127.0.0.1 --startwarehouse=1 --warehouses=10 --totalwarehouses=20 --execute=true\n   ./tpccbenchmark --nodes=127.0.0.1 --startwarehouse=11 --warehouses=10 --totalwarehouses=20 --execute=true\n\nThe older way of execution still works when we don't want to use the\nparallel form of execution\n\nReviewers:\nNeha, Karthik"}, "afterCommit": {"oid": "0e7b5f0794bc3b3417a5cf91a294362f55ae1566", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/0e7b5f0794bc3b3417a5cf91a294362f55ae1566", "committedDate": "2020-07-15T06:26:18Z", "message": "Added initial delay and warmup times support through command line arguments.\n\nReviewers:\nKarthik"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTA0MDUz", "url": "https://github.com/yugabyte/tpcc/pull/36#pullrequestreview-449104053", "createdAt": "2020-07-15T16:09:16Z", "commit": {"oid": "0e7b5f0794bc3b3417a5cf91a294362f55ae1566"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjowOToxNlrOGyFJGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjoxMTowN1rOGyFNLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2NjIzMg==", "bodyText": "Prefer having the unit in these metrics. So warmup_time_secs and initial_delay_secs so this is clearer.", "url": "https://github.com/yugabyte/tpcc/pull/36#discussion_r455166232", "createdAt": "2020-07-15T16:09:16Z", "author": {"login": "rkarthik007"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -155,6 +155,8 @@ public static void main(String[] args) throws Exception {\n         options.addOption(null, \"loaderthreads\", true, \"Number of loader threads (default 10)\");\n         options.addOption(null, \"enableforeignkeys\", true, \"Whether to enable foregin keys\");\n \n+        options.addOption(null, \"warmuptime\", true, \"Warmup time in seconds for the benchmark\");\n+        options.addOption(null, \"initialdelay\", true, \"Delay in seconds for starting the benchmark\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e7b5f0794bc3b3417a5cf91a294362f55ae1566"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2NzI3OQ==", "bodyText": "Change to say \"Num Warehouses\" instead of \"Scale Factor\"", "url": "https://github.com/yugabyte/tpcc/pull/36#discussion_r455167279", "createdAt": "2020-07-15T16:11:07Z", "author": {"login": "rkarthik007"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -333,7 +338,7 @@ public static void main(String[] args) throws Exception {\n             initDebug.put(\"Driver\", wrkld.getDBDriver());\n             initDebug.put(\"URL\", wrkld.getNodes());\n             initDebug.put(\"Isolation\", wrkld.getIsolationString());\n-            initDebug.put(\"Scale Factor\", wrkld.getScaleFactor());\n+            initDebug.put(\"Scale Factor\", wrkld.getNumWarehouses());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e7b5f0794bc3b3417a5cf91a294362f55ae1566"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f3c70475f167657a370d05adda04fcbc1586565", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/5f3c70475f167657a370d05adda04fcbc1586565", "committedDate": "2020-07-19T17:42:31Z", "message": "Added initial delay and warmup times support through command line arguments.\n\nReviewers:\nKarthik"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e7b5f0794bc3b3417a5cf91a294362f55ae1566", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/0e7b5f0794bc3b3417a5cf91a294362f55ae1566", "committedDate": "2020-07-15T06:26:18Z", "message": "Added initial delay and warmup times support through command line arguments.\n\nReviewers:\nKarthik"}, "afterCommit": {"oid": "5f3c70475f167657a370d05adda04fcbc1586565", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/5f3c70475f167657a370d05adda04fcbc1586565", "committedDate": "2020-07-19T17:42:31Z", "message": "Added initial delay and warmup times support through command line arguments.\n\nReviewers:\nKarthik"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e19ba60eb32d38be309e3c2f2eb8f43c97cf6c6d", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/e19ba60eb32d38be309e3c2f2eb8f43c97cf6c6d", "committedDate": "2020-07-22T01:30:49Z", "message": "Imporoved warmup-time execution and added cmdline argument for db connections."}, "afterCommit": {"oid": "23027da8a5268a28e9bd314aa4defce90e32a086", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/23027da8a5268a28e9bd314aa4defce90e32a086", "committedDate": "2020-07-22T03:35:44Z", "message": "Imporoved warmup-time execution and added cmdline argument for db connections."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMDEwNTg3", "url": "https://github.com/yugabyte/tpcc/pull/36#pullrequestreview-453010587", "createdAt": "2020-07-22T05:46:07Z", "commit": {"oid": "23027da8a5268a28e9bd314aa4defce90e32a086"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTo0NjowOFrOG1Tkjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTo0ODo0NFrOG1Tnfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0ODM2Nw==", "bodyText": "Lets change message to:\n\"Delaying execution of workload for ... seconds\"", "url": "https://github.com/yugabyte/tpcc/pull/36#discussion_r458548367", "createdAt": "2020-07-22T05:46:08Z", "author": {"login": "rkarthik007"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -573,6 +607,11 @@ else if (serial)\n             throw new RuntimeException(\"No StatementDialects is available for \" + bench);\n         }\n \n+        if (argsLine.hasOption(\"initial-delay\")) {\n+            int initialDelay = Integer.parseInt(argsLine.getOptionValue(\"initial-delay\"));\n+            LOG.info(\"Sleeping for \" + initialDelay);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23027da8a5268a28e9bd314aa4defce90e32a086"}, "originalPosition": 167}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0OTExOA==", "bodyText": "Comment on why we do this. Also, lets parametrize this 5000 to the xml conf.", "url": "https://github.com/yugabyte/tpcc/pull/36#discussion_r458549118", "createdAt": "2020-07-22T05:48:44Z", "author": {"login": "rkarthik007"}, "path": "src/com/oltpbenchmark/api/BenchmarkModule.java", "diffHunk": "@@ -116,6 +116,9 @@ public void createDataSource() throws SQLException {\n         int numConnections =\n             (workConf.getNumDBConnections() + workConf.getNodes().size() - 1) / workConf.getNodes().size();\n         for (String ip : workConf.getNodes()) {\n+            if (listDataSource.size() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23027da8a5268a28e9bd314aa4defce90e32a086"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbf14526c11fb9bd0cf6608237ed85a5d41b1692", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/dbf14526c11fb9bd0cf6608237ed85a5d41b1692", "committedDate": "2020-07-22T07:29:46Z", "message": "Imporoved warmup-time execution and added cmdline argument for db connections."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23027da8a5268a28e9bd314aa4defce90e32a086", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/23027da8a5268a28e9bd314aa4defce90e32a086", "committedDate": "2020-07-22T03:35:44Z", "message": "Imporoved warmup-time execution and added cmdline argument for db connections."}, "afterCommit": {"oid": "dbf14526c11fb9bd0cf6608237ed85a5d41b1692", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/dbf14526c11fb9bd0cf6608237ed85a5d41b1692", "committedDate": "2020-07-22T07:29:46Z", "message": "Imporoved warmup-time execution and added cmdline argument for db connections."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 473, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}