{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4Mzc5MTQz", "number": 37, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToxNDoyMVrOEN9Dqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMzo0NjowOVrOEOg27Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDY3MzA2OnYy", "diffSide": "RIGHT", "path": "src/com/oltpbenchmark/DBWorkload.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToxNDoyMVrOGw2OFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjoyMDowNFrOGxnYQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3MzE3Mw==", "bodyText": "Can you please remove Rate limited req/s from above and just call it Throughput? Also, do you have enough information to calculate throughput per transaction type? (similar to what you're doing for latencies below).\nLet's also remove the rate limiting option from the config file - it's confusing for users.", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r453873173", "createdAt": "2020-07-13T19:14:21Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -907,9 +906,35 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n         LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3NTI2MA==", "bodyText": "Another note: Can we use double for tpmc calculation instead of long and while printing, just use 2 digits after the decimal point?", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r453875260", "createdAt": "2020-07-13T19:18:08Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -907,9 +906,35 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n         LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3MzE3Mw=="}, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY3ODU5Mg==", "bodyText": "Done.", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r454678592", "createdAt": "2020-07-14T22:20:04Z", "author": {"login": "psudheer21"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -907,9 +906,35 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n         LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3MzE3Mw=="}, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDY5NjA2OnYy", "diffSide": "RIGHT", "path": "src/com/oltpbenchmark/DBWorkload.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyMDozNFrOGw2bmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjoyNDowMlrOGxneKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3NjYzNQ==", "bodyText": "This will be a problem for long running workloads. Please add a TODO to fix this method of calculation.", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r453876635", "createdAt": "2020-07-13T19:20:34Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -907,9 +906,35 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n         LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);\n         LOG.info(\"TPM-C: \" + tpmc);\n         LOG.info(\"Efficiency : \" + efficiency);\n+        printLatencies(workers, workConfs.get(0).getTransTypes());\n         return r;\n     }\n \n+    private static void printLatencies(List<Worker<?>> workers, TransactionTypes transactionTypes) {\n+        List<List<Integer>> list_latencies = new ArrayList<>();\n+        for (int i = 0; i < 5; ++i) {\n+            list_latencies.add(new ArrayList<Integer>());\n+        }\n+        for (Worker<?> w : workers) {\n+            for (LatencyRecord.Sample sample : w.getLatencyRecords()) {\n+                list_latencies.get(sample.tranType - 1).add(sample.operationLatencyUs);\n+            }\n+        }\n+        for (int i = 0; i < 5; ++i) {\n+            Collections.sort(list_latencies.get(i));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4MDEwNQ==", "bodyText": "Done.", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r454680105", "createdAt": "2020-07-14T22:24:02Z", "author": {"login": "psudheer21"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -907,9 +906,35 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n         LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);\n         LOG.info(\"TPM-C: \" + tpmc);\n         LOG.info(\"Efficiency : \" + efficiency);\n+        printLatencies(workers, workConfs.get(0).getTransTypes());\n         return r;\n     }\n \n+    private static void printLatencies(List<Worker<?>> workers, TransactionTypes transactionTypes) {\n+        List<List<Integer>> list_latencies = new ArrayList<>();\n+        for (int i = 0; i < 5; ++i) {\n+            list_latencies.add(new ArrayList<Integer>());\n+        }\n+        for (Worker<?> w : workers) {\n+            for (LatencyRecord.Sample sample : w.getLatencyRecords()) {\n+                list_latencies.get(sample.tranType - 1).add(sample.operationLatencyUs);\n+            }\n+        }\n+        for (int i = 0; i < 5; ++i) {\n+            Collections.sort(list_latencies.get(i));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3NjYzNQ=="}, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDcwNjQ4OnYy", "diffSide": "RIGHT", "path": "src/com/oltpbenchmark/DBWorkload.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyMzoyNlrOGw2hxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjoyNDowMFrOGxneFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3ODIxNQ==", "bodyText": "Let's use milliseconds instead of microseconds.", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r453878215", "createdAt": "2020-07-13T19:23:26Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -907,9 +906,35 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n         LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);\n         LOG.info(\"TPM-C: \" + tpmc);\n         LOG.info(\"Efficiency : \" + efficiency);\n+        printLatencies(workers, workConfs.get(0).getTransTypes());\n         return r;\n     }\n \n+    private static void printLatencies(List<Worker<?>> workers, TransactionTypes transactionTypes) {\n+        List<List<Integer>> list_latencies = new ArrayList<>();\n+        for (int i = 0; i < 5; ++i) {\n+            list_latencies.add(new ArrayList<Integer>());\n+        }\n+        for (Worker<?> w : workers) {\n+            for (LatencyRecord.Sample sample : w.getLatencyRecords()) {\n+                list_latencies.get(sample.tranType - 1).add(sample.operationLatencyUs);\n+            }\n+        }\n+        for (int i = 0; i < 5; ++i) {\n+            Collections.sort(list_latencies.get(i));\n+            long sum = 0;\n+            for (int val : list_latencies.get(i)) {\n+                sum += val;\n+            }\n+            double avgLatency = sum / list_latencies.get(i).size();\n+            int p99Index = (int)(list_latencies.get(i).size() * 0.99);\n+\n+            LOG.info(transactionTypes.getType(i+1).getName() +\n+                     \", Avg Latency: \" + avgLatency +\n+                     \" usecs, p99 Latency: \" + list_latencies.get(i).get(p99Index) + \" usecs\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4MDA4NA==", "bodyText": "Done.", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r454680084", "createdAt": "2020-07-14T22:24:00Z", "author": {"login": "psudheer21"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -907,9 +906,35 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n         LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);\n         LOG.info(\"TPM-C: \" + tpmc);\n         LOG.info(\"Efficiency : \" + efficiency);\n+        printLatencies(workers, workConfs.get(0).getTransTypes());\n         return r;\n     }\n \n+    private static void printLatencies(List<Worker<?>> workers, TransactionTypes transactionTypes) {\n+        List<List<Integer>> list_latencies = new ArrayList<>();\n+        for (int i = 0; i < 5; ++i) {\n+            list_latencies.add(new ArrayList<Integer>());\n+        }\n+        for (Worker<?> w : workers) {\n+            for (LatencyRecord.Sample sample : w.getLatencyRecords()) {\n+                list_latencies.get(sample.tranType - 1).add(sample.operationLatencyUs);\n+            }\n+        }\n+        for (int i = 0; i < 5; ++i) {\n+            Collections.sort(list_latencies.get(i));\n+            long sum = 0;\n+            for (int val : list_latencies.get(i)) {\n+                sum += val;\n+            }\n+            double avgLatency = sum / list_latencies.get(i).size();\n+            int p99Index = (int)(list_latencies.get(i).size() * 0.99);\n+\n+            LOG.info(transactionTypes.getType(i+1).getName() +\n+                     \", Avg Latency: \" + avgLatency +\n+                     \" usecs, p99 Latency: \" + list_latencies.get(i).get(p99Index) + \" usecs\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3ODIxNQ=="}, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDcxMzYxOnYy", "diffSide": "RIGHT", "path": "src/com/oltpbenchmark/LatencyRecord.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyNToxNlrOGw2l4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjoyOTo0N1rOGxnmNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3OTI2NQ==", "bodyText": "What is the +500 for?", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r453879265", "createdAt": "2020-07-13T19:25:16Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/LatencyRecord.java", "diffHunk": "@@ -46,7 +48,10 @@ public void addLatency(int transType, long startNs, long endNs, int workerId, in\n \t\tint latencyUs = (int) ((endNs - startNs + 500) / 1000);\n \t\tassert latencyUs >= 0;\n \n-\t\tchunk[nextIndex] = new Sample(transType, startNs, latencyUs, workerId, phaseId);\n+\t\tint operationLatencyUs = (int)((operationEndNs - operationStartNs + 500) / 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4MjE2Nw==", "bodyText": "That does the rounding...", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r454682167", "createdAt": "2020-07-14T22:29:47Z", "author": {"login": "psudheer21"}, "path": "src/com/oltpbenchmark/LatencyRecord.java", "diffHunk": "@@ -46,7 +48,10 @@ public void addLatency(int transType, long startNs, long endNs, int workerId, in\n \t\tint latencyUs = (int) ((endNs - startNs + 500) / 1000);\n \t\tassert latencyUs >= 0;\n \n-\t\tchunk[nextIndex] = new Sample(transType, startNs, latencyUs, workerId, phaseId);\n+\t\tint operationLatencyUs = (int)((operationEndNs - operationStartNs + 500) / 1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3OTI2NQ=="}, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDczMTEyOnYy", "diffSide": "RIGHT", "path": "src/com/oltpbenchmark/Results.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToyOTo1OVrOGw2wRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjoyOTozMVrOGxnl4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MTkyNA==", "bodyText": "You'll need to change the header above too to only include Transaction Name, Latency (microseconds)", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r453881924", "createdAt": "2020-07-13T19:29:59Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/Results.java", "diffHunk": "@@ -171,14 +162,8 @@ public void writeAllCSVAbsoluteTiming(List<TransactionType> activeTXTypes, Print\n         for (Sample s : latencySamples) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4MTk5OQ==", "bodyText": "Done.", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r454681999", "createdAt": "2020-07-14T22:29:20Z", "author": {"login": "psudheer21"}, "path": "src/com/oltpbenchmark/Results.java", "diffHunk": "@@ -171,14 +162,8 @@ public void writeAllCSVAbsoluteTiming(List<TransactionType> activeTXTypes, Print\n         for (Sample s : latencySamples) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MTkyNA=="}, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4MjA4MQ==", "bodyText": "Done.", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r454682081", "createdAt": "2020-07-14T22:29:31Z", "author": {"login": "psudheer21"}, "path": "src/com/oltpbenchmark/Results.java", "diffHunk": "@@ -171,14 +162,8 @@ public void writeAllCSVAbsoluteTiming(List<TransactionType> activeTXTypes, Print\n         for (Sample s : latencySamples) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MTkyNA=="}, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDczNDA1OnYy", "diffSide": "RIGHT", "path": "src/com/oltpbenchmark/Results.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTozMDo0MFrOGw2x3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjoyNjo0NVrOGxniEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MjMzNQ==", "bodyText": "I think having start time might be good too. We could leave it there for now IMO.", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r453882335", "createdAt": "2020-07-13T19:30:40Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/Results.java", "diffHunk": "@@ -171,14 +162,8 @@ public void writeAllCSVAbsoluteTiming(List<TransactionType> activeTXTypes, Print\n         for (Sample s : latencySamples) {\n             double startUs = ((double) s.startNs / (double) 1000000000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4MTEwNg==", "bodyText": "Done.", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r454681106", "createdAt": "2020-07-14T22:26:45Z", "author": {"login": "psudheer21"}, "path": "src/com/oltpbenchmark/Results.java", "diffHunk": "@@ -171,14 +162,8 @@ public void writeAllCSVAbsoluteTiming(List<TransactionType> activeTXTypes, Print\n         for (Sample s : latencySamples) {\n             double startUs = ((double) s.startNs / (double) 1000000000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MjMzNQ=="}, "originalCommit": {"oid": "19291a9c5340d335bed59cb865aaf89febe1e600"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjUzMTk1OnYy", "diffSide": "RIGHT", "path": "src/com/oltpbenchmark/DBWorkload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMzo0MjowMVrOGxtEZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMzo0MjowMVrOGxtEZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc3MTgxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.info(\"Throughput: \" + r + \" Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);\n          \n          \n            \n                    LOG.info(\"Throughput: \" + r + \" transactions / sec\");\n          \n          \n            \n                    LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r454771814", "createdAt": "2020-07-15T03:42:01Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -899,17 +898,43 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n             }\n         }\n         LOG.info(SINGLE_LINE);\n-        LOG.info(\"Rate limited reqs/s: \" + r);\n \n-        long tpmc = numNewOrderTransactions * 60 / time;\n+        double tpmc = 1.0 * numNewOrderTransactions * 60 / time;\n         double efficiency = 1.0 * tpmc * 100 / numWarehouses / 12.86;\n \n-        LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);\n+        LOG.info(\"Throughput: \" + r + \" Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5278e7f62bb1bd5ca1e2483a3a7cb359f5184f0c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjUzODY5OnYy", "diffSide": "RIGHT", "path": "src/com/oltpbenchmark/DBWorkload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMzo0NjowOVrOGxtIRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMzo0NjowOVrOGxtIRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc3MjgwNA==", "bodyText": "Can you use just 2 digits after decimal point while printing so that it looks neater and more readable?", "url": "https://github.com/yugabyte/tpcc/pull/37#discussion_r454772804", "createdAt": "2020-07-15T03:46:09Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -899,17 +898,43 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n             }\n         }\n         LOG.info(SINGLE_LINE);\n-        LOG.info(\"Rate limited reqs/s: \" + r);\n \n-        long tpmc = numNewOrderTransactions * 60 / time;\n+        double tpmc = 1.0 * numNewOrderTransactions * 60 / time;\n         double efficiency = 1.0 * tpmc * 100 / numWarehouses / 12.86;\n \n-        LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);\n+        LOG.info(\"Throughput: \" + r + \" Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);\n         LOG.info(\"TPM-C: \" + tpmc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5278e7f62bb1bd5ca1e2483a3a7cb359f5184f0c"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 745, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}