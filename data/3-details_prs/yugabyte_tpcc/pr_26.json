{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMjg1NDEy", "number": 26, "title": "Ignore the thread waiting time in the calculation of TPM-C.", "bodyText": "Summary:\nFor the calculation of TPM-C we used the entire duration of the run\nwhich included the waiting time of the trailing transactions.\nWith this change, we ignore the transactions that complete after the\nconfigured time and use the configured time for the calculation of\nTPM-C.\nReviewers:\nNeha", "createdAt": "2020-06-11T19:27:50Z", "url": "https://github.com/yugabyte/tpcc/pull/26", "merged": true, "mergeCommit": {"oid": "b7d4eed494019cfbd1f6d347db85c167026efaa2"}, "closed": true, "closedAt": "2020-06-12T07:22:02Z", "author": {"login": "psudheer21"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqT0eigFqTQyOTIzNTYzOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqddqigBqjM0MzcxOTc1MTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjM1NjM4", "url": "https://github.com/yugabyte/tpcc/pull/26#pullrequestreview-429235638", "createdAt": "2020-06-11T19:52:36Z", "commit": {"oid": "d60e8b9228c2670c9ca0383af1ce142618704906"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1MjozNlrOGisWmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1NToxMVrOGisblA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMTQ1MQ==", "bodyText": "Can this happen? We can start a new txn even after the provided time has passed?\nWhat is considered as txn start time? We should include keying time in that. For example, suppose that:\n\nWe start tpcc run at time 0.\nAt time 299, we start txn T1 and wait for keying time.\nAt time 310, we actually start the txn execution.\nIn this scenario, we should consider T1 because the keying time started in the specified time window (0-299).", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439031451", "createdAt": "2020-06-11T19:52:36Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -866,27 +868,25 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n \n         }\n         Results r = ThreadBench.runRateLimitedBenchmark(workers, workConfs, intervalMonitor);\n-        long end = System.nanoTime();\n \n         long numNewOrderTransactions = 0;\n         for (Worker<?> w : workers) {\n             for (LatencyRecord.Sample sample : w.getLatencyRecords()) {\n-                if (sample.tranType == newOrderTxnId) {\n+                if (sample.tranType == newOrderTxnId && sample.startNs + 1000L * sample.latencyUs <= end) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60e8b9228c2670c9ca0383af1ce142618704906"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMjAxMw==", "bodyText": "Let's log these on separate lines for better readability.", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439032013", "createdAt": "2020-06-11T19:53:44Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -866,27 +868,25 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n \n         }\n         Results r = ThreadBench.runRateLimitedBenchmark(workers, workConfs, intervalMonitor);\n-        long end = System.nanoTime();\n \n         long numNewOrderTransactions = 0;\n         for (Worker<?> w : workers) {\n             for (LatencyRecord.Sample sample : w.getLatencyRecords()) {\n-                if (sample.tranType == newOrderTxnId) {\n+                if (sample.tranType == newOrderTxnId && sample.startNs + 1000L * sample.latencyUs <= end) {\n                     ++numNewOrderTransactions;\n                 }\n             }\n         }\n         LOG.info(SINGLE_LINE);\n         LOG.info(\"Rate limited reqs/s: \" + r);\n \n-        long time_seconds = (end - start) / 1000 / 1000 / 1000;\n-        long tpmc = numNewOrderTransactions * 60 * 1000 * 1000 * 1000 / (end - start);\n+        long tpmc = numNewOrderTransactions * 60 / time;\n         double efficiency = 1.0 * tpmc * 100 / numWarehouses / 12.86;\n \n         LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions +\n-                 \" time seconds: \" + time_seconds +\n+                 \" time seconds: \" + time +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60e8b9228c2670c9ca0383af1ce142618704906"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMjcyNA==", "bodyText": "Please remove.", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439032724", "createdAt": "2020-06-11T19:55:11Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/LatencyRecord.java", "diffHunk": "@@ -120,7 +102,7 @@ else if (diff < 0)\n \tprivate final class LatencyRecordIterator implements Iterator<Sample> {\n \t\tprivate int chunkIndex = 0;\n \t\tprivate int subIndex = 0;\n-\t\tprivate long lastIteratorNs = startNs;\n+\t\t//private long lastIteratorNs = startNs;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60e8b9228c2670c9ca0383af1ce142618704906"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjkyMDYx", "url": "https://github.com/yugabyte/tpcc/pull/26#pullrequestreview-429292061", "createdAt": "2020-06-11T21:11:52Z", "commit": {"oid": "d60e8b9228c2670c9ca0383af1ce142618704906"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMToxMTo1MlrOGiu5jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjozNDo1OFrOGixAvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3MzE2NQ==", "bodyText": "Discussed offline. This code makes sense since we want to calculate number of transactions processed (and not number of transactions generated).", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439073165", "createdAt": "2020-06-11T21:11:52Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -866,27 +868,25 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n \n         }\n         Results r = ThreadBench.runRateLimitedBenchmark(workers, workConfs, intervalMonitor);\n-        long end = System.nanoTime();\n \n         long numNewOrderTransactions = 0;\n         for (Worker<?> w : workers) {\n             for (LatencyRecord.Sample sample : w.getLatencyRecords()) {\n-                if (sample.tranType == newOrderTxnId) {\n+                if (sample.tranType == newOrderTxnId && sample.startNs + 1000L * sample.latencyUs <= end) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMTQ1MQ=="}, "originalCommit": {"oid": "d60e8b9228c2670c9ca0383af1ce142618704906"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwNzc3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \" time seconds: \" + time);\n          \n          \n            \n                    LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439107772", "createdAt": "2020-06-11T22:34:58Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -883,10 +883,9 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n         long tpmc = numNewOrderTransactions * 60 / time;\n         double efficiency = 1.0 * tpmc * 100 / numWarehouses / 12.86;\n \n-        LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions +\n-                 \" time seconds: \" + time +\n-                 \" TPM-C: \" + tpmc +\n-                 \" Efficiency : \" + efficiency);\n+        LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \" time seconds: \" + time);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72e87eed9304c2874454e167ac1f4cc822f24d77"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea69d6c235de72ae1d64fb7ef23606dfb555d873", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/ea69d6c235de72ae1d64fb7ef23606dfb555d873", "committedDate": "2020-06-12T07:09:14Z", "message": "Ignore the thread waiting time in the calculation of TPM-C.\n\nSummary:\nFor the calculation of TPM-C we used the entire duration of the run\nwhich included the waiting time of the trailing transactions.\n\nWith this change, we ignore the transactions that complete after the\nconfigured time and use the configured time for the calculation of\nTPM-C.\n\nReviewers:\nNeha"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1db3105b9bc03c1280f17301b8611cac7000c93", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/c1db3105b9bc03c1280f17301b8611cac7000c93", "committedDate": "2020-06-12T07:09:14Z", "message": "Addressed comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6361a2bb7c5891e5167f596b4fbfe0090b8c43e0", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/6361a2bb7c5891e5167f596b4fbfe0090b8c43e0", "committedDate": "2020-06-12T07:10:18Z", "message": "Addressed comments 2."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72e87eed9304c2874454e167ac1f4cc822f24d77", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/72e87eed9304c2874454e167ac1f4cc822f24d77", "committedDate": "2020-06-11T22:22:58Z", "message": "Addressed comments."}, "afterCommit": {"oid": "6361a2bb7c5891e5167f596b4fbfe0090b8c43e0", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/6361a2bb7c5891e5167f596b4fbfe0090b8c43e0", "committedDate": "2020-06-12T07:10:18Z", "message": "Addressed comments 2."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 465, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}