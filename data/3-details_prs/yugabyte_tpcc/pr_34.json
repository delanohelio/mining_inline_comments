{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyOTg5MDAx", "number": 34, "title": "Reduce the memory consumption of TPC-C benchmark.", "bodyText": "Summary:\nThe original code was pre allocating a large array for the latency\nresults assuming that they were not going to use a lot of threads.\nHowever, in the TPCC case we have a large number with each thread doing\nvery small number of operations. So this change reduces the size of the\narrays.\nRemoved some other components like histograms that were not being used\nthat contribute to the memory bloat.\nAdded some more cleanup of the code as well.\nReviewers:\nNeha", "createdAt": "2020-07-01T21:04:33Z", "url": "https://github.com/yugabyte/tpcc/pull/34", "merged": true, "mergeCommit": {"oid": "41b3b284738bd483eb1f414e92ca5ffde81f71e7"}, "closed": true, "closedAt": "2020-07-06T19:34:18Z", "author": {"login": "psudheer21"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxDzV9AFqTQ0MTk1NjY2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyVyVkgFqTQ0MzMyNDM2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTU2NjY3", "url": "https://github.com/yugabyte/tpcc/pull/34#pullrequestreview-441956667", "createdAt": "2020-07-02T19:10:56Z", "commit": {"oid": "5590823b522910557ad33c040af34f8e4e7f88e8"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOToxMDo1NlrOGsaEDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOToxMzozMVrOGsaIxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIxNzU0OA==", "bodyText": "Please extra space:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected  TransactionTypes transactionTypes;\n          \n          \n            \n                protected  Map<Class<? extends Procedure>, Procedure> class_procedures = new HashMap<Class<? extends Procedure>, Procedure>();\n          \n          \n            \n                protected TransactionTypes transactionTypes;\n          \n          \n            \n                protected Map<Class<? extends Procedure>, Procedure> class_procedures = new HashMap<Class<? extends Procedure>, Procedure>();", "url": "https://github.com/yugabyte/tpcc/pull/34#discussion_r449217548", "createdAt": "2020-07-02T19:10:56Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/api/Worker.java", "diffHunk": "@@ -57,17 +55,9 @@\n     private final int id;\n     private final T benchmarkModule;\n     protected final HikariDataSource dataSource;\n-    protected final WorkloadConfiguration wrkld;\n-    protected final TransactionTypes transactionTypes;\n-    protected final Map<TransactionType, Procedure> procedures = new HashMap<TransactionType, Procedure>();\n-    protected final Map<String, Procedure> name_procedures = new HashMap<String, Procedure>();\n-    protected final Map<Class<? extends Procedure>, Procedure> class_procedures = new HashMap<Class<? extends Procedure>, Procedure>();\n-\n-    private final Histogram<TransactionType> txnSuccess = new Histogram<TransactionType>();\n-    private final Histogram<TransactionType> txnAbort = new Histogram<TransactionType>();\n-    private final Histogram<TransactionType> txnRetry = new Histogram<TransactionType>();\n-    private final Histogram<TransactionType> txnErrors = new Histogram<TransactionType>();\n-    private final Map<TransactionType, Histogram<String>> txnAbortMessages = new HashMap<TransactionType, Histogram<String>>();\n+    protected static WorkloadConfiguration wrkld;\n+    protected  TransactionTypes transactionTypes;\n+    protected  Map<Class<? extends Procedure>, Procedure> class_procedures = new HashMap<Class<? extends Procedure>, Procedure>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5590823b522910557ad33c040af34f8e4e7f88e8"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIxODYyNA==", "bodyText": "Can we remove instead of commenting out?", "url": "https://github.com/yugabyte/tpcc/pull/34#discussion_r449218624", "createdAt": "2020-07-02T19:13:12Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/api/Worker.java", "diffHunk": "@@ -149,40 +137,20 @@ public final int getAndResetIntervalRequests() {\n         return latencies;\n     }\n \n-    public final Procedure getProcedure(TransactionType type) {\n-        return (this.procedures.get(type));\n-    }\n+    //public final Procedure getProcedure(TransactionType type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5590823b522910557ad33c040af34f8e4e7f88e8"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIxODc1OQ==", "bodyText": "Please remove", "url": "https://github.com/yugabyte/tpcc/pull/34#discussion_r449218759", "createdAt": "2020-07-02T19:13:31Z", "author": {"login": "ndeodhar"}, "path": "src/com/oltpbenchmark/api/Worker.java", "diffHunk": "@@ -497,7 +454,7 @@ protected final TransactionType doWork(boolean measure, SubmittedProcedure piece\n                                                ex.getClass().getSimpleName(), next, this.toString(),\n                                                ex.getMessage(), ex.getErrorCode(), ex.getSQLState()), ex);\n \n-                    this.txnErrors.put(next);\n+                    //this.txnErrors.put(next);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5590823b522910557ad33c040af34f8e4e7f88e8"}, "originalPosition": 139}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "154f4e4f2ce7f222c8668ba6ed35739c29d58f26", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/154f4e4f2ce7f222c8668ba6ed35739c29d58f26", "committedDate": "2020-07-02T20:51:34Z", "message": "Reduce the memory consumption of TPC-C benchmark.\n\nSummary:\nThe original code was pre allocating a large array for the latency\nresults assuming that they were not going to use a lot of threads.\nHowever, in the TPCC case we have a large number with each thread doing\nvery small number of operations. So this change reduces the size of the\narrays.\n\nRemoved some other components like histograms that were not being used\nthat contribute to the memory bloat.\n\nAdded some more cleanup of the code as well.\n\nReviewers:\nNeha"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5590823b522910557ad33c040af34f8e4e7f88e8", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/5590823b522910557ad33c040af34f8e4e7f88e8", "committedDate": "2020-07-01T21:01:38Z", "message": "Reduce the memory consumption of TPC-C benchmark.\n\nSummary:\nThe original code was pre allocating a large array for the latency\nresults assuming that they were not going to use a lot of threads.\nHowever, in the TPCC case we have a large number with each thread doing\nvery small number of operations. So this change reduces the size of the\narrays.\n\nRemoved some other components like histograms that were not being used\nthat contribute to the memory bloat.\n\nAdded some more cleanup of the code as well.\n\nReviewers:\nNeha"}, "afterCommit": {"oid": "154f4e4f2ce7f222c8668ba6ed35739c29d58f26", "author": {"user": {"login": "psudheer21", "name": "Sudheer Ponnemkunnath Rammohan"}}, "url": "https://github.com/yugabyte/tpcc/commit/154f4e4f2ce7f222c8668ba6ed35739c29d58f26", "committedDate": "2020-07-02T20:51:34Z", "message": "Reduce the memory consumption of TPC-C benchmark.\n\nSummary:\nThe original code was pre allocating a large array for the latency\nresults assuming that they were not going to use a lot of threads.\nHowever, in the TPCC case we have a large number with each thread doing\nvery small number of operations. So this change reduces the size of the\narrays.\n\nRemoved some other components like histograms that were not being used\nthat contribute to the memory bloat.\n\nAdded some more cleanup of the code as well.\n\nReviewers:\nNeha"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzI0MzY1", "url": "https://github.com/yugabyte/tpcc/pull/34#pullrequestreview-443324365", "createdAt": "2020-07-06T18:45:17Z", "commit": {"oid": "154f4e4f2ce7f222c8668ba6ed35739c29d58f26"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 469, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}