{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODc4MzQ5", "number": 3663, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToxMzoxMFrODahFwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToxNjoyOVrODahKYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTMxNzEyOnYy", "diffSide": "LEFT", "path": "src/com/palmergames/bukkit/towny/object/Nation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToxMzoxMFrOFhgy2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToxMzoxMFrOFhgy2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY4NDYzNQ==", "bodyText": "Why are these getting nuked? There will certainly be plugins using the getEconomyName() to manipulate the eco account.", "url": "https://github.com/TownyAdvanced/Towny/pull/3663#discussion_r370684635", "createdAt": "2020-01-24T15:13:10Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/object/Nation.java", "diffHunk": "@@ -565,21 +566,6 @@ public boolean hasResident(String name) {\n \t\treturn false;\n \t}\n \n-    @Override\n-    protected World getBukkitWorld() {\n-        if (hasCapital() && getCapital().hasWorld()) {\n-            return BukkitTools.getWorld(getCapital().getWorld().getName());\n-        } else {\n-            return super.getBukkitWorld();\n-        }\n-    }\n-\n-\n-\t@Override\n-\tpublic String getEconomyName() {\n-\t\treturn StringMgmt.trimMaxLength(Nation.ECONOMY_ACCOUNT_PREFIX + getName(), 32);\n-\t}\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b184cb1bdda51854ddc0b6798374bc283ffd2930"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTMyMjg2OnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/EconomyAccount.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToxNDozNlrOFhg2FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToxNDozNlrOFhg2FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY4NTQ2MA==", "bodyText": "This file got formatted throughout.", "url": "https://github.com/TownyAdvanced/Towny/pull/3663#discussion_r370685460", "createdAt": "2020-01-24T15:14:36Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/object/EconomyAccount.java", "diffHunk": "@@ -1,201 +1,220 @@\n-package com.palmergames.bukkit.towny.object;\r\n-\r\n-import com.palmergames.bukkit.config.ConfigNodes;\r\n-import com.palmergames.bukkit.towny.TownyEconomyHandler;\r\n-import com.palmergames.bukkit.towny.TownyLogger;\r\n-import com.palmergames.bukkit.towny.TownySettings;\r\n-import com.palmergames.bukkit.towny.exceptions.EconomyException;\r\n-import com.palmergames.bukkit.util.BukkitTools;\r\n-import org.bukkit.World;\r\n-\r\n-/**\r\n- * Economy object which provides an interface with the Economy Handler.\r\n- *\r\n- * @author ElgarL, Shade\r\n- *\r\n- */\r\n-public class TownyEconomyObject extends TownyObject {\r\n-\tpublic static final TownyServerAccount SERVER_ACCOUNT = new TownyServerAccount();\r\n-\t\r\n-\tprotected TownyEconomyObject(String name) {\r\n-\t\tsuper(name);\r\n-\t}\r\n-\t\r\n-\tprivate static final class TownyServerAccount extends TownyEconomyObject {\r\n-\t\tTownyServerAccount() {\r\n-\t\t\tsuper(TownySettings.getString(ConfigNodes.ECO_CLOSED_ECONOMY_SERVER_ACCOUNT));\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Tries to pay from the players holdings\r\n-\t *\r\n-\t * @param amount value to deduct from the player's account\r\n-\t * @param reason leger memo stating why amount is deducted\r\n-\t * @return true if successful\r\n-\t * @throws EconomyException if the transaction fails\r\n-\t */\r\n-\tpublic boolean pay(double amount, String reason) throws EconomyException {\r\n-\t\tif (TownySettings.getBoolean(ConfigNodes.ECO_CLOSED_ECONOMY_ENABLED)) {\r\n-\t\t\treturn payTo(amount, SERVER_ACCOUNT, reason);\r\n-\t\t} else {\r\n-\t\t\tboolean payed = _pay(amount);\r\n-\t\t\tif (payed)\r\n-\t\t\t\tTownyLogger.getInstance().logMoneyTransaction(this, amount, null, reason);\r\n-\t\t\treturn payed;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tprivate boolean _pay(double amount) throws EconomyException {\r\n-\t\tif (canPayFromHoldings(amount)) {\r\n-\t\t\tif (TownyEconomyHandler.isActive())\r\n-\t\t\t\tif (amount > 0) {\r\n-\t\t\t\t\treturn TownyEconomyHandler.subtract(getEconomyName(), amount, getBukkitWorld());\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\treturn TownyEconomyHandler.add(getEconomyName(), Math.abs(amount), getBukkitWorld());\r\n-\t\t\t\t}\r\n-\t\t}\r\n-\t\treturn false;\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * When collecting money add it to the Accounts bank\r\n-\t *\r\n-\t * @param amount currency to collect\r\n-\t * @param reason memo regarding transaction\r\n-\t * @return collected or pay to server account   \r\n-\t * @throws EconomyException if transaction fails\r\n-\t */\r\n-\tpublic boolean collect(double amount, String reason) throws EconomyException {\r\n-\t\tif (TownySettings.getBoolean(ConfigNodes.ECO_CLOSED_ECONOMY_ENABLED)) {\r\n-\t\t\treturn SERVER_ACCOUNT.payTo(amount, this, reason);\r\n-\t\t} else {\r\n-\t\t\tboolean collected = _collect(amount);\r\n-\t\t\tif (collected)\r\n-\t\t\t\tTownyLogger.getInstance().logMoneyTransaction(null, amount, this, reason);\r\n-\t\t\treturn collected;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tprivate boolean _collect(double amount) throws EconomyException {\r\n-\t\treturn TownyEconomyHandler.add(getEconomyName(), amount, getBukkitWorld());\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * When one account is paying another account(Taxes/Plot Purchasing)\r\n-\t *\r\n-\t * @param amount currency to be collected\r\n-\t * @param collector recipient of transaction\r\n-\t * @param reason memo regarding transaction\r\n-\t * @return true if successfully payed amount to collector.\r\n-\t * @throws EconomyException if transaction fails\r\n-\t */\r\n-\tpublic boolean payTo(double amount, TownyEconomyObject collector, String reason) throws EconomyException {\r\n-\t\tboolean payed = _payTo(amount, collector);\r\n-\t\tif (payed)\r\n-\t\t\tTownyLogger.getInstance().logMoneyTransaction(this, amount, collector, reason);\r\n-\t\treturn payed;\r\n-\t}\r\n-\r\n-\tprivate boolean _payTo(double amount, TownyEconomyObject collector) throws EconomyException {\r\n-\t\tif (_pay(amount)) {\r\n-\t\t\tif (!collector._collect(amount)) {\r\n-\t\t\t\t_collect(amount); //Transaction failed. Refunding amount.\r\n-\t\t\t\treturn false;\r\n-\t\t\t} else {\r\n-\t\t\t\treturn true;\r\n-\t\t\t}\r\n-\t\t} else {\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Get a valid economy account name for this object.\r\n-\t *\r\n-\t * @return account name\r\n-\t */\r\n-\tpublic String getEconomyName() {\r\n-\t\treturn getName();\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Fetch the current world for this object\r\n-\t *\r\n-\t * @return Bukkit world for the object\r\n-\t */\r\n-\tprotected World getBukkitWorld() {\r\n-\t\treturn BukkitTools.getWorlds().get(0);\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Set balance and log this action\r\n-\t *\r\n-\t * @param amount currency to transact\r\n-\t * @param reason memo regarding transaction\r\n-\t * @return true, or pay/collect balance for given reason\r\n-\t * @throws EconomyException if transaction fails\r\n-\t */\r\n-\tpublic boolean setBalance(double amount, String reason) throws EconomyException {\r\n-\t\tdouble balance = getHoldingBalance();\r\n-\t\tdouble diff = amount - balance;\r\n-\t\tif (diff > 0) {\r\n-\t\t\t// Adding to\r\n-\t\t\treturn collect(diff, reason);\r\n-\t\t} else if (balance > amount) {\r\n-\t\t\t// Subtracting from\r\n-\t\t\tdiff = -diff;\r\n-\t\t\treturn pay(diff, reason);\r\n-\t\t} else {\r\n-\t\t\t// Same amount, do nothing.\r\n-\t\t\treturn true;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/*\r\n-\tprivate boolean _setBalance(double amount) {\r\n-\t\treturn TownyEconomyHandler.setBalance(getEconomyName(), amount, getBukkitWorld());\r\n-\t}\r\n-\t*/\r\n-\r\n-\tpublic double getHoldingBalance() throws EconomyException {\r\n-\t\ttry {\r\n-\t\t\treturn TownyEconomyHandler.getBalance(getEconomyName(), getBukkitWorld());\r\n-\t\t} catch (NoClassDefFoundError e) {\r\n-\t\t\te.printStackTrace();\r\n-\t\t\tthrow new EconomyException(\"Economy error getting holdings for \" + getEconomyName());\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Does this object have enough in it's economy account to pay?\r\n-\t *\r\n-\t * @param amount currency to check for\r\n-\t * @return true if there is enough.\r\n-\t * @throws EconomyException if failure\r\n-\t */\r\n-\tpublic boolean canPayFromHoldings(double amount) throws EconomyException {\r\n-\t\treturn TownyEconomyHandler.hasEnough(getEconomyName(), amount, getBukkitWorld());\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Used To Get Balance of Players holdings in String format for printing\r\n-\t *\r\n-\t * @return current account balance formatted in a string.\r\n-\t */\r\n-\tpublic String getHoldingFormattedBalance() {\r\n-\t\ttry {\r\n-\t\t\treturn TownyEconomyHandler.getFormattedBalance(getHoldingBalance());\r\n-\t\t} catch (EconomyException e) {\r\n-\t\t\treturn \"Error Accessing Bank Account\";\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Attempt to delete the economy account.\r\n-\t */\r\n-\tpublic void removeAccount() {\r\n-\t\tTownyEconomyHandler.removeAccount(getEconomyName());\r\n-\t}\r\n-\r\n-}\r\n+package com.palmergames.bukkit.towny.object;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b184cb1bdda51854ddc0b6798374bc283ffd2930"}, "originalPosition": 202}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTMyODk2OnYy", "diffSide": "LEFT", "path": "src/com/palmergames/bukkit/towny/object/Town.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToxNjoyOVrOFhg53Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToxNjoyOVrOFhg53Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY4NjQyOQ==", "bodyText": "Same as nation, these should probably be left in, maybe deprecated.", "url": "https://github.com/TownyAdvanced/Towny/pull/3663#discussion_r370686429", "createdAt": "2020-01-24T15:16:29Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/object/Town.java", "diffHunk": "@@ -1051,21 +1079,7 @@ public boolean isPublic() {\n \n \t\treturn isPublic;\n \t}\n-\n-    @Override\n-    protected World getBukkitWorld() {\n-        if (hasWorld()) {\n-            return BukkitTools.getWorld(getWorld().getName());\n-        } else {\n-            return super.getBukkitWorld();\n-        }\n-    }\n-\n-\t@Override\n-\tpublic String getEconomyName() {\n-\t\treturn StringMgmt.trimMaxLength(Town.ECONOMY_ACCOUNT_PREFIX + getName(), 32);\n-\t}\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b184cb1bdda51854ddc0b6798374bc283ffd2930"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1290, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}