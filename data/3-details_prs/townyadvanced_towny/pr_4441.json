{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMDM1NjA2", "number": 4441, "title": "Claiming & AreaSelectionUtil Fix Up.", "bodyText": "Description:\n\n\nArea selection util was also determining if something could be claimed, while it should have only been getting a shape of WorldCoords.\nRemove a pile of redundant stuff in the claiming code.\nActually filter radius claims going too close to homeblocks.\nMake /plot nfs not work on PlotGroups and make use of unused language string.\n\nArea selection changes:\n\nThe /t claim rect|circle # commands both make perfect rings, with no half-made rings of claims. (Either a perfect square or circle.)\n\nThey will auto-lower the desired radius to accomplish this.\nResults in a centered rectangle instead of claims being made primarily in the upper left corner.\nCloses #4395.\n\n\nClaiming is now done using a spiral outwards from the stood-in plot.\n\nMakes for perfect-looking claims when /t claim {auto|circle auto|rect auto}  is used.\n\n\nThey will actually go to the last townblock available now.\nRemoves the unneeded /t unclaim outpost from the AreaSelectionUtil.\n\n\nNew Nodes/Commands/ConfigOptions:\n\n\nRelevant Towny Issue ticket:\n\nCloses #4427\nCloses #4395\n\n\n I have tested this pull request for defects on a server.\n\n\nBy making this pull request, I represent that I have the right to waive copyright and related rights to my contribution, and agree that all copyright and related rights in my contributions are waived, and I acknowledge that the TownyAdvanced organization has the copyright to use and modify my contribution under the Towny License for perpetuity.", "createdAt": "2020-11-14T17:27:17Z", "url": "https://github.com/TownyAdvanced/Towny/pull/4441", "merged": true, "mergeCommit": {"oid": "ac84eca8af5f3adc390e18dabb6aace2b9d2a833"}, "closed": true, "closedAt": "2020-11-17T22:24:43Z", "author": {"login": "LlmDl"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcfKDQgH2gAyNTIxMDM1NjA2OjdmOGFlZjJkNzhiN2YxZjRlOGIzOTI2MWI0M2I3N2Y1MDUwMDBjMGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddONyPAH2gAyNTIxMDM1NjA2OjNmOTkyZTFmMjkyNmMwNmQwMDliYWUyOWFlOGJhZjJkYzVhN2M1ZjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7f8aef2d78b7f1f4e8b39261b43b77f505000c0e", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/7f8aef2d78b7f1f4e8b39261b43b77f505000c0e", "committedDate": "2020-11-14T17:25:09Z", "message": "Claiming & AreaSelectionUtil Fix Up.\n\n- Area selection util was also determining if something could be\nclaimed, while it should have only been getting a shape of WorldCoords.\n- Remove a pile of redundant stuff in the claiming code.\n- Actually filter radius claims going too close to homeblocks.\n\nTODO: final testing."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNTkyNDQx", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-530592441", "createdAt": "2020-11-14T17:30:58Z", "commit": {"oid": "7f8aef2d78b7f1f4e8b39261b43b77f505000c0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxNzozMDo1OFrOHzMbOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxNzozMDo1OFrOHzMbOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ0MzAwMw==", "bodyText": "Requires testing.", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r523443003", "createdAt": "2020-11-14T17:30:58Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/command/PlotCommand.java", "diffHunk": "@@ -445,18 +446,13 @@ public boolean parsePlotCommand(Player player, String[] split) throws TownyExcep\n \t\t\t\t\t\treturn true;\r\n \t\t\t\t\t}\r\n \t\t\t\t\t\r\n-\t\t\t\t\tif (!townBlock.getType().equals(TownBlockType.EMBASSY)) \r\n-\t\t\t\t\t\tselection = AreaSelectionUtil.filterOwnedBlocks(resident.getTown(), selection);\r\n-\t\t\t\t\telse\r\n-\t\t\t\t\t\tselection = AreaSelectionUtil.filterOwnedBlocks(resident, selection);\r\n+\t\t\t\t\tselection = AreaSelectionUtil.filterOwnedBlocks(resident, selection);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f8aef2d78b7f1f4e8b39261b43b77f505000c0e"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2a7e722e9cbfbe2090e2059992db581639084ab", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/b2a7e722e9cbfbe2090e2059992db581639084ab", "committedDate": "2020-11-14T17:36:22Z", "message": "Claiming & AreaSelectionUtil Fix Up.\n\n- Fix blockCost.\n- Remove unused method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98940bdf79d328cae93115c2a632d54a51d0da69", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/98940bdf79d328cae93115c2a632d54a51d0da69", "committedDate": "2020-11-14T19:04:55Z", "message": "Claiming & AreaSelectionUtil Fix Up.\n\n- Fix up plot fs and nfs area selections."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "056542b36b1c2fff11af08c97c26802ccc5daac8", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/056542b36b1c2fff11af08c97c26802ccc5daac8", "committedDate": "2020-11-14T19:21:45Z", "message": "Claiming & AreaSelectionUtil Fix Up.\n\n- Add and fix comments.\n- Make /plot nfs not work on PlotGroups and make use of unused language\nstring."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cadb27a167e715b78a0c65542fca6db96c29f043", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/cadb27a167e715b78a0c65542fca6db96c29f043", "committedDate": "2020-11-14T21:29:44Z", "message": "Claiming & AreaSelectionUtil Fix Up.\n\n- Make /t claim rect # adjust to a lower radius when there's not enough\ntownblocks available.\n- Results in a centered rectangle instead of claims being made primarily\nin the upper left corner.\n- Closes #4395."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd51a0b7871f5b1a6a1cc72f700d327a0bbeb486", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/cd51a0b7871f5b1a6a1cc72f700d327a0bbeb486", "committedDate": "2020-11-14T23:38:47Z", "message": "Claiming & AreaSelectionUtil Fix Up.\n\n- More comments, more tweaking to area claiming selection process.\n  - The /t claim rect|circle # commands should both make perfect rings,\nwith no half-made rings of claims. (Either a perfect square or circle.)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNjgwMDY3", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-530680067", "createdAt": "2020-11-14T23:42:11Z", "commit": {"oid": "cd51a0b7871f5b1a6a1cc72f700d327a0bbeb486"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMzo0MjoxMVrOHzOf-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMzo0MjoxMVrOHzOf-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ3Njk4Ng==", "bodyText": "This is the actual code that caused the issue with #4427, this selection tool is always assuming that you're going to be claiming land. Also below in the circle-shape selector.", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r523476986", "createdAt": "2020-11-14T23:42:11Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/utils/AreaSelectionUtil.java", "diffHunk": "@@ -85,34 +83,53 @@\n \t\t\t\t} else if (owner instanceof Resident) {\n \t\t\t\t\tavailable = TownySettings.getMaxResidentPlots((Resident) owner);\n \t\t\t\t}\n-\t\t\t\t\n-\t\t\t\t\n \n \t\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n-\t\t\t\t\t// Attempt to select outwards until no town blocks remain\n-\n-\t\t\t\t\twhile (available - Math.pow((r + 1) * 2 - 1, 2) >= 0)\n-\t\t\t\t\t\tr += 1;\n+\t\t\t\t\t// Attempt to select outwards until no town blocks remain. \n+\t\t\t\t\t// This will make a less perfect claim than /t claim rect # or /t claim circle auto.\n+\t\t\t\t\tr = 1;\n+\t\t\t\t\tint total = 0;\n+\t\t\t\t\twhile (available - ((r * 8) + total) >= 0) { // Radius 1 grabs 8 blocks, 2 grabs 16 more requiring 24, 3 grabs 24 more requiring 48, etc...\n+\t\t\t\t\t\ttotal += r * 8;\n+\t\t\t\t\t\tr++;\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0) \n+\t\t\t\t\t\tr = Math.min(r, TownySettings.getMaxClaimRadiusValue());\n \n \t\t\t\t} else {\n \t\t\t\t\ttry {\n \t\t\t\t\t\tr = Integer.parseInt(args[0]);\n \t\t\t\t\t} catch (NumberFormatException e) {\n \t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n \t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\tif (r > TownySettings.getMaxClaimRadiusValue() && TownySettings.getMaxClaimRadiusValue() > 0) {\n-\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\t\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0 && r > TownySettings.getMaxClaimRadiusValue())\n+\t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\n+\t\t\t\t\t// Calculate how many TownBlocks are needed to claim the radius. \n+\t\t\t\t\t// Start blocks at 0 if the plot is unclaimed.\n+\t\t\t\t\tint neededBlocks = pos.getTownBlock().hasTown() ? 0 : 1;\n+\t\t\t\t\tfor (int i = 1; i <= r; i++)\n+\t\t\t\t\t\tneededBlocks += i * 8;\n+\t\t\t\t\t\n+\t\t\t\t\t// Rethink how much of a radius will be used, as there's not enough available TownBlocks.\n+\t\t\t\t\tif (neededBlocks > available) {\n+\t\t\t\t\t\tr = 1; \n+\t\t\t\t\t\tint total = 0;\n+\t\t\t\t\t\twhile (available - ((r * 8) + total) >= 0) { // Radius 1 grabs 8 blocks, 2 grabs 16 more requiring 24, 3 grabs 24 more requiring 48, etc...\n+\t\t\t\t\t\t\ttotal += r * 8;\n+\t\t\t\t\t\t\tr++;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tr--; // Finally reduce the radius by 1 (so that we have a perfect ring of claims,) and replace the original r.\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t\t\n \t\t\t\tif (r > 1000)\n \t\t\t\t\tr = 1000;\n \t\t\t\tfor (int z = -r; z <= r; z++)\n \t\t\t\t\tfor (int x = -r; x <= r; x++)\n-\t\t\t\t\t\tif (out.size() < available) {\n-\t\t\t\t\t\t\tWorldCoord wc = new WorldCoord(pos.getWorldName(), pos.getX() + x, pos.getZ() + z);\n-\t\t\t\t\t\t\tif (!wc.hasTownBlock())\n-\t\t\t\t\t\t\t\tout.add(wc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd51a0b7871f5b1a6a1cc72f700d327a0bbeb486"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNzYwODM0", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-530760834", "createdAt": "2020-11-15T02:03:26Z", "commit": {"oid": "cd51a0b7871f5b1a6a1cc72f700d327a0bbeb486"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwMjowMzoyNlrOHzXCrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwMjowMzoyNlrOHzXCrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzYxNjk0MQ==", "bodyText": "Can use pos.add(x, z) instead.", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r523616941", "createdAt": "2020-11-15T02:03:26Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/AreaSelectionUtil.java", "diffHunk": "@@ -85,34 +83,53 @@\n \t\t\t\t} else if (owner instanceof Resident) {\n \t\t\t\t\tavailable = TownySettings.getMaxResidentPlots((Resident) owner);\n \t\t\t\t}\n-\t\t\t\t\n-\t\t\t\t\n \n \t\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n-\t\t\t\t\t// Attempt to select outwards until no town blocks remain\n-\n-\t\t\t\t\twhile (available - Math.pow((r + 1) * 2 - 1, 2) >= 0)\n-\t\t\t\t\t\tr += 1;\n+\t\t\t\t\t// Attempt to select outwards until no town blocks remain. \n+\t\t\t\t\t// This will make a less perfect claim than /t claim rect # or /t claim circle auto.\n+\t\t\t\t\tr = 1;\n+\t\t\t\t\tint total = 0;\n+\t\t\t\t\twhile (available - ((r * 8) + total) >= 0) { // Radius 1 grabs 8 blocks, 2 grabs 16 more requiring 24, 3 grabs 24 more requiring 48, etc...\n+\t\t\t\t\t\ttotal += r * 8;\n+\t\t\t\t\t\tr++;\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0) \n+\t\t\t\t\t\tr = Math.min(r, TownySettings.getMaxClaimRadiusValue());\n \n \t\t\t\t} else {\n \t\t\t\t\ttry {\n \t\t\t\t\t\tr = Integer.parseInt(args[0]);\n \t\t\t\t\t} catch (NumberFormatException e) {\n \t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n \t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\tif (r > TownySettings.getMaxClaimRadiusValue() && TownySettings.getMaxClaimRadiusValue() > 0) {\n-\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\t\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0 && r > TownySettings.getMaxClaimRadiusValue())\n+\t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\n+\t\t\t\t\t// Calculate how many TownBlocks are needed to claim the radius. \n+\t\t\t\t\t// Start blocks at 0 if the plot is unclaimed.\n+\t\t\t\t\tint neededBlocks = pos.getTownBlock().hasTown() ? 0 : 1;\n+\t\t\t\t\tfor (int i = 1; i <= r; i++)\n+\t\t\t\t\t\tneededBlocks += i * 8;\n+\t\t\t\t\t\n+\t\t\t\t\t// Rethink how much of a radius will be used, as there's not enough available TownBlocks.\n+\t\t\t\t\tif (neededBlocks > available) {\n+\t\t\t\t\t\tr = 1; \n+\t\t\t\t\t\tint total = 0;\n+\t\t\t\t\t\twhile (available - ((r * 8) + total) >= 0) { // Radius 1 grabs 8 blocks, 2 grabs 16 more requiring 24, 3 grabs 24 more requiring 48, etc...\n+\t\t\t\t\t\t\ttotal += r * 8;\n+\t\t\t\t\t\t\tr++;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tr--; // Finally reduce the radius by 1 (so that we have a perfect ring of claims,) and replace the original r.\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t\t\n \t\t\t\tif (r > 1000)\n \t\t\t\t\tr = 1000;\n \t\t\t\tfor (int z = -r; z <= r; z++)\n \t\t\t\t\tfor (int x = -r; x <= r; x++)\n-\t\t\t\t\t\tif (out.size() < available) {\n-\t\t\t\t\t\t\tWorldCoord wc = new WorldCoord(pos.getWorldName(), pos.getX() + x, pos.getZ() + z);\n-\t\t\t\t\t\t\tif (!wc.hasTownBlock())\n-\t\t\t\t\t\t\t\tout.add(wc);\n+\t\t\t\t\t\tif (out.size() <= available) {\n+\t\t\t\t\t\t\tout.add(new WorldCoord(pos.getWorldName(), pos.getX() + x, pos.getZ() + z));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd51a0b7871f5b1a6a1cc72f700d327a0bbeb486"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNzYxMTE2", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-530761116", "createdAt": "2020-11-15T02:11:51Z", "commit": {"oid": "cd51a0b7871f5b1a6a1cc72f700d327a0bbeb486"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwMjoxMTo1MVrOHzXr2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwMjoxMTo1MVrOHzXr2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzYyNzQ4Mg==", "bodyText": "Could use MathUtil.distanceSquared(x, z) <= MathUtil.sqr(r) as an alternative.", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r523627482", "createdAt": "2020-11-15T02:11:51Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/AreaSelectionUtil.java", "diffHunk": "@@ -141,27 +158,38 @@\n \t\t\t\t\tif (available > 0) // Since: 0 - ceil(Pi * 0^2) >= 0 is a true statement.\n \t\t\t\t\t\twhile (available - Math.ceil(Math.PI * r * r) >= 0)\n \t\t\t\t\t\t\tr += 1;\n+\t\t\t\t\t\n+\t\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0) \n+\t\t\t\t\t\tr = Math.min(r, TownySettings.getMaxClaimRadiusValue());\n \n \t\t\t\t} else {\n \t\t\t\t\ttry {\n \t\t\t\t\t\tr = Integer.parseInt(args[0]);\n \t\t\t\t\t} catch (NumberFormatException e) {\n \t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n \t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tif (r > TownySettings.getMaxClaimRadiusValue() && TownySettings.getMaxClaimRadiusValue() > 0) {\n-\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\t\t\t\t\t\n+\t\t\t\t\tif (r > TownySettings.getMaxClaimRadiusValue() && TownySettings.getMaxClaimRadiusValue() > 0) {\n+\t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\tint radius = 0;\n+\t\t\t\t\tif (available > 0) // Since: 0 - ceil(Pi * 0^2) >= 0 is a true statement.\n+\t\t\t\t\t\twhile (available - Math.ceil(Math.PI * radius * radius) >= 0)\n+\t\t\t\t\t\t\tradius += 1;\n+\t\t\t\t\t\n+\t\t\t\t\tradius--;// We lower the radius by one so that we get only perfect circle claims.\n+\t\t\t\t\t\n+\t\t\t\t\tr = Math.min(r, radius); // This will ensure that if they've give too high of a radius we lower it to what they are able to actually claim.\n+\t\t\t\t\t\n \t\t\t\t}\n \t\t\t\t\n \t\t\t\tif (r > 1000)\n \t\t\t\t\tr = 1000;\n \t\t\t\tfor (int z = -r; z <= r; z++)\n \t\t\t\t\tfor (int x = -r; x <= r; x++)\n-\t\t\t\t\t\tif ((x * x + z * z <= r * r) && (out.size() < available)) {\n-\t\t\t\t\t\t\tWorldCoord wc = new WorldCoord(pos.getWorldName(), pos.getX() + x, pos.getZ() + z);\n-\t\t\t\t\t\t\tif (!wc.hasTownBlock())\n-\t\t\t\t\t\t\t\tout.add(wc);\n+\t\t\t\t\t\tif ((x * x + z * z <= r * r) && (out.size() <= available)) {\n+\t\t\t\t\t\t\tout.add(new WorldCoord(pos.getWorldName(), pos.getX() + x, pos.getZ() + z));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd51a0b7871f5b1a6a1cc72f700d327a0bbeb486"}, "originalPosition": 141}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNzYxMjQ4", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-530761248", "createdAt": "2020-11-15T02:15:42Z", "commit": {"oid": "cd51a0b7871f5b1a6a1cc72f700d327a0bbeb486"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwMjoxNTo0MlrOHzX9QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwMjoxNTo0MlrOHzX9QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzYzMTkzNw==", "bodyText": "Can replace loop with a closed-sum formula. neededBlocks += 4 * r * (r + 1)", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r523631937", "createdAt": "2020-11-15T02:15:42Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/AreaSelectionUtil.java", "diffHunk": "@@ -85,34 +83,53 @@\n \t\t\t\t} else if (owner instanceof Resident) {\n \t\t\t\t\tavailable = TownySettings.getMaxResidentPlots((Resident) owner);\n \t\t\t\t}\n-\t\t\t\t\n-\t\t\t\t\n \n \t\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n-\t\t\t\t\t// Attempt to select outwards until no town blocks remain\n-\n-\t\t\t\t\twhile (available - Math.pow((r + 1) * 2 - 1, 2) >= 0)\n-\t\t\t\t\t\tr += 1;\n+\t\t\t\t\t// Attempt to select outwards until no town blocks remain. \n+\t\t\t\t\t// This will make a less perfect claim than /t claim rect # or /t claim circle auto.\n+\t\t\t\t\tr = 1;\n+\t\t\t\t\tint total = 0;\n+\t\t\t\t\twhile (available - ((r * 8) + total) >= 0) { // Radius 1 grabs 8 blocks, 2 grabs 16 more requiring 24, 3 grabs 24 more requiring 48, etc...\n+\t\t\t\t\t\ttotal += r * 8;\n+\t\t\t\t\t\tr++;\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0) \n+\t\t\t\t\t\tr = Math.min(r, TownySettings.getMaxClaimRadiusValue());\n \n \t\t\t\t} else {\n \t\t\t\t\ttry {\n \t\t\t\t\t\tr = Integer.parseInt(args[0]);\n \t\t\t\t\t} catch (NumberFormatException e) {\n \t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n \t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\tif (r > TownySettings.getMaxClaimRadiusValue() && TownySettings.getMaxClaimRadiusValue() > 0) {\n-\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\t\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0 && r > TownySettings.getMaxClaimRadiusValue())\n+\t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\n+\t\t\t\t\t// Calculate how many TownBlocks are needed to claim the radius. \n+\t\t\t\t\t// Start blocks at 0 if the plot is unclaimed.\n+\t\t\t\t\tint neededBlocks = pos.getTownBlock().hasTown() ? 0 : 1;\n+\t\t\t\t\tfor (int i = 1; i <= r; i++)\n+\t\t\t\t\t\tneededBlocks += i * 8;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd51a0b7871f5b1a6a1cc72f700d327a0bbeb486"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8de5b48ffbfcc2bd73638c40603eb703546e6377", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/8de5b48ffbfcc2bd73638c40603eb703546e6377", "committedDate": "2020-11-16T01:02:23Z", "message": "Claiming & AreaSelectionUtil Fix Up.\n\n- Made requested changes.\n- Altered WorldCoord adding to operate on an outwards spiral pattern.\n  - Make the auto claim features look much better."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44397924839f330189b7bf2d2401b9f198529482", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/44397924839f330189b7bf2d2401b9f198529482", "committedDate": "2020-11-16T03:27:37Z", "message": "Claiming & AreaSelectionUtil Fix Up.\n\n- Commenting and simplifying spiral claiming."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/e830c7f939617d6e83a2d3b0b905a5a6af338e10", "committedDate": "2020-11-16T13:16:20Z", "message": "Claiming & AreaSelectionUtil Fix Up.\n\n- More comments.\n- Remove /t unclaim outpost handling from the AreaSelectionUtil.\n  - It wasn't doing anything that Towny wasn't already doing when we\nunclaim."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMzQ5ODY4", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-531349868", "createdAt": "2020-11-16T14:06:35Z", "commit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNDowNjozNVrOH0ANOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNDowNjozNVrOH0ANOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5MTM4Nw==", "bodyText": "Removed because we're doing the same thing anyways when someone does /t unclaim", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r524291387", "createdAt": "2020-11-16T14:06:35Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/utils/AreaSelectionUtil.java", "diffHunk": "@@ -21,48 +22,61 @@\n import org.bukkit.Location;\n \n public class AreaSelectionUtil {\n+\t\n+\tprivate final static int MAX_RECT_RADIUS = 15; // A maximum radius of 15 will garner 961 townblocks. Capped to prevent servers from dying.\n+\tprivate final static int MAX_CIRC_RADIUS = 18; // A maximum radius of 18 will garner 1009 townblocks. Capped to prevent servers from dying.\n \n+\t/**\n+\t * Method to select a List&lt;WorldCoord&gt; of coordinates. \n+\t * Area claims can be either circular or rectangular.\n+\t * \n+\t * @param owner - {@link com.palmergames.bukkit.towny.object.TownBlockOwner} making the selection. \n+\t * @param pos - WorldCoord where the selection is being made from.\n+\t * @param args - Subcommands like rect, circle, auto or #.\n+\t * @return List&lt;WorldCoord&gt; of {@link com.palmergames.bukkit.towny.object.WorldCoord}.\n+\t * @throws TownyException - Thrown when invalid subcommands are given.\n+\t */\n \tpublic static List<WorldCoord> selectWorldCoordArea(TownBlockOwner owner, WorldCoord pos, String[] args) throws TownyException {\n \n \t\tList<WorldCoord> out = new ArrayList<>();\n \n \t\tif (args.length == 0) {\n-\t\t\t// claim with no sub command entered so attempt selection of one plot\n-\t\t\tif (pos.getTownyWorld().isClaimable())\n-\t\t\t\tout.add(pos);\n-\t\t\telse\n-\t\t\t\tthrow new TownyException(Translation.of(\"msg_not_claimable\"));\n+\t\t\t/*\n+\t\t\t * Either /{command} {claim|unclaim} or /town claim {outpost}\n+\t\t\t */\n+\t\t\tout.add(pos);\n+\n \t\t} else {\n-\t\t\tif (args.length > 1) {\n+\t\t\t\n+\t\t\t/*\n+\t\t\t * First, determine what is available to be claimed.\n+\t\t\t */\n+\t\t\tint available = 0;\n+\t\t\tif (owner instanceof Town) {\n+\t\t\t\tTown town = (Town) owner;\n+\t\t\t\tavailable = TownySettings.getMaxTownBlocks(town) - town.getTownBlocks().size();\n+\t\t\t} else if (owner instanceof Resident) {\n+\t\t\t\tavailable = TownySettings.getMaxResidentPlots((Resident) owner);\n+\t\t\t}\n+\t\t\t\n+\t\t\t/*\n+\t\t\t * Second, handle different subcommands for /{command} {claim|unclaim} {rect|circle|auto|#} {#}\n+\t\t\t */\n+\t\t\tif (args.length > 1) { // Has to be /{command} {claim|unclaim} {rect|circle} {auto|#}\n \t\t\t\tif (args[0].equalsIgnoreCase(\"rect\")) {\n-\t\t\t\t\tout = selectWorldCoordAreaRect(owner, pos, StringMgmt.remFirstArg(args));\n+\t\t\t\t\tout = selectWorldCoordAreaRect(available, pos, StringMgmt.remFirstArg(args));\n \t\t\t\t} else if (args[0].equalsIgnoreCase(\"circle\")) {\n-\t\t\t\t\tout = selectWorldCoordAreaCircle(owner, pos, StringMgmt.remFirstArg(args));\n+\t\t\t\t\tout = selectWorldCoordAreaCircle(available, pos, StringMgmt.remFirstArg(args));\n \t\t\t\t} else {\n \t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_property\", StringMgmt.join(args, \" \")));\n \t\t\t\t}\n-\t\t\t} else if (args[0].equalsIgnoreCase(\"auto\")) {\n-\t\t\t\tout = selectWorldCoordAreaRect(owner, pos, args);\n-\t\t\t} else if (args[0].equalsIgnoreCase(\"outpost\")) {\n-\t\t\t\tTownBlock tb = pos.getTownBlock();\n-\t\t\t\tif (!tb.isOutpost() && tb.hasTown()) { // isOutpost(), only for mysql however, if we include this we can skip the outposts on flatfile so less laggy!\n-\t\t\t\t\tTown town = tb.getTown();\n-\t\t\t\t\tif (isTownBlockLocContainedInTownOutposts(town.getAllOutpostSpawns(), tb)) {\n-\t\t\t\t\t\ttb.setOutpost(true);\n-\t\t\t\t\t\tout.add(pos);\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_unclaim_not_outpost\"));\n-\t\t\t\t\t\t// Lang String required.\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\tif (tb.isOutpost()) { // flatfile skipper\n-\t\t\t\t\tout.add(pos);\n-\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNzkxNDk0", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-531791494", "createdAt": "2020-11-16T21:24:37Z", "commit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyNDozN1rOH0TDMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyNDozN1rOH0TDMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwMDExNQ==", "bodyText": "Looking at it again, all of this can be probably be done in one go.\nint needed = pos.getTownBlock().hasTown() ? 0 : 1;\nint claimRadius = 1;\nwhile (claimRadius <= r && needed < available) {\n    needed += (claimRadius * 8)\n    claimRadius++;\n}\n// Claim Radius will always overshoot by 1\nr = claimRadius - 1;", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r524600115", "createdAt": "2020-11-16T21:24:37Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/AreaSelectionUtil.java", "diffHunk": "@@ -72,101 +86,178 @@\n \t\treturn out;\n \t}\n \n-\tpublic static List<WorldCoord> selectWorldCoordAreaRect(TownBlockOwner owner, WorldCoord pos, String[] args) throws TownyException {\n+\t/**\n+\t * Selects a square shaped area of WorldCoords. Works in a spiral out fashion.\n+\t * \n+\t * @param available - How many TownBlocks the TownBlockOwner has available to claim.\n+\t * @param pos - WorldCoord where the selection is centered at.\n+\t * @param args - subcommand arguments like auto or a number.\n+\t * @return List&lt;WorldCoord&gt; of {@link com.palmergames.bukkit.towny.object.WorldCoord}.\n+\t * @throws TownyException - Thrown when invalid radii are given.\n+\t */\n+\tprivate static List<WorldCoord> selectWorldCoordAreaRect(int available, WorldCoord pos, String[] args) throws TownyException {\n \n \t\tList<WorldCoord> out = new ArrayList<>();\n-\t\tif (pos.getTownyWorld().isClaimable()) {\n-\t\t\tif (args.length > 0) {\n-\t\t\t\tint r = 0, available = 1000;\n-\n-\t\t\t\tif (owner instanceof Town) {\n-\t\t\t\t\tTown town = (Town) owner;\n-\t\t\t\t\tavailable = TownySettings.getMaxTownBlocks(town) - town.getTownBlocks().size();\n-\t\t\t\t} else if (owner instanceof Resident) {\n-\t\t\t\t\tavailable = TownySettings.getMaxResidentPlots((Resident) owner);\n-\t\t\t\t}\n-\t\t\t\t\n+\t\tif (args.length > 0) {\n+\t\t\tint r = MAX_RECT_RADIUS;  // The radius of the claim.\n+\n+\t\t\t/*\n+\t\t\t *  Area selections are capped at a 15 radius which should be a 31x31 (or a square with a side of 496 blocks in length.)  \n+\t\t\t *  Players need a permission node to use area claims and the max radius usable defaults to 4 (set in the config.)\n+\t\t\t */\n+\n+\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n \t\t\t\t\n+\t\t\t\t/*\n+\t\t\t\t * Select everything possible in a rectangle shape.\n+\t\t\t\t */\n \n-\t\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n-\t\t\t\t\t// Attempt to select outwards until no town blocks remain\n+\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0) \n+\t\t\t\t\tr = Math.min(r, TownySettings.getMaxClaimRadiusValue());\n \n-\t\t\t\t\twhile (available - Math.pow((r + 1) * 2 - 1, 2) >= 0)\n-\t\t\t\t\t\tr += 1;\n+\t\t\t} else {\n+\t\t\t\n+\t\t\t\t/*\n+\t\t\t\t * Select an area that will claim a perfect square shape, using a given radius\n+\t\t\t\t * or the reduced radius that will give a perfect square.\n+\t\t\t\t */\n+\t\t\t\t\n+\t\t\t\ttry {\n+\t\t\t\t\tr = Integer.parseInt(args[0]);\n+\t\t\t\t} catch (NumberFormatException e) {\n+\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\t\t\t\t}\n+\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0 && r > TownySettings.getMaxClaimRadiusValue())\n+\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n \n-\t\t\t\t} else {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tr = Integer.parseInt(args[0]);\n-\t\t\t\t\t} catch (NumberFormatException e) {\n-\t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\t\t\t\t// Calculate how many TownBlocks are needed to claim the radius. \n+\t\t\t\t// Start blocks at 0 if the plot is unclaimed.\n+\t\t\t\tint neededBlocks = pos.getTownBlock().hasTown() ? 0 : 1;\n+\t\t\t\tneededBlocks += 4 * r * (r + 1);\n+\t\t\t\t\n+\t\t\t\t// Rethink how much of a radius will be used, as there's not enough available TownBlocks.\n+\t\t\t\tif (neededBlocks > available) {\n+\t\t\t\t\tr = 1; \n+\t\t\t\t\tint total = 0;\n+\t\t\t\t\twhile (available - ((r * 8) + total) >= 0) { // Radius 1 grabs 8 blocks, 2 grabs 16 more requiring 24, 3 grabs 24 more requiring 48, etc...\n+\t\t\t\t\t\ttotal += r * 8;\n+\t\t\t\t\t\tr++;\n \t\t\t\t\t}\n+\t\t\t\t\tr--; // Finally reduce the radius by 1 (so that we have a perfect ring of claims,) and replace the original r.\n \t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "originalPosition": 180}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNzkyMjkz", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-531792293", "createdAt": "2020-11-16T21:25:48Z", "commit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyNTo0OFrOH0TImA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyNTo0OFrOH0TImA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwMTQ5Ng==", "bodyText": "pos.add() returns a new worldcoord, so this entire line can be replaced with out.add(pos.add(x,z));", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r524601496", "createdAt": "2020-11-16T21:25:48Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/AreaSelectionUtil.java", "diffHunk": "@@ -72,101 +86,178 @@\n \t\treturn out;\n \t}\n \n-\tpublic static List<WorldCoord> selectWorldCoordAreaRect(TownBlockOwner owner, WorldCoord pos, String[] args) throws TownyException {\n+\t/**\n+\t * Selects a square shaped area of WorldCoords. Works in a spiral out fashion.\n+\t * \n+\t * @param available - How many TownBlocks the TownBlockOwner has available to claim.\n+\t * @param pos - WorldCoord where the selection is centered at.\n+\t * @param args - subcommand arguments like auto or a number.\n+\t * @return List&lt;WorldCoord&gt; of {@link com.palmergames.bukkit.towny.object.WorldCoord}.\n+\t * @throws TownyException - Thrown when invalid radii are given.\n+\t */\n+\tprivate static List<WorldCoord> selectWorldCoordAreaRect(int available, WorldCoord pos, String[] args) throws TownyException {\n \n \t\tList<WorldCoord> out = new ArrayList<>();\n-\t\tif (pos.getTownyWorld().isClaimable()) {\n-\t\t\tif (args.length > 0) {\n-\t\t\t\tint r = 0, available = 1000;\n-\n-\t\t\t\tif (owner instanceof Town) {\n-\t\t\t\t\tTown town = (Town) owner;\n-\t\t\t\t\tavailable = TownySettings.getMaxTownBlocks(town) - town.getTownBlocks().size();\n-\t\t\t\t} else if (owner instanceof Resident) {\n-\t\t\t\t\tavailable = TownySettings.getMaxResidentPlots((Resident) owner);\n-\t\t\t\t}\n-\t\t\t\t\n+\t\tif (args.length > 0) {\n+\t\t\tint r = MAX_RECT_RADIUS;  // The radius of the claim.\n+\n+\t\t\t/*\n+\t\t\t *  Area selections are capped at a 15 radius which should be a 31x31 (or a square with a side of 496 blocks in length.)  \n+\t\t\t *  Players need a permission node to use area claims and the max radius usable defaults to 4 (set in the config.)\n+\t\t\t */\n+\n+\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n \t\t\t\t\n+\t\t\t\t/*\n+\t\t\t\t * Select everything possible in a rectangle shape.\n+\t\t\t\t */\n \n-\t\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n-\t\t\t\t\t// Attempt to select outwards until no town blocks remain\n+\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0) \n+\t\t\t\t\tr = Math.min(r, TownySettings.getMaxClaimRadiusValue());\n \n-\t\t\t\t\twhile (available - Math.pow((r + 1) * 2 - 1, 2) >= 0)\n-\t\t\t\t\t\tr += 1;\n+\t\t\t} else {\n+\t\t\t\n+\t\t\t\t/*\n+\t\t\t\t * Select an area that will claim a perfect square shape, using a given radius\n+\t\t\t\t * or the reduced radius that will give a perfect square.\n+\t\t\t\t */\n+\t\t\t\t\n+\t\t\t\ttry {\n+\t\t\t\t\tr = Integer.parseInt(args[0]);\n+\t\t\t\t} catch (NumberFormatException e) {\n+\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\t\t\t\t}\n+\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0 && r > TownySettings.getMaxClaimRadiusValue())\n+\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n \n-\t\t\t\t} else {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tr = Integer.parseInt(args[0]);\n-\t\t\t\t\t} catch (NumberFormatException e) {\n-\t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\t\t\t\t// Calculate how many TownBlocks are needed to claim the radius. \n+\t\t\t\t// Start blocks at 0 if the plot is unclaimed.\n+\t\t\t\tint neededBlocks = pos.getTownBlock().hasTown() ? 0 : 1;\n+\t\t\t\tneededBlocks += 4 * r * (r + 1);\n+\t\t\t\t\n+\t\t\t\t// Rethink how much of a radius will be used, as there's not enough available TownBlocks.\n+\t\t\t\tif (neededBlocks > available) {\n+\t\t\t\t\tr = 1; \n+\t\t\t\t\tint total = 0;\n+\t\t\t\t\twhile (available - ((r * 8) + total) >= 0) { // Radius 1 grabs 8 blocks, 2 grabs 16 more requiring 24, 3 grabs 24 more requiring 48, etc...\n+\t\t\t\t\t\ttotal += r * 8;\n+\t\t\t\t\t\tr++;\n \t\t\t\t\t}\n+\t\t\t\t\tr--; // Finally reduce the radius by 1 (so that we have a perfect ring of claims,) and replace the original r.\n \t\t\t\t}\n-\t\t\t\tif (r > TownySettings.getMaxClaimRadiusValue() && TownySettings.getMaxClaimRadiusValue() > 0) {\n-\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\t\t\t}\n+\n+\t\t\t/*\n+\t\t\t * Adds WorldCoords in a spiral-out pattern.\n+\t\t\t */\n+\t\t\tint sideLength = (r * 2) + 1;\n+\t\t\tint x = 0, z = 0, dx = 0, dz = -1;\n+\t\t\tint t = r;\n+\t\t\tfor (int i = 0; i <= available; i++) {\n+\t\t\t\tif ((-sideLength / 2 <= x) && (x <= sideLength / 2) && (-sideLength / 2 <= z) && (z <= sideLength / 2)) {\n+\t\t\t\t\tout.add(new WorldCoord(pos.getWorldName(), pos.add(x, z)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "originalPosition": 193}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNzkzMDQ3", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-531793047", "createdAt": "2020-11-16T21:26:57Z", "commit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyNjo1N1rOH0TNQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyNjo1N1rOH0TNQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwMjY4OQ==", "bodyText": "t seems to be used purely to swap variables, so it should only be in that scope.", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r524602689", "createdAt": "2020-11-16T21:26:57Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/AreaSelectionUtil.java", "diffHunk": "@@ -72,101 +86,178 @@\n \t\treturn out;\n \t}\n \n-\tpublic static List<WorldCoord> selectWorldCoordAreaRect(TownBlockOwner owner, WorldCoord pos, String[] args) throws TownyException {\n+\t/**\n+\t * Selects a square shaped area of WorldCoords. Works in a spiral out fashion.\n+\t * \n+\t * @param available - How many TownBlocks the TownBlockOwner has available to claim.\n+\t * @param pos - WorldCoord where the selection is centered at.\n+\t * @param args - subcommand arguments like auto or a number.\n+\t * @return List&lt;WorldCoord&gt; of {@link com.palmergames.bukkit.towny.object.WorldCoord}.\n+\t * @throws TownyException - Thrown when invalid radii are given.\n+\t */\n+\tprivate static List<WorldCoord> selectWorldCoordAreaRect(int available, WorldCoord pos, String[] args) throws TownyException {\n \n \t\tList<WorldCoord> out = new ArrayList<>();\n-\t\tif (pos.getTownyWorld().isClaimable()) {\n-\t\t\tif (args.length > 0) {\n-\t\t\t\tint r = 0, available = 1000;\n-\n-\t\t\t\tif (owner instanceof Town) {\n-\t\t\t\t\tTown town = (Town) owner;\n-\t\t\t\t\tavailable = TownySettings.getMaxTownBlocks(town) - town.getTownBlocks().size();\n-\t\t\t\t} else if (owner instanceof Resident) {\n-\t\t\t\t\tavailable = TownySettings.getMaxResidentPlots((Resident) owner);\n-\t\t\t\t}\n-\t\t\t\t\n+\t\tif (args.length > 0) {\n+\t\t\tint r = MAX_RECT_RADIUS;  // The radius of the claim.\n+\n+\t\t\t/*\n+\t\t\t *  Area selections are capped at a 15 radius which should be a 31x31 (or a square with a side of 496 blocks in length.)  \n+\t\t\t *  Players need a permission node to use area claims and the max radius usable defaults to 4 (set in the config.)\n+\t\t\t */\n+\n+\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n \t\t\t\t\n+\t\t\t\t/*\n+\t\t\t\t * Select everything possible in a rectangle shape.\n+\t\t\t\t */\n \n-\t\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n-\t\t\t\t\t// Attempt to select outwards until no town blocks remain\n+\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0) \n+\t\t\t\t\tr = Math.min(r, TownySettings.getMaxClaimRadiusValue());\n \n-\t\t\t\t\twhile (available - Math.pow((r + 1) * 2 - 1, 2) >= 0)\n-\t\t\t\t\t\tr += 1;\n+\t\t\t} else {\n+\t\t\t\n+\t\t\t\t/*\n+\t\t\t\t * Select an area that will claim a perfect square shape, using a given radius\n+\t\t\t\t * or the reduced radius that will give a perfect square.\n+\t\t\t\t */\n+\t\t\t\t\n+\t\t\t\ttry {\n+\t\t\t\t\tr = Integer.parseInt(args[0]);\n+\t\t\t\t} catch (NumberFormatException e) {\n+\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\t\t\t\t}\n+\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0 && r > TownySettings.getMaxClaimRadiusValue())\n+\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n \n-\t\t\t\t} else {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tr = Integer.parseInt(args[0]);\n-\t\t\t\t\t} catch (NumberFormatException e) {\n-\t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\t\t\t\t// Calculate how many TownBlocks are needed to claim the radius. \n+\t\t\t\t// Start blocks at 0 if the plot is unclaimed.\n+\t\t\t\tint neededBlocks = pos.getTownBlock().hasTown() ? 0 : 1;\n+\t\t\t\tneededBlocks += 4 * r * (r + 1);\n+\t\t\t\t\n+\t\t\t\t// Rethink how much of a radius will be used, as there's not enough available TownBlocks.\n+\t\t\t\tif (neededBlocks > available) {\n+\t\t\t\t\tr = 1; \n+\t\t\t\t\tint total = 0;\n+\t\t\t\t\twhile (available - ((r * 8) + total) >= 0) { // Radius 1 grabs 8 blocks, 2 grabs 16 more requiring 24, 3 grabs 24 more requiring 48, etc...\n+\t\t\t\t\t\ttotal += r * 8;\n+\t\t\t\t\t\tr++;\n \t\t\t\t\t}\n+\t\t\t\t\tr--; // Finally reduce the radius by 1 (so that we have a perfect ring of claims,) and replace the original r.\n \t\t\t\t}\n-\t\t\t\tif (r > TownySettings.getMaxClaimRadiusValue() && TownySettings.getMaxClaimRadiusValue() > 0) {\n-\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\t\t\t}\n+\n+\t\t\t/*\n+\t\t\t * Adds WorldCoords in a spiral-out pattern.\n+\t\t\t */\n+\t\t\tint sideLength = (r * 2) + 1;\n+\t\t\tint x = 0, z = 0, dx = 0, dz = -1;\n+\t\t\tint t = r;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "originalPosition": 190}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNzkzNDU0", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-531793454", "createdAt": "2020-11-16T21:27:34Z", "commit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyNzozNVrOH0TQGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyNzozNVrOH0TQGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwMzQxNg==", "bodyText": "Create a variable swap here to clarify intentions.", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r524603416", "createdAt": "2020-11-16T21:27:35Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/AreaSelectionUtil.java", "diffHunk": "@@ -72,101 +86,178 @@\n \t\treturn out;\n \t}\n \n-\tpublic static List<WorldCoord> selectWorldCoordAreaRect(TownBlockOwner owner, WorldCoord pos, String[] args) throws TownyException {\n+\t/**\n+\t * Selects a square shaped area of WorldCoords. Works in a spiral out fashion.\n+\t * \n+\t * @param available - How many TownBlocks the TownBlockOwner has available to claim.\n+\t * @param pos - WorldCoord where the selection is centered at.\n+\t * @param args - subcommand arguments like auto or a number.\n+\t * @return List&lt;WorldCoord&gt; of {@link com.palmergames.bukkit.towny.object.WorldCoord}.\n+\t * @throws TownyException - Thrown when invalid radii are given.\n+\t */\n+\tprivate static List<WorldCoord> selectWorldCoordAreaRect(int available, WorldCoord pos, String[] args) throws TownyException {\n \n \t\tList<WorldCoord> out = new ArrayList<>();\n-\t\tif (pos.getTownyWorld().isClaimable()) {\n-\t\t\tif (args.length > 0) {\n-\t\t\t\tint r = 0, available = 1000;\n-\n-\t\t\t\tif (owner instanceof Town) {\n-\t\t\t\t\tTown town = (Town) owner;\n-\t\t\t\t\tavailable = TownySettings.getMaxTownBlocks(town) - town.getTownBlocks().size();\n-\t\t\t\t} else if (owner instanceof Resident) {\n-\t\t\t\t\tavailable = TownySettings.getMaxResidentPlots((Resident) owner);\n-\t\t\t\t}\n-\t\t\t\t\n+\t\tif (args.length > 0) {\n+\t\t\tint r = MAX_RECT_RADIUS;  // The radius of the claim.\n+\n+\t\t\t/*\n+\t\t\t *  Area selections are capped at a 15 radius which should be a 31x31 (or a square with a side of 496 blocks in length.)  \n+\t\t\t *  Players need a permission node to use area claims and the max radius usable defaults to 4 (set in the config.)\n+\t\t\t */\n+\n+\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n \t\t\t\t\n+\t\t\t\t/*\n+\t\t\t\t * Select everything possible in a rectangle shape.\n+\t\t\t\t */\n \n-\t\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n-\t\t\t\t\t// Attempt to select outwards until no town blocks remain\n+\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0) \n+\t\t\t\t\tr = Math.min(r, TownySettings.getMaxClaimRadiusValue());\n \n-\t\t\t\t\twhile (available - Math.pow((r + 1) * 2 - 1, 2) >= 0)\n-\t\t\t\t\t\tr += 1;\n+\t\t\t} else {\n+\t\t\t\n+\t\t\t\t/*\n+\t\t\t\t * Select an area that will claim a perfect square shape, using a given radius\n+\t\t\t\t * or the reduced radius that will give a perfect square.\n+\t\t\t\t */\n+\t\t\t\t\n+\t\t\t\ttry {\n+\t\t\t\t\tr = Integer.parseInt(args[0]);\n+\t\t\t\t} catch (NumberFormatException e) {\n+\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\t\t\t\t}\n+\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0 && r > TownySettings.getMaxClaimRadiusValue())\n+\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n \n-\t\t\t\t} else {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tr = Integer.parseInt(args[0]);\n-\t\t\t\t\t} catch (NumberFormatException e) {\n-\t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\t\t\t\t// Calculate how many TownBlocks are needed to claim the radius. \n+\t\t\t\t// Start blocks at 0 if the plot is unclaimed.\n+\t\t\t\tint neededBlocks = pos.getTownBlock().hasTown() ? 0 : 1;\n+\t\t\t\tneededBlocks += 4 * r * (r + 1);\n+\t\t\t\t\n+\t\t\t\t// Rethink how much of a radius will be used, as there's not enough available TownBlocks.\n+\t\t\t\tif (neededBlocks > available) {\n+\t\t\t\t\tr = 1; \n+\t\t\t\t\tint total = 0;\n+\t\t\t\t\twhile (available - ((r * 8) + total) >= 0) { // Radius 1 grabs 8 blocks, 2 grabs 16 more requiring 24, 3 grabs 24 more requiring 48, etc...\n+\t\t\t\t\t\ttotal += r * 8;\n+\t\t\t\t\t\tr++;\n \t\t\t\t\t}\n+\t\t\t\t\tr--; // Finally reduce the radius by 1 (so that we have a perfect ring of claims,) and replace the original r.\n \t\t\t\t}\n-\t\t\t\tif (r > TownySettings.getMaxClaimRadiusValue() && TownySettings.getMaxClaimRadiusValue() > 0) {\n-\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\t\t\t}\n+\n+\t\t\t/*\n+\t\t\t * Adds WorldCoords in a spiral-out pattern.\n+\t\t\t */\n+\t\t\tint sideLength = (r * 2) + 1;\n+\t\t\tint x = 0, z = 0, dx = 0, dz = -1;\n+\t\t\tint t = r;\n+\t\t\tfor (int i = 0; i <= available; i++) {\n+\t\t\t\tif ((-sideLength / 2 <= x) && (x <= sideLength / 2) && (-sideLength / 2 <= z) && (z <= sideLength / 2)) {\n+\t\t\t\t\tout.add(new WorldCoord(pos.getWorldName(), pos.add(x, z)));\n \t\t\t\t}\n-\t\t\t\t\t\n-\t\t\t\tif (r > 1000)\n-\t\t\t\t\tr = 1000;\n-\t\t\t\tfor (int z = -r; z <= r; z++)\n-\t\t\t\t\tfor (int x = -r; x <= r; x++)\n-\t\t\t\t\t\tif (out.size() < available) {\n-\t\t\t\t\t\t\tWorldCoord wc = new WorldCoord(pos.getWorldName(), pos.getX() + x, pos.getZ() + z);\n-\t\t\t\t\t\t\tif (!wc.hasTownBlock())\n-\t\t\t\t\t\t\t\tout.add(wc);\n-\t\t\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\n+\t\t\t\tif ((x == z) || ((x < 0) && (x == -z)) || ((x > 0) && (x == 1 - z))) {\n+\t\t\t\t\tt = dx;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "originalPosition": 209}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNzk0NDA4", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#pullrequestreview-531794408", "createdAt": "2020-11-16T21:29:00Z", "commit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyOTowMFrOH0TWsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyOTowMFrOH0TWsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNTEwNg==", "bodyText": "Might be worth it to divide by two in the initialization that consistently dividing by two in the for-loop.", "url": "https://github.com/TownyAdvanced/Towny/pull/4441#discussion_r524605106", "createdAt": "2020-11-16T21:29:00Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/AreaSelectionUtil.java", "diffHunk": "@@ -72,101 +86,178 @@\n \t\treturn out;\n \t}\n \n-\tpublic static List<WorldCoord> selectWorldCoordAreaRect(TownBlockOwner owner, WorldCoord pos, String[] args) throws TownyException {\n+\t/**\n+\t * Selects a square shaped area of WorldCoords. Works in a spiral out fashion.\n+\t * \n+\t * @param available - How many TownBlocks the TownBlockOwner has available to claim.\n+\t * @param pos - WorldCoord where the selection is centered at.\n+\t * @param args - subcommand arguments like auto or a number.\n+\t * @return List&lt;WorldCoord&gt; of {@link com.palmergames.bukkit.towny.object.WorldCoord}.\n+\t * @throws TownyException - Thrown when invalid radii are given.\n+\t */\n+\tprivate static List<WorldCoord> selectWorldCoordAreaRect(int available, WorldCoord pos, String[] args) throws TownyException {\n \n \t\tList<WorldCoord> out = new ArrayList<>();\n-\t\tif (pos.getTownyWorld().isClaimable()) {\n-\t\t\tif (args.length > 0) {\n-\t\t\t\tint r = 0, available = 1000;\n-\n-\t\t\t\tif (owner instanceof Town) {\n-\t\t\t\t\tTown town = (Town) owner;\n-\t\t\t\t\tavailable = TownySettings.getMaxTownBlocks(town) - town.getTownBlocks().size();\n-\t\t\t\t} else if (owner instanceof Resident) {\n-\t\t\t\t\tavailable = TownySettings.getMaxResidentPlots((Resident) owner);\n-\t\t\t\t}\n-\t\t\t\t\n+\t\tif (args.length > 0) {\n+\t\t\tint r = MAX_RECT_RADIUS;  // The radius of the claim.\n+\n+\t\t\t/*\n+\t\t\t *  Area selections are capped at a 15 radius which should be a 31x31 (or a square with a side of 496 blocks in length.)  \n+\t\t\t *  Players need a permission node to use area claims and the max radius usable defaults to 4 (set in the config.)\n+\t\t\t */\n+\n+\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n \t\t\t\t\n+\t\t\t\t/*\n+\t\t\t\t * Select everything possible in a rectangle shape.\n+\t\t\t\t */\n \n-\t\t\t\tif (args[0].equalsIgnoreCase(\"auto\")) {\n-\t\t\t\t\t// Attempt to select outwards until no town blocks remain\n+\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0) \n+\t\t\t\t\tr = Math.min(r, TownySettings.getMaxClaimRadiusValue());\n \n-\t\t\t\t\twhile (available - Math.pow((r + 1) * 2 - 1, 2) >= 0)\n-\t\t\t\t\t\tr += 1;\n+\t\t\t} else {\n+\t\t\t\n+\t\t\t\t/*\n+\t\t\t\t * Select an area that will claim a perfect square shape, using a given radius\n+\t\t\t\t * or the reduced radius that will give a perfect square.\n+\t\t\t\t */\n+\t\t\t\t\n+\t\t\t\ttry {\n+\t\t\t\t\tr = Integer.parseInt(args[0]);\n+\t\t\t\t} catch (NumberFormatException e) {\n+\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\t\t\t\t}\n+\t\t\t\tif (TownySettings.getMaxClaimRadiusValue() > 0 && r > TownySettings.getMaxClaimRadiusValue())\n+\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n \n-\t\t\t\t} else {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tr = Integer.parseInt(args[0]);\n-\t\t\t\t\t} catch (NumberFormatException e) {\n-\t\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius\"));\n+\t\t\t\t// Calculate how many TownBlocks are needed to claim the radius. \n+\t\t\t\t// Start blocks at 0 if the plot is unclaimed.\n+\t\t\t\tint neededBlocks = pos.getTownBlock().hasTown() ? 0 : 1;\n+\t\t\t\tneededBlocks += 4 * r * (r + 1);\n+\t\t\t\t\n+\t\t\t\t// Rethink how much of a radius will be used, as there's not enough available TownBlocks.\n+\t\t\t\tif (neededBlocks > available) {\n+\t\t\t\t\tr = 1; \n+\t\t\t\t\tint total = 0;\n+\t\t\t\t\twhile (available - ((r * 8) + total) >= 0) { // Radius 1 grabs 8 blocks, 2 grabs 16 more requiring 24, 3 grabs 24 more requiring 48, etc...\n+\t\t\t\t\t\ttotal += r * 8;\n+\t\t\t\t\t\tr++;\n \t\t\t\t\t}\n+\t\t\t\t\tr--; // Finally reduce the radius by 1 (so that we have a perfect ring of claims,) and replace the original r.\n \t\t\t\t}\n-\t\t\t\tif (r > TownySettings.getMaxClaimRadiusValue() && TownySettings.getMaxClaimRadiusValue() > 0) {\n-\t\t\t\t\tthrow new TownyException(Translation.of(\"msg_err_invalid_radius_number\", TownySettings.getMaxClaimRadiusValue()));\n+\t\t\t}\n+\n+\t\t\t/*\n+\t\t\t * Adds WorldCoords in a spiral-out pattern.\n+\t\t\t */\n+\t\t\tint sideLength = (r * 2) + 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e830c7f939617d6e83a2d3b0b905a5a6af338e10"}, "originalPosition": 188}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "139002a1c2fb723a47199797a639804b6441c5fb", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/139002a1c2fb723a47199797a639804b6441c5fb", "committedDate": "2020-11-16T22:33:00Z", "message": "Claiming & AreaSelectionUtil Fix Up.\n\n- Made changes requested by silverwolfg11."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4898f9c902a8c65cab8a2870565af3391cb47bf3", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/4898f9c902a8c65cab8a2870565af3391cb47bf3", "committedDate": "2020-11-17T00:09:04Z", "message": "- Add catches for NPEs when town.getAccount() returns null."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f992e1f2926c06d009bae29ae8baf2dc5a7c5f6", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/3f992e1f2926c06d009bae29ae8baf2dc5a7c5f6", "committedDate": "2020-11-17T00:14:46Z", "message": "Revert \"- Add catches for NPEs when town.getAccount() returns null.\"\n\nThis reverts commit 4898f9c902a8c65cab8a2870565af3391cb47bf3."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4217, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}