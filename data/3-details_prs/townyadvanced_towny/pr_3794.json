{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjE0ODY0", "number": 3794, "title": "Add Calculation Events", "bodyText": "Description:\nAdded Calculation Events\n\nRelevant Towny Issue ticket:\n\n#3781\n\n\n I have tested this pull request for defects on a server.\n\n\nBy making this pull request, I represent that I have the right to waive copyright and related rights to my contribution, and agree that all copyright and related rights in my contributions are waived, and I acknowledge that the TownyAdvanced organization has the copyright to use and modify my contribution under the Towny License for perpetuity.", "createdAt": "2020-03-18T19:07:47Z", "url": "https://github.com/TownyAdvanced/Towny/pull/3794", "merged": true, "mergeCommit": {"oid": "3a8b614f5ceee141dcb0ec4e4058ab8dd86fb339"}, "closed": true, "closedAt": "2020-03-20T19:33:38Z", "author": {"login": "Drc-DEV"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO8IvCAH2gAyMzkwNjE0ODY0OmI3NTNiNDRjMGEyY2M0MmIxNzBjODQ5MDdjYTYyMmYwNTVjNjdjYTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPDynkgFqTM3NzQwOTI4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b753b44c0a2cc42b170c84907ca622f055c67ca2", "author": {"user": {"login": "Drc-DEV", "name": "Valentina_pro"}}, "url": "https://github.com/TownyAdvanced/Towny/commit/b753b44c0a2cc42b170c84907ca622f055c67ca2", "committedDate": "2020-03-18T19:04:52Z", "message": "Add Calculation Events"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MzQxMDc5", "url": "https://github.com/TownyAdvanced/Towny/pull/3794#pullrequestreview-377341079", "createdAt": "2020-03-19T00:44:01Z", "commit": {"oid": "b753b44c0a2cc42b170c84907ca622f055c67ca2"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMDo0NDowMlrOF4cHLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMDo0OToxNFrOF4cMPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyNTE2NA==", "bodyText": "You're not using these variables outside the scope of the if-statement, so just put them in the if-statement.", "url": "https://github.com/TownyAdvanced/Towny/pull/3794#discussion_r394725164", "createdAt": "2020-03-19T00:44:02Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/TownySettings.java", "diffHunk": "@@ -1911,26 +1918,34 @@ public static boolean isUpkeepPayingPlots() {\n \n \t\treturn getBoolean(ConfigNodes.ECO_UPKEEP_PLOTPAYMENTS);\n \t}\n-\t\n-    public static double getTownPenaltyUpkeepCost(Town town) {\n-    \t\n-    \tint claimed, allowedClaims, overClaimed;\n-    \t\n-\t    if (getUpkeepPenalty() > 0) {\n-\t    \t\n-\t    \tclaimed = town.getTownBlocks().size();\n-\t    \tallowedClaims = getMaxTownBlocks(town);\n-\t    \toverClaimed = claimed - allowedClaims;\n-\n-\t    \tif (!town.isOverClaimed())\n-\t    \t\treturn 0;\n-\t    \t\n-\t    \tif (isUpkeepPenaltyByPlot())\n-\t    \t\treturn getUpkeepPenalty() * overClaimed;\n-\t    \telse\n-\t    \t\treturn getUpkeepPenalty();\n-\t    } else return 0;\n-    }\n+\n+\tpublic static double getTownPenaltyUpkeepCost(Town town) {\n+\t\tTownUpkeepPenalityCalculationEvent event = new TownUpkeepPenalityCalculationEvent(town, getTownPenaltyUpkeepCostRaw(town));\n+\t\tBukkit.getPluginManager().callEvent(event);\n+\t\treturn event.getUpkeep();\n+\t}\n+\n+\tprivate static double getTownPenaltyUpkeepCostRaw(Town town) {\n+\n+\t\tint claimed;\n+\t\tint allowedClaims;\n+\t\tint overClaimed;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b753b44c0a2cc42b170c84907ca622f055c67ca2"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyNTM3OQ==", "bodyText": "Since that else is pretty much the last line, you can just remove it, and put return 0.", "url": "https://github.com/TownyAdvanced/Towny/pull/3794#discussion_r394725379", "createdAt": "2020-03-19T00:44:57Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/TownySettings.java", "diffHunk": "@@ -1911,26 +1918,34 @@ public static boolean isUpkeepPayingPlots() {\n \n \t\treturn getBoolean(ConfigNodes.ECO_UPKEEP_PLOTPAYMENTS);\n \t}\n-\t\n-    public static double getTownPenaltyUpkeepCost(Town town) {\n-    \t\n-    \tint claimed, allowedClaims, overClaimed;\n-    \t\n-\t    if (getUpkeepPenalty() > 0) {\n-\t    \t\n-\t    \tclaimed = town.getTownBlocks().size();\n-\t    \tallowedClaims = getMaxTownBlocks(town);\n-\t    \toverClaimed = claimed - allowedClaims;\n-\n-\t    \tif (!town.isOverClaimed())\n-\t    \t\treturn 0;\n-\t    \t\n-\t    \tif (isUpkeepPenaltyByPlot())\n-\t    \t\treturn getUpkeepPenalty() * overClaimed;\n-\t    \telse\n-\t    \t\treturn getUpkeepPenalty();\n-\t    } else return 0;\n-    }\n+\n+\tpublic static double getTownPenaltyUpkeepCost(Town town) {\n+\t\tTownUpkeepPenalityCalculationEvent event = new TownUpkeepPenalityCalculationEvent(town, getTownPenaltyUpkeepCostRaw(town));\n+\t\tBukkit.getPluginManager().callEvent(event);\n+\t\treturn event.getUpkeep();\n+\t}\n+\n+\tprivate static double getTownPenaltyUpkeepCostRaw(Town town) {\n+\n+\t\tint claimed;\n+\t\tint allowedClaims;\n+\t\tint overClaimed;\n+\n+\t\tif (getUpkeepPenalty() > 0) {\n+\n+\t\t\tclaimed = town.getTownBlocks().size();\n+\t\t\tallowedClaims = getMaxTownBlocks(town);\n+\t\t\toverClaimed = claimed - allowedClaims;\n+\n+\t\t\tif (!town.isOverClaimed())\n+\t\t\t\treturn 0;\n+\n+\t\t\tif (isUpkeepPenaltyByPlot())\n+\t\t\t\treturn getUpkeepPenalty() * overClaimed;\n+\t\t\telse\n+\t\t\t\treturn getUpkeepPenalty();\n+\t\t} else return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b753b44c0a2cc42b170c84907ca622f055c67ca2"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyNTU1Mw==", "bodyText": "Can just initialize multiplier to 1.0 in the beginning to avoid this. Doesn't really make it less readable.", "url": "https://github.com/TownyAdvanced/Towny/pull/3794#discussion_r394725553", "createdAt": "2020-03-19T00:45:45Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/TownySettings.java", "diffHunk": "@@ -1947,20 +1962,27 @@ public static double getNationUpkeep() {\n \t}\n \n \tpublic static double getNationUpkeepCost(Nation nation) {\n+\t\tNationUpkeepCalculationEvent event = new NationUpkeepCalculationEvent(nation, getNationUpkeepCostRaw(nation));\n+\t\tBukkit.getPluginManager().callEvent(event);\n+\t\treturn event.getUpkeep();\n+\t}\n+\n+\tprivate static double getNationUpkeepCostRaw(Nation nation) {\n \n \t\tdouble multiplier;\n \n \t\tif (nation != null) {\n \t\t\tif (isNationUpkeepPerTown()) {\n \t\t\t\tif (isNationLevelModifierAffectingNationUpkeepPerTown())\n-\t\t\t\t\treturn (getNationUpkeep() * nation.getTowns().size()) * Double.valueOf(getNationLevel(nation).get(TownySettings.NationLevel.UPKEEP_MULTIPLIER).toString());\n+\t\t\t\t\treturn (getNationUpkeep() * nation.getTowns().size()) * Double.parseDouble(getNationLevel(nation).get(TownySettings.NationLevel.UPKEEP_MULTIPLIER).toString());\n \t\t\t\telse\n \t\t\t\t\treturn (getNationUpkeep() * nation.getTowns().size());\n \t\t\t} else {\n-\t\t\t\tmultiplier = Double.valueOf(getNationLevel(nation).get(TownySettings.NationLevel.UPKEEP_MULTIPLIER).toString());\n+\t\t\t\tmultiplier = Double.parseDouble(getNationLevel(nation).get(TownySettings.NationLevel.UPKEEP_MULTIPLIER).toString());\n \t\t\t}\n-\t\t} else\n+\t\t} else {\n \t\t\tmultiplier = 1.0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b753b44c0a2cc42b170c84907ca622f055c67ca2"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyNTgyMA==", "bodyText": "Can just initialize multiplier to 1.0 to avoid the else statement.", "url": "https://github.com/TownyAdvanced/Towny/pull/3794#discussion_r394725820", "createdAt": "2020-03-19T00:46:40Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/TownySettings.java", "diffHunk": "@@ -1839,52 +1843,55 @@ public static boolean isRemovingOnMonarchDeath() {\n \t\treturn getBoolean(ConfigNodes.WAR_EVENT_REMOVE_ON_MONARCH_DEATH);\n \t}\n \n-    public static double getTownUpkeepCost(Town town) {\n-    \t \n-        double multiplier;\n- \n-        if (town != null) {\n-            if (isUpkeepByPlot()) {\n-                multiplier = town.getTownBlocks().size(); // town.getTotalBlocks();\n-            } else {\n-                multiplier = Double.valueOf(getTownLevel(town).get(TownySettings.TownLevel.UPKEEP_MULTIPLIER).toString());\n-            }\n-        } else\n-            multiplier = 1.0;\n- \n-        Double amount = 0.0;\n-        if (town.hasNation()) {\n-            double nationMultiplier = 1.0;\n-            try {\n-                nationMultiplier = Double.valueOf(getNationLevel(town.getNation()).get(TownySettings.NationLevel.NATION_TOWN_UPKEEP_MULTIPLIER).toString());\n-            } catch (NumberFormatException e) {\n-                e.printStackTrace();\n-            } catch (NotRegisteredException e) {\n-                e.printStackTrace();\n-            }\n-            if (isUpkeepByPlot()) {\n-            \tif (isTownLevelModifiersAffectingPlotBasedUpkeep())\n-            \t\tamount = (((getTownUpkeep() * multiplier) * Double.valueOf(getTownLevel(town).get(TownySettings.TownLevel.UPKEEP_MULTIPLIER).toString())) * nationMultiplier);\n-            \telse\n-            \t\tamount = (getTownUpkeep() * multiplier) * nationMultiplier;\n-            \tif (TownySettings.getPlotBasedUpkeepMinimumAmount() > 0.0 && amount < TownySettings.getPlotBasedUpkeepMinimumAmount())\n-               \t\tamount = TownySettings.getPlotBasedUpkeepMinimumAmount();\n-                return amount;\n-            } else\n-                return (getTownUpkeep() * multiplier) * nationMultiplier;\n-        } else {\n-            if (isUpkeepByPlot()) {\n-            \tif (isTownLevelModifiersAffectingPlotBasedUpkeep())\n-            \t\tamount = (getTownUpkeep() * multiplier) * Double.valueOf(getTownLevel(town).get(TownySettings.TownLevel.UPKEEP_MULTIPLIER).toString());\n-            \telse\n-            \t\tamount = getTownUpkeep() * multiplier;\n-                if (TownySettings.getPlotBasedUpkeepMinimumAmount() > 0.0 && amount < TownySettings.getPlotBasedUpkeepMinimumAmount())\n-               \t\tamount = TownySettings.getPlotBasedUpkeepMinimumAmount();\n-                return amount;\n-            } else\n-                return getTownUpkeep() * multiplier;\n-        }\n-    }\n+\tpublic static double getTownUpkeepCost(Town town) {\n+\t\tTownUpkeepCalculationEvent event = new TownUpkeepCalculationEvent(town,getTownUpkeepCostRaw(town));\n+\t\tBukkit.getPluginManager().callEvent(event);\n+\t\treturn event.getUpkeep();\n+\t}\n+\n+\tprivate static double getTownUpkeepCostRaw(Town town) {\n+\t\tdouble multiplier;\n+\n+\t\tif (town != null) {\n+\t\t\tif (isUpkeepByPlot()) {\n+\t\t\t\tmultiplier = town.getTownBlocks().size(); // town.getTotalBlocks();\n+\t\t\t} else {\n+\t\t\t\tmultiplier = Double.parseDouble(getTownLevel(town).get(TownySettings.TownLevel.UPKEEP_MULTIPLIER).toString());\n+\t\t\t}\n+\t\t} else\n+\t\t\tmultiplier = 1.0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b753b44c0a2cc42b170c84907ca622f055c67ca2"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyNjQ2MQ==", "bodyText": "This variable is assigned within specific scopes and not used outside of them, so it's best to initialize it within the appropriate scopes instead of here.", "url": "https://github.com/TownyAdvanced/Towny/pull/3794#discussion_r394726461", "createdAt": "2020-03-19T00:49:14Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/TownySettings.java", "diffHunk": "@@ -1839,52 +1843,55 @@ public static boolean isRemovingOnMonarchDeath() {\n \t\treturn getBoolean(ConfigNodes.WAR_EVENT_REMOVE_ON_MONARCH_DEATH);\n \t}\n \n-    public static double getTownUpkeepCost(Town town) {\n-    \t \n-        double multiplier;\n- \n-        if (town != null) {\n-            if (isUpkeepByPlot()) {\n-                multiplier = town.getTownBlocks().size(); // town.getTotalBlocks();\n-            } else {\n-                multiplier = Double.valueOf(getTownLevel(town).get(TownySettings.TownLevel.UPKEEP_MULTIPLIER).toString());\n-            }\n-        } else\n-            multiplier = 1.0;\n- \n-        Double amount = 0.0;\n-        if (town.hasNation()) {\n-            double nationMultiplier = 1.0;\n-            try {\n-                nationMultiplier = Double.valueOf(getNationLevel(town.getNation()).get(TownySettings.NationLevel.NATION_TOWN_UPKEEP_MULTIPLIER).toString());\n-            } catch (NumberFormatException e) {\n-                e.printStackTrace();\n-            } catch (NotRegisteredException e) {\n-                e.printStackTrace();\n-            }\n-            if (isUpkeepByPlot()) {\n-            \tif (isTownLevelModifiersAffectingPlotBasedUpkeep())\n-            \t\tamount = (((getTownUpkeep() * multiplier) * Double.valueOf(getTownLevel(town).get(TownySettings.TownLevel.UPKEEP_MULTIPLIER).toString())) * nationMultiplier);\n-            \telse\n-            \t\tamount = (getTownUpkeep() * multiplier) * nationMultiplier;\n-            \tif (TownySettings.getPlotBasedUpkeepMinimumAmount() > 0.0 && amount < TownySettings.getPlotBasedUpkeepMinimumAmount())\n-               \t\tamount = TownySettings.getPlotBasedUpkeepMinimumAmount();\n-                return amount;\n-            } else\n-                return (getTownUpkeep() * multiplier) * nationMultiplier;\n-        } else {\n-            if (isUpkeepByPlot()) {\n-            \tif (isTownLevelModifiersAffectingPlotBasedUpkeep())\n-            \t\tamount = (getTownUpkeep() * multiplier) * Double.valueOf(getTownLevel(town).get(TownySettings.TownLevel.UPKEEP_MULTIPLIER).toString());\n-            \telse\n-            \t\tamount = getTownUpkeep() * multiplier;\n-                if (TownySettings.getPlotBasedUpkeepMinimumAmount() > 0.0 && amount < TownySettings.getPlotBasedUpkeepMinimumAmount())\n-               \t\tamount = TownySettings.getPlotBasedUpkeepMinimumAmount();\n-                return amount;\n-            } else\n-                return getTownUpkeep() * multiplier;\n-        }\n-    }\n+\tpublic static double getTownUpkeepCost(Town town) {\n+\t\tTownUpkeepCalculationEvent event = new TownUpkeepCalculationEvent(town,getTownUpkeepCostRaw(town));\n+\t\tBukkit.getPluginManager().callEvent(event);\n+\t\treturn event.getUpkeep();\n+\t}\n+\n+\tprivate static double getTownUpkeepCostRaw(Town town) {\n+\t\tdouble multiplier;\n+\n+\t\tif (town != null) {\n+\t\t\tif (isUpkeepByPlot()) {\n+\t\t\t\tmultiplier = town.getTownBlocks().size(); // town.getTotalBlocks();\n+\t\t\t} else {\n+\t\t\t\tmultiplier = Double.parseDouble(getTownLevel(town).get(TownySettings.TownLevel.UPKEEP_MULTIPLIER).toString());\n+\t\t\t}\n+\t\t} else\n+\t\t\tmultiplier = 1.0;\n+\n+\t\tdouble amount;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b753b44c0a2cc42b170c84907ca622f055c67ca2"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8468941e18f23b6f648ba6a2921a8019f96803d", "author": {"user": {"login": "Drc-DEV", "name": "Valentina_pro"}}, "url": "https://github.com/TownyAdvanced/Towny/commit/c8468941e18f23b6f648ba6a2921a8019f96803d", "committedDate": "2020-03-19T01:20:18Z", "message": "Code quality improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDA5Mjg3", "url": "https://github.com/TownyAdvanced/Towny/pull/3794#pullrequestreview-377409287", "createdAt": "2020-03-19T03:59:57Z", "commit": {"oid": "c8468941e18f23b6f648ba6a2921a8019f96803d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4231, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}