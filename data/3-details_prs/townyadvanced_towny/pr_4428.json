{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NDI5MzE4", "number": 4428, "title": "Prevent outlaws from entering towns", "bodyText": "Description:\nThis pull request adds more functionality to outlaws, by allowing server admins to prevent them from entering towns they are outlawed in, and also allowing for an customizable cooldown and town warnings. This PR is inspired on how TownyFlight handles flight disabling when leaving town.\n\nNew Nodes/Commands/ConfigOptions:\n\nNew ConfigOption: global_town_settings.allow_outlaws_to_enter_town\n\ndefault: true\nIf true outlaws can enter town freely.\n\n\nNew ConfigOption: global_town_settings.warn_town_on_outlaw\n\ndefault: false\nIf true, residents get an chat message stating that an outlaw entered town.\n\n\nNew ConfigOption: global_town_settings.outlaw_teleport_warmup\n\ndefault: 5\nHow much seconds before outlaws get teleported to an respective spawnpoint.\n\n\n\n\nRelevant Towny Issue ticket:\n#4301\n\n\n I have tested this pull request for defects on a server.\n\nBy making this pull request, I represent that I have the right to waive copyright and related rights to my contribution, and agree that all copyright and related rights in my contributions are waived, and I acknowledge that the TownyAdvanced organization has the copyright to use and modify my contribution under the Towny License for perpetuity.", "createdAt": "2020-11-09T02:44:09Z", "url": "https://github.com/TownyAdvanced/Towny/pull/4428", "merged": true, "mergeCommit": {"oid": "a5ea7c46579e382a844e48c1813fb7b8e6544928"}, "closed": true, "closedAt": "2020-11-11T17:13:16Z", "author": {"login": "GNosii"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdazUj8gFqTUyNjEzNjYyOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbhKRwgH2gAyNTE3NDI5MzE4OmQ0YTczNjUwYmU4NTBhMzhkZDQxZjVhMWUyMzk5MjM1MTBiNzdkYzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MTM2NjI5", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#pullrequestreview-526136629", "createdAt": "2020-11-09T10:55:23Z", "commit": {"oid": "9332c8953c50d02ffee7de167866da19c3481228"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMDo1NToyNFrOHvpK8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTozNzo0NVrOHvqoaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcxOTY2NQ==", "bodyText": "you don't actually need the .replace(), instead use\nTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\", outlaw.getName()));", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519719665", "createdAt": "2020-11-09T10:55:24Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9332c8953c50d02ffee7de167866da19c3481228"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcyMTA4OA==", "bodyText": "Same as above, changing the language string to only use %s and not %c, as well as making sure they're in the right order. Instead of cooldown use TownySettings.getOutlawKickCooldown().", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519721088", "createdAt": "2020-11-09T10:57:53Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\").replace(\"%c\", TimeMgmt.formatCountdownTime(cooldown)).replace(\"%s\", town.getFormattedName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9332c8953c50d02ffee7de167866da19c3481228"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNjQzMQ==", "bodyText": "I believe this can be simplified to:\n\t\tif (TownyAPI.getInstance().getTown(player.getLocation()) != null && TownyAPI.getInstance().getTown(player.getLocation()) == town && town.hasOutlaw(player.getName())) {\n\t\t\tspawnLoc = town.getWorld().getSpawnLocation();\n\t\t\tif (player.getBedSpawnLocation() != null) \n\t\t\t\tspawnLoc = player.getBedSpawnLocation();\n\t\t\tif (outlaw.hasTown() && TownyAPI.getInstance().getTownSpawnLocation(player) != null)\n\t\t\t\tspawnLoc = TownyAPI.getInstance().getTownSpawnLocation(player);\n\n\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kicked\", town));\n\t\t\tPaperLib.teleportAsync(player, spawnLoc, TeleportCause.PLUGIN);\n\t\t}", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519736431", "createdAt": "2020-11-09T11:24:47Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\").replace(\"%c\", TimeMgmt.formatCountdownTime(cooldown)).replace(\"%s\", town.getFormattedName()));\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tnew BukkitRunnable() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\n+\t\t\t\t\t\tif (town.hasOutlaw(outlaw)) {\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tPlayer player = outlaw.getPlayer();\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t// Outlaw has/doesn't have a town.\n+\t\t\t\t\t\t\tif (!outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\tif (player.getBedSpawnLocation() == null) { \n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(player.getBedLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t} else if (outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\tif (outlaw.getTown().hasSpawn()) {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw.getTown(), Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.TOWN);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw, Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.RESIDENT);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t} catch (NotRegisteredException e) {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kicked\", town));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9332c8953c50d02ffee7de167866da19c3481228"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczOTQ4NQ==", "bodyText": "I would probably put this at the top after line 794, ie:\n\t\t/*\n\t\t * Town does consider the player an outlaw.\n\t\t */\n\t\tif (event.getTo().getTownBlock().getTown().hasOutlaw(outlaw)) {\n\t\t\t\n\t\t\t// Outlaws are allowed to roam in all towns freely.\n\t\t\tif (TownySettings.canOutlawsEnterTowns()) {\n\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", town));\n\t\t\t\n\t\t\t// Outlaws are teleported away if they spend too long in a town who has outlawed them.\n\t\t\t} else {\n\t\t\t\t// All of the new code.\n\t\t\t}\n\t\t}", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519739485", "createdAt": "2020-11-09T11:30:11Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\").replace(\"%c\", TimeMgmt.formatCountdownTime(cooldown)).replace(\"%s\", town.getFormattedName()));\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tnew BukkitRunnable() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\n+\t\t\t\t\t\tif (town.hasOutlaw(outlaw)) {\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tPlayer player = outlaw.getPlayer();\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t// Outlaw has/doesn't have a town.\n+\t\t\t\t\t\t\tif (!outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\tif (player.getBedSpawnLocation() == null) { \n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(player.getBedLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t} else if (outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\tif (outlaw.getTown().hasSpawn()) {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw.getTown(), Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.TOWN);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw, Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.RESIDENT);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t} catch (NotRegisteredException e) {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kicked\", town));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}.runTaskLater(plugin, cooldown * 20);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", town));\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9332c8953c50d02ffee7de167866da19c3481228"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczOTYxNQ==", "bodyText": "Remove whitespacing changes.", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519739615", "createdAt": "2020-11-09T11:30:26Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\").replace(\"%c\", TimeMgmt.formatCountdownTime(cooldown)).replace(\"%s\", town.getFormattedName()));\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tnew BukkitRunnable() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\n+\t\t\t\t\t\tif (town.hasOutlaw(outlaw)) {\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tPlayer player = outlaw.getPlayer();\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t// Outlaw has/doesn't have a town.\n+\t\t\t\t\t\t\tif (!outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\tif (player.getBedSpawnLocation() == null) { \n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(player.getBedLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t} else if (outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\tif (outlaw.getTown().hasSpawn()) {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw.getTown(), Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.TOWN);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw, Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.RESIDENT);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t} catch (NotRegisteredException e) {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kicked\", town));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}.runTaskLater(plugin, cooldown * 20);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", town));\n+\t\t\t}\n+\t\t}\n \t}\n-\n-\n-\t/**\n+\t\t\n+\t\t/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9332c8953c50d02ffee7de167866da19c3481228"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczOTcyOQ==", "bodyText": "Remove whitespacing change.", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519739729", "createdAt": "2020-11-09T11:30:40Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -1063,3 +1125,4 @@ public void onAdminToolUseOnEntities(PlayerInteractEntityEvent event) {\n \t\n \t\n }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9332c8953c50d02ffee7de167866da19c3481228"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MTI4Mw==", "bodyText": "This doesn't need to be there, as the message is shown below when they get teleported which will be right away if the cooldown is 0.", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519741283", "createdAt": "2020-11-09T11:33:29Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9332c8953c50d02ffee7de167866da19c3481228"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MjE2Nw==", "bodyText": "Instead of cooldown use TownySettings.getOutlawKickCooldown().", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519742167", "createdAt": "2020-11-09T11:35:06Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\").replace(\"%c\", TimeMgmt.formatCountdownTime(cooldown)).replace(\"%s\", town.getFormattedName()));\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tnew BukkitRunnable() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\n+\t\t\t\t\t\tif (town.hasOutlaw(outlaw)) {\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tPlayer player = outlaw.getPlayer();\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t// Outlaw has/doesn't have a town.\n+\t\t\t\t\t\t\tif (!outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\tif (player.getBedSpawnLocation() == null) { \n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(player.getBedLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t} else if (outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\tif (outlaw.getTown().hasSpawn()) {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw.getTown(), Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.TOWN);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw, Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.RESIDENT);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t} catch (NotRegisteredException e) {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kicked\", town));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}.runTaskLater(plugin, cooldown * 20);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9332c8953c50d02ffee7de167866da19c3481228"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MzU5Mg==", "bodyText": "All three of these variables won't be needed after the above changes are made.", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519743592", "createdAt": "2020-11-09T11:37:45Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9332c8953c50d02ffee7de167866da19c3481228"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NzE1Mjg5", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#pullrequestreview-526715289", "createdAt": "2020-11-09T22:44:37Z", "commit": {"oid": "df5393c81e33557f115c70f3471bc12d99b1b010"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a6e0dc0c10f567ba69c264f2d26171b89888107", "author": {"user": {"login": "GNosii", "name": "EuGNosii"}}, "url": "https://github.com/TownyAdvanced/Towny/commit/2a6e0dc0c10f567ba69c264f2d26171b89888107", "committedDate": "2020-11-11T16:44:38Z", "message": "Update TownyPlayerListener.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebf2b61a515900e18632c96942b2198c40d3de47", "author": {"user": {"login": "GNosii", "name": "EuGNosii"}}, "url": "https://github.com/TownyAdvanced/Towny/commit/ebf2b61a515900e18632c96942b2198c40d3de47", "committedDate": "2020-11-11T16:51:52Z", "message": "Update english.yml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27d727687cc558363dadb81ec37481cb31cc6812", "author": {"user": {"login": "GNosii", "name": "EuGNosii"}}, "url": "https://github.com/TownyAdvanced/Towny/commit/27d727687cc558363dadb81ec37481cb31cc6812", "committedDate": "2020-11-11T16:52:45Z", "message": "Fixed automatic wildcard imports made by my IDE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28dd89eaa9f8bf6171d45e230912c285ca4d6a63", "author": {"user": {"login": "GNosii", "name": "EuGNosii"}}, "url": "https://github.com/TownyAdvanced/Towny/commit/28dd89eaa9f8bf6171d45e230912c285ca4d6a63", "committedDate": "2020-11-11T16:53:21Z", "message": "Update ConfigNodes.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfb30aca17fa4119a51efe226df5f11c439ed8e6", "author": {"user": {"login": "GNosii", "name": "EuGNosii"}}, "url": "https://github.com/TownyAdvanced/Towny/commit/dfb30aca17fa4119a51efe226df5f11c439ed8e6", "committedDate": "2020-11-11T16:54:16Z", "message": "Fixed Articdive's name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95d837f6d08c08ec4e5196e7fb0d0f53b9381d7c", "author": {"user": {"login": "GNosii", "name": "EuGNosii"}}, "url": "https://github.com/TownyAdvanced/Towny/commit/95d837f6d08c08ec4e5196e7fb0d0f53b9381d7c", "committedDate": "2020-11-11T16:54:16Z", "message": "Added missing import for SpawnType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b4cd8a69bfc61ee8f7e0652282051caf18f18be", "author": {"user": {"login": "GNosii", "name": "EuGNosii"}}, "url": "https://github.com/TownyAdvanced/Towny/commit/0b4cd8a69bfc61ee8f7e0652282051caf18f18be", "committedDate": "2020-11-11T16:54:56Z", "message": "Added changes requested by LlmDl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "560a3956edc18ba316655d3cc1ff7e5df8f4164a", "author": {"user": {"login": "GNosii", "name": "EuGNosii"}}, "url": "https://github.com/TownyAdvanced/Towny/commit/560a3956edc18ba316655d3cc1ff7e5df8f4164a", "committedDate": "2020-11-11T16:56:21Z", "message": "Whitespace changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efc4fa773ad46fd3e66cd2478a3df09783dc0e06", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/efc4fa773ad46fd3e66cd2478a3df09783dc0e06", "committedDate": "2020-11-11T16:57:08Z", "message": "Tidy-up Commit.\n\n- Remove unused import.\n- Rename a new config setting.\n- Reword a bit of the new config settings.\n- Spiff up the english.yml's new language strings.\n  - Use double ' when it is needed.\n- Remove whitespacing changes.\n\nChange-Id: I8eea0b3f3113e0b6ee6c140db8016d53ee211c0d"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4a73650be850a38dd41f5a1e239923510b77dc7", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/d4a73650be850a38dd41f5a1e239923510b77dc7", "committedDate": "2020-11-11T17:11:17Z", "message": "- Minor change to language strings' colours."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4215, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}