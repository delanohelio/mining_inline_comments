{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTY5MDE4", "number": 3988, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjoyMjo1MVrOD6nx3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzoxNzowMFrOEB8zjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNzk1NzQzOnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/Bank.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjoyMjo1MVrOGSjsrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzo0OTo1MFrOGSuAQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjExMjQzMA==", "bodyText": "the apostrophe has to be replaced with whatever character code is need. Or make \"there is\".", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r422112430", "createdAt": "2020-05-08T12:22:51Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/object/Bank.java", "diffHunk": "@@ -1,19 +1,46 @@\n package com.palmergames.bukkit.towny.object;\n \n+import com.palmergames.bukkit.towny.TownySettings;\n import com.palmergames.bukkit.towny.exceptions.EconomyException;\n import com.palmergames.bukkit.towny.exceptions.TownyException;\n \n /**\n  * Allows objects to manage a self contained bank.\n+ *\n+ * These methods are more of convenience or utility methods.\n  */\n public interface Bank extends EconomyHandler {\n \t/**\n \t * Takes money from object bank account and gives it to a resident.\n \t * \n \t * @param resident The resident to pay to.\n \t * @param amount The amount to pay.\n-\t * @throws EconomyException Thrown if there is an economy error.\n-\t * @throws TownyException Thrown if their is a hierarchical error.\n+\t * @throws EconomyException When there's a payment error.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02aeeff01caa9506120e9f752dc23b27aa944c97"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4MTI4Mg==", "bodyText": "what?", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r422281282", "createdAt": "2020-05-08T17:49:50Z", "author": null, "path": "src/com/palmergames/bukkit/towny/object/Bank.java", "diffHunk": "@@ -1,19 +1,46 @@\n package com.palmergames.bukkit.towny.object;\n \n+import com.palmergames.bukkit.towny.TownySettings;\n import com.palmergames.bukkit.towny.exceptions.EconomyException;\n import com.palmergames.bukkit.towny.exceptions.TownyException;\n \n /**\n  * Allows objects to manage a self contained bank.\n+ *\n+ * These methods are more of convenience or utility methods.\n  */\n public interface Bank extends EconomyHandler {\n \t/**\n \t * Takes money from object bank account and gives it to a resident.\n \t * \n \t * @param resident The resident to pay to.\n \t * @param amount The amount to pay.\n-\t * @throws EconomyException Thrown if there is an economy error.\n-\t * @throws TownyException Thrown if their is a hierarchical error.\n+\t * @throws EconomyException When there's a payment error.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjExMjQzMA=="}, "originalCommit": {"oid": "02aeeff01caa9506120e9f752dc23b27aa944c97"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjMxNzkxOnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/economy/Account.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzoyNzowMFrOGXq77g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzoyNzowMFrOGXq77g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MzkwMg==", "bodyText": "Version numbers are off", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r427473902", "createdAt": "2020-05-19T17:27:00Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/object/economy/Account.java", "diffHunk": "@@ -284,4 +284,22 @@ public final void setAuditor(AccountAuditor auditor) {\n \t\t\tsuper(TownySettings.getString(ConfigNodes.ECO_CLOSED_ECONOMY_SERVER_ACCOUNT));\n \t\t}\n \t}\n+\t\n+\t// Legacy Compatibility Methods.\n+\n+\t/**\n+\t * @deprecated As of 0.96.11.0, use {@link #deposit(double, String)} instead.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3a4bb8d76715a4875703c4d0f9a73dc7815a354"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDcwOTIzOnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/config/CommentedConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjozMDo1N1rOGeGHbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjozMDo1N1rOGeGHbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxMDY3MQ==", "bodyText": "CTRL + R 10/10. Unneeded dif", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434210671", "createdAt": "2020-06-02T22:30:57Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/config/CommentedConfiguration.java", "diffHunk": "@@ -103,7 +103,7 @@ public void save() {\n \t\t\t\t\t\t\tcurrentPath += \".\" + line.substring(whiteSpace, index);\r\n \t\t\t\t\t\t\tdepth++;\r\n \t\t\t\t\t\t} else if (whiteSpace / 2 < depth) {\r\n-\t\t\t\t\t\t\t// Path is shallower, calculate current depth from whitespace (whitespace / 2) and subtract that many levels from the currentPath\r\n+\t\t\t\t\t\t\t// Path is shallower, calculate current depth from whitespace (whitespace / 2) and withdraw that many levels from the currentPath\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDcyMjczOnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/event/TagChangeEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjozNzoxMFrOGeGP0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjozNzoxMFrOGeGP0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxMjgxNw==", "bodyText": "Would probably make this protected", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434212817", "createdAt": "2020-06-02T22:37:10Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/event/TagChangeEvent.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.palmergames.bukkit.towny.event;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+public abstract class TagChangeEvent extends Event {\n+\tString newTag;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDczMjg0OnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/Territory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo0MTo0OVrOGeGV8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo0MTo0OVrOGeGV8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNDM4Ng==", "bodyText": "Feel like the tag should be trimmed anyway, then just perform an isEmpty check.", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434214386", "createdAt": "2020-06-02T22:41:49Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/object/Territory.java", "diffHunk": "@@ -0,0 +1,175 @@\n+package com.palmergames.bukkit.towny.object;\n+\n+import com.palmergames.bukkit.towny.TownySettings;\n+import com.palmergames.bukkit.towny.event.TerritoryTagChangeEvent;\n+import com.palmergames.bukkit.towny.exceptions.EconomyException;\n+import com.palmergames.bukkit.towny.exceptions.TownyException;\n+import com.palmergames.bukkit.towny.invites.Invite;\n+import com.palmergames.bukkit.towny.invites.InviteHandler;\n+import com.palmergames.bukkit.towny.invites.exceptions.TooManyInvitesException;\n+import com.palmergames.bukkit.towny.object.economy.AccountAuditor;\n+import com.palmergames.bukkit.towny.object.economy.BankEconomyHandler;\n+import com.palmergames.bukkit.towny.object.economy.BankAccount;\n+import com.palmergames.bukkit.towny.object.economy.TerritoryAccountAuditor;\n+import com.palmergames.util.StringMgmt;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.World;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+public abstract class Territory extends TownyObject implements BankEconomyHandler, ResidentList, TownyInviter, SpawnLocation {\n+\t\n+\tprotected BankAccount account;\n+\tprotected Location spawn;\n+\tprotected String tag = \"\";\n+\tprotected String board = null;\n+\tprivate final transient List<Invite> receivedInvites = new ArrayList<>();\n+\tprivate final transient List<Invite> sentInvites = new ArrayList<>();\n+\tprivate boolean isPublic = false;\n+\tprivate boolean isOpen = false;\n+\tprivate long registered;\n+\tprivate double spawnCost;\n+\tprotected double taxes = -1;\n+\tprivate final AccountAuditor accountAuditor = new TerritoryAccountAuditor();\n+\t\n+\tprotected Territory(String name) {\n+\t\tsuper(name);\n+\t}\n+\n+\t@Override\n+\tpublic final List<Invite> getReceivedInvites() {\n+\t\treturn Collections.unmodifiableList(receivedInvites);\n+\t}\n+\n+\t@Override\n+\tpublic final void newReceivedInvite(Invite invite) throws TooManyInvitesException {\n+\t\tif (receivedInvites.size() <= (InviteHandler.getReceivedInvitesMaxAmount(this) -1)) { // We only want 10 Invites, for towns, later we can make this number configurable\n+\t\t\treceivedInvites.add(invite);\n+\t\t} else {\n+\t\t\tthrow new TooManyInvitesException(String.format(TownySettings.getLangString(\"msg_err_town_has_too_many_invites\"),this.getName()));\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic final void deleteReceivedInvite(Invite invite) {\n+\t\treceivedInvites.remove(invite);\n+\t}\n+\n+\t@Override\n+\tpublic final List<Invite> getSentInvites() {\n+\t\treturn Collections.unmodifiableList(sentInvites);\n+\t}\n+\n+\t@Override\n+\tpublic final void newSentInvite(Invite invite)  throws TooManyInvitesException {\n+\t\tif (sentInvites.size() <= (InviteHandler.getSentInvitesMaxAmount(this) -1)) { // We only want 35 Invites, for towns, later we can make this number configurable\n+\t\t\tsentInvites.add(invite);\n+\t\t} else {\n+\t\t\tthrow new TooManyInvitesException(TownySettings.getLangString(\"msg_err_town_sent_too_many_invites\"));\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic final void deleteSentInvite(Invite invite) {\n+\t\tsentInvites.remove(invite);\n+\t}\n+\n+\tpublic final void setBoard(String board) {\n+\t\tthis.board = board;\n+\t}\n+\n+\tpublic String getBoard() {\n+\t\treturn board;\n+\t}\n+\n+\tpublic final void setPublic(boolean isPublic) { \n+\t\tthis.isPublic = isPublic; \n+\t}\n+\n+\tpublic final boolean isPublic() { \n+\t\treturn isPublic; \n+\t}\n+\n+\tpublic final void setOpen(boolean isOpen) { \n+\t\tthis.isOpen = isOpen; \n+\t}\n+\n+\tpublic final boolean isOpen() { \n+\t\treturn isOpen; \n+\t}\n+\n+\tpublic final void setRegistered(long registered) {\n+\t\tthis.registered = registered;\n+\t}\n+\n+\tpublic final long getRegistered() {\n+\t\treturn registered;\n+\t}\n+\n+\tpublic final void setSpawnCost(double spawnCost) { \n+\t\tthis.spawnCost = spawnCost; \n+\t}\n+\n+\tpublic final double getSpawnCost() {\n+\t\treturn spawnCost;\n+\t}\n+\n+\tpublic final void setTag(String text) throws TownyException {\n+\t\tif (text.length() > 4)\n+\t\t\tthrow new TownyException(TownySettings.getLangString(\"msg_err_tag_too_long\"));\n+\t\tthis.tag = text.toUpperCase();\n+\t\tif (this.tag.matches(\" \"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDczNTgwOnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/Town.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo0MzowNlrOGeGXsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo0MzowNlrOGeGXsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNDgzMg==", "bodyText": "At this point it might just be more valid to abstract the method to return a Collection<TownBlock>", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434214832", "createdAt": "2020-06-02T22:43:06Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/object/Town.java", "diffHunk": "@@ -36,67 +31,46 @@\n \n import static com.palmergames.bukkit.towny.object.EconomyAccount.SERVER_ACCOUNT;\n \n-public class Town extends TownyObject implements ResidentList, TownyInviter, ObjectGroupManageable<PlotGroup>, Bank, TownBlockOwner {\n+public class Town extends Territory implements ResidentList, ObjectGroupManageable<PlotGroup>, TownBlockOwner {\n \n \tprivate static final String ECONOMY_ACCOUNT_PREFIX = TownySettings.getTownAccountPrefix();\n \n-\tprivate List<Resident> residents = new ArrayList<>();\n-\tprivate List<Resident> outlaws = new ArrayList<>();\n+\tprivate final List<Resident> residents = new ArrayList<>();\n+\tprivate final List<Resident> outlaws = new ArrayList<>();\n \tprivate List<Location> outpostSpawns = new ArrayList<>();\n-\tprivate List<Location> jailSpawns = new ArrayList<>();\n+\tprivate final List<Location> jailSpawns = new ArrayList<>();\n \tprivate HashMap<String, PlotGroup> plotGroups = null;\n \t\n \tprivate Resident mayor;\n \tprivate int bonusBlocks = 0;\n \tprivate int purchasedBlocks = 0;\n-\tprivate double taxes = TownySettings.getTownDefaultTax();\n \tprivate double plotTax= TownySettings.getTownDefaultPlotTax();\n \tprivate double commercialPlotTax = TownySettings.getTownDefaultShopTax();\n \tprivate double plotPrice = 0.0;\n \tprivate double embassyPlotTax = TownySettings.getTownDefaultEmbassyTax();\n \tprivate double maxPercentTaxAmount = TownySettings.getMaxTownTaxPercentAmount();\n-\tprivate double commercialPlotPrice, embassyPlotPrice, spawnCost;\n+\tprivate double commercialPlotPrice, embassyPlotPrice;\n \tprivate Nation nation;\n \tprivate boolean hasUpkeep = true;\n-\tprivate boolean isPublic = TownySettings.getTownDefaultPublic();\n \tprivate boolean isTaxPercentage = TownySettings.getTownDefaultTaxPercentage();\n-\tprivate boolean isOpen = TownySettings.getTownDefaultOpen();\n-\tprivate String townBoard = \"/town set board [msg]\";\n-\tprivate String tag = \"\";\n \tprivate TownBlock homeBlock;\n \tprivate TownyWorld world;\n-\tprivate Location spawn;\n \tprivate boolean adminDisabledPVP = false; // This is a special setting to make a town ignore All PVP settings and keep PVP disabled.\n \tprivate boolean adminEnabledPVP = false; // This is a special setting to make a town ignore All PVP settings and keep PVP enabled. Overrides the admin disabled too.\n \tprivate UUID uuid;\n-\tprivate long registered;\n-\tprivate transient List<Invite> receivedinvites = new ArrayList<>();\n-\tprivate transient List<Invite> sentinvites = new ArrayList<>();\n \tprivate boolean isConquered = false;\n \tprivate int conqueredDays;\n-\tprivate EconomyAccount account;\n-\tprivate ConcurrentHashMap<WorldCoord, TownBlock> townBlocks = new ConcurrentHashMap<>();\n-\tprivate TownyPermission permissions = new TownyPermission();\n+\tprivate final ConcurrentHashMap<WorldCoord, TownBlock> townBlocks = new ConcurrentHashMap<>();\n+\tprivate final TownyPermission permissions = new TownyPermission();\n \n \tpublic Town(String name) {\n \t\tsuper(name);\n \t\tpermissions.loadDefault(this);\n \t}\n \n-\t/*\n-\t * Not used but required to Implement TownBlockOwner (non-Javadoc)\n-\t * @see com.palmergames.bukkit.towny.object.TownBlockOwner#setTownblocks(java.util.List)\n-\t */\n-\t@Override\n-\tpublic void setTownblocks(List<TownBlock> townblocks) {\n-\t\t//this.townBlocks = townblocks;\n-\t}\n-\n \t@Override\n \tpublic List<TownBlock> getTownBlocks() {\n-\t\tList<TownBlock> townBlockList = new ArrayList<>();\n-\t\ttownBlockList.addAll(townBlocks.values());\n-\t\treturn townBlockList;\n+\t\treturn Collections.unmodifiableList(new ArrayList<>(townBlocks.values()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc0MTc3OnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/Town.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo0NjowM1rOGeGbaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo0NjowM1rOGeGbaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNTc4Nw==", "bodyText": "Can probably simplify with a ternary expression", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434215787", "createdAt": "2020-06-02T22:46:03Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/object/Town.java", "diffHunk": "@@ -1426,22 +1266,21 @@ public PlotGroup getPlotObjectGroupFromID(UUID ID) {\n \t}\n \n \t@Override\n-\tpublic EconomyAccount getAccount() {\n-\t\tif (account == null) {\n-\t\t\t\n-\t\t\tString accountName = StringMgmt.trimMaxLength(Town.ECONOMY_ACCOUNT_PREFIX + getName(), 32);\n-\t\t\tWorld world;\n-\n-\t\t\tif (hasWorld()) {\n-\t\t\t\tworld = BukkitTools.getWorld(getHomeblockWorld().getName());\n-\t\t\t} else {\n-\t\t\t\tworld = BukkitTools.getWorlds().get(0);\n-\t\t\t}\n-\t\t\t\n-\t\t\taccount = new EconomyAccount(accountName, world);\n+\tpublic double getBankCap() {\n+\t\treturn TownySettings.getTownBankCap();\n+\t}\n+\t\n+\tpublic World getWorld() {\n+\t\tif (hasWorld()) {\n+\t\t\treturn BukkitTools.getWorld(getHomeblockWorld().getName());\n+\t\t} else {\n+\t\t\treturn BukkitTools.getWorlds().get(0);\n \t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 415}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc0NjkzOnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/economy/Account.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo0ODozN1rOGeGepA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo0ODozN1rOGeGepA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNjYxMg==", "bodyText": "Unless there is further logic planned to be added in that if-statement, can probably be simplified to return withdraw(...) && collector.deposit(...):", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434216612", "createdAt": "2020-06-02T22:48:37Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/object/economy/Account.java", "diffHunk": "@@ -0,0 +1,320 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import com.palmergames.bukkit.config.ConfigNodes;\n+import com.palmergames.bukkit.towny.TownyEconomyHandler;\n+import com.palmergames.bukkit.towny.TownySettings;\n+import com.palmergames.bukkit.towny.exceptions.EconomyException;\n+import com.palmergames.bukkit.towny.object.EconomyAccount;\n+import com.palmergames.bukkit.towny.object.EconomyHandler;\n+import com.palmergames.bukkit.towny.object.Nameable;\n+import com.palmergames.bukkit.util.BukkitTools;\n+import org.bukkit.World;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Used to facilitate transactions regarding money, \n+ * and the storage of funds.\n+ * \n+ * @author Suneet Tipirneni (Siris)\n+ * @see BankAccount\n+ * @see EconomyAccount\n+ */\n+public abstract class Account implements Nameable {\n+\tprivate static final AccountObserver GLOBAL_OBSERVER = new GlobalAccountObserver();\n+\tprivate final List<AccountObserver> observers = new ArrayList<>();\n+\tprivate AccountAuditor auditor;\n+\t\n+\tString name;\n+\tWorld world;\n+\t\n+\tpublic Account(String name) {\n+\t\tthis.name = name;\n+\t\tobservers.add(GLOBAL_OBSERVER);\n+\t}\n+\t\n+\tpublic Account(String name, World world) {\n+\t\tthis.name = name;\n+\t\tthis.world = world;\n+\t\t\n+\t\t// ALL account transactions will route auditing data through this\n+\t\t// central auditor.\n+\t\tobservers.add(GLOBAL_OBSERVER);\n+\t}\n+\t\n+\t// Template methods\n+\tprotected abstract boolean addMoney(double amount);\n+\tprotected abstract boolean subtractMoney(double amount);\n+\n+\t/**\n+\t * Attempts to add money to the account, \n+\t * and notifies account observers of any changes.\n+\t * \n+\t * @param amount The amount to add.\n+\t * @param reason The reason for adding.\n+\t * @return boolean indicating success.\n+\t * @throws EconomyException On an economy error.\n+\t */\n+\tpublic boolean deposit(double amount, String reason) throws EconomyException {\n+\t\tif (TownySettings.getBoolean(ConfigNodes.ECO_CLOSED_ECONOMY_ENABLED)) {\n+\t\t\treturn payFromServer(amount, reason);\n+\t\t}\n+\t\tif (addMoney(amount)) {\n+\t\t\tnotifyObserversDeposit(this, amount, reason);\n+\t\t\treturn true;\n+\t\t}\n+\t\t\n+\t\treturn false;\n+\t}\n+\n+\t/**\n+\t * Attempts to withdraw money from the account, \n+\t * and notifies account observers of any changes.\n+\t *\n+\t * @param amount The amount to withdraw.\n+\t * @param reason The reason for subtracting.\n+\t * @return boolean indicating success.\n+\t * @throws EconomyException On an economy error.\n+\t */\n+\tpublic boolean withdraw(double amount, String reason) throws EconomyException {\n+\t\tif (TownySettings.getBoolean(ConfigNodes.ECO_CLOSED_ECONOMY_ENABLED)) {\n+\t\t\treturn payToServer(amount, reason);\n+\t\t}\n+\t\tif (subtractMoney(amount)) {\n+\t\t\tnotifyObserversWithdraw(this, amount, reason);\n+\t\t\treturn true;\n+\t\t}\n+\t\t\n+\t\treturn false;\n+\t}\n+\n+\t/**\n+\t * Pays another account the specified funds.\n+\t *\n+\t * @param amount The amount to pay.\n+\t * @param collector The account to pay.\n+\t * @param reason The reason for the pay. \n+\t * @return boolean indicating success.\n+\t * @throws EconomyException On an economy error.\n+\t */\n+\tpublic boolean payTo(double amount, EconomyHandler collector, String reason) throws EconomyException {\n+\t\treturn payTo(amount, collector.getAccount(), reason);\n+\t}\n+\t\n+\tprotected boolean payToServer(double amount, String reason) throws EconomyException {\n+\t\t// Take money out.\n+\t\twithdraw(amount, reason);\n+\t\t\n+\t\t// Put it back into the server.\n+\t\treturn TownyEconomyHandler.addToServer(amount, getBukkitWorld());\n+\t}\n+\t\n+\tprotected boolean payFromServer(double amount, String reason) throws EconomyException {\n+\t\t// Put money in.\n+\t\tdeposit(amount, reason);\n+\t\t\n+\t\t// Remove it from the server economy.\n+\t\treturn TownyEconomyHandler.subtractFromServer(amount, getBukkitWorld());\n+\t}\n+\n+\t/**\n+\t * Pays another account the specified funds.\n+\t *\n+\t * @param amount The amount to pay.\n+\t * @param collector The account to pay.\n+\t * @param reason The reason for the pay.\n+\t * @return boolean indicating success.\n+\t * @throws EconomyException On an economy error.\n+\t */\n+\tpublic boolean payTo(double amount, Account collector, String reason) throws EconomyException {\n+\t\t\n+\t\tif (amount > getHoldingBalance()) {\n+\t\t\tthrow new EconomyException(\"Not enough money\");\n+\t\t}\n+\t\t\n+\t\tif (!withdraw(amount, reason)) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\treturn collector.deposit(amount, reason);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc1MTk4OnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/economy/BankAccount.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo1MDo1OFrOGeGhqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo1MDo1OFrOGeGhqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNzM4NQ==", "bodyText": "Is this supposed to be private?", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434217385", "createdAt": "2020-06-02T22:50:58Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/object/economy/BankAccount.java", "diffHunk": "@@ -0,0 +1,190 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import com.palmergames.bukkit.towny.TownyEconomyHandler;\n+import com.palmergames.bukkit.towny.TownyMessaging;\n+import com.palmergames.bukkit.towny.TownySettings;\n+import com.palmergames.bukkit.towny.exceptions.EconomyException;\n+import com.palmergames.bukkit.towny.object.EconomyAccount;\n+import org.bukkit.World;\n+\n+/**\n+ * A variant of an account that implements\n+ * a checked cap on it's balance, as well as a \n+ * debt system.\n+ */\n+public class BankAccount extends Account {\n+\t\n+\tdouble balanceCap;\n+\tAccount debtAccount = new DebtAccount(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc3ODYxOnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzowNDozOFrOGeGydA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzowNDozOFrOGeGydA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMTY4NA==", "bodyText": "Is this supposed to be private?", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434221684", "createdAt": "2020-06-02T23:04:38Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import net.milkbowl.vault.economy.Economy;\n+import net.milkbowl.vault.economy.EconomyResponse;\n+import org.bukkit.World;\n+\n+@SuppressWarnings(\"deprecation\")\n+public class VaultEconomyAdapter implements EconomyAdapter {\n+\t\n+\tfinal Economy economy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc4MDg2OnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzowNTo0M1rOGeGzzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzowNTo0M1rOGeGzzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjAzMQ==", "bodyText": "Also, I am not sure why an account needs to be created if it doesn't exist, if the end-goal is to mimic deleting the account...", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434222031", "createdAt": "2020-06-02T23:05:43Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import net.milkbowl.vault.economy.Economy;\n+import net.milkbowl.vault.economy.EconomyResponse;\n+import org.bukkit.World;\n+\n+@SuppressWarnings(\"deprecation\")\n+public class VaultEconomyAdapter implements EconomyAdapter {\n+\t\n+\tfinal Economy economy;\n+\t\n+\tpublic VaultEconomyAdapter(Economy economy) {\n+\t\tthis.economy = economy;\n+\t}\n+\n+\t@Override\n+\tpublic boolean add(String accountName, double amount, World world) {\n+\t\treturn economy.depositPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean subtract(String accountName, double amount, World world) {\n+\t\treturn economy.withdrawPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean hasAccount(String accountName) {\n+\t\treturn economy.hasAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic double getBalance(String accountName, World world) {\n+\t\treturn economy.getBalance(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void newAccount(String accountName) {\n+\t\teconomy.createPlayerAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void deleteAccount(String accountName) {\n+\t\t// Attempt to zero the account as Vault provides no delete method.\n+\t\tif (!economy.hasAccount(accountName))\n+\t\t\teconomy.createPlayerAccount(accountName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc4MzA5OnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/economy/TerritoryAccountAuditor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzowNjozN1rOGeG1DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzozOTozMVrOGeHbvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjM0OA==", "bodyText": "Are these TODOs for a later PR?", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434222348", "createdAt": "2020-06-02T23:06:37Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/object/economy/TerritoryAccountAuditor.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import java.util.List;\n+\n+public class TerritoryAccountAuditor implements AccountAuditor {\n+\n+\t@Override\n+\tpublic void withdrew(Account account, double amount, String reason) {\n+\t\t// TODO: Implement Audit Storage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzMjI1Mw==", "bodyText": "Yeah", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434232253", "createdAt": "2020-06-02T23:39:31Z", "author": null, "path": "src/com/palmergames/bukkit/towny/object/economy/TerritoryAccountAuditor.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import java.util.List;\n+\n+public class TerritoryAccountAuditor implements AccountAuditor {\n+\n+\t@Override\n+\tpublic void withdrew(Account account, double amount, String reason) {\n+\t\t// TODO: Implement Audit Storage", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjM0OA=="}, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc4NjAwOnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzowNzo1OFrOGeG20A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzowNzo1OFrOGeG20A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjgwMA==", "bodyText": "Could probably move the double diff out of the if-statement and change it to Math.abs(amount - currentBalance)", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434222800", "createdAt": "2020-06-02T23:07:58Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import net.milkbowl.vault.economy.Economy;\n+import net.milkbowl.vault.economy.EconomyResponse;\n+import org.bukkit.World;\n+\n+@SuppressWarnings(\"deprecation\")\n+public class VaultEconomyAdapter implements EconomyAdapter {\n+\t\n+\tfinal Economy economy;\n+\t\n+\tpublic VaultEconomyAdapter(Economy economy) {\n+\t\tthis.economy = economy;\n+\t}\n+\n+\t@Override\n+\tpublic boolean add(String accountName, double amount, World world) {\n+\t\treturn economy.depositPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean subtract(String accountName, double amount, World world) {\n+\t\treturn economy.withdrawPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean hasAccount(String accountName) {\n+\t\treturn economy.hasAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic double getBalance(String accountName, World world) {\n+\t\treturn economy.getBalance(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void newAccount(String accountName) {\n+\t\teconomy.createPlayerAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void deleteAccount(String accountName) {\n+\t\t// Attempt to zero the account as Vault provides no delete method.\n+\t\tif (!economy.hasAccount(accountName))\n+\t\t\teconomy.createPlayerAccount(accountName);\n+\t\teconomy.withdrawPlayer(accountName, (economy.getBalance(accountName)));\n+\t}\n+\n+\t@Override\n+\tpublic boolean setBalance(String accountName, double amount, World world) {\n+\t\tdouble currentBalance = getBalance(accountName, world);\n+\t\tif (amount > currentBalance) {\n+\t\t\tdouble diff = amount - currentBalance;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc4NzEwOnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzowODozMVrOGeG3eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzowODozMVrOGeG3eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjk3MA==", "bodyText": "Probably should be an else if", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434222970", "createdAt": "2020-06-02T23:08:31Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import net.milkbowl.vault.economy.Economy;\n+import net.milkbowl.vault.economy.EconomyResponse;\n+import org.bukkit.World;\n+\n+@SuppressWarnings(\"deprecation\")\n+public class VaultEconomyAdapter implements EconomyAdapter {\n+\t\n+\tfinal Economy economy;\n+\t\n+\tpublic VaultEconomyAdapter(Economy economy) {\n+\t\tthis.economy = economy;\n+\t}\n+\n+\t@Override\n+\tpublic boolean add(String accountName, double amount, World world) {\n+\t\treturn economy.depositPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean subtract(String accountName, double amount, World world) {\n+\t\treturn economy.withdrawPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean hasAccount(String accountName) {\n+\t\treturn economy.hasAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic double getBalance(String accountName, World world) {\n+\t\treturn economy.getBalance(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void newAccount(String accountName) {\n+\t\teconomy.createPlayerAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void deleteAccount(String accountName) {\n+\t\t// Attempt to zero the account as Vault provides no delete method.\n+\t\tif (!economy.hasAccount(accountName))\n+\t\t\teconomy.createPlayerAccount(accountName);\n+\t\teconomy.withdrawPlayer(accountName, (economy.getBalance(accountName)));\n+\t}\n+\n+\t@Override\n+\tpublic boolean setBalance(String accountName, double amount, World world) {\n+\t\tdouble currentBalance = getBalance(accountName, world);\n+\t\tif (amount > currentBalance) {\n+\t\t\tdouble diff = amount - currentBalance;\n+\t\t\treturn add(accountName, diff, world);\n+\t\t}\n+\t\t\n+\t\tif (amount < currentBalance) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc5Nzc5OnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/utils/BookUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzoxNDoyOVrOGeG-bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzoxNDoyOVrOGeG-bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyNDc0OA==", "bodyText": "I believe this is not supposed to be here...", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434224748", "createdAt": "2020-06-02T23:14:29Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/BookUtil.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.palmergames.bukkit.towny.utils;\n+\n+import com.palmergames.bukkit.towny.object.EconomyHandler;\n+import com.palmergames.bukkit.towny.object.economy.AccountAuditor;\n+import com.palmergames.bukkit.towny.object.economy.Audit;\n+import net.md_5.bungee.api.chat.BaseComponent;\n+import net.md_5.bungee.api.chat.ClickEvent;\n+import net.md_5.bungee.api.chat.ComponentBuilder;\n+\n+import net.md_5.bungee.api.chat.HoverEvent;\n+import net.md_5.bungee.api.chat.TextComponent;\n+import org.bukkit.Material;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.BookMeta;\n+\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BookUtil {\n+\tpublic static ItemStack createAuditBook(EconomyHandler handler) {\n+\t\tAccountAuditor auditor = handler.getAccount().getAuditor();\n+\t\t\n+\t\tItemStack auditBook = new ItemStack(Material.WRITTEN_BOOK);\n+\t\tBookMeta bookMeta = (BookMeta) auditBook.getItemMeta();\n+\t\tbookMeta.setTitle(\"Audit Book\");\n+\t\tbookMeta.setAuthor(\"Me\");\n+\t\t\n+\t\tStringBuilder text = new StringBuilder();\n+\t\tList<BaseComponent[]> components = new ArrayList<>();\n+\t\tComponentBuilder builder = new ComponentBuilder();\n+\t\t\n+\t\tfor (int i = 0; i < auditor.getAuditHistory().size(); i++) {\n+\t\t\tAudit audit = auditor.getAuditHistory().get(i);\n+\n+\t\t\tTextComponent textComponent = new TextComponent(\"\\n\" + audit.toString());\n+\t\t\ttextComponent.setHoverEvent(new HoverEvent(HoverEvent.Action.SHOW_TEXT, new ComponentBuilder(\"Reason: \" + audit.getReason()).create()));\n+\t\t\tbuilder.append(textComponent);\n+\n+\t\t\tif (i % 25 == 0 && i != 0) {\n+\t\t\t\tcomponents.add(builder.create());\n+\t\t\t\tbuilder = new ComponentBuilder();\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\t\n+\t\t\tif (i == auditor.getAuditHistory().size() - 1) {\n+\t\t\t\tcomponents.add(builder.create());\n+\t\t\t}\n+\t\t}\n+\n+\t\tSystem.out.println(\"Component Length = \" + components.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc5ODA4OnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/utils/BookUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzoxNDo0MFrOGeG-mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzoxNDo0MFrOGeG-mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyNDc5Mw==", "bodyText": "This is unused", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434224793", "createdAt": "2020-06-02T23:14:40Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/BookUtil.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.palmergames.bukkit.towny.utils;\n+\n+import com.palmergames.bukkit.towny.object.EconomyHandler;\n+import com.palmergames.bukkit.towny.object.economy.AccountAuditor;\n+import com.palmergames.bukkit.towny.object.economy.Audit;\n+import net.md_5.bungee.api.chat.BaseComponent;\n+import net.md_5.bungee.api.chat.ClickEvent;\n+import net.md_5.bungee.api.chat.ComponentBuilder;\n+\n+import net.md_5.bungee.api.chat.HoverEvent;\n+import net.md_5.bungee.api.chat.TextComponent;\n+import org.bukkit.Material;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.BookMeta;\n+\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BookUtil {\n+\tpublic static ItemStack createAuditBook(EconomyHandler handler) {\n+\t\tAccountAuditor auditor = handler.getAccount().getAuditor();\n+\t\t\n+\t\tItemStack auditBook = new ItemStack(Material.WRITTEN_BOOK);\n+\t\tBookMeta bookMeta = (BookMeta) auditBook.getItemMeta();\n+\t\tbookMeta.setTitle(\"Audit Book\");\n+\t\tbookMeta.setAuthor(\"Me\");\n+\t\t\n+\t\tStringBuilder text = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDgwMjcwOnYy", "diffSide": "RIGHT", "path": "src/com/palmergames/bukkit/towny/utils/BookUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzoxNzowMFrOGeHBdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzoxNzowMFrOGeHBdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyNTUyNQ==", "bodyText": "You could just merge this with the above if-statement.\nIf you don't want to do that, then can attach an else-if for control flow and remove the continue statement.", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434225525", "createdAt": "2020-06-02T23:17:00Z", "author": {"login": "silverwolfg11"}, "path": "src/com/palmergames/bukkit/towny/utils/BookUtil.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.palmergames.bukkit.towny.utils;\n+\n+import com.palmergames.bukkit.towny.object.EconomyHandler;\n+import com.palmergames.bukkit.towny.object.economy.AccountAuditor;\n+import com.palmergames.bukkit.towny.object.economy.Audit;\n+import net.md_5.bungee.api.chat.BaseComponent;\n+import net.md_5.bungee.api.chat.ClickEvent;\n+import net.md_5.bungee.api.chat.ComponentBuilder;\n+\n+import net.md_5.bungee.api.chat.HoverEvent;\n+import net.md_5.bungee.api.chat.TextComponent;\n+import org.bukkit.Material;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.BookMeta;\n+\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BookUtil {\n+\tpublic static ItemStack createAuditBook(EconomyHandler handler) {\n+\t\tAccountAuditor auditor = handler.getAccount().getAuditor();\n+\t\t\n+\t\tItemStack auditBook = new ItemStack(Material.WRITTEN_BOOK);\n+\t\tBookMeta bookMeta = (BookMeta) auditBook.getItemMeta();\n+\t\tbookMeta.setTitle(\"Audit Book\");\n+\t\tbookMeta.setAuthor(\"Me\");\n+\t\t\n+\t\tStringBuilder text = new StringBuilder();\n+\t\tList<BaseComponent[]> components = new ArrayList<>();\n+\t\tComponentBuilder builder = new ComponentBuilder();\n+\t\t\n+\t\tfor (int i = 0; i < auditor.getAuditHistory().size(); i++) {\n+\t\t\tAudit audit = auditor.getAuditHistory().get(i);\n+\n+\t\t\tTextComponent textComponent = new TextComponent(\"\\n\" + audit.toString());\n+\t\t\ttextComponent.setHoverEvent(new HoverEvent(HoverEvent.Action.SHOW_TEXT, new ComponentBuilder(\"Reason: \" + audit.getReason()).create()));\n+\t\t\tbuilder.append(textComponent);\n+\n+\t\t\tif (i % 25 == 0 && i != 0) {\n+\t\t\t\tcomponents.add(builder.create());\n+\t\t\t\tbuilder = new ComponentBuilder();\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\t\n+\t\t\tif (i == auditor.getAuditHistory().size() - 1) {\n+\t\t\t\tcomponents.add(builder.create());\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1274, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}