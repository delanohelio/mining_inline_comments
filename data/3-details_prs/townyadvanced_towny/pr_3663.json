{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODc4MzQ5", "number": 3663, "title": "Refactor/economy", "bodyText": "Description:\n\nMotivation\nThe motivation may seem a bit elusive at first, as detailed explanation is required. We should kick off this explanation with a review of the form of objects rather than the traditional perspective of function.\nLet's see an example.\nI'm going to use the route of inheritance via objects to demonstrate an issue.\nObserve the following code:\npublic class Animal {\n    ...\n}\npublic class AnimalDiet extends Animal {\n    ...\n}\n// A Panda has a Diet\npublic class Panda extends AnimalDiet {\n    ...\n}\n// A Bear has a Diet\npublic class Bear extends AnimalDiet {\n    \n}\nSo for the code above fits our needs, now let's introduce a catalyst for failure:\npublic class CarnivorousAnimal extends Animal {\n    ...\n}\nBut now I need my Bear class to extend CarnivorousAnimal because it is also a carnivore and has a diet. Now I'm going to have to use an inheritance chain:\npublic class CarnivorousAnimal extends AnimalDiet {\n    ...\n}\n\npublic class Bear extends CarnivorousAnimal {\n    ...\n}\nWe now have the problem where we've locked CarnivorousAnimal into objects that only have both a diet and are carnivores. This is where this kind of design breaks down, it's not future proof, and it's highly static as you need to change superclasses in order to make changes in subclasses. So what's the solution to this?\nThere's actually two:\n\nCreate an interface for each attribute (Good if there is variation between classes)\nInstead of using class inheritance make the attributes of the class in the form of a field. (Good if there isn't much variation in implementation)\n\nSo let's fix the code, (I'm going to use a mix of method 1 and 2 for this):\npublic class Animal {\n    ...\n}\npublic class Diet {\n    ...\n}\npublic interface Dietable {\n    Diet getDiet();\n}\npublic interface Carnivorous {\n    ...\n}\npublic class Bear extends Animal implements Carnivorous, Dietable {\n    private Diet diet;\n    \n    @Override \n    public Diet getDiet() {\n        return diet;\n    }\n}\nNotice how now the clarity of the object inheritance has been restored whilst at the same time allowing for future changes to be easier.\nThis same idea has been applied to TownyEconomyObject, for the same or similar reasons as outlined above. In addition, new interfaces have been introduced to further declutter a rather messy inheritance chain.\nNew Interfaces:\n\nTownBlockOwner - Now applied to Resident and Town to generify uses.\nEconomyHandler - Used to show that an object can handle economic interactions.\nPermissible - Used to show that an object can handle permission interactions.\n\nWith the addition of these interfaces the main Towny objects now directly inherit from TownyObject providing a clear and concise object hierarchy that is not only aesthetically pleasing but also modular enough for future expansion.\n\n\n I have tested this pull request for defects on a server. (Reccomended that others test as well)\n\n\nBy making this pull request, I represent that I have the right to waive copyright and related rights to my contribution, and agree that all copyright and related rights in my contributions are waived, and I acknowledge that the TownyAdvanced organization has the copyright to use and modify my contribution under the Towny License for perpetuity.", "createdAt": "2020-01-24T15:03:30Z", "url": "https://github.com/TownyAdvanced/Towny/pull/3663", "merged": true, "mergeCommit": {"oid": "734a3f61682d06094a2825a947607cdb585055eb"}, "closed": true, "closedAt": "2020-01-29T03:21:17Z", "author": null, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb89lPKAH2gAyMzY2ODc4MzQ5OjhhN2JjNjhiMjVmOTI1NGRhY2M0NjQ2ZWIxY2Y5YzQ1ZjM5NmIwMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-61QjAH2gAyMzY2ODc4MzQ5OjUzOWFmODYyZjQwY2VjZjMzMmYzYTUzYjEzZDY0NTMyZDM0YjQ5N2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a7bc68b25f9254dacc4646eb1cf9c45f396b006", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/8a7bc68b25f9254dacc4646eb1cf9c45f396b006", "committedDate": "2020-01-22T22:35:16Z", "message": "Mostly broken code\n\nJust messing with some ideas, have static EconomyManager and an interface. The latter is used for class specific items such as econ name, and the other is used for function that are class agnostic."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21685615ece9eb1aee764c3f3d9913b00416d49e", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/21685615ece9eb1aee764c3f3d9913b00416d49e", "committedDate": "2020-01-23T17:13:16Z", "message": "This is a scrapped idea"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c11e4a5c80647df9a98d3117ba7579349b917cc", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/3c11e4a5c80647df9a98d3117ba7579349b917cc", "committedDate": "2020-01-23T21:19:07Z", "message": "Refactored a bunch of code\n\nMade it so the account field is now implemented in most areas in towny."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "881457ba5929cb7f5fd71d814e8305ff4649ff33", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/881457ba5929cb7f5fd71d814e8305ff4649ff33", "committedDate": "2020-01-24T00:33:03Z", "message": "Code sucessfully compiles\n\nAdded two new interfaces\n- Permissible\n- TownBlockOwner (A port from the original class)\n\nSince both of these interfaces are implemented, Resident and Town now both directly inherit from TownyObject."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af4d53fa14a44ddcde8dca4bcf4bed7030af3658", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/af4d53fa14a44ddcde8dca4bcf4bed7030af3658", "committedDate": "2020-01-24T00:34:20Z", "message": "Merge branches 'feature/economy-overhaul' and 'master' of https://github.com/TownyAdvanced/Towny into feature/economy-overhaul"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9568cdbe2d42fa09bcd71bdffbf8b1a17ac10068", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/9568cdbe2d42fa09bcd71bdffbf8b1a17ac10068", "committedDate": "2020-01-24T01:29:01Z", "message": "Fixed initialization bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f706d75742616f4149d89dae6dc504b77d6af102", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/f706d75742616f4149d89dae6dc504b77d6af102", "committedDate": "2020-01-24T01:42:02Z", "message": "Nation now conforms to the Economy interface."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9637603b78b28b6215619bd52d42883ad938ccde", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/9637603b78b28b6215619bd52d42883ad938ccde", "committedDate": "2020-01-24T02:49:49Z", "message": "Added javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aa6e6c616dc221f6dd4d5f99c0ce1237888a74c", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/2aa6e6c616dc221f6dd4d5f99c0ce1237888a74c", "committedDate": "2020-01-24T02:53:58Z", "message": "Fixed compiler errors from nation transition."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b184cb1bdda51854ddc0b6798374bc283ffd2930", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/b184cb1bdda51854ddc0b6798374bc283ffd2930", "committedDate": "2020-01-24T13:29:33Z", "message": "Changed Economy to EconomyHandler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MDE5NjAy", "url": "https://github.com/TownyAdvanced/Towny/pull/3663#pullrequestreview-348019602", "createdAt": "2020-01-24T15:13:10Z", "commit": {"oid": "b184cb1bdda51854ddc0b6798374bc283ffd2930"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToxMzoxMFrOFhgy2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNToxNjoyOVrOFhg53Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY4NDYzNQ==", "bodyText": "Why are these getting nuked? There will certainly be plugins using the getEconomyName() to manipulate the eco account.", "url": "https://github.com/TownyAdvanced/Towny/pull/3663#discussion_r370684635", "createdAt": "2020-01-24T15:13:10Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/object/Nation.java", "diffHunk": "@@ -565,21 +566,6 @@ public boolean hasResident(String name) {\n \t\treturn false;\n \t}\n \n-    @Override\n-    protected World getBukkitWorld() {\n-        if (hasCapital() && getCapital().hasWorld()) {\n-            return BukkitTools.getWorld(getCapital().getWorld().getName());\n-        } else {\n-            return super.getBukkitWorld();\n-        }\n-    }\n-\n-\n-\t@Override\n-\tpublic String getEconomyName() {\n-\t\treturn StringMgmt.trimMaxLength(Nation.ECONOMY_ACCOUNT_PREFIX + getName(), 32);\n-\t}\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b184cb1bdda51854ddc0b6798374bc283ffd2930"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY4NTQ2MA==", "bodyText": "This file got formatted throughout.", "url": "https://github.com/TownyAdvanced/Towny/pull/3663#discussion_r370685460", "createdAt": "2020-01-24T15:14:36Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/object/EconomyAccount.java", "diffHunk": "@@ -1,201 +1,220 @@\n-package com.palmergames.bukkit.towny.object;\r\n-\r\n-import com.palmergames.bukkit.config.ConfigNodes;\r\n-import com.palmergames.bukkit.towny.TownyEconomyHandler;\r\n-import com.palmergames.bukkit.towny.TownyLogger;\r\n-import com.palmergames.bukkit.towny.TownySettings;\r\n-import com.palmergames.bukkit.towny.exceptions.EconomyException;\r\n-import com.palmergames.bukkit.util.BukkitTools;\r\n-import org.bukkit.World;\r\n-\r\n-/**\r\n- * Economy object which provides an interface with the Economy Handler.\r\n- *\r\n- * @author ElgarL, Shade\r\n- *\r\n- */\r\n-public class TownyEconomyObject extends TownyObject {\r\n-\tpublic static final TownyServerAccount SERVER_ACCOUNT = new TownyServerAccount();\r\n-\t\r\n-\tprotected TownyEconomyObject(String name) {\r\n-\t\tsuper(name);\r\n-\t}\r\n-\t\r\n-\tprivate static final class TownyServerAccount extends TownyEconomyObject {\r\n-\t\tTownyServerAccount() {\r\n-\t\t\tsuper(TownySettings.getString(ConfigNodes.ECO_CLOSED_ECONOMY_SERVER_ACCOUNT));\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Tries to pay from the players holdings\r\n-\t *\r\n-\t * @param amount value to deduct from the player's account\r\n-\t * @param reason leger memo stating why amount is deducted\r\n-\t * @return true if successful\r\n-\t * @throws EconomyException if the transaction fails\r\n-\t */\r\n-\tpublic boolean pay(double amount, String reason) throws EconomyException {\r\n-\t\tif (TownySettings.getBoolean(ConfigNodes.ECO_CLOSED_ECONOMY_ENABLED)) {\r\n-\t\t\treturn payTo(amount, SERVER_ACCOUNT, reason);\r\n-\t\t} else {\r\n-\t\t\tboolean payed = _pay(amount);\r\n-\t\t\tif (payed)\r\n-\t\t\t\tTownyLogger.getInstance().logMoneyTransaction(this, amount, null, reason);\r\n-\t\t\treturn payed;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tprivate boolean _pay(double amount) throws EconomyException {\r\n-\t\tif (canPayFromHoldings(amount)) {\r\n-\t\t\tif (TownyEconomyHandler.isActive())\r\n-\t\t\t\tif (amount > 0) {\r\n-\t\t\t\t\treturn TownyEconomyHandler.subtract(getEconomyName(), amount, getBukkitWorld());\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\treturn TownyEconomyHandler.add(getEconomyName(), Math.abs(amount), getBukkitWorld());\r\n-\t\t\t\t}\r\n-\t\t}\r\n-\t\treturn false;\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * When collecting money add it to the Accounts bank\r\n-\t *\r\n-\t * @param amount currency to collect\r\n-\t * @param reason memo regarding transaction\r\n-\t * @return collected or pay to server account   \r\n-\t * @throws EconomyException if transaction fails\r\n-\t */\r\n-\tpublic boolean collect(double amount, String reason) throws EconomyException {\r\n-\t\tif (TownySettings.getBoolean(ConfigNodes.ECO_CLOSED_ECONOMY_ENABLED)) {\r\n-\t\t\treturn SERVER_ACCOUNT.payTo(amount, this, reason);\r\n-\t\t} else {\r\n-\t\t\tboolean collected = _collect(amount);\r\n-\t\t\tif (collected)\r\n-\t\t\t\tTownyLogger.getInstance().logMoneyTransaction(null, amount, this, reason);\r\n-\t\t\treturn collected;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tprivate boolean _collect(double amount) throws EconomyException {\r\n-\t\treturn TownyEconomyHandler.add(getEconomyName(), amount, getBukkitWorld());\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * When one account is paying another account(Taxes/Plot Purchasing)\r\n-\t *\r\n-\t * @param amount currency to be collected\r\n-\t * @param collector recipient of transaction\r\n-\t * @param reason memo regarding transaction\r\n-\t * @return true if successfully payed amount to collector.\r\n-\t * @throws EconomyException if transaction fails\r\n-\t */\r\n-\tpublic boolean payTo(double amount, TownyEconomyObject collector, String reason) throws EconomyException {\r\n-\t\tboolean payed = _payTo(amount, collector);\r\n-\t\tif (payed)\r\n-\t\t\tTownyLogger.getInstance().logMoneyTransaction(this, amount, collector, reason);\r\n-\t\treturn payed;\r\n-\t}\r\n-\r\n-\tprivate boolean _payTo(double amount, TownyEconomyObject collector) throws EconomyException {\r\n-\t\tif (_pay(amount)) {\r\n-\t\t\tif (!collector._collect(amount)) {\r\n-\t\t\t\t_collect(amount); //Transaction failed. Refunding amount.\r\n-\t\t\t\treturn false;\r\n-\t\t\t} else {\r\n-\t\t\t\treturn true;\r\n-\t\t\t}\r\n-\t\t} else {\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Get a valid economy account name for this object.\r\n-\t *\r\n-\t * @return account name\r\n-\t */\r\n-\tpublic String getEconomyName() {\r\n-\t\treturn getName();\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Fetch the current world for this object\r\n-\t *\r\n-\t * @return Bukkit world for the object\r\n-\t */\r\n-\tprotected World getBukkitWorld() {\r\n-\t\treturn BukkitTools.getWorlds().get(0);\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Set balance and log this action\r\n-\t *\r\n-\t * @param amount currency to transact\r\n-\t * @param reason memo regarding transaction\r\n-\t * @return true, or pay/collect balance for given reason\r\n-\t * @throws EconomyException if transaction fails\r\n-\t */\r\n-\tpublic boolean setBalance(double amount, String reason) throws EconomyException {\r\n-\t\tdouble balance = getHoldingBalance();\r\n-\t\tdouble diff = amount - balance;\r\n-\t\tif (diff > 0) {\r\n-\t\t\t// Adding to\r\n-\t\t\treturn collect(diff, reason);\r\n-\t\t} else if (balance > amount) {\r\n-\t\t\t// Subtracting from\r\n-\t\t\tdiff = -diff;\r\n-\t\t\treturn pay(diff, reason);\r\n-\t\t} else {\r\n-\t\t\t// Same amount, do nothing.\r\n-\t\t\treturn true;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/*\r\n-\tprivate boolean _setBalance(double amount) {\r\n-\t\treturn TownyEconomyHandler.setBalance(getEconomyName(), amount, getBukkitWorld());\r\n-\t}\r\n-\t*/\r\n-\r\n-\tpublic double getHoldingBalance() throws EconomyException {\r\n-\t\ttry {\r\n-\t\t\treturn TownyEconomyHandler.getBalance(getEconomyName(), getBukkitWorld());\r\n-\t\t} catch (NoClassDefFoundError e) {\r\n-\t\t\te.printStackTrace();\r\n-\t\t\tthrow new EconomyException(\"Economy error getting holdings for \" + getEconomyName());\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Does this object have enough in it's economy account to pay?\r\n-\t *\r\n-\t * @param amount currency to check for\r\n-\t * @return true if there is enough.\r\n-\t * @throws EconomyException if failure\r\n-\t */\r\n-\tpublic boolean canPayFromHoldings(double amount) throws EconomyException {\r\n-\t\treturn TownyEconomyHandler.hasEnough(getEconomyName(), amount, getBukkitWorld());\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Used To Get Balance of Players holdings in String format for printing\r\n-\t *\r\n-\t * @return current account balance formatted in a string.\r\n-\t */\r\n-\tpublic String getHoldingFormattedBalance() {\r\n-\t\ttry {\r\n-\t\t\treturn TownyEconomyHandler.getFormattedBalance(getHoldingBalance());\r\n-\t\t} catch (EconomyException e) {\r\n-\t\t\treturn \"Error Accessing Bank Account\";\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Attempt to delete the economy account.\r\n-\t */\r\n-\tpublic void removeAccount() {\r\n-\t\tTownyEconomyHandler.removeAccount(getEconomyName());\r\n-\t}\r\n-\r\n-}\r\n+package com.palmergames.bukkit.towny.object;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b184cb1bdda51854ddc0b6798374bc283ffd2930"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY4NjQyOQ==", "bodyText": "Same as nation, these should probably be left in, maybe deprecated.", "url": "https://github.com/TownyAdvanced/Towny/pull/3663#discussion_r370686429", "createdAt": "2020-01-24T15:16:29Z", "author": {"login": "LlmDl"}, "path": "src/com/palmergames/bukkit/towny/object/Town.java", "diffHunk": "@@ -1051,21 +1079,7 @@ public boolean isPublic() {\n \n \t\treturn isPublic;\n \t}\n-\n-    @Override\n-    protected World getBukkitWorld() {\n-        if (hasWorld()) {\n-            return BukkitTools.getWorld(getWorld().getName());\n-        } else {\n-            return super.getBukkitWorld();\n-        }\n-    }\n-\n-\t@Override\n-\tpublic String getEconomyName() {\n-\t\treturn StringMgmt.trimMaxLength(Town.ECONOMY_ACCOUNT_PREFIX + getName(), 32);\n-\t}\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b184cb1bdda51854ddc0b6798374bc283ffd2930"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24ef434138784d4a06e584aa71f698a5e3ea9e7d", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/24ef434138784d4a06e584aa71f698a5e3ea9e7d", "committedDate": "2020-01-24T15:34:22Z", "message": "Restore legacy methods via deprecation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a56f23e3864b37a5b7d8735b5457449a992fb13", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/7a56f23e3864b37a5b7d8735b5457449a992fb13", "committedDate": "2020-01-24T15:37:01Z", "message": "Changed EconomyAccount.getEconomyName() to EconomyAccount.getName()\n\nthis limits verbosity and repetition in the method calls."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4117005270b5d7f914d839f084c85dde84fa068b", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/4117005270b5d7f914d839f084c85dde84fa068b", "committedDate": "2020-01-24T19:37:44Z", "message": "Added deprecation documentation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8f25e31fbe5a4b5af24cfd8cfe97cb62eed04aa", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/c8f25e31fbe5a4b5af24cfd8cfe97cb62eed04aa", "committedDate": "2020-01-24T21:17:35Z", "message": "Re-add support for economy logging."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bf863a99cb9e3ac57b3de473269a499900dab7b", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/3bf863a99cb9e3ac57b3de473269a499900dab7b", "committedDate": "2020-01-24T21:34:10Z", "message": "Cleaned up logging changes\n\n- EconomyAccount now conforms to EconomyHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edf02973769c80e370c0940af37fb2fcaa634444", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/edf02973769c80e370c0940af37fb2fcaa634444", "committedDate": "2020-01-24T21:37:43Z", "message": "Revert \"Cleaned up logging changes\"\n\nThis reverts commit 3bf863a99cb9e3ac57b3de473269a499900dab7b."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d3cff64a024d2f3c852be0266df5f8bc7f9e1d", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/e9d3cff64a024d2f3c852be0266df5f8bc7f9e1d", "committedDate": "2020-01-24T21:38:20Z", "message": "Auto stash before revert of \"Cleaned up logging changes\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a42b19f8ac383e800b900cc3a8039f9db89ed99", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/7a42b19f8ac383e800b900cc3a8039f9db89ed99", "committedDate": "2020-01-24T21:43:30Z", "message": "Fix econ logging (again)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1556cf0da3ec1c3abe3fa198d16fe048bea6f0d2", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/1556cf0da3ec1c3abe3fa198d16fe048bea6f0d2", "committedDate": "2020-01-24T21:44:55Z", "message": "Fix econ logging (again)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30d69104b91f26b2e44b2550fa946f70bda453a0", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/30d69104b91f26b2e44b2550fa946f70bda453a0", "committedDate": "2020-01-24T21:45:59Z", "message": "Merge remote-tracking branch 'upstream/refactor/economy' into refactor/economy\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/TownyLogger.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c30bae383cc6532d027f774cf68ddd3b70db6d1c", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/c30bae383cc6532d027f774cf68ddd3b70db6d1c", "committedDate": "2020-01-24T21:46:44Z", "message": "Merge remote-tracking branch 'upstream/refactor/economy' into refactor/economy\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/TownyLogger.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "310b3ef62d5d49226eae88fe7f59226498e45b2c", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/310b3ef62d5d49226eae88fe7f59226498e45b2c", "committedDate": "2020-01-24T21:47:18Z", "message": "Merge remote-tracking branch 'upstream/refactor/economy' into refactor/economy\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/TownyLogger.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf1070160ec4f5a896f405b3be19fdbe6976dfc5", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/bf1070160ec4f5a896f405b3be19fdbe6976dfc5", "committedDate": "2020-01-25T00:46:49Z", "message": "Fix NPE from null log values."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93838d315031cd52ce9153fe31ac7bb89a04f348", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/93838d315031cd52ce9153fe31ac7bb89a04f348", "committedDate": "2020-01-25T00:47:04Z", "message": "Merge branches 'master' and 'refactor/economy' of https://github.com/TownyAdvanced/Towny into refactor/economy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b301a56e7816938328dcc5bafca321678440738", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/7b301a56e7816938328dcc5bafca321678440738", "committedDate": "2020-01-25T00:58:12Z", "message": "remove debug code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71113c0124dcf31c14e96ae67b4ceab32fef007f", "author": {"user": {"login": "LlmDl", "name": null}}, "url": "https://github.com/TownyAdvanced/Towny/commit/71113c0124dcf31c14e96ae67b4ceab32fef007f", "committedDate": "2020-01-25T21:41:27Z", "message": "Remove unused imports and unused method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "183d70ae8142f79e7fbf5a8a37cdfef9c1ac84e7", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/183d70ae8142f79e7fbf5a8a37cdfef9c1ac84e7", "committedDate": "2020-01-29T00:27:39Z", "message": "Create an alias for `TownyInviteSender` and `TownyInviteReceiver`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "539af862f40cecf332f3a53b13d64532d34b497d", "author": {"user": null}, "url": "https://github.com/TownyAdvanced/Towny/commit/539af862f40cecf332f3a53b13d64532d34b497d", "committedDate": "2020-01-29T00:30:54Z", "message": "Merge branch 'master' into refactor/economy\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/command/NationCommand.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3224, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}