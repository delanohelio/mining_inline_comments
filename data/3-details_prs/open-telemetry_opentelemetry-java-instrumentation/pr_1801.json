{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MTgzNjEx", "number": 1801, "title": "Update WithSpan instrumentation to prevent multiple SERVER and CLIENT spans", "bodyText": "Peeling out more things from #1643", "createdAt": "2020-11-29T21:31:03Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1801", "merged": true, "mergeCommit": {"oid": "c07da390c04e8850cc6843f318e445098baae284"}, "closed": true, "closedAt": "2020-12-01T06:05:35Z", "author": {"login": "trask"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhXk1RgH2gAyNTI5MTgzNjExOjA3YjliNDU0ZDMyMTAxZDY0ZDA4YzRmODQ4N2NkNDNiMGI4MTM5NDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhzn6CgFqTU0MTUxMTk0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "07b9b454d32101d64d08c4f8487cd43b0b813942", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/07b9b454d32101d64d08c4f8487cd43b0b813942", "committedDate": "2020-11-29T21:24:47Z", "message": "Make WithSpan instrumentation SERVER aware"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b610a76b266f6c8733e070f90999ef3e3309fb1", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9b610a76b266f6c8733e070f90999ef3e3309fb1", "committedDate": "2020-11-29T21:29:06Z", "message": "Also CLIENT aware"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f1b827a73032616729b5b64f3a2b27f101aeb54", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3f1b827a73032616729b5b64f3a2b27f101aeb54", "committedDate": "2020-11-29T21:48:14Z", "message": "Spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTc1Nzcx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1801#pullrequestreview-540575771", "createdAt": "2020-11-30T03:17:15Z", "commit": {"oid": "3f1b827a73032616729b5b64f3a2b27f101aeb54"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNjQ4MzI5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1801#pullrequestreview-540648329", "createdAt": "2020-11-30T07:24:21Z", "commit": {"oid": "3f1b827a73032616729b5b64f3a2b27f101aeb54"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzoyNDoyMlrOH7ue9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzoyNDoyMlrOH7ue9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4OTYyMg==", "bodyText": "See #1806", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1801#discussion_r532389622", "createdAt": "2020-11-30T07:24:22Z", "author": {"login": "iNikem"}, "path": "instrumentation/opentelemetry-annotations-1.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/otelannotations/WithSpanTracer.java", "diffHunk": "@@ -22,6 +24,42 @@ public static WithSpanTracer tracer() {\n \n   private static final Logger log = LoggerFactory.getLogger(WithSpanTracer.class);\n \n+  public io.opentelemetry.api.trace.Span startSpan(\n+      Context context,\n+      WithSpan applicationAnnotation,\n+      Method method,\n+      io.opentelemetry.api.trace.Span.Kind kind) {\n+\n+    if (kind == io.opentelemetry.api.trace.Span.Kind.SERVER\n+        && getCurrentServerSpan(context) != null) {\n+      return io.opentelemetry.api.trace.Span.getInvalid();\n+    }\n+    if (kind == io.opentelemetry.api.trace.Span.Kind.CLIENT\n+        && context.get(CONTEXT_CLIENT_SPAN_KEY) != null) {\n+      return io.opentelemetry.api.trace.Span.getInvalid();\n+    }\n+    return startSpan(spanNameForMethodWithAnnotation(applicationAnnotation, method), kind);\n+  }\n+\n+  /**\n+   * Creates new scoped context, based on the given context, with the given span.\n+   *\n+   * <p>Attaches new context to the request to avoid creating duplicate server spans.\n+   */\n+  public Scope startScope(\n+      Context context,\n+      io.opentelemetry.api.trace.Span span,\n+      io.opentelemetry.api.trace.Span.Kind kind) {\n+\n+    if (kind == io.opentelemetry.api.trace.Span.Kind.SERVER) {\n+      return context.with(CONTEXT_SERVER_SPAN_KEY, span).with(span).makeCurrent();\n+    }\n+    if (kind == io.opentelemetry.api.trace.Span.Kind.CLIENT) {\n+      return context.with(CONTEXT_CLIENT_SPAN_KEY, span).with(span).makeCurrent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f1b827a73032616729b5b64f3a2b27f101aeb54"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96301472c907dc0ebb3f32bf6e22014246568fba", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/96301472c907dc0ebb3f32bf6e22014246568fba", "committedDate": "2020-11-30T23:57:43Z", "message": "Don't put invalid span into scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b047a0c0d9f86242ae06907c26754f9e6dd6eda", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9b047a0c0d9f86242ae06907c26754f9e6dd6eda", "committedDate": "2020-12-01T02:49:15Z", "message": "Return Context from startSpan"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNTExOTQ1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1801#pullrequestreview-541511945", "createdAt": "2020-12-01T06:05:29Z", "commit": {"oid": "9b047a0c0d9f86242ae06907c26754f9e6dd6eda"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2099, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}