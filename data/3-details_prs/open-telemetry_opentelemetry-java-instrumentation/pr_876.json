{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxOTE3NTA3", "number": 876, "title": "Use assertJ in tests", "bodyText": "Use assertJ assertions instead of junit5", "createdAt": "2020-08-03T03:15:40Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/876", "merged": true, "mergeCommit": {"oid": "49017cf864bb2990b9b91779c3b0d7a07f23d4f1"}, "closed": true, "closedAt": "2020-08-03T19:09:42Z", "author": {"login": "mabdinur"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7JP79AH2gAyNDYxOTE3NTA3OjE2MzRiM2FjOTVmMzk0ZjFmZTU3ODdiODQzMDY1YTg0NjNmYmFhYTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7W6gnAFqTQ2MDI3NDIxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1634b3ac95f394f1fe5787b843065a8463fbaaa6", "author": {"user": {"login": "mabdinur", "name": "Munir Abdinur"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1634b3ac95f394f1fe5787b843065a8463fbaaa6", "committedDate": "2020-08-03T03:14:10Z", "message": "use assertj in tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc5d68ef9e3334dbec0e669ca572ea4592d11d97", "author": {"user": {"login": "mabdinur", "name": "Munir Abdinur"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bc5d68ef9e3334dbec0e669ca572ea4592d11d97", "committedDate": "2020-08-03T03:22:31Z", "message": "change method access to package private"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5ODU3ODU3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/876#pullrequestreview-459857857", "createdAt": "2020-08-03T08:54:03Z", "commit": {"oid": "bc5d68ef9e3334dbec0e669ca572ea4592d11d97"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwODo1NDowM1rOG6xb0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwODo1NDoxOVrOG6xcWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4MDUzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          assertThat(context.containsBean(\"customTestTracer\")).isEqualTo(true);\n          \n          \n            \n                          assertThat(context.containsBean(\"customTestTracer\")).isTrue();", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/876#discussion_r464280531", "createdAt": "2020-08-03T08:54:03Z", "author": {"login": "anuraaga"}, "path": "instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java", "diffHunk": "@@ -41,45 +40,39 @@ public Tracer customTestTracer() {\n   private final ApplicationContextRunner contextRunner = new ApplicationContextRunner();\n \n   @Test\n-  public void should_NOT_initalize_otelTracer_if_tracer_bean_exists() {\n+  @DisplayName(\"when Application Context contains Tracer bean should NOT initalize otelTracer\")\n+  void customTracer() {\n     this.contextRunner\n         .withUserConfiguration(CustomTracerConfiguration.class)\n         .withConfiguration(AutoConfigurations.of(TracerAutoConfiguration.class))\n         .run(\n             (context) -> {\n-              assertTrue(\n-                  \"Application Context contains customTestTracer bean\",\n-                  context.containsBean(\"customTestTracer\"));\n-\n-              assertFalse(\n-                  \"Application Context DOES NOT contain the otelTracer bean defined in TracerAutoConfiguration\",\n-                  context.containsBean(\"otelTracer\"));\n+              assertThat(context.containsBean(\"customTestTracer\")).isEqualTo(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc5d68ef9e3334dbec0e669ca572ea4592d11d97"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4MDU5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          assertThat(context.containsBean(\"otelTracer\")).isEqualTo(false);\n          \n          \n            \n                          assertThat(context.containsBean(\"otelTracer\")).isFalse();", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/876#discussion_r464280596", "createdAt": "2020-08-03T08:54:10Z", "author": {"login": "anuraaga"}, "path": "instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java", "diffHunk": "@@ -41,45 +40,39 @@ public Tracer customTestTracer() {\n   private final ApplicationContextRunner contextRunner = new ApplicationContextRunner();\n \n   @Test\n-  public void should_NOT_initalize_otelTracer_if_tracer_bean_exists() {\n+  @DisplayName(\"when Application Context contains Tracer bean should NOT initalize otelTracer\")\n+  void customTracer() {\n     this.contextRunner\n         .withUserConfiguration(CustomTracerConfiguration.class)\n         .withConfiguration(AutoConfigurations.of(TracerAutoConfiguration.class))\n         .run(\n             (context) -> {\n-              assertTrue(\n-                  \"Application Context contains customTestTracer bean\",\n-                  context.containsBean(\"customTestTracer\"));\n-\n-              assertFalse(\n-                  \"Application Context DOES NOT contain the otelTracer bean defined in TracerAutoConfiguration\",\n-                  context.containsBean(\"otelTracer\"));\n+              assertThat(context.containsBean(\"customTestTracer\")).isEqualTo(true);\n+              assertThat(context.containsBean(\"otelTracer\")).isEqualTo(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc5d68ef9e3334dbec0e669ca572ea4592d11d97"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4MDY2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          assertThat(context.containsBean(\"otelTracer\")).isEqualTo(true);\n          \n          \n            \n                          assertThat(context.containsBean(\"otelTracer\")).isTrue();", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/876#discussion_r464280666", "createdAt": "2020-08-03T08:54:19Z", "author": {"login": "anuraaga"}, "path": "instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java", "diffHunk": "@@ -41,45 +40,39 @@ public Tracer customTestTracer() {\n   private final ApplicationContextRunner contextRunner = new ApplicationContextRunner();\n \n   @Test\n-  public void should_NOT_initalize_otelTracer_if_tracer_bean_exists() {\n+  @DisplayName(\"when Application Context contains Tracer bean should NOT initalize otelTracer\")\n+  void customTracer() {\n     this.contextRunner\n         .withUserConfiguration(CustomTracerConfiguration.class)\n         .withConfiguration(AutoConfigurations.of(TracerAutoConfiguration.class))\n         .run(\n             (context) -> {\n-              assertTrue(\n-                  \"Application Context contains customTestTracer bean\",\n-                  context.containsBean(\"customTestTracer\"));\n-\n-              assertFalse(\n-                  \"Application Context DOES NOT contain the otelTracer bean defined in TracerAutoConfiguration\",\n-                  context.containsBean(\"otelTracer\"));\n+              assertThat(context.containsBean(\"customTestTracer\")).isEqualTo(true);\n+              assertThat(context.containsBean(\"otelTracer\")).isEqualTo(false);\n             });\n   }\n \n   @Test\n-  public void should_contain_otelTracer_bean() {\n+  @DisplayName(\"when Application Context DOES NOT contain Tracer bean should initialize otelTracer\")\n+  void initalizeTracer() {\n     this.contextRunner\n         .withConfiguration(AutoConfigurations.of(TracerAutoConfiguration.class))\n         .run(\n             (context) -> {\n-              assertTrue(\n-                  \"Application Context contains otelTracer bean\",\n-                  context.containsBean(\"otelTracer\"));\n+              assertThat(context.containsBean(\"otelTracer\")).isEqualTo(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc5d68ef9e3334dbec0e669ca572ea4592d11d97"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e58497d96295dba31d9e08b5a86603f5daf7e078", "author": {"user": {"login": "mabdinur", "name": "Munir Abdinur"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e58497d96295dba31d9e08b5a86603f5daf7e078", "committedDate": "2020-08-03T15:07:14Z", "message": "Update instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d2236e09fc9d989aaf021177f12837e13812d11", "author": {"user": {"login": "mabdinur", "name": "Munir Abdinur"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8d2236e09fc9d989aaf021177f12837e13812d11", "committedDate": "2020-08-03T15:07:22Z", "message": "Update instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "730a2baa3905dcb251b9a70913a782c1ef9629c4", "author": {"user": {"login": "mabdinur", "name": "Munir Abdinur"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/730a2baa3905dcb251b9a70913a782c1ef9629c4", "committedDate": "2020-08-03T15:07:29Z", "message": "Update instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjc0MjE1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/876#pullrequestreview-460274215", "createdAt": "2020-08-03T19:09:26Z", "commit": {"oid": "730a2baa3905dcb251b9a70913a782c1ef9629c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2917, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}