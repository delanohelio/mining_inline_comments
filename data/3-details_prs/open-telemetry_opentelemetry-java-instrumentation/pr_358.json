{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMjEyMDg1", "number": 358, "title": "Clarifications about various test tasks", "bodyText": "In addition this commit replaces eager tasks generation for running tests using different java versions with rule based task created on-demand.\nThe previous approach created thousands of tasks, only a portion of which would run. And even those tasks were unnecessary in my opinion. This PR creates only one umbrella task.\nThe downside of this approach is that you cannot run tests on different java versions in one gradle invocation: gradlew test testJava11. The upside - somewhat faster gradle runs due to greatly reduced tasks count. E.g. on my machine dry run gradlew clean testJava11 -m went from 14s to 2s.", "createdAt": "2020-04-28T16:00:15Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/358", "merged": true, "mergeCommit": {"oid": "6e1c0436da1a3fda9fc436a6dc6291e5a88b807f"}, "closed": true, "closedAt": "2020-04-29T01:11:19Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccF8b9AH2gAyNDEwMjEyMDg1OjZhM2Q2YTJkZGUxYjkzN2Y3ZWU0NmFmY2VmMjliNmU3ZDg3ZGZkYzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccasCwAFqTQwMjgxMzgzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6a3d6a2dde1b937f7ee46afcef29b6e7d87dfdc2", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6a3d6a2dde1b937f7ee46afcef29b6e7d87dfdc2", "committedDate": "2020-04-28T15:51:30Z", "message": "Clarifications about various test tasks\n\nIn addition this commit replaces eager tasks generation for running tests using different java versions with rule based task created on-demand."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7577a9e4eca7372caadc1b25747f80a5b390f6f5", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7577a9e4eca7372caadc1b25747f80a5b390f6f5", "committedDate": "2020-04-28T19:47:45Z", "message": "Test fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8efdebf628c7952a3156e310d5b0811db100214b", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8efdebf628c7952a3156e310d5b0811db100214b", "committedDate": "2020-04-28T19:28:36Z", "message": "Test fixes"}, "afterCommit": {"oid": "7577a9e4eca7372caadc1b25747f80a5b390f6f5", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7577a9e4eca7372caadc1b25747f80a5b390f6f5", "committedDate": "2020-04-28T19:47:45Z", "message": "Test fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjAxODk0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/358#pullrequestreview-402201894", "createdAt": "2020-04-28T20:51:36Z", "commit": {"oid": "7577a9e4eca7372caadc1b25747f80a5b390f6f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f771488628868246149ee6d08244fd18c3b073f", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/5f771488628868246149ee6d08244fd18c3b073f", "committedDate": "2020-04-29T00:23:49Z", "message": "Merge branch 'master' into tests-doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMzEzMDY1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/358#pullrequestreview-402313065", "createdAt": "2020-04-29T01:10:54Z", "commit": {"oid": "5f771488628868246149ee6d08244fd18c3b073f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyODEzODMw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/358#pullrequestreview-402813830", "createdAt": "2020-04-29T16:01:29Z", "commit": {"oid": "5f771488628868246149ee6d08244fd18c3b073f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjowMToyOVrOGOF79w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjowMToyOVrOGOF79w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQzMDUxOQ==", "bodyText": "@iNikem I can't build with Java 8 anymore, can we make building this module optional? Or should we update CONTRIBUTING doc to require Java 11?\n* Where:\nBuild file 'C:\\git\\opentelemetry-auto-instr-java\\smoke-tests\\java9-modules\\java9-modules.gradle' line: 17\n\n* What went wrong:\nA problem occurred evaluating project ':smoke-tests:java9-modules'.\n> path may not be null or empty string. path='null'", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/358#discussion_r417430519", "createdAt": "2020-04-29T16:01:29Z", "author": {"login": "trask"}, "path": "smoke-tests/java9-modules/java9-modules.gradle", "diffHunk": "@@ -12,60 +12,22 @@ jar {\n   }\n }\n \n-// If the current JDK version (the one running gradle) is < 9, we need to find a version >= 9\n-// to compile this project.  java.gradle creates a map of java executables \n-// called \"javaExecutableVersionCache\" pulled from the environment.\n-// This loops over the cache to find a usable jdk.\n-// Since this project is the only one that requires a version above Java 8\n-// it's special cased here instead of putting a generic version matcher in java.gradle\n-if (JavaVersion.VERSION_1_9.compareTo(JavaVersion.current()) > 0) {\n-  def targetJavaHome\n+compileMain_java9Java {\n+  options.fork = true\n+  options.forkOptions.javaHome = file(findJavaHome(JavaVersion.VERSION_1_9))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f771488628868246149ee6d08244fd18c3b073f"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3288, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}