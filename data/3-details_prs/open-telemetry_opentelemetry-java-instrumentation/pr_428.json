{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxODkzOTU5", "number": 428, "title": "Change names of servlet based server spans", "bodyText": "Fixes #391\nPlease start review with \"instrumentation/servlet/README.md\" file.\nI have not changed Grizzly instrumentation, because their tests are not so easy changeable. I would like to address #423 next and extract common parts in Servlet instrumentations to a common decorator. This probably may lead to having a common decorator for the majority of http server spans. Then their names can be unified further.", "createdAt": "2020-05-22T12:31:51Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428", "merged": true, "mergeCommit": {"oid": "6c8cd2e7f25b16adfa43e5ccded4f3e2c9f74835"}, "closed": true, "closedAt": "2020-05-25T19:53:13Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjv2WWAH2gAyNDIxODkzOTU5OjU4ZGY4MzZkMmFjNDVmZjU4M2E5NWVkODVhNWQ1ZjI2NjFlYzcwN2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABck1knTgFqTQxNzg1ODk1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "58df836d2ac45ff583a95ed85a5d5f2661ec707a", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/58df836d2ac45ff583a95ed85a5d5f2661ec707a", "committedDate": "2020-05-22T10:38:20Z", "message": "Add documentation describing non-obvious points of Servlet instrumentations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6404e596174f7e529b4773805c6bf6ec49c075b5", "committedDate": "2020-05-22T13:22:44Z", "message": "Change names of servlet based server spans"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c0edbbd4fd852cfc1d3f98400fd43bc160075345", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c0edbbd4fd852cfc1d3f98400fd43bc160075345", "committedDate": "2020-05-22T12:26:21Z", "message": "Change names of servlet based server spans"}, "afterCommit": {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6404e596174f7e529b4773805c6bf6ec49c075b5", "committedDate": "2020-05-22T13:22:44Z", "message": "Change names of servlet based server spans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTQ3MTE3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#pullrequestreview-417147117", "createdAt": "2020-05-22T19:36:46Z", "commit": {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTozNjo0N1rOGZh7-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTo0MzoxN1rOGZiFTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyMzYwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Please read README.md to understand what is this instrumentation.\n          \n          \n            \n            // Please read this instrumentation's README.md to understand what is this instrumentation.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r429423609", "createdAt": "2020-05-22T19:36:47Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "diffHunk": "@@ -31,13 +31,15 @@\n import io.opentelemetry.auto.instrumentation.api.SpanWithScope;\n import io.opentelemetry.auto.tooling.Instrumenter;\n import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.Span.Kind;\n import java.lang.reflect.Method;\n import java.util.Map;\n import net.bytebuddy.asm.Advice;\n import net.bytebuddy.description.method.MethodDescription;\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n+// Please read README.md to understand what is this instrumentation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNTIxMw==", "bodyText": "I think this should be an INTERNAL span, from https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/api.md#spankind:\n\nINTERNAL Default value. Indicates that the span represents an internal operation within an application, as opposed to an operations with remote parents or children.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r429425213", "createdAt": "2020-05-22T19:41:00Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "diffHunk": "@@ -93,7 +95,11 @@ public static SpanWithScope start(@Advice.Origin final Method method) {\n       }\n \n       // Here we use the Method instead of \"this.class.name\" to distinguish calls to \"super\".\n-      final Span span = TRACER.spanBuilder(DECORATE.spanNameForMethod(method)).startSpan();\n+      final Span span =\n+          TRACER\n+              .spanBuilder(DECORATE.spanNameForMethod(method))\n+              .setSpanKind(Kind.SERVER)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNTk5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // TODO this logic should be moved to Servle2 specific Decorator\n          \n          \n            \n                // TODO this logic should be moved to Servlet2 specific Decorator", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r429425998", "createdAt": "2020-05-22T19:43:17Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/request-2.3/src/main/java/io/opentelemetry/auto/instrumentation/servlet/v2_3/Servlet2Advice.java", "diffHunk": "@@ -29,31 +29,35 @@\n import io.opentelemetry.auto.instrumentation.api.Tags;\n import io.opentelemetry.trace.Span;\n import io.opentelemetry.trace.Status;\n+import java.lang.reflect.Method;\n import java.security.Principal;\n import javax.servlet.ServletRequest;\n import javax.servlet.ServletResponse;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import net.bytebuddy.asm.Advice;\n-import net.bytebuddy.implementation.bytecode.assign.Assigner;\n \n public class Servlet2Advice {\n \n   @Advice.OnMethodEnter(suppress = Throwable.class)\n   public static SpanWithScope onEnter(\n       @Advice.This final Object servlet,\n+      @Advice.Origin final Method method,\n       @Advice.Argument(0) final ServletRequest request,\n-      @Advice.Argument(value = 1, typing = Assigner.Typing.DYNAMIC)\n-          final ServletResponse response) {\n+      @Advice.Argument(1) final ServletResponse response) {\n+    if (!(request instanceof HttpServletRequest)) {\n+      return null;\n+    }\n+\n     final boolean hasServletTrace = request.getAttribute(SPAN_ATTRIBUTE) instanceof Span;\n-    final boolean invalidRequest = !(request instanceof HttpServletRequest);\n-    if (invalidRequest || hasServletTrace) {\n+    if (hasServletTrace) {\n       // Tracing might already be applied by the FilterChain or a parent request (forward/include).\n       return null;\n     }\n \n     final HttpServletRequest httpServletRequest = (HttpServletRequest) request;\n \n+    // TODO this logic should be moved to Servle2 specific Decorator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8be103b3af6531a0edb94f0257ff821aa5267aad", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8be103b3af6531a0edb94f0257ff821aa5267aad", "committedDate": "2020-05-25T06:48:58Z", "message": "Polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb9c06ac0b82161566cf71377b7e36e20a7ee59b", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bb9c06ac0b82161566cf71377b7e36e20a7ee59b", "committedDate": "2020-05-25T06:49:13Z", "message": "Merge remote-tracking branch 'upstream/master' into servlet-spans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODU2OTcw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#pullrequestreview-417856970", "createdAt": "2020-05-25T19:44:18Z", "commit": {"oid": "bb9c06ac0b82161566cf71377b7e36e20a7ee59b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxOTo0NDoxOFrOGaIpWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxOTo0NDoxOFrOGaIpWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1NzgxOQ==", "bodyText": "this is the default\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          .setSpanKind(Kind.INTERNAL)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r430057819", "createdAt": "2020-05-25T19:44:18Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "diffHunk": "@@ -98,7 +98,7 @@ public static SpanWithScope start(@Advice.Origin final Method method) {\n       final Span span =\n           TRACER\n               .spanBuilder(DECORATE.spanNameForMethod(method))\n-              .setSpanKind(Kind.SERVER)\n+              .setSpanKind(Kind.INTERNAL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9c06ac0b82161566cf71377b7e36e20a7ee59b"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43620e4907c5c1d003e3cafffe7c5b2fdb806681", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/43620e4907c5c1d003e3cafffe7c5b2fdb806681", "committedDate": "2020-05-25T19:48:19Z", "message": "Update instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODU4OTU1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#pullrequestreview-417858955", "createdAt": "2020-05-25T19:52:19Z", "commit": {"oid": "43620e4907c5c1d003e3cafffe7c5b2fdb806681"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3177, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}