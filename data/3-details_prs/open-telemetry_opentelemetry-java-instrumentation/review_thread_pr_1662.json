{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNjIwNjkx", "number": 1662, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0Nzo1N1rOE6KqaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNToyNjo1MlrOE6Z42A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDI3NTYxOnYy", "diffSide": "RIGHT", "path": "instrumentation/mongo/mongo-common/src/main/java/io/opentelemetry/javaagent/instrumentation/mongo/MongoClientTracer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0Nzo1N1rOH1EEiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0Nzo1N1rOH1EEiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwMzI3Mw==", "bodyText": "While a n allow-list is in some ways not future proof, in practice I think it's safe as the trend in MongoDB has been to use new initiating stages in aggregation pipelines to add new functionality (e.g. the $changeStream stage.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1662#discussion_r525403273", "createdAt": "2020-11-17T18:47:57Z", "author": {"login": "jyemin"}, "path": "instrumentation/mongo/mongo-common/src/main/java/io/opentelemetry/javaagent/instrumentation/mongo/MongoClientTracer.java", "diffHunk": "@@ -130,10 +133,24 @@ private static BsonValue scrub(BsonValue origin) {\n     return scrubbed;\n   }\n \n+  private static final Set<String> COMMANDS_WITH_COLLECTION_NAME_AS_VALUE =\n+      new HashSet<>(asList(\n+          \"aggregate\", \"count\", \"distinct\", \"mapReduce\", \"geoSearch\", \"delete\", \"find\", \"killCursors\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbfac2c2c6dc604422afedc998185b3cbdae057e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDI3NzExOnYy", "diffSide": "RIGHT", "path": "instrumentation/mongo/mongo-common/src/main/java/io/opentelemetry/javaagent/instrumentation/mongo/MongoClientTracer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0ODoyNlrOH1EFjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0ODoyNlrOH1EFjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwMzUzNQ==", "bodyText": "See https://docs.mongodb.com/manual/reference/command/getMore/", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1662#discussion_r525403535", "createdAt": "2020-11-17T18:48:26Z", "author": {"login": "jyemin"}, "path": "instrumentation/mongo/mongo-common/src/main/java/io/opentelemetry/javaagent/instrumentation/mongo/MongoClientTracer.java", "diffHunk": "@@ -130,10 +133,24 @@ private static BsonValue scrub(BsonValue origin) {\n     return scrubbed;\n   }\n \n+  private static final Set<String> COMMANDS_WITH_COLLECTION_NAME_AS_VALUE =\n+      new HashSet<>(asList(\n+          \"aggregate\", \"count\", \"distinct\", \"mapReduce\", \"geoSearch\", \"delete\", \"find\", \"killCursors\",\n+          \"findAndModify\", \"insert\", \"update\", \"listIndexes\"));\n+\n   private static String collectionName(CommandStartedEvent event) {\n-    BsonValue collectionValue = event.getCommand().get(event.getCommandName());\n-    if (collectionValue != null && collectionValue.isString()) {\n-      return collectionValue.asString().getValue();\n+    if (event.getCommandName().equals(\"getMore\")) {\n+      if (event.getCommand().containsKey(\"collection\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbfac2c2c6dc604422afedc998185b3cbdae057e"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Njc3MDE2OnYy", "diffSide": "RIGHT", "path": "instrumentation/mongo/mongo-common/src/main/java/io/opentelemetry/javaagent/instrumentation/mongo/MongoClientTracer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNToyNjo1MlrOH1ds0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjozMjozMVrOH2bu9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgyMzE4Ng==", "bodyText": "does it make sense to include create in this list?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1662#discussion_r525823186", "createdAt": "2020-11-18T05:26:52Z", "author": {"login": "trask"}, "path": "instrumentation/mongo/mongo-common/src/main/java/io/opentelemetry/javaagent/instrumentation/mongo/MongoClientTracer.java", "diffHunk": "@@ -130,10 +133,35 @@ private static BsonValue scrub(BsonValue origin) {\n     return scrubbed;\n   }\n \n+  private static final Set<String> COMMANDS_WITH_COLLECTION_NAME_AS_VALUE =\n+      new HashSet<>(\n+          asList(\n+              \"aggregate\",\n+              \"count\",\n+              \"distinct\",\n+              \"mapReduce\",\n+              \"geoSearch\",\n+              \"delete\",\n+              \"find\",\n+              \"killCursors\",\n+              \"findAndModify\",\n+              \"insert\",\n+              \"update\",\n+              \"listIndexes\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dfd36984d01631bd4034d7f2b27a5219a58c4a8"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjAzNDMwMg==", "bodyText": "I considered it.  It doesn't do any harm, but I left it out because in MongoDB AFAIK it's not so common to create collections explicitly, as MongoDB will create them implicitly on first insert.\nBut happy to add it (and drop as well, I guess) if there's support.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1662#discussion_r526034302", "createdAt": "2020-11-18T12:03:21Z", "author": {"login": "jyemin"}, "path": "instrumentation/mongo/mongo-common/src/main/java/io/opentelemetry/javaagent/instrumentation/mongo/MongoClientTracer.java", "diffHunk": "@@ -130,10 +133,35 @@ private static BsonValue scrub(BsonValue origin) {\n     return scrubbed;\n   }\n \n+  private static final Set<String> COMMANDS_WITH_COLLECTION_NAME_AS_VALUE =\n+      new HashSet<>(\n+          asList(\n+              \"aggregate\",\n+              \"count\",\n+              \"distinct\",\n+              \"mapReduce\",\n+              \"geoSearch\",\n+              \"delete\",\n+              \"find\",\n+              \"killCursors\",\n+              \"findAndModify\",\n+              \"insert\",\n+              \"update\",\n+              \"listIndexes\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgyMzE4Ng=="}, "originalCommit": {"oid": "8dfd36984d01631bd4034d7f2b27a5219a58c4a8"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYyNzAwMA==", "bodyText": "sure, let's include them both \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1662#discussion_r526627000", "createdAt": "2020-11-19T06:41:50Z", "author": {"login": "trask"}, "path": "instrumentation/mongo/mongo-common/src/main/java/io/opentelemetry/javaagent/instrumentation/mongo/MongoClientTracer.java", "diffHunk": "@@ -130,10 +133,35 @@ private static BsonValue scrub(BsonValue origin) {\n     return scrubbed;\n   }\n \n+  private static final Set<String> COMMANDS_WITH_COLLECTION_NAME_AS_VALUE =\n+      new HashSet<>(\n+          asList(\n+              \"aggregate\",\n+              \"count\",\n+              \"distinct\",\n+              \"mapReduce\",\n+              \"geoSearch\",\n+              \"delete\",\n+              \"find\",\n+              \"killCursors\",\n+              \"findAndModify\",\n+              \"insert\",\n+              \"update\",\n+              \"listIndexes\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgyMzE4Ng=="}, "originalCommit": {"oid": "8dfd36984d01631bd4034d7f2b27a5219a58c4a8"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgzOTU0MQ==", "bodyText": "Added create, drop, and createIndexes", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1662#discussion_r526839541", "createdAt": "2020-11-19T12:32:31Z", "author": {"login": "jyemin"}, "path": "instrumentation/mongo/mongo-common/src/main/java/io/opentelemetry/javaagent/instrumentation/mongo/MongoClientTracer.java", "diffHunk": "@@ -130,10 +133,35 @@ private static BsonValue scrub(BsonValue origin) {\n     return scrubbed;\n   }\n \n+  private static final Set<String> COMMANDS_WITH_COLLECTION_NAME_AS_VALUE =\n+      new HashSet<>(\n+          asList(\n+              \"aggregate\",\n+              \"count\",\n+              \"distinct\",\n+              \"mapReduce\",\n+              \"geoSearch\",\n+              \"delete\",\n+              \"find\",\n+              \"killCursors\",\n+              \"findAndModify\",\n+              \"insert\",\n+              \"update\",\n+              \"listIndexes\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgyMzE4Ng=="}, "originalCommit": {"oid": "8dfd36984d01631bd4034d7f2b27a5219a58c4a8"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4610, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}