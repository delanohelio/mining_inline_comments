{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMTQ1NDUx", "number": 1093, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo0NTozM1rOEcB9ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo0NTozM1rOEcB9ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODI3NzQyOnYy", "diffSide": "RIGHT", "path": "javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/AddThreadDetailsSpanProcessorTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo0NTozM1rOHGURiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDozMzozNVrOHGbExw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4NTY3Mg==", "bodyText": "use expect: and without assert", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1093#discussion_r476385672", "createdAt": "2020-08-25T11:45:33Z", "author": {"login": "iNikem"}, "path": "javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/AddThreadDetailsSpanProcessorTest.groovy", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.javaagent.tooling\n+\n+import io.opentelemetry.sdk.trace.ReadWriteSpan\n+import io.opentelemetry.trace.attributes.SemanticAttributes\n+import spock.lang.Specification\n+\n+class AddThreadDetailsSpanProcessorTest extends Specification {\n+  def span = Mock(ReadWriteSpan)\n+\n+  def processor = new AddThreadDetailsSpanProcessor()\n+\n+  def \"should require onStart call\"() {\n+    when:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71ba52ff7699946ebcd0c50d2cf5d2450442d0ec"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ5NzA5NQ==", "bodyText": "Fixed, thanks!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1093#discussion_r476497095", "createdAt": "2020-08-25T14:33:35Z", "author": {"login": "mateuszrzeszutek"}, "path": "javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/AddThreadDetailsSpanProcessorTest.groovy", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.javaagent.tooling\n+\n+import io.opentelemetry.sdk.trace.ReadWriteSpan\n+import io.opentelemetry.trace.attributes.SemanticAttributes\n+import spock.lang.Specification\n+\n+class AddThreadDetailsSpanProcessorTest extends Specification {\n+  def span = Mock(ReadWriteSpan)\n+\n+  def processor = new AddThreadDetailsSpanProcessor()\n+\n+  def \"should require onStart call\"() {\n+    when:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4NTY3Mg=="}, "originalCommit": {"oid": "71ba52ff7699946ebcd0c50d2cf5d2450442d0ec"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4816, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}