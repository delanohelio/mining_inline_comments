{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MTM3MDU1", "number": 516, "title": "Update documentation to point to new snapshot and release repositories", "bodyText": "Closes #500", "createdAt": "2020-06-14T12:22:08Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516", "merged": true, "mergeCommit": {"oid": "58a2a3b0b469aa26a42ed1a620ebc9a617b4470c"}, "closed": true, "closedAt": "2020-06-16T00:45:38Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrLG0pAH2gAyNDM0MTM3MDU1OjI0MGY1NGJjNzg3MjRlZTc5ZWEzMzdkOWQxYTExYzhjNmQwODY2NzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrl-yxAH2gAyNDM0MTM3MDU1OmRlMzYxNjc3YTdiYTQ2MWViYWRlYzk5ZGQ0OGI2ZDQ4MTZlYWZmNGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "240f54bc78724ee79ea337d9d1a11c8c6d086674", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/240f54bc78724ee79ea337d9d1a11c8c6d086674", "committedDate": "2020-06-14T12:21:14Z", "message": "Update documentation to point to new snapshot and release repositories"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjM5NDE5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#pullrequestreview-430239419", "createdAt": "2020-06-14T18:00:24Z", "commit": {"oid": "240f54bc78724ee79ea337d9d1a11c8c6d086674"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxODowMDoyNFrOGjeieQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxODoxNzo1MVrOGjen1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MzY4OQ==", "bodyText": "\"OpenTelemetry exporter\" sounds ambiguous to me, leaves me wondering \"which OpenTelemetry exporter?\"\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [OpenTelemetry exporter](https://github.com/open-telemetry/opentelemetry-java/tree/master/exporters/otlp)\n          \n          \n            \n            [OTLP exporter](https://github.com/open-telemetry/opentelemetry-java/tree/master/exporters/otlp)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#discussion_r439853689", "createdAt": "2020-06-14T18:00:24Z", "author": {"login": "trask"}, "path": "README.md", "diffHunk": "@@ -4,28 +4,37 @@\n \n This project provides a Java agent JAR that can be attached to any Java 7+\n application and dynamically injects bytecode to capture telemetry from a\n-number of popular libraries and frameworks. The telemetry data can exported\n-in a variety of formats each provided as their own independent JAR. In\n-addition, the agent and exporter can be configured via command line arguments\n+number of popular libraries and frameworks. \n+The telemetry data can be exported in a variety of formats. \n+In addition, the agent and exporter can be configured via command line arguments\n or environment variables. The net result is the ability to gather telemetry\n data from a Java application without code changes.\n \n ## Getting Started\n \n-Download the [latest\n-release](https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases)\n-of the Java agent and available exporters.\n+[ ![Download](https://api.bintray.com/packages/open-telemetry/maven/opentelemetry-java-instrumentation/images/download.svg) ](https://bintray.com/open-telemetry/maven/opentelemetry-java-instrumentation/_latestVersion)\n+\n+The easiest way to start is to download \"all-in\" package, which includes instrumentation agent,\n+instrumentations for all supported libraries and all available data exporters.\n+This provides completely automatic out of the box experience.\n+TODO add here screenshot from Bintray download list.\n \n The instrumentation agent is enabled using the `-javaagent` flag to the JVM.\n-Configuration parameters are passed as Java system properties (`-D` flags) or\n-as environment variables. Both the Java agent and exporter configuration must\n-be defined before the application JAR. For example:\n+```\n+java -javaagent:path/to/opentelemetry-auto-<version>-all.jar \\\n+     -jar myapp.jar\n+```\n+By default OpenTelemetry Java agent uses \n+[OpenTelemetry exporter](https://github.com/open-telemetry/opentelemetry-java/tree/master/exporters/otlp)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "240f54bc78724ee79ea337d9d1a11c8c6d086674"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1Mzk1MQ==", "bodyText": "\ud83c\udf89", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#discussion_r439853951", "createdAt": "2020-06-14T18:03:41Z", "author": {"login": "trask"}, "path": "README.md", "diffHunk": "@@ -227,9 +240,6 @@ High-level roadmap:\n       [opentelemetry-specification#522](https://github.com/open-telemetry/opentelemetry-specification/issues/522))\n   * See issues with label\n     [specification](https://github.com/open-telemetry/opentelemetry-java-instrumentation/labels/specification)\n-* Simpler exporter configuration\n-  * See issue\n-    [#370](https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/370)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "240f54bc78724ee79ea337d9d1a11c8c6d086674"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NDc3Mg==", "bodyText": "This seems a bit complicated. Can we provide a direct link to download the -all package?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#discussion_r439854772", "createdAt": "2020-06-14T18:13:39Z", "author": {"login": "trask"}, "path": "README.md", "diffHunk": "@@ -4,28 +4,37 @@\n \n This project provides a Java agent JAR that can be attached to any Java 7+\n application and dynamically injects bytecode to capture telemetry from a\n-number of popular libraries and frameworks. The telemetry data can exported\n-in a variety of formats each provided as their own independent JAR. In\n-addition, the agent and exporter can be configured via command line arguments\n+number of popular libraries and frameworks. \n+The telemetry data can be exported in a variety of formats. \n+In addition, the agent and exporter can be configured via command line arguments\n or environment variables. The net result is the ability to gather telemetry\n data from a Java application without code changes.\n \n ## Getting Started\n \n-Download the [latest\n-release](https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases)\n-of the Java agent and available exporters.\n+[ ![Download](https://api.bintray.com/packages/open-telemetry/maven/opentelemetry-java-instrumentation/images/download.svg) ](https://bintray.com/open-telemetry/maven/opentelemetry-java-instrumentation/_latestVersion)\n+\n+The easiest way to start is to download \"all-in\" package, which includes instrumentation agent,\n+instrumentations for all supported libraries and all available data exporters.\n+This provides completely automatic out of the box experience.\n+TODO add here screenshot from Bintray download list.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "240f54bc78724ee79ea337d9d1a11c8c6d086674"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NTA2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `AgentClassLoader`. Including OpenTelemetry SDK and data exporters.\n          \n          \n            \n            `AgentClassLoader`. Including OpenTelemetry SDK (and the built-in exporters when using the `-all` artifact).", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#discussion_r439855060", "createdAt": "2020-06-14T18:17:51Z", "author": {"login": "trask"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -71,7 +71,7 @@ following \"clusters\" of classes:\n \n - `auto-tooling-and-instrumentation.isolated/` - contains `agent-tooling`\n module and `instrumentation` submodules, loaded and isolated inside\n-`AgentClassLoader`. Including OpenTelemetry SDK.\n+`AgentClassLoader`. Including OpenTelemetry SDK and data exporters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "240f54bc78724ee79ea337d9d1a11c8c6d086674"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43287b6f7bc9f502ac728bb36ea9e9ca668678b3", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/43287b6f7bc9f502ac728bb36ea9e9ca668678b3", "committedDate": "2020-06-15T04:54:24Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ff916586ecaae5ea3bd3b81a4993e17eb136b10", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6ff916586ecaae5ea3bd3b81a4993e17eb136b10", "committedDate": "2020-06-15T10:23:22Z", "message": "Merge branch 'master' into docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwODIzODM2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#pullrequestreview-430823836", "createdAt": "2020-06-15T16:52:50Z", "commit": {"oid": "6ff916586ecaae5ea3bd3b81a4993e17eb136b10"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de361677a7ba461ebadec99dd48b6d4816eaff4b", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/de361677a7ba461ebadec99dd48b6d4816eaff4b", "committedDate": "2020-06-15T19:39:54Z", "message": "Merge branch 'master' into docs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3254, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}