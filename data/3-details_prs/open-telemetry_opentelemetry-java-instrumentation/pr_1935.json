{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjczOTg0", "number": 1935, "title": "end to end latency benchmark", "bodyText": "Using wrk (HTTP benchmarking) end to end latency benchmark for any sample app configured with agent and collector setup with receiver. I am also planning to add support for collecting cpu and memory data using oshi instrumentation probably in next PR.\nInspired from this server integrated benchmark: https://github.com/openzipkin/zipkin/blob/master/benchmarks/src/test/java/zipkin2/server/ServerIntegratedBenchmark.java", "createdAt": "2020-12-18T04:07:44Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935", "merged": true, "mergeCommit": {"oid": "a1945f27c07867878600a2fb77206935256116b6"}, "closed": true, "closedAt": "2020-12-22T04:34:45Z", "author": {"login": "bhautikpip"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnQHISgH2gAyNTQyMjczOTg0OjU1MDM5ODZmYjkxZWNhYjY0YWI2MzA4YTc0MWNjNjk3ZTI0MjlhYWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdoi6RzAFqTU1NjgxMzAyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5503986fb91ecab64ab6308a741cc697e2429aaf", "author": {"user": {"login": "bhautikpip", "name": "Bhautik Pipaliya"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/5503986fb91ecab64ab6308a741cc697e2429aaf", "committedDate": "2020-12-18T04:06:33Z", "message": "end to end latency benchmark"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTYyNzgy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#pullrequestreview-555162782", "createdAt": "2020-12-18T04:19:00Z", "commit": {"oid": "5503986fb91ecab64ab6308a741cc697e2429aaf"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwNDoxOTowMVrOIISjHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwNDoxOToyNlrOIISjpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU2MzQyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static String app = System.getenv(\"APP_IMAGE\");\n          \n          \n            \n              private static final String APP_NAME = System.getenv(\"APP_IMAGE\", \"ghcr.io/open-telemetry/java-test-containers:smoke-springboot-jdk8-20201204.400701583\");", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#discussion_r545563420", "createdAt": "2020-12-18T04:19:01Z", "author": {"login": "anuraaga"}, "path": "benchmark-e2e/src/main/java/io/opentelemetry/e2ebenchmark/E2EAgentBenchmark.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.e2ebenchmark;\n+\n+import java.util.AbstractMap;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.Network;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.lifecycle.Startables;\n+import org.testcontainers.utility.DockerImageName;\n+import org.testcontainers.utility.MountableFile;\n+\n+public class E2EAgentBenchmark {\n+  private static String app = System.getenv(\"APP_IMAGE\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5503986fb91ecab64ab6308a741cc697e2429aaf"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU2MzU1OA==", "bodyText": "Can remove these lines with above suggestion", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#discussion_r545563558", "createdAt": "2020-12-18T04:19:26Z", "author": {"login": "anuraaga"}, "path": "benchmark-e2e/src/main/java/io/opentelemetry/e2ebenchmark/E2EAgentBenchmark.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.e2ebenchmark;\n+\n+import java.util.AbstractMap;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.Network;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.lifecycle.Startables;\n+import org.testcontainers.utility.DockerImageName;\n+import org.testcontainers.utility.MountableFile;\n+\n+public class E2EAgentBenchmark {\n+  private static String app = System.getenv(\"APP_IMAGE\");\n+\n+  private List<GenericContainer<?>> containers;\n+  private static final Logger LOG = LoggerFactory.getLogger(E2EAgentBenchmark.class);\n+\n+  // docker images\n+  private static final DockerImageName APP_IMAGE = DockerImageName.parse(app);\n+  private static final DockerImageName OTLP_COLLECTOR_IMAGE =\n+      DockerImageName.parse(\"otel/opentelemetry-collector-dev:latest\");\n+  private static final DockerImageName WRK_IMAGE = DockerImageName.parse(\"quay.io/dim/wrk:stable\");\n+\n+  @BeforeEach\n+  void setUp() {\n+    containers = new ArrayList<>();\n+  }\n+\n+  @AfterEach\n+  void tearDown() {\n+    containers.forEach(GenericContainer::stop);\n+  }\n+\n+  @Test\n+  void run() throws Exception {\n+    runBenchmark();\n+  }\n+\n+  private void runBenchmark() throws Exception {\n+    if (app == null || app.equals(\"\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5503986fb91ecab64ab6308a741cc697e2429aaf"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "604077460f453c29d56f664ac738d7aa36bfdacd", "author": {"user": {"login": "bhautikpip", "name": "Bhautik Pipaliya"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/604077460f453c29d56f664ac738d7aa36bfdacd", "committedDate": "2020-12-18T04:44:53Z", "message": "minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bf38b8ddcc53141ca4601e9d2c550138c4624bd", "author": {"user": {"login": "bhautikpip", "name": "Bhautik Pipaliya"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0bf38b8ddcc53141ca4601e9d2c550138c4624bd", "committedDate": "2020-12-18T04:45:56Z", "message": "added final"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTcyMjIw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#pullrequestreview-555172220", "createdAt": "2020-12-18T04:56:07Z", "commit": {"oid": "0bf38b8ddcc53141ca4601e9d2c550138c4624bd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1042e4d225a91105076af5a5cd3e063bdcd46215", "author": {"user": {"login": "bhautikpip", "name": "Bhautik Pipaliya"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1042e4d225a91105076af5a5cd3e063bdcd46215", "committedDate": "2020-12-18T05:17:03Z", "message": "fix spotless check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTEyMDg3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#pullrequestreview-556112087", "createdAt": "2020-12-21T03:34:33Z", "commit": {"oid": "1042e4d225a91105076af5a5cd3e063bdcd46215"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzozNDozM1rOIJLRvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzozNDozM1rOIJLRvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5Mjg2MA==", "bodyText": "can we leave out the exporter, or is there a no-op exporter? in hopes of reducing the impact of running a local collector on the benchmark", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#discussion_r546492860", "createdAt": "2020-12-21T03:34:33Z", "author": {"login": "trask"}, "path": "benchmark-e2e/src/main/resources/collector-config.yml", "diffHunk": "@@ -0,0 +1,34 @@\n+receivers:\n+  otlp:\n+    protocols:\n+      grpc:\n+        endpoint: 0.0.0.0:55680\n+\n+exporters:\n+  logging:\n+    loglevel: info\n+\n+processors:\n+  batch:\n+  queued_retry:\n+\n+extensions:\n+  health_check:\n+\n+service:\n+  extensions: health_check\n+  pipelines:\n+    traces:\n+      processors:\n+        - batch\n+      receivers:\n+        - otlp\n+      exporters:\n+        - logging", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1042e4d225a91105076af5a5cd3e063bdcd46215"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODEzMDIz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#pullrequestreview-556813023", "createdAt": "2020-12-22T04:34:34Z", "commit": {"oid": "1042e4d225a91105076af5a5cd3e063bdcd46215"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDozNDozNFrOIJuDrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDozNDozNFrOIJuDrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA2MjcwMQ==", "bodyText": "I haven't tried running collector without any exporters :) But if it throws errors when there's no exporter defined than using logging seems reasonable.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#discussion_r547062701", "createdAt": "2020-12-22T04:34:34Z", "author": {"login": "anuraaga"}, "path": "benchmark-e2e/src/main/resources/collector-config.yml", "diffHunk": "@@ -0,0 +1,34 @@\n+receivers:\n+  otlp:\n+    protocols:\n+      grpc:\n+        endpoint: 0.0.0.0:55680\n+\n+exporters:\n+  logging:\n+    loglevel: info\n+\n+processors:\n+  batch:\n+  queued_retry:\n+\n+extensions:\n+  health_check:\n+\n+service:\n+  extensions: health_check\n+  pipelines:\n+    traces:\n+      processors:\n+        - batch\n+      receivers:\n+        - otlp\n+      exporters:\n+        - logging", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5Mjg2MA=="}, "originalCommit": {"oid": "1042e4d225a91105076af5a5cd3e063bdcd46215"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2026, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}