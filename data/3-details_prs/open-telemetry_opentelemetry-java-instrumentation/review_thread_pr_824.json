{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MDQ4MzQz", "number": 824, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMjo1Njo1OFrOETB9pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMjo1Njo1OFrOETB9pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzkwNTY1OnYy", "diffSide": "RIGHT", "path": "instrumentation-core/spring/spring-boot-autoconfigure/spring-boot-autoconfigure.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMjo1Njo1OFrOG4ilPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzoxMjoyNVrOG4i5ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk0MDAzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n            testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springboot\n          \n      \n    \n    \n  \n\nI'm not sure why I didn't catch this before. This should fix the failed test in WebMVCFilterAutoConfigurationTest", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/824#discussion_r461940030", "createdAt": "2020-07-28T22:56:58Z", "author": {"login": "mabdinur"}, "path": "instrumentation-core/spring/spring-boot-autoconfigure/spring-boot-autoconfigure.gradle", "diffHunk": "@@ -13,26 +13,28 @@ dependencies {\n   implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: versions.springboot\n   annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-autoconfigure-processor', version: versions.springboot\n   implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'\n-  \n+\n   testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springboot) {\n     exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'\n   }\n-  \n-  implementation(project(':instrumentation-core:spring:spring-webmvc-3.1')){\n+\n+  implementation(project(':instrumentation-core:spring:spring-webmvc-3.1')) {\n     exclude group: 'org.slf4j', module: 'slf4j-simple'\n   }\n-  implementation(project(':instrumentation-core:spring:spring-web-3.1')){\n+  implementation(project(':instrumentation-core:spring:spring-web-3.1')) {\n     exclude group: 'org.slf4j', module: 'slf4j-simple'\n   }\n-  implementation(project(':instrumentation-core:spring:spring-webflux-5.0')){\n+  implementation(project(':instrumentation-core:spring:spring-webflux-5.0')) {\n     exclude group: 'org.slf4j', module: 'slf4j-simple'\n   }\n-   \n+\n   compileOnly group: 'io.grpc', name: 'grpc-api', version: '1.24.0'\n   compileOnly deps.opentelemetryLogging\n   compileOnly deps.opentelemetryJaeger\n   compileOnly deps.opentelemetryOtlp\n   compileOnly deps.opentelemetryZipkin\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c18422dbeb874a4af2046910d63db30ed12fe0e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk0NTIxMQ==", "bodyText": "thx @mabdinur!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/824#discussion_r461945211", "createdAt": "2020-07-28T23:12:25Z", "author": {"login": "trask"}, "path": "instrumentation-core/spring/spring-boot-autoconfigure/spring-boot-autoconfigure.gradle", "diffHunk": "@@ -13,26 +13,28 @@ dependencies {\n   implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: versions.springboot\n   annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-autoconfigure-processor', version: versions.springboot\n   implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'\n-  \n+\n   testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springboot) {\n     exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'\n   }\n-  \n-  implementation(project(':instrumentation-core:spring:spring-webmvc-3.1')){\n+\n+  implementation(project(':instrumentation-core:spring:spring-webmvc-3.1')) {\n     exclude group: 'org.slf4j', module: 'slf4j-simple'\n   }\n-  implementation(project(':instrumentation-core:spring:spring-web-3.1')){\n+  implementation(project(':instrumentation-core:spring:spring-web-3.1')) {\n     exclude group: 'org.slf4j', module: 'slf4j-simple'\n   }\n-  implementation(project(':instrumentation-core:spring:spring-webflux-5.0')){\n+  implementation(project(':instrumentation-core:spring:spring-webflux-5.0')) {\n     exclude group: 'org.slf4j', module: 'slf4j-simple'\n   }\n-   \n+\n   compileOnly group: 'io.grpc', name: 'grpc-api', version: '1.24.0'\n   compileOnly deps.opentelemetryLogging\n   compileOnly deps.opentelemetryJaeger\n   compileOnly deps.opentelemetryOtlp\n   compileOnly deps.opentelemetryZipkin\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk0MDAzMA=="}, "originalCommit": {"oid": "0c18422dbeb874a4af2046910d63db30ed12fe0e"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 166, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}