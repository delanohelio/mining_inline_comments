{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NjAxODQ5", "number": 1442, "title": "Proper scope handling for Resteasy instrumentations.", "bodyText": "Fixes #1422. This PR solves the original problem with Resteasy. If other JAX-RS client implementations have the same problem, remains to be seen.", "createdAt": "2020-10-21T14:39:30Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1442", "merged": true, "mergeCommit": {"oid": "6438d1d8f9e6496564e69e4f62bae08d80f64255"}, "closed": true, "closedAt": "2020-10-22T07:09:47Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUvji4gH2gAyNTA3NjAxODQ5OjNmZWI2YTZjMzk1OWQyYTkxZmUxYTY3NjhjNjYyN2E4OWYwZGQ5N2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdU78xfAFqTUxNDM5NDE0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3feb6a6c3959d2a91fe1a6768c6627a89f0dd97c", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3feb6a6c3959d2a91fe1a6768c6627a89f0dd97c", "committedDate": "2020-10-21T16:00:05Z", "message": "Proper scope handling for Resteasy instrumentations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6788213e200a1b39e7feeb10c65813c9aa9d91d", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f6788213e200a1b39e7feeb10c65813c9aa9d91d", "committedDate": "2020-10-21T16:00:05Z", "message": "Format"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb9af3a2ca4afe1b3c1bbffabcb9859350fbab51", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/cb9af3a2ca4afe1b3c1bbffabcb9859350fbab51", "committedDate": "2020-10-21T14:47:43Z", "message": "Format"}, "afterCommit": {"oid": "f6788213e200a1b39e7feeb10c65813c9aa9d91d", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f6788213e200a1b39e7feeb10c65813c9aa9d91d", "committedDate": "2020-10-21T16:00:05Z", "message": "Format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MzY3MzI3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1442#pullrequestreview-514367327", "createdAt": "2020-10-22T05:21:42Z", "commit": {"oid": "f6788213e200a1b39e7feeb10c65813c9aa9d91d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNToyMTo0MlrOHmQ_nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNToyMTo0MlrOHmQ_nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg4NjM2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * all requests through single point. Both sync ADN async! This allows for easy instrumentation and\n          \n          \n            \n             * all requests through single point. Both sync AND async! This allows for easy instrumentation and", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1442#discussion_r509886365", "createdAt": "2020-10-22T05:21:42Z", "author": {"login": "trask"}, "path": "instrumentation/jaxrs-client/jaxrs-client-2.0/jaxrs-client-2.0-resteasy-2.0/src/main/java/io/opentelemetry/javaagent/instrumentation/jaxrsclient/v2_0/ResteasyClientConnectionErrorInstrumentation.java", "diffHunk": "@@ -5,30 +5,32 @@\n \n package io.opentelemetry.javaagent.instrumentation.jaxrsclient.v2_0;\n \n-import static io.opentelemetry.javaagent.instrumentation.jaxrsclient.v2_0.JaxRsClientTracer.TRACER;\n+import static io.opentelemetry.javaagent.instrumentation.jaxrsclient.v2_0.ResteasyClientTracer.TRACER;\n import static net.bytebuddy.matcher.ElementMatchers.isMethod;\n import static net.bytebuddy.matcher.ElementMatchers.isPublic;\n import static net.bytebuddy.matcher.ElementMatchers.named;\n-import static net.bytebuddy.matcher.ElementMatchers.returns;\n+import static net.bytebuddy.matcher.ElementMatchers.takesArguments;\n \n import com.google.auto.service.AutoService;\n+import io.opentelemetry.context.Scope;\n import io.opentelemetry.javaagent.tooling.Instrumenter;\n import io.opentelemetry.trace.Span;\n import java.util.HashMap;\n import java.util.Map;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.Future;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.TimeoutException;\n+import javax.ws.rs.core.Response;\n import net.bytebuddy.asm.Advice;\n import net.bytebuddy.description.method.MethodDescription;\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n-import org.jboss.resteasy.client.jaxrs.internal.ClientConfiguration;\n+import org.jboss.resteasy.client.jaxrs.internal.ClientInvocation;\n \n /**\n- * JAX-RS Client API doesn't define a good point where we can handle connection failures, so we must\n- * handle these errors at the implementation level.\n+ * Unlike other supported JAX-RS Client implementations, Resteasy's one is very simple and passes\n+ * all requests through single point. Both sync ADN async! This allows for easy instrumentation and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6788213e200a1b39e7feeb10c65813c9aa9d91d"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0Mzk0MTQw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1442#pullrequestreview-514394140", "createdAt": "2020-10-22T06:26:30Z", "commit": {"oid": "f6788213e200a1b39e7feeb10c65813c9aa9d91d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2381, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}