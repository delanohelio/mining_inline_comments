{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMTI0MjA2", "number": 1656, "title": "Enable checkstyle overload method ordering rule for Google Java Style", "bodyText": "Enables checkstyle rule for https://google.github.io/styleguide/javaguide.html#s3.4.2-ordering-class-contents\n\n3.4.2.1 Overloads: never split\nWhen a class has multiple constructors, or multiple methods with the same name, these appear sequentially, with no other code in between (not even private members).\n\nI don't feel strongly either way about this rule.", "createdAt": "2020-11-17T04:07:24Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1656", "merged": true, "mergeCommit": {"oid": "2e51003900aac3ba104dd1d24936b6e4d78b1056"}, "closed": true, "closedAt": "2020-11-17T22:41:15Z", "author": {"login": "trask"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddRb2tgH2gAyNTIyMTI0MjA2OjUxZjVhMGE5OTgzOWFiZjFkMGRmYTlkYWI2NmVlYjFkM2ZmMWQyNmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddf_PHAH2gAyNTIyMTI0MjA2OjEwZDRlMTc4MWRhNDhlMjg2NmU5YWE5ZGVlOTliZWJmNTY2NWJmMTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "51f5a0a99839abf1d0dfa9dab66eeb1d3ff1d26e", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/51f5a0a99839abf1d0dfa9dab66eeb1d3ff1d26e", "committedDate": "2020-11-17T03:59:51Z", "message": "Enable checkstyle overload rule for Google Style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMTI2NTcz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1656#pullrequestreview-532126573", "createdAt": "2020-11-17T08:34:04Z", "commit": {"oid": "51f5a0a99839abf1d0dfa9dab66eeb1d3ff1d26e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMjMyNzQ0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1656#pullrequestreview-532232744", "createdAt": "2020-11-17T10:40:58Z", "commit": {"oid": "51f5a0a99839abf1d0dfa9dab66eeb1d3ff1d26e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMDo0MDo1OFrOH0uxZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMDo0MDo1OFrOH0uxZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA1NDMxMQ==", "bodyText": "I think that the previous ordering made slightly more sense: methods were ordered by their usage, top to bottom. How about renaming the checkMatch(Reference, TypeDescription) method to checkThirdPartyTypeMatch (or something similar) without reordering them?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1656#discussion_r525054311", "createdAt": "2020-11-17T10:40:58Z", "author": {"login": "mateuszrzeszutek"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/matcher/ReferenceMatcher.java", "diffHunk": "@@ -143,50 +143,6 @@ private boolean doesMatch(ClassLoader loader) {\n     }\n   }\n \n-  // for helper classes we make sure that all abstract methods from super classes and interfaces are\n-  // implemented\n-  private List<Mismatch> checkHelperClassMatch(Reference helperClass, TypePool typePool) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f5a0a99839abf1d0dfa9dab66eeb1d3ff1d26e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMjMzNTkw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1656#pullrequestreview-532233590", "createdAt": "2020-11-17T10:42:03Z", "commit": {"oid": "51f5a0a99839abf1d0dfa9dab66eeb1d3ff1d26e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10d4e1781da48e2866e9aa9dee99bebf5665bf15", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/10d4e1781da48e2866e9aa9dee99bebf5665bf15", "committedDate": "2020-11-17T20:57:10Z", "message": "Better ordering"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2263, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}