{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NjExNDk2", "number": 523, "title": "Next attempt to extract common logic from instrumentations.", "bodyText": "I tried to reduce code repetition in DB client instrumentations, jdbc and mongo ones.\n@trask please take a look at io.opentelemetry.auto.instrumentation.jdbc.JDBCDecorator#startSpan method. I currently don't see a good way (without repetitive code) to avoid returning null from it.", "createdAt": "2020-06-15T15:23:13Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/523", "merged": true, "mergeCommit": {"oid": "c1c02ac949b3bdb16ede26255d53c45030a4be32"}, "closed": true, "closedAt": "2020-06-17T19:08:53Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcriSsagH2gAyNDM0NjExNDk2OjQyMzU0MTE5NmRiMmJjYThlYjEzMDhlYWUwMDQxOGVhZWQzOTViODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsOUmHgFqTQzMjY3MzY2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "423541196db2bca8eb1308eae00418eaed395b83", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/423541196db2bca8eb1308eae00418eaed395b83", "committedDate": "2020-06-15T15:22:01Z", "message": "Next attempt to extract common logic from instrumentations.\n\nI tried to reduce code repetition in DB client instrumentations, jdbc and mongo ones. This time I experimented with another approach, different from HttpServerTracer. Namely, I have extracted that common `startSpan` method into `DatabaseClientDecorator` itself. The idea is still the same as before, but I wanted to see if we can migrate by smaller steps, reusing much of the existing code and just incrementally reducing public API."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34542cca0ba2c936e92c1dd2f78d373b568a265d", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/34542cca0ba2c936e92c1dd2f78d373b568a265d", "committedDate": "2020-06-15T17:30:05Z", "message": "Extracted separate Tracer after all"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ed22cc40b6d39770963d2b8421afeae556340b3", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/2ed22cc40b6d39770963d2b8421afeae556340b3", "committedDate": "2020-06-17T09:22:15Z", "message": "More explicit call depth handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e15c77a7c2f6f215d7ca9550e6e5c1700832a67d", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e15c77a7c2f6f215d7ca9550e6e5c1700832a67d", "committedDate": "2020-06-17T09:42:45Z", "message": "Fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c9e3b2d6a551514397b1e94f530c6a181f37dd3", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7c9e3b2d6a551514397b1e94f530c6a181f37dd3", "committedDate": "2020-06-17T09:43:02Z", "message": "Merge remote-tracking branch 'upstream/master' into db-client-decorator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjUyODgx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/523#pullrequestreview-432652881", "createdAt": "2020-06-17T18:11:29Z", "commit": {"oid": "2ed22cc40b6d39770963d2b8421afeae556340b3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODoxMToyOVrOGlRYVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODoxNzo1M1rOGlRmoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczNTI1Mg==", "bodyText": "i think this is not used?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/523#discussion_r441735252", "createdAt": "2020-06-17T18:11:29Z", "author": {"login": "trask"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/CallDepthThreadLocalMap.java", "diffHunk": "@@ -31,24 +40,36 @@ protected ThreadLocalDepth computeValue(Class<?> type) {\n         }\n       };\n \n+  public static Depth getCallDepth(final Class<?> k) {\n+    return TLS.get(k).get();\n+  }\n+\n   public static int incrementCallDepth(final Class<?> k) {\n-    return TLS.get(k).get().increment();\n+    return TLS.get(k).get().getAndIncrement();\n+  }\n+\n+  public static int decrementCallDepth(final Class<?> k) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ed22cc40b6d39770963d2b8421afeae556340b3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczODE0Mg==", "bodyText": "move query lookup to overloaded JdbcTracer.startSpan(Statement), since that will be useful for manual instrumentation also?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    span = TRACER.startSpan(statement, JDBCMaps.preparedStatements.get(statement));\n          \n          \n            \n                    span = TRACER.startSpan(statement);", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/523#discussion_r441738142", "createdAt": "2020-06-17T18:16:24Z", "author": {"login": "trask"}, "path": "instrumentation/jdbc/src/main/java/io/opentelemetry/auto/instrumentation/jdbc/PreparedStatementInstrumentation.java", "diffHunk": "@@ -75,28 +76,31 @@ public PreparedStatementInstrumentation() {\n     public static void onEnter(\n         @Advice.This final PreparedStatement statement,\n         @Advice.Local(\"otelSpan\") Span span,\n-        @Advice.Local(\"otelScope\") Scope scope) {\n+        @Advice.Local(\"otelScope\") Scope scope,\n+        @Advice.Local(\"otelCallDepth\") Depth callDepth) {\n \n-      span = TRACER.startSpan(statement, JDBCMaps.preparedStatements.get(statement));\n-      if (span != null) {\n-        scope = TRACER.withSpan(span);\n+      callDepth = TRACER.getCallDepth();\n+      if (callDepth.getAndIncrement() == 0) {\n+        span = TRACER.startSpan(statement, JDBCMaps.preparedStatements.get(statement));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ed22cc40b6d39770963d2b8421afeae556340b3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczODkxMg==", "bodyText": "i like this, and the corresponding callDepth.decrementAndGet() == 0 in @OnMethodExit", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/523#discussion_r441738912", "createdAt": "2020-06-17T18:17:53Z", "author": {"login": "trask"}, "path": "instrumentation/jdbc/src/main/java/io/opentelemetry/auto/instrumentation/jdbc/PreparedStatementInstrumentation.java", "diffHunk": "@@ -75,28 +76,31 @@ public PreparedStatementInstrumentation() {\n     public static void onEnter(\n         @Advice.This final PreparedStatement statement,\n         @Advice.Local(\"otelSpan\") Span span,\n-        @Advice.Local(\"otelScope\") Scope scope) {\n+        @Advice.Local(\"otelScope\") Scope scope,\n+        @Advice.Local(\"otelCallDepth\") Depth callDepth) {\n \n-      span = TRACER.startSpan(statement, JDBCMaps.preparedStatements.get(statement));\n-      if (span != null) {\n-        scope = TRACER.withSpan(span);\n+      callDepth = TRACER.getCallDepth();\n+      if (callDepth.getAndIncrement() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ed22cc40b6d39770963d2b8421afeae556340b3"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38e765cf50eacbb21e746c0ef90ff240327a6898", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/38e765cf50eacbb21e746c0ef90ff240327a6898", "committedDate": "2020-06-17T18:37:48Z", "message": "More reusable method overloads"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c077c0965c41b27d2b609018657dc98f89edee0", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7c077c0965c41b27d2b609018657dc98f89edee0", "committedDate": "2020-06-17T18:37:58Z", "message": "Merge remote-tracking branch 'upstream/master' into db-client-decorator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjczNjY5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/523#pullrequestreview-432673669", "createdAt": "2020-06-17T18:39:55Z", "commit": {"oid": "7c077c0965c41b27d2b609018657dc98f89edee0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3257, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}