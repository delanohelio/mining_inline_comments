{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5OTA4NDkw", "number": 1810, "title": "Pass around context more instead of span (HttpServerTracer)", "bodyText": "Follow-on to #1525\n\nnow adds CONTEXT_SERVER_SPAN_KEY in startSpan() instead of startScope()\nHttpServerTracer.startScope() doesn't do anything after above change, so removed\npass Context to end() and endExceptionally(), since now don't typically have Span reference handy to pass in", "createdAt": "2020-12-01T01:18:51Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810", "merged": true, "mergeCommit": {"oid": "0bd85d7b7fe1eb0b792f04ac2789dd23304d80c3"}, "closed": true, "closedAt": "2020-12-01T22:49:02Z", "author": {"login": "trask"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhvAiuAH2gAyNTI5OTA4NDkwOjI0ZGRjY2FjY2MyNGRjZDJhNjJjNTgwOTQwYjIwNmZjZTUxMzQxNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh6GHzgFqTU0MTkwMDIyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "24ddccaccc24dcd2a62c580940b206fce5134148", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/24ddccaccc24dcd2a62c580940b206fce5134148", "committedDate": "2020-12-01T00:42:52Z", "message": "Move context attributes to startSpan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20085bca4001da07b89828cde8524f85fbeae12d", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/20085bca4001da07b89828cde8524f85fbeae12d", "committedDate": "2020-12-01T01:13:05Z", "message": "Pass more context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d09bc9d5e5caa3b9e2014847101141681d459e8", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6d09bc9d5e5caa3b9e2014847101141681d459e8", "committedDate": "2020-12-01T01:46:09Z", "message": "A comment and a fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcc9a2e73dd5405e9c9638c96b95c356654a6ed9", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dcc9a2e73dd5405e9c9638c96b95c356654a6ed9", "committedDate": "2020-12-01T02:51:00Z", "message": "Small comment update to match other PR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNTM4OTg1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#pullrequestreview-541538985", "createdAt": "2020-12-01T07:10:26Z", "commit": {"oid": "dcc9a2e73dd5405e9c9638c96b95c356654a6ed9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNzoxMDoyNlrOH8aveA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNzoxODo0MlrOH8a8lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNDc0NA==", "bodyText": "Why this change?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#discussion_r533114744", "createdAt": "2020-12-01T07:10:26Z", "author": {"login": "iNikem"}, "path": "instrumentation/armeria-1.0/library/src/main/java/io/opentelemetry/instrumentation/armeria/v1_0/server/ArmeriaServerTracer.java", "diffHunk": "@@ -19,7 +19,8 @@\n import org.checkerframework.checker.nullness.qual.Nullable;\n \n public class ArmeriaServerTracer\n-    extends HttpServerTracer<HttpRequest, RequestLog, ServiceRequestContext, Void> {\n+    extends HttpServerTracer<\n+        HttpRequest, RequestLog, ServiceRequestContext, ServiceRequestContext> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc9a2e73dd5405e9c9638c96b95c356654a6ed9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNjAyOQ==", "bodyText": "I don't understand where this happens now. We have to active new context somewhere, haven't we?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#discussion_r533116029", "createdAt": "2020-12-01T07:13:34Z", "author": {"login": "iNikem"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/HttpServerTracer.java", "diffHunk": "@@ -58,67 +69,51 @@ public Context startSpan(\n     onRequest(span, request);\n     onConnectionAndRequest(span, connection, request);\n \n-    return parentContext.with(span);\n-  }\n+    Context context = parentContext.with(CONTEXT_SERVER_SPAN_KEY, span).with(span);\n+    attachServerContext(context, storage);\n \n-  /**\n-   * Creates new scoped context, based on the current context, with the given span.\n-   *\n-   * <p>Attaches new context to the request to avoid creating duplicate server spans.\n-   */\n-  public Scope startScope(Span span, STORAGE storage) {\n-    return startScope(span, storage, Context.current());\n-  }\n-\n-  /**\n-   * Creates new scoped context, based on the given context, with the given span.\n-   *\n-   * <p>Attaches new context to the request to avoid creating duplicate server spans.\n-   */\n-  public Scope startScope(Span span, STORAGE storage, Context context) {\n-    // TODO we could do this in one go, but TracingContextUtils.CONTEXT_SPAN_KEY is private\n-    Context newContext = context.with(CONTEXT_SERVER_SPAN_KEY, span).with(span);\n-    attachServerContext(newContext, storage);\n-    return newContext.makeCurrent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc9a2e73dd5405e9c9638c96b95c356654a6ed9"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExODEwMw==", "bodyText": "A, I see, every instrumentation now does that itself.\nI have one problem with this and with the removal of startScope: inconsistency. Now instrumentations which use HttpServerTracer and those which use e.g. HttpClientTracer are different. They used to follow the same pattern: startSpan+startScope, now they are going to be different. Maybe it is worth leaving startScope method here with just context.makeCurrent() to preserve uniformity?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#discussion_r533118103", "createdAt": "2020-12-01T07:18:42Z", "author": {"login": "iNikem"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/HttpServerTracer.java", "diffHunk": "@@ -58,67 +69,51 @@ public Context startSpan(\n     onRequest(span, request);\n     onConnectionAndRequest(span, connection, request);\n \n-    return parentContext.with(span);\n-  }\n+    Context context = parentContext.with(CONTEXT_SERVER_SPAN_KEY, span).with(span);\n+    attachServerContext(context, storage);\n \n-  /**\n-   * Creates new scoped context, based on the current context, with the given span.\n-   *\n-   * <p>Attaches new context to the request to avoid creating duplicate server spans.\n-   */\n-  public Scope startScope(Span span, STORAGE storage) {\n-    return startScope(span, storage, Context.current());\n-  }\n-\n-  /**\n-   * Creates new scoped context, based on the given context, with the given span.\n-   *\n-   * <p>Attaches new context to the request to avoid creating duplicate server spans.\n-   */\n-  public Scope startScope(Span span, STORAGE storage, Context context) {\n-    // TODO we could do this in one go, but TracingContextUtils.CONTEXT_SPAN_KEY is private\n-    Context newContext = context.with(CONTEXT_SERVER_SPAN_KEY, span).with(span);\n-    attachServerContext(newContext, storage);\n-    return newContext.makeCurrent();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNjAyOQ=="}, "originalCommit": {"oid": "dcc9a2e73dd5405e9c9638c96b95c356654a6ed9"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4cbac6158beebff5ff1dbf2f92151f0608fcb45", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e4cbac6158beebff5ff1dbf2f92151f0608fcb45", "committedDate": "2020-12-01T07:50:44Z", "message": "Revert change I thought was needed for NullAway"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNTg4NTQx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#pullrequestreview-541588541", "createdAt": "2020-12-01T08:07:08Z", "commit": {"oid": "e4cbac6158beebff5ff1dbf2f92151f0608fcb45"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxOTAwMjI5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#pullrequestreview-541900229", "createdAt": "2020-12-01T13:37:55Z", "commit": {"oid": "e4cbac6158beebff5ff1dbf2f92151f0608fcb45"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2108, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}