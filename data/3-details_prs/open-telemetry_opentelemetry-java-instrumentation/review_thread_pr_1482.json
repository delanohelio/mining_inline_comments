{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5ODc4Nzg5", "number": 1482, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDo1MDoyOVrOEx2KoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDo1MDoyOVrOEx2KoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzAzMTM3OnYy", "diffSide": "RIGHT", "path": "instrumentation/cassandra/cassandra-4.0/src/main/java/io/opentelemetry/javaagent/instrumentation/cassandra/v4_0/CassandraDatabaseClientTracer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDo1MDoyOVrOHoKH9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOTowMjo1OFrOHoeOrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3MDk2NQ==", "bodyText": "I don't think it's related to this PR since we have many instrumentations with the same pattern - I often worry about blocking an event loop with a DNS lookup just to set a span attribute. I want (someone) to remove the spec's language encouraging a DNS lookup just to resolve an attribute.\nJust the word resolve makes it more obvious than Java where a seemingly normal getter has the chance to block and brought this point up for me :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482#discussion_r511870965", "createdAt": "2020-10-26T10:50:29Z", "author": {"login": "anuraaga"}, "path": "instrumentation/cassandra/cassandra-4.0/src/main/java/io/opentelemetry/javaagent/instrumentation/cassandra/v4_0/CassandraDatabaseClientTracer.java", "diffHunk": "@@ -47,8 +47,10 @@ protected InetSocketAddress peerAddress(CqlSession cqlSession) {\n   public void onResponse(Span span, ExecutionInfo executionInfo) {\n     Node coordinator = executionInfo.getCoordinator();\n     if (coordinator != null) {\n-      Optional<InetSocketAddress> address = coordinator.getBroadcastRpcAddress();\n-      address.ifPresent(inetSocketAddress -> NetPeerUtils.setNetPeer(span, inetSocketAddress));\n+      SocketAddress socketAddress = coordinator.getEndPoint().resolve();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkwMTkzMg==", "bodyText": "Good point. But this may be related to the general question of bringing performance considerations into semantic conventions...", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482#discussion_r511901932", "createdAt": "2020-10-26T11:49:22Z", "author": {"login": "iNikem"}, "path": "instrumentation/cassandra/cassandra-4.0/src/main/java/io/opentelemetry/javaagent/instrumentation/cassandra/v4_0/CassandraDatabaseClientTracer.java", "diffHunk": "@@ -47,8 +47,10 @@ protected InetSocketAddress peerAddress(CqlSession cqlSession) {\n   public void onResponse(Span span, ExecutionInfo executionInfo) {\n     Node coordinator = executionInfo.getCoordinator();\n     if (coordinator != null) {\n-      Optional<InetSocketAddress> address = coordinator.getBroadcastRpcAddress();\n-      address.ifPresent(inetSocketAddress -> NetPeerUtils.setNetPeer(span, inetSocketAddress));\n+      SocketAddress socketAddress = coordinator.getEndPoint().resolve();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3MDk2NQ=="}, "originalCommit": {"oid": "0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwMDM2Ng==", "bodyText": "I'd be interested if we force DNS resolution anywhere, I know we've tried to avoid that in the past.\nIn this case, I'm not sure why the method is named resolve(), at least the implementation I'm seeing when I look doesn't seem to resolve anything.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482#discussion_r512200366", "createdAt": "2020-10-26T19:02:58Z", "author": {"login": "trask"}, "path": "instrumentation/cassandra/cassandra-4.0/src/main/java/io/opentelemetry/javaagent/instrumentation/cassandra/v4_0/CassandraDatabaseClientTracer.java", "diffHunk": "@@ -47,8 +47,10 @@ protected InetSocketAddress peerAddress(CqlSession cqlSession) {\n   public void onResponse(Span span, ExecutionInfo executionInfo) {\n     Node coordinator = executionInfo.getCoordinator();\n     if (coordinator != null) {\n-      Optional<InetSocketAddress> address = coordinator.getBroadcastRpcAddress();\n-      address.ifPresent(inetSocketAddress -> NetPeerUtils.setNetPeer(span, inetSocketAddress));\n+      SocketAddress socketAddress = coordinator.getEndPoint().resolve();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3MDk2NQ=="}, "originalCommit": {"oid": "0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4743, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}