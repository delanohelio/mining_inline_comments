{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2Njg3MTI0", "number": 948, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo0MTowM1rOEXtZBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo0NDoxNFrOEXtd1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjk2Mzg5OnYy", "diffSide": "RIGHT", "path": "smoke-tests/springboot/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo0MTowM1rOG_pm1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo0MTowM1rOG_pm1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM5NTE1Nw==", "bodyText": "same\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              to.image = \"docker.pkg.github.com/open-telemetry/opentelemetry-java-instrumentation/smoke-springboot-$targetJDK\"\n          \n          \n            \n              to.image = \"docker.pkg.github.com/open-telemetry/opentelemetry-java-instrumentation/smoke-springboot-jdk$targetJDK\"", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/948#discussion_r469395157", "createdAt": "2020-08-12T16:41:03Z", "author": {"login": "trask"}, "path": "smoke-tests/springboot/build.gradle", "diffHunk": "@@ -2,22 +2,28 @@ plugins {\n   id 'org.springframework.boot' version '2.3.2.RELEASE'\n   id 'io.spring.dependency-management' version '1.0.9.RELEASE'\n   id 'java'\n-  id 'com.google.cloud.tools.jib' version '2.4.0'\n+  id 'com.google.cloud.tools.jib' version '2.5.0'\n }\n \n group = 'io.opentelemetry'\n version = '0.0.1-SNAPSHOT'\n-sourceCompatibility = '8'\n \n repositories {\n   jcenter()\n }\n \n dependencies {\n   implementation 'org.springframework.boot:spring-boot-starter-web'\n+  implementation 'io.opentelemetry:opentelemetry-extension-auto-annotations:0.7.0'\n }\n \n+compileJava {\n+  options.release = 8\n+}\n+\n+def targetJDK = project.hasProperty(\"targetJDK\") ? project.targetJDK : 11\n+\n jib {\n-  from.image = \"bellsoft/liberica-openjdk-alpine:11\"\n-  to.image = \"docker.pkg.github.com/open-telemetry/opentelemetry-java-instrumentation/smoke-springboot\"\n+  from.image = \"bellsoft/liberica-openjdk-alpine:$targetJDK\"\n+  to.image = \"docker.pkg.github.com/open-telemetry/opentelemetry-java-instrumentation/smoke-springboot-$targetJDK\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "773467f61c4792ab9f5aba560d46a05e9b79758e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjk2NjY2OnYy", "diffSide": "RIGHT", "path": "smoke-tests/play/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo0MTo0OFrOG_pogA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo0MTo0OFrOG_pogA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM5NTU4NA==", "bodyText": "just to make image name a little clearer\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              to.image = \"docker.pkg.github.com/open-telemetry/opentelemetry-java-instrumentation/smoke-play-$targetJDK\"\n          \n          \n            \n              to.image = \"docker.pkg.github.com/open-telemetry/opentelemetry-java-instrumentation/smoke-play-jdk$targetJDK\"", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/948#discussion_r469395584", "createdAt": "2020-08-12T16:41:48Z", "author": {"login": "trask"}, "path": "smoke-tests/play/build.gradle", "diffHunk": "@@ -35,8 +35,10 @@ dependencies {\n   implementation \"com.typesafe.play:filters-helpers_$scalaVersion:$playVersion\"\n }\n \n+def targetJDK = project.hasProperty(\"targetJDK\") ? project.targetJDK : 11\n+\n jib {\n-  from.image = \"bellsoft/liberica-openjdk-alpine:11\"\n-  to.image = \"docker.pkg.github.com/open-telemetry/opentelemetry-java-instrumentation/smoke-play\"\n+  from.image = \"bellsoft/liberica-openjdk-alpine:$targetJDK\"\n+  to.image = \"docker.pkg.github.com/open-telemetry/opentelemetry-java-instrumentation/smoke-play-$targetJDK\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "773467f61c4792ab9f5aba560d46a05e9b79758e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjk3NjIyOnYy", "diffSide": "RIGHT", "path": "smoke-tests/src/test/groovy/io/opentelemetry/smoketest/PlaySmokeTest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo0NDoxNFrOG_puRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo0NDoxNFrOG_puRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM5NzA2Mg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/948#discussion_r469397062", "createdAt": "2020-08-12T16:44:14Z", "author": {"login": "trask"}, "path": "smoke-tests/src/test/groovy/io/opentelemetry/smoketest/PlaySmokeTest.groovy", "diffHunk": "@@ -39,6 +40,12 @@ class PlaySmokeTest extends SmokeTest {\n     //Both play and akka-http support produce spans with the same name.\n     //One internal, one SERVER\n     countSpansByName(traces, 'GET /welcome') == 2\n+\n+    cleanup:\n+    stopTarget()\n+\n+    where:\n+    jdk << [8, 11, 14]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "773467f61c4792ab9f5aba560d46a05e9b79758e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 21, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}