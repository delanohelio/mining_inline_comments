{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNzUwNjcz", "number": 1690, "title": "Update to SDK 0.11.0", "bodyText": "", "createdAt": "2020-11-19T07:54:10Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1690", "merged": true, "mergeCommit": {"oid": "7bfb6b6dbdea73b443601591de97f5130add744f"}, "closed": true, "closedAt": "2020-11-20T03:37:50Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdd9WmaAH2gAyNTIzNzUwNjczOjYzNDUxMWZhZGQ1OWZmNDQ5OWIxYWVkNTQ1Yzk0MDQwY2FmNDliNDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeMPa4AH2gAyNTIzNzUwNjczOjQ2Nzg3NWJmZTZkMmNhY2EwZTVjNDY4MGNjZTM5OGUwYzUyODAxZTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "634511fadd59ff4499b1aed545c94040caf49b49", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/634511fadd59ff4499b1aed545c94040caf49b49", "committedDate": "2020-11-19T07:09:56Z", "message": "Update to SDK 0.11.0"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTkzMzIw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1690#pullrequestreview-534193320", "createdAt": "2020-11-19T08:47:17Z", "commit": {"oid": "634511fadd59ff4499b1aed545c94040caf49b49"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODo0NzoxN1rOH2SZFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODo1MToyMVrOH2Si1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY4NjQ4Ng==", "bodyText": "Shouldn't static imports go before \"normal\" imports?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1690#discussion_r526686486", "createdAt": "2020-11-19T08:47:17Z", "author": {"login": "mateuszrzeszutek"}, "path": "instrumentation/aws-lambda-1.0/library/src/test/groovy/io/opentelemetry/instrumentation/awslambda/v1_0/AwsLambdaSqsMessageHandlerTest.groovy", "diffHunk": "@@ -5,19 +5,19 @@\n \n package io.opentelemetry.instrumentation.awslambda.v1_0\n \n-import static io.opentelemetry.api.trace.Span.Kind.CONSUMER\n-import static io.opentelemetry.api.trace.Span.Kind.SERVER\n-\n import com.amazonaws.services.lambda.runtime.Context\n import com.amazonaws.services.lambda.runtime.events.SQSEvent\n-import io.opentelemetry.api.OpenTelemetry\n import io.opentelemetry.api.trace.attributes.SemanticAttributes\n import io.opentelemetry.api.trace.propagation.HttpTraceContext\n import io.opentelemetry.context.propagation.DefaultContextPropagators\n import io.opentelemetry.extension.trace.propagation.AwsXRayPropagator\n+import io.opentelemetry.instrumentation.test.AgentTestRunner\n import io.opentelemetry.instrumentation.test.InstrumentationSpecification\n import io.opentelemetry.instrumentation.test.InstrumentationTestTrait\n \n+import static io.opentelemetry.api.trace.Span.Kind.CONSUMER\n+import static io.opentelemetry.api.trace.Span.Kind.SERVER", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "634511fadd59ff4499b1aed545c94040caf49b49"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY4ODk4Mg==", "bodyText": "Minor reuse suggestion:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  OpenTelemetry.set(\n          \n          \n            \n                      OpenTelemetrySdk.builder()\n          \n          \n            \n                          .setResource(OpenTelemetrySdk.get().getResource())\n          \n          \n            \n                          .setClock(OpenTelemetrySdk.get().getClock())\n          \n          \n            \n                          .setMeterProvider(OpenTelemetry.getGlobalMeterProvider())\n          \n          \n            \n                          .setTracerProvider(unobfuscate(OpenTelemetry.getGlobalTracerProvider()))\n          \n          \n            \n                          .setPropagators(\n          \n          \n            \n                              DefaultContextPropagators.builder()\n          \n          \n            \n                                  .addTextMapPropagator(HttpTraceContext.getInstance())\n          \n          \n            \n                                  .build())\n          \n          \n            \n                          .build());\n          \n          \n            \n                  setGlobalPropagators(DefaultContextPropagators.builder()\n          \n          \n            \n                          .addTextMapPropagator(HttpTraceContext.getInstance())\n          \n          \n            \n                          .build());", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1690#discussion_r526688982", "createdAt": "2020-11-19T08:51:21Z", "author": {"login": "mateuszrzeszutek"}, "path": "testing-common/src/main/groovy/io/opentelemetry/instrumentation/test/AgentTestRunner.java", "diffHunk": "@@ -109,9 +112,17 @@\n         .getClass()\n         .getSimpleName()\n         .equals(\"NoopTextMapPropagator\")) {\n-      OpenTelemetry.setGlobalPropagators(\n-          DefaultContextPropagators.builder()\n-              .addTextMapPropagator(HttpTraceContext.getInstance())\n+      // Workaround https://github.com/open-telemetry/opentelemetry-java/pull/2096\n+      OpenTelemetry.set(\n+          OpenTelemetrySdk.builder()\n+              .setResource(OpenTelemetrySdk.get().getResource())\n+              .setClock(OpenTelemetrySdk.get().getClock())\n+              .setMeterProvider(OpenTelemetry.getGlobalMeterProvider())\n+              .setTracerProvider(unobfuscate(OpenTelemetry.getGlobalTracerProvider()))\n+              .setPropagators(\n+                  DefaultContextPropagators.builder()\n+                      .addTextMapPropagator(HttpTraceContext.getInstance())\n+                      .build())\n               .build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "634511fadd59ff4499b1aed545c94040caf49b49"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NjExMTc0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1690#pullrequestreview-534611174", "createdAt": "2020-11-19T16:13:58Z", "commit": {"oid": "634511fadd59ff4499b1aed545c94040caf49b49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NzY4OTgy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1690#pullrequestreview-534768982", "createdAt": "2020-11-19T19:14:51Z", "commit": {"oid": "634511fadd59ff4499b1aed545c94040caf49b49"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOToxNDo1MVrOH2twTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOToxNDo1MVrOH2twTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEzNDc5Nw==", "bodyText": "new Intellij workspace? looks like needs https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/docs/contributing/intellij-setup.md", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1690#discussion_r527134797", "createdAt": "2020-11-19T19:14:51Z", "author": {"login": "trask"}, "path": "instrumentation/aws-lambda-1.0/library/src/test/groovy/io/opentelemetry/instrumentation/awslambda/v1_0/TracingRequestStreamWrapperTest.groovy", "diffHunk": "@@ -5,20 +5,21 @@\n \n package io.opentelemetry.instrumentation.awslambda.v1_0\n \n-import static io.opentelemetry.api.trace.Span.Kind.SERVER\n-\n import com.amazonaws.services.lambda.runtime.Context\n import com.amazonaws.services.lambda.runtime.RequestStreamHandler\n-import io.opentelemetry.api.OpenTelemetry\n import io.opentelemetry.api.trace.attributes.SemanticAttributes\n import io.opentelemetry.context.propagation.DefaultContextPropagators\n+import io.opentelemetry.instrumentation.test.AgentTestRunner\n import io.opentelemetry.instrumentation.test.InstrumentationSpecification\n import io.opentelemetry.instrumentation.test.InstrumentationTestTrait\n-import java.nio.charset.Charset\n import org.junit.Rule\n import org.junit.contrib.java.lang.system.EnvironmentVariables\n import spock.lang.Shared\n \n+import java.nio.charset.Charset", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "634511fadd59ff4499b1aed545c94040caf49b49"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb462e031be48584db28a61b0de462a72b3c6752", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fb462e031be48584db28a61b0de462a72b3c6752", "committedDate": "2020-11-19T22:43:15Z", "message": "Merge remote-tracking branch 'upstream/master' into pr-otel-0.11"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96394ff2ea2f55b43b3d360a17936b932e4f9826", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/96394ff2ea2f55b43b3d360a17936b932e4f9826", "committedDate": "2020-11-19T22:47:18Z", "message": "Shade OTel SPI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "465bf4d933d41dbaf261efe63f07701a0f2ae7a8", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/465bf4d933d41dbaf261efe63f07701a0f2ae7a8", "committedDate": "2020-11-19T22:53:15Z", "message": "Accept review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54718914d0132899517a92c00209e92faff5c088", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/54718914d0132899517a92c00209e92faff5c088", "committedDate": "2020-11-19T23:40:40Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "467875bfe6d2caca0e5c4680cce398e0c52801e0", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/467875bfe6d2caca0e5c4680cce398e0c52801e0", "committedDate": "2020-11-20T00:30:40Z", "message": "Spotless"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2290, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}