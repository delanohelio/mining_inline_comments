{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NjI3NjU1", "number": 842, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMDo0NTozNFrOET5Fqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNTozMTo1MlrOET70Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjkzNzM4OnYy", "diffSide": "LEFT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMDo0NTozNFrOG54dYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMTowODo0MlrOG5410w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM0NzA0MA==", "bodyText": "Isn't this property still there?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/842#discussion_r463347040", "createdAt": "2020-07-31T00:45:34Z", "author": {"login": "anuraaga"}, "path": "README.md", "diffHunk": "@@ -276,10 +280,9 @@ The `@WithSpan` annotation requires code changes to implement. You can\n disable the annotation at runtime via the exclude configuration or\n environment variables:\n \n-| System property                  | Environment variable             | Purpose                                                              |\n-|----------------------------------|----------------------------------|----------------------------------------------------------------------|\n-| trace.classes.exclude            | TRACE_CLASSES_EXCLUDE            | Exclude classes with the `@WithSpan` annotation                      |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "959f6729b33063af3a242502698680d8561072b4"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1MjYxOA==", "bodyText": "I moved documentation of that property to the \"Suppressing specific auto-instrumentation\" section above (which links to a new doc page)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/842#discussion_r463352618", "createdAt": "2020-07-31T01:05:44Z", "author": {"login": "trask"}, "path": "README.md", "diffHunk": "@@ -276,10 +280,9 @@ The `@WithSpan` annotation requires code changes to implement. You can\n disable the annotation at runtime via the exclude configuration or\n environment variables:\n \n-| System property                  | Environment variable             | Purpose                                                              |\n-|----------------------------------|----------------------------------|----------------------------------------------------------------------|\n-| trace.classes.exclude            | TRACE_CLASSES_EXCLUDE            | Exclude classes with the `@WithSpan` annotation                      |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM0NzA0MA=="}, "originalCommit": {"oid": "959f6729b33063af3a242502698680d8561072b4"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1MzI5OQ==", "bodyText": "Ah sorry missed that markdown in the middle of the java files!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/842#discussion_r463353299", "createdAt": "2020-07-31T01:08:42Z", "author": {"login": "anuraaga"}, "path": "README.md", "diffHunk": "@@ -276,10 +280,9 @@ The `@WithSpan` annotation requires code changes to implement. You can\n disable the annotation at runtime via the exclude configuration or\n environment variables:\n \n-| System property                  | Environment variable             | Purpose                                                              |\n-|----------------------------------|----------------------------------|----------------------------------------------------------------------|\n-| trace.classes.exclude            | TRACE_CLASSES_EXCLUDE            | Exclude classes with the `@WithSpan` annotation                      |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM0NzA0MA=="}, "originalCommit": {"oid": "959f6729b33063af3a242502698680d8561072b4"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzM4NDM5OnYy", "diffSide": "RIGHT", "path": "docs/suppressing-instrumentation.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNTozMTo1MlrOG58e2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNzozNDoyMFrOG6Qd7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMjk1Mg==", "bodyText": "Documentation is wrong. We exclude classes here, not methods :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/842#discussion_r463412952", "createdAt": "2020-07-31T05:31:52Z", "author": {"login": "iNikem"}, "path": "docs/suppressing-instrumentation.md", "diffHunk": "@@ -0,0 +1,26 @@\n+## Suppressing specific auto-instrumentation\n+\n+You can suppress auto-instrumentation of specific libraries by using\n+`-Dota.integration.[id].enabled=true`.\n+\n+where `id` is the instrumentation `id`:\n+\n+[TODO add table here with all instrumentation ids]\n+\n+### Even more fine-grained control\n+\n+You can also exclude specific classes from being instrumented.\n+\n+This can be useful to completely silence spans from a given class/package.\n+\n+Or as a quick workaround for an instrumentation bug, when byte code in one specific class is problematic.\n+\n+This option should not be used lightly, as it can leave some instrumentation partially applied,\n+which could have unknown side-effects.\n+\n+If you find yourself needing to use this, it would be great if you could drop us an issue explaining why,\n+so that we can try to come up with a better solution to address your need.\n+\n+| System property       | Environment variable  | Purpose                                                                                                                         |\n+|-----------------------|-----------------------|---------------------------------------------------------------------------------------------------------------------------------|\n+| trace.classes.exclude | TRACE_CLASSES_EXCLUDE | Exclude methods with the `@WithSpan` annotation, the format \"my.package.MyClass1[method1,method2];my.package.MyClass2[method3]\" |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "959f6729b33063af3a242502698680d8561072b4"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc0MDM5Ng==", "bodyText": "fixed!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/842#discussion_r463740396", "createdAt": "2020-07-31T17:34:20Z", "author": {"login": "trask"}, "path": "docs/suppressing-instrumentation.md", "diffHunk": "@@ -0,0 +1,26 @@\n+## Suppressing specific auto-instrumentation\n+\n+You can suppress auto-instrumentation of specific libraries by using\n+`-Dota.integration.[id].enabled=true`.\n+\n+where `id` is the instrumentation `id`:\n+\n+[TODO add table here with all instrumentation ids]\n+\n+### Even more fine-grained control\n+\n+You can also exclude specific classes from being instrumented.\n+\n+This can be useful to completely silence spans from a given class/package.\n+\n+Or as a quick workaround for an instrumentation bug, when byte code in one specific class is problematic.\n+\n+This option should not be used lightly, as it can leave some instrumentation partially applied,\n+which could have unknown side-effects.\n+\n+If you find yourself needing to use this, it would be great if you could drop us an issue explaining why,\n+so that we can try to come up with a better solution to address your need.\n+\n+| System property       | Environment variable  | Purpose                                                                                                                         |\n+|-----------------------|-----------------------|---------------------------------------------------------------------------------------------------------------------------------|\n+| trace.classes.exclude | TRACE_CLASSES_EXCLUDE | Exclude methods with the `@WithSpan` annotation, the format \"my.package.MyClass1[method1,method2];my.package.MyClass2[method3]\" |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMjk1Mg=="}, "originalCommit": {"oid": "959f6729b33063af3a242502698680d8561072b4"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 190, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}