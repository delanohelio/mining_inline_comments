{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MDM0MDMz", "number": 1310, "title": "Refactor all tests that use Config so that they don't fail locally", "bodyText": "Fixes #1306\n\nThere are 3 tests in instrumentation-api module which all set one and the same system property to different values. It seems that during parallel/concurrent test invocation they step on each others toes. Interestingly enough, they seem to work in our CI, probably due to different level of parallelism.\n\nWhy did it work on the CI: we use retries on the CI, but not when running tests locally. I suspect that Gradle only re-ran the failing tests (since that would be the sane thing to do), so with each retry NetPeerUtils would be loaded again, but with different property value. And so on until it passed - we use 5 retries (java.gradle) so that should be enough.\nI've decided to refactor all tests that modify Config to avoid the same situation in different places:\n\nfor modules that did not need to modify the test configuration I've used the newly-added config SPI to provide static config;\nthose that needed to modify the config still use ConfigUtils, but I've refactored it and added Javadocs. I hoped that I could get rid of AgentTestRunner.resetInstrumentation(), but not in this PR unfortunately.", "createdAt": "2020-10-02T17:14:18Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1310", "merged": true, "mergeCommit": {"oid": "409530629feffa95a31590542aab115d6721d67e"}, "closed": true, "closedAt": "2020-10-08T17:01:32Z", "author": {"login": "mateuszrzeszutek"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOqmOCABqjM4MzUyMzAwNDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQj1mngFqTUwNDk0MDUzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d8fed8a15fb9a132835b748b9ac8c1633ed1f9a", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0d8fed8a15fb9a132835b748b9ac8c1633ed1f9a", "committedDate": "2020-10-02T17:13:32Z", "message": "Refactor all tests that use Config so that they don't fail locally"}, "afterCommit": {"oid": "a5a6eb8cfe94476c454cb9338fd2c9895137c96d", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a5a6eb8cfe94476c454cb9338fd2c9895137c96d", "committedDate": "2020-10-02T18:49:45Z", "message": "Refactor all tests that use Config so that they don't fail locally"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5a6eb8cfe94476c454cb9338fd2c9895137c96d", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a5a6eb8cfe94476c454cb9338fd2c9895137c96d", "committedDate": "2020-10-02T18:49:45Z", "message": "Refactor all tests that use Config so that they don't fail locally"}, "afterCommit": {"oid": "06156049b3bf97f6ad2f10f19036495512181341", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/06156049b3bf97f6ad2f10f19036495512181341", "committedDate": "2020-10-02T19:08:54Z", "message": "Refactor all tests that use Config so that they don't fail locally"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "06156049b3bf97f6ad2f10f19036495512181341", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/06156049b3bf97f6ad2f10f19036495512181341", "committedDate": "2020-10-02T19:08:54Z", "message": "Refactor all tests that use Config so that they don't fail locally"}, "afterCommit": {"oid": "22e150c255f02f7c8d9115fde8eb63ef9b489034", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/22e150c255f02f7c8d9115fde8eb63ef9b489034", "committedDate": "2020-10-02T19:25:35Z", "message": "Refactor all tests that use Config so that they don't fail locally"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjc5NjYx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1310#pullrequestreview-501679661", "createdAt": "2020-10-05T01:16:31Z", "commit": {"oid": "22e150c255f02f7c8d9115fde8eb63ef9b489034"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjk1ODg5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1310#pullrequestreview-501695889", "createdAt": "2020-10-05T02:48:18Z", "commit": {"oid": "22e150c255f02f7c8d9115fde8eb63ef9b489034"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02fdaef9f7860ab4317d54fe482892be6f2b7980", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/02fdaef9f7860ab4317d54fe482892be6f2b7980", "committedDate": "2020-10-07T08:34:50Z", "message": "Refactor all tests that use Config so that they don't fail locally"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22e150c255f02f7c8d9115fde8eb63ef9b489034", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/22e150c255f02f7c8d9115fde8eb63ef9b489034", "committedDate": "2020-10-02T19:25:35Z", "message": "Refactor all tests that use Config so that they don't fail locally"}, "afterCommit": {"oid": "19ed53478fdb90d0ab42ac33e60aa93baa638cde", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/19ed53478fdb90d0ab42ac33e60aa93baa638cde", "committedDate": "2020-10-07T09:46:19Z", "message": "USe ConfigUtils in tests for all config-related things"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be077f4d588fe9c0763cb8a8d8fd23f1c875bcd0", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/be077f4d588fe9c0763cb8a8d8fd23f1c875bcd0", "committedDate": "2020-10-07T10:10:01Z", "message": "Use ConfigUtils in tests for all config-related things"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19ed53478fdb90d0ab42ac33e60aa93baa638cde", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/19ed53478fdb90d0ab42ac33e60aa93baa638cde", "committedDate": "2020-10-07T09:46:19Z", "message": "USe ConfigUtils in tests for all config-related things"}, "afterCommit": {"oid": "be077f4d588fe9c0763cb8a8d8fd23f1c875bcd0", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/be077f4d588fe9c0763cb8a8d8fd23f1c875bcd0", "committedDate": "2020-10-07T10:10:01Z", "message": "Use ConfigUtils in tests for all config-related things"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "701e54a990a688efda6365cef6f12a6a37bad28e", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/701e54a990a688efda6365cef6f12a6a37bad28e", "committedDate": "2020-10-07T10:25:06Z", "message": "Fix spotless and codenarc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1b3bacae75e0dddf5601bc0c39c66a7167a718e", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a1b3bacae75e0dddf5601bc0c39c66a7167a718e", "committedDate": "2020-10-07T10:44:01Z", "message": "Fix spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTUwNzE2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1310#pullrequestreview-503950716", "createdAt": "2020-10-07T14:36:57Z", "commit": {"oid": "a1b3bacae75e0dddf5601bc0c39c66a7167a718e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MTU3Mjkx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1310#pullrequestreview-504157291", "createdAt": "2020-10-07T18:28:22Z", "commit": {"oid": "a1b3bacae75e0dddf5601bc0c39c66a7167a718e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxODoyODoyMlrOHeAU0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxODozMDozOFrOHeAaUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIyNDY1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static final PREVIOUS_CONFIG = ConfigUtils.updateConfig {\n          \n          \n            \n                it.setProperty(\n          \n          \n            \n                  \"otel.endpoint.peer.service.mapping\",\n          \n          \n            \n                  \"1.2.3.4=catservice,dogs.com=dogsservice,opentelemetry.io=specservice\")\n          \n          \n            \n              }\n          \n          \n            \n              static final PREVIOUS_CONFIG = ConfigUtils.updateConfig {\n          \n          \n            \n                it.setProperty(\n          \n          \n            \n                  \"otel.endpoint.peer.service.mapping\",\n          \n          \n            \n                  \"dogs.com=dogsservice\")\n          \n          \n            \n              }", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1310#discussion_r501224658", "createdAt": "2020-10-07T18:28:22Z", "author": {"login": "trask"}, "path": "instrumentation-api/src/test/groovy/io/opentelemetry/instrumentation/api/tracer/HttpClientTracerTest.groovy", "diffHunk": "@@ -5,28 +5,29 @@\n \n package io.opentelemetry.instrumentation.api.tracer\n \n-import static io.opentelemetry.auto.test.utils.ConfigUtils.updateConfig\n-\n+import io.opentelemetry.auto.test.utils.ConfigUtils\n import io.opentelemetry.context.propagation.TextMapPropagator\n import io.opentelemetry.instrumentation.api.decorator.HttpStatusConverter\n import io.opentelemetry.trace.Span\n import io.opentelemetry.trace.attributes.SemanticAttributes\n import spock.lang.Shared\n \n class HttpClientTracerTest extends BaseTracerTest {\n-  static {\n-    updateConfig {\n-      System.setProperty(\n-        \"otel.endpoint.peer.service.mapping\",\n-        \"myhost-mapped=reservation-service\")\n-    }\n+  static final PREVIOUS_CONFIG = ConfigUtils.updateConfig {\n+    it.setProperty(\n+      \"otel.endpoint.peer.service.mapping\",\n+      \"1.2.3.4=catservice,dogs.com=dogsservice,opentelemetry.io=specservice\")\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1b3bacae75e0dddf5601bc0c39c66a7167a718e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIyNTY0MA==", "bodyText": "Is this needed?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static final PREVIOUS_CONFIG = ConfigUtils.updateConfigAndResetInstrumentation {\n          \n          \n            \n                it.setProperty(\"otel.trace.classes.exclude\",\n          \n          \n            \n                  \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,\"\n          \n          \n            \n                    + \"org.springframework.context.support.DefaultLifecycleProcessor\\$1\")\n          \n          \n            \n              }", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1310#discussion_r501225640", "createdAt": "2020-10-07T18:29:56Z", "author": {"login": "trask"}, "path": "instrumentation/jms-1.1/src/jms2Test/groovy/JMS2Test.groovy", "diffHunk": "@@ -34,6 +35,11 @@ import org.hornetq.jms.client.HornetQTextMessage\n import spock.lang.Shared\n \n class JMS2Test extends AgentTestRunner {\n+  static final PREVIOUS_CONFIG = ConfigUtils.updateConfigAndResetInstrumentation {\n+    it.setProperty(\"otel.trace.classes.exclude\",\n+      \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,\"\n+        + \"org.springframework.context.support.DefaultLifecycleProcessor\\$1\")\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1b3bacae75e0dddf5601bc0c39c66a7167a718e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIyNTg5NQ==", "bodyText": "is this needed?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static final PREVIOUS_CONFIG = ConfigUtils.updateConfigAndResetInstrumentation {\n          \n          \n            \n                it.setProperty(\"otel.trace.classes.exclude\",\n          \n          \n            \n                  \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,\"\n          \n          \n            \n                    + \"org.springframework.context.support.DefaultLifecycleProcessor\\$1\")\n          \n          \n            \n              }\n          \n          \n            \n            \n          \n          \n            \n              def cleanupSpec() {\n          \n          \n            \n                ConfigUtils.setConfig(PREVIOUS_CONFIG)\n          \n          \n            \n              }", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1310#discussion_r501225895", "createdAt": "2020-10-07T18:30:21Z", "author": {"login": "trask"}, "path": "instrumentation/jms-1.1/src/jms2Test/groovy/SpringListenerJMS2Test.groovy", "diffHunk": "@@ -15,6 +16,15 @@ import org.springframework.jms.core.JmsTemplate\n import org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter\n \n class SpringListenerJMS2Test extends AgentTestRunner {\n+  static final PREVIOUS_CONFIG = ConfigUtils.updateConfigAndResetInstrumentation {\n+    it.setProperty(\"otel.trace.classes.exclude\",\n+      \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,\"\n+        + \"org.springframework.context.support.DefaultLifecycleProcessor\\$1\")\n+  }\n+\n+  def cleanupSpec() {\n+    ConfigUtils.setConfig(PREVIOUS_CONFIG)\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1b3bacae75e0dddf5601bc0c39c66a7167a718e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIyNjA2Nw==", "bodyText": "same\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static final PREVIOUS_CONFIG = ConfigUtils.updateConfigAndResetInstrumentation {\n          \n          \n            \n                it.setProperty(\"otel.trace.classes.exclude\",\n          \n          \n            \n                  \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,\"\n          \n          \n            \n                    + \"org.springframework.context.support.DefaultLifecycleProcessor\\$1\")\n          \n          \n            \n              }", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1310#discussion_r501226067", "createdAt": "2020-10-07T18:30:38Z", "author": {"login": "trask"}, "path": "instrumentation/jms-1.1/src/jms2Test/groovy/SpringTemplateJMS2Test.groovy", "diffHunk": "@@ -28,6 +29,11 @@ import org.springframework.jms.core.JmsTemplate\n import spock.lang.Shared\n \n class SpringTemplateJMS2Test extends AgentTestRunner {\n+  static final PREVIOUS_CONFIG = ConfigUtils.updateConfigAndResetInstrumentation {\n+    it.setProperty(\"otel.trace.classes.exclude\",\n+      \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,\"\n+        + \"org.springframework.context.support.DefaultLifecycleProcessor\\$1\")\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1b3bacae75e0dddf5601bc0c39c66a7167a718e"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a41606c5815f4a937cfae0842dce3265ee21c894", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a41606c5815f4a937cfae0842dce3265ee21c894", "committedDate": "2020-10-08T09:01:58Z", "message": "PR comments: remove unnecessary config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0OTQwNTM4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1310#pullrequestreview-504940538", "createdAt": "2020-10-08T16:05:15Z", "commit": {"oid": "a41606c5815f4a937cfae0842dce3265ee21c894"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2464, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}