{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMDc5NzQz", "number": 1836, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMjozMzowNFrOFBkUwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjo0NzoyNVrOFBn24g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTg4MDM0OnYy", "diffSide": "RIGHT", "path": "instrumentation/elasticsearch/elasticsearch-transport-5.3/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/elasticsearch/transport/v5_3/Elasticsearch53TransportClientInstrumentationModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMjozMzowNFrOIATgFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMjozMzowNFrOIATgFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE5MDQyMw==", "bodyText": "We're really lucky that default interface methods work fine, heh", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1836#discussion_r537190423", "createdAt": "2020-12-07T02:33:04Z", "author": {"login": "anuraaga"}, "path": "instrumentation/elasticsearch/elasticsearch-transport-5.3/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/elasticsearch/transport/v5_3/Elasticsearch53TransportClientInstrumentationModule.java", "diffHunk": "@@ -67,27 +68,27 @@ public Elasticsearch53TransportClientInstrumentationModule() {\n     public static void onEnter(\n         @Advice.Argument(0) Action action,\n         @Advice.Argument(1) ActionRequest actionRequest,\n-        @Advice.Local(\"otelSpan\") Span span,\n+        @Advice.Local(\"otelContext\") Context context,\n         @Advice.Local(\"otelScope\") Scope scope,\n         @Advice.Argument(value = 2, readOnly = false)\n             ActionListener<ActionResponse> actionListener) {\n \n-      span = tracer().startSpan(null, action);\n-      scope = tracer().startScope(span);\n+      context = tracer().startSpan(currentContext(), null, action);\n+      scope = context.makeCurrent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "050b702fcf07dc2090c60f17a43af0a0650e00d5"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjQ1OTIyOnYy", "diffSide": "RIGHT", "path": "instrumentation/elasticsearch/elasticsearch-rest-5.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/elasticsearch/rest/v5_0/Elasticsearch5RestClientInstrumentationModule.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjo0NzoyNVrOIAYMGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNzoxMTowMlrOIAYu-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI2NzIyNw==", "bodyText": "In some places above you use Context.current() directly. What are the rules? How to choose when to use which? Are they written in CONTRIBUTING.md?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1836#discussion_r537267227", "createdAt": "2020-12-07T06:47:25Z", "author": {"login": "iNikem"}, "path": "instrumentation/elasticsearch/elasticsearch-rest-5.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/elasticsearch/rest/v5_0/Elasticsearch5RestClientInstrumentationModule.java", "diffHunk": "@@ -5,6 +5,7 @@\n \n package io.opentelemetry.javaagent.instrumentation.elasticsearch.rest.v5_0;\n \n+import static io.opentelemetry.javaagent.instrumentation.api.Java8BytecodeBridge.currentContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "050b702fcf07dc2090c60f17a43af0a0650e00d5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI3Mzc5NA==", "bodyText": "See the Javadoc for Java8BytecodeBridge. This situation is not good though. #1840 looks promising, less code in advice, less (no?) need for Java8BytecodeBridge.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1836#discussion_r537273794", "createdAt": "2020-12-07T07:04:59Z", "author": {"login": "trask"}, "path": "instrumentation/elasticsearch/elasticsearch-rest-5.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/elasticsearch/rest/v5_0/Elasticsearch5RestClientInstrumentationModule.java", "diffHunk": "@@ -5,6 +5,7 @@\n \n package io.opentelemetry.javaagent.instrumentation.elasticsearch.rest.v5_0;\n \n+import static io.opentelemetry.javaagent.instrumentation.api.Java8BytecodeBridge.currentContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI2NzIyNw=="}, "originalCommit": {"oid": "050b702fcf07dc2090c60f17a43af0a0650e00d5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI3NTA2Mg==", "bodyText": "If developers know about Java8BytecodeBridge they can read javadoc and understand what is going on. But how can they find it in the first place? :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1836#discussion_r537275062", "createdAt": "2020-12-07T07:08:05Z", "author": {"login": "iNikem"}, "path": "instrumentation/elasticsearch/elasticsearch-rest-5.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/elasticsearch/rest/v5_0/Elasticsearch5RestClientInstrumentationModule.java", "diffHunk": "@@ -5,6 +5,7 @@\n \n package io.opentelemetry.javaagent.instrumentation.elasticsearch.rest.v5_0;\n \n+import static io.opentelemetry.javaagent.instrumentation.api.Java8BytecodeBridge.currentContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI2NzIyNw=="}, "originalCommit": {"oid": "050b702fcf07dc2090c60f17a43af0a0650e00d5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI3NjE1Mg==", "bodyText": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/docs/contributing/writing-instrumentation.md#java-agent-instrumentation-gotchas", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1836#discussion_r537276152", "createdAt": "2020-12-07T07:11:02Z", "author": {"login": "trask"}, "path": "instrumentation/elasticsearch/elasticsearch-rest-5.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/elasticsearch/rest/v5_0/Elasticsearch5RestClientInstrumentationModule.java", "diffHunk": "@@ -5,6 +5,7 @@\n \n package io.opentelemetry.javaagent.instrumentation.elasticsearch.rest.v5_0;\n \n+import static io.opentelemetry.javaagent.instrumentation.api.Java8BytecodeBridge.currentContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI2NzIyNw=="}, "originalCommit": {"oid": "050b702fcf07dc2090c60f17a43af0a0650e00d5"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4490, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}