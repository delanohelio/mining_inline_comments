{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3MjYxMTQ2", "number": 1891, "title": "Update javadocs for generic types in HttpServerTracer", "bodyText": "This resolves #791", "createdAt": "2020-12-11T18:41:50Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1891", "merged": true, "mergeCommit": {"oid": "35005bd508779577ab4e449d21b08f7dc6386011"}, "closed": true, "closedAt": "2020-12-15T19:56:24Z", "author": {"login": "breedx-splk"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlMatWAH2gAyNTM3MjYxMTQ2OjUzZTg0Nzk0Y2FkZTI5MWNlNjNkNDdlNDA5ODQ3NmRmZWE4OTM5YzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmf5f0gFqTU1MjgxODkwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "53e84794cade291ce63d47e4098476dfea8939c1", "author": {"user": {"login": "breedx-splk", "name": "jason plumb"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/53e84794cade291ce63d47e4098476dfea8939c1", "committedDate": "2020-12-11T18:40:28Z", "message": "update javadocs for generic types in HttpServerTracer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNDg1NTc3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1891#pullrequestreview-550485577", "createdAt": "2020-12-11T18:56:36Z", "commit": {"oid": "53e84794cade291ce63d47e4098476dfea8939c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjk5MDc2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1891#pullrequestreview-550699076", "createdAt": "2020-12-12T07:35:12Z", "commit": {"oid": "53e84794cade291ce63d47e4098476dfea8939c1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwNzozNToxM1rOIEcBvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwNzozNToxM1rOIEcBvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyNDQxNA==", "bodyText": "can you check if there any subclasses that don't use CONNECTION, I'm not sure if makes sense to use Void for this (unlike STORAGE)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1891#discussion_r541524414", "createdAt": "2020-12-12T07:35:13Z", "author": {"login": "trask"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/HttpServerTracer.java", "diffHunk": "@@ -18,6 +18,19 @@\n import org.checkerframework.checker.nullness.qual.Nullable;\n \n // TODO In search for a better home package\n+\n+/**\n+ * Base class for implementing Tracers for HTTP servers. It has 3 types that must be specified by\n+ * subclasses:\n+ *\n+ * @param <REQUEST> - The specific type for HTTP requests\n+ * @param <RESPONSE> - The specific type for HTTP responses\n+ * @param <CONNECTION> - The specific type of HTTP connection, used to get peer address information\n+ *     and HTTP flavor. Use Void if your subclass does not need the connection for peerHostIP,\n+ *     peerPort, or flavor.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e84794cade291ce63d47e4098476dfea8939c1"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwODk0ODQ0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1891#pullrequestreview-550894844", "createdAt": "2020-12-13T08:03:00Z", "commit": {"oid": "53e84794cade291ce63d47e4098476dfea8939c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDQ0NTAw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1891#pullrequestreview-551044500", "createdAt": "2020-12-14T05:01:51Z", "commit": {"oid": "53e84794cade291ce63d47e4098476dfea8939c1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNTowMTo1MVrOIE_9Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNTowMTo1MVrOIE_9Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjExMzEyMw==", "bodyText": "Any doc is better than no doc so this LGTM, but maybe we can go further. STORAGE has always been very hard for me to grok. This comment still doesn't really tell me how to use this parameter, \"what's server context\", \"what's implementation specific storage\" are still remaining questions.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1891#discussion_r542113123", "createdAt": "2020-12-14T05:01:51Z", "author": {"login": "anuraaga"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/HttpServerTracer.java", "diffHunk": "@@ -18,6 +18,19 @@\n import org.checkerframework.checker.nullness.qual.Nullable;\n \n // TODO In search for a better home package\n+\n+/**\n+ * Base class for implementing Tracers for HTTP servers. It has 3 types that must be specified by\n+ * subclasses:\n+ *\n+ * @param <REQUEST> - The specific type for HTTP requests\n+ * @param <RESPONSE> - The specific type for HTTP responses\n+ * @param <CONNECTION> - The specific type of HTTP connection, used to get peer address information\n+ *     and HTTP flavor. Use Void if your subclass does not need the connection for peerHostIP,\n+ *     peerPort, or flavor.\n+ * @param <STORAGE> - Implementation specific storage type for attaching/getting the server context.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e84794cade291ce63d47e4098476dfea8939c1"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1ac26c54cbc093c816b6fba03c442a3d58abff7", "author": {"user": {"login": "breedx-splk", "name": "jason plumb"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f1ac26c54cbc093c816b6fba03c442a3d58abff7", "committedDate": "2020-12-15T16:50:29Z", "message": "remove suggestion to use Void -- all subclasses will use this type."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyODE4OTAw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1891#pullrequestreview-552818900", "createdAt": "2020-12-15T19:56:13Z", "commit": {"oid": "f1ac26c54cbc093c816b6fba03c442a3d58abff7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1973, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}