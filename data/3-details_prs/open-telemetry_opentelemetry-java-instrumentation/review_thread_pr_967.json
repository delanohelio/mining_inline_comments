{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NjY5MjU0", "number": 967, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjowMTozMlrOEYT0CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjowMTozMlrOEYT0CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTI1ODk2OnYy", "diffSide": "RIGHT", "path": "library-api/src/test/groovy/io/opentelemetry/instrumentation/api/tracer/HttpClientTracerTest.groovy", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjowMTozMlrOHAlFvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDoxMDo0OVrOHBCBRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2OTcyNQ==", "bodyText": "Do we need to add any test to exercise this functionality?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/967#discussion_r470369725", "createdAt": "2020-08-14T02:01:32Z", "author": {"login": "anuraaga"}, "path": "library-api/src/test/groovy/io/opentelemetry/instrumentation/api/tracer/HttpClientTracerTest.groovy", "diffHunk": "@@ -195,6 +197,16 @@ class HttpClientDecoratorTest extends ClientDecoratorTest {\n       protected String responseHeader(Map m, String name) {\n         return m[name]\n       }\n+\n+      @Override\n+      protected HttpTextFormat.Setter<Map> getSetter() {\n+        return null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "666e38d7e090c0a01aa5d125ca786891a929c1c1"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDczNzk1Mg==", "bodyText": "Per offline discussion with @trask, this is just cleaning up.  Adding tests will be a different task.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/967#discussion_r470737952", "createdAt": "2020-08-14T16:47:15Z", "author": {"login": "heyams"}, "path": "library-api/src/test/groovy/io/opentelemetry/instrumentation/api/tracer/HttpClientTracerTest.groovy", "diffHunk": "@@ -195,6 +197,16 @@ class HttpClientDecoratorTest extends ClientDecoratorTest {\n       protected String responseHeader(Map m, String name) {\n         return m[name]\n       }\n+\n+      @Override\n+      protected HttpTextFormat.Setter<Map> getSetter() {\n+        return null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2OTcyNQ=="}, "originalCommit": {"oid": "666e38d7e090c0a01aa5d125ca786891a929c1c1"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDczOTIzMQ==", "bodyText": "@heyams is this tracked in #912?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/967#discussion_r470739231", "createdAt": "2020-08-14T16:49:44Z", "author": {"login": "trask"}, "path": "library-api/src/test/groovy/io/opentelemetry/instrumentation/api/tracer/HttpClientTracerTest.groovy", "diffHunk": "@@ -195,6 +197,16 @@ class HttpClientDecoratorTest extends ClientDecoratorTest {\n       protected String responseHeader(Map m, String name) {\n         return m[name]\n       }\n+\n+      @Override\n+      protected HttpTextFormat.Setter<Map> getSetter() {\n+        return null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2OTcyNQ=="}, "originalCommit": {"oid": "666e38d7e090c0a01aa5d125ca786891a929c1c1"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDgxNTQ4Ng==", "bodyText": "No, I didn't track it.  Feel free to create a separate issue if needed.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/967#discussion_r470815486", "createdAt": "2020-08-14T19:03:06Z", "author": {"login": "heyams"}, "path": "library-api/src/test/groovy/io/opentelemetry/instrumentation/api/tracer/HttpClientTracerTest.groovy", "diffHunk": "@@ -195,6 +197,16 @@ class HttpClientDecoratorTest extends ClientDecoratorTest {\n       protected String responseHeader(Map m, String name) {\n         return m[name]\n       }\n+\n+      @Override\n+      protected HttpTextFormat.Setter<Map> getSetter() {\n+        return null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2OTcyNQ=="}, "originalCommit": {"oid": "666e38d7e090c0a01aa5d125ca786891a929c1c1"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg0MzcxOQ==", "bodyText": "Ok, created #986", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/967#discussion_r470843719", "createdAt": "2020-08-14T20:10:49Z", "author": {"login": "trask"}, "path": "library-api/src/test/groovy/io/opentelemetry/instrumentation/api/tracer/HttpClientTracerTest.groovy", "diffHunk": "@@ -195,6 +197,16 @@ class HttpClientDecoratorTest extends ClientDecoratorTest {\n       protected String responseHeader(Map m, String name) {\n         return m[name]\n       }\n+\n+      @Override\n+      protected HttpTextFormat.Setter<Map> getSetter() {\n+        return null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2OTcyNQ=="}, "originalCommit": {"oid": "666e38d7e090c0a01aa5d125ca786891a929c1c1"}, "originalPosition": 116}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 29, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}