{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0ODc3MjI2", "number": 1404, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjo1MDoyM1rOEum_sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjo1MDoyM1rOEum_sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzA4ODQ5OnYy", "diffSide": "RIGHT", "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjo1MDoyM1rOHjIW8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNDowNzoyNlrOHkp4eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg==", "bodyText": "We need to fix that black magic exporter matching soon...\nCan you add the same fix to MetricExporterFactory and MetricServer methods?\nThanks!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r506599152", "createdAt": "2020-10-16T16:50:23Z", "author": {"login": "mateuszrzeszutek"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -127,9 +127,8 @@ private static SpanExporterFactory findSpanExporterFactory(String exporterName)\n       if (spanExporterFactory\n           .getClass()\n           .getSimpleName()\n-          .replace(\"_\", \"\")\n           .toLowerCase()\n-          .startsWith(exporterName.toLowerCase())) {\n+          .startsWith(exporterName.replace(\"_\", \"\").toLowerCase())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c5f8c4f2cc8e85b5a25656759773c0bbc14bb3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY0NjQ5NQ==", "bodyText": "can we make it so that otlpspan does not work? I think better to be strict about only supporting the values in the spec https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/sdk-environment-variables.md#exporter-selection", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r506646495", "createdAt": "2020-10-16T18:15:20Z", "author": {"login": "trask"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -127,9 +127,8 @@ private static SpanExporterFactory findSpanExporterFactory(String exporterName)\n       if (spanExporterFactory\n           .getClass()\n           .getSimpleName()\n-          .replace(\"_\", \"\")\n           .toLowerCase()\n-          .startsWith(exporterName.toLowerCase())) {\n+          .startsWith(exporterName.replace(\"_\", \"\").toLowerCase())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg=="}, "originalCommit": {"oid": "10c5f8c4f2cc8e85b5a25656759773c0bbc14bb3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc0MTU0MA==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r507741540", "createdAt": "2020-10-19T13:22:50Z", "author": {"login": "malafeev"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -127,9 +127,8 @@ private static SpanExporterFactory findSpanExporterFactory(String exporterName)\n       if (spanExporterFactory\n           .getClass()\n           .getSimpleName()\n-          .replace(\"_\", \"\")\n           .toLowerCase()\n-          .startsWith(exporterName.toLowerCase())) {\n+          .startsWith(exporterName.replace(\"_\", \"\").toLowerCase())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg=="}, "originalCommit": {"oid": "10c5f8c4f2cc8e85b5a25656759773c0bbc14bb3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NTY3Ng==", "bodyText": "i think otlpspan will still work with latest change?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r507985676", "createdAt": "2020-10-19T18:48:43Z", "author": {"login": "trask"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -127,9 +127,8 @@ private static SpanExporterFactory findSpanExporterFactory(String exporterName)\n       if (spanExporterFactory\n           .getClass()\n           .getSimpleName()\n-          .replace(\"_\", \"\")\n           .toLowerCase()\n-          .startsWith(exporterName.toLowerCase())) {\n+          .startsWith(exporterName.replace(\"_\", \"\").toLowerCase())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg=="}, "originalCommit": {"oid": "10c5f8c4f2cc8e85b5a25656759773c0bbc14bb3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1MTg4MA==", "bodyText": "@trask, yes, otlpspan still works. If I will check for strict list of supported values then how user will be able to specify custom exporter?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r508151880", "createdAt": "2020-10-20T01:18:52Z", "author": {"login": "malafeev"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -127,9 +127,8 @@ private static SpanExporterFactory findSpanExporterFactory(String exporterName)\n       if (spanExporterFactory\n           .getClass()\n           .getSimpleName()\n-          .replace(\"_\", \"\")\n           .toLowerCase()\n-          .startsWith(exporterName.toLowerCase())) {\n+          .startsWith(exporterName.replace(\"_\", \"\").toLowerCase())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg=="}, "originalCommit": {"oid": "10c5f8c4f2cc8e85b5a25656759773c0bbc14bb3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE5Njk4NQ==", "bodyText": "ok, makes sense, we can tackle this later in #1287", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r508196985", "createdAt": "2020-10-20T04:07:26Z", "author": {"login": "trask"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -127,9 +127,8 @@ private static SpanExporterFactory findSpanExporterFactory(String exporterName)\n       if (spanExporterFactory\n           .getClass()\n           .getSimpleName()\n-          .replace(\"_\", \"\")\n           .toLowerCase()\n-          .startsWith(exporterName.toLowerCase())) {\n+          .startsWith(exporterName.replace(\"_\", \"\").toLowerCase())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg=="}, "originalCommit": {"oid": "10c5f8c4f2cc8e85b5a25656759773c0bbc14bb3"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4697, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}