{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxMzk0Mjcz", "number": 725, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwNToyMjo1NlrOEPurrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjozMzo0MVrOEP_Zng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTI4OTQyOnYy", "diffSide": "RIGHT", "path": "gradle/instrumentation.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwNToyMjo1NlrOGzl6HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQwNDo1OTo1M1rOGzshoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc1MTY0NA==", "bodyText": "Looks like we need to add -x integrationTest as well to circleci. Though probably better to define a property to handle that with withType(Test) globally, maybe -PskipTests.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r456751644", "createdAt": "2020-07-18T05:22:56Z", "author": {"login": "anuraaga"}, "path": "gradle/instrumentation.gradle", "diffHunk": "@@ -54,3 +51,21 @@ afterEvaluate {\n     testImplementation project(':utils:test-utils')\n   }\n }\n+\n+tasks.withType(Test) {\n+  useJUnit {\n+    excludeCategories 'io.opentelemetry.auto.test.BytecodeTests'\n+  }\n+}\n+\n+task integrationTest(type: Test) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f1d46b5497b9e9dd5ebd965f74d3641eb2562e5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc1NDM5NQ==", "bodyText": "Yeah, as usually I forget about CI. Have to review all jobs there", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r456754395", "createdAt": "2020-07-18T05:58:50Z", "author": {"login": "iNikem"}, "path": "gradle/instrumentation.gradle", "diffHunk": "@@ -54,3 +51,21 @@ afterEvaluate {\n     testImplementation project(':utils:test-utils')\n   }\n }\n+\n+tasks.withType(Test) {\n+  useJUnit {\n+    excludeCategories 'io.opentelemetry.auto.test.BytecodeTests'\n+  }\n+}\n+\n+task integrationTest(type: Test) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc1MTY0NA=="}, "originalCommit": {"oid": "0f1d46b5497b9e9dd5ebd965f74d3641eb2562e5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg2MDA2NA==", "bodyText": "Found that -PskipTests is already defined :-)\nhttps://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/gradle/java.gradle#L279", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r456860064", "createdAt": "2020-07-19T04:59:53Z", "author": {"login": "anuraaga"}, "path": "gradle/instrumentation.gradle", "diffHunk": "@@ -54,3 +51,21 @@ afterEvaluate {\n     testImplementation project(':utils:test-utils')\n   }\n }\n+\n+tasks.withType(Test) {\n+  useJUnit {\n+    excludeCategories 'io.opentelemetry.auto.test.BytecodeTests'\n+  }\n+}\n+\n+task integrationTest(type: Test) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc1MTY0NA=="}, "originalCommit": {"oid": "0f1d46b5497b9e9dd5ebd965f74d3641eb2562e5"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjAwMzkwOnYy", "diffSide": "LEFT", "path": ".circleci/config.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjoyNzoyOVrOGz6vGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOToyMDowMVrOG0B-gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5Mjg4OQ==", "bodyText": "Do you mind keeping the parameterization here? Really hoping to bring back testing on Java 11 and Java 14 soon", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457092889", "createdAt": "2020-07-20T06:27:29Z", "author": {"login": "trask"}, "path": ".circleci/config.yml", "diffHunk": "@@ -201,11 +201,8 @@ workflows:\n       - default_test_job:\n           requires:\n             - build\n-          prefixTestTask: true\n-          name: test_<< matrix.testTask >>\n-          matrix:\n-            parameters:\n-              testTask: [\"8\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIxMTUyMg==", "bodyText": "I hope to switch to GitHub Actions sooner :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457211522", "createdAt": "2020-07-20T09:20:01Z", "author": {"login": "iNikem"}, "path": ".circleci/config.yml", "diffHunk": "@@ -201,11 +201,8 @@ workflows:\n       - default_test_job:\n           requires:\n             - build\n-          prefixTestTask: true\n-          name: test_<< matrix.testTask >>\n-          matrix:\n-            parameters:\n-              testTask: [\"8\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5Mjg4OQ=="}, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjAwOTIwOnYy", "diffSide": "RIGHT", "path": "gradlew.bat", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjoyODo1NVrOGz6yKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTozMzo0MFrOG0CoRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5MzY3Mg==", "bodyText": "thanks \ud83d\ude04, i noticed git keeps wanting to change line endings on this file now that we added the .gitattributes", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457093672", "createdAt": "2020-07-20T06:28:55Z", "author": {"login": "trask"}, "path": "gradlew.bat", "diffHunk": "@@ -1,104 +1,104 @@\n-@rem\r\n-@rem Copyright 2015 the original author or authors.\r\n-@rem\r\n-@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n-@rem you may not use this file except in compliance with the License.\r\n-@rem You may obtain a copy of the License at\r\n-@rem\r\n-@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n-@rem\r\n-@rem Unless required by applicable law or agreed to in writing, software\r\n-@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n-@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-@rem See the License for the specific language governing permissions and\r\n-@rem limitations under the License.\r\n-@rem\r\n-\r\n-@if \"%DEBUG%\" == \"\" @echo off\r\n-@rem ##########################################################################\r\n-@rem\r\n-@rem  Gradle startup script for Windows\r\n-@rem\r\n-@rem ##########################################################################\r\n-\r\n-@rem Set local scope for the variables with windows NT shell\r\n-if \"%OS%\"==\"Windows_NT\" setlocal\r\n-\r\n-set DIRNAME=%~dp0\r\n-if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n-set APP_BASE_NAME=%~n0\r\n-set APP_HOME=%DIRNAME%\r\n-\r\n-@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\n-for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n-\r\n-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n-set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n-\r\n-@rem Find java.exe\r\n-if defined JAVA_HOME goto findJavaFromJavaHome\r\n-\r\n-set JAVA_EXE=java.exe\r\n-%JAVA_EXE% -version >NUL 2>&1\r\n-if \"%ERRORLEVEL%\" == \"0\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:findJavaFromJavaHome\r\n-set JAVA_HOME=%JAVA_HOME:\"=%\r\n-set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n-\r\n-if exist \"%JAVA_EXE%\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:init\r\n-@rem Get command-line arguments, handling Windows variants\r\n-\r\n-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n-\r\n-:win9xME_args\r\n-@rem Slurp the command line arguments.\r\n-set CMD_LINE_ARGS=\r\n-set _SKIP=2\r\n-\r\n-:win9xME_args_slurp\r\n-if \"x%~1\" == \"x\" goto execute\r\n-\r\n-set CMD_LINE_ARGS=%*\r\n-\r\n-:execute\r\n-@rem Setup the command line\r\n-\r\n-set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n-\r\n-\r\n-@rem Execute Gradle\r\n-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n-\r\n-:end\r\n-@rem End local scope for the variables with windows NT shell\r\n-if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n-\r\n-:fail\r\n-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n-rem the _cmd.exe /c_ return code!\r\n-if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n-exit /b 1\r\n-\r\n-:mainEnd\r\n-if \"%OS%\"==\"Windows_NT\" endlocal\r\n-\r\n-:omega\r\n+@rem", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEwMTcxNQ==", "bodyText": "Can you confirm the new version is using CRLF?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457101715", "createdAt": "2020-07-20T06:43:36Z", "author": {"login": "anuraaga"}, "path": "gradlew.bat", "diffHunk": "@@ -1,104 +1,104 @@\n-@rem\r\n-@rem Copyright 2015 the original author or authors.\r\n-@rem\r\n-@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n-@rem you may not use this file except in compliance with the License.\r\n-@rem You may obtain a copy of the License at\r\n-@rem\r\n-@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n-@rem\r\n-@rem Unless required by applicable law or agreed to in writing, software\r\n-@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n-@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-@rem See the License for the specific language governing permissions and\r\n-@rem limitations under the License.\r\n-@rem\r\n-\r\n-@if \"%DEBUG%\" == \"\" @echo off\r\n-@rem ##########################################################################\r\n-@rem\r\n-@rem  Gradle startup script for Windows\r\n-@rem\r\n-@rem ##########################################################################\r\n-\r\n-@rem Set local scope for the variables with windows NT shell\r\n-if \"%OS%\"==\"Windows_NT\" setlocal\r\n-\r\n-set DIRNAME=%~dp0\r\n-if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n-set APP_BASE_NAME=%~n0\r\n-set APP_HOME=%DIRNAME%\r\n-\r\n-@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\n-for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n-\r\n-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n-set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n-\r\n-@rem Find java.exe\r\n-if defined JAVA_HOME goto findJavaFromJavaHome\r\n-\r\n-set JAVA_EXE=java.exe\r\n-%JAVA_EXE% -version >NUL 2>&1\r\n-if \"%ERRORLEVEL%\" == \"0\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:findJavaFromJavaHome\r\n-set JAVA_HOME=%JAVA_HOME:\"=%\r\n-set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n-\r\n-if exist \"%JAVA_EXE%\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:init\r\n-@rem Get command-line arguments, handling Windows variants\r\n-\r\n-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n-\r\n-:win9xME_args\r\n-@rem Slurp the command line arguments.\r\n-set CMD_LINE_ARGS=\r\n-set _SKIP=2\r\n-\r\n-:win9xME_args_slurp\r\n-if \"x%~1\" == \"x\" goto execute\r\n-\r\n-set CMD_LINE_ARGS=%*\r\n-\r\n-:execute\r\n-@rem Setup the command line\r\n-\r\n-set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n-\r\n-\r\n-@rem Execute Gradle\r\n-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n-\r\n-:end\r\n-@rem End local scope for the variables with windows NT shell\r\n-if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n-\r\n-:fail\r\n-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n-rem the _cmd.exe /c_ return code!\r\n-if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n-exit /b 1\r\n-\r\n-:mainEnd\r\n-if \"%OS%\"==\"Windows_NT\" endlocal\r\n-\r\n-:omega\r\n+@rem", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5MzY3Mg=="}, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIxODkyOQ==", "bodyText": "Nope, it uses LF now. Will convert to CRLF.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457218929", "createdAt": "2020-07-20T09:29:46Z", "author": {"login": "iNikem"}, "path": "gradlew.bat", "diffHunk": "@@ -1,104 +1,104 @@\n-@rem\r\n-@rem Copyright 2015 the original author or authors.\r\n-@rem\r\n-@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n-@rem you may not use this file except in compliance with the License.\r\n-@rem You may obtain a copy of the License at\r\n-@rem\r\n-@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n-@rem\r\n-@rem Unless required by applicable law or agreed to in writing, software\r\n-@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n-@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-@rem See the License for the specific language governing permissions and\r\n-@rem limitations under the License.\r\n-@rem\r\n-\r\n-@if \"%DEBUG%\" == \"\" @echo off\r\n-@rem ##########################################################################\r\n-@rem\r\n-@rem  Gradle startup script for Windows\r\n-@rem\r\n-@rem ##########################################################################\r\n-\r\n-@rem Set local scope for the variables with windows NT shell\r\n-if \"%OS%\"==\"Windows_NT\" setlocal\r\n-\r\n-set DIRNAME=%~dp0\r\n-if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n-set APP_BASE_NAME=%~n0\r\n-set APP_HOME=%DIRNAME%\r\n-\r\n-@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\n-for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n-\r\n-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n-set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n-\r\n-@rem Find java.exe\r\n-if defined JAVA_HOME goto findJavaFromJavaHome\r\n-\r\n-set JAVA_EXE=java.exe\r\n-%JAVA_EXE% -version >NUL 2>&1\r\n-if \"%ERRORLEVEL%\" == \"0\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:findJavaFromJavaHome\r\n-set JAVA_HOME=%JAVA_HOME:\"=%\r\n-set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n-\r\n-if exist \"%JAVA_EXE%\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:init\r\n-@rem Get command-line arguments, handling Windows variants\r\n-\r\n-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n-\r\n-:win9xME_args\r\n-@rem Slurp the command line arguments.\r\n-set CMD_LINE_ARGS=\r\n-set _SKIP=2\r\n-\r\n-:win9xME_args_slurp\r\n-if \"x%~1\" == \"x\" goto execute\r\n-\r\n-set CMD_LINE_ARGS=%*\r\n-\r\n-:execute\r\n-@rem Setup the command line\r\n-\r\n-set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n-\r\n-\r\n-@rem Execute Gradle\r\n-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n-\r\n-:end\r\n-@rem End local scope for the variables with windows NT shell\r\n-if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n-\r\n-:fail\r\n-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n-rem the _cmd.exe /c_ return code!\r\n-if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n-exit /b 1\r\n-\r\n-:mainEnd\r\n-if \"%OS%\"==\"Windows_NT\" endlocal\r\n-\r\n-:omega\r\n+@rem", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5MzY3Mg=="}, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIyMDIzNA==", "bodyText": "Hm... converted to CRLF, ran git add and now I see nothing to commit, working tree clean", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457220234", "createdAt": "2020-07-20T09:31:15Z", "author": {"login": "iNikem"}, "path": "gradlew.bat", "diffHunk": "@@ -1,104 +1,104 @@\n-@rem\r\n-@rem Copyright 2015 the original author or authors.\r\n-@rem\r\n-@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n-@rem you may not use this file except in compliance with the License.\r\n-@rem You may obtain a copy of the License at\r\n-@rem\r\n-@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n-@rem\r\n-@rem Unless required by applicable law or agreed to in writing, software\r\n-@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n-@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-@rem See the License for the specific language governing permissions and\r\n-@rem limitations under the License.\r\n-@rem\r\n-\r\n-@if \"%DEBUG%\" == \"\" @echo off\r\n-@rem ##########################################################################\r\n-@rem\r\n-@rem  Gradle startup script for Windows\r\n-@rem\r\n-@rem ##########################################################################\r\n-\r\n-@rem Set local scope for the variables with windows NT shell\r\n-if \"%OS%\"==\"Windows_NT\" setlocal\r\n-\r\n-set DIRNAME=%~dp0\r\n-if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n-set APP_BASE_NAME=%~n0\r\n-set APP_HOME=%DIRNAME%\r\n-\r\n-@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\n-for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n-\r\n-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n-set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n-\r\n-@rem Find java.exe\r\n-if defined JAVA_HOME goto findJavaFromJavaHome\r\n-\r\n-set JAVA_EXE=java.exe\r\n-%JAVA_EXE% -version >NUL 2>&1\r\n-if \"%ERRORLEVEL%\" == \"0\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:findJavaFromJavaHome\r\n-set JAVA_HOME=%JAVA_HOME:\"=%\r\n-set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n-\r\n-if exist \"%JAVA_EXE%\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:init\r\n-@rem Get command-line arguments, handling Windows variants\r\n-\r\n-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n-\r\n-:win9xME_args\r\n-@rem Slurp the command line arguments.\r\n-set CMD_LINE_ARGS=\r\n-set _SKIP=2\r\n-\r\n-:win9xME_args_slurp\r\n-if \"x%~1\" == \"x\" goto execute\r\n-\r\n-set CMD_LINE_ARGS=%*\r\n-\r\n-:execute\r\n-@rem Setup the command line\r\n-\r\n-set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n-\r\n-\r\n-@rem Execute Gradle\r\n-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n-\r\n-:end\r\n-@rem End local scope for the variables with windows NT shell\r\n-if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n-\r\n-:fail\r\n-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n-rem the _cmd.exe /c_ return code!\r\n-if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n-exit /b 1\r\n-\r\n-:mainEnd\r\n-if \"%OS%\"==\"Windows_NT\" endlocal\r\n-\r\n-:omega\r\n+@rem", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5MzY3Mg=="}, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIyMjIxNQ==", "bodyText": "Yeah it means that the checked in version is already CRLF which is correct, so that seems OK. One of the problems with changing gitattributes is it works great for new clones, but not so much for existing ones, so I often just reclone after a gitattributes change (there is other magic that might work that is much more complex :) ).", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457222215", "createdAt": "2020-07-20T09:33:40Z", "author": {"login": "anuraaga"}, "path": "gradlew.bat", "diffHunk": "@@ -1,104 +1,104 @@\n-@rem\r\n-@rem Copyright 2015 the original author or authors.\r\n-@rem\r\n-@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n-@rem you may not use this file except in compliance with the License.\r\n-@rem You may obtain a copy of the License at\r\n-@rem\r\n-@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n-@rem\r\n-@rem Unless required by applicable law or agreed to in writing, software\r\n-@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n-@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-@rem See the License for the specific language governing permissions and\r\n-@rem limitations under the License.\r\n-@rem\r\n-\r\n-@if \"%DEBUG%\" == \"\" @echo off\r\n-@rem ##########################################################################\r\n-@rem\r\n-@rem  Gradle startup script for Windows\r\n-@rem\r\n-@rem ##########################################################################\r\n-\r\n-@rem Set local scope for the variables with windows NT shell\r\n-if \"%OS%\"==\"Windows_NT\" setlocal\r\n-\r\n-set DIRNAME=%~dp0\r\n-if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n-set APP_BASE_NAME=%~n0\r\n-set APP_HOME=%DIRNAME%\r\n-\r\n-@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\n-for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n-\r\n-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n-set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n-\r\n-@rem Find java.exe\r\n-if defined JAVA_HOME goto findJavaFromJavaHome\r\n-\r\n-set JAVA_EXE=java.exe\r\n-%JAVA_EXE% -version >NUL 2>&1\r\n-if \"%ERRORLEVEL%\" == \"0\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:findJavaFromJavaHome\r\n-set JAVA_HOME=%JAVA_HOME:\"=%\r\n-set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n-\r\n-if exist \"%JAVA_EXE%\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:init\r\n-@rem Get command-line arguments, handling Windows variants\r\n-\r\n-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n-\r\n-:win9xME_args\r\n-@rem Slurp the command line arguments.\r\n-set CMD_LINE_ARGS=\r\n-set _SKIP=2\r\n-\r\n-:win9xME_args_slurp\r\n-if \"x%~1\" == \"x\" goto execute\r\n-\r\n-set CMD_LINE_ARGS=%*\r\n-\r\n-:execute\r\n-@rem Setup the command line\r\n-\r\n-set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n-\r\n-\r\n-@rem Execute Gradle\r\n-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n-\r\n-:end\r\n-@rem End local scope for the variables with windows NT shell\r\n-if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n-\r\n-:fail\r\n-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n-rem the _cmd.exe /c_ return code!\r\n-if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n-exit /b 1\r\n-\r\n-:mainEnd\r\n-if \"%OS%\"==\"Windows_NT\" endlocal\r\n-\r\n-:omega\r\n+@rem", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5MzY3Mg=="}, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjAxOTY0OnYy", "diffSide": "RIGHT", "path": "instrumentation/jms-1.1/src/latestDepTest/groovy/JMS2Test.groovy", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjozMToyOFrOGz637Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToxMjozNVrOG0btIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5NTE0OQ==", "bodyText": "This seems surprising. I thought ota.trace.classes.exclude only applied to annotation instrumentation?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457095149", "createdAt": "2020-07-20T06:31:28Z", "author": {"login": "trask"}, "path": "instrumentation/jms-1.1/src/latestDepTest/groovy/JMS2Test.groovy", "diffHunk": "@@ -45,6 +46,13 @@ import static io.opentelemetry.trace.Span.Kind.CONSUMER\n import static io.opentelemetry.trace.Span.Kind.PRODUCER\n \n class JMS2Test extends AgentTestRunner {\n+  static {\n+    ConfigUtils.updateConfig {\n+      System.setProperty(\"ota.trace.classes.exclude\", \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,org.springframework.context.support.DefaultLifecycleProcessor\\$1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIxNjY4Nw==", "bodyText": "It is used in io.opentelemetry.auto.tooling.AgentInstaller#matchesConfiguredExcludes so applies to everything.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457216687", "createdAt": "2020-07-20T09:26:55Z", "author": {"login": "iNikem"}, "path": "instrumentation/jms-1.1/src/latestDepTest/groovy/JMS2Test.groovy", "diffHunk": "@@ -45,6 +46,13 @@ import static io.opentelemetry.trace.Span.Kind.CONSUMER\n import static io.opentelemetry.trace.Span.Kind.PRODUCER\n \n class JMS2Test extends AgentTestRunner {\n+  static {\n+    ConfigUtils.updateConfig {\n+      System.setProperty(\"ota.trace.classes.exclude\", \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,org.springframework.context.support.DefaultLifecycleProcessor\\$1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5NTE0OQ=="}, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NDc2MQ==", "bodyText": "Oh, I didn't realize that. Still curious why this is needed? If related to your gitter question, maybe these classes need to be added to AdditionalLibraryIgnoresMatcher?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457564761", "createdAt": "2020-07-20T17:10:58Z", "author": {"login": "trask"}, "path": "instrumentation/jms-1.1/src/latestDepTest/groovy/JMS2Test.groovy", "diffHunk": "@@ -45,6 +46,13 @@ import static io.opentelemetry.trace.Span.Kind.CONSUMER\n import static io.opentelemetry.trace.Span.Kind.PRODUCER\n \n class JMS2Test extends AgentTestRunner {\n+  static {\n+    ConfigUtils.updateConfig {\n+      System.setProperty(\"ota.trace.classes.exclude\", \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,org.springframework.context.support.DefaultLifecycleProcessor\\$1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5NTE0OQ=="}, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYxODc2NQ==", "bodyText": "Btw, I also opened #737 to consider applying trace.classes.exclude only to annotation instrumentation", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457618765", "createdAt": "2020-07-20T18:46:32Z", "author": {"login": "trask"}, "path": "instrumentation/jms-1.1/src/latestDepTest/groovy/JMS2Test.groovy", "diffHunk": "@@ -45,6 +46,13 @@ import static io.opentelemetry.trace.Span.Kind.CONSUMER\n import static io.opentelemetry.trace.Span.Kind.PRODUCER\n \n class JMS2Test extends AgentTestRunner {\n+  static {\n+    ConfigUtils.updateConfig {\n+      System.setProperty(\"ota.trace.classes.exclude\", \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,org.springframework.context.support.DefaultLifecycleProcessor\\$1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5NTE0OQ=="}, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMzA1Nw==", "bodyText": "I will try to formulate my problem and will open an issue regarding AdditionalLibraryIgnoresMatcher", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457633057", "createdAt": "2020-07-20T19:12:35Z", "author": {"login": "iNikem"}, "path": "instrumentation/jms-1.1/src/latestDepTest/groovy/JMS2Test.groovy", "diffHunk": "@@ -45,6 +46,13 @@ import static io.opentelemetry.trace.Span.Kind.CONSUMER\n import static io.opentelemetry.trace.Span.Kind.PRODUCER\n \n class JMS2Test extends AgentTestRunner {\n+  static {\n+    ConfigUtils.updateConfig {\n+      System.setProperty(\"ota.trace.classes.exclude\", \"org.springframework.jms.config.JmsListenerEndpointRegistry\\$AggregatingCallback,org.springframework.context.support.DefaultLifecycleProcessor\\$1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5NTE0OQ=="}, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjAyODQ2OnYy", "diffSide": "LEFT", "path": "testing-common/src/main/groovy/io/opentelemetry/auto/test/AgentTestRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjozMzo0MVrOGz68jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjozMzo0MVrOGz68jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5NjMzMg==", "bodyText": "Yes! I tried to remove this before but ended up with totally inexplicable test failures even though it's not used anywhere", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/725#discussion_r457096332", "createdAt": "2020-07-20T06:33:41Z", "author": {"login": "trask"}, "path": "testing-common/src/main/groovy/io/opentelemetry/auto/test/AgentTestRunner.java", "diffHunk": "@@ -68,17 +68,17 @@\n  * <ul>\n  *   <li>All {@link Instrumenter}s on the test classpath will be applied. Matching preloaded classes\n  *       will be retransformed.\n- *   <li>{@link AgentTestRunner#TEST_WRITER} will be registerd with the global tracer and available\n+ *   <li>{@link AgentTestRunner#TEST_WRITER} will be registered with the global tracer and available\n  *       in an initialized state.\n  * </ul>\n  */\n+@Category(BytecodeTests.class)\n @RunWith(SpockRunner.class)\n @SpecMetadata(filename = \"AgentTestRunner.java\", line = 0)\n public abstract class AgentTestRunner extends AgentSpecification {\n \n   private static final org.slf4j.Logger log = LoggerFactory.getLogger(AgentTestRunner.class);\n \n-  private static final long TIMEOUT_MILLIS = 10 * 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a30d9a991b8a210cdcdb21baa3db011f25ff83"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 101, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}