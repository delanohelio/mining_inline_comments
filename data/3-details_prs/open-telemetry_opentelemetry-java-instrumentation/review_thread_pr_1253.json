{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMjk0MTU1", "number": 1253, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDo1NTozN1rOEm_Hyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDo1NTozN1rOEm_Hyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzE1NTMxOnYy", "diffSide": "RIGHT", "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDo1NTozN1rOHXU24A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNTo1Nzo1NlrOHX1-QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyMTAyNA==", "bodyText": "Hmm - feels a bit magic but I guess it's fine \ud83d\ude03", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253#discussion_r494221024", "createdAt": "2020-09-24T10:55:37Z", "author": {"login": "anuraaga"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -91,6 +91,7 @@ private static MetricExporterFactory findMetricExporterFactory(String exporterNa\n       if (metricExporterFactory\n           .getClass()\n           .getSimpleName()\n+          .replace(\"_\", \"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9570a48860a4b441f854461c0818f55950684f2e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQyNjU2OA==", "bodyText": "yeah, maybe the factories could have a method that returns a name and do the comparison based on that.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253#discussion_r494426568", "createdAt": "2020-09-24T15:49:02Z", "author": {"login": "pavolloffay"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -91,6 +91,7 @@ private static MetricExporterFactory findMetricExporterFactory(String exporterNa\n       if (metricExporterFactory\n           .getClass()\n           .getSimpleName()\n+          .replace(\"_\", \"\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyMTAyNA=="}, "originalCommit": {"oid": "9570a48860a4b441f854461c0818f55950684f2e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcwOTI0MQ==", "bodyText": "I like the idea of SpanExporterFactory/MetricExporterFactory having a method Set<String> getNames() (Set since e.g. OtlpSpanExporterFactory can be enabled via both otlp and otlp_span)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253#discussion_r494709241", "createdAt": "2020-09-25T02:20:15Z", "author": {"login": "trask"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -91,6 +91,7 @@ private static MetricExporterFactory findMetricExporterFactory(String exporterNa\n       if (metricExporterFactory\n           .getClass()\n           .getSimpleName()\n+          .replace(\"_\", \"\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyMTAyNA=="}, "originalCommit": {"oid": "9570a48860a4b441f854461c0818f55950684f2e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcxMzAwMw==", "bodyText": "I guess this is only applicable to our built-in exporters though, as opposed to someone building their own Exporter and using EXPORTER_JAR, so maybe not. Also, I forget, now that we are Java 8, we can always add interface methods after GA \ud83d\ude01", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253#discussion_r494713003", "createdAt": "2020-09-25T02:34:23Z", "author": {"login": "trask"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -91,6 +91,7 @@ private static MetricExporterFactory findMetricExporterFactory(String exporterNa\n       if (metricExporterFactory\n           .getClass()\n           .getSimpleName()\n+          .replace(\"_\", \"\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyMTAyNA=="}, "originalCommit": {"oid": "9570a48860a4b441f854461c0818f55950684f2e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc2MzU4NA==", "bodyText": "Yeah I think my idea before was to have a map of wellknown names, and only use the classname for custom exporters", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253#discussion_r494763584", "createdAt": "2020-09-25T05:57:56Z", "author": {"login": "anuraaga"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -91,6 +91,7 @@ private static MetricExporterFactory findMetricExporterFactory(String exporterNa\n       if (metricExporterFactory\n           .getClass()\n           .getSimpleName()\n+          .replace(\"_\", \"\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyMTAyNA=="}, "originalCommit": {"oid": "9570a48860a4b441f854461c0818f55950684f2e"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4958, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}