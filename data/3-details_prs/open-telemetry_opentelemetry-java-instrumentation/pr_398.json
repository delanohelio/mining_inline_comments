{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NjYzOTM2", "number": 398, "title": "Merge changes from dd-trace-java 0.51.0", "bodyText": "https://github.com/DataDog/dd-trace-java/releases/tag/v0.51.0\nI went a different route on this merge and cherry-picked the relevant PRs, dealing with merge conflicts along the way.", "createdAt": "2020-05-10T03:46:25Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398", "merged": true, "mergeCommit": {"oid": "bd3d642500768f0e8c07803b34ec8711908966dc"}, "closed": true, "closedAt": "2020-05-14T20:05:10Z", "author": {"login": "trask"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfzWHdgBqjMzMTk5NzcxMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchSGT3ABqjMzMzc5NzA2MDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "933e288c80f086b619992035d4d6a31b8273d6e4", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/933e288c80f086b619992035d4d6a31b8273d6e4", "committedDate": "2020-05-10T03:41:44Z", "message": "Don't listen 0.0.0.0 in tests (DataDog/dd-trace-java#1434)"}, "afterCommit": {"oid": "a51253f1c66aae01073e3693ab16c14cf687174f", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a51253f1c66aae01073e3693ab16c14cf687174f", "committedDate": "2020-05-10T04:26:54Z", "message": "Don't listen 0.0.0.0 in tests (DataDog/dd-trace-java#1434)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4ODg1ODkz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#pullrequestreview-408885893", "createdAt": "2020-05-11T06:17:06Z", "commit": {"oid": "a51253f1c66aae01073e3693ab16c14cf687174f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwNjoxNzowNlrOGTN9jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwNjoyOTozMlrOGTOQcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgwNDg3OA==", "bodyText": "Remove dd- prefix?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#discussion_r422804878", "createdAt": "2020-05-11T06:17:06Z", "author": {"login": "iNikem"}, "path": "instrumentation/cassandra/cassandra-3.0/src/main/java/io/opentelemetry/auto/instrumentation/cassandra/v3_0/TracingSession.java", "diffHunk": "@@ -45,7 +46,9 @@\n   private static final Tracer TRACER =\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.cassandra-3.0\");\n \n-  private final ExecutorService executorService = Executors.newCachedThreadPool();\n+  private static final ExecutorService EXECUTOR_SERVICE =\n+      Executors.newCachedThreadPool(new DaemonThreadFactory(\"dd-cassandra-session-executor\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51253f1c66aae01073e3693ab16c14cf687174f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgwNTE1OQ==", "bodyText": "Is this needed for all tests or for latestDepTest only?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#discussion_r422805159", "createdAt": "2020-05-11T06:17:52Z", "author": {"login": "iNikem"}, "path": "instrumentation/lettuce/lettuce-5.0/lettuce-5.0.gradle", "diffHunk": "@@ -28,7 +28,7 @@ dependencies {\n \n   testCompile group: 'com.github.kstyrc', name: 'embedded-redis', version: '0.6'\n   testCompile group: 'io.lettuce', name: 'lettuce-core', version: '5.0.0.RELEASE'\n+  testCompile project(':instrumentation:reactor-3.1')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51253f1c66aae01073e3693ab16c14cf687174f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgwNjc2Nw==", "bodyText": "I don't see that auto-tooling depends on okhttp", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#discussion_r422806767", "createdAt": "2020-05-11T06:22:00Z", "author": {"login": "iNikem"}, "path": "instrumentation/okhttp/okhttp-2.2/okhttp-2.2.gradle", "diffHunk": "@@ -0,0 +1,41 @@\n+apply from: \"${rootDir}/gradle/instrumentation.gradle\"\n+apply plugin: 'org.unbroken-dome.test-sets'\n+\n+/*\n+Note: The Interceptor class for OkHttp was not introduced until 2.2+, so we need to make sure the\n+instrumentation is not loaded unless the dependency is 2.2+.\n+*/\n+muzzle {\n+  pass {\n+    group = \"com.squareup.okhttp\"\n+    module = \"okhttp\"\n+    versions = \"[2.2,3)\"\n+    assertInverse = true\n+  }\n+}\n+\n+testSets {\n+  latestDepTest {\n+    dirName = 'test'\n+  }\n+}\n+\n+dependencies {\n+  compileOnly(group: 'com.squareup.okhttp', name: 'okhttp', version: '2.2.0')\n+\n+  compile(project(':auto-tooling')) {\n+    exclude module: 'okhttp'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51253f1c66aae01073e3693ab16c14cf687174f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgwNzA2OA==", "bodyText": "Same here?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#discussion_r422807068", "createdAt": "2020-05-11T06:22:38Z", "author": {"login": "iNikem"}, "path": "instrumentation/okhttp/okhttp-2.2/okhttp-2.2.gradle", "diffHunk": "@@ -0,0 +1,41 @@\n+apply from: \"${rootDir}/gradle/instrumentation.gradle\"\n+apply plugin: 'org.unbroken-dome.test-sets'\n+\n+/*\n+Note: The Interceptor class for OkHttp was not introduced until 2.2+, so we need to make sure the\n+instrumentation is not loaded unless the dependency is 2.2+.\n+*/\n+muzzle {\n+  pass {\n+    group = \"com.squareup.okhttp\"\n+    module = \"okhttp\"\n+    versions = \"[2.2,3)\"\n+    assertInverse = true\n+  }\n+}\n+\n+testSets {\n+  latestDepTest {\n+    dirName = 'test'\n+  }\n+}\n+\n+dependencies {\n+  compileOnly(group: 'com.squareup.okhttp', name: 'okhttp', version: '2.2.0')\n+\n+  compile(project(':auto-tooling')) {\n+    exclude module: 'okhttp'\n+  }\n+\n+  testCompile(project(':testing')) {\n+    exclude module: 'okhttp'\n+  }\n+  testCompile(project(':instrumentation:java-concurrent')) {\n+    exclude module: 'okhttp'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51253f1c66aae01073e3693ab16c14cf687174f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgwOTcxMw==", "bodyText": "Maybe easier to use one CompletableFuture instead of two AtomicReference and a CountDownLatch? Callback will call either complete or completeExceptionally and test can end in just one line return future.get(10, SECONDS).", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#discussion_r422809713", "createdAt": "2020-05-11T06:29:32Z", "author": {"login": "iNikem"}, "path": "instrumentation/okhttp/okhttp-2.2/src/test/groovy/OkHttp2AsyncTest.groovy", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import com.squareup.okhttp.Callback\n+import com.squareup.okhttp.Headers\n+import com.squareup.okhttp.MediaType\n+import com.squareup.okhttp.Request\n+import com.squareup.okhttp.RequestBody\n+import com.squareup.okhttp.Response\n+import com.squareup.okhttp.internal.http.HttpMethod\n+\n+import java.util.concurrent.CountDownLatch\n+import java.util.concurrent.atomic.AtomicReference\n+\n+import static java.util.concurrent.TimeUnit.SECONDS\n+\n+class OkHttp2AsyncTest extends OkHttp2Test {\n+  @Override\n+  int doRequest(String method, URI uri, Map<String, String> headers, Closure callback) {\n+    def body = HttpMethod.requiresRequestBody(method) ? RequestBody.create(MediaType.parse(\"text/plain\"), \"\") : null\n+    def request = new Request.Builder()\n+      .url(uri.toURL())\n+      .method(method, body)\n+      .headers(Headers.of(HeadersUtil.headersToArray(headers)))\n+      .build()\n+\n+    AtomicReference<Response> responseRef = new AtomicReference()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51253f1c66aae01073e3693ab16c14cf687174f"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTY4ODg4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#pullrequestreview-409168888", "createdAt": "2020-05-11T13:26:10Z", "commit": {"oid": "a51253f1c66aae01073e3693ab16c14cf687174f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMzoyNjoxMVrOGTcI4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMzoyNjoxMVrOGTcI4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAzNzE1NA==", "bodyText": "I should have removed these comments. They no longer apply now that the tests pass", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#discussion_r423037154", "createdAt": "2020-05-11T13:26:11Z", "author": {"login": "devinsba"}, "path": "instrumentation/lettuce/lettuce-5.0/src/test/groovy/LettuceReactiveClientTest.groovy", "diffHunk": "@@ -287,4 +290,121 @@ class LettuceReactiveClientTest extends AgentTestRunner {\n     }\n   }\n \n+  def \"blocking subscriber\"() {\n+    when:\n+    runUnderTrace(\"test-parent\") {\n+      reactiveCommands.set(\"a\", \"1\")\n+        .then(reactiveCommands.get(\"a\")) // The get here is ending up in another trace\n+        .block()\n+    }\n+\n+    then:\n+    assertTraces(1) {\n+      trace(0, 3) {\n+        span(0) {\n+          operationName \"test-parent\"\n+          errored false\n+          tags {\n+          }\n+        }\n+        span(1) {\n+          operationName \"SET\"\n+          spanKind CLIENT\n+          errored false\n+          childOf span(0)\n+          tags {\n+            \"$Tags.DB_TYPE\" \"redis\"\n+          }\n+        }\n+        span(2) {\n+          operationName \"GET\"\n+          spanKind CLIENT\n+          errored false\n+          childOf span(0)\n+          tags {\n+            \"$Tags.DB_TYPE\" \"redis\"\n+          }\n+        }\n+      }\n+    }\n+  }\n+\n+  def \"async subscriber\"() {\n+    when:\n+    runUnderTrace(\"test-parent\") {\n+      reactiveCommands.set(\"a\", \"1\")\n+        .then(reactiveCommands.get(\"a\")) // The get here is ending up in another trace\n+        .subscribe()\n+    }\n+\n+    then:\n+    assertTraces(1) {\n+      trace(0, 3) {\n+        span(0) {\n+          operationName \"test-parent\"\n+          errored false\n+          tags {\n+          }\n+        }\n+        span(1) {\n+          operationName \"SET\"\n+          spanKind CLIENT\n+          errored false\n+          childOf span(0)\n+          tags {\n+            \"$Tags.DB_TYPE\" \"redis\"\n+          }\n+        }\n+        span(2) {\n+          operationName \"GET\"\n+          spanKind CLIENT\n+          errored false\n+          childOf span(0)\n+          tags {\n+            \"$Tags.DB_TYPE\" \"redis\"\n+          }\n+        }\n+      }\n+    }\n+  }\n+\n+  def \"async subscriber with specific thread pool\"() {\n+    when:\n+    runUnderTrace(\"test-parent\") {\n+      reactiveCommands.set(\"a\", \"1\")\n+        .then(reactiveCommands.get(\"a\")) // The get here is ending up in another trace", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51253f1c66aae01073e3693ab16c14cf687174f"}, "originalPosition": 109}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDUwNjA4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#pullrequestreview-409450608", "createdAt": "2020-05-11T19:05:57Z", "commit": {"oid": "a8d9134a36c72d0597d64a76ffed11a2e5da3f1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTowNTo1OFrOGTpg7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTowNTo1OFrOGTpg7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1NjMwMA==", "bodyText": "timeout on get?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#discussion_r423256300", "createdAt": "2020-05-11T19:05:58Z", "author": {"login": "iNikem"}, "path": "instrumentation/okhttp/okhttp-2.2/src/test/groovy/OkHttp2AsyncTest.groovy", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import com.squareup.okhttp.*\n+import com.squareup.okhttp.internal.http.HttpMethod\n+\n+import java.util.concurrent.CompletableFuture\n+\n+class OkHttp2AsyncTest extends OkHttp2Test {\n+  @Override\n+  int doRequest(String method, URI uri, Map<String, String> headers, Closure callback) {\n+    def body = HttpMethod.requiresRequestBody(method) ? RequestBody.create(MediaType.parse(\"text/plain\"), \"\") : null\n+    def request = new Request.Builder()\n+        .url(uri.toURL())\n+        .method(method, body)\n+        .headers(Headers.of(HeadersUtil.headersToArray(headers)))\n+        .build()\n+\n+    def future = new CompletableFuture<Response>()\n+\n+    client.newCall(request).enqueue(new Callback() {\n+      void onResponse(Response response) {\n+        callback?.call()\n+        future.complete(response)\n+      }\n+\n+      void onFailure(Request req, IOException e) {\n+        future.completeExceptionally(e)\n+      }\n+    })\n+    return future.get().code()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d9134a36c72d0597d64a76ffed11a2e5da3f1d"}, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc4a40a223e3ef540dfda63b3be45961df812aaa", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/cc4a40a223e3ef540dfda63b3be45961df812aaa", "committedDate": "2020-05-11T22:21:03Z", "message": "fixup! fixup! Add instrumentation for okhttp 2.2+ (DataDog/dd-trace-java#1402)"}, "afterCommit": {"oid": "fcd9abda84b7322ed4f66b6431b0c76e9dd6c56d", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fcd9abda84b7322ed4f66b6431b0c76e9dd6c56d", "committedDate": "2020-05-11T23:43:22Z", "message": "fixup! fixup! Add instrumentation for okhttp 2.2+ (DataDog/dd-trace-java#1402)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fcd9abda84b7322ed4f66b6431b0c76e9dd6c56d", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fcd9abda84b7322ed4f66b6431b0c76e9dd6c56d", "committedDate": "2020-05-11T23:43:22Z", "message": "fixup! fixup! Add instrumentation for okhttp 2.2+ (DataDog/dd-trace-java#1402)"}, "afterCommit": {"oid": "cfac325c13b3abe2a020fa22c57b7fc317445fc7", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/cfac325c13b3abe2a020fa22c57b7fc317445fc7", "committedDate": "2020-05-12T00:42:52Z", "message": "fixup! Fix projectreactor instrumentation to keep span context connected (DataDog/dd-trace-java#1308)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2291f362e3586640f1cece5fdfcba33a0aaa528", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d2291f362e3586640f1cece5fdfcba33a0aaa528", "committedDate": "2020-05-12T00:44:56Z", "message": "fixup! Add instrumentation for okhttp 2.2+ (DataDog/dd-trace-java#1402)"}, "afterCommit": {"oid": "933f8f271308403a6deaa9ab86bbab2601271838", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/933f8f271308403a6deaa9ab86bbab2601271838", "committedDate": "2020-05-12T01:29:12Z", "message": "Don't listen 0.0.0.0 in tests (DataDog/dd-trace-java#1434)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzA2MzMx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/398#pullrequestreview-409706331", "createdAt": "2020-05-12T05:23:17Z", "commit": {"oid": "933f8f271308403a6deaa9ab86bbab2601271838"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f472a62a0eea340608c9b275f7333ef22945ff6", "author": {"user": {"login": "devinsba", "name": "Brian Devins-Suresh"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6f472a62a0eea340608c9b275f7333ef22945ff6", "committedDate": "2020-05-14T18:49:44Z", "message": "Fix projectreactor instrumentation to keep span context connected (DataDog/dd-trace-java#1308)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c63b4fd9a373fa22ec3bd3c95787eddebe16e3b4", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c63b4fd9a373fa22ec3bd3c95787eddebe16e3b4", "committedDate": "2020-05-14T18:49:44Z", "message": "Add scopes to http server response (DataDog/dd-trace-java#1408)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ecd8cb81e7f3f02ae9b19d9259451afad01d727", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/5ecd8cb81e7f3f02ae9b19d9259451afad01d727", "committedDate": "2020-05-14T18:50:27Z", "message": "Add instrumentation for okhttp 2.2+ (DataDog/dd-trace-java#1402)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca27485a5c5c28a20e8320b3e05ca7b7657468a7", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ca27485a5c5c28a20e8320b3e05ca7b7657468a7", "committedDate": "2020-05-14T18:50:30Z", "message": "Upgrade Byte Buddy to 1.10.10 (DataDog/dd-trace-java#1409)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b36a7aef8c005ec0bb0d593eb8dc12315951ac1b", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b36a7aef8c005ec0bb0d593eb8dc12315951ac1b", "committedDate": "2020-05-14T18:50:30Z", "message": "Upgrade test-sets plugin to 3.0.1 (DataDog/dd-trace-java#1411)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95cac497d29d92dab6d9e239ae555a442fd1a9a0", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/95cac497d29d92dab6d9e239ae555a442fd1a9a0", "committedDate": "2020-05-14T18:50:30Z", "message": "Replace collection.size() > 0 with not collection.isEmpty() (DataDog/dd-trace-java#1420)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "672776412321afc4475a818cdc8697695a1bafe8", "author": {"user": {"login": "devinsba", "name": "Brian Devins-Suresh"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/672776412321afc4475a818cdc8697695a1bafe8", "committedDate": "2020-05-14T18:50:30Z", "message": "Netty 3.8 had the wrong version in the config property (DataDog/dd-trace-java#1423)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b359d11ec620295237d1e82e24fe96a604a5f2e", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6b359d11ec620295237d1e82e24fe96a604a5f2e", "committedDate": "2020-05-14T18:50:30Z", "message": "Fix cassandra instrumentation to use a daemon thread (DataDog/dd-trace-java#1422)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8593cbbad03b4caee62fd096af668c5c9401dc7", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f8593cbbad03b4caee62fd096af668c5c9401dc7", "committedDate": "2020-05-14T18:50:30Z", "message": "Upgrade to latest version of publishing plugins (DataDog/dd-trace-java#1427)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "847d59fa7a0d0d5904a2def0be62db4a2ca323f6", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/847d59fa7a0d0d5904a2def0be62db4a2ca323f6", "committedDate": "2020-05-14T18:50:30Z", "message": "Fix publishing to artifactory (DataDog/dd-trace-java#1432)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f540ae8fc1a36df98ced1585d600a65e237e1230", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f540ae8fc1a36df98ced1585d600a65e237e1230", "committedDate": "2020-05-14T18:50:30Z", "message": "Add null servlet context check (DataDog/dd-trace-java#1414)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbf31d3a392366433d46a28460c0d2aa9be028c4", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fbf31d3a392366433d46a28460c0d2aa9be028c4", "committedDate": "2020-05-14T18:50:31Z", "message": "Don't listen 0.0.0.0 in tests (DataDog/dd-trace-java#1434)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "933f8f271308403a6deaa9ab86bbab2601271838", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/933f8f271308403a6deaa9ab86bbab2601271838", "committedDate": "2020-05-12T01:29:12Z", "message": "Don't listen 0.0.0.0 in tests (DataDog/dd-trace-java#1434)"}, "afterCommit": {"oid": "fbf31d3a392366433d46a28460c0d2aa9be028c4", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fbf31d3a392366433d46a28460c0d2aa9be028c4", "committedDate": "2020-05-14T18:50:31Z", "message": "Don't listen 0.0.0.0 in tests (DataDog/dd-trace-java#1434)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3155, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}