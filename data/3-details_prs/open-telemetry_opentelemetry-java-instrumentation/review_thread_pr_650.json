{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1OTYyNDM4", "number": 650, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNDo1NTowN1rOEMVHrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNToyNDo1NVrOEMVc5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzY0Mzk5OnYy", "diffSide": "LEFT", "path": "instrumentation/reactor-3.1/reactor-3.1.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNDo1NTowN1rOGuYGFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNDo1NTowN1rOGuYGFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI4MjQ1Mg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/650#discussion_r451282452", "createdAt": "2020-07-08T04:55:07Z", "author": {"login": "trask"}, "path": "instrumentation/reactor-3.1/reactor-3.1.gradle", "diffHunk": "@@ -1,7 +1,6 @@\n // Set properties before any plugins get loaded\n ext {\n   minJavaVersionForTests = JavaVersion.VERSION_1_8\n-  maxJavaVersionForTests = JavaVersion.VERSION_1_8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cec62c22554f15a94dd34976fd3581ea4616828f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzY5ODMxOnYy", "diffSide": "RIGHT", "path": "instrumentation-core/reactor-3.1/reactor-3.1.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNToyNDo1NVrOGuYldA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNToyNDo1NVrOGuYldA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5MDQ4NA==", "bodyText": "Will we need this shadow in every manual instrumentation module? Should we create an issue to extract this to reusable function?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/650#discussion_r451290484", "createdAt": "2020-07-08T05:24:55Z", "author": {"login": "iNikem"}, "path": "instrumentation-core/reactor-3.1/reactor-3.1.gradle", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+plugins {\n+  id \"com.github.johnrengelman.shadow\"\n+}\n+\n+ext {\n+  minJavaVersionForTests = JavaVersion.VERSION_1_8\n+}\n+\n+group = 'io.opentelemetry.instrumentation'\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+apply from: \"$rootDir/gradle/publish.gradle\"\n+apply plugin: 'org.unbroken-dome.test-sets'\n+\n+testSets {\n+  latestDepTest {\n+    dirName = 'test'\n+  }\n+}\n+\n+dependencies {\n+  api group: 'io.projectreactor', name: 'reactor-core', version: '3.1.0.RELEASE'\n+\n+  implementation deps.opentelemetryApi\n+  implementation deps.slf4j\n+\n+  testImplementation project(':testing')\n+\n+  latestDepTestImplementation group: 'io.projectreactor', name: 'reactor-core', version: '3.+'\n+  // Looks like later versions on reactor need this dependency for some reason even though it is marked as optional.\n+  latestDepTestImplementation group: 'io.micrometer', name: 'micrometer-core', version: '1.+'\n+}\n+\n+shadowJar {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cec62c22554f15a94dd34976fd3581ea4616828f"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 350, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}