{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0ODUzNDA1", "number": 1286, "title": "Remove instrumentation (and tooling) specific properties from Config", "bodyText": "Resolves #1277\nI like how the Config class looks like now \ud83d\ude04", "createdAt": "2020-09-29T13:58:52Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286", "merged": true, "mergeCommit": {"oid": "c7fc26188d3dc38720a7e32eb32ab7c367dc70fa"}, "closed": true, "closedAt": "2020-09-30T18:27:08Z", "author": {"login": "mateuszrzeszutek"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNoxSGgBqjM4MTk4MTgwNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOBEcYAFqTQ5OTcwMjA2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "833e34369619341d334da3fcb0c74170b4ad72b4", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/833e34369619341d334da3fcb0c74170b4ad72b4", "committedDate": "2020-09-29T13:57:47Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}, "afterCommit": {"oid": "b43265fc50345bf44aa2015d4d6c4aa96eaff1e5", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b43265fc50345bf44aa2015d4d6c4aa96eaff1e5", "committedDate": "2020-09-29T14:08:04Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b43265fc50345bf44aa2015d4d6c4aa96eaff1e5", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b43265fc50345bf44aa2015d4d6c4aa96eaff1e5", "committedDate": "2020-09-29T14:08:04Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}, "afterCommit": {"oid": "d113247b24fc1f5f08d6b0f701cf02e028ce3a35", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d113247b24fc1f5f08d6b0f701cf02e028ce3a35", "committedDate": "2020-09-29T15:00:55Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d113247b24fc1f5f08d6b0f701cf02e028ce3a35", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d113247b24fc1f5f08d6b0f701cf02e028ce3a35", "committedDate": "2020-09-29T15:00:55Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}, "afterCommit": {"oid": "0f91c3c08982b3c6fbbbc8d19446f4270c8871ea", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0f91c3c08982b3c6fbbbc8d19446f4270c8871ea", "committedDate": "2020-09-29T15:36:54Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f91c3c08982b3c6fbbbc8d19446f4270c8871ea", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0f91c3c08982b3c6fbbbc8d19446f4270c8871ea", "committedDate": "2020-09-29T15:36:54Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}, "afterCommit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/502782cf4f7971b1ab0347c8cb38436bd4b62b3b", "committedDate": "2020-09-29T16:10:58Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTI5NjMw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#pullrequestreview-498929630", "createdAt": "2020-09-29T22:10:11Z", "commit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjoxNzoxOVrOHaEI1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjo0NDoxN1rOHaE4rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5MjgyMg==", "bodyText": "Is this class still needed/useful?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#discussion_r497092822", "createdAt": "2020-09-29T22:17:19Z", "author": {"login": "trask"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/config/ConfigBuilder.java", "diffHunk": "@@ -16,53 +16,15 @@\n \n package io.opentelemetry.javaagent.tooling.config;\n \n-import static io.opentelemetry.instrumentation.api.config.Config.DEFAULT_EXPORTER;\n-import static io.opentelemetry.instrumentation.api.config.Config.DEFAULT_HYSTRIX_TAGS_ENABLED;\n-import static io.opentelemetry.instrumentation.api.config.Config.DEFAULT_INTEGRATIONS_ENABLED;\n-import static io.opentelemetry.instrumentation.api.config.Config.DEFAULT_KAFKA_CLIENT_PROPAGATION_ENABLED;\n-import static io.opentelemetry.instrumentation.api.config.Config.DEFAULT_RUNTIME_CONTEXT_FIELD_INJECTION;\n-import static io.opentelemetry.instrumentation.api.config.Config.DEFAULT_SQL_NORMALIZER_ENABLED;\n-import static io.opentelemetry.instrumentation.api.config.Config.DEFAULT_TRACE_ENABLED;\n-import static io.opentelemetry.instrumentation.api.config.Config.DEFAULT_TRACE_EXECUTORS_ALL;\n import static io.opentelemetry.instrumentation.api.config.Config.normalizePropertyName;\n \n import io.opentelemetry.instrumentation.api.config.Config;\n-import java.util.Arrays;\n-import java.util.Collections;\n import java.util.HashMap;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n-import java.util.function.Function;\n-import org.checkerframework.checker.nullness.qual.Nullable;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public final class ConfigBuilder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NzgxMA==", "bodyText": "I'm curious the reason for this change?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#discussion_r497097810", "createdAt": "2020-09-29T22:29:53Z", "author": {"login": "trask"}, "path": "testing-common/src/main/groovy/io/opentelemetry/auto/test/AgentTestRunner.java", "diffHunk": "@@ -102,7 +102,7 @@\n   private static volatile ClassFileTransformer activeTransformer = null;\n \n   static {\n-    INSTRUMENTATION = ByteBuddyAgent.getInstrumentation();\n+    INSTRUMENTATION = ByteBuddyAgent.install();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEwNTA2OQ==", "bodyText": "maybe make fields private with static accessors, e.g. isEnabled(), getLocation(Context), withLocation(List<StackTraceElement[]>, Context)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#discussion_r497105069", "createdAt": "2020-09-29T22:44:17Z", "author": {"login": "trask"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/context/ContextPropagationDebug.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.api.context;\n+\n+import io.grpc.Context;\n+import java.util.List;\n+\n+public final class ContextPropagationDebug {\n+\n+  // locations where the context was propagated to another thread (tracking multiple steps is\n+  // helpful in akka where there is so much recursive async spawning of new work)\n+  public static final Context.Key<List<StackTraceElement[]>> THREAD_PROPAGATION_LOCATIONS =\n+      Context.key(\"thread-propagation-locations\");\n+  public static final boolean THREAD_PROPAGATION_DEBUGGER =\n+      Boolean.getBoolean(\"otel.threadPropagationDebugger\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDA0MzE3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#pullrequestreview-499004317", "createdAt": "2020-09-30T00:03:06Z", "commit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MTQ5MDgy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#pullrequestreview-499149082", "createdAt": "2020-09-30T07:23:14Z", "commit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzoyMzoxNVrOHaQc8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzozMDo1NFrOHaQtQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5NDU3Ng==", "bodyText": "So default config is one without any configuration? Maybe it should use old default values in some way?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#discussion_r497294576", "createdAt": "2020-09-30T07:23:15Z", "author": {"login": "iNikem"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/config/Config.java", "diffHunk": "@@ -35,23 +35,7 @@\n   private static final Logger log = LoggerFactory.getLogger(Config.class);\n   private static final Pattern PROPERTY_NAME_REPLACEMENTS = Pattern.compile(\"[^a-zA-Z0-9.]\");\n \n-  // locations where the context was propagated to another thread (tracking multiple steps is\n-  // helpful in akka where there is so much recursive async spawning of new work)\n-  public static final Context.Key<List<StackTraceElement[]>> THREAD_PROPAGATION_LOCATIONS =\n-      Context.key(\"thread-propagation-locations\");\n-  public static final boolean THREAD_PROPAGATION_DEBUGGER =\n-      Boolean.getBoolean(\"otel.threadPropagationDebugger\");\n-\n-  public static final String DEFAULT_EXPORTER = \"otlp\";\n-  public static final boolean DEFAULT_TRACE_ENABLED = true;\n-  public static final boolean DEFAULT_INTEGRATIONS_ENABLED = true;\n-  public static final boolean DEFAULT_RUNTIME_CONTEXT_FIELD_INJECTION = true;\n-  public static final boolean DEFAULT_TRACE_EXECUTORS_ALL = false;\n-  public static final boolean DEFAULT_SQL_NORMALIZER_ENABLED = true;\n-  public static final boolean DEFAULT_KAFKA_CLIENT_PROPAGATION_ENABLED = true;\n-  public static final boolean DEFAULT_HYSTRIX_TAGS_ENABLED = false;\n-\n-  private static final Config DEFAULT = Config.newBuilder().build();\n+  private static final Config DEFAULT = Config.create(Collections.emptyMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5NjAzNQ==", "bodyText": "Specification explicitly advices against exposing context keys.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#discussion_r497296035", "createdAt": "2020-09-30T07:25:57Z", "author": {"login": "iNikem"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/context/ContextPropagationDebug.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.api.context;\n+\n+import io.grpc.Context;\n+import java.util.List;\n+\n+public final class ContextPropagationDebug {\n+\n+  // locations where the context was propagated to another thread (tracking multiple steps is\n+  // helpful in akka where there is so much recursive async spawning of new work)\n+  public static final Context.Key<List<StackTraceElement[]>> THREAD_PROPAGATION_LOCATIONS =\n+      Context.key(\"thread-propagation-locations\");\n+  public static final boolean THREAD_PROPAGATION_DEBUGGER =\n+      Boolean.getBoolean(\"otel.threadPropagationDebugger\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEwNTA2OQ=="}, "originalCommit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5NjM1Ng==", "bodyText": "Looks like more than Utils now", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#discussion_r497296356", "createdAt": "2020-09-30T07:26:34Z", "author": {"login": "iNikem"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/decorator/BaseDecorator.java", "diffHunk": "@@ -17,10 +17,10 @@\n package io.opentelemetry.instrumentation.api.decorator;\n \n import static io.opentelemetry.OpenTelemetry.getPropagators;\n+import static io.opentelemetry.instrumentation.api.tracer.utils.NetPeerUtils.ENDPOINT_PEER_SERVICE_MAPPING;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5NzY1NA==", "bodyText": "Why removed?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#discussion_r497297654", "createdAt": "2020-09-30T07:28:59Z", "author": {"login": "iNikem"}, "path": "instrumentation/jdbc/src/test/groovy/SqlNormalizerTest.groovy", "diffHunk": "@@ -139,19 +137,4 @@ class SqlNormalizerTest extends AgentSpecification {\n       JDBCUtils.normalizeSql(sb.toString())\n     }\n   }\n-\n-  def \"config can disable sql normalizer\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5ODc1Mg==", "bodyText": "This should be cached, I think.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#discussion_r497298752", "createdAt": "2020-09-30T07:30:54Z", "author": {"login": "iNikem"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/Instrumenter.java", "diffHunk": "@@ -237,7 +237,7 @@ protected ReferenceMatcher getInstrumentationMuzzle() {\n     }\n \n     protected boolean defaultEnabled() {\n-      return Config.get().isIntegrationsEnabled();\n+      return Config.get().getBooleanProperty(\"otel.integrations.enabled\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57d5318bbc882fdc0ab3a8a8b85e73a8cc411f24", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/57d5318bbc882fdc0ab3a8a8b85e73a8cc411f24", "committedDate": "2020-09-30T08:38:16Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1728207cfeb080f1ddd0ed5f89bbb3304406bff6", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1728207cfeb080f1ddd0ed5f89bbb3304406bff6", "committedDate": "2020-09-30T09:14:12Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "502782cf4f7971b1ab0347c8cb38436bd4b62b3b", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/502782cf4f7971b1ab0347c8cb38436bd4b62b3b", "committedDate": "2020-09-29T16:10:58Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}, "afterCommit": {"oid": "1728207cfeb080f1ddd0ed5f89bbb3304406bff6", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1728207cfeb080f1ddd0ed5f89bbb3304406bff6", "committedDate": "2020-09-30T09:14:12Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91675c240a18860cbd9e8dbf6841e2bb5cec9451", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/91675c240a18860cbd9e8dbf6841e2bb5cec9451", "committedDate": "2020-09-30T09:21:38Z", "message": "Remove instrumentation (and tooling) specific properties from Config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NzAyMDYx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1286#pullrequestreview-499702061", "createdAt": "2020-09-30T18:26:56Z", "commit": {"oid": "91675c240a18860cbd9e8dbf6841e2bb5cec9451"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2450, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}