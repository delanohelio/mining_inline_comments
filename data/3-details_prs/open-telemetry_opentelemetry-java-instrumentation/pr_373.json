{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMTI3NTk5", "number": 373, "title": "Copy .editorconfig file and relevant sections in CONTRIBUTING.md from otel-java repo", "bodyText": "See open-telemetry/opentelemetry-java#1126", "createdAt": "2020-05-01T13:20:39Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/373", "merged": true, "mergeCommit": {"oid": "bae0b7b38c17d24165515fcc595b5209483e560f"}, "closed": true, "closedAt": "2020-05-04T14:07:20Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdBhp2gH2gAyNDEyMTI3NTk5OjcyODNhMjMzODQ4M2Q2NmU5Y2NkNWJkMWEyMmZiNzBlYjdjNGQyODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcd_x2IgFqTQwNTAwMTU5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7283a2338483d66e9ccd5bd1a22fb70eb7c4d288", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7283a2338483d66e9ccd5bd1a22fb70eb7c4d288", "committedDate": "2020-05-01T13:16:33Z", "message": "Copy .editorconfig file and relevant sections in CONTRIBUTING.md from otel-java repo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MzkyMTc1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/373#pullrequestreview-404392175", "createdAt": "2020-05-01T20:46:39Z", "commit": {"oid": "7283a2338483d66e9ccd5bd1a22fb70eb7c4d288"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MDAxNTk3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/373#pullrequestreview-405001597", "createdAt": "2020-05-04T13:46:05Z", "commit": {"oid": "7283a2338483d66e9ccd5bd1a22fb70eb7c4d288"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzo0NjowNVrOGQBEQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzo0NjowNVrOGQBEQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0Nzg3Mg==", "bodyText": "include suggested command?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/373#discussion_r419447872", "createdAt": "2020-05-04T13:46:05Z", "author": {"login": "tylerbenson"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -40,17 +40,40 @@ Then Gradle task rule will kick in and do the following:\n This works both for tasks named `test` and `latestDepTest`.\n But currently does not work for other custom test tasks, such as those created by test sets plugin.\n \n-### Code Style\n+### Style guideline\n \n-This project includes a `.editorconfig` file for basic editor settings.  This file is supported by most common text editors.\n+We follow the [Google Java Style Guide](https://google.github.io/styleguide/javaguide.html). \n+Our build will fail if source code is not formatted according to that style.\n \n-Java files must be formatted using [google-java-format](https://github.com/google/google-java-format).  Please run the following task to ensure files are formatted before committing:\n+To verify code style manually run the following command, \n+which uses [google-java-format](https://github.com/google/google-java-format) library:\n \n-```shell \n-./gradlew googleJavaFormat\n-```\n+`./gradlew verifyGoogleJavaFormat`\n \n-Other source files (Groovy, Scala, etc) should ideally be formatted by Intellij Idea's default formatting, but are not enforced.\n+or on Windows\n+\n+`gradlew.bat verifyGoogleJavaFormat`\n+\n+Instead of fixing style inconsistencies by hand, you can run gradle task `googleJavaFormat`\n+to automatically fix all found issues:\n+\n+`./gradlew googleJavaFormat`\n+\n+or on Windows\n+\n+`gradlew.bat googleJavaFormat`\n+\n+#### Pre-commit hook\n+To completely delegate code style formatting to the machine, \n+you can add [git pre-commit hook](https://git-scm.com/docs/githooks).\n+We provide an example script in `buildscripts/pre-commit` file.\n+Just copy or symlink it into `.git/hooks` folder.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7283a2338483d66e9ccd5bd1a22fb70eb7c4d288"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3136, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}