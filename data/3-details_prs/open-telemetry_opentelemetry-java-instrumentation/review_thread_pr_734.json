{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMDc5NTMy", "number": 734, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNTo0MjoyMVrOEP-Qgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDo0MjoyMlrOERTRtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTg0MTMxOnYy", "diffSide": "RIGHT", "path": "docs/ga-requirements.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNTo0MjoyMVrOGz5YHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjoxMjowN1rOGz6Qfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MDYyMw==", "bodyText": "This list seems sort of arbitrary. Is it P0 to test 3 servlet implementations? My suggestion based on back-of-hand estimation of popularity nowadays is one servlet, spring-boot, and grpc, while others could be P1 or P2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r457070623", "createdAt": "2020-07-20T05:42:21Z", "author": {"login": "anuraaga"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P0 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Tomcat, Wildfly, Spring Boot", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b750ad69653c37ff0342036c0627f5dcb2a0573"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA4NTAwMw==", "bodyText": "Spring Boot certainly covers Tomcat or Jetty, which is all the same. Wildfly is useful, because JBoss is tricky classloader-wise. It uses its own module system and is very sensitive to logging infra problems.\nI think current smoke tests selection, Boot, Wildfly and Play, is quite good and propose to continue with that", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r457085003", "createdAt": "2020-07-20T06:12:02Z", "author": {"login": "iNikem"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P0 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Tomcat, Wildfly, Spring Boot", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MDYyMw=="}, "originalCommit": {"oid": "2b750ad69653c37ff0342036c0627f5dcb2a0573"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA4NTA1NA==", "bodyText": "Wildfly is problematic for us, because of both jboss modules (class loading) and jboss logging (we need avoid touching java.util.logging before it loads).\nI think our normal instrumentation tests cover Tomcat, Spring Boot and gRPC decently, so I would be good with pushing them to lower priority.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              * Tomcat, Wildfly, Spring Boot\n          \n          \n            \n              * Wildfly, due to common regressions around jboss modules (class loading) and jboss logging (we need avoid touching java.util.logging before it loads)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r457085054", "createdAt": "2020-07-20T06:12:07Z", "author": {"login": "trask"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P0 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Tomcat, Wildfly, Spring Boot", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MDYyMw=="}, "originalCommit": {"oid": "2b750ad69653c37ff0342036c0627f5dcb2a0573"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTg0MTY5OnYy", "diffSide": "RIGHT", "path": "docs/ga-requirements.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNTo0MjozMFrOGz5YVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoyNjo1N1rOG17HIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MDY3OQ==", "bodyText": "This feels lower than P0, maybe P2.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r457070679", "createdAt": "2020-07-20T05:42:30Z", "author": {"login": "anuraaga"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P0 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Tomcat, Wildfly, Spring Boot\n+  * All Java LTS versions + latest Java version if non-LTS\n+* Benchmarking\n+  * Startup overhead benchmark", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b750ad69653c37ff0342036c0627f5dcb2a0573"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA4NTIxMA==", "bodyText": "Not sure. P1 - can agree, P2 - probably not.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r457085210", "createdAt": "2020-07-20T06:12:28Z", "author": {"login": "iNikem"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P0 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Tomcat, Wildfly, Spring Boot\n+  * All Java LTS versions + latest Java version if non-LTS\n+* Benchmarking\n+  * Startup overhead benchmark", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MDY3OQ=="}, "originalCommit": {"oid": "2b750ad69653c37ff0342036c0627f5dcb2a0573"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NjE5NQ==", "bodyText": "kept this at P0 for now (well, now P0 is P1) since the next priority level is all about \"contributor experience\", but agree this is flexible", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r459196195", "createdAt": "2020-07-23T03:26:57Z", "author": {"login": "trask"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P0 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Tomcat, Wildfly, Spring Boot\n+  * All Java LTS versions + latest Java version if non-LTS\n+* Benchmarking\n+  * Startup overhead benchmark", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MDY3OQ=="}, "originalCommit": {"oid": "2b750ad69653c37ff0342036c0627f5dcb2a0573"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTg0MjMwOnYy", "diffSide": "RIGHT", "path": "docs/ga-requirements.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNTo0Mjo0MFrOGz5YqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjoxMjo1OVrOGz6SAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MDc2MQ==", "bodyText": "I don't think I've ever seen such detailed documentation per-instrumentation in other tracing libraries. More docs is always better than less, but I don't think it's P0, maybe P2, and it needs to come with the commitment that we will keep the docs up to date.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r457070761", "createdAt": "2020-07-20T05:42:40Z", "author": {"login": "anuraaga"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P0 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Tomcat, Wildfly, Spring Boot\n+  * All Java LTS versions + latest Java version if non-LTS\n+* Benchmarking\n+  * Startup overhead benchmark\n+  * Runtime overhead benchmark\n+* Implement all required semantic attributes\n+  * Non-required semantic attributes are nice to have, but not required for GA\n+* Basic configuration points\n+  * Add custom auto-instrumentation\n+  * Ability to build \"custom distro\"\n+* Documentation (tag \"documentation\" minus tag \"contributor experience\")\n+  * All configuration options\n+    * Standard OpenTelemetry SDK + Exporter configuration options\n+    * Auto-instrumentation configuration options (e.g. disable/enable, peer.service mapping)\n+  * For each instrumentation\n+    * Document all spans that it captures", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b750ad69653c37ff0342036c0627f5dcb2a0573"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA4NTQ0Mw==", "bodyText": "Unfortunately must agree with Anuraag.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r457085443", "createdAt": "2020-07-20T06:12:59Z", "author": {"login": "iNikem"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P0 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Tomcat, Wildfly, Spring Boot\n+  * All Java LTS versions + latest Java version if non-LTS\n+* Benchmarking\n+  * Startup overhead benchmark\n+  * Runtime overhead benchmark\n+* Implement all required semantic attributes\n+  * Non-required semantic attributes are nice to have, but not required for GA\n+* Basic configuration points\n+  * Add custom auto-instrumentation\n+  * Ability to build \"custom distro\"\n+* Documentation (tag \"documentation\" minus tag \"contributor experience\")\n+  * All configuration options\n+    * Standard OpenTelemetry SDK + Exporter configuration options\n+    * Auto-instrumentation configuration options (e.g. disable/enable, peer.service mapping)\n+  * For each instrumentation\n+    * Document all spans that it captures", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MDc2MQ=="}, "originalCommit": {"oid": "2b750ad69653c37ff0342036c0627f5dcb2a0573"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTg0MzI1OnYy", "diffSide": "RIGHT", "path": "docs/ga-requirements.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNTo0Mjo1MVrOGz5ZFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNTo0Mjo1MVrOGz5ZFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MDg2OQ==", "bodyText": "I consider Brave to have very high instrumentation coverage, and it's a total of 25 (including some that are multi-version)\nhttps://github.com/openzipkin/brave/tree/master/instrumentation\n20 feels very high for a P0, my suggestion would be making this more use-case oriented.\nLibraries commonly used on Android\nLibraries commonly used with spring-boot\n\nfor example.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r457070869", "createdAt": "2020-07-20T05:42:51Z", "author": {"login": "anuraaga"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P0 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Tomcat, Wildfly, Spring Boot\n+  * All Java LTS versions + latest Java version if non-LTS\n+* Benchmarking\n+  * Startup overhead benchmark\n+  * Runtime overhead benchmark\n+* Implement all required semantic attributes\n+  * Non-required semantic attributes are nice to have, but not required for GA\n+* Basic configuration points\n+  * Add custom auto-instrumentation\n+  * Ability to build \"custom distro\"\n+* Documentation (tag \"documentation\" minus tag \"contributor experience\")\n+  * All configuration options\n+    * Standard OpenTelemetry SDK + Exporter configuration options\n+    * Auto-instrumentation configuration options (e.g. disable/enable, peer.service mapping)\n+  * For each instrumentation\n+    * Document all spans that it captures\n+      * Span names\n+      * Span attributes (including explanation of any non-semantic attributes)\n+      * Events\n+    * Document any instrumentation-specific configuration\n+    * Document any other effects (e.g. updating SERVER span name with route)\n+  * Document the basic configuration points (above)\n+    * How to write your own auto-instrumentation\n+      * (much of this can be shared with contributor documentation below)\n+    * How to build your own \"custom distro\"\n+  * How to troubleshoot (start documenting common issues somewhere)\n+* Library (manual) instrumentations corresponding to at least 20 auto-instrumentations, with shared code and tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b750ad69653c37ff0342036c0627f5dcb2a0573"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTc1NzU3OnYy", "diffSide": "RIGHT", "path": "docs/ga-requirements.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDozMjo0OVrOG176QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDozMjo0OVrOG176QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwOTI4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              * All Java LTS versions + latest Java version if non-LTS\n          \n          \n            \n              * Java 8, 11, and the latest Java version\n          \n      \n    \n    \n  \n\nI want to be optimistic we GA before Java 17 :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r459209280", "createdAt": "2020-07-23T04:32:49Z", "author": {"login": "anuraaga"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P1 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Spring Boot and Wildfly\n+    * (Wildfly chosen due to common javaagent issues around jboss modules and jboss logging)\n+  * All Java LTS versions + latest Java version if non-LTS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1c1fbdc2c9d0a10e455fbfb8747b1f1feea6220"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTc2MjMzOnYy", "diffSide": "RIGHT", "path": "docs/ga-requirements.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDozNjoxOVrOG1789Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDozNjoxOVrOG1789Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwOTk3Mw==", "bodyText": "There is this idea: open-telemetry/opentelemetry-specification#653 (comment)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r459209973", "createdAt": "2020-07-23T04:36:19Z", "author": {"login": "iNikem"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P1 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Spring Boot and Wildfly\n+    * (Wildfly chosen due to common javaagent issues around jboss modules and jboss logging)\n+  * Java 8, 11, and the latest Java version\n+* Benchmarking\n+  * Runtime overhead benchmark\n+  * Startup overhead benchmark\n+* Implement all required semantic attributes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c06f173978abf65974d6edce63dff0d71744ac5"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTc2NTI2OnYy", "diffSide": "RIGHT", "path": "docs/ga-requirements.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDozODo0NVrOG17-tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDozODo0NVrOG17-tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMDQyMQ==", "bodyText": "But P1 already has \"How to write your own auto-instrumentation\". And I think that without these documentation here nobody will be able to \"Add custom auto-instrumentation\". But putting all \"New contributor documentation\" in P1 seems like too aggressive to me :(", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r459210421", "createdAt": "2020-07-23T04:38:45Z", "author": {"login": "iNikem"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P1 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Spring Boot and Wildfly\n+    * (Wildfly chosen due to common javaagent issues around jboss modules and jboss logging)\n+  * Java 8, 11, and the latest Java version\n+* Benchmarking\n+  * Runtime overhead benchmark\n+  * Startup overhead benchmark\n+* Implement all required semantic attributes\n+  * Non-required semantic attributes are nice to have, but not required for GA\n+* Basic configuration points\n+  * Add custom auto-instrumentation\n+  * Ability to build \"custom distro\"\n+* Documentation (tag \"documentation\" minus tag \"contributor experience\")\n+  * All configuration options\n+    * Standard OpenTelemetry SDK + Exporter configuration options\n+    * Auto-instrumentation configuration options (e.g. disable/enable, peer.service mapping)\n+  * For each instrumentation\n+    * Document any instrumentation-specific configuration\n+  * Document the basic configuration points (above)\n+    * How to write your own auto-instrumentation\n+      * (much of this can be shared with contributor documentation below)\n+    * How to build your own \"custom distro\"\n+  * How to troubleshoot (start documenting common issues somewhere)\n+* Library (manual) instrumentations for libraries commonly used with Spring\n+  * Spring WebMVC, Spring WebFlux, Spring RestTemplate, Spring Kafka, Spring AMQP,\n+    Reactor, JDBC, java.util.concurrent\n+* Library (manual) instrumentations for libraries commonly used with Android\n+  * OkHttp, gRPC\n+\n+P2:\n+* Contributor experience (tag \"contributor experience\" plus tag \"cleanup\" plus tag \"sporadic test failure\")\n+  * New contributor documentation\n+    * How to write new instrumentation (auto, library, tests)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c06f173978abf65974d6edce63dff0d71744ac5"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTc3MDYwOnYy", "diffSide": "RIGHT", "path": "docs/ga-requirements.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDo0MjoxNFrOG18Bkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNzoxODoxOFrOG1-0nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMTE1NA==", "bodyText": "I am not sure this is hard requirement for GA", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r459211154", "createdAt": "2020-07-23T04:42:14Z", "author": {"login": "iNikem"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P1 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Spring Boot and Wildfly\n+    * (Wildfly chosen due to common javaagent issues around jboss modules and jboss logging)\n+  * Java 8, 11, and the latest Java version\n+* Benchmarking\n+  * Runtime overhead benchmark\n+  * Startup overhead benchmark\n+* Implement all required semantic attributes\n+  * Non-required semantic attributes are nice to have, but not required for GA\n+* Basic configuration points\n+  * Add custom auto-instrumentation\n+  * Ability to build \"custom distro\"\n+* Documentation (tag \"documentation\" minus tag \"contributor experience\")\n+  * All configuration options\n+    * Standard OpenTelemetry SDK + Exporter configuration options\n+    * Auto-instrumentation configuration options (e.g. disable/enable, peer.service mapping)\n+  * For each instrumentation\n+    * Document any instrumentation-specific configuration\n+  * Document the basic configuration points (above)\n+    * How to write your own auto-instrumentation\n+      * (much of this can be shared with contributor documentation below)\n+    * How to build your own \"custom distro\"\n+  * How to troubleshoot (start documenting common issues somewhere)\n+* Library (manual) instrumentations for libraries commonly used with Spring", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c06f173978abf65974d6edce63dff0d71744ac5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1Mzg0Mg==", "bodyText": "I'd like to have some kind of hard requirement for manual instrumentation, in order to show our commitment to supporting both auto and manual instrumentation.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r459253842", "createdAt": "2020-07-23T07:10:45Z", "author": {"login": "trask"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P1 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Spring Boot and Wildfly\n+    * (Wildfly chosen due to common javaagent issues around jboss modules and jboss logging)\n+  * Java 8, 11, and the latest Java version\n+* Benchmarking\n+  * Runtime overhead benchmark\n+  * Startup overhead benchmark\n+* Implement all required semantic attributes\n+  * Non-required semantic attributes are nice to have, but not required for GA\n+* Basic configuration points\n+  * Add custom auto-instrumentation\n+  * Ability to build \"custom distro\"\n+* Documentation (tag \"documentation\" minus tag \"contributor experience\")\n+  * All configuration options\n+    * Standard OpenTelemetry SDK + Exporter configuration options\n+    * Auto-instrumentation configuration options (e.g. disable/enable, peer.service mapping)\n+  * For each instrumentation\n+    * Document any instrumentation-specific configuration\n+  * Document the basic configuration points (above)\n+    * How to write your own auto-instrumentation\n+      * (much of this can be shared with contributor documentation below)\n+    * How to build your own \"custom distro\"\n+  * How to troubleshoot (start documenting common issues somewhere)\n+* Library (manual) instrumentations for libraries commonly used with Spring", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMTE1NA=="}, "originalCommit": {"oid": "6c06f173978abf65974d6edce63dff0d71744ac5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1Njk5MQ==", "bodyText": "Not sure if it matters much, but FWIW, the work for extracting manual instrumentation for okhttp and grpc seems very small compared to Spring which is a lot of new instrumentation, though @mabdinur is doing a great job tackling it :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r459256991", "createdAt": "2020-07-23T07:18:18Z", "author": {"login": "anuraaga"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P1 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Spring Boot and Wildfly\n+    * (Wildfly chosen due to common javaagent issues around jboss modules and jboss logging)\n+  * Java 8, 11, and the latest Java version\n+* Benchmarking\n+  * Runtime overhead benchmark\n+  * Startup overhead benchmark\n+* Implement all required semantic attributes\n+  * Non-required semantic attributes are nice to have, but not required for GA\n+* Basic configuration points\n+  * Add custom auto-instrumentation\n+  * Ability to build \"custom distro\"\n+* Documentation (tag \"documentation\" minus tag \"contributor experience\")\n+  * All configuration options\n+    * Standard OpenTelemetry SDK + Exporter configuration options\n+    * Auto-instrumentation configuration options (e.g. disable/enable, peer.service mapping)\n+  * For each instrumentation\n+    * Document any instrumentation-specific configuration\n+  * Document the basic configuration points (above)\n+    * How to write your own auto-instrumentation\n+      * (much of this can be shared with contributor documentation below)\n+    * How to build your own \"custom distro\"\n+  * How to troubleshoot (start documenting common issues somewhere)\n+* Library (manual) instrumentations for libraries commonly used with Spring", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMTE1NA=="}, "originalCommit": {"oid": "6c06f173978abf65974d6edce63dff0d71744ac5"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTc3MDc5OnYy", "diffSide": "RIGHT", "path": "docs/ga-requirements.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDo0MjoyMlrOG18BrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDo0MjoyMlrOG18BrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMTE4MA==", "bodyText": "I am not sure this is hard requirement for GA", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/734#discussion_r459211180", "createdAt": "2020-07-23T04:42:22Z", "author": {"login": "iNikem"}, "path": "docs/ga-requirements.md", "diffHunk": "@@ -0,0 +1,51 @@\n+P1 (e.g. cannot GA without these):\n+* End-to-end tests\n+  * OTLP, Jaeger and Zipkin\n+  * Spring Boot and Wildfly\n+    * (Wildfly chosen due to common javaagent issues around jboss modules and jboss logging)\n+  * Java 8, 11, and the latest Java version\n+* Benchmarking\n+  * Runtime overhead benchmark\n+  * Startup overhead benchmark\n+* Implement all required semantic attributes\n+  * Non-required semantic attributes are nice to have, but not required for GA\n+* Basic configuration points\n+  * Add custom auto-instrumentation\n+  * Ability to build \"custom distro\"\n+* Documentation (tag \"documentation\" minus tag \"contributor experience\")\n+  * All configuration options\n+    * Standard OpenTelemetry SDK + Exporter configuration options\n+    * Auto-instrumentation configuration options (e.g. disable/enable, peer.service mapping)\n+  * For each instrumentation\n+    * Document any instrumentation-specific configuration\n+  * Document the basic configuration points (above)\n+    * How to write your own auto-instrumentation\n+      * (much of this can be shared with contributor documentation below)\n+    * How to build your own \"custom distro\"\n+  * How to troubleshoot (start documenting common issues somewhere)\n+* Library (manual) instrumentations for libraries commonly used with Spring\n+  * Spring WebMVC, Spring WebFlux, Spring RestTemplate, Spring Kafka, Spring AMQP,\n+    Reactor, JDBC, java.util.concurrent\n+* Library (manual) instrumentations for libraries commonly used with Android", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c06f173978abf65974d6edce63dff0d71744ac5"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 110, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}