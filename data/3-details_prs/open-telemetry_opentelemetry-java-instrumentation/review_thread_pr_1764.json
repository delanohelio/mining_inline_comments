{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3MjcyNjc5", "number": 1764, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzowNDozNlrOE9ODbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzowNDozNlrOE9ODbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjI4ODQ3OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/java/io/opentelemetry/instrumentation/gradle/bytebuddy/ByteBuddyPluginConfigurator.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzowNDozNlrOH5yhQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwMDoxNTozNlrOH6HmMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM1ODU5NA==", "bodyText": "It is indeed suspicious. I would assume that better approach would be to have correctly configured inputs and outputs for this task", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1764#discussion_r530358594", "createdAt": "2020-11-25T13:04:36Z", "author": {"login": "iNikem"}, "path": "buildSrc/src/main/java/io/opentelemetry/instrumentation/gradle/bytebuddy/ByteBuddyPluginConfigurator.java", "diffHunk": "@@ -68,6 +68,7 @@ public void configure() {\n   private Task createLanguageTask(AbstractCompile compileTask, String name) {\n     ByteBuddySimpleTask task = project.getTasks().create(name, ByteBuddySimpleTask.class);\n     task.setGroup(\"Byte Buddy\");\n+    task.getOutputs().cacheIf(unused -> true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f7ab4334158af4061711ecd5b94e2ae53cef9d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM3MTkwNQ==", "bodyText": "Do you mean to enable caching? The task is not a CacheableTask so even with correct input / outputs configured it can't be cached without opting in with this command.\nI'm concerned about the determinism of the task but the outputs inputs seem sane from what I can tell.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1764#discussion_r530371905", "createdAt": "2020-11-25T13:25:54Z", "author": {"login": "anuraaga"}, "path": "buildSrc/src/main/java/io/opentelemetry/instrumentation/gradle/bytebuddy/ByteBuddyPluginConfigurator.java", "diffHunk": "@@ -68,6 +68,7 @@ public void configure() {\n   private Task createLanguageTask(AbstractCompile compileTask, String name) {\n     ByteBuddySimpleTask task = project.getTasks().create(name, ByteBuddySimpleTask.class);\n     task.setGroup(\"Byte Buddy\");\n+    task.getOutputs().cacheIf(unused -> true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM1ODU5NA=="}, "originalCommit": {"oid": "a4f7ab4334158af4061711ecd5b94e2ae53cef9d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM3NzQzMA==", "bodyText": "To clarify, UP-TO-DATE seems to be working fine. What doesn't work\n\n\nAfter a clean, this task always reruns since it's not a CacheableTask. We can fix that by adding this line.\n\n\nIf the task reruns after a clean, all downstream tasks also rerun even though we would expect deterministic output meaning this wouldn't happen. That needs more investigation in #1765.\n\n\nI think this change is still worth it even if we fix the determinism issue, and maybe we can survive some risk of cache pollution to get the build sane again. Let me try rerunning the tests in this PR and see", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1764#discussion_r530377430", "createdAt": "2020-11-25T13:34:43Z", "author": {"login": "anuraaga"}, "path": "buildSrc/src/main/java/io/opentelemetry/instrumentation/gradle/bytebuddy/ByteBuddyPluginConfigurator.java", "diffHunk": "@@ -68,6 +68,7 @@ public void configure() {\n   private Task createLanguageTask(AbstractCompile compileTask, String name) {\n     ByteBuddySimpleTask task = project.getTasks().create(name, ByteBuddySimpleTask.class);\n     task.setGroup(\"Byte Buddy\");\n+    task.getOutputs().cacheIf(unused -> true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM1ODU5NA=="}, "originalCommit": {"oid": "a4f7ab4334158af4061711ecd5b94e2ae53cef9d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcwMzkyMA==", "bodyText": "Reran tests, cache worked fine-ish. Build / Java 8 3min, Java 15 25min - still something obviously strange about Java 15 but this seems to at least help us well.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1764#discussion_r530703920", "createdAt": "2020-11-26T00:15:36Z", "author": {"login": "anuraaga"}, "path": "buildSrc/src/main/java/io/opentelemetry/instrumentation/gradle/bytebuddy/ByteBuddyPluginConfigurator.java", "diffHunk": "@@ -68,6 +68,7 @@ public void configure() {\n   private Task createLanguageTask(AbstractCompile compileTask, String name) {\n     ByteBuddySimpleTask task = project.getTasks().create(name, ByteBuddySimpleTask.class);\n     task.setGroup(\"Byte Buddy\");\n+    task.getOutputs().cacheIf(unused -> true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM1ODU5NA=="}, "originalCommit": {"oid": "a4f7ab4334158af4061711ecd5b94e2ae53cef9d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4450, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}