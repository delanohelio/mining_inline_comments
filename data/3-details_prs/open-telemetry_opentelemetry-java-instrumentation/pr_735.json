{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMjA5Nzg3", "number": 735, "title": "Inject span context into log4j2 2.13.2+ context.", "bodyText": "This uses a very new API ContextDataProvider  - no need for complex scope decorators, just reads the data from our context directly. While it means we miss out on a lot of log4j2 users, I think it's nice to have this for the latest version and we'd probably still want to provide a version possibly using ContextDataInjector\nhttps://logging.apache.org/log4j/2.x/log4j-core/apidocs/org/apache/logging/log4j/core/ContextDataInjector.html\nor using decorators.\nI realized this doesn't follow the pattern for instrumentation. It's an instrumentation that uses a library's SPI to be automatically injected. So I think this means we want the agent to\n\nInject shaded version into agent classloader\nInject shaded or unshaded version into user classloader if it is not already present. We can't inject arbitrarily since otherwise it's a lot of overhead for no benefit if we return duplicate contextData from two providers, though it does still work.\n\nDo we support this mode? Let me know if you have any suggestions.", "createdAt": "2020-07-20T08:48:36Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735", "merged": true, "mergeCommit": {"oid": "f2f3624d177b898f6c5aeedff6a090b8e41c6616"}, "closed": true, "closedAt": "2020-07-22T01:49:14Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2tjYbAH2gAyNDUzMjA5Nzg3OmIzOGFiYjU2MmI3Nzk1YWU4YWU5NjVkMzY5NzljNzA1M2QwZGVlMzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc255QLgH2gAyNDUzMjA5Nzg3OjYyMGMxOTUwMzBkZWE0Y2U0YjQ4MGI2YWIzMzc4OTFmNTZhYmZkZDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b38abb562b7795ae8ae965d36979c7053d0dee30", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b38abb562b7795ae8ae965d36979c7053d0dee30", "committedDate": "2020-07-20T08:42:22Z", "message": "Inject span context into log4j2 context."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c50516bfb07d6689ae4078dc4e6bba18656abb1", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/5c50516bfb07d6689ae4078dc4e6bba18656abb1", "committedDate": "2020-07-20T08:48:52Z", "message": "Newline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNDEzOTAw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735#pullrequestreview-451413900", "createdAt": "2020-07-20T08:49:43Z", "commit": {"oid": "5c50516bfb07d6689ae4078dc4e6bba18656abb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwODo0OTo0NFrOG0Al4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwODo0OTo0NFrOG0Al4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE4ODgzNQ==", "bodyText": "Blargh, wish trace ID was a string! /cc @jkwatson", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735#discussion_r457188835", "createdAt": "2020-07-20T08:49:44Z", "author": {"login": "anuraaga"}, "path": "instrumentation/log4j/log4j-2.13.2/library/src/main/java/io/opentelemetry/instrumentation/log4j/v2_13_2/OpenTelemetryContextDataProvider.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.log4j.v2_13_2;\n+\n+import com.google.auto.service.AutoService;\n+import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.SpanContext;\n+import io.opentelemetry.trace.TracingContextUtils;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.logging.log4j.core.util.ContextDataProvider;\n+\n+@AutoService(ContextDataProvider.class)\n+public class OpenTelemetryContextDataProvider implements ContextDataProvider {\n+  @Override\n+  public Map<String, String> supplyContextData() {\n+    Span currentSpan = TracingContextUtils.getCurrentSpan();\n+    if (currentSpan == null || !currentSpan.getContext().isValid()) {\n+      return Collections.emptyMap();\n+    }\n+\n+    Map<String, String> contextData = new HashMap<>();\n+    SpanContext spanContext = currentSpan.getContext();\n+    contextData.put(\"traceId\", spanContext.getTraceId().toLowerBase16());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c50516bfb07d6689ae4078dc4e6bba18656abb1"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b454f9fc449ce4ea8033eacdf1d4d49851eb20ce", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b454f9fc449ce4ea8033eacdf1d4d49851eb20ce", "committedDate": "2020-07-20T08:50:27Z", "message": "Newline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNDQ2NzE5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735#pullrequestreview-451446719", "createdAt": "2020-07-20T09:33:24Z", "commit": {"oid": "b454f9fc449ce4ea8033eacdf1d4d49851eb20ce"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTozMzoyNFrOG0CnfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTozNTowMFrOG0CsXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIyMjAxMg==", "bodyText": "getCurrentSpan never returns null", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735#discussion_r457222012", "createdAt": "2020-07-20T09:33:24Z", "author": {"login": "iNikem"}, "path": "instrumentation/log4j/log4j-2.13.2/library/src/main/java/io/opentelemetry/instrumentation/log4j/v2_13_2/OpenTelemetryContextDataProvider.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.log4j.v2_13_2;\n+\n+import com.google.auto.service.AutoService;\n+import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.SpanContext;\n+import io.opentelemetry.trace.TracingContextUtils;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.logging.log4j.core.util.ContextDataProvider;\n+\n+@AutoService(ContextDataProvider.class)\n+public class OpenTelemetryContextDataProvider implements ContextDataProvider {\n+  @Override\n+  public Map<String, String> supplyContextData() {\n+    Span currentSpan = TracingContextUtils.getCurrentSpan();\n+    if (currentSpan == null || !currentSpan.getContext().isValid()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b454f9fc449ce4ea8033eacdf1d4d49851eb20ce"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIyMjk2Ng==", "bodyText": "Do you want to demonstrate the usage of context data?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735#discussion_r457222966", "createdAt": "2020-07-20T09:34:39Z", "author": {"login": "iNikem"}, "path": "instrumentation/log4j/log4j-2.13.2/library/src/test/resources/log4j2-test.xml", "diffHunk": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\" packages=\"com.example.appender\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b454f9fc449ce4ea8033eacdf1d4d49851eb20ce"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIyMzI2MQ==", "bodyText": "Add README with at least some documentation?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735#discussion_r457223261", "createdAt": "2020-07-20T09:35:00Z", "author": {"login": "iNikem"}, "path": "instrumentation/log4j/log4j-2.13.2/library/log4j-2.13.2-library.gradle", "diffHunk": "@@ -0,0 +1,25 @@\n+ext {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b454f9fc449ce4ea8033eacdf1d4d49851eb20ce"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00dad0e4b1ca8136d162e0d93d892d447655b0ea", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/00dad0e4b1ca8136d162e0d93d892d447655b0ea", "committedDate": "2020-07-20T09:49:29Z", "message": "Docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b48c4a7aff3955f698cf9495ae42f37ec9e808ac", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b48c4a7aff3955f698cf9495ae42f37ec9e808ac", "committedDate": "2020-07-20T09:53:09Z", "message": "Spotless.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNDY3NDEz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735#pullrequestreview-451467413", "createdAt": "2020-07-20T10:01:43Z", "commit": {"oid": "b48c4a7aff3955f698cf9495ae42f37ec9e808ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2e32b9ef0c391ccb1e27d16f2d14c54abb6c7df", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f2e32b9ef0c391ccb1e27d16f2d14c54abb6c7df", "committedDate": "2020-07-20T10:18:10Z", "message": "Add traceFlags and some Javadoc\n\nCo-authored-by: David Poncelow <dponcelow@splunk.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDA3MDc3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735#pullrequestreview-452007077", "createdAt": "2020-07-20T22:38:59Z", "commit": {"oid": "f2e32b9ef0c391ccb1e27d16f2d14c54abb6c7df"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMjozODo1OVrOG0hsAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMjozOTowOFrOG0hsMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczMTA3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <version>0.6.0-SNAPSHOT</version>\n          \n          \n            \n                <version>0.7.0-SNAPSHOT</version>", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735#discussion_r457731072", "createdAt": "2020-07-20T22:38:59Z", "author": {"login": "trask"}, "path": "instrumentation/log4j/log4j-2.13.2/library/README.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Log4j 2 Integration\n+\n+This module integrates instrumentation with Log4j 2 by injecting the trace ID and span ID from a\n+mounted span into Log4j's [context data](https://logging.apache.org/log4j/2.x/manual/thread-context.html).\n+\n+To use it, just add the module to your application's runtime classpath.\n+\n+**Maven**\n+\n+```xml\n+<dependencies>\n+  <dependency>\n+    <groupId>io.opentelemetry.instrumentation</groupId>\n+    <artifactId>opentelemetry-log4j-2.13.2</artifactId>\n+    <version>0.6.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2e32b9ef0c391ccb1e27d16f2d14c54abb6c7df"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczMTEyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              runtimeOnly(\"io.opentelemetry.instrumentation:opentelemetry-log4j-2.13.2:0.6.0-SNAPSHOT\")\n          \n          \n            \n              runtimeOnly(\"io.opentelemetry.instrumentation:opentelemetry-log4j-2.13.2:0.7.0-SNAPSHOT\")", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/735#discussion_r457731120", "createdAt": "2020-07-20T22:39:08Z", "author": {"login": "trask"}, "path": "instrumentation/log4j/log4j-2.13.2/library/README.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Log4j 2 Integration\n+\n+This module integrates instrumentation with Log4j 2 by injecting the trace ID and span ID from a\n+mounted span into Log4j's [context data](https://logging.apache.org/log4j/2.x/manual/thread-context.html).\n+\n+To use it, just add the module to your application's runtime classpath.\n+\n+**Maven**\n+\n+```xml\n+<dependencies>\n+  <dependency>\n+    <groupId>io.opentelemetry.instrumentation</groupId>\n+    <artifactId>opentelemetry-log4j-2.13.2</artifactId>\n+    <version>0.6.0-SNAPSHOT</version>\n+    <scope>runtime</scope>\n+  </dependency>\n+</dependencies>\n+```\n+\n+**Gradle**\n+\n+```kotlin\n+dependencies {\n+  runtimeOnly(\"io.opentelemetry.instrumentation:opentelemetry-log4j-2.13.2:0.6.0-SNAPSHOT\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2e32b9ef0c391ccb1e27d16f2d14c54abb6c7df"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "620c195030dea4ce4b480b6ab337891f56abfdd1", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/620c195030dea4ce4b480b6ab337891f56abfdd1", "committedDate": "2020-07-20T23:05:07Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2812, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}