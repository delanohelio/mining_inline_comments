{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4OTE4NDEy", "number": 694, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzo0MzozN1rOEOXQwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxOTo1MToyOFrOEPSBxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNDk2NjQyOnYy", "diffSide": "RIGHT", "path": "instrumentation-core/spring/spring-webflux-5.0/spring-webflux-5.0.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzo0MzozN1rOGxearQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjozMDoyMFrOGxnnCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzMTc1Nw==", "bodyText": "I think let's not create maven subgroups, and put manual instrumentation directly in io.opentelemetry.instrumentation (which matches what we are doing in io.opentelemetry.instrumentation.auto)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            group = 'io.opentelemetry.instrumentation.spring'\n          \n          \n            \n            group = 'io.opentelemetry.instrumentation'", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/694#discussion_r454531757", "createdAt": "2020-07-14T17:43:37Z", "author": {"login": "trask"}, "path": "instrumentation-core/spring/spring-webflux-5.0/spring-webflux-5.0.gradle", "diffHunk": "@@ -9,7 +9,7 @@ ext {\n \n apply from: \"$rootDir/gradle/java.gradle\"\n \n-group = 'io.opentelemetry.instrumentation.spring.webflux'\n+group = 'io.opentelemetry.instrumentation.spring'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6f1a2b89b4483cf2e8eadd25bc844234abd7cb2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4MjM3Nw==", "bodyText": "I'll make this change in the spring-web and spring-webmvc projects as well", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/694#discussion_r454682377", "createdAt": "2020-07-14T22:30:20Z", "author": {"login": "mabdinur"}, "path": "instrumentation-core/spring/spring-webflux-5.0/spring-webflux-5.0.gradle", "diffHunk": "@@ -9,7 +9,7 @@ ext {\n \n apply from: \"$rootDir/gradle/java.gradle\"\n \n-group = 'io.opentelemetry.instrumentation.spring.webflux'\n+group = 'io.opentelemetry.instrumentation.spring'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzMTc1Nw=="}, "originalCommit": {"oid": "d6f1a2b89b4483cf2e8eadd25bc844234abd7cb2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NDU5MzE0OnYy", "diffSide": "RIGHT", "path": "instrumentation-core/apache-httpclient-4.0/src/main/java/io/opentelemetry/instrumentation/apachehttpclient/v4_0/ApacheHttpClientDecorator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxOTo1MTowMFrOGy6Zjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxOTo1MTowMFrOGy6Zjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAzODc5OQ==", "bodyText": "Can you try again with this package-private, now that muzzle is fixed? Better not to expose this to manual instrumenters if possible.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ApacheHttpClientDecorator extends HttpClientDecorator<HttpUriRequest, HttpResponse> {\n          \n          \n            \n            class ApacheHttpClientDecorator extends HttpClientDecorator<HttpUriRequest, HttpResponse> {", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/694#discussion_r456038799", "createdAt": "2020-07-16T19:51:00Z", "author": {"login": "trask"}, "path": "instrumentation-core/apache-httpclient-4.0/src/main/java/io/opentelemetry/instrumentation/apachehttpclient/v4_0/ApacheHttpClientDecorator.java", "diffHunk": "@@ -19,19 +19,15 @@\n import io.grpc.Context;\n import io.opentelemetry.OpenTelemetry;\n import io.opentelemetry.auto.bootstrap.instrumentation.decorator.HttpClientDecorator;\n-import io.opentelemetry.trace.Tracer;\n import java.net.URI;\n import org.apache.http.Header;\n import org.apache.http.HttpMessage;\n import org.apache.http.HttpResponse;\n import org.apache.http.client.methods.HttpUriRequest;\n \n-class ApacheHttpClientDecorator extends HttpClientDecorator<HttpUriRequest, HttpResponse> {\n+public class ApacheHttpClientDecorator extends HttpClientDecorator<HttpUriRequest, HttpResponse> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61049f43bee9059b6f15cd5da972d90d3436633"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NDU5NDYxOnYy", "diffSide": "RIGHT", "path": "instrumentation-core/apache-httpclient-4.0/src/main/java/io/opentelemetry/instrumentation/apachehttpclient/v4_0/HttpHeadersInjectAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxOTo1MToyOFrOGy6acw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowODoyNlrOGzA7Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAzOTAyNw==", "bodyText": "same here\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class HttpHeadersInjectAdapter implements HttpTextFormat.Setter<HttpUriRequest> {\n          \n          \n            \n            class HttpHeadersInjectAdapter implements HttpTextFormat.Setter<HttpUriRequest> {", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/694#discussion_r456039027", "createdAt": "2020-07-16T19:51:28Z", "author": {"login": "trask"}, "path": "instrumentation-core/apache-httpclient-4.0/src/main/java/io/opentelemetry/instrumentation/apachehttpclient/v4_0/HttpHeadersInjectAdapter.java", "diffHunk": "@@ -19,7 +19,7 @@\n import io.opentelemetry.context.propagation.HttpTextFormat;\n import org.apache.http.client.methods.HttpUriRequest;\n \n-class HttpHeadersInjectAdapter implements HttpTextFormat.Setter<HttpUriRequest> {\n+public class HttpHeadersInjectAdapter implements HttpTextFormat.Setter<HttpUriRequest> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61049f43bee9059b6f15cd5da972d90d3436633"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0NTcyNw==", "bodyText": "Done", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/694#discussion_r456145727", "createdAt": "2020-07-17T00:08:26Z", "author": {"login": "mabdinur"}, "path": "instrumentation-core/apache-httpclient-4.0/src/main/java/io/opentelemetry/instrumentation/apachehttpclient/v4_0/HttpHeadersInjectAdapter.java", "diffHunk": "@@ -19,7 +19,7 @@\n import io.opentelemetry.context.propagation.HttpTextFormat;\n import org.apache.http.client.methods.HttpUriRequest;\n \n-class HttpHeadersInjectAdapter implements HttpTextFormat.Setter<HttpUriRequest> {\n+public class HttpHeadersInjectAdapter implements HttpTextFormat.Setter<HttpUriRequest> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAzOTAyNw=="}, "originalCommit": {"oid": "e61049f43bee9059b6f15cd5da972d90d3436633"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 388, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}