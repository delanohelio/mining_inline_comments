{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MDkzNjQ4", "number": 1450, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowMDo1NFrOEwpO4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowNzozNlrOEwpYeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDQyNjU5OnYy", "diffSide": "RIGHT", "path": "RELEASING.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowMDo1NFrOHmVUqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowMDo1NFrOHmVUqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk1NzI4OA==", "bodyText": "We don't update README in this repo, right?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1450#discussion_r509957288", "createdAt": "2020-10-22T08:00:54Z", "author": {"login": "iNikem"}, "path": "RELEASING.md", "diffHunk": "@@ -13,22 +13,69 @@ This signals Nebula plugin to build and publish to\n [JFrog OSS repository](https://oss.jfrog.org/artifactory/oss-snapshot-local/io/opentelemetry/auto/)next _minor_ release version.\n This means version `vX.(Y+1).0-SNAPSHOT`.\n \n-## Public releases\n-All major and minor public releases are initiated by creating a git tag with a version to be released.\n-Do the following:\n-- Checkout a branch that you want to release.\n-- Tag a commit on which you want to base the release by executing `git tag vX.Y.0` with the expected version string.\n-- Push new tag to upstream repo.\n-\n-On new tag creation a CI will start a new release build.\n-It will do the following:\n-- Checkout requested tag.\n-- Run `./gradlew -Prelease.useLastTag=true final`.\n-This signals Nebula plugin to build `X.Y.0` version and to publish it to\n-[Bintray repository](https://bintray.com/open-telemetry/maven/opentelemetry-java-instrumentation).\n-\n-## Patch releases\n-Whenever a fix is needed to any older branch, a PR should be made into the corresponding maintenance branch.\n-When that PR is merge, CI will notice the new commit into maintenance branch and will initiate a new build for this.\n-That build, after usual building and checking, will run `./gradlew -Prelease.scope=patch final`.\n-This will signal Nebula plugin to build a new version `vX.Y.(Z+1)` and publish it to Bintray repo.\n+## Starting the Release\n+\n+Open the release build workflow in your browser [here](https://github.com/open-telemetry/opentelemetry-java-instrumentation/actions?query=workflow%3A%22Release+Build%22).\n+\n+You will see a button that says \"Run workflow\". Press the button, enter the version number you want\n+to release in the input field that pops up, and then press \"Run workflow\".\n+\n+This triggers the release process, which builds the artifacts, updates the README with the new", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8425df7aafdb3e87b40b0aa70e5ce547222ca0"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDQzNDcxOnYy", "diffSide": "RIGHT", "path": ".github/workflows/release-build.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowMzowNFrOHmVZ0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowMzowNFrOHmVZ0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk1ODYxMA==", "bodyText": "This repo does not have submodules", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1450#discussion_r509958610", "createdAt": "2020-10-22T08:03:04Z", "author": {"login": "iNikem"}, "path": ".github/workflows/release-build.yml", "diffHunk": "@@ -0,0 +1,32 @@\n+# Releases a new minor / major version from the HEAD of the main branch\n+name: Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1\n+        required: true\n+\n+jobs:\n+  build:\n+    name: Build and release\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+        with:\n+          submodules: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8425df7aafdb3e87b40b0aa70e5ce547222ca0"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDQzNzU2OnYy", "diffSide": "RIGHT", "path": ".github/workflows/release-build.yml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowMzo1N1rOHmVbqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNTozNzoyNlrOHoBZ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk1OTA4MQ==", "bodyText": "We should not need GRGIT or?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1450#discussion_r509959081", "createdAt": "2020-10-22T08:03:57Z", "author": {"login": "iNikem"}, "path": ".github/workflows/release-build.yml", "diffHunk": "@@ -0,0 +1,32 @@\n+# Releases a new minor / major version from the HEAD of the main branch\n+name: Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1\n+        required: true\n+\n+jobs:\n+  build:\n+    name: Build and release\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+        with:\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+      - name: Publish artifacts\n+        run: ./gradlew final --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+        env:\n+          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n+          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n+          GRGIT_USER: ${{ github.actor }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8425df7aafdb3e87b40b0aa70e5ce547222ca0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk3MzcyMg==", "bodyText": "nebula will create and push a tag so GRGIT credentials allows it to do that.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1450#discussion_r509973722", "createdAt": "2020-10-22T08:26:28Z", "author": {"login": "anuraaga"}, "path": ".github/workflows/release-build.yml", "diffHunk": "@@ -0,0 +1,32 @@\n+# Releases a new minor / major version from the HEAD of the main branch\n+name: Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1\n+        required: true\n+\n+jobs:\n+  build:\n+    name: Build and release\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+        with:\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+      - name: Publish artifacts\n+        run: ./gradlew final --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+        env:\n+          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n+          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n+          GRGIT_USER: ${{ github.actor }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk1OTA4MQ=="}, "originalCommit": {"oid": "6e8425df7aafdb3e87b40b0aa70e5ce547222ca0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1NDc2NA==", "bodyText": "But prepare-release-branch job above creates and pushes branch too. And without GRGIT?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1450#discussion_r510054764", "createdAt": "2020-10-22T10:31:32Z", "author": {"login": "iNikem"}, "path": ".github/workflows/release-build.yml", "diffHunk": "@@ -0,0 +1,32 @@\n+# Releases a new minor / major version from the HEAD of the main branch\n+name: Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1\n+        required: true\n+\n+jobs:\n+  build:\n+    name: Build and release\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+        with:\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+      - name: Publish artifacts\n+        run: ./gradlew final --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+        env:\n+          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n+          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n+          GRGIT_USER: ${{ github.actor }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk1OTA4MQ=="}, "originalCommit": {"oid": "6e8425df7aafdb3e87b40b0aa70e5ce547222ca0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcyODEwNw==", "bodyText": "Oops forgot to respond - yeah normal git commands authenticate automatically. I first tried without GRGIT hoping it'd behave the same in Gradle but it doesn't :(", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1450#discussion_r511728107", "createdAt": "2020-10-26T05:37:26Z", "author": {"login": "anuraaga"}, "path": ".github/workflows/release-build.yml", "diffHunk": "@@ -0,0 +1,32 @@\n+# Releases a new minor / major version from the HEAD of the main branch\n+name: Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1\n+        required: true\n+\n+jobs:\n+  build:\n+    name: Build and release\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+        with:\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+      - name: Publish artifacts\n+        run: ./gradlew final --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+        env:\n+          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n+          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n+          GRGIT_USER: ${{ github.actor }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk1OTA4MQ=="}, "originalCommit": {"oid": "6e8425df7aafdb3e87b40b0aa70e5ce547222ca0"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDQ0OTEyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/patch-release-build.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowNzowNFrOHmVi8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowNzowNFrOHmVi8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk2MDk0Nw==", "bodyText": "We don't need this, do we?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1450#discussion_r509960947", "createdAt": "2020-10-22T08:07:04Z", "author": {"login": "iNikem"}, "path": ".github/workflows/patch-release-build.yml", "diffHunk": "@@ -0,0 +1,95 @@\n+# Releases a patch by cherrypicking commits into a release branch based on the previous\n+# release tag.\n+name: Patch Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.1, 1.2.2\n+        required: true\n+      commits:\n+        description: Comma separated list of commit shas to cherrypick\n+        required: true\n+\n+jobs:\n+  prepare-release-branch:\n+    runs-on: ubuntu-latest\n+    outputs:\n+      release-branch-name: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+    steps:\n+      - id: parse-release-branch\n+        name: Parse release branch name\n+        run: |\n+          # Sets the release-branch-name output to the version number with the last non-period element replaced with an 'x' and preprended with v.\n+          echo \"::set-output name=release-branch-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.x/')\"\n+          # Sets the release-tag-name output to the version number with the last non-period element replace with a '0' and prepended with v\n+          echo \"::set-output name=release-tag-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.0/')\"\n+      - id: checkout-release-branch\n+        name: Check out release branch\n+        continue-on-error: true\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+      - id: checkout-release-tag\n+        name: Check out release tag\n+        if: ${{ steps.checkout-release-branch.outcome == 'failure' }}\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-tag-name }}\n+      - name: Create release branch\n+        if: ${{ steps.checkout-release-tag.outcome == 'success' }}\n+        run: |\n+          git checkout -b ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+          git push --set-upstream origin ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+  build:\n+    runs-on: ubuntu-latest\n+    needs: prepare-release-branch\n+    steps:\n+      - name: Checkout release branch\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ needs.prepare-release-branch.outputs.release-branch-name }}\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - name: Setup git name\n+        run: |\n+          git config user.name github-actions\n+          git config user.email github-actions@github.com\n+      - name: Cherrypicks\n+        if: ${{ github.event.inputs.commits != '' }}\n+        run: |\n+          git fetch origin master\n+          echo ${{ github.event.inputs.commits }} | sed -n 1'p' | tr ',' '\\n' | while read word; do\n+              # Trim whitespaces and cherrypick\n+              echo $word | sed 's/ *$//g' | sed 's/^ *//g' | git cherry-pick --stdin\n+          done\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8425df7aafdb3e87b40b0aa70e5ce547222ca0"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDQ1MTE0OnYy", "diffSide": "RIGHT", "path": ".github/workflows/patch-release-build.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowNzozNlrOHmVkRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowNzozNlrOHmVkRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk2MTI4Nw==", "bodyText": "What does this do?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1450#discussion_r509961287", "createdAt": "2020-10-22T08:07:36Z", "author": {"login": "iNikem"}, "path": ".github/workflows/patch-release-build.yml", "diffHunk": "@@ -0,0 +1,95 @@\n+# Releases a patch by cherrypicking commits into a release branch based on the previous\n+# release tag.\n+name: Patch Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.1, 1.2.2\n+        required: true\n+      commits:\n+        description: Comma separated list of commit shas to cherrypick\n+        required: true\n+\n+jobs:\n+  prepare-release-branch:\n+    runs-on: ubuntu-latest\n+    outputs:\n+      release-branch-name: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+    steps:\n+      - id: parse-release-branch\n+        name: Parse release branch name\n+        run: |\n+          # Sets the release-branch-name output to the version number with the last non-period element replaced with an 'x' and preprended with v.\n+          echo \"::set-output name=release-branch-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.x/')\"\n+          # Sets the release-tag-name output to the version number with the last non-period element replace with a '0' and prepended with v\n+          echo \"::set-output name=release-tag-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.0/')\"\n+      - id: checkout-release-branch\n+        name: Check out release branch\n+        continue-on-error: true\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+      - id: checkout-release-tag\n+        name: Check out release tag\n+        if: ${{ steps.checkout-release-branch.outcome == 'failure' }}\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-tag-name }}\n+      - name: Create release branch\n+        if: ${{ steps.checkout-release-tag.outcome == 'success' }}\n+        run: |\n+          git checkout -b ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+          git push --set-upstream origin ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+  build:\n+    runs-on: ubuntu-latest\n+    needs: prepare-release-branch\n+    steps:\n+      - name: Checkout release branch\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ needs.prepare-release-branch.outputs.release-branch-name }}\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - name: Setup git name\n+        run: |\n+          git config user.name github-actions\n+          git config user.email github-actions@github.com\n+      - name: Cherrypicks\n+        if: ${{ github.event.inputs.commits != '' }}\n+        run: |\n+          git fetch origin master\n+          echo ${{ github.event.inputs.commits }} | sed -n 1'p' | tr ',' '\\n' | while read word; do\n+              # Trim whitespaces and cherrypick\n+              echo $word | sed 's/ *$//g' | sed 's/^ *//g' | git cherry-pick --stdin\n+          done\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=true\n+      - name: Publish artifacts\n+        uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: final --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+        env:\n+          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n+          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n+          GRGIT_USER: ${{ github.actor }}\n+          GRGIT_PASS: ${{ secrets.GITHUB_TOKEN }}\n+      - run: git push\n+      - name: Checkout master\n+        uses: actions/checkout@v2\n+        with:\n+           submodules: true\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: --stacktrace -Prelease.version=${{ github.event.inputs.version }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e8425df7aafdb3e87b40b0aa70e5ce547222ca0"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4728, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}