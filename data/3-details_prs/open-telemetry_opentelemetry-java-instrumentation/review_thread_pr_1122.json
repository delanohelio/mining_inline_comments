{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NDA0OTAy", "number": 1122, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzozNToxMVrOEdvupw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzoxMjo1NFrOEfTe0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjI2MTUxOnYy", "diffSide": "RIGHT", "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/main/java/io/opentelemetry/instrumentation/auto/springwebmvc/WebApplicationContextInstrumentation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzozNToxMVrOHJF4CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOTo0ODo0NFrOHJx9Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI5NTQ5Ng==", "bodyText": "Make sure to disable wildcard import in IntelliJ both for Java and Groovy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r479295496", "createdAt": "2020-08-28T13:35:11Z", "author": {"login": "mateuszrzeszutek"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/main/java/io/opentelemetry/instrumentation/auto/springwebmvc/WebApplicationContextInstrumentation.java", "diffHunk": "@@ -17,8 +17,7 @@\n package io.opentelemetry.instrumentation.auto.springwebmvc;\n \n import static io.opentelemetry.javaagent.tooling.ClassLoaderMatcher.hasClassesNamed;\n-import static io.opentelemetry.javaagent.tooling.bytebuddy.matcher.AgentElementMatchers.extendsClass;\n-import static io.opentelemetry.javaagent.tooling.bytebuddy.matcher.AgentElementMatchers.implementsInterface;\n+import static io.opentelemetry.javaagent.tooling.bytebuddy.matcher.AgentElementMatchers.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3140c5f1c3674fd8ae4180d3c56e2f7e4ff5a79"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxNzY4Mw==", "bodyText": "Corrected.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480017683", "createdAt": "2020-08-31T09:48:44Z", "author": {"login": "kubawach"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/main/java/io/opentelemetry/instrumentation/auto/springwebmvc/WebApplicationContextInstrumentation.java", "diffHunk": "@@ -17,8 +17,7 @@\n package io.opentelemetry.instrumentation.auto.springwebmvc;\n \n import static io.opentelemetry.javaagent.tooling.ClassLoaderMatcher.hasClassesNamed;\n-import static io.opentelemetry.javaagent.tooling.bytebuddy.matcher.AgentElementMatchers.extendsClass;\n-import static io.opentelemetry.javaagent.tooling.bytebuddy.matcher.AgentElementMatchers.implementsInterface;\n+import static io.opentelemetry.javaagent.tooling.bytebuddy.matcher.AgentElementMatchers.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI5NTQ5Ng=="}, "originalCommit": {"oid": "b3140c5f1c3674fd8ae4180d3c56e2f7e4ff5a79"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjMxNDg0OnYy", "diffSide": "RIGHT", "path": "javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/matcher/AdditionalLibraryIgnoresMatcherTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo0NDozM1rOHJGafQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOTo0OToyMFrOHJx-Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMwNDMxNw==", "bodyText": "You can use expect: instead\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                when:\n          \n          \n            \n                def matches = underTest.matches(type)\n          \n          \n            \n            \n          \n          \n            \n                then:\n          \n          \n            \n                matches == true\n          \n          \n            \n                expect:\n          \n          \n            \n                underTest.matches(type)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r479304317", "createdAt": "2020-08-28T13:44:33Z", "author": {"login": "mateuszrzeszutek"}, "path": "javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/matcher/AdditionalLibraryIgnoresMatcherTest.groovy", "diffHunk": "@@ -0,0 +1,60 @@\n+package io.opentelemetry.javaagent.tooling.matcher\n+\n+import net.bytebuddy.description.type.TypeDescription\n+import spock.lang.Specification\n+\n+class AdditionalLibraryIgnoresMatcherTest extends Specification {\n+\n+  def underTest = new AdditionalLibraryIgnoresMatcher();\n+\n+  def \"spring boot - match not instrumented class\"() {\n+\n+    setup:\n+    def type = Mock(TypeDescription)\n+    type.getActualName() >> typeName\n+\n+    when:\n+    def matches = underTest.matches(type)\n+\n+    then:\n+    matches == true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79ded368bda5c63910ff8aea30f0f604b2433307"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxNzk5MQ==", "bodyText": "I like to stick to GWT BDD test convention.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480017991", "createdAt": "2020-08-31T09:49:20Z", "author": {"login": "kubawach"}, "path": "javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/matcher/AdditionalLibraryIgnoresMatcherTest.groovy", "diffHunk": "@@ -0,0 +1,60 @@\n+package io.opentelemetry.javaagent.tooling.matcher\n+\n+import net.bytebuddy.description.type.TypeDescription\n+import spock.lang.Specification\n+\n+class AdditionalLibraryIgnoresMatcherTest extends Specification {\n+\n+  def underTest = new AdditionalLibraryIgnoresMatcher();\n+\n+  def \"spring boot - match not instrumented class\"() {\n+\n+    setup:\n+    def type = Mock(TypeDescription)\n+    type.getActualName() >> typeName\n+\n+    when:\n+    def matches = underTest.matches(type)\n+\n+    then:\n+    matches == true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMwNDMxNw=="}, "originalCommit": {"oid": "79ded368bda5c63910ff8aea30f0f604b2433307"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjM0ODI4OnYy", "diffSide": "RIGHT", "path": "docs/contributing/running-tests.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1MDozMVrOHJGwgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOTo0OTo0NFrOHJx_GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMwOTk1Mg==", "bodyText": "Typo: INSTRUMNETATION_NAME -> INSTRUMENTATION_NAME\nAlso you have one > too many", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r479309952", "createdAt": "2020-08-28T13:50:31Z", "author": {"login": "mateuszrzeszutek"}, "path": "docs/contributing/running-tests.md", "diffHunk": "@@ -41,3 +41,7 @@ rule will kick in and do the following:\n This works both for tasks named `test` and `latestDepTest`. But currently\n does not work for other custom test tasks, such as those created by test sets\n plugin.\n+\n+#### Executing single test\n+\n+Executing `./gradlew :instrumentation:<INSTRUMNETATION_NAME>>:test --tests <GROOVY TEST FILE NAME>` will run only the selected test.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79ded368bda5c63910ff8aea30f0f604b2433307"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxODIwMA==", "bodyText": "Good catch!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480018200", "createdAt": "2020-08-31T09:49:44Z", "author": {"login": "kubawach"}, "path": "docs/contributing/running-tests.md", "diffHunk": "@@ -41,3 +41,7 @@ rule will kick in and do the following:\n This works both for tasks named `test` and `latestDepTest`. But currently\n does not work for other custom test tasks, such as those created by test sets\n plugin.\n+\n+#### Executing single test\n+\n+Executing `./gradlew :instrumentation:<INSTRUMNETATION_NAME>>:test --tests <GROOVY TEST FILE NAME>` will run only the selected test.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMwOTk1Mg=="}, "originalCommit": {"oid": "79ded368bda5c63910ff8aea30f0f604b2433307"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjM2NzE2OnYy", "diffSide": "RIGHT", "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentInstaller.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1Mzo1MFrOHJG8rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1Mzo1MFrOHJG8rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxMzA3MQ==", "bodyText": "Is this change needed?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r479313071", "createdAt": "2020-08-28T13:53:50Z", "author": {"login": "mateuszrzeszutek"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentInstaller.java", "diffHunk": "@@ -254,13 +254,13 @@ public void onIgnored(\n     @Override\n     public void onComplete(\n         String typeName, ClassLoader classLoader, JavaModule module, boolean loaded) {\n-      //      log.debug(\"onComplete {}\", typeName);\n+        // log.debug(\"onComplete {}\", typeName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79ded368bda5c63910ff8aea30f0f604b2433307"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjM3NTg2OnYy", "diffSide": "RIGHT", "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/test/groovy/test/filter/FilteredAppConfig.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1NToyMFrOHJHCNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOTo0OTo1NFrOHJx_aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxNDQ4NQ==", "bodyText": "Make sure that you have correct import settings", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r479314485", "createdAt": "2020-08-28T13:55:20Z", "author": {"login": "mateuszrzeszutek"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/test/groovy/test/filter/FilteredAppConfig.groovy", "diffHunk": "@@ -16,6 +16,8 @@\n \n package test.filter\n \n+import org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79ded368bda5c63910ff8aea30f0f604b2433307"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxODI4MQ==", "bodyText": "Yep, done.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480018281", "createdAt": "2020-08-31T09:49:54Z", "author": {"login": "kubawach"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/test/groovy/test/filter/FilteredAppConfig.groovy", "diffHunk": "@@ -16,6 +16,8 @@\n \n package test.filter\n \n+import org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxNDQ4NQ=="}, "originalCommit": {"oid": "79ded368bda5c63910ff8aea30f0f604b2433307"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjU0MDY3OnYy", "diffSide": "LEFT", "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/main/java/io/opentelemetry/instrumentation/auto/springwebmvc/WebApplicationContextInstrumentation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTowMTowNlrOHJ8drg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxODowOVrOHJ9Hdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE4OTg3MA==", "bodyText": "Any reason for this change?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480189870", "createdAt": "2020-08-31T15:01:06Z", "author": {"login": "iNikem"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/main/java/io/opentelemetry/instrumentation/auto/springwebmvc/WebApplicationContextInstrumentation.java", "diffHunk": "@@ -17,15 +17,14 @@\n package io.opentelemetry.instrumentation.auto.springwebmvc;\n \n import static io.opentelemetry.javaagent.tooling.ClassLoaderMatcher.hasClassesNamed;\n-import static io.opentelemetry.javaagent.tooling.bytebuddy.matcher.AgentElementMatchers.extendsClass;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c7abbadf096e02dc6aa4f1d47b3b5f9b5bc6cc8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMDU2Ng==", "bodyText": "I blame intelliJ. Will revert.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480200566", "createdAt": "2020-08-31T15:18:09Z", "author": {"login": "kubawach"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/main/java/io/opentelemetry/instrumentation/auto/springwebmvc/WebApplicationContextInstrumentation.java", "diffHunk": "@@ -17,15 +17,14 @@\n package io.opentelemetry.instrumentation.auto.springwebmvc;\n \n import static io.opentelemetry.javaagent.tooling.ClassLoaderMatcher.hasClassesNamed;\n-import static io.opentelemetry.javaagent.tooling.bytebuddy.matcher.AgentElementMatchers.extendsClass;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE4OTg3MA=="}, "originalCommit": {"oid": "7c7abbadf096e02dc6aa4f1d47b3b5f9b5bc6cc8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjU0NjAzOnYy", "diffSide": "RIGHT", "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/spring-webmvc-3.1-auto.gradle", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTowMjozNlrOHJ8hAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzo1OToxMFrOHLCFQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5MDcyMQ==", "bodyText": "I am not sure about this change. We usually test the oldest supported version by default and let latestDepTests verify the latest supported version.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480190721", "createdAt": "2020-08-31T15:02:36Z", "author": {"login": "iNikem"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/spring-webmvc-3.1-auto.gradle", "diffHunk": "@@ -39,9 +39,9 @@ dependencies {\n \n   testImplementation group: 'org.spockframework', name: 'spock-spring', version: \"$versions.spock\"\n \n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.17.RELEASE'\n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.17.RELEASE'\n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '1.5.17.RELEASE'\n+  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.3.1.RELEASE'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c7abbadf096e02dc6aa4f1d47b3b5f9b5bc6cc8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwNTIyOA==", "bodyText": "Is it changed to 2.x stream by latestDep? I had to make a few changes around test code (AppConfig, ServletFIlteTest) to make it work (spring boot 2 is in some aspects not compatible with 1.x stream). I assumed it's worth upgrading (in baseline) as boot 2 has been around for more than 2 years now. Let me know what you think about that.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480205228", "createdAt": "2020-08-31T15:25:49Z", "author": {"login": "kubawach"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/spring-webmvc-3.1-auto.gradle", "diffHunk": "@@ -39,9 +39,9 @@ dependencies {\n \n   testImplementation group: 'org.spockframework', name: 'spock-spring', version: \"$versions.spock\"\n \n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.17.RELEASE'\n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.17.RELEASE'\n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '1.5.17.RELEASE'\n+  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.3.1.RELEASE'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5MDcyMQ=="}, "originalCommit": {"oid": "7c7abbadf096e02dc6aa4f1d47b3b5f9b5bc6cc8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI0Nzc3OQ==", "bodyText": "I just realised that SB 2.3.1 most certainly does not use Spring MVC 3.1. So after these changes we don't test if we actually support 3.1. And as there are API changes affecting tests, it means we should test them separately but certainly should test them both. So I propose to leave this with old version as it was. And we should add a separate test with more recent versions of Spring MVC. You don't have to add that new test right away, you can add a follow up issue.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480247779", "createdAt": "2020-08-31T16:33:18Z", "author": {"login": "iNikem"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/spring-webmvc-3.1-auto.gradle", "diffHunk": "@@ -39,9 +39,9 @@ dependencies {\n \n   testImplementation group: 'org.spockframework', name: 'spock-spring', version: \"$versions.spock\"\n \n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.17.RELEASE'\n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.17.RELEASE'\n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '1.5.17.RELEASE'\n+  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.3.1.RELEASE'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5MDcyMQ=="}, "originalCommit": {"oid": "7c7abbadf096e02dc6aa4f1d47b3b5f9b5bc6cc8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzMDQ5OQ==", "bodyText": "Per slack conversation - made slight adjustments for the code to get both boot 1.x and 2.x compatibility.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r481330499", "createdAt": "2020-09-01T17:59:10Z", "author": {"login": "kubawach"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/spring-webmvc-3.1-auto.gradle", "diffHunk": "@@ -39,9 +39,9 @@ dependencies {\n \n   testImplementation group: 'org.spockframework', name: 'spock-spring', version: \"$versions.spock\"\n \n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.17.RELEASE'\n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.17.RELEASE'\n-  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '1.5.17.RELEASE'\n+  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.3.1.RELEASE'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5MDcyMQ=="}, "originalCommit": {"oid": "7c7abbadf096e02dc6aa4f1d47b3b5f9b5bc6cc8"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjU1NTU5OnYy", "diffSide": "RIGHT", "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/test/resources/logback.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTowNTowMFrOHJ8m3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxOToyMVrOHJ9KKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5MjIyMg==", "bodyText": "Remove that line above. I believe it is obsolete", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480192222", "createdAt": "2020-08-31T15:05:00Z", "author": {"login": "iNikem"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/test/resources/logback.xml", "diffHunk": "@@ -14,5 +14,6 @@\n   </root>\n \n   <logger name=\"io.opentelemetry.auto\" level=\"debug\"/>\n+  <logger name=\"io.opentelemetry.javaagent\" level=\"debug\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c7abbadf096e02dc6aa4f1d47b3b5f9b5bc6cc8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMTI1OA==", "bodyText": "Done.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r480201258", "createdAt": "2020-08-31T15:19:21Z", "author": {"login": "kubawach"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/test/resources/logback.xml", "diffHunk": "@@ -14,5 +14,6 @@\n   </root>\n \n   <logger name=\"io.opentelemetry.auto\" level=\"debug\"/>\n+  <logger name=\"io.opentelemetry.javaagent\" level=\"debug\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5MjIyMg=="}, "originalCommit": {"oid": "7c7abbadf096e02dc6aa4f1d47b3b5f9b5bc6cc8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjYwNDk2OnYy", "diffSide": "RIGHT", "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/test/groovy/test/filter/FilteredAppConfig.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzoxMjo1NFrOHLfzsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODozNzowNFrOHLkSzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgxNzUyMw==", "bodyText": "Please run ./gradlew spotlessApply and configure your IDE as described here", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r481817523", "createdAt": "2020-09-02T07:12:54Z", "author": {"login": "iNikem"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/test/groovy/test/filter/FilteredAppConfig.groovy", "diffHunk": "@@ -53,6 +41,15 @@ import org.springframework.web.context.request.NativeWebRequest\n import org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer\n import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter\n \n+import javax.servlet.Filter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e42e11ca4506fd6cd340375ca7d344bfdc56c7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg5MTAyMg==", "bodyText": "done!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1122#discussion_r481891022", "createdAt": "2020-09-02T08:37:04Z", "author": {"login": "kubawach"}, "path": "instrumentation/spring/spring-webmvc-3.1/spring-webmvc-3.1-auto/src/test/groovy/test/filter/FilteredAppConfig.groovy", "diffHunk": "@@ -53,6 +41,15 @@ import org.springframework.web.context.request.NativeWebRequest\n import org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer\n import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter\n \n+import javax.servlet.Filter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgxNzUyMw=="}, "originalCommit": {"oid": "a9e42e11ca4506fd6cd340375ca7d344bfdc56c7"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4843, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}