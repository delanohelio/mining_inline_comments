{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwOTg3Nzk0", "number": 591, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMjoyNjoyOFrOEJZrYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMjoyNjoyOFrOEJZrYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjkzMzQ0OnYy", "diffSide": "RIGHT", "path": "instrumentation/khttp-0.1/src/test/groovy/KHttpClientTest.groovy", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMjoyNjoyOFrOGp5u_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMzoxOTowOVrOGp58fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5MDcxNw==", "bodyText": "If I'm not mistaken the timeout for khttp is seconds so now we're setting it to 2000s - yeah that'll keep the flakes out ;) But probably meant to convert to secs.\nAlso if the value isn't ever used in assertions, perhaps can only have one timeout in the base class since it's not such a big deal for us to distinguish them when executing requests in tests.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/591#discussion_r446590717", "createdAt": "2020-06-28T02:26:28Z", "author": {"login": "anuraaga"}, "path": "instrumentation/khttp-0.1/src/test/groovy/KHttpClientTest.groovy", "diffHunk": "@@ -21,7 +21,9 @@ class KHttpClientTest extends HttpClientTest {\n \n   @Override\n   int doRequest(String method, URI uri, Map<String, String> headers, Closure callback) {\n-    def response = KHttp.request(method, uri.toString(), headers, Collections.emptyMap(), null, null, null, null, 1)\n+    // khttp applies the same timeout for both connect and read\n+    def timeout = Math.max(CONNECT_TIMEOUT_MS, READ_TIMEOUT_MS)\n+    def response = KHttp.request(method, uri.toString(), headers, Collections.emptyMap(), null, null, null, null, timeout)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94d91129b613473e96e7c9b9ce5b5b6947faa1d7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5MDc1Ng==", "bodyText": "https://khttp.readthedocs.io/en/latest/user/quickstart.html#timeouts", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/591#discussion_r446590756", "createdAt": "2020-06-28T02:27:22Z", "author": {"login": "anuraaga"}, "path": "instrumentation/khttp-0.1/src/test/groovy/KHttpClientTest.groovy", "diffHunk": "@@ -21,7 +21,9 @@ class KHttpClientTest extends HttpClientTest {\n \n   @Override\n   int doRequest(String method, URI uri, Map<String, String> headers, Closure callback) {\n-    def response = KHttp.request(method, uri.toString(), headers, Collections.emptyMap(), null, null, null, null, 1)\n+    // khttp applies the same timeout for both connect and read\n+    def timeout = Math.max(CONNECT_TIMEOUT_MS, READ_TIMEOUT_MS)\n+    def response = KHttp.request(method, uri.toString(), headers, Collections.emptyMap(), null, null, null, null, timeout)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5MDcxNw=="}, "originalCommit": {"oid": "94d91129b613473e96e7c9b9ce5b5b6947faa1d7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5NDE3Mg==", "bodyText": "opened #593, it looks to me like we don't need the read timeout at all", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/591#discussion_r446594172", "createdAt": "2020-06-28T03:19:09Z", "author": {"login": "trask"}, "path": "instrumentation/khttp-0.1/src/test/groovy/KHttpClientTest.groovy", "diffHunk": "@@ -21,7 +21,9 @@ class KHttpClientTest extends HttpClientTest {\n \n   @Override\n   int doRequest(String method, URI uri, Map<String, String> headers, Closure callback) {\n-    def response = KHttp.request(method, uri.toString(), headers, Collections.emptyMap(), null, null, null, null, 1)\n+    // khttp applies the same timeout for both connect and read\n+    def timeout = Math.max(CONNECT_TIMEOUT_MS, READ_TIMEOUT_MS)\n+    def response = KHttp.request(method, uri.toString(), headers, Collections.emptyMap(), null, null, null, null, timeout)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5MDcxNw=="}, "originalCommit": {"oid": "94d91129b613473e96e7c9b9ce5b5b6947faa1d7"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 297, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}