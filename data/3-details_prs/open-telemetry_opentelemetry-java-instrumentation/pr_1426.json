{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NTU1MzQ2", "number": 1426, "title": "Remove usage of Contexts from grpc instrumentation.", "bodyText": "And add a smoke test.\nI originally was just trying to add a smoke test and found our agent is broken :) Contexts.interceptCall seems to be hard for us to use in instrumentation since Contexts needs to be unshaded, but Context is shaded. This problem will go away in #1384 when we don't use gRPC context.\nAs a quick fix, I have restored manual propagation of span - we should be able to cherrypick this into the release branch if we want to fix grpc support in the agent. Note, I am propagating span, not context, which we don't like to do, but I think clobbering user context is worse than losing baggage or whatever may be lost - and it's just temporary.", "createdAt": "2020-10-20T07:40:00Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1426", "merged": true, "mergeCommit": {"oid": "a6e0e27ad4be7c31939d200f403c0c349d2b83b7"}, "closed": true, "closedAt": "2020-10-21T00:58:46Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUTv5bAH2gAyNTA2NTU1MzQ2OmVjYWMwMDgwN2QzMzM1ODlmNzQ0YzY2YmRiNTIyNWJmYmY5MGE1ZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUiO3mAFqTUxMzIyNjQ2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ecac00807d333589f744c66bdb5225bfbf90a5ff", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ecac00807d333589f744c66bdb5225bfbf90a5ff", "committedDate": "2020-10-20T07:36:14Z", "message": "Fix grpc instrumentation cannot be applied due to muzzle error and add smoke test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d96f8c2e92c4772991afd4283bb23a7936e60d4", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1d96f8c2e92c4772991afd4283bb23a7936e60d4", "committedDate": "2020-10-20T07:41:22Z", "message": "Add workflow for building smoke test image"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3343ad38ab088b52b05a1a52a2df54487c8dbd2b", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3343ad38ab088b52b05a1a52a2df54487c8dbd2b", "committedDate": "2020-10-20T07:44:48Z", "message": "Revert debug logging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNjQxNzM5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1426#pullrequestreview-512641739", "createdAt": "2020-10-20T12:17:34Z", "commit": {"oid": "3343ad38ab088b52b05a1a52a2df54487c8dbd2b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjoxNzozNFrOHk5ZLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjoyMDoyN1rOHk5gLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ1MTExNg==", "bodyText": "That's not Spring Boot, right?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1426#discussion_r508451116", "createdAt": "2020-10-20T12:17:34Z", "author": {"login": "iNikem"}, "path": ".github/workflows/build-grpc-smoke-dist.yaml", "diffHunk": "@@ -0,0 +1,33 @@\n+name: Build Spring Boot smoke test distribution", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3343ad38ab088b52b05a1a52a2df54487c8dbd2b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ1MTMwNw==", "bodyText": "Why?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1426#discussion_r508451307", "createdAt": "2020-10-20T12:17:55Z", "author": {"login": "iNikem"}, "path": ".gitignore", "diffHunk": "@@ -58,7 +57,4 @@ hs_err_pid*\n replay_pid*\n \n !java-agent/benchmark/releases/*.jar\n-/smoke-tests/play/.gradle/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3343ad38ab088b52b05a1a52a2df54487c8dbd2b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ1MjkwOA==", "bodyText": "Wanna change back?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1426#discussion_r508452908", "createdAt": "2020-10-20T12:20:27Z", "author": {"login": "iNikem"}, "path": "smoke-tests/src/test/groovy/io/opentelemetry/smoketest/GrpcSmokeTest.groovy", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.smoketest\n+\n+import static java.util.stream.Collectors.toSet\n+\n+import io.grpc.ManagedChannelBuilder\n+import io.opentelemetry.proto.collector.trace.v1.ExportTraceServiceRequest\n+import io.opentelemetry.proto.collector.trace.v1.TraceServiceGrpc\n+import java.util.jar.Attributes\n+import java.util.jar.JarFile\n+import spock.lang.Unroll\n+\n+class GrpcSmokeTest extends SmokeTest {\n+\n+  protected String getTargetImage(int jdk) {\n+    \"open-telemetry-docker-dev.bintray.io/java/smoke-grpc-jdk$jdk:latest\"\n+  }\n+\n+  @Unroll\n+  def \"grpc smoke test on JDK #jdk\"(int jdk) {\n+    setup:\n+    startTarget(jdk)\n+\n+    def channel = ManagedChannelBuilder.forAddress(\"localhost\", target.getMappedPort(8080))\n+      .usePlaintext()\n+      .build()\n+    def stub = TraceServiceGrpc.newBlockingStub(channel)\n+\n+    def currentAgentVersion = new JarFile(agentPath).getManifest().getMainAttributes().get(Attributes.Name.IMPLEMENTATION_VERSION)\n+\n+    when:\n+    stub.export(ExportTraceServiceRequest.getDefaultInstance())\n+    Collection<ExportTraceServiceRequest> traces = waitForTraces()\n+\n+    then:\n+    countSpansByName(traces, 'opentelemetry.proto.collector.trace.v1.TraceService/Export') == 1\n+    countSpansByName(traces, 'TestService.withSpan') == 1\n+\n+    [currentAgentVersion] as Set == findResourceAttribute(traces, \"telemetry.auto.version\")\n+      .map { it.stringValue }\n+      .collect(toSet())\n+\n+    cleanup:\n+    stopTarget()\n+\n+    where:\n+    jdk << [11]\n+    // jdk << [8, 11, 15]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3343ad38ab088b52b05a1a52a2df54487c8dbd2b"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNzMyNjY5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1426#pullrequestreview-512732669", "createdAt": "2020-10-20T13:48:43Z", "commit": {"oid": "3343ad38ab088b52b05a1a52a2df54487c8dbd2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzo0ODo0M1rOHk9lEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzo0ODo0M1rOHk9lEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxOTY5OQ==", "bodyText": "Shouldn't it be 8 here? If you want it to run on Java 8", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1426#discussion_r508519699", "createdAt": "2020-10-20T13:48:43Z", "author": {"login": "mateuszrzeszutek"}, "path": "smoke-tests/grpc/build.gradle", "diffHunk": "@@ -0,0 +1,35 @@\n+plugins {\n+  id \"java\"\n+  id \"com.google.cloud.tools.jib\" version \"2.6.0\"\n+}\n+\n+group = \"io.opentelemetry\"\n+version = \"0.0.1-SNAPSHOT\"\n+\n+repositories {\n+  jcenter()\n+}\n+\n+dependencies {\n+  implementation platform(\"org.apache.logging.log4j:log4j-bom:2.13.3\")\n+\n+  implementation \"io.grpc:grpc-netty-shaded:1.32.1\"\n+  implementation \"io.grpc:grpc-protobuf:1.32.1\"\n+  implementation \"io.grpc:grpc-stub:1.32.1\"\n+  implementation \"io.opentelemetry:opentelemetry-proto:0.9.1\"\n+  implementation \"io.opentelemetry:opentelemetry-extension-auto-annotations:0.9.1\"\n+  implementation \"org.apache.logging.log4j:log4j-core\"\n+\n+  runtimeOnly(\"org.apache.logging.log4j:log4j-slf4j-impl\")\n+}\n+\n+compileJava {\n+  options.release = 11", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3343ad38ab088b52b05a1a52a2df54487c8dbd2b"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38b0fde66d2d81637fd99396869eb69d5f1f3b2e", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/38b0fde66d2d81637fd99396869eb69d5f1f3b2e", "committedDate": "2020-10-21T00:04:36Z", "message": "Java versions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMjI2NDYz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1426#pullrequestreview-513226463", "createdAt": "2020-10-21T00:28:44Z", "commit": {"oid": "38b0fde66d2d81637fd99396869eb69d5f1f3b2e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2368, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}