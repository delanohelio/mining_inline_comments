{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODMwNDgx", "number": 386, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNDo0MzowM1rOD5qriw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNDo0MzowM1rOD5qriw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzk0Njk5OnYy", "diffSide": "RIGHT", "path": "testing/testing.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNDo0MzowM1rOGRD2Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowODowMlrOGRfPBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU0MjAxMQ==", "bodyText": "Honestly, I am not sure about that. I am trying to understand why our builds are so long and this constant forking is one of my top suspects right now.\nI would like to raise the problem of flaky and slow tests on the next SIG meeting.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/386#discussion_r420542011", "createdAt": "2020-05-06T04:43:03Z", "author": {"login": "iNikem"}, "path": "testing/testing.gradle", "diffHunk": "@@ -62,3 +62,5 @@ tasks.register(\"testDisabledFieldInjection\", Test) {\n   include \"context/FieldBackedProviderFieldInjectionDisabledTest.class\"\n }\n test.dependsOn(testDisabledFieldInjection)\n+\n+test.forkEvery = 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96f105f1f4f50f129a138fab3031a0c5966059cc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4NTA5Mw==", "bodyText": "Good point, I just ran this with and without forkEvery = 1, and it's 50% slower with forkEvery = 1 \u2639\ufe0f.\nBut I'm currently finding the flakiness more painful than the duration, so I propose we take this in as a temporary measure.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/386#discussion_r420985093", "createdAt": "2020-05-06T17:58:59Z", "author": {"login": "trask"}, "path": "testing/testing.gradle", "diffHunk": "@@ -62,3 +62,5 @@ tasks.register(\"testDisabledFieldInjection\", Test) {\n   include \"context/FieldBackedProviderFieldInjectionDisabledTest.class\"\n }\n test.dependsOn(testDisabledFieldInjection)\n+\n+test.forkEvery = 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU0MjAxMQ=="}, "originalCommit": {"oid": "96f105f1f4f50f129a138fab3031a0c5966059cc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5MDcyNw==", "bodyText": "Let us just hope that cure will not be worse than the sickness. And when we start performance optimisations, the first step that we will do, is to remove this fork settings :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/386#discussion_r420990727", "createdAt": "2020-05-06T18:08:02Z", "author": {"login": "iNikem"}, "path": "testing/testing.gradle", "diffHunk": "@@ -62,3 +62,5 @@ tasks.register(\"testDisabledFieldInjection\", Test) {\n   include \"context/FieldBackedProviderFieldInjectionDisabledTest.class\"\n }\n test.dependsOn(testDisabledFieldInjection)\n+\n+test.forkEvery = 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU0MjAxMQ=="}, "originalCommit": {"oid": "96f105f1f4f50f129a138fab3031a0c5966059cc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 424, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}