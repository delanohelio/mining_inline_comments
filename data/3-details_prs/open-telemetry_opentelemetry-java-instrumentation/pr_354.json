{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MTI2MDY4", "number": 354, "title": "Fix some sporadic test failures", "bodyText": "Reverting #349 in this PR and trying a different approach because still seeing sporadic errors, e.g. now\nCannot resolve bounds of unresolved type variable V by class\norg.springframework.cglib.core.internal.LoadingCache$2\n\nSetting net.bytebuddy.raw=true solves the Cannot resolve bounds of unresolved type variable. We set this in AgentInstaller, but because the tests load bytebuddy early, it's too late during tests to set it in AgentInstaller, so setting it now at the beginning of the tests.\nAfter setting net.bytebuddy.raw=true, still getting some of the issues that #349 addressed. In general these failures look like they happen during redefinition of classes that were loaded by prior tests, so isolating each test class in it's own JVM seems to be helping.\nThe instrumentation tests are already so expensive that I'm not too concerned about the extra overhead of forkEvery = 1.\nLastly in this PR, there is a fix for tests sporadically failing because the TEST_SPAN was not being created due to an existing span (probably left over from propagation to the thread when it was started). Now, the TEST_SPAN span is always applied, regardless of an existing span, which required some changes to the JettyTestInstrumentation in order to prevent multiple TEST_SPAN spans from being created.", "createdAt": "2020-04-26T17:43:22Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/354", "merged": true, "mergeCommit": {"oid": "f9e74ac9c6dc3ca352231c6f213e883e2d0dc100"}, "closed": true, "closedAt": "2020-04-27T18:40:28Z", "author": {"login": "trask"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbeE4JgH2gAyNDA5MTI2MDY4OmRhMDYxZDA0NTk0ZWE2YTNjY2Q4N2IyZTdiNjk5NzRjYmRkMDE5YWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbzsRQgFqTQwMTIxOTY1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da061d04594ea6a3ccd87b2e7b69974cbdd019ab", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/da061d04594ea6a3ccd87b2e7b69974cbdd019ab", "committedDate": "2020-04-26T17:24:31Z", "message": "Revert \"Fix some sporadic failures (#349)\"\n\nThis reverts commit 2d2f4a953e869b6a5bc380990820e923374d519b."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f436499883d16a530faaa4383bc868ca0d4d14e3", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f436499883d16a530faaa4383bc868ca0d4d14e3", "committedDate": "2020-04-26T17:24:31Z", "message": "Fix some sporadic test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "364d215f0439db14247d6b7c94739a315ea46116", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/364d215f0439db14247d6b7c94739a315ea46116", "committedDate": "2020-04-26T17:25:16Z", "message": "Fix smore sporadic test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b57847155d869158e8454aa2ab339b735b844a86", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b57847155d869158e8454aa2ab339b735b844a86", "committedDate": "2020-04-26T17:25:16Z", "message": "Improve Jetty test advice"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "704a23affc5d8ade3ec9737ec59bfae8be5c6ac9", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/704a23affc5d8ade3ec9737ec59bfae8be5c6ac9", "committedDate": "2020-04-26T17:42:36Z", "message": "Improve test consistency"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1effa6594a16e8e55e820d02d133cd7239f8638", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f1effa6594a16e8e55e820d02d133cd7239f8638", "committedDate": "2020-04-26T21:24:03Z", "message": "Debug AkkaActorTest sporadic failure"}, "afterCommit": {"oid": "209467d21d94b16e3dbe1e04db84b5448dff72ea", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/209467d21d94b16e3dbe1e04db84b5448dff72ea", "committedDate": "2020-04-26T21:51:16Z", "message": "Debug AkkaActorTest sporadic failure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "209467d21d94b16e3dbe1e04db84b5448dff72ea", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/209467d21d94b16e3dbe1e04db84b5448dff72ea", "committedDate": "2020-04-26T21:51:16Z", "message": "Debug AkkaActorTest sporadic failure"}, "afterCommit": {"oid": "704a23affc5d8ade3ec9737ec59bfae8be5c6ac9", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/704a23affc5d8ade3ec9737ec59bfae8be5c6ac9", "committedDate": "2020-04-26T17:42:36Z", "message": "Improve test consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMjE5NjUz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/354#pullrequestreview-401219653", "createdAt": "2020-04-27T18:31:52Z", "commit": {"oid": "704a23affc5d8ade3ec9737ec59bfae8be5c6ac9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxODozMTo1MlrOGMxz-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxODozNToyOFrOGMx9Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA1MjIxOA==", "bodyText": "Was this causing failures, or just simplifying things?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/354#discussion_r416052218", "createdAt": "2020-04-27T18:31:52Z", "author": {"login": "tylerbenson"}, "path": "instrumentation/jetty-8.0/src/test/groovy/JettyTestInstrumentation.java", "diffHunk": "@@ -26,21 +26,7 @@\n   @Override\n   public AgentBuilder instrument(final AgentBuilder agentBuilder) {\n     return agentBuilder\n-        // Jetty 8.0\n-        .type(named(\"org.eclipse.jetty.server.HttpConnection\"))\n-        .transform(\n-            new AgentBuilder.Transformer.ForAdvice()\n-                .advice(\n-                    named(\"handleRequest\"), HttpServerTestAdvice.ServerEntryAdvice.class.getName()))\n-        // Jetty 8.?\n-        .type(named(\"org.eclipse.jetty.server.AbstractHttpConnection\"))\n-        .transform(\n-            new AgentBuilder.Transformer.ForAdvice()\n-                .advice(\n-                    named(\"headerComplete\"),\n-                    HttpServerTestAdvice.ServerEntryAdvice.class.getName()))\n-        // Jetty 9\n-        .type(named(\"org.eclipse.jetty.server.HttpChannel\"))\n+        .type(named(\"org.eclipse.jetty.server.Server\"))\n         .transform(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "704a23affc5d8ade3ec9737ec59bfae8be5c6ac9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA1NDU4Nw==", "bodyText": "Is this still needed if we call addByteBuddyRawSetting early enough?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/354#discussion_r416054587", "createdAt": "2020-04-27T18:35:28Z", "author": {"login": "tylerbenson"}, "path": "gradle/instrumentation.gradle", "diffHunk": "@@ -13,6 +13,10 @@ byteBuddy {\n \n apply from: \"${rootDir}/gradle/java.gradle\"\n \n+tasks.withType(Test) {\n+  forkEvery = 1\n+}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "704a23affc5d8ade3ec9737ec59bfae8be5c6ac9"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3280, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}