{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MDM2Njkw", "number": 471, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo0NTowN1rOECFL8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo0ODoyOVrOECFQoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjE3NTg0OnYy", "diffSide": "RIGHT", "path": "instrumentation/mongo/mongo-3.1/src/main/java/io/opentelemetry/auto/instrumentation/mongo/v3_1/MongoClientInstrumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo0NTowN1rOGeUVRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo0NTowN1rOGeUVRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0MzU5MQ==", "bodyText": "Inline this variable", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/471#discussion_r434443591", "createdAt": "2020-06-03T09:45:07Z", "author": {"login": "iNikem"}, "path": "instrumentation/mongo/mongo-3.1/src/main/java/io/opentelemetry/auto/instrumentation/mongo/v3_1/MongoClientInstrumentation.java", "diffHunk": "@@ -75,8 +77,16 @@ public MongoClientInstrumentation() {\n   public static class MongoClientAdvice {\n \n     @Advice.OnMethodEnter(suppress = Throwable.class)\n-    public static void injectTraceListener(@Advice.This final MongoClientOptions.Builder builder) {\n-      builder.addCommandListener(new TracingCommandListener());\n+    public static void injectTraceListener(\n+        @Advice.This final MongoClientOptions.Builder builder,\n+        @Advice.FieldValue(\"commandListeners\") final List<CommandListener> commandListeners) {\n+      for (final CommandListener commandListener : commandListeners) {\n+        if (commandListener instanceof TracingCommandListener) {\n+          return;\n+        }\n+      }\n+      final TracingCommandListener listener = new TracingCommandListener();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254de93321b296e5ff269f3210d70f01e03bb9c2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjE4MTExOnYy", "diffSide": "RIGHT", "path": "instrumentation/mongo/mongo-3.1/src/test/groovy/MongoClientTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo0NjozMFrOGeUYsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToyNTo0MlrOGeqKDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0NDQ2NA==", "bodyText": "I think you don't need where block here. Just use this values/variable directly in setup block", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/471#discussion_r434444464", "createdAt": "2020-06-03T09:46:30Z", "author": {"login": "iNikem"}, "path": "instrumentation/mongo/mongo-3.1/src/test/groovy/MongoClientTest.groovy", "diffHunk": "@@ -68,6 +68,27 @@ class MongoClientTest extends MongoBaseTest {\n     collectionName = \"testCollection\"\n   }\n \n+  def \"test create collection with already built ClientSettings\"() {\n+    setup:\n+    def clientOptions = client.mongoClientOptions\n+    def newClientOptions = MongoClientOptions.builder(clientOptions).build()\n+    MongoDatabase db = new MongoClient(new ServerAddress(\"localhost\", port), newClientOptions).getDatabase(dbName)\n+\n+    when:\n+    db.createCollection(collectionName)\n+\n+    then:\n+    assertTraces(1) {\n+      trace(0, 1) {\n+        mongoSpan(it, 0, \"{\\\"create\\\":\\\"$collectionName\\\",\\\"capped\\\":\\\"?\\\"}\")\n+      }\n+    }\n+\n+    where:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254de93321b296e5ff269f3210d70f01e03bb9c2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgwMTE2Ng==", "bodyText": "using the where block like this is consistent with the other tests in this class, so I think it's good", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/471#discussion_r434801166", "createdAt": "2020-06-03T19:25:42Z", "author": {"login": "trask"}, "path": "instrumentation/mongo/mongo-3.1/src/test/groovy/MongoClientTest.groovy", "diffHunk": "@@ -68,6 +68,27 @@ class MongoClientTest extends MongoBaseTest {\n     collectionName = \"testCollection\"\n   }\n \n+  def \"test create collection with already built ClientSettings\"() {\n+    setup:\n+    def clientOptions = client.mongoClientOptions\n+    def newClientOptions = MongoClientOptions.builder(clientOptions).build()\n+    MongoDatabase db = new MongoClient(new ServerAddress(\"localhost\", port), newClientOptions).getDatabase(dbName)\n+\n+    when:\n+    db.createCollection(collectionName)\n+\n+    then:\n+    assertTraces(1) {\n+      trace(0, 1) {\n+        mongoSpan(it, 0, \"{\\\"create\\\":\\\"$collectionName\\\",\\\"capped\\\":\\\"?\\\"}\")\n+      }\n+    }\n+\n+    where:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0NDQ2NA=="}, "originalCommit": {"oid": "254de93321b296e5ff269f3210d70f01e03bb9c2"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjE4Nzg0OnYy", "diffSide": "RIGHT", "path": "instrumentation/mongo/mongo-3.1/src/test/groovy/MongoClientTest.groovy", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo0ODoyOVrOGeUc-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODozNjoyMFrOGe7jSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0NTU2Mg==", "bodyText": "I don't quite understand how this test is related to the change in MongoClientAdvice. I would expect that you test e.g. calling build method twice and then check that only one span is created. Do I miss something?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/471#discussion_r434445562", "createdAt": "2020-06-03T09:48:29Z", "author": {"login": "iNikem"}, "path": "instrumentation/mongo/mongo-3.1/src/test/groovy/MongoClientTest.groovy", "diffHunk": "@@ -68,6 +68,27 @@ class MongoClientTest extends MongoBaseTest {\n     collectionName = \"testCollection\"\n   }\n \n+  def \"test create collection with already built ClientSettings\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254de93321b296e5ff269f3210d70f01e03bb9c2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgwMzQ2Mw==", "bodyText": "it's using an existing client.mongoClientOptions (which will already have our CommandListener), so it tests that we don't add it again on top of that", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/471#discussion_r434803463", "createdAt": "2020-06-03T19:30:10Z", "author": {"login": "trask"}, "path": "instrumentation/mongo/mongo-3.1/src/test/groovy/MongoClientTest.groovy", "diffHunk": "@@ -68,6 +68,27 @@ class MongoClientTest extends MongoBaseTest {\n     collectionName = \"testCollection\"\n   }\n \n+  def \"test create collection with already built ClientSettings\"() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0NTU2Mg=="}, "originalCommit": {"oid": "254de93321b296e5ff269f3210d70f01e03bb9c2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgwODY0NA==", "bodyText": "Why client.mongoClientOptions will already have a CommandListener? And in any case this then should be documented in test :) I always assume that if some code was confusing to me, it will probably be confusing to somebody else :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/471#discussion_r434808644", "createdAt": "2020-06-03T19:38:44Z", "author": {"login": "iNikem"}, "path": "instrumentation/mongo/mongo-3.1/src/test/groovy/MongoClientTest.groovy", "diffHunk": "@@ -68,6 +68,27 @@ class MongoClientTest extends MongoBaseTest {\n     collectionName = \"testCollection\"\n   }\n \n+  def \"test create collection with already built ClientSettings\"() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0NTU2Mg=="}, "originalCommit": {"oid": "254de93321b296e5ff269f3210d70f01e03bb9c2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4MzI2MA==", "bodyText": "\ud83d\udc4d comment here would be great", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/471#discussion_r434983260", "createdAt": "2020-06-04T04:18:10Z", "author": {"login": "trask"}, "path": "instrumentation/mongo/mongo-3.1/src/test/groovy/MongoClientTest.groovy", "diffHunk": "@@ -68,6 +68,27 @@ class MongoClientTest extends MongoBaseTest {\n     collectionName = \"testCollection\"\n   }\n \n+  def \"test create collection with already built ClientSettings\"() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0NTU2Mg=="}, "originalCommit": {"oid": "254de93321b296e5ff269f3210d70f01e03bb9c2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA4NjE1Mw==", "bodyText": "Thanks for the comment. I completely agree. Initially, I was also little not sure about readability of this test. I added a comment now. Let me know if that's alright.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/471#discussion_r435086153", "createdAt": "2020-06-04T08:36:20Z", "author": {"login": "RashmiRam"}, "path": "instrumentation/mongo/mongo-3.1/src/test/groovy/MongoClientTest.groovy", "diffHunk": "@@ -68,6 +68,27 @@ class MongoClientTest extends MongoBaseTest {\n     collectionName = \"testCollection\"\n   }\n \n+  def \"test create collection with already built ClientSettings\"() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0NTU2Mg=="}, "originalCommit": {"oid": "254de93321b296e5ff269f3210d70f01e03bb9c2"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 473, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}