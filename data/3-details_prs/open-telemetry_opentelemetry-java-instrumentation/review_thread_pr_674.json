{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MDIxMDEx", "number": 674, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDowNDo0M1rOENrOZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDoxODoxN1rOENrWIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzc1MTQyOnYy", "diffSide": "LEFT", "path": "auto-exporters/zipkin/src/main/java/io/opentelemetry/auto/exporters/zipkin/ZipkinExporterFactory.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDowNDo0M1rOGwaxBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDo1MToyM1rOGwbXfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzM2Nw==", "bodyText": "I forgot about this, I think we need to force OkHttpSender here due to #375 (comment)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r453423367", "createdAt": "2020-07-13T04:04:43Z", "author": {"login": "trask"}, "path": "auto-exporters/zipkin/src/main/java/io/opentelemetry/auto/exporters/zipkin/ZipkinExporterFactory.java", "diffHunk": "@@ -23,19 +23,12 @@\n import zipkin2.reporter.okhttp3.OkHttpSender;\n \n public class ZipkinExporterFactory implements SpanExporterFactory {\n-  private static final String ZIPKIN_ENDPOINT = \"zipkin.endpoint\";\n-  private static final String DEFAULT_ZIPKIN_ENDPOINT = \"http://localhost:9411/api/v2/spans\";\n-\n-  private static final String ZIPKIN_SERVICE_NAME = \"zipkin.service.name\";\n-  private static final String DEFAULT_ZIPKIN_SERVICE_NAME = \"(unknown service)\";\n \n   @Override\n   public SpanExporter fromConfig(Config config) {\n-    final String zipkinEndpoint = config.getString(ZIPKIN_ENDPOINT, DEFAULT_ZIPKIN_ENDPOINT);\n-    final String serviceName = config.getString(ZIPKIN_SERVICE_NAME, DEFAULT_ZIPKIN_SERVICE_NAME);\n     return ZipkinSpanExporter.newBuilder()\n-        .setSender(OkHttpSender.create(zipkinEndpoint))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eccc2c71f9b7c9d2eb4f988c283b4a96bf2bef2a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzMDcxNQ==", "bodyText": "ok, trying to set it.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r453430715", "createdAt": "2020-07-13T04:39:52Z", "author": {"login": "malafeev"}, "path": "auto-exporters/zipkin/src/main/java/io/opentelemetry/auto/exporters/zipkin/ZipkinExporterFactory.java", "diffHunk": "@@ -23,19 +23,12 @@\n import zipkin2.reporter.okhttp3.OkHttpSender;\n \n public class ZipkinExporterFactory implements SpanExporterFactory {\n-  private static final String ZIPKIN_ENDPOINT = \"zipkin.endpoint\";\n-  private static final String DEFAULT_ZIPKIN_ENDPOINT = \"http://localhost:9411/api/v2/spans\";\n-\n-  private static final String ZIPKIN_SERVICE_NAME = \"zipkin.service.name\";\n-  private static final String DEFAULT_ZIPKIN_SERVICE_NAME = \"(unknown service)\";\n \n   @Override\n   public SpanExporter fromConfig(Config config) {\n-    final String zipkinEndpoint = config.getString(ZIPKIN_ENDPOINT, DEFAULT_ZIPKIN_ENDPOINT);\n-    final String serviceName = config.getString(ZIPKIN_SERVICE_NAME, DEFAULT_ZIPKIN_SERVICE_NAME);\n     return ZipkinSpanExporter.newBuilder()\n-        .setSender(OkHttpSender.create(zipkinEndpoint))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzM2Nw=="}, "originalCommit": {"oid": "eccc2c71f9b7c9d2eb4f988c283b4a96bf2bef2a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzMTI5MA==", "bodyText": "Anyways except for when the JAR size is extremely limited, Zipkin always recommends using OkHttp in production since performance is way better.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r453431290", "createdAt": "2020-07-13T04:42:42Z", "author": {"login": "anuraaga"}, "path": "auto-exporters/zipkin/src/main/java/io/opentelemetry/auto/exporters/zipkin/ZipkinExporterFactory.java", "diffHunk": "@@ -23,19 +23,12 @@\n import zipkin2.reporter.okhttp3.OkHttpSender;\n \n public class ZipkinExporterFactory implements SpanExporterFactory {\n-  private static final String ZIPKIN_ENDPOINT = \"zipkin.endpoint\";\n-  private static final String DEFAULT_ZIPKIN_ENDPOINT = \"http://localhost:9411/api/v2/spans\";\n-\n-  private static final String ZIPKIN_SERVICE_NAME = \"zipkin.service.name\";\n-  private static final String DEFAULT_ZIPKIN_SERVICE_NAME = \"(unknown service)\";\n \n   @Override\n   public SpanExporter fromConfig(Config config) {\n-    final String zipkinEndpoint = config.getString(ZIPKIN_ENDPOINT, DEFAULT_ZIPKIN_ENDPOINT);\n-    final String serviceName = config.getString(ZIPKIN_SERVICE_NAME, DEFAULT_ZIPKIN_SERVICE_NAME);\n     return ZipkinSpanExporter.newBuilder()\n-        .setSender(OkHttpSender.create(zipkinEndpoint))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzM2Nw=="}, "originalCommit": {"oid": "eccc2c71f9b7c9d2eb4f988c283b4a96bf2bef2a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzMzIxMw==", "bodyText": "I opened open-telemetry/opentelemetry-java#1409 to change the default upstream, so we don't have to override it in the future", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r453433213", "createdAt": "2020-07-13T04:51:23Z", "author": {"login": "trask"}, "path": "auto-exporters/zipkin/src/main/java/io/opentelemetry/auto/exporters/zipkin/ZipkinExporterFactory.java", "diffHunk": "@@ -23,19 +23,12 @@\n import zipkin2.reporter.okhttp3.OkHttpSender;\n \n public class ZipkinExporterFactory implements SpanExporterFactory {\n-  private static final String ZIPKIN_ENDPOINT = \"zipkin.endpoint\";\n-  private static final String DEFAULT_ZIPKIN_ENDPOINT = \"http://localhost:9411/api/v2/spans\";\n-\n-  private static final String ZIPKIN_SERVICE_NAME = \"zipkin.service.name\";\n-  private static final String DEFAULT_ZIPKIN_SERVICE_NAME = \"(unknown service)\";\n \n   @Override\n   public SpanExporter fromConfig(Config config) {\n-    final String zipkinEndpoint = config.getString(ZIPKIN_ENDPOINT, DEFAULT_ZIPKIN_ENDPOINT);\n-    final String serviceName = config.getString(ZIPKIN_SERVICE_NAME, DEFAULT_ZIPKIN_SERVICE_NAME);\n     return ZipkinSpanExporter.newBuilder()\n-        .setSender(OkHttpSender.create(zipkinEndpoint))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzM2Nw=="}, "originalCommit": {"oid": "eccc2c71f9b7c9d2eb4f988c283b4a96bf2bef2a"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzc3MTIzOnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDoxODoxN1rOGwa8Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODoyNzo1MlrOG6R_9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNjI3NQ==", "bodyText": "Wrong format of System property name", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r453426275", "createdAt": "2020-07-13T04:18:17Z", "author": {"login": "iNikem"}, "path": "README.md", "diffHunk": "@@ -57,17 +57,17 @@ only supports gRPC as its communications protocol.\n | System property                  | Environment variable             | Purpose                                                              |\n |----------------------------------|----------------------------------|----------------------------------------------------------------------|\n | ota.exporter=jaeger              | OTA_EXPORTER=jaeger              | To select Jaeger exporter                                            |\n-| ota.exporter.jaeger.endpoint     | OTA_EXPORTER_JAEGER_ENDPOINT     | The Jaeger endpoint to connect to. Currently only gRPC is supported. |\n-| ota.exporter.jaeger.service.name | OTA_EXPORTER_JAEGER_SERVICE_NAME | The service name of this JVM instance                                |\n+| JAEGER_ENDPOINT                  | JAEGER_ENDPOINT                  | The Jaeger endpoint to connect to. Currently only gRPC is supported. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNzA5MQ==", "bodyText": "Yes and no \ud83d\ude04. It's an issue upstream. Should get fixed by open-telemetry/opentelemetry-java#1408.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r453427091", "createdAt": "2020-07-13T04:22:11Z", "author": {"login": "trask"}, "path": "README.md", "diffHunk": "@@ -57,17 +57,17 @@ only supports gRPC as its communications protocol.\n | System property                  | Environment variable             | Purpose                                                              |\n |----------------------------------|----------------------------------|----------------------------------------------------------------------|\n | ota.exporter=jaeger              | OTA_EXPORTER=jaeger              | To select Jaeger exporter                                            |\n-| ota.exporter.jaeger.endpoint     | OTA_EXPORTER_JAEGER_ENDPOINT     | The Jaeger endpoint to connect to. Currently only gRPC is supported. |\n-| ota.exporter.jaeger.service.name | OTA_EXPORTER_JAEGER_SERVICE_NAME | The service name of this JVM instance                                |\n+| JAEGER_ENDPOINT                  | JAEGER_ENDPOINT                  | The Jaeger endpoint to connect to. Currently only gRPC is supported. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNjI3NQ=="}, "originalCommit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyOTA4NA==", "bodyText": "yes, but it comes from otel-java: https://github.com/open-telemetry/opentelemetry-java/blob/master/exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java#L41", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r453429084", "createdAt": "2020-07-13T04:31:58Z", "author": {"login": "malafeev"}, "path": "README.md", "diffHunk": "@@ -57,17 +57,17 @@ only supports gRPC as its communications protocol.\n | System property                  | Environment variable             | Purpose                                                              |\n |----------------------------------|----------------------------------|----------------------------------------------------------------------|\n | ota.exporter=jaeger              | OTA_EXPORTER=jaeger              | To select Jaeger exporter                                            |\n-| ota.exporter.jaeger.endpoint     | OTA_EXPORTER_JAEGER_ENDPOINT     | The Jaeger endpoint to connect to. Currently only gRPC is supported. |\n-| ota.exporter.jaeger.service.name | OTA_EXPORTER_JAEGER_SERVICE_NAME | The service name of this JVM instance                                |\n+| JAEGER_ENDPOINT                  | JAEGER_ENDPOINT                  | The Jaeger endpoint to connect to. Currently only gRPC is supported. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNjI3NQ=="}, "originalCommit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyMjI1NA==", "bodyText": "The environment var JAEGER_SERVICE_NAME must be OTEL_JAEGER_SERVICE_NAME to work for me in 0.7.0-SNAPSHOT (current master head). In 0.5.0 it was OTA_EXPORTER_JAEGER_SERVICE_NAME, in 0.6.0 only JAEGER_SERVICE_NAME.\nI'm a little bit confused... what is really expected? \ud83d\ude38", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r463122254", "createdAt": "2020-07-30T16:29:36Z", "author": {"login": "flecno"}, "path": "README.md", "diffHunk": "@@ -57,17 +57,17 @@ only supports gRPC as its communications protocol.\n | System property                  | Environment variable             | Purpose                                                              |\n |----------------------------------|----------------------------------|----------------------------------------------------------------------|\n | ota.exporter=jaeger              | OTA_EXPORTER=jaeger              | To select Jaeger exporter                                            |\n-| ota.exporter.jaeger.endpoint     | OTA_EXPORTER_JAEGER_ENDPOINT     | The Jaeger endpoint to connect to. Currently only gRPC is supported. |\n-| ota.exporter.jaeger.service.name | OTA_EXPORTER_JAEGER_SERVICE_NAME | The service name of this JVM instance                                |\n+| JAEGER_ENDPOINT                  | JAEGER_ENDPOINT                  | The Jaeger endpoint to connect to. Currently only gRPC is supported. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNjI3NQ=="}, "originalCommit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyOTY5MQ==", "bodyText": "it makes sense to have documented it in otel-java and here add a link to it, although link also can be broken in next release...", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r463129691", "createdAt": "2020-07-30T16:42:10Z", "author": {"login": "malafeev"}, "path": "README.md", "diffHunk": "@@ -57,17 +57,17 @@ only supports gRPC as its communications protocol.\n | System property                  | Environment variable             | Purpose                                                              |\n |----------------------------------|----------------------------------|----------------------------------------------------------------------|\n | ota.exporter=jaeger              | OTA_EXPORTER=jaeger              | To select Jaeger exporter                                            |\n-| ota.exporter.jaeger.endpoint     | OTA_EXPORTER_JAEGER_ENDPOINT     | The Jaeger endpoint to connect to. Currently only gRPC is supported. |\n-| ota.exporter.jaeger.service.name | OTA_EXPORTER_JAEGER_SERVICE_NAME | The service name of this JVM instance                                |\n+| JAEGER_ENDPOINT                  | JAEGER_ENDPOINT                  | The Jaeger endpoint to connect to. Currently only gRPC is supported. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNjI3NQ=="}, "originalCommit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NDA3NQ==", "bodyText": "hey @flecno! does this PR answer your question: #830", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r463194075", "createdAt": "2020-07-30T18:35:12Z", "author": {"login": "trask"}, "path": "README.md", "diffHunk": "@@ -57,17 +57,17 @@ only supports gRPC as its communications protocol.\n | System property                  | Environment variable             | Purpose                                                              |\n |----------------------------------|----------------------------------|----------------------------------------------------------------------|\n | ota.exporter=jaeger              | OTA_EXPORTER=jaeger              | To select Jaeger exporter                                            |\n-| ota.exporter.jaeger.endpoint     | OTA_EXPORTER_JAEGER_ENDPOINT     | The Jaeger endpoint to connect to. Currently only gRPC is supported. |\n-| ota.exporter.jaeger.service.name | OTA_EXPORTER_JAEGER_SERVICE_NAME | The service name of this JVM instance                                |\n+| JAEGER_ENDPOINT                  | JAEGER_ENDPOINT                  | The Jaeger endpoint to connect to. Currently only gRPC is supported. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNjI3NQ=="}, "originalCommit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc2NTQ5Mw==", "bodyText": "Yes, thank you!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r463765493", "createdAt": "2020-07-31T18:27:52Z", "author": {"login": "flecno"}, "path": "README.md", "diffHunk": "@@ -57,17 +57,17 @@ only supports gRPC as its communications protocol.\n | System property                  | Environment variable             | Purpose                                                              |\n |----------------------------------|----------------------------------|----------------------------------------------------------------------|\n | ota.exporter=jaeger              | OTA_EXPORTER=jaeger              | To select Jaeger exporter                                            |\n-| ota.exporter.jaeger.endpoint     | OTA_EXPORTER_JAEGER_ENDPOINT     | The Jaeger endpoint to connect to. Currently only gRPC is supported. |\n-| ota.exporter.jaeger.service.name | OTA_EXPORTER_JAEGER_SERVICE_NAME | The service name of this JVM instance                                |\n+| JAEGER_ENDPOINT                  | JAEGER_ENDPOINT                  | The Jaeger endpoint to connect to. Currently only gRPC is supported. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNjI3NQ=="}, "originalCommit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 376, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}