{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMzE4NzM2", "number": 1350, "title": "Propagate full context", "bodyText": "I didn't realize, there were still many places we were only propagating Span as opposed to the full Context", "createdAt": "2020-10-09T03:28:47Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1350", "merged": true, "mergeCommit": {"oid": "9605789726103195d03e6f0a1e5fc71f58d4380d"}, "closed": true, "closedAt": "2020-10-09T09:58:43Z", "author": {"login": "trask"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQtep1AH2gAyNTAwMzE4NzM2OmI2ZDZjY2M5NzJkZWI2YzMxZWEwYzJhOWEzNTRlYzZkMWJjMjc0YWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQzMPSgFqTUwNTUzMTE3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b6d6ccc972deb6c31ea0c2a9a354ec6d1bc274ac", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b6d6ccc972deb6c31ea0c2a9a354ec6d1bc274ac", "committedDate": "2020-10-09T03:19:14Z", "message": "Propagate full context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "335c6353b747c69630fdb6ef406210577f6f6359", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/335c6353b747c69630fdb6ef406210577f6f6359", "committedDate": "2020-10-09T03:38:45Z", "message": "spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NDI5NTg1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1350#pullrequestreview-505429585", "createdAt": "2020-10-09T07:36:35Z", "commit": {"oid": "335c6353b747c69630fdb6ef406210577f6f6359"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzozNjozNVrOHe-c0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzozNjozNVrOHe-c0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0MjUxMw==", "bodyText": "Reviewing this made me realize how nervous our propagation patterns make me. Sometimes we propagate the invocation context to remount for an async callback, sometimes the context of the span itself. Makes my head spin \ud83e\udd2f  Don't have a good answer but just food for thought.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1350#discussion_r502242513", "createdAt": "2020-10-09T07:36:35Z", "author": {"login": "anuraaga"}, "path": "instrumentation/netty/netty-3.8/src/main/java/io/opentelemetry/instrumentation/auto/netty/v3_8/NettyChannelInstrumentation.java", "diffHunk": "@@ -76,16 +77,17 @@ public NettyChannelInstrumentation() {\n   public static class ChannelConnectAdvice extends AbstractNettyAdvice {\n     @Advice.OnMethodEnter\n     public static void addConnectContinuation(@Advice.This Channel channel) {\n-      Span span = NettyHttpServerTracer.TRACER.getCurrentSpan();\n+      Context context = Context.current();\n+      Span span = getSpan(context);\n       if (span.getContext().isValid()) {\n         ContextStore<Channel, ChannelTraceContext> contextStore =\n             InstrumentationContext.get(Channel.class, ChannelTraceContext.class);\n \n         if (contextStore\n                 .putIfAbsent(channel, ChannelTraceContext.Factory.INSTANCE)\n-                .getConnectionContinuation()\n+                .getConnectionContext()\n             == null) {\n-          contextStore.get(channel).setConnectionContinuation(span);\n+          contextStore.get(channel).setConnectionContext(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "335c6353b747c69630fdb6ef406210577f6f6359"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NTI5NzAw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1350#pullrequestreview-505529700", "createdAt": "2020-10-09T09:56:34Z", "commit": {"oid": "335c6353b747c69630fdb6ef406210577f6f6359"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTo1NjozNFrOHfDKXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTo1NjozNFrOHfDKXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMxOTcwOQ==", "bodyText": "Care to make an issue?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1350#discussion_r502319709", "createdAt": "2020-10-09T09:56:34Z", "author": {"login": "iNikem"}, "path": "instrumentation/netty/netty-3.8/src/main/java/io/opentelemetry/instrumentation/auto/netty/v3_8/client/HttpClientRequestTracingHandler.java", "diffHunk": "@@ -38,13 +39,14 @@ public void writeRequested(ChannelHandlerContext ctx, MessageEvent msg) {\n     ChannelTraceContext channelTraceContext =\n         contextStore.putIfAbsent(ctx.getChannel(), ChannelTraceContext.Factory.INSTANCE);\n \n+    // TODO pass Context into Tracer.startSpan() and then don't need this scoping", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "335c6353b747c69630fdb6ef406210577f6f6359"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NTMxMTcw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1350#pullrequestreview-505531170", "createdAt": "2020-10-09T09:58:33Z", "commit": {"oid": "335c6353b747c69630fdb6ef406210577f6f6359"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2304, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}