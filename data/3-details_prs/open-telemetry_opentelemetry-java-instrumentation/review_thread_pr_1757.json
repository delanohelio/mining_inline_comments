{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NzY0MjU4", "number": 1757, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMToyNDoxN1rOE9BjVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOTowMTowMlrOE9IENQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDI0MDIzOnYy", "diffSide": "RIGHT", "path": "instrumentation/netty/netty-4.1/src/main/java/io/opentelemetry/javaagent/instrumentation/netty/v4_1/AttributeKeys.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMToyNDoxN1rOH5fk3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDo1MDowNlrOH5jH3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA0ODIyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  AttributeKey.valueOf(AttributeKeys.class.getName() + \".context\");\n          \n          \n            \n                  AttributeKey.valueOf(AttributeKeys.class, \"server-span\");", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1757#discussion_r530048223", "createdAt": "2020-11-25T01:24:17Z", "author": {"login": "anuraaga"}, "path": "instrumentation/netty/netty-4.1/src/main/java/io/opentelemetry/javaagent/instrumentation/netty/v4_1/AttributeKeys.java", "diffHunk": "@@ -8,51 +8,19 @@\n import io.netty.util.AttributeKey;\n import io.opentelemetry.api.trace.Span;\n import io.opentelemetry.context.Context;\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n \n public class AttributeKeys {\n-  private static final WeakMap<ClassLoader, ConcurrentMap<String, AttributeKey<?>>> map =\n-      WeakMap.Implementation.DEFAULT.get();\n-  private static final WeakMap.ValueSupplier<ClassLoader, ConcurrentMap<String, AttributeKey<?>>>\n-      mapSupplier =\n-          new WeakMap.ValueSupplier<ClassLoader, ConcurrentMap<String, AttributeKey<?>>>() {\n-            @Override\n-            public ConcurrentMap<String, AttributeKey<?>> get(ClassLoader ignore) {\n-              return new ConcurrentHashMap<>();\n-            }\n-          };\n \n   public static final AttributeKey<Context> CONNECT_CONTEXT_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \"connect.context\");\n+      AttributeKey.valueOf(AttributeKeys.class, \"connect.context\");\n \n   // this attribute key is also used by ratpack instrumentation\n   public static final AttributeKey<Context> SERVER_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \".context\");\n+      AttributeKey.valueOf(AttributeKeys.class.getName() + \".context\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760283ab708654257af12c103128d9f1f7df8eaa"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwNjMzMw==", "bodyText": "oops, fixed, and I like the naming suggestions", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1757#discussion_r530106333", "createdAt": "2020-11-25T04:50:06Z", "author": {"login": "trask"}, "path": "instrumentation/netty/netty-4.1/src/main/java/io/opentelemetry/javaagent/instrumentation/netty/v4_1/AttributeKeys.java", "diffHunk": "@@ -8,51 +8,19 @@\n import io.netty.util.AttributeKey;\n import io.opentelemetry.api.trace.Span;\n import io.opentelemetry.context.Context;\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n \n public class AttributeKeys {\n-  private static final WeakMap<ClassLoader, ConcurrentMap<String, AttributeKey<?>>> map =\n-      WeakMap.Implementation.DEFAULT.get();\n-  private static final WeakMap.ValueSupplier<ClassLoader, ConcurrentMap<String, AttributeKey<?>>>\n-      mapSupplier =\n-          new WeakMap.ValueSupplier<ClassLoader, ConcurrentMap<String, AttributeKey<?>>>() {\n-            @Override\n-            public ConcurrentMap<String, AttributeKey<?>> get(ClassLoader ignore) {\n-              return new ConcurrentHashMap<>();\n-            }\n-          };\n \n   public static final AttributeKey<Context> CONNECT_CONTEXT_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \"connect.context\");\n+      AttributeKey.valueOf(AttributeKeys.class, \"connect.context\");\n \n   // this attribute key is also used by ratpack instrumentation\n   public static final AttributeKey<Context> SERVER_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \".context\");\n+      AttributeKey.valueOf(AttributeKeys.class.getName() + \".context\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA0ODIyMw=="}, "originalCommit": {"oid": "760283ab708654257af12c103128d9f1f7df8eaa"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDI0MTE5OnYy", "diffSide": "RIGHT", "path": "instrumentation/netty/netty-4.1/src/main/java/io/opentelemetry/javaagent/instrumentation/netty/v4_1/AttributeKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMToyNDo0MFrOH5flVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMToyNDo0MFrOH5flVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA0ODM0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  AttributeKey.valueOf(AttributeKeys.class.getName() + \".span\");\n          \n          \n            \n                  AttributeKey.valueOf(AttributeKeys.class, \"client-span\");", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1757#discussion_r530048341", "createdAt": "2020-11-25T01:24:40Z", "author": {"login": "anuraaga"}, "path": "instrumentation/netty/netty-4.1/src/main/java/io/opentelemetry/javaagent/instrumentation/netty/v4_1/AttributeKeys.java", "diffHunk": "@@ -8,51 +8,19 @@\n import io.netty.util.AttributeKey;\n import io.opentelemetry.api.trace.Span;\n import io.opentelemetry.context.Context;\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n \n public class AttributeKeys {\n-  private static final WeakMap<ClassLoader, ConcurrentMap<String, AttributeKey<?>>> map =\n-      WeakMap.Implementation.DEFAULT.get();\n-  private static final WeakMap.ValueSupplier<ClassLoader, ConcurrentMap<String, AttributeKey<?>>>\n-      mapSupplier =\n-          new WeakMap.ValueSupplier<ClassLoader, ConcurrentMap<String, AttributeKey<?>>>() {\n-            @Override\n-            public ConcurrentMap<String, AttributeKey<?>> get(ClassLoader ignore) {\n-              return new ConcurrentHashMap<>();\n-            }\n-          };\n \n   public static final AttributeKey<Context> CONNECT_CONTEXT_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \"connect.context\");\n+      AttributeKey.valueOf(AttributeKeys.class, \"connect.context\");\n \n   // this attribute key is also used by ratpack instrumentation\n   public static final AttributeKey<Context> SERVER_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \".context\");\n+      AttributeKey.valueOf(AttributeKeys.class.getName() + \".context\");\n \n   public static final AttributeKey<Span> CLIENT_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \".span\");\n+      AttributeKey.valueOf(AttributeKeys.class.getName() + \".span\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760283ab708654257af12c103128d9f1f7df8eaa"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDI0MTY5OnYy", "diffSide": "RIGHT", "path": "instrumentation/netty/netty-4.1/src/main/java/io/opentelemetry/javaagent/instrumentation/netty/v4_1/AttributeKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMToyNDo1OVrOH5flow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMToyNDo1OVrOH5flow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA0ODQxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  AttributeKey.valueOf(AttributeKeys.class.getName() + \".parent\");\n          \n          \n            \n                  AttributeKey.valueOf(AttributeKeys.class, \"client-parent-span\");", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1757#discussion_r530048419", "createdAt": "2020-11-25T01:24:59Z", "author": {"login": "anuraaga"}, "path": "instrumentation/netty/netty-4.1/src/main/java/io/opentelemetry/javaagent/instrumentation/netty/v4_1/AttributeKeys.java", "diffHunk": "@@ -8,51 +8,19 @@\n import io.netty.util.AttributeKey;\n import io.opentelemetry.api.trace.Span;\n import io.opentelemetry.context.Context;\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n \n public class AttributeKeys {\n-  private static final WeakMap<ClassLoader, ConcurrentMap<String, AttributeKey<?>>> map =\n-      WeakMap.Implementation.DEFAULT.get();\n-  private static final WeakMap.ValueSupplier<ClassLoader, ConcurrentMap<String, AttributeKey<?>>>\n-      mapSupplier =\n-          new WeakMap.ValueSupplier<ClassLoader, ConcurrentMap<String, AttributeKey<?>>>() {\n-            @Override\n-            public ConcurrentMap<String, AttributeKey<?>> get(ClassLoader ignore) {\n-              return new ConcurrentHashMap<>();\n-            }\n-          };\n \n   public static final AttributeKey<Context> CONNECT_CONTEXT_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \"connect.context\");\n+      AttributeKey.valueOf(AttributeKeys.class, \"connect.context\");\n \n   // this attribute key is also used by ratpack instrumentation\n   public static final AttributeKey<Context> SERVER_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \".context\");\n+      AttributeKey.valueOf(AttributeKeys.class.getName() + \".context\");\n \n   public static final AttributeKey<Span> CLIENT_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \".span\");\n+      AttributeKey.valueOf(AttributeKeys.class.getName() + \".span\");\n \n   public static final AttributeKey<Context> CLIENT_PARENT_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \".parent\");\n-\n-  /**\n-   * Generate an attribute key or reuse the one existing in the global app map. This implementation\n-   * creates attributes only once even if the current class is loaded by several class loaders and\n-   * prevents an issue with Apache Atlas project were this class loaded by multiple class loaders,\n-   * while the Attribute class is loaded by a third class loader and used internally for the\n-   * cassandra driver.\n-   */\n-  private static <T> AttributeKey<T> attributeKey(String key) {\n-    ConcurrentMap<String, AttributeKey<?>> classLoaderMap =\n-        map.computeIfAbsent(AttributeKey.class.getClassLoader(), mapSupplier);\n-    if (classLoaderMap.containsKey(key)) {\n-      return (AttributeKey<T>) classLoaderMap.get(key);\n-    }\n-\n-    AttributeKey<T> value = AttributeKey.valueOf(key);\n-    classLoaderMap.put(key, value);\n-    return value;\n-  }\n+      AttributeKey.valueOf(AttributeKeys.class.getName() + \".parent\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760283ab708654257af12c103128d9f1f7df8eaa"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTMwNzQxOnYy", "diffSide": "RIGHT", "path": "instrumentation/netty/netty-4.0/src/main/java/io/opentelemetry/javaagent/instrumentation/netty/v4_0/AttributeKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOTowMTowMlrOH5pPhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOTowMTowMlrOH5pPhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIwNjU5OQ==", "bodyText": "Typo?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  attributeKey(AttributeKeys.class.getName() + \".connect0context\");\n          \n          \n            \n                  attributeKey(AttributeKeys.class.getName() + \".connect-context\");", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1757#discussion_r530206599", "createdAt": "2020-11-25T09:01:02Z", "author": {"login": "mateuszrzeszutek"}, "path": "instrumentation/netty/netty-4.0/src/main/java/io/opentelemetry/javaagent/instrumentation/netty/v4_0/AttributeKeys.java", "diffHunk": "@@ -24,17 +24,18 @@\n             }\n           };\n \n-  public static final AttributeKey<Context> CONNECT_CONTEXT_ATTRIBUTE_KEY =\n-      attributeKey(AttributeKeys.class.getName() + \".connect.context\");\n+  public static final AttributeKey<Context> CONNECT_CONTEXT =\n+      attributeKey(AttributeKeys.class.getName() + \".connect0context\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0984d4bae6aad2a78fef1da95affba83983e423"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4442, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}