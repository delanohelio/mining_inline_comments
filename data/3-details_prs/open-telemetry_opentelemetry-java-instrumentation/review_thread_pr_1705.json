{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0Mzg3ODcw", "number": 1705, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNToxNDowMlrOE7Xjaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNTo1Nzo0M1rOE7Yudg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjg3MzM5OnYy", "diffSide": "RIGHT", "path": "instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNToxNDowMlrOH2-EMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNTo0NDo0MlrOH2_dJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQwMjAzNA==", "bodyText": "Should we create constants for all the labels?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705#discussion_r527402034", "createdAt": "2020-11-20T05:14:02Z", "author": {"login": "anuraaga"}, "path": "instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java", "diffHunk": "@@ -32,15 +31,15 @@ public static void registerObservers() {\n     meter\n         .longUpDownSumObserverBuilder(\"system.memory.usage\")\n         .setDescription(\"System memory usage\")\n-        .setUnit(\"bytes\")\n+        .setUnit(\"By\")\n         .build()\n         .setCallback(\n             new Callback<LongResult>() {\n               @Override\n               public void update(LongResult r) {\n                 GlobalMemory mem = hal.getMemory();\n-                r.observe(mem.getTotal() - mem.getAvailable(), Labels.of(TYPE_LABEL_KEY, \"used\"));\n-                r.observe(mem.getAvailable(), Labels.of(TYPE_LABEL_KEY, \"free\"));\n+                r.observe(mem.getTotal() - mem.getAvailable(), Labels.of(\"state\", \"used\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cb12a39d9b46dba43ca98547beaaa0ab8e123b7"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQyNDgwNg==", "bodyText": "updated for label keys", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705#discussion_r527424806", "createdAt": "2020-11-20T05:44:42Z", "author": {"login": "malafeev"}, "path": "instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java", "diffHunk": "@@ -32,15 +31,15 @@ public static void registerObservers() {\n     meter\n         .longUpDownSumObserverBuilder(\"system.memory.usage\")\n         .setDescription(\"System memory usage\")\n-        .setUnit(\"bytes\")\n+        .setUnit(\"By\")\n         .build()\n         .setCallback(\n             new Callback<LongResult>() {\n               @Override\n               public void update(LongResult r) {\n                 GlobalMemory mem = hal.getMemory();\n-                r.observe(mem.getTotal() - mem.getAvailable(), Labels.of(TYPE_LABEL_KEY, \"used\"));\n-                r.observe(mem.getAvailable(), Labels.of(TYPE_LABEL_KEY, \"free\"));\n+                r.observe(mem.getTotal() - mem.getAvailable(), Labels.of(\"state\", \"used\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQwMjAzNA=="}, "originalCommit": {"oid": "4cb12a39d9b46dba43ca98547beaaa0ab8e123b7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzA2NTUwOnYy", "diffSide": "RIGHT", "path": "instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNTo1Nzo0M1rOH3AMDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNjowNDoxMFrOH3AjVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQzNjgxNQ==", "bodyText": "Shouldn't we do something like private static final Labels STATE_USED = Labels.of(\"state\", \"used\")? That way we don't have to create a labels object every time we record a value (at least I think that's what's happening right now)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705#discussion_r527436815", "createdAt": "2020-11-20T05:57:43Z", "author": {"login": "anuraaga"}, "path": "instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java", "diffHunk": "@@ -19,7 +19,9 @@\n \n /** System Metrics Utility. */\n public class SystemMetrics {\n-  private static final String TYPE_LABEL_KEY = \"type\";\n+  private static final String DEVICE_LABEL_KEY = \"device\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12810974a6e79676961ca01b323950c5bcf77995"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ0MTA3Mw==", "bodyText": "but it will not work for Labels.of(DEVICE_LABEL_KEY, device, DIRECTION_LABEL_KEY, \"transmit\")", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705#discussion_r527441073", "createdAt": "2020-11-20T06:02:14Z", "author": {"login": "malafeev"}, "path": "instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java", "diffHunk": "@@ -19,7 +19,9 @@\n \n /** System Metrics Utility. */\n public class SystemMetrics {\n-  private static final String TYPE_LABEL_KEY = \"type\";\n+  private static final String DEVICE_LABEL_KEY = \"device\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQzNjgxNQ=="}, "originalCommit": {"oid": "12810974a6e79676961ca01b323950c5bcf77995"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ0Mjc3NQ==", "bodyText": "updated for state labels", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705#discussion_r527442775", "createdAt": "2020-11-20T06:04:10Z", "author": {"login": "malafeev"}, "path": "instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java", "diffHunk": "@@ -19,7 +19,9 @@\n \n /** System Metrics Utility. */\n public class SystemMetrics {\n-  private static final String TYPE_LABEL_KEY = \"type\";\n+  private static final String DEVICE_LABEL_KEY = \"device\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQzNjgxNQ=="}, "originalCommit": {"oid": "12810974a6e79676961ca01b323950c5bcf77995"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4634, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}