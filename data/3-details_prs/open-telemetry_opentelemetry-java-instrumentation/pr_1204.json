{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MTQ2MTEx", "number": 1204, "title": "Force flush after finishing lambda function.", "bodyText": "Currently, there is no way to export traces reliably from a lambda function short of flushing before returning because the VM freezes as soon as the function returns. For example, if there is only a single request made, that trace will basically never be visible, until another request comes in to unfreeze the VM, possibly hours later. This makes tracing mostly impossible without flushing. If I wrk against a lambda endpoint sending constant traffic, I see traces reliably, but otherwise, the gRPC export just never gets a chance to finish since it only has the function time slice to be able to make any progress.\nHowever, for VMs that don't freeze much because they serve high traffic consistently, this flushing is wasteful. @wangzlei will be working on making this flush smarter, probably keeping track of invocation times and disabling autoflush when we notice there is not much freezing happening. Initially I'd like to add this simple force flush so OTel is actually usable with lambda, even if it adds significant overhead per invocation.", "createdAt": "2020-09-15T08:59:38Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1204", "merged": true, "mergeCommit": {"oid": "9635a5e84f4a44731802d2f2d02824839010a04d"}, "closed": true, "closedAt": "2020-09-17T05:26:25Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJAu5vgH2gAyNDg3MTQ2MTExOjRmZWQzMDhkYjM5NDEyZTJiYTZlYjZiMGUxOWE5NjlkOGM3MmEwYmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJhMdnAFqTQ4OTkzOTMzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4fed308db39412e2ba6eb6b0e19a969d8c72a0be", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/4fed308db39412e2ba6eb6b0e19a969d8c72a0be", "committedDate": "2020-09-15T05:13:47Z", "message": "Force span flush after lambda invocation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a8586654cd916502191d625cd7067c99cdb2ae8", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/4a8586654cd916502191d625cd7067c99cdb2ae8", "committedDate": "2020-09-15T08:49:50Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-auto-instr-java into lambda-forceflush"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ecd8794219da0a0f6bfb24e196a50f2f59ef530", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/5ecd8794219da0a0f6bfb24e196a50f2f59ef530", "committedDate": "2020-09-15T08:53:52Z", "message": "Force flush after finishing lambda function."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1651cb7e5520dea180cf305c32a5010e06ca8669", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1651cb7e5520dea180cf305c32a5010e06ca8669", "committedDate": "2020-09-15T09:19:57Z", "message": "bleh"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8213e1f9f212aa11e2a6d3447cc693990025988f", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8213e1f9f212aa11e2a6d3447cc693990025988f", "committedDate": "2020-09-15T09:20:23Z", "message": "Better revert"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NjA1NjE0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1204#pullrequestreview-488605614", "createdAt": "2020-09-15T11:57:13Z", "commit": {"oid": "8213e1f9f212aa11e2a6d3447cc693990025988f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MjE2NDYz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1204#pullrequestreview-489216463", "createdAt": "2020-09-16T01:43:43Z", "commit": {"oid": "8213e1f9f212aa11e2a6d3447cc693990025988f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTo0Mzo0M1rOHSdAiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTo0Mzo0M1rOHSdAiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExMTY4OA==", "bodyText": "The OpenTelemetry SDK is in the agent class loader, so won't be accessible directly from auto-instrumentation.\nUnless we want to shade and put it in the bootstrap class loader.\nI wonder if we will have other use cases like this.\nFor now(?), maybe add a forceFlush() method in auto-api (soon to be javaagent-instrumentation-api), and register the underlying implementation during agent startup (the implementation needs to live in the agent class loader so it can call the SDK directly).", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1204#discussion_r489111688", "createdAt": "2020-09-16T01:43:43Z", "author": {"login": "trask"}, "path": "instrumentation/aws-lambda-1.0/library/src/main/java/io/opentelemetry/instrumentation/awslambda/v1_0/AwsLambdaTracer.java", "diffHunk": "@@ -53,4 +55,8 @@ public Scope startScope(Span span) {\n   protected String getInstrumentationName() {\n     return \"io.opentelemetry.aws-lambda-1.0\";\n   }\n+\n+  public void forceFlush() {\n+    OpenTelemetrySdk.getTracerProvider().forceFlush().join(1, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8213e1f9f212aa11e2a6d3447cc693990025988f"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5499b2efec10b55ce06bb3258fbd565808a9829", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a5499b2efec10b55ce06bb3258fbd565808a9829", "committedDate": "2020-09-16T04:55:13Z", "message": "Accessor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "824bfcd46b19bd9c014915811efb9a22e2b967f7", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/824bfcd46b19bd9c014915811efb9a22e2b967f7", "committedDate": "2020-09-16T04:55:16Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-auto-instr-java into lambda-forceflush"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecb0d79fa653c004152b98336492dba33cc9d17b", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ecb0d79fa653c004152b98336492dba33cc9d17b", "committedDate": "2020-09-16T05:59:13Z", "message": "OpenTelemetrySdkAccess"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5705f6f45fe7d6fe9112b21e43b16f974da38bd", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f5705f6f45fe7d6fe9112b21e43b16f974da38bd", "committedDate": "2020-09-16T05:58:34Z", "message": "OpenTelemetrySdkAccess"}, "afterCommit": {"oid": "ecb0d79fa653c004152b98336492dba33cc9d17b", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ecb0d79fa653c004152b98336492dba33cc9d17b", "committedDate": "2020-09-16T05:59:13Z", "message": "OpenTelemetrySdkAccess"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5OTM5MzM1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1204#pullrequestreview-489939335", "createdAt": "2020-09-16T19:03:02Z", "commit": {"oid": "ecb0d79fa653c004152b98336492dba33cc9d17b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2604, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}