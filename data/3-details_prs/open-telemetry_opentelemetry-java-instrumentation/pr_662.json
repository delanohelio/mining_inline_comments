{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTkxMDc0", "number": 662, "title": "Update to otel-java 0.6.0", "bodyText": "", "createdAt": "2020-07-10T18:45:17Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/662", "merged": true, "mergeCommit": {"oid": "d96a771dd023ea3324d600c59fccdda6821c61c5"}, "closed": true, "closedAt": "2020-07-11T06:10:29Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuDSIVgH2gAyNDQ3NTkxMDc0OmQ3ZGQyNTljMTA3ODljNjE0N2JmNTIwODA2N2FiYzc3YTg1M2Y3Y2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczviENAFqTQ0Njc3MzQ5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d7dd259c10789c6147bf5208067abc77a853f7cb", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d7dd259c10789c6147bf5208067abc77a853f7cb", "committedDate": "2020-06-23T10:56:07Z", "message": "Working against otel-java 0.6.0-SNAPSHOT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f50dce4deb8c9af11938e81ad4c2e1e1f12f44fd", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f50dce4deb8c9af11938e81ad4c2e1e1f12f44fd", "committedDate": "2020-06-23T11:39:24Z", "message": "Muzzle fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ad48e5e79dbcddd363c8f5462ba8b083152f9a9", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/2ad48e5e79dbcddd363c8f5462ba8b083152f9a9", "committedDate": "2020-06-24T13:45:03Z", "message": "Better comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05f248bf0f6ae87b51bd4cdab2181e1b1ee60801", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/05f248bf0f6ae87b51bd4cdab2181e1b1ee60801", "committedDate": "2020-07-06T12:23:45Z", "message": "Merge remote-tracking branch 'upstream/master' into depends-on-otel-java-snapshot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70b71c10a950da9fd3dea4317143b05ee66f5444", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/70b71c10a950da9fd3dea4317143b05ee66f5444", "committedDate": "2020-07-10T11:22:43Z", "message": "Merge remote-tracking branch 'upstream/master' into depends-on-otel-java-snapshot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f15b68c3f0f5375b1a2f4046598cb3e9824f127", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3f15b68c3f0f5375b1a2f4046598cb3e9824f127", "committedDate": "2020-07-10T13:57:10Z", "message": "Now works with otel-java 0.6.0"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NjM2MzQ5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/662#pullrequestreview-446636349", "createdAt": "2020-07-10T19:00:31Z", "commit": {"oid": "3f15b68c3f0f5375b1a2f4046598cb3e9824f127"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTowMDozMVrOGwCiDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTowMDozMVrOGwCiDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyNjMxOA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/662#discussion_r453026318", "createdAt": "2020-07-10T19:00:31Z", "author": {"login": "trask"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerTracer.java", "diffHunk": "@@ -226,8 +226,11 @@ protected Throwable unwrapThrowable(Throwable throwable) {\n   }\n \n   private <C> SpanContext extract(final C carrier, final HttpTextFormat.Getter<C> getter) {\n+    // Using Context.ROOT here may be quite unexpected, but the reason is simple.\n+    // We want either span context extracted from the carrier or invalid one.\n+    // We DO NOT want any span context potentially lingering in the current context.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f15b68c3f0f5375b1a2f4046598cb3e9824f127"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a05d3c2819e0dd4342b06c1f0c6d51fd8814ece1", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a05d3c2819e0dd4342b06c1f0c6d51fd8814ece1", "committedDate": "2020-07-10T19:25:32Z", "message": "Fix muzzle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NjUzMjIx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/662#pullrequestreview-446653221", "createdAt": "2020-07-10T19:31:06Z", "commit": {"oid": "a05d3c2819e0dd4342b06c1f0c6d51fd8814ece1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTozMTowNlrOGwDWIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTozMTowNlrOGwDWIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzOTY0OA==", "bodyText": "Not directly relevant to this PR, but why do we have one of these here, when we have one in the main repo?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/662#discussion_r453039648", "createdAt": "2020-07-10T19:31:06Z", "author": {"login": "jkwatson"}, "path": "auto-exporters/logging/src/main/java/io/opentelemetry/auto/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -17,10 +17,10 @@\n package io.opentelemetry.auto.exporters.logging;\n \n import io.opentelemetry.common.AttributeValue;\n+import io.opentelemetry.common.ReadableKeyValuePairs.KeyValueConsumer;\n import io.opentelemetry.sdk.trace.data.SpanData;\n import io.opentelemetry.sdk.trace.export.SpanExporter;\n import java.util.Collection;\n-import java.util.Map;\n \n public class LoggingExporter implements SpanExporter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05d3c2819e0dd4342b06c1f0c6d51fd8814ece1"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NjU0MzU1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/662#pullrequestreview-446654355", "createdAt": "2020-07-10T19:33:11Z", "commit": {"oid": "a05d3c2819e0dd4342b06c1f0c6d51fd8814ece1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTozMzoxMVrOGwDZnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTozMzoxMVrOGwDZnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0MDU0MA==", "bodyText": "import?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/662#discussion_r453040540", "createdAt": "2020-07-10T19:33:11Z", "author": {"login": "jkwatson"}, "path": "instrumentation/opentelemetry-api-beta/src/test/groovy/MeterTest.groovy", "diffHunk": "@@ -96,34 +92,34 @@ class MeterTest extends AgentTestRunner {\n     def instrument = meter.\"$builderMethod\"(\"test\")\n       .setDescription(\"d\")\n       .setUnit(\"u\")\n-      .setConstantLabels([\"m\": \"n\", \"o\": \"p\"])\n+      .setConstantLabels(Labels.of(\"m\", \"n\", \"o\", \"p\"))\n       .build()\n     if (bind) {\n-      instrument = instrument.bind()\n+      instrument = instrument.bind(Labels.empty())\n     }\n     if (bind) {\n       instrument.record(value1)\n       instrument.record(value2)\n     } else {\n-      instrument.record(value1, \"q\", \"r\")\n-      instrument.record(value2, \"q\", \"r\")\n+      instrument.record(value1, Labels.of(\"q\", \"r\"))\n+      instrument.record(value2, Labels.of(\"q\", \"r\"))\n     }\n \n     then:\n-    def metricData = metricData(instrumentationName, \"test\")\n+    def metricData = findMetric(OpenTelemetrySdk.getMeterProvider().getMetricProducer().getAllMetrics(), instrumentationName, \"test\")\n     metricData != null\n     metricData.descriptor.description == \"d\"\n     metricData.descriptor.unit == \"u\"\n     metricData.descriptor.type == SUMMARY\n-    metricData.descriptor.constantLabels == [\"m\": \"n\", \"o\": \"p\"]\n+    metricData.descriptor.constantLabels == io.opentelemetry.common.Labels.of(\"m\", \"n\", \"o\", \"p\")\n     metricData.instrumentationLibraryInfo.name == instrumentationName\n     metricData.instrumentationLibraryInfo.version == \"1.2.3\"\n     metricData.points.size() == 1\n     def point = metricData.points.iterator().next()\n     if (bind) {\n-      point.labels == [\"w\": \"x\", \"y\": \"z\"]\n+      point.labels == io.opentelemetry.common.Labels.of(\"w\", \"x\", \"y\", \"z\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05d3c2819e0dd4342b06c1f0c6d51fd8814ece1"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzczNDk5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/662#pullrequestreview-446773499", "createdAt": "2020-07-11T03:18:58Z", "commit": {"oid": "a05d3c2819e0dd4342b06c1f0c6d51fd8814ece1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3089, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}