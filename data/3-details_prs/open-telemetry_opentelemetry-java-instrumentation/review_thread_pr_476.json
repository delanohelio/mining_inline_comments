{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MjUwMDY0", "number": 476, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjowOTo0MVrOEDA67w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMjozMFrOEDA-sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTk2MjcxOnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedBatchRecorder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjowOTo0MVrOGf0oyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjowOTo0MVrOGf0oyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyMTQ1MA==", "bodyText": "just don't want to forget (and in case someone looks at this code before we address)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return null;\n          \n          \n            \n                // TODO https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/463\n          \n          \n            \n                return null;", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/476#discussion_r436021450", "createdAt": "2020-06-05T16:09:41Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedBatchRecorder.java", "diffHunk": "@@ -71,6 +75,16 @@ public BatchRecorder put(final DoubleCounter counter, final double value) {\n     return this;\n   }\n \n+  @Override\n+  public BatchRecorder put(LongUpDownCounter longUpDownCounter, long l) {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a973c14cb428e2feab74900d8752885d070412ab"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTk2MzI5OnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedBatchRecorder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjowOTo1MlrOGf0pKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjowOTo1MlrOGf0pKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyMTU0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return null;\n          \n          \n            \n                // TODO https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/463\n          \n          \n            \n                return null;", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/476#discussion_r436021545", "createdAt": "2020-06-05T16:09:52Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedBatchRecorder.java", "diffHunk": "@@ -71,6 +75,16 @@ public BatchRecorder put(final DoubleCounter counter, final double value) {\n     return this;\n   }\n \n+  @Override\n+  public BatchRecorder put(LongUpDownCounter longUpDownCounter, long l) {\n+    return null;\n+  }\n+\n+  @Override\n+  public BatchRecorder put(DoubleUpDownCounter doubleUpDownCounter, double v) {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a973c14cb428e2feab74900d8752885d070412ab"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTk2Nzc2OnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMToxMFrOGf0sBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMToxMFrOGf0sBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyMjI3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return null;\n          \n          \n            \n                // TODO https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/463\n          \n          \n            \n                return null;", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/476#discussion_r436022278", "createdAt": "2020-06-05T16:11:10Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "diffHunk": "@@ -43,23 +49,53 @@\n   }\n \n   @Override\n-  public DoubleMeasure.Builder doubleMeasureBuilder(final String name) {\n-    return new UnshadedDoubleMeasure.Builder(shadedMeter.doubleMeasureBuilder(name));\n+  public DoubleUpDownCounter.Builder doubleUpDownCounterBuilder(String s) {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a973c14cb428e2feab74900d8752885d070412ab"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTk2ODQ1OnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMToxOVrOGf0sbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMToxOVrOGf0sbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyMjM4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return null;\n          \n          \n            \n                // TODO https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/463\n          \n          \n            \n                return null;", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/476#discussion_r436022381", "createdAt": "2020-06-05T16:11:19Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "diffHunk": "@@ -43,23 +49,53 @@\n   }\n \n   @Override\n-  public DoubleMeasure.Builder doubleMeasureBuilder(final String name) {\n-    return new UnshadedDoubleMeasure.Builder(shadedMeter.doubleMeasureBuilder(name));\n+  public DoubleUpDownCounter.Builder doubleUpDownCounterBuilder(String s) {\n+    return null;\n   }\n \n   @Override\n-  public LongMeasure.Builder longMeasureBuilder(final String name) {\n-    return new UnshadedLongMeasure.Builder(shadedMeter.longMeasureBuilder(name));\n+  public LongUpDownCounter.Builder longUpDownCounterBuilder(String s) {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a973c14cb428e2feab74900d8752885d070412ab"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTk3MDA4OnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMTo0NlrOGf0tdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMTo0NlrOGf0tdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyMjY0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return null;\n          \n          \n            \n                // TODO https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/463\n          \n          \n            \n                return null;", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/476#discussion_r436022646", "createdAt": "2020-06-05T16:11:46Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "diffHunk": "@@ -43,23 +49,53 @@\n   }\n \n   @Override\n-  public DoubleMeasure.Builder doubleMeasureBuilder(final String name) {\n-    return new UnshadedDoubleMeasure.Builder(shadedMeter.doubleMeasureBuilder(name));\n+  public DoubleUpDownCounter.Builder doubleUpDownCounterBuilder(String s) {\n+    return null;\n   }\n \n   @Override\n-  public LongMeasure.Builder longMeasureBuilder(final String name) {\n-    return new UnshadedLongMeasure.Builder(shadedMeter.longMeasureBuilder(name));\n+  public LongUpDownCounter.Builder longUpDownCounterBuilder(String s) {\n+    return null;\n   }\n \n   @Override\n-  public DoubleObserver.Builder doubleObserverBuilder(final String name) {\n-    return new UnshadedDoubleObserver.Builder(shadedMeter.doubleObserverBuilder(name));\n+  public DoubleValueRecorder.Builder doubleValueRecorderBuilder(final String name) {\n+    return new UnshadedDoubleValueRecorder.Builder(shadedMeter.doubleValueRecorderBuilder(name));\n   }\n \n   @Override\n-  public LongObserver.Builder longObserverBuilder(final String name) {\n-    return new UnshadedLongObserver.Builder(shadedMeter.longObserverBuilder(name));\n+  public LongValueRecorder.Builder longValueRecorderBuilder(final String name) {\n+    return new UnshadedLongValueRecorder.Builder(shadedMeter.longValueRecorderBuilder(name));\n+  }\n+\n+  @Override\n+  public DoubleSumObserver.Builder doubleSumObserverBuilder(String s) {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a973c14cb428e2feab74900d8752885d070412ab"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTk3MDUxOnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMTo1NFrOGf0tzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMTo1NFrOGf0tzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyMjczMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return null;\n          \n          \n            \n                // TODO https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/463\n          \n          \n            \n                return null;", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/476#discussion_r436022732", "createdAt": "2020-06-05T16:11:54Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "diffHunk": "@@ -43,23 +49,53 @@\n   }\n \n   @Override\n-  public DoubleMeasure.Builder doubleMeasureBuilder(final String name) {\n-    return new UnshadedDoubleMeasure.Builder(shadedMeter.doubleMeasureBuilder(name));\n+  public DoubleUpDownCounter.Builder doubleUpDownCounterBuilder(String s) {\n+    return null;\n   }\n \n   @Override\n-  public LongMeasure.Builder longMeasureBuilder(final String name) {\n-    return new UnshadedLongMeasure.Builder(shadedMeter.longMeasureBuilder(name));\n+  public LongUpDownCounter.Builder longUpDownCounterBuilder(String s) {\n+    return null;\n   }\n \n   @Override\n-  public DoubleObserver.Builder doubleObserverBuilder(final String name) {\n-    return new UnshadedDoubleObserver.Builder(shadedMeter.doubleObserverBuilder(name));\n+  public DoubleValueRecorder.Builder doubleValueRecorderBuilder(final String name) {\n+    return new UnshadedDoubleValueRecorder.Builder(shadedMeter.doubleValueRecorderBuilder(name));\n   }\n \n   @Override\n-  public LongObserver.Builder longObserverBuilder(final String name) {\n-    return new UnshadedLongObserver.Builder(shadedMeter.longObserverBuilder(name));\n+  public LongValueRecorder.Builder longValueRecorderBuilder(final String name) {\n+    return new UnshadedLongValueRecorder.Builder(shadedMeter.longValueRecorderBuilder(name));\n+  }\n+\n+  @Override\n+  public DoubleSumObserver.Builder doubleSumObserverBuilder(String s) {\n+    return null;\n+  }\n+\n+  @Override\n+  public LongSumObserver.Builder longSumObserverBuilder(String s) {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a973c14cb428e2feab74900d8752885d070412ab"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTk3MDkwOnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMTo1OVrOGf0uBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMTo1OVrOGf0uBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyMjc4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return null;\n          \n          \n            \n                // TODO https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/463\n          \n          \n            \n                return null;", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/476#discussion_r436022789", "createdAt": "2020-06-05T16:11:59Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "diffHunk": "@@ -43,23 +49,53 @@\n   }\n \n   @Override\n-  public DoubleMeasure.Builder doubleMeasureBuilder(final String name) {\n-    return new UnshadedDoubleMeasure.Builder(shadedMeter.doubleMeasureBuilder(name));\n+  public DoubleUpDownCounter.Builder doubleUpDownCounterBuilder(String s) {\n+    return null;\n   }\n \n   @Override\n-  public LongMeasure.Builder longMeasureBuilder(final String name) {\n-    return new UnshadedLongMeasure.Builder(shadedMeter.longMeasureBuilder(name));\n+  public LongUpDownCounter.Builder longUpDownCounterBuilder(String s) {\n+    return null;\n   }\n \n   @Override\n-  public DoubleObserver.Builder doubleObserverBuilder(final String name) {\n-    return new UnshadedDoubleObserver.Builder(shadedMeter.doubleObserverBuilder(name));\n+  public DoubleValueRecorder.Builder doubleValueRecorderBuilder(final String name) {\n+    return new UnshadedDoubleValueRecorder.Builder(shadedMeter.doubleValueRecorderBuilder(name));\n   }\n \n   @Override\n-  public LongObserver.Builder longObserverBuilder(final String name) {\n-    return new UnshadedLongObserver.Builder(shadedMeter.longObserverBuilder(name));\n+  public LongValueRecorder.Builder longValueRecorderBuilder(final String name) {\n+    return new UnshadedLongValueRecorder.Builder(shadedMeter.longValueRecorderBuilder(name));\n+  }\n+\n+  @Override\n+  public DoubleSumObserver.Builder doubleSumObserverBuilder(String s) {\n+    return null;\n+  }\n+\n+  @Override\n+  public LongSumObserver.Builder longSumObserverBuilder(String s) {\n+    return null;\n+  }\n+\n+  @Override\n+  public DoubleUpDownSumObserver.Builder doubleUpDownSumObserverBuilder(String s) {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a973c14cb428e2feab74900d8752885d070412ab"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTk3MTI3OnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMjowN1rOGf0uRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMjowN1rOGf0uRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyMjg1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return null;\n          \n          \n            \n                // TODO https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/463\n          \n          \n            \n                return null;", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/476#discussion_r436022854", "createdAt": "2020-06-05T16:12:07Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-0.4/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/metrics/UnshadedMeter.java", "diffHunk": "@@ -43,23 +49,53 @@\n   }\n \n   @Override\n-  public DoubleMeasure.Builder doubleMeasureBuilder(final String name) {\n-    return new UnshadedDoubleMeasure.Builder(shadedMeter.doubleMeasureBuilder(name));\n+  public DoubleUpDownCounter.Builder doubleUpDownCounterBuilder(String s) {\n+    return null;\n   }\n \n   @Override\n-  public LongMeasure.Builder longMeasureBuilder(final String name) {\n-    return new UnshadedLongMeasure.Builder(shadedMeter.longMeasureBuilder(name));\n+  public LongUpDownCounter.Builder longUpDownCounterBuilder(String s) {\n+    return null;\n   }\n \n   @Override\n-  public DoubleObserver.Builder doubleObserverBuilder(final String name) {\n-    return new UnshadedDoubleObserver.Builder(shadedMeter.doubleObserverBuilder(name));\n+  public DoubleValueRecorder.Builder doubleValueRecorderBuilder(final String name) {\n+    return new UnshadedDoubleValueRecorder.Builder(shadedMeter.doubleValueRecorderBuilder(name));\n   }\n \n   @Override\n-  public LongObserver.Builder longObserverBuilder(final String name) {\n-    return new UnshadedLongObserver.Builder(shadedMeter.longObserverBuilder(name));\n+  public LongValueRecorder.Builder longValueRecorderBuilder(final String name) {\n+    return new UnshadedLongValueRecorder.Builder(shadedMeter.longValueRecorderBuilder(name));\n+  }\n+\n+  @Override\n+  public DoubleSumObserver.Builder doubleSumObserverBuilder(String s) {\n+    return null;\n+  }\n+\n+  @Override\n+  public LongSumObserver.Builder longSumObserverBuilder(String s) {\n+    return null;\n+  }\n+\n+  @Override\n+  public DoubleUpDownSumObserver.Builder doubleUpDownSumObserverBuilder(String s) {\n+    return null;\n+  }\n+\n+  @Override\n+  public LongUpDownSumObserver.Builder longUpDownSumObserverBuilder(String s) {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a973c14cb428e2feab74900d8752885d070412ab"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTk3MjM1OnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-0.4/src/test/groovy/MeterTest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMjozMFrOGf0u_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoxMjozMFrOGf0u_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyMzAzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              //Add support for up-down metrics from otel-java 0.5.0\n          \n          \n            \n              // TODO Add support for up-down metrics from otel-java 0.5.0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/476#discussion_r436023039", "createdAt": "2020-06-05T16:12:30Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-0.4/src/test/groovy/MeterTest.groovy", "diffHunk": "@@ -28,6 +29,7 @@ import static io.opentelemetry.sdk.metrics.data.MetricData.Descriptor.Type.SUMMA\n \n class MeterTest extends AgentTestRunner {\n \n+  //Add support for up-down metrics from otel-java 0.5.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a973c14cb428e2feab74900d8752885d070412ab"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 479, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}