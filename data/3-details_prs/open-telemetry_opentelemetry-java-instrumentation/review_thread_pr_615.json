{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxODI3Mjc2", "number": 615, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzoxMzo1MVrOEJ9oSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoyNTowN1rOEKVu5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODgyMzc2OnYy", "diffSide": "RIGHT", "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzoxMzo1MVrOGqu07Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoyMToxM1rOGrUlIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDU4OQ==", "bodyText": "If there is throwable, you will end up calling setStatus twice. And it seems like second one will override one set in onError", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r447460589", "createdAt": "2020-06-30T07:13:51Z", "author": {"login": "iNikem"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,18 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n-\n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n+    super.onError(span, status.getCause());\n     span.setStatus(GrpcHelper.statusFromGrpcStatus(status));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2NDQwNA==", "bodyText": "It's a bit unclear - this is calling super.onError now. I added a comment but admit it's a bit unclear, couldn't come up with a way to refactor that would be clearer though. Any suggestion?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r447464404", "createdAt": "2020-06-30T07:20:53Z", "author": {"login": "anuraaga"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,18 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n-\n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n+    super.onError(span, status.getCause());\n     span.setStatus(GrpcHelper.statusFromGrpcStatus(status));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDU4OQ=="}, "originalCommit": {"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NTA1Ng==", "bodyText": "maybe adding an onError() overload in BaseDecorator that also takes (otel) Status might help?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448065056", "createdAt": "2020-07-01T01:24:11Z", "author": {"login": "trask"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,18 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n-\n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n+    super.onError(span, status.getCause());\n     span.setStatus(GrpcHelper.statusFromGrpcStatus(status));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDU4OQ=="}, "originalCommit": {"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3OTEzOA==", "bodyText": "Thanks for the idea, looks a bit better.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448079138", "createdAt": "2020-07-01T02:21:13Z", "author": {"login": "anuraaga"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,18 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n-\n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n+    super.onError(span, status.getCause());\n     span.setStatus(GrpcHelper.statusFromGrpcStatus(status));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDU4OQ=="}, "originalCommit": {"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODgzMDI1OnYy", "diffSide": "RIGHT", "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzoxNToyNlrOGqu4dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzoyMDoyOFrOGqvC4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MTQ5NQ==", "bodyText": "This looks strange to me without first checking if getCause() != null", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r447461495", "createdAt": "2020-06-30T07:15:26Z", "author": {"login": "iNikem"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,18 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n-\n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n+    super.onError(span, status.getCause());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2NDE2Mg==", "bodyText": "Our previous code was doing that too, but I prefer to do null checks at callers too so added", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r447464162", "createdAt": "2020-06-30T07:20:28Z", "author": {"login": "anuraaga"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,18 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n-\n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n+    super.onError(span, status.getCause());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MTQ5NQ=="}, "originalCommit": {"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mjc3Mjg2OnYy", "diffSide": "RIGHT", "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoyNTowN1rOGrUo6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjo1MzoxNVrOGrVDXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MDEwNQ==", "bodyText": "i think calling straight to onComplete here would be a bit clearer\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                onClose(span, Status.fromThrowable(throwable));\n          \n          \n            \n                onComplete(span, Status.fromThrowable(throwable), throwable);", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448080105", "createdAt": "2020-07-01T02:25:07Z", "author": {"login": "trask"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,14 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n+    onComplete(span, GrpcHelper.statusFromGrpcStatus(status), status.getCause());\n+    return span;\n+  }\n \n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n-    span.setStatus(GrpcHelper.statusFromGrpcStatus(status));\n+  @Override\n+  public Span onError(Span span, Throwable throwable) {\n+    assert span != null;\n+    onClose(span, Status.fromThrowable(throwable));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e00582bfc5842e185506862deb5cf694de64365"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MDkwNg==", "bodyText": "Yeah not sure if I have a preference. Happy to make the change, but want to confirm you think it's better even though it needs to be this longer version (convert to otel status)?\nonComplete(span, GrpcHelper.statusFromGrpcStatus(Status.fromThrowable(throwable)), throwable);", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448080906", "createdAt": "2020-07-01T02:28:36Z", "author": {"login": "anuraaga"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,14 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n+    onComplete(span, GrpcHelper.statusFromGrpcStatus(status), status.getCause());\n+    return span;\n+  }\n \n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n-    span.setStatus(GrpcHelper.statusFromGrpcStatus(status));\n+  @Override\n+  public Span onError(Span span, Throwable throwable) {\n+    assert span != null;\n+    onClose(span, Status.fromThrowable(throwable));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MDEwNQ=="}, "originalCommit": {"oid": "6e00582bfc5842e185506862deb5cf694de64365"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4Njg3OA==", "bodyText": "oh yeah, that's not great, keep it as is \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448086878", "createdAt": "2020-07-01T02:53:15Z", "author": {"login": "trask"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,14 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n+    onComplete(span, GrpcHelper.statusFromGrpcStatus(status), status.getCause());\n+    return span;\n+  }\n \n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n-    span.setStatus(GrpcHelper.statusFromGrpcStatus(status));\n+  @Override\n+  public Span onError(Span span, Throwable throwable) {\n+    assert span != null;\n+    onClose(span, Status.fromThrowable(throwable));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MDEwNQ=="}, "originalCommit": {"oid": "6e00582bfc5842e185506862deb5cf694de64365"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 313, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}