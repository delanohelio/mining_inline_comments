{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjUxNjM0", "number": 241, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTo1NjozOFrODpSuWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMjowNzoyNVrODpS49A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjI0OTg2OnYy", "diffSide": "RIGHT", "path": "instrumentation/kafka-clients-0.11/src/main/java/io/opentelemetry/auto/instrumentation/kafka_clients/KafkaDecorator.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTo1NjozOFrOF4YSgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNTo1OToyN1rOF4hDJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MjUyOA==", "bodyText": "this else is redundant, since the if has a return in it.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/241#discussion_r394662528", "createdAt": "2020-03-18T21:56:38Z", "author": {"login": "jkwatson"}, "path": "instrumentation/kafka-clients-0.11/src/main/java/io/opentelemetry/auto/instrumentation/kafka_clients/KafkaDecorator.java", "diffHunk": "@@ -54,24 +53,35 @@ protected String getComponentName() {\n     return \"java-kafka\";\n   }\n \n-  public void onConsume(final Span span, final ConsumerRecord record) {\n+  public String spanNameOnConsume(final ConsumerRecord record) {\n+    final String topic = record.topic();\n+    if (topic != null) {\n+      return topic;\n+    } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ba6feb218e51b65225a8f9007d8082ca02adc17"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NDI1MA==", "bodyText": "I actually like this flow personally. Do we have a style guide that we can refer to for these kinds of style decisions?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/241#discussion_r394664250", "createdAt": "2020-03-18T22:00:29Z", "author": {"login": "trask"}, "path": "instrumentation/kafka-clients-0.11/src/main/java/io/opentelemetry/auto/instrumentation/kafka_clients/KafkaDecorator.java", "diffHunk": "@@ -54,24 +53,35 @@ protected String getComponentName() {\n     return \"java-kafka\";\n   }\n \n-  public void onConsume(final Span span, final ConsumerRecord record) {\n+  public String spanNameOnConsume(final ConsumerRecord record) {\n+    final String topic = record.topic();\n+    if (topic != null) {\n+      return topic;\n+    } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MjUyOA=="}, "originalCommit": {"oid": "0ba6feb218e51b65225a8f9007d8082ca02adc17"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NjI4Mw==", "bodyText": "It doesn't look like the google style guide has anything to say on the subject. Up to you, I guess.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/241#discussion_r394666283", "createdAt": "2020-03-18T22:05:29Z", "author": {"login": "jkwatson"}, "path": "instrumentation/kafka-clients-0.11/src/main/java/io/opentelemetry/auto/instrumentation/kafka_clients/KafkaDecorator.java", "diffHunk": "@@ -54,24 +53,35 @@ protected String getComponentName() {\n     return \"java-kafka\";\n   }\n \n-  public void onConsume(final Span span, final ConsumerRecord record) {\n+  public String spanNameOnConsume(final ConsumerRecord record) {\n+    final String topic = record.topic();\n+    if (topic != null) {\n+      return topic;\n+    } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MjUyOA=="}, "originalCommit": {"oid": "0ba6feb218e51b65225a8f9007d8082ca02adc17"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDgwNjA1Mg==", "bodyText": "Could also replace with a ternary operator.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/241#discussion_r394806052", "createdAt": "2020-03-19T05:59:27Z", "author": {"login": "tylerbenson"}, "path": "instrumentation/kafka-clients-0.11/src/main/java/io/opentelemetry/auto/instrumentation/kafka_clients/KafkaDecorator.java", "diffHunk": "@@ -54,24 +53,35 @@ protected String getComponentName() {\n     return \"java-kafka\";\n   }\n \n-  public void onConsume(final Span span, final ConsumerRecord record) {\n+  public String spanNameOnConsume(final ConsumerRecord record) {\n+    final String topic = record.topic();\n+    if (topic != null) {\n+      return topic;\n+    } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MjUyOA=="}, "originalCommit": {"oid": "0ba6feb218e51b65225a8f9007d8082ca02adc17"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjI3NzAwOnYy", "diffSide": "RIGHT", "path": "instrumentation/kafka-streams-0.11/src/main/java/io/opentelemetry/auto/instrumentation/kafka_streams/KafkaStreamsDecorator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMjowNzoyNVrOF4YkGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMjoxNjoyOFrOF4YyVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NzAzMg==", "bodyText": "just curious (not trying to be critical), but why wouldn't you put the else block in this case, but you would below?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/241#discussion_r394667032", "createdAt": "2020-03-18T22:07:25Z", "author": {"login": "jkwatson"}, "path": "instrumentation/kafka-streams-0.11/src/main/java/io/opentelemetry/auto/instrumentation/kafka_streams/KafkaStreamsDecorator.java", "diffHunk": "@@ -44,10 +43,20 @@ protected String getSpanType() {\n     return SpanTypes.MESSAGE_CONSUMER;\n   }\n \n+  public String spanNameForConsume(final StampedRecord record) {\n+    if (record == null) {\n+      return null;\n+    }\n+    final String topic = record.topic();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ba6feb218e51b65225a8f9007d8082ca02adc17"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2OTE1OA==", "bodyText": "My logic \ud83d\ude04 is that at the top of a method, you are short-circuiting execution.\nAt the bottom of the method you are returning a value.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/241#discussion_r394669158", "createdAt": "2020-03-18T22:12:32Z", "author": {"login": "trask"}, "path": "instrumentation/kafka-streams-0.11/src/main/java/io/opentelemetry/auto/instrumentation/kafka_streams/KafkaStreamsDecorator.java", "diffHunk": "@@ -44,10 +43,20 @@ protected String getSpanType() {\n     return SpanTypes.MESSAGE_CONSUMER;\n   }\n \n+  public String spanNameForConsume(final StampedRecord record) {\n+    if (record == null) {\n+      return null;\n+    }\n+    final String topic = record.topic();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NzAzMg=="}, "originalCommit": {"oid": "0ba6feb218e51b65225a8f9007d8082ca02adc17"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY3MDY3OQ==", "bodyText": "ok! I vaguely see the distinction, but don't like sliding down that slope.  ;)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/241#discussion_r394670679", "createdAt": "2020-03-18T22:16:28Z", "author": {"login": "jkwatson"}, "path": "instrumentation/kafka-streams-0.11/src/main/java/io/opentelemetry/auto/instrumentation/kafka_streams/KafkaStreamsDecorator.java", "diffHunk": "@@ -44,10 +43,20 @@ protected String getSpanType() {\n     return SpanTypes.MESSAGE_CONSUMER;\n   }\n \n+  public String spanNameForConsume(final StampedRecord record) {\n+    if (record == null) {\n+      return null;\n+    }\n+    final String topic = record.topic();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NzAzMg=="}, "originalCommit": {"oid": "0ba6feb218e51b65225a8f9007d8082ca02adc17"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 526, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}