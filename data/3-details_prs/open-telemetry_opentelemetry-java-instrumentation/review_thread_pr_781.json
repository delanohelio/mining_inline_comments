{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MTQ1NjY3", "number": 781, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNzoyNDo0MlrOESKv6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNzozMzo1OFrOESKzEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDg1OTI5OnYy", "diffSide": "RIGHT", "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/typedspan/DelegatingSpan.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNzoyNDo0MlrOG3N46A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNzoyNDo0MlrOG3N46A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1MjQyNA==", "bodyText": "package protected?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/781#discussion_r460552424", "createdAt": "2020-07-26T17:24:42Z", "author": {"login": "trask"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/typedspan/DelegatingSpan.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.auto.typedspan;\n+\n+import io.opentelemetry.common.AttributeValue;\n+import io.opentelemetry.common.Attributes;\n+import io.opentelemetry.trace.EndSpanOptions;\n+import io.opentelemetry.trace.Event;\n+import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.SpanContext;\n+import io.opentelemetry.trace.Status;\n+\n+public class DelegatingSpan implements Span {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ce5a7546dbf1280fa559896cfd47f73c9ee60c"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDg2NzM2OnYy", "diffSide": "RIGHT", "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/typedspan/DbSpan.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNzozMzo1OFrOG3N8rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNzozMzo1OFrOG3N8rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1MzM4OA==", "bodyText": "it looks like we are starting with AttributeStatus.EMPTY and modifying the internal content of the enum, which will carry over to the next time that the enum is used", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/781#discussion_r460553388", "createdAt": "2020-07-26T17:33:58Z", "author": {"login": "trask"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/typedspan/DbSpan.java", "diffHunk": "@@ -0,0 +1,492 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.auto.typedspan;\n+\n+import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.SpanContext;\n+import io.opentelemetry.trace.Tracer;\n+import java.util.logging.Logger;\n+\n+/**\n+ * <b>Required attributes:</b>\n+ *\n+ * <ul>\n+ *   <li>db.system: An identifier for the database management system (DBMS) product being used. See\n+ *       below for a list of well-known identifiers.\n+ * </ul>\n+ *\n+ * <b>Conditional attributes:</b>\n+ *\n+ * <ul>\n+ *   <li>db.name: If no tech-specific attribute is defined, this attribute is used to report the\n+ *       name of the database being accessed. For commands that switch the database, this should be\n+ *       set to the target database (even if the command fails).\n+ *   <li>db.statement: The database statement being executed.\n+ *   <li>db.operation: The name of the operation being executed, e.g. the [MongoDB command\n+ *       name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as\n+ *       `findAndModify`.\n+ *   <li>net.peer.name: Remote hostname or similar, see note below.\n+ *   <li>net.peer.ip: Remote address of the peer (dotted decimal for IPv4 or\n+ *       [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6)\n+ *   <li>net.peer.port: Remote port number.\n+ *   <li>net.transport: Transport protocol used. See note below.\n+ * </ul>\n+ *\n+ * <b>Additional constraints</b>\n+ *\n+ * <p>At least one of the following must be set:\n+ *\n+ * <ul>\n+ *   <li>net.peer.name\n+ *   <li>net.peer.ip\n+ * </ul>\n+ */\n+public class DbSpan extends DelegatingSpan implements DbSemanticConvention {\n+\n+  enum AttributeStatus {\n+    EMPTY,\n+    DB_SYSTEM,\n+    DB_CONNECTION_STRING,\n+    DB_USER,\n+    DB_JDBC_DRIVER_CLASSNAME,\n+    DB_NAME,\n+    DB_STATEMENT,\n+    DB_OPERATION,\n+    NET_PEER_NAME,\n+    NET_PEER_IP,\n+    NET_PEER_PORT,\n+    NET_TRANSPORT;\n+\n+    @SuppressWarnings(\"ImmutableEnumChecker\")\n+    private long flag;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ce5a7546dbf1280fa559896cfd47f73c9ee60c"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 142, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}