{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTU3NzE2", "number": 701, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzozOToyNlrOEPV7Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo1MjoxOVrOEPWGDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTIzMzM0OnYy", "diffSide": "RIGHT", "path": "instrumentation/play/play-2.3/src/main/java/io/opentelemetry/auto/instrumentation/play/v2_3/PlayAdvice.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzozOToyNlrOGzAY2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzozOToyNlrOGzAY2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzNjkyMw==", "bodyText": "I agree with your TODO, delete \ud83d\ude04\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (!TRACER.getCurrentSpan().getContext().isValid()) {\n          \n          \n            \n                  // TODO should we do that for INTERNAL span?\n          \n          \n            \n                  final SpanContext extractedContext = extract(req.headers(), GETTER);\n          \n          \n            \n                  if (extractedContext.isValid()) {\n          \n          \n            \n                    spanBuilder.setParent(extractedContext);\n          \n          \n            \n                  }", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/701#discussion_r456136923", "createdAt": "2020-07-16T23:39:26Z", "author": {"login": "trask"}, "path": "instrumentation/play/play-2.3/src/main/java/io/opentelemetry/auto/instrumentation/play/v2_3/PlayAdvice.java", "diffHunk": "@@ -37,17 +36,17 @@\n   public static SpanWithScope onEnter(@Advice.Argument(0) final Request req) {\n     final Span.Builder spanBuilder = TRACER.spanBuilder(\"play.request\");\n     if (!TRACER.getCurrentSpan().getContext().isValid()) {\n+      // TODO should we do that for INTERNAL span?\n       final SpanContext extractedContext = extract(req.headers(), GETTER);\n       if (extractedContext.isValid()) {\n         spanBuilder.setParent(extractedContext);\n       }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75256e235b2f47bac95b87e60bdc191249330cd4"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTIzNjA0OnYy", "diffSide": "RIGHT", "path": "instrumentation/play/play-2.3/src/main/java/io/opentelemetry/auto/instrumentation/play/v2_3/PlayAdvice.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0MDozN1rOGzAaYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0MDozN1rOGzAaYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzNzMxMw==", "bodyText": "and delete\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // An upstream framework (e.g. akka-http, netty) has already started the span.\n          \n          \n            \n                // Do not extract the context.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/701#discussion_r456137313", "createdAt": "2020-07-16T23:40:37Z", "author": {"login": "trask"}, "path": "instrumentation/play/play-2.3/src/main/java/io/opentelemetry/auto/instrumentation/play/v2_3/PlayAdvice.java", "diffHunk": "@@ -37,17 +36,17 @@\n   public static SpanWithScope onEnter(@Advice.Argument(0) final Request req) {\n     final Span.Builder spanBuilder = TRACER.spanBuilder(\"play.request\");\n     if (!TRACER.getCurrentSpan().getContext().isValid()) {\n+      // TODO should we do that for INTERNAL span?\n       final SpanContext extractedContext = extract(req.headers(), GETTER);\n       if (extractedContext.isValid()) {\n         spanBuilder.setParent(extractedContext);\n       }\n-    } else {\n-      // An upstream framework (e.g. akka-http, netty) has already started the span.\n-      // Do not extract the context.\n     }\n+    // An upstream framework (e.g. akka-http, netty) has already started the span.\n+    // Do not extract the context.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75256e235b2f47bac95b87e60bdc191249330cd4"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI0ODcxOnYy", "diffSide": "RIGHT", "path": "instrumentation/play/play-2.4/src/main/java/io/opentelemetry/auto/instrumentation/play/v2_4/PlayAdvice.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0Njo0OVrOGzAh1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0Njo0OVrOGzAh1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzOTIyMg==", "bodyText": "delete !isValid condition above, and delete this comment \u26a1\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // An upstream framework (e.g. akka-http, netty) has already started the span.\n          \n          \n            \n                // Do not extract the context.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/701#discussion_r456139222", "createdAt": "2020-07-16T23:46:49Z", "author": {"login": "trask"}, "path": "instrumentation/play/play-2.4/src/main/java/io/opentelemetry/auto/instrumentation/play/v2_4/PlayAdvice.java", "diffHunk": "@@ -40,13 +40,11 @@ public static SpanWithScope onEnter(@Advice.Argument(0) final Request req) {\n       if (extractedContext.isValid()) {\n         spanBuilder.setParent(extractedContext);\n       }\n-    } else {\n-      // An upstream framework (e.g. akka-http, netty) has already started the span.\n-      // Do not extract the context.\n     }\n+    // An upstream framework (e.g. akka-http, netty) has already started the span.\n+    // Do not extract the context.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75256e235b2f47bac95b87e60bdc191249330cd4"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI1MjI3OnYy", "diffSide": "RIGHT", "path": "instrumentation/play/play-2.6/src/main/java/io/opentelemetry/auto/instrumentation/play/v2_6/PlayAdvice.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0ODo1NFrOGzAkGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0ODo1NFrOGzAkGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzOTgwMA==", "bodyText": "and again, let's delete condition above, and this comment \ud83d\udc4d\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // An upstream framework (e.g. akka-http, netty) has already started the span.\n          \n          \n            \n                // Do not extract the context.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/701#discussion_r456139800", "createdAt": "2020-07-16T23:48:54Z", "author": {"login": "trask"}, "path": "instrumentation/play/play-2.6/src/main/java/io/opentelemetry/auto/instrumentation/play/v2_6/PlayAdvice.java", "diffHunk": "@@ -40,13 +40,12 @@ public static SpanWithScope onEnter(@Advice.Argument(0) final Request req) {\n       if (extractedContext.isValid()) {\n         spanBuilder.setParent(extractedContext);\n       }\n-    } else {\n-      // An upstream framework (e.g. akka-http, netty) has already started the span.\n-      // Do not extract the context.\n     }\n+    // An upstream framework (e.g. akka-http, netty) has already started the span.\n+    // Do not extract the context.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75256e235b2f47bac95b87e60bdc191249330cd4"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI2MDkyOnYy", "diffSide": "RIGHT", "path": "testing/src/main/groovy/io/opentelemetry/auto/test/utils/ConfigUtils.groovy", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo1MjoxOVrOGzAoyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNTowMjo1NVrOGzFcLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MTAwMA==", "bodyText": "Can you check your Intellij import settings for groovy?\n\nWith java use the following import layout (groovy should still use the default)\n\nhttps://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/CONTRIBUTING.md#intellij-idea", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/701#discussion_r456141000", "createdAt": "2020-07-16T23:52:19Z", "author": {"login": "trask"}, "path": "testing/src/main/groovy/io/opentelemetry/auto/test/utils/ConfigUtils.groovy", "diffHunk": "@@ -17,10 +17,9 @@\n package io.opentelemetry.auto.test.utils\n \n import io.opentelemetry.auto.config.Config\n-import lombok.SneakyThrows\n-\n import java.lang.reflect.Modifier\n import java.util.concurrent.Callable\n+import lombok.SneakyThrows", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75256e235b2f47bac95b87e60bdc191249330cd4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNzg3Mg==", "bodyText": "What do you mean? Please don't tell me you want to have java.* import separately for groovy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/701#discussion_r456217872", "createdAt": "2020-07-17T04:55:10Z", "author": {"login": "iNikem"}, "path": "testing/src/main/groovy/io/opentelemetry/auto/test/utils/ConfigUtils.groovy", "diffHunk": "@@ -17,10 +17,9 @@\n package io.opentelemetry.auto.test.utils\n \n import io.opentelemetry.auto.config.Config\n-import lombok.SneakyThrows\n-\n import java.lang.reflect.Modifier\n import java.util.concurrent.Callable\n+import lombok.SneakyThrows", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MTAwMA=="}, "originalCommit": {"oid": "75256e235b2f47bac95b87e60bdc191249330cd4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxOTI1OQ==", "bodyText": "I'm just following the instructions from CONTRIBUTING.md:", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/701#discussion_r456219259", "createdAt": "2020-07-17T05:01:05Z", "author": {"login": "trask"}, "path": "testing/src/main/groovy/io/opentelemetry/auto/test/utils/ConfigUtils.groovy", "diffHunk": "@@ -17,10 +17,9 @@\n package io.opentelemetry.auto.test.utils\n \n import io.opentelemetry.auto.config.Config\n-import lombok.SneakyThrows\n-\n import java.lang.reflect.Modifier\n import java.util.concurrent.Callable\n+import lombok.SneakyThrows", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MTAwMA=="}, "originalCommit": {"oid": "75256e235b2f47bac95b87e60bdc191249330cd4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxOTY5Mg==", "bodyText": "I don't think anyone would objection if you want to change the groovy import ordering to match the java import ordering", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/701#discussion_r456219692", "createdAt": "2020-07-17T05:02:55Z", "author": {"login": "trask"}, "path": "testing/src/main/groovy/io/opentelemetry/auto/test/utils/ConfigUtils.groovy", "diffHunk": "@@ -17,10 +17,9 @@\n package io.opentelemetry.auto.test.utils\n \n import io.opentelemetry.auto.config.Config\n-import lombok.SneakyThrows\n-\n import java.lang.reflect.Modifier\n import java.util.concurrent.Callable\n+import lombok.SneakyThrows", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MTAwMA=="}, "originalCommit": {"oid": "75256e235b2f47bac95b87e60bdc191249330cd4"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 395, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}