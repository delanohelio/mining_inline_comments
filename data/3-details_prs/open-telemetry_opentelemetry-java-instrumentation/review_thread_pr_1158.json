{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3ODM5OTI4", "number": 1158, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoxMDoxOVrOEfeSRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjoxNjowMFrOEfh9FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDM3NTEwOnYy", "diffSide": "RIGHT", "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoxMDoxOVrOHLxA7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo0Nzo0MVrOHL9QeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA5OTQzNw==", "bodyText": "Please review the order of method. Before this change it was somewhat logical if you look at parameter types. Now it seems to me as more chaotic.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482099437", "createdAt": "2020-09-02T14:10:19Z", "author": {"login": "iNikem"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java", "diffHunk": "@@ -26,24 +26,7 @@\n \n   private NetPeerUtils() {}\n \n-  public static void setNetPeer(Span span, InetSocketAddress remoteConnection) {\n-    if (remoteConnection != null) {\n-      InetAddress remoteAddress = remoteConnection.getAddress();\n-      if (remoteAddress != null) {\n-        setNetPeer(span, remoteAddress);\n-      } else {\n-        // Failed DNS lookup, the host string is the name.\n-        setNetPeer(span, remoteConnection.getHostString(), null);\n-      }\n-      span.setAttribute(SemanticAttributes.NET_PEER_PORT.key(), remoteConnection.getPort());\n-    }\n-  }\n-\n-  public static void setNetPeer(Span span, InetAddress remoteAddress) {\n-    setNetPeer(span, remoteAddress.getHostName(), remoteAddress.getHostAddress());\n-  }\n-\n-  public static void setNetPeer(Span span, String peerName, String peerIp) {\n+  public static void setNetPeer(Span span, String peerName, String peerIp, int port) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a3dd2ca6acf9644ce1d2a786fc76c3eabb8c33c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MTM1MA==", "bodyText": "Goal of my refactoring was to make it in order - main method (setting attrs) first, then delegates starting from the simplest one. But I can bring it back as it was, just confirm that you'd like it that way :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482171350", "createdAt": "2020-09-02T15:40:22Z", "author": {"login": "kubawach"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java", "diffHunk": "@@ -26,24 +26,7 @@\n \n   private NetPeerUtils() {}\n \n-  public static void setNetPeer(Span span, InetSocketAddress remoteConnection) {\n-    if (remoteConnection != null) {\n-      InetAddress remoteAddress = remoteConnection.getAddress();\n-      if (remoteAddress != null) {\n-        setNetPeer(span, remoteAddress);\n-      } else {\n-        // Failed DNS lookup, the host string is the name.\n-        setNetPeer(span, remoteConnection.getHostString(), null);\n-      }\n-      span.setAttribute(SemanticAttributes.NET_PEER_PORT.key(), remoteConnection.getPort());\n-    }\n-  }\n-\n-  public static void setNetPeer(Span span, InetAddress remoteAddress) {\n-    setNetPeer(span, remoteAddress.getHostName(), remoteAddress.getHostAddress());\n-  }\n-\n-  public static void setNetPeer(Span span, String peerName, String peerIp) {\n+  public static void setNetPeer(Span span, String peerName, String peerIp, int port) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA5OTQzNw=="}, "originalCommit": {"oid": "3a3dd2ca6acf9644ce1d2a786fc76c3eabb8c33c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5MzkyNg==", "bodyText": "I prefer the same order as with constructors: shorter before, longer after. If A delegates to B, then A is before B.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482193926", "createdAt": "2020-09-02T16:13:24Z", "author": {"login": "iNikem"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java", "diffHunk": "@@ -26,24 +26,7 @@\n \n   private NetPeerUtils() {}\n \n-  public static void setNetPeer(Span span, InetSocketAddress remoteConnection) {\n-    if (remoteConnection != null) {\n-      InetAddress remoteAddress = remoteConnection.getAddress();\n-      if (remoteAddress != null) {\n-        setNetPeer(span, remoteAddress);\n-      } else {\n-        // Failed DNS lookup, the host string is the name.\n-        setNetPeer(span, remoteConnection.getHostString(), null);\n-      }\n-      span.setAttribute(SemanticAttributes.NET_PEER_PORT.key(), remoteConnection.getPort());\n-    }\n-  }\n-\n-  public static void setNetPeer(Span span, InetAddress remoteAddress) {\n-    setNetPeer(span, remoteAddress.getHostName(), remoteAddress.getHostAddress());\n-  }\n-\n-  public static void setNetPeer(Span span, String peerName, String peerIp) {\n+  public static void setNetPeer(Span span, String peerName, String peerIp, int port) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA5OTQzNw=="}, "originalCommit": {"oid": "3a3dd2ca6acf9644ce1d2a786fc76c3eabb8c33c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwMDAyNA==", "bodyText": "Changed as suggested :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482300024", "createdAt": "2020-09-02T18:47:41Z", "author": {"login": "kubawach"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java", "diffHunk": "@@ -26,24 +26,7 @@\n \n   private NetPeerUtils() {}\n \n-  public static void setNetPeer(Span span, InetSocketAddress remoteConnection) {\n-    if (remoteConnection != null) {\n-      InetAddress remoteAddress = remoteConnection.getAddress();\n-      if (remoteAddress != null) {\n-        setNetPeer(span, remoteAddress);\n-      } else {\n-        // Failed DNS lookup, the host string is the name.\n-        setNetPeer(span, remoteConnection.getHostString(), null);\n-      }\n-      span.setAttribute(SemanticAttributes.NET_PEER_PORT.key(), remoteConnection.getPort());\n-    }\n-  }\n-\n-  public static void setNetPeer(Span span, InetAddress remoteAddress) {\n-    setNetPeer(span, remoteAddress.getHostName(), remoteAddress.getHostAddress());\n-  }\n-\n-  public static void setNetPeer(Span span, String peerName, String peerIp) {\n+  public static void setNetPeer(Span span, String peerName, String peerIp, int port) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA5OTQzNw=="}, "originalCommit": {"oid": "3a3dd2ca6acf9644ce1d2a786fc76c3eabb8c33c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDk3NjIwOnYy", "diffSide": "RIGHT", "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjoxNjowMFrOHL24mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo0MzoyMVrOHL9A_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5NTYxMA==", "bodyText": "Don't forget to remove :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482195610", "createdAt": "2020-09-02T16:16:00Z", "author": {"login": "iNikem"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java", "diffHunk": "@@ -26,24 +26,10 @@\n \n   private NetPeerUtils() {}\n \n-  public static void setNetPeer(Span span, InetSocketAddress remoteConnection) {\n-    if (remoteConnection != null) {\n-      InetAddress remoteAddress = remoteConnection.getAddress();\n-      if (remoteAddress != null) {\n-        setNetPeer(span, remoteAddress);\n-      } else {\n-        // Failed DNS lookup, the host string is the name.\n-        setNetPeer(span, remoteConnection.getHostString(), null);\n-      }\n-      span.setAttribute(SemanticAttributes.NET_PEER_PORT.key(), remoteConnection.getPort());\n-    }\n-  }\n+  public static void setNetPeer(Span span, String peerName, String peerIp, int port) {\n \n-  public static void setNetPeer(Span span, InetAddress remoteAddress) {\n-    setNetPeer(span, remoteAddress.getHostName(), remoteAddress.getHostAddress());\n-  }\n+    System.out.println(\"NAME: \"+peerName+\", IP: \"+peerIp+\", PORT: \"+port);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51bf7a10cd7010d387262540f996556098694b75"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5NjA2MA==", "bodyText": "You didn't see anything! ;-)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482296060", "createdAt": "2020-09-02T18:43:21Z", "author": {"login": "kubawach"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java", "diffHunk": "@@ -26,24 +26,10 @@\n \n   private NetPeerUtils() {}\n \n-  public static void setNetPeer(Span span, InetSocketAddress remoteConnection) {\n-    if (remoteConnection != null) {\n-      InetAddress remoteAddress = remoteConnection.getAddress();\n-      if (remoteAddress != null) {\n-        setNetPeer(span, remoteAddress);\n-      } else {\n-        // Failed DNS lookup, the host string is the name.\n-        setNetPeer(span, remoteConnection.getHostString(), null);\n-      }\n-      span.setAttribute(SemanticAttributes.NET_PEER_PORT.key(), remoteConnection.getPort());\n-    }\n-  }\n+  public static void setNetPeer(Span span, String peerName, String peerIp, int port) {\n \n-  public static void setNetPeer(Span span, InetAddress remoteAddress) {\n-    setNetPeer(span, remoteAddress.getHostName(), remoteAddress.getHostAddress());\n-  }\n+    System.out.println(\"NAME: \"+peerName+\", IP: \"+peerIp+\", PORT: \"+port);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5NTYxMA=="}, "originalCommit": {"oid": "51bf7a10cd7010d387262540f996556098694b75"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4865, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}