{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NzczOTM4", "number": 1462, "title": "Couchbase instrumentation should store normalized queries as db.statement", "bodyText": "Resolves #1444", "createdAt": "2020-10-23T07:22:24Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1462", "merged": true, "mergeCommit": {"oid": "d3c39228c66e4f39589d7e1550f731be6d9d1359"}, "closed": true, "closedAt": "2020-10-27T17:15:28Z", "author": {"login": "mateuszrzeszutek"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVWOz4AFqTUxNTY0NTYyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWrOqRAFqTUxNzg3OTc5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjQ1NjI0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1462#pullrequestreview-515645624", "createdAt": "2020-10-23T13:03:44Z", "commit": {"oid": "eb976589be954d6d2ad230adedf956633a511dc5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15d131e32ecf8943ae477aeabcf4effe1690c2de", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/15d131e32ecf8943ae477aeabcf4effe1690c2de", "committedDate": "2020-10-23T18:26:55Z", "message": "Couchbase instrumentation should store normalized queries as db.statement"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb976589be954d6d2ad230adedf956633a511dc5", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/eb976589be954d6d2ad230adedf956633a511dc5", "committedDate": "2020-10-22T15:59:42Z", "message": "Couchbase instrumentation should store normalized queries as db.statement"}, "afterCommit": {"oid": "15d131e32ecf8943ae477aeabcf4effe1690c2de", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/15d131e32ecf8943ae477aeabcf4effe1690c2de", "committedDate": "2020-10-23T18:26:55Z", "message": "Couchbase instrumentation should store normalized queries as db.statement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1OTIwMDU3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1462#pullrequestreview-515920057", "createdAt": "2020-10-23T18:40:07Z", "commit": {"oid": "15d131e32ecf8943ae477aeabcf4effe1690c2de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo0MDowOFrOHnZhDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo0MDowOFrOHnZhDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA3NDU3NA==", "bodyText": "does it make sense to use muzzle and split out separate instrumentation module for couchbase 2.5?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1462#discussion_r511074574", "createdAt": "2020-10-23T18:40:08Z", "author": {"login": "trask"}, "path": "instrumentation/couchbase/couchbase-2.0/src/main/java/io/opentelemetry/javaagent/instrumentation/couchbase/v2_0/CouchbaseQueryNormalizer.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.javaagent.instrumentation.couchbase.v2_0;\n+\n+import io.opentelemetry.javaagent.instrumentation.api.db.normalizer.ParseException;\n+import io.opentelemetry.javaagent.instrumentation.api.db.normalizer.SqlNormalizer;\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class CouchbaseQueryNormalizer {\n+  private static final Logger log = LoggerFactory.getLogger(CouchbaseQueryNormalizer.class);\n+\n+  private static final Class<?> QUERY_CLASS;\n+  private static final Class<?> STATEMENT_CLASS;\n+  private static final Class<?> N1QL_QUERY_CLASS;\n+  private static final MethodHandle N1QL_GET_STATEMENT;\n+  private static final Class<?> ANALYTICS_QUERY_CLASS;\n+  private static final MethodHandle ANALYTICS_GET_STATEMENT;\n+\n+  static {\n+    Class<?> queryClass;\n+    try {\n+      queryClass = Class.forName(\"com.couchbase.client.java.query.Query\");\n+    } catch (Exception e) {\n+      queryClass = null;\n+    }\n+    QUERY_CLASS = queryClass;\n+\n+    Class<?> statementClass;\n+    try {\n+      statementClass = Class.forName(\"com.couchbase.client.java.query.Statement\");\n+    } catch (Exception e) {\n+      statementClass = null;\n+    }\n+    STATEMENT_CLASS = statementClass;\n+\n+    Class<?> n1qlQueryClass;\n+    MethodHandle n1qlGetStatement;\n+    try {\n+      n1qlQueryClass = Class.forName(\"com.couchbase.client.java.query.N1qlQuery\");\n+      n1qlGetStatement =\n+          MethodHandles.publicLookup()\n+              .findVirtual(\n+                  n1qlQueryClass,\n+                  \"statement\",\n+                  MethodType.methodType(\n+                      Class.forName(\"com.couchbase.client.java.query.Statement\")));\n+    } catch (Exception e) {\n+      n1qlQueryClass = null;\n+      n1qlGetStatement = null;\n+    }\n+    N1QL_QUERY_CLASS = n1qlQueryClass;\n+    N1QL_GET_STATEMENT = n1qlGetStatement;\n+\n+    Class<?> analyticsQueryClass;\n+    MethodHandle analyticsGetStatement;\n+    try {\n+      analyticsQueryClass = Class.forName(\"com.couchbase.client.java.analytics.AnalyticsQuery\");\n+      analyticsGetStatement =\n+          MethodHandles.publicLookup()\n+              .findVirtual(analyticsQueryClass, \"statement\", MethodType.methodType(String.class));\n+    } catch (Exception e) {\n+      analyticsQueryClass = null;\n+      analyticsGetStatement = null;\n+    }\n+    ANALYTICS_QUERY_CLASS = analyticsQueryClass;\n+    ANALYTICS_GET_STATEMENT = analyticsGetStatement;\n+  }\n+\n+  public static String normalize(Object query) {\n+    if (query instanceof String) {\n+      return normalizeString((String) query);\n+    }\n+    // Couchbase 2.0 uses Query, Couchbase 2.5+ uses Statement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d131e32ecf8943ae477aeabcf4effe1690c2de"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06ac6f17702fa0b55f5eb4eed76d473b7163dd08", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/06ac6f17702fa0b55f5eb4eed76d473b7163dd08", "committedDate": "2020-10-26T10:28:54Z", "message": "Fix inaccurate version comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3ODc5Nzkx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1462#pullrequestreview-517879791", "createdAt": "2020-10-27T16:05:30Z", "commit": {"oid": "06ac6f17702fa0b55f5eb4eed76d473b7163dd08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2394, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}