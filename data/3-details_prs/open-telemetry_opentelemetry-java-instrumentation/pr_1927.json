{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNzg3MDI2", "number": 1927, "title": "Bridge Baggage", "bodyText": "Resolves #973\nThis turned out to be much smaller than I expected", "createdAt": "2020-12-17T11:07:06Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927", "merged": true, "mergeCommit": {"oid": "8f095cbf3115bdcaa9c92b56b11a4ea428fc8bbc"}, "closed": true, "closedAt": "2020-12-18T04:20:13Z", "author": {"login": "mateuszrzeszutek"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnBgOTgH2gAyNTQxNzg3MDI2OmVlN2ZhNzc4OTFhZjZmNWI3OWJlZDc4OTJkZTM4M2ZjMTFiY2M1Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnQT1xAFqTU1NTE2MzExOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ee7fa77891af6f5b79bed7892de383fc11bcc527", "committedDate": "2020-12-17T11:05:23Z", "message": "Bridge Baggage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MDE2NzI3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#pullrequestreview-555016727", "createdAt": "2020-12-17T21:51:10Z", "commit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1MToxMVrOIIKL3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1Mzo0MlrOIIKQ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyNjM5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    System.out.println(((Baggage) v1).asMap());", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#discussion_r545426398", "createdAt": "2020-12-17T21:51:11Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/opentelemetryapi/context/AgentContextStorage.java", "diffHunk": "@@ -156,9 +199,15 @@ public AgentContextWrapper(\n         return new AgentContextWrapper(\n             agentContext.with(AGENT_SPAN_CONTEXT_KEY, agentSpan), applicationContext);\n       }\n+      if (k1 == APPLICATION_BAGGAGE_CONTEXT_KEY) {\n+        Baggage applicationBaggage = (Baggage) v1;\n+        io.opentelemetry.api.baggage.Baggage agentBaggage =\n+            BaggageBridging.toAgent(applicationBaggage);\n+        System.out.println(((Baggage) v1).asMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyNzEyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      println it", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#discussion_r545427128", "createdAt": "2020-12-17T21:52:34Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/test/groovy/ContextBridgeTest.groovy", "diffHunk": "@@ -80,6 +82,56 @@ class ContextBridgeTest extends AgentTestRunner {\n     }\n   }\n \n+  def \"agent and application share baggage\"() {\n+    expect:\n+    def applicationBaggage = Baggage.builder()\n+      .put(\"food\", \"cheese\")\n+      .put(\"country\", \"japan\", BaggageEntryMetadata.create(\"asia\"))\n+      .build()\n+\n+    applicationBaggage.makeCurrent().withCloseable {\n+      def agentBaggage = io.opentelemetry.api.baggage.Baggage.current()\n+      agentBaggage.asMap().with {\n+        println it\n+        size() == 2\n+        get(\"food\").value == \"cheese\"\n+        get(\"food\").entryMetadata == io.opentelemetry.api.baggage.BaggageEntryMetadata.empty()\n+        get(\"country\").value == \"japan\"\n+        get(\"country\").entryMetadata == io.opentelemetry.api.baggage.BaggageEntryMetadata.create(\"asia\")\n+      }\n+\n+      agentBaggage = io.opentelemetry.api.baggage.Baggage.builder()\n+        .put(\"country\", \"italy\", io.opentelemetry.api.baggage.BaggageEntryMetadata.create(\"europe\"))\n+        .build()\n+      agentBaggage.makeCurrent().withCloseable {\n+        def updatedApplicationBaggage = Baggage.current()\n+        updatedApplicationBaggage.asMap().with {\n+          println it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyNzIwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        println it", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#discussion_r545427207", "createdAt": "2020-12-17T21:52:45Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/test/groovy/ContextBridgeTest.groovy", "diffHunk": "@@ -80,6 +82,56 @@ class ContextBridgeTest extends AgentTestRunner {\n     }\n   }\n \n+  def \"agent and application share baggage\"() {\n+    expect:\n+    def applicationBaggage = Baggage.builder()\n+      .put(\"food\", \"cheese\")\n+      .put(\"country\", \"japan\", BaggageEntryMetadata.create(\"asia\"))\n+      .build()\n+\n+    applicationBaggage.makeCurrent().withCloseable {\n+      def agentBaggage = io.opentelemetry.api.baggage.Baggage.current()\n+      agentBaggage.asMap().with {\n+        println it\n+        size() == 2\n+        get(\"food\").value == \"cheese\"\n+        get(\"food\").entryMetadata == io.opentelemetry.api.baggage.BaggageEntryMetadata.empty()\n+        get(\"country\").value == \"japan\"\n+        get(\"country\").entryMetadata == io.opentelemetry.api.baggage.BaggageEntryMetadata.create(\"asia\")\n+      }\n+\n+      agentBaggage = io.opentelemetry.api.baggage.Baggage.builder()\n+        .put(\"country\", \"italy\", io.opentelemetry.api.baggage.BaggageEntryMetadata.create(\"europe\"))\n+        .build()\n+      agentBaggage.makeCurrent().withCloseable {\n+        def updatedApplicationBaggage = Baggage.current()\n+        updatedApplicationBaggage.asMap().with {\n+          println it\n+          size() == 2\n+          get(\"food\").value == \"cheese\"\n+          get(\"food\").entryMetadata == BaggageEntryMetadata.empty()\n+          get(\"country\").value == \"italy\"\n+          get(\"country\").entryMetadata == BaggageEntryMetadata.create(\"europe\")\n+        }\n+\n+        applicationBaggage = applicationBaggage.toBuilder()\n+          .put(\"food\", \"cabbage\")\n+          .build()\n+        applicationBaggage.makeCurrent().withCloseable {\n+          agentBaggage = io.opentelemetry.api.baggage.Baggage.current()\n+          agentBaggage.asMap().with {\n+            println it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyNzY4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    println it", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#discussion_r545427688", "createdAt": "2020-12-17T21:53:42Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/test/groovy/ContextBridgeTest.groovy", "diffHunk": "@@ -80,6 +82,56 @@ class ContextBridgeTest extends AgentTestRunner {\n     }\n   }\n \n+  def \"agent and application share baggage\"() {\n+    expect:\n+    def applicationBaggage = Baggage.builder()\n+      .put(\"food\", \"cheese\")\n+      .put(\"country\", \"japan\", BaggageEntryMetadata.create(\"asia\"))\n+      .build()\n+\n+    applicationBaggage.makeCurrent().withCloseable {\n+      def agentBaggage = io.opentelemetry.api.baggage.Baggage.current()\n+      agentBaggage.asMap().with {\n+        println it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36834c2cfbe7583719501fd217d93ef79ddf5edf", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/36834c2cfbe7583719501fd217d93ef79ddf5edf", "committedDate": "2020-12-18T03:26:59Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "801882b27c0c7cee072e3b1d7769ade413c3f8f7", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/801882b27c0c7cee072e3b1d7769ade413c3f8f7", "committedDate": "2020-12-18T03:57:18Z", "message": "Update instrumentation/opentelemetry-api-1.0/javaagent/src/test/groovy/ContextBridgeTest.groovy\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTYzMTE4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#pullrequestreview-555163118", "createdAt": "2020-12-18T04:20:26Z", "commit": {"oid": "801882b27c0c7cee072e3b1d7769ade413c3f8f7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2019, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}