{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MTE5MzUy", "number": 1275, "title": "Convert more decorators to tracers", "bodyText": "", "createdAt": "2020-09-28T12:50:50Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1275", "merged": true, "mergeCommit": {"oid": "7b1b399a2939823da379ee9df0ee4dc5b47775a4"}, "closed": true, "closedAt": "2020-09-29T06:41:10Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNSXOzgH2gAyNDk0MTE5MzUyOjZkYzY4YWNhMGI3NjRmZjhhNGJjOTZhZWI0Y2VmMGZiOTFhNzY4MTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNh5avAFqTQ5ODEyMDYyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6dc68aca0b764ff8a4bc96aeb4cef0fb91a76813", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6dc68aca0b764ff8a4bc96aeb4cef0fb91a76813", "committedDate": "2020-09-28T12:01:55Z", "message": "More decorators to tracers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd731c8a686c0ac55c88f7d7fc9b278974245bc9", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bd731c8a686c0ac55c88f7d7fc9b278974245bc9", "committedDate": "2020-09-28T12:02:22Z", "message": "Convert more decorators to tracers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b159675e72574ec9cc0d734be6acb0f7a3f30d37", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b159675e72574ec9cc0d734be6acb0f7a3f30d37", "committedDate": "2020-09-28T12:50:14Z", "message": "Fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3OTc4NDcx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1275#pullrequestreview-497978471", "createdAt": "2020-09-29T00:10:25Z", "commit": {"oid": "b159675e72574ec9cc0d734be6acb0f7a3f30d37"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMDoxMDoyNVrOHZT5ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMjozOTowNVrOHZWdKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMwMjQzNw==", "bodyText": "\ud83d\ude04\ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1275#discussion_r496302437", "createdAt": "2020-09-29T00:10:25Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/README.md", "diffHunk": "@@ -92,11 +92,6 @@ Of course, still adhering to OpenTelemetry\n `javax.servlet.RequestDispatcher.include` methods to create new `INTERNAL` spans around their\n invocations.\n \n-`ServletContextInstrumentation` instruments `javax.servlet.ServletContext.getRequestDispatcher` and\n-`javax.servlet.ServletContext.getNamedDispatcher`. The only job of this instrumentation is to\n-preserve the input parameter of those methods and to make that available for `RequestDispatcherInstrumentation`\n-described above. The latter uses that name for `dispatcher.target` span attribute.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b159675e72574ec9cc0d734be6acb0f7a3f30d37"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM0NDM2MQ==", "bodyText": "Should this be Kind.SERVER since it's a \"root\" span?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1275#discussion_r496344361", "createdAt": "2020-09-29T02:39:05Z", "author": {"login": "trask"}, "path": "instrumentation/spring/spring-scheduling-3.1/src/main/java/io/opentelemetry/instrumentation/auto/spring/scheduling/SpringSchedulingRunnableWrapper.java", "diffHunk": "@@ -34,18 +35,14 @@ public void run() {\n     if (runnable == null) {\n       return;\n     }\n-    Span span =\n-        TRACER.spanBuilder(SpringSchedulingDecorator.DECORATE.spanNameOnRun(runnable)).startSpan();\n-    SpringSchedulingDecorator.DECORATE.afterStart(span);\n+    Span span = TRACER.startSpan(TRACER.spanNameOnRun(runnable), Kind.INTERNAL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b159675e72574ec9cc0d734be6acb0f7a3f30d37"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MTIwNjIx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1275#pullrequestreview-498120621", "createdAt": "2020-09-29T06:07:46Z", "commit": {"oid": "b159675e72574ec9cc0d734be6acb0f7a3f30d37"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjowNzo0NlrOHZcMdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjowNzo0NlrOHZcMdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzODM5MQ==", "bodyText": "I don't think scheduling tasks are really server (no chance of ever being connected to a client). Seems ok to me.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1275#discussion_r496438391", "createdAt": "2020-09-29T06:07:46Z", "author": {"login": "anuraaga"}, "path": "instrumentation/spring/spring-scheduling-3.1/src/main/java/io/opentelemetry/instrumentation/auto/spring/scheduling/SpringSchedulingRunnableWrapper.java", "diffHunk": "@@ -34,18 +35,14 @@ public void run() {\n     if (runnable == null) {\n       return;\n     }\n-    Span span =\n-        TRACER.spanBuilder(SpringSchedulingDecorator.DECORATE.spanNameOnRun(runnable)).startSpan();\n-    SpringSchedulingDecorator.DECORATE.afterStart(span);\n+    Span span = TRACER.startSpan(TRACER.spanNameOnRun(runnable), Kind.INTERNAL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM0NDM2MQ=="}, "originalCommit": {"oid": "b159675e72574ec9cc0d734be6acb0f7a3f30d37"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2444, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}