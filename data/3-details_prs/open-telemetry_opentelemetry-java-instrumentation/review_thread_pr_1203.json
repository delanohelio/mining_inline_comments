{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MTI3NDk5", "number": 1203, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1NDozMFrOEjfcJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1NTo0MVrOEjfeJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjUwNzI0OnYy", "diffSide": "RIGHT", "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/HttpServerTracer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1NDozMFrOHR3rBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOToxMDozNFrOHR4TLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5OTk3Mw==", "bodyText": "Does IDEA recognise this annotation?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1203#discussion_r488499973", "createdAt": "2020-09-15T08:54:30Z", "author": {"login": "iNikem"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/HttpServerTracer.java", "diffHunk": "@@ -40,6 +40,7 @@\n import java.net.URISyntaxException;\n import java.util.Iterator;\n import java.util.List;\n+import org.checkerframework.checker.nullness.qual.Nullable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d318bd26bbef14929655cfb344e22bc68dedd82e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUxMDI1Mg==", "bodyText": "Yeah - IDEA (and every tool I've seen) recognizes any annotation named Nullable regardless of package :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1203#discussion_r488510252", "createdAt": "2020-09-15T09:10:34Z", "author": {"login": "anuraaga"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/HttpServerTracer.java", "diffHunk": "@@ -40,6 +40,7 @@\n import java.net.URISyntaxException;\n import java.util.Iterator;\n import java.util.List;\n+import org.checkerframework.checker.nullness.qual.Nullable;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5OTk3Mw=="}, "originalCommit": {"oid": "d318bd26bbef14929655cfb344e22bc68dedd82e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjUxMjM3OnYy", "diffSide": "RIGHT", "path": "gradle/java.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1NTo0MVrOHR3uGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOToxMjo0M1rOHR4Y1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMDc2Mw==", "bodyText": "My experience with errorprone from Java repo is very negative. I hope it will not became such an annoying asshole as it is over there.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1203#discussion_r488500763", "createdAt": "2020-09-15T08:55:41Z", "author": {"login": "iNikem"}, "path": "gradle/java.gradle", "diffHunk": "@@ -305,4 +307,24 @@ tasks.withType(Test).configureEach {\n tasks.withType(AbstractArchiveTask) {\n   preserveFileTimestamps = false\n   reproducibleFileOrder = true\n-}\n\\ No newline at end of file\n+}\n+\n+plugins.withId('net.ltgt.errorprone') {\n+  dependencies {\n+    annotationProcessor group: \"com.uber.nullaway\", name: \"nullaway\", version: versions.nullaway\n+    errorprone group: \"com.google.errorprone\", name: \"error_prone_core\", version: versions.errorprone\n+  }\n+\n+  tasks.withType(JavaCompile) {\n+    if (!name.toLowerCase().contains(\"test\")) {\n+      options.errorprone {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d318bd26bbef14929655cfb344e22bc68dedd82e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUxMTcwMg==", "bodyText": "You'll see I'm already fairly liberal in disabling checks that are annoying :) There are some checks of questionable value that we can disable when we run into them, on the flip side I have had a few bad bugs caught by it before so do like it in general. Worst case, we'll disableAllChecks to only have nullness checking activated.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1203#discussion_r488511702", "createdAt": "2020-09-15T09:12:43Z", "author": {"login": "anuraaga"}, "path": "gradle/java.gradle", "diffHunk": "@@ -305,4 +307,24 @@ tasks.withType(Test).configureEach {\n tasks.withType(AbstractArchiveTask) {\n   preserveFileTimestamps = false\n   reproducibleFileOrder = true\n-}\n\\ No newline at end of file\n+}\n+\n+plugins.withId('net.ltgt.errorprone') {\n+  dependencies {\n+    annotationProcessor group: \"com.uber.nullaway\", name: \"nullaway\", version: versions.nullaway\n+    errorprone group: \"com.google.errorprone\", name: \"error_prone_core\", version: versions.errorprone\n+  }\n+\n+  tasks.withType(JavaCompile) {\n+    if (!name.toLowerCase().contains(\"test\")) {\n+      options.errorprone {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMDc2Mw=="}, "originalCommit": {"oid": "d318bd26bbef14929655cfb344e22bc68dedd82e"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4915, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}