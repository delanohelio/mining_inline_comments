{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MDYzMjcz", "number": 393, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMDoxMzowMlrOD7LRMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDo1NzowNFrOD8pYzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzc3MjAzOnYy", "diffSide": "RIGHT", "path": "smoke-tests/src/main/groovy/io/opentelemetry/smoketest/AbstractSmokeTest.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMDoxMzowMlrOGTV1EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMDoxMzowMlrOGTV1EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjkzMzc3Ng==", "bodyText": "I like this solution a lot.  Much cleaner than anything I had suggested.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/393#discussion_r422933776", "createdAt": "2020-05-11T10:13:02Z", "author": {"login": "johnbley"}, "path": "smoke-tests/src/main/groovy/io/opentelemetry/smoketest/AbstractSmokeTest.groovy", "diffHunk": "@@ -70,6 +70,11 @@ abstract class AbstractSmokeTest extends Specification {\n     processBuilder.environment().put(\"JAVA_HOME\", System.getProperty(\"java.home\"))\n     processBuilder.environment().put(\"DD_API_KEY\", API_KEY)\n \n+//    // Setting configuration variables of batch span processor through env vars\n+//    // This config is to immediately flush a batch of 1 span with delay of 10ms\n+    processBuilder.environment().put(\"OTEL_BSP_MAX_EXPORT_BATCH\", \"1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff724f481a9aadd3bb6f5d5d93d0bceb335f70bb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTE4OTI4OnYy", "diffSide": "RIGHT", "path": "smoke-tests/play/src/test/groovy/io/opentelemetry/smoketest/PlaySmokeTest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDo1NjowMlrOGVt4pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDo1NjowMlrOGVt4pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQyNTA2MQ==", "bodyText": "still getting failures on CI, hoping we just need to bump this more\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ], 20000)\n          \n          \n            \n                ], 30000)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/393#discussion_r425425061", "createdAt": "2020-05-14T20:56:02Z", "author": {"login": "trask"}, "path": "smoke-tests/play/src/test/groovy/io/opentelemetry/smoketest/PlaySmokeTest.groovy", "diffHunk": "@@ -45,7 +45,7 @@ class PlaySmokeTest extends AbstractServerSmokeTest {\n     setup:\n     def spanCounter = new SpanCounter(logfile, [\n       (HTTP_REQUEST_SPAN): 2,\n-    ], 10000)\n+    ], 20000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14bf4bdc16f71a7e61c065a3b491c9326635ffd6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTE5MjQ0OnYy", "diffSide": "RIGHT", "path": "smoke-tests/springboot/src/test/groovy/io/opentelemetry/smoketest/SpringBootSmokeTest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDo1NzowNFrOGVt6yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDo1NzowNFrOGVt6yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQyNTYwOA==", "bodyText": "still getting failures on CI, hoping we just need to bump this more\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ], 20000)\n          \n          \n            \n                ], 30000)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/393#discussion_r425425608", "createdAt": "2020-05-14T20:57:04Z", "author": {"login": "trask"}, "path": "smoke-tests/springboot/src/test/groovy/io/opentelemetry/smoketest/SpringBootSmokeTest.groovy", "diffHunk": "@@ -39,7 +39,7 @@ class SpringBootSmokeTest extends AbstractServerSmokeTest {\n     def spanCounter = new SpanCounter(logfile, [\n       (HANDLER_SPAN): 1,\n       (SERVLET_SPAN): 1,\n-    ], 10000)\n+    ], 20000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14bf4bdc16f71a7e61c065a3b491c9326635ffd6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 430, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}