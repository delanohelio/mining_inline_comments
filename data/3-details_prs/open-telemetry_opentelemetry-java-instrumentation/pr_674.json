{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MDIxMDEx", "number": 674, "title": "Zipkin, Jaeger: use standard exporter configuration from OpenTelemetry Java SDK", "bodyText": "fix #531", "createdAt": "2020-07-13T04:01:22Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674", "merged": true, "mergeCommit": {"oid": "c2ef6ebd2dfbe43f7319fa614a27cd3ef2343c60"}, "closed": true, "closedAt": "2020-07-13T05:38:12Z", "author": {"login": "malafeev"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0ZU_hAH2gAyNDQ4MDIxMDExOmVjY2MyYzcxZjliN2M5ZDJlYjRmOTg4YzI4M2I0YTk2YmYyYmVmMmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0aEZsgFqTQ0Njk3OTYyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eccc2c71f9b7c9d2eb4f988c283b4a96bf2bef2a", "author": {"user": {"login": "malafeev", "name": "Sergei Malafeev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/eccc2c71f9b7c9d2eb4f988c283b4a96bf2bef2a", "committedDate": "2020-07-13T04:00:42Z", "message": "#531 Zipkin, Jaeger: use standard exporter configuration from OpenTelemetry Java SDK\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTY4NDcy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#pullrequestreview-446968472", "createdAt": "2020-07-13T04:04:43Z", "commit": {"oid": "eccc2c71f9b7c9d2eb4f988c283b4a96bf2bef2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDowNDo0M1rOGwaxBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDowNDo0M1rOGwaxBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzM2Nw==", "bodyText": "I forgot about this, I think we need to force OkHttpSender here due to #375 (comment)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r453423367", "createdAt": "2020-07-13T04:04:43Z", "author": {"login": "trask"}, "path": "auto-exporters/zipkin/src/main/java/io/opentelemetry/auto/exporters/zipkin/ZipkinExporterFactory.java", "diffHunk": "@@ -23,19 +23,12 @@\n import zipkin2.reporter.okhttp3.OkHttpSender;\n \n public class ZipkinExporterFactory implements SpanExporterFactory {\n-  private static final String ZIPKIN_ENDPOINT = \"zipkin.endpoint\";\n-  private static final String DEFAULT_ZIPKIN_ENDPOINT = \"http://localhost:9411/api/v2/spans\";\n-\n-  private static final String ZIPKIN_SERVICE_NAME = \"zipkin.service.name\";\n-  private static final String DEFAULT_ZIPKIN_SERVICE_NAME = \"(unknown service)\";\n \n   @Override\n   public SpanExporter fromConfig(Config config) {\n-    final String zipkinEndpoint = config.getString(ZIPKIN_ENDPOINT, DEFAULT_ZIPKIN_ENDPOINT);\n-    final String serviceName = config.getString(ZIPKIN_SERVICE_NAME, DEFAULT_ZIPKIN_SERVICE_NAME);\n     return ZipkinSpanExporter.newBuilder()\n-        .setSender(OkHttpSender.create(zipkinEndpoint))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eccc2c71f9b7c9d2eb4f988c283b4a96bf2bef2a"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b", "author": {"user": {"login": "malafeev", "name": "Sergei Malafeev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b", "committedDate": "2020-07-13T04:08:01Z", "message": "#531 remove unused import\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTcxNTk1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#pullrequestreview-446971595", "createdAt": "2020-07-13T04:18:16Z", "commit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDoxODoxN1rOGwa8Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDoxODoxN1rOGwa8Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNjI3NQ==", "bodyText": "Wrong format of System property name", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r453426275", "createdAt": "2020-07-13T04:18:17Z", "author": {"login": "iNikem"}, "path": "README.md", "diffHunk": "@@ -57,17 +57,17 @@ only supports gRPC as its communications protocol.\n | System property                  | Environment variable             | Purpose                                                              |\n |----------------------------------|----------------------------------|----------------------------------------------------------------------|\n | ota.exporter=jaeger              | OTA_EXPORTER=jaeger              | To select Jaeger exporter                                            |\n-| ota.exporter.jaeger.endpoint     | OTA_EXPORTER_JAEGER_ENDPOINT     | The Jaeger endpoint to connect to. Currently only gRPC is supported. |\n-| ota.exporter.jaeger.service.name | OTA_EXPORTER_JAEGER_SERVICE_NAME | The service name of this JVM instance                                |\n+| JAEGER_ENDPOINT                  | JAEGER_ENDPOINT                  | The Jaeger endpoint to connect to. Currently only gRPC is supported. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTc1Mzg2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#pullrequestreview-446975386", "createdAt": "2020-07-13T04:34:37Z", "commit": {"oid": "6c45e19828c6c1a7e4e81db18ad5f433cbd6d14b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85b63de06ce9f3f528a2761af07373939d61b435", "author": {"user": {"login": "malafeev", "name": "Sergei Malafeev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/85b63de06ce9f3f528a2761af07373939d61b435", "committedDate": "2020-07-13T04:39:13Z", "message": "#531 use OkHttpSender for zipkin exporter\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTc3MjM5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#pullrequestreview-446977239", "createdAt": "2020-07-13T04:42:42Z", "commit": {"oid": "85b63de06ce9f3f528a2761af07373939d61b435"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDo0Mjo0MlrOGwbP-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDo0Mjo0MlrOGwbP-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzMTI5MA==", "bodyText": "Anyways except for when the JAR size is extremely limited, Zipkin always recommends using OkHttp in production since performance is way better.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#discussion_r453431290", "createdAt": "2020-07-13T04:42:42Z", "author": {"login": "anuraaga"}, "path": "auto-exporters/zipkin/src/main/java/io/opentelemetry/auto/exporters/zipkin/ZipkinExporterFactory.java", "diffHunk": "@@ -23,19 +23,12 @@\n import zipkin2.reporter.okhttp3.OkHttpSender;\n \n public class ZipkinExporterFactory implements SpanExporterFactory {\n-  private static final String ZIPKIN_ENDPOINT = \"zipkin.endpoint\";\n-  private static final String DEFAULT_ZIPKIN_ENDPOINT = \"http://localhost:9411/api/v2/spans\";\n-\n-  private static final String ZIPKIN_SERVICE_NAME = \"zipkin.service.name\";\n-  private static final String DEFAULT_ZIPKIN_SERVICE_NAME = \"(unknown service)\";\n \n   @Override\n   public SpanExporter fromConfig(Config config) {\n-    final String zipkinEndpoint = config.getString(ZIPKIN_ENDPOINT, DEFAULT_ZIPKIN_ENDPOINT);\n-    final String serviceName = config.getString(ZIPKIN_SERVICE_NAME, DEFAULT_ZIPKIN_SERVICE_NAME);\n     return ZipkinSpanExporter.newBuilder()\n-        .setSender(OkHttpSender.create(zipkinEndpoint))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzM2Nw=="}, "originalCommit": {"oid": "eccc2c71f9b7c9d2eb4f988c283b4a96bf2bef2a"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTc5NjIy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/674#pullrequestreview-446979622", "createdAt": "2020-07-13T04:52:29Z", "commit": {"oid": "85b63de06ce9f3f528a2761af07373939d61b435"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3098, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}