{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2ODIwMjA5", "number": 1576, "title": "Refactor Instrumenters into InstrumentationModules - R, S, T, V", "bodyText": "Another part of #1274\nRefactored all instrumentations whose names begin with R, S, T or V", "createdAt": "2020-11-06T15:31:34Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1576", "merged": true, "mergeCommit": {"oid": "9d2db827b9bed7238d00ea9450ca46b1367912c9"}, "closed": true, "closedAt": "2020-11-10T02:48:53Z", "author": {"login": "mateuszrzeszutek"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ4_zdgBqjM5Njc4MTAyNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbAB8lgFqTUyNjgwNDIyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "99db6f999586444273966a796902ffe89e5c14eb", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/99db6f999586444273966a796902ffe89e5c14eb", "committedDate": "2020-11-06T15:19:41Z", "message": "Refactor Instrumenters into InstrumentationModules - R, S, T, V"}, "afterCommit": {"oid": "23fc2e5f283f918c4d22fb84123dbb34d3a4b658", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/23fc2e5f283f918c4d22fb84123dbb34d3a4b658", "committedDate": "2020-11-06T15:49:32Z", "message": "Refactor Instrumenters into InstrumentationModules - R, S, T, V"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23fc2e5f283f918c4d22fb84123dbb34d3a4b658", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/23fc2e5f283f918c4d22fb84123dbb34d3a4b658", "committedDate": "2020-11-06T15:49:32Z", "message": "Refactor Instrumenters into InstrumentationModules - R, S, T, V"}, "afterCommit": {"oid": "6358679579bba5a40c0669bc2b8d746c29c2d708", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6358679579bba5a40c0669bc2b8d746c29c2d708", "committedDate": "2020-11-06T17:21:21Z", "message": "Refactor Instrumenters into InstrumentationModules - R, S, T, V"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfbeebe463a2b4af358c35b54702ab787a2a3c98", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dfbeebe463a2b4af358c35b54702ab787a2a3c98", "committedDate": "2020-11-09T10:41:25Z", "message": "Refactor Instrumenters into InstrumentationModules - R, S, T, V"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6358679579bba5a40c0669bc2b8d746c29c2d708", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6358679579bba5a40c0669bc2b8d746c29c2d708", "committedDate": "2020-11-06T17:21:21Z", "message": "Refactor Instrumenters into InstrumentationModules - R, S, T, V"}, "afterCommit": {"oid": "dfbeebe463a2b4af358c35b54702ab787a2a3c98", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dfbeebe463a2b4af358c35b54702ab787a2a3c98", "committedDate": "2020-11-09T10:41:25Z", "message": "Refactor Instrumenters into InstrumentationModules - R, S, T, V"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2ODA0MjI1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1576#pullrequestreview-526804225", "createdAt": "2020-11-10T02:23:37Z", "commit": {"oid": "dfbeebe463a2b4af358c35b54702ab787a2a3c98"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMjoyMzozN1rOHwJLxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMjozMDoxM1rOHwJTeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI0NDE2NA==", "bodyText": "nice to get rid of these \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1576#discussion_r520244164", "createdAt": "2020-11-10T02:23:37Z", "author": {"login": "trask"}, "path": "instrumentation/rabbitmq-2.7/src/main/java/io/opentelemetry/javaagent/instrumentation/rabbitmq/amqp/RabbitCommandInstrumentation.java", "diffHunk": "@@ -72,14 +55,5 @@ public static void setSpanNameAddHeaders(@Advice.This Command command) {\n         tracer().onCommand(span, command);\n       }\n     }\n-\n-    /**\n-     * This instrumentation will match with 2.6, but the channel instrumentation only matches with\n-     * 2.7 because of TracedDelegatingConsumer. This unused method is added to ensure consistent\n-     * muzzle validation by preventing match with 2.6.\n-     */\n-    public static void muzzleCheck(TracedDelegatingConsumer consumer) {\n-      consumer.handleRecoverOk(null);\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfbeebe463a2b4af358c35b54702ab787a2a3c98"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI0NTc2NA==", "bodyText": "the splitting up of classLoaderMatcher() turned out nice \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1576#discussion_r520245764", "createdAt": "2020-11-10T02:29:03Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/servlet-2.2/src/main/java/io/opentelemetry/javaagent/instrumentation/servlet/v2_2/ServletAndFilterChainInstrumentation.java", "diffHunk": "@@ -11,52 +11,27 @@\n import static java.util.Collections.singletonMap;\n import static net.bytebuddy.matcher.ElementMatchers.isPublic;\n import static net.bytebuddy.matcher.ElementMatchers.named;\n-import static net.bytebuddy.matcher.ElementMatchers.not;\n import static net.bytebuddy.matcher.ElementMatchers.takesArgument;\n \n-import com.google.auto.service.AutoService;\n-import io.opentelemetry.javaagent.tooling.Instrumenter;\n+import io.opentelemetry.javaagent.tooling.TypeInstrumentation;\n import java.util.Map;\n import net.bytebuddy.description.method.MethodDescription;\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n-@AutoService(Instrumenter.class)\n-public final class Servlet2Instrumentation extends Instrumenter.Default {\n+final class ServletAndFilterChainInstrumentation implements TypeInstrumentation {\n \n-  public Servlet2Instrumentation() {\n-    super(\"servlet\", \"servlet-2\");\n-  }\n-\n-  // this is required to make sure servlet 2 instrumentation won't apply to servlet 3\n   @Override\n   public ElementMatcher<ClassLoader> classLoaderMatcher() {\n     // Optimization for expensive typeMatcher.\n-    return hasClassesNamed(\"javax.servlet.http.HttpServlet\")\n-        .and(not(hasClassesNamed(\"javax.servlet.AsyncEvent\", \"javax.servlet.AsyncListener\")));\n+    return hasClassesNamed(\"javax.servlet.http.HttpServlet\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfbeebe463a2b4af358c35b54702ab787a2a3c98"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI0NjEzNg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1576#discussion_r520246136", "createdAt": "2020-11-10T02:30:13Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/servlet-common/servlet-common.gradle", "diffHunk": "@@ -4,7 +4,12 @@ muzzle {\n   pass {\n     group = \"javax.servlet\"\n     module = \"servlet-api\"\n-    versions = \"[2.2,)\"\n+    versions = \"(0,)\"\n+  }\n+  pass {\n+    group = \"javax.servlet\"\n+    module = 'javax.servlet-api'\n+    versions = \"[3.0,)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfbeebe463a2b4af358c35b54702ab787a2a3c98"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2186, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}