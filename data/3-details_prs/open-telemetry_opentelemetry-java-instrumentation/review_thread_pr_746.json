{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0Mzc4NzM3", "number": 746, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0OTowN1rOEQtd4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0OTowN1rOEQtd4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTU3NjAyOnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/trace/Bridging.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0OTowN1rOG1A83Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoyNjowNFrOG1WCdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MzI5Mw==", "bodyText": "unfortunately InstrumentationContext is not documented yet (#588), but this won't work here. InstrumentationContext can only be used inside of advice classes because we change those call sites while injecting the advice, e.g. https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/agent-tooling/src/main/java/io/opentelemetry/auto/tooling/context/FieldBackedProvider.java#L82-L86", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/746#discussion_r458243293", "createdAt": "2020-07-21T16:49:07Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/trace/Bridging.java", "diffHunk": "@@ -169,6 +172,12 @@ public void consume(String key, AttributeValue attributeValue) {\n         .build();\n   }\n \n+  public static io.grpc.Context toShaded(Context context) {\n+    ContextStore<Context, io.grpc.Context> contextStore =\n+        InstrumentationContext.get(Context.class, io.grpc.Context.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b3170472ed9001e5d05da2f6c3dc672f70f1bfc"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4NDY5Mw==", "bodyText": "Oh bummer. Any pointer on how to convert this Context? :) If it's a hard problem, I can ask about reverting the API change, it seems like a very minor convenience.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/746#discussion_r458484693", "createdAt": "2020-07-22T01:44:18Z", "author": {"login": "anuraaga"}, "path": "instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/trace/Bridging.java", "diffHunk": "@@ -169,6 +172,12 @@ public void consume(String key, AttributeValue attributeValue) {\n         .build();\n   }\n \n+  public static io.grpc.Context toShaded(Context context) {\n+    ContextStore<Context, io.grpc.Context> contextStore =\n+        InstrumentationContext.get(Context.class, io.grpc.Context.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MzI5Mw=="}, "originalCommit": {"oid": "2b3170472ed9001e5d05da2f6c3dc672f70f1bfc"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxMTAxMw==", "bodyText": "for this PR i suggest\npassing ContextStore all the way down to the Span.Builder starting here: https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/OpenTelemetryApiInstrumentation.java#L68\nsimilar to https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/OpenTelemetryApiInstrumentation.java#L90\nand let's discuss what to do in the future in #752 \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/746#discussion_r458511013", "createdAt": "2020-07-22T03:24:04Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/trace/Bridging.java", "diffHunk": "@@ -169,6 +172,12 @@ public void consume(String key, AttributeValue attributeValue) {\n         .build();\n   }\n \n+  public static io.grpc.Context toShaded(Context context) {\n+    ContextStore<Context, io.grpc.Context> contextStore =\n+        InstrumentationContext.get(Context.class, io.grpc.Context.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MzI5Mw=="}, "originalCommit": {"oid": "2b3170472ed9001e5d05da2f6c3dc672f70f1bfc"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4ODc5MQ==", "bodyText": "Thanks, plumbed", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/746#discussion_r458588791", "createdAt": "2020-07-22T07:26:04Z", "author": {"login": "anuraaga"}, "path": "instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/trace/Bridging.java", "diffHunk": "@@ -169,6 +172,12 @@ public void consume(String key, AttributeValue attributeValue) {\n         .build();\n   }\n \n+  public static io.grpc.Context toShaded(Context context) {\n+    ContextStore<Context, io.grpc.Context> contextStore =\n+        InstrumentationContext.get(Context.class, io.grpc.Context.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MzI5Mw=="}, "originalCommit": {"oid": "2b3170472ed9001e5d05da2f6c3dc672f70f1bfc"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 120, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}