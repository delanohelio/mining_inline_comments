{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3MjI5OTkz", "number": 1762, "title": "Fix ByteBuddy tasks failing on daemon reuse.", "bodyText": "Fixes #1674. The issue was caused by a global JarFile cache in the JDK which caches JarFile instances with path as key globally with no regard to file modification times. This caused the same instance to be used across several builds in the daemon, which breaks when the file is rebuilt in between two invocations of the same task. The fix is to disable the use of cache when loading class file streams in ReferenceCollector.", "createdAt": "2020-11-25T07:03:12Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1762", "merged": true, "mergeCommit": {"oid": "d03c3d0d7e264495ec1591a91e965786463e772d"}, "closed": true, "closedAt": "2020-11-25T13:01:33Z", "author": {"login": "agoallikmaa"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdf4vW_AH2gAyNTI3MjI5OTkzOjA4YjFmOTM2Y2ZiYTI4ODc0YzA5Y2NkOTJhMTNhMWU4NGZlYmEzNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdf6nalAFqTUzODI4Mzc4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "08b1f936cfba28874c09ccd92a13a1e84feba370", "author": {"user": {"login": "agoallikmaa", "name": "Ago Allikmaa"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/08b1f936cfba28874c09ccd92a13a1e84feba370", "committedDate": "2020-11-25T06:55:18Z", "message": "Fix ByteBuddy tasks failing on daemon reuse."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MjE3MDcy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1762#pullrequestreview-538217072", "createdAt": "2020-11-25T07:29:35Z", "commit": {"oid": "08b1f936cfba28874c09ccd92a13a1e84feba370"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNzoyOTozNVrOH5mNfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNzoyOTozNVrOH5mNfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE1NjkyNA==", "bodyText": "Magic!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1762#discussion_r530156924", "createdAt": "2020-11-25T07:29:35Z", "author": {"login": "anuraaga"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/collector/ReferenceCollector.java", "diffHunk": "@@ -91,6 +85,24 @@ public void collectReferencesFrom(String adviceClassName) {\n     }\n   }\n \n+  private static InputStream getClassFileStream(String className) throws IOException {\n+    URLConnection connection =\n+        checkNotNull(\n+                ReferenceCollector.class\n+                    .getClassLoader()\n+                    .getResource(Utils.getResourceName(className)),\n+                \"Couldn't find class file %s\",\n+                className)\n+            .openConnection();\n+\n+    // Since the JarFile cache is not per class loader, but global with path as key, using cache may\n+    // cause the same instance of JarFile being used for consecutive builds, even if the file has\n+    // been changed. There is still another cache in ZipFile.Source which checks last modified time\n+    // as well, so the zip index is not scanned again on every class.\n+    connection.setUseCaches(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08b1f936cfba28874c09ccd92a13a1e84feba370"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MjQxMDI3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1762#pullrequestreview-538241027", "createdAt": "2020-11-25T08:09:43Z", "commit": {"oid": "08b1f936cfba28874c09ccd92a13a1e84feba370"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MjgzNzgy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1762#pullrequestreview-538283782", "createdAt": "2020-11-25T09:06:26Z", "commit": {"oid": "08b1f936cfba28874c09ccd92a13a1e84feba370"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2080, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}