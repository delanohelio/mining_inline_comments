{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMzA4Mjg4", "number": 433, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNToyNTowOVrOD_LCmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDozNzo1MlrOD_tCbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTY3NzcxOnYy", "diffSide": "RIGHT", "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/InstrumentationContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNToyNTowOVrOGZsu3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMTo1NjoxN1rOGaMbRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDQ3Ng==", "bodyText": "Why? What happens otherwise?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r429600476", "createdAt": "2020-05-24T05:25:09Z", "author": {"login": "iNikem"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/InstrumentationContext.java", "diffHunk": "@@ -28,6 +28,8 @@ private InstrumentationContext() {}\n    * <p>However, the implementation is actually provided by bytecode transformation for performance\n    * reasons.\n    *\n+   * <p>This method must only be called within an Advice class.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExOTc1MA==", "bodyText": "added explanation", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430119750", "createdAt": "2020-05-26T01:56:17Z", "author": {"login": "trask"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/InstrumentationContext.java", "diffHunk": "@@ -28,6 +28,8 @@ private InstrumentationContext() {}\n    * <p>However, the implementation is actually provided by bytecode transformation for performance\n    * reasons.\n    *\n+   * <p>This method must only be called within an Advice class.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDQ3Ng=="}, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTY3ODEwOnYy", "diffSide": "RIGHT", "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerDecorator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNToyNjoxM1rOGZsvFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMToxMzo0MVrOGaL7sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDUzMg==", "bodyText": "Seems unused?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r429600532", "createdAt": "2020-05-24T05:26:13Z", "author": {"login": "iNikem"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerDecorator.java", "diffHunk": "@@ -22,13 +22,20 @@\n import io.opentelemetry.trace.Status;\n import java.net.URI;\n import java.net.URISyntaxException;\n+import java.util.regex.Pattern;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n public abstract class HttpServerDecorator<REQUEST, CONNECTION, RESPONSE> extends ServerDecorator {\n   public static final String SPAN_ATTRIBUTE = \"io.opentelemetry.auto.span\";\n+  public static final String RESPONSE_ATTRIBUTE = \"io.opentelemetry.auto.response\";\n   public static final String DEFAULT_SPAN_NAME = \"HTTP request\";\n \n+  // Source: https://www.regextester.com/22\n+  private static final Pattern VALID_IPV4_ADDRESS =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExMTY2NQ==", "bodyText": "removed", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430111665", "createdAt": "2020-05-26T01:13:41Z", "author": {"login": "trask"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerDecorator.java", "diffHunk": "@@ -22,13 +22,20 @@\n import io.opentelemetry.trace.Status;\n import java.net.URI;\n import java.net.URISyntaxException;\n+import java.util.regex.Pattern;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n public abstract class HttpServerDecorator<REQUEST, CONNECTION, RESPONSE> extends ServerDecorator {\n   public static final String SPAN_ATTRIBUTE = \"io.opentelemetry.auto.span\";\n+  public static final String RESPONSE_ATTRIBUTE = \"io.opentelemetry.auto.response\";\n   public static final String DEFAULT_SPAN_NAME = \"HTTP request\";\n \n+  // Source: https://www.regextester.com/22\n+  private static final Pattern VALID_IPV4_ADDRESS =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDUzMg=="}, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTY3OTE2OnYy", "diffSide": "RIGHT", "path": "agent-tooling/src/main/java/io/opentelemetry/auto/tooling/HelperInjector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNToyOToyMFrOGZsvlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMToxOToyMVrOGaL_tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDY2Mg==", "bodyText": "I don\u2019t think we need these ifs polluting the code", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r429600662", "createdAt": "2020-05-24T05:29:20Z", "author": {"login": "iNikem"}, "path": "agent-tooling/src/main/java/io/opentelemetry/auto/tooling/HelperInjector.java", "diffHunk": "@@ -142,12 +142,14 @@ public static HelperInjector forDynamicTypes(\n             helperModules.add(new WeakReference<>(javaModule.unwrap()));\n           }\n         } catch (final Exception e) {\n-          log.error(\n-              \"Error preparing helpers while processing {} for {}. Failed to inject helper classes into instance {}\",\n-              typeDescription,\n-              requestingName,\n-              classLoader,\n-              e);\n+          if (log.isErrorEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExMjY5NQ==", "bodyText": "Did you see DataDog/dd-trace-java#1466? I'm not opposed to it in this case for avoiding memory allocation.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430112695", "createdAt": "2020-05-26T01:19:21Z", "author": {"login": "trask"}, "path": "agent-tooling/src/main/java/io/opentelemetry/auto/tooling/HelperInjector.java", "diffHunk": "@@ -142,12 +142,14 @@ public static HelperInjector forDynamicTypes(\n             helperModules.add(new WeakReference<>(javaModule.unwrap()));\n           }\n         } catch (final Exception e) {\n-          log.error(\n-              \"Error preparing helpers while processing {} for {}. Failed to inject helper classes into instance {}\",\n-              typeDescription,\n-              requestingName,\n-              classLoader,\n-              e);\n+          if (log.isErrorEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDY2Mg=="}, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTY3OTc2OnYy", "diffSide": "RIGHT", "path": "buildSrc/src/main/groovy/MuzzlePlugin.groovy", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNTozMDo0N1rOGZsv4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDozNTo0M1rOGahSAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDczNw==", "bodyText": "First remove, then shuffle", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r429600737", "createdAt": "2020-05-24T05:30:47Z", "author": {"login": "iNikem"}, "path": "buildSrc/src/main/groovy/MuzzlePlugin.groovy", "diffHunk": "@@ -261,6 +270,21 @@ class MuzzlePlugin implements Plugin<Project> {\n     return inverseDirectives\n   }\n \n+  private static void limitLargeRanges(VersionRangeResult result, Set<Version> versions, Set<String> skipVersions) {\n+    List<Version> copy = new ArrayList<>(versions)\n+    Collections.shuffle(copy)\n+    copy.removeAll(skipVersions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExMTU5NQ==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430111595", "createdAt": "2020-05-26T01:13:13Z", "author": {"login": "trask"}, "path": "buildSrc/src/main/groovy/MuzzlePlugin.groovy", "diffHunk": "@@ -261,6 +270,21 @@ class MuzzlePlugin implements Plugin<Project> {\n     return inverseDirectives\n   }\n \n+  private static void limitLargeRanges(VersionRangeResult result, Set<Version> versions, Set<String> skipVersions) {\n+    List<Version> copy = new ArrayList<>(versions)\n+    Collections.shuffle(copy)\n+    copy.removeAll(skipVersions)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDczNw=="}, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2MTQ0Mg==", "bodyText": "oops... good idea", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430461442", "createdAt": "2020-05-26T14:35:43Z", "author": {"login": "tylerbenson"}, "path": "buildSrc/src/main/groovy/MuzzlePlugin.groovy", "diffHunk": "@@ -261,6 +270,21 @@ class MuzzlePlugin implements Plugin<Project> {\n     return inverseDirectives\n   }\n \n+  private static void limitLargeRanges(VersionRangeResult result, Set<Version> versions, Set<String> skipVersions) {\n+    List<Version> copy = new ArrayList<>(versions)\n+    Collections.shuffle(copy)\n+    copy.removeAll(skipVersions)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDczNw=="}, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTY4MzUyOnYy", "diffSide": "RIGHT", "path": "instrumentation/grizzly-http-2.3.20/grizzly-http-2.3.20.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNTo0MTozNVrOGZsxtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNTo0OToxNVrOGaPbaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMTIwNg==", "bodyText": "Shouldn\u2019t instrumentation be called grizzly-http-2.3?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r429601206", "createdAt": "2020-05-24T05:41:35Z", "author": {"login": "iNikem"}, "path": "instrumentation/grizzly-http-2.3.20/grizzly-http-2.3.20.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+apply from: \"${rootDir}/gradle/instrumentation.gradle\"\n+apply plugin: 'org.unbroken-dome.test-sets'\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE2ODkzNg==", "bodyText": "yes! it took a little work (18fdac6), but worth it to keep the version support story simple", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430168936", "createdAt": "2020-05-26T05:49:15Z", "author": {"login": "trask"}, "path": "instrumentation/grizzly-http-2.3.20/grizzly-http-2.3.20.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+apply from: \"${rootDir}/gradle/instrumentation.gradle\"\n+apply plugin: 'org.unbroken-dome.test-sets'\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMTIwNg=="}, "originalCommit": {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTI0NzgwOnYy", "diffSide": "LEFT", "path": ".circleci/config.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDozNzo1MlrOGahYYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxODoyODo1NlrOGarAPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2MzA3NA==", "bodyText": "Since you still have the version number set in trace-java.gradle, you probably don't need to make this change.  We rely purely on tags now for releases, so that file doesn't change which is why we have to be more careful.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430463074", "createdAt": "2020-05-26T14:37:52Z", "author": {"login": "tylerbenson"}, "path": ".circleci/config.yml", "diffHunk": "@@ -44,7 +44,7 @@ jobs:\n             - workspace\n \n       - save_cache:\n-          key: trace-java-{{ checksum \"trace-java.gradle\" }}-{{ .Branch }}-{{ .Revision }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58382e2248f1d0f5061f20a6fda05e514af81cf4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYyMDczNA==", "bodyText": "Oh, good to know. @iNikem happens to be removing the version number in trace-java.gradle right now in #403.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430620734", "createdAt": "2020-05-26T18:28:56Z", "author": {"login": "trask"}, "path": ".circleci/config.yml", "diffHunk": "@@ -44,7 +44,7 @@ jobs:\n             - workspace\n \n       - save_cache:\n-          key: trace-java-{{ checksum \"trace-java.gradle\" }}-{{ .Branch }}-{{ .Revision }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2MzA3NA=="}, "originalCommit": {"oid": "58382e2248f1d0f5061f20a6fda05e514af81cf4"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 456, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}