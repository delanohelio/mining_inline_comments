{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxODkzOTU5", "number": 428, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTozNjo0N1rOD_DaVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxOTo0NDoxOFrOD_daKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDQyNzcyOnYy", "diffSide": "RIGHT", "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTozNjo0N1rOGZh7-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTozNjo0N1rOGZh7-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyMzYwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Please read README.md to understand what is this instrumentation.\n          \n          \n            \n            // Please read this instrumentation's README.md to understand what is this instrumentation.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r429423609", "createdAt": "2020-05-22T19:36:47Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "diffHunk": "@@ -31,13 +31,15 @@\n import io.opentelemetry.auto.instrumentation.api.SpanWithScope;\n import io.opentelemetry.auto.tooling.Instrumenter;\n import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.Span.Kind;\n import java.lang.reflect.Method;\n import java.util.Map;\n import net.bytebuddy.asm.Advice;\n import net.bytebuddy.description.method.MethodDescription;\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n+// Please read README.md to understand what is this instrumentation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDQzNzUxOnYy", "diffSide": "RIGHT", "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTo0MTowMFrOGZiCPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTo0MTowMFrOGZiCPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNTIxMw==", "bodyText": "I think this should be an INTERNAL span, from https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/api.md#spankind:\n\nINTERNAL Default value. Indicates that the span represents an internal operation within an application, as opposed to an operations with remote parents or children.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r429425213", "createdAt": "2020-05-22T19:41:00Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "diffHunk": "@@ -93,7 +95,11 @@ public static SpanWithScope start(@Advice.Origin final Method method) {\n       }\n \n       // Here we use the Method instead of \"this.class.name\" to distinguish calls to \"super\".\n-      final Span span = TRACER.spanBuilder(DECORATE.spanNameForMethod(method)).startSpan();\n+      final Span span =\n+          TRACER\n+              .spanBuilder(DECORATE.spanNameForMethod(method))\n+              .setSpanKind(Kind.SERVER)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDQ0MjcwOnYy", "diffSide": "RIGHT", "path": "instrumentation/servlet/request-2.3/src/main/java/io/opentelemetry/auto/instrumentation/servlet/v2_3/Servlet2Advice.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTo0MzoxN1rOGZiFTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTo0MzoxN1rOGZiFTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNTk5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // TODO this logic should be moved to Servle2 specific Decorator\n          \n          \n            \n                // TODO this logic should be moved to Servlet2 specific Decorator", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r429425998", "createdAt": "2020-05-22T19:43:17Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/request-2.3/src/main/java/io/opentelemetry/auto/instrumentation/servlet/v2_3/Servlet2Advice.java", "diffHunk": "@@ -29,31 +29,35 @@\n import io.opentelemetry.auto.instrumentation.api.Tags;\n import io.opentelemetry.trace.Span;\n import io.opentelemetry.trace.Status;\n+import java.lang.reflect.Method;\n import java.security.Principal;\n import javax.servlet.ServletRequest;\n import javax.servlet.ServletResponse;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import net.bytebuddy.asm.Advice;\n-import net.bytebuddy.implementation.bytecode.assign.Assigner;\n \n public class Servlet2Advice {\n \n   @Advice.OnMethodEnter(suppress = Throwable.class)\n   public static SpanWithScope onEnter(\n       @Advice.This final Object servlet,\n+      @Advice.Origin final Method method,\n       @Advice.Argument(0) final ServletRequest request,\n-      @Advice.Argument(value = 1, typing = Assigner.Typing.DYNAMIC)\n-          final ServletResponse response) {\n+      @Advice.Argument(1) final ServletResponse response) {\n+    if (!(request instanceof HttpServletRequest)) {\n+      return null;\n+    }\n+\n     final boolean hasServletTrace = request.getAttribute(SPAN_ATTRIBUTE) instanceof Span;\n-    final boolean invalidRequest = !(request instanceof HttpServletRequest);\n-    if (invalidRequest || hasServletTrace) {\n+    if (hasServletTrace) {\n       // Tracing might already be applied by the FilterChain or a parent request (forward/include).\n       return null;\n     }\n \n     final HttpServletRequest httpServletRequest = (HttpServletRequest) request;\n \n+    // TODO this logic should be moved to Servle2 specific Decorator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODY4NzEzOnYy", "diffSide": "RIGHT", "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxOTo0NDoxOFrOGaIpWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxOTo0NDoxOFrOGaIpWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1NzgxOQ==", "bodyText": "this is the default\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          .setSpanKind(Kind.INTERNAL)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r430057819", "createdAt": "2020-05-25T19:44:18Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "diffHunk": "@@ -98,7 +98,7 @@ public static SpanWithScope start(@Advice.Origin final Method method) {\n       final Span span =\n           TRACER\n               .spanBuilder(DECORATE.spanNameForMethod(method))\n-              .setSpanKind(Kind.SERVER)\n+              .setSpanKind(Kind.INTERNAL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9c06ac0b82161566cf71377b7e36e20a7ee59b"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 452, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}