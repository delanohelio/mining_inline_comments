{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNzg3MDI2", "number": 1927, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1MToxMVrOFG65qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1Mzo0MlrOFG69Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyODAwODA5OnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/opentelemetryapi/context/AgentContextStorage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1MToxMVrOIIKL3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo0MzoyNVrOIIb4xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyNjM5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    System.out.println(((Baggage) v1).asMap());", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#discussion_r545426398", "createdAt": "2020-12-17T21:51:11Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/opentelemetryapi/context/AgentContextStorage.java", "diffHunk": "@@ -156,9 +199,15 @@ public AgentContextWrapper(\n         return new AgentContextWrapper(\n             agentContext.with(AGENT_SPAN_CONTEXT_KEY, agentSpan), applicationContext);\n       }\n+      if (k1 == APPLICATION_BAGGAGE_CONTEXT_KEY) {\n+        Baggage applicationBaggage = (Baggage) v1;\n+        io.opentelemetry.api.baggage.Baggage agentBaggage =\n+            BaggageBridging.toAgent(applicationBaggage);\n+        System.out.println(((Baggage) v1).asMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxNjQyMw==", "bodyText": "Oh, I forgot about these \ud83e\udd26\u200d\u2642\ufe0f", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#discussion_r545716423", "createdAt": "2020-12-18T09:43:25Z", "author": {"login": "mateuszrzeszutek"}, "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/opentelemetryapi/context/AgentContextStorage.java", "diffHunk": "@@ -156,9 +199,15 @@ public AgentContextWrapper(\n         return new AgentContextWrapper(\n             agentContext.with(AGENT_SPAN_CONTEXT_KEY, agentSpan), applicationContext);\n       }\n+      if (k1 == APPLICATION_BAGGAGE_CONTEXT_KEY) {\n+        Baggage applicationBaggage = (Baggage) v1;\n+        io.opentelemetry.api.baggage.Baggage agentBaggage =\n+            BaggageBridging.toAgent(applicationBaggage);\n+        System.out.println(((Baggage) v1).asMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyNjM5OA=="}, "originalCommit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyODAxMzA3OnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/test/groovy/ContextBridgeTest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1MjozNFrOIIKOuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1MjozNFrOIIKOuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyNzEyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      println it", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#discussion_r545427128", "createdAt": "2020-12-17T21:52:34Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/test/groovy/ContextBridgeTest.groovy", "diffHunk": "@@ -80,6 +82,56 @@ class ContextBridgeTest extends AgentTestRunner {\n     }\n   }\n \n+  def \"agent and application share baggage\"() {\n+    expect:\n+    def applicationBaggage = Baggage.builder()\n+      .put(\"food\", \"cheese\")\n+      .put(\"country\", \"japan\", BaggageEntryMetadata.create(\"asia\"))\n+      .build()\n+\n+    applicationBaggage.makeCurrent().withCloseable {\n+      def agentBaggage = io.opentelemetry.api.baggage.Baggage.current()\n+      agentBaggage.asMap().with {\n+        println it\n+        size() == 2\n+        get(\"food\").value == \"cheese\"\n+        get(\"food\").entryMetadata == io.opentelemetry.api.baggage.BaggageEntryMetadata.empty()\n+        get(\"country\").value == \"japan\"\n+        get(\"country\").entryMetadata == io.opentelemetry.api.baggage.BaggageEntryMetadata.create(\"asia\")\n+      }\n+\n+      agentBaggage = io.opentelemetry.api.baggage.Baggage.builder()\n+        .put(\"country\", \"italy\", io.opentelemetry.api.baggage.BaggageEntryMetadata.create(\"europe\"))\n+        .build()\n+      agentBaggage.makeCurrent().withCloseable {\n+        def updatedApplicationBaggage = Baggage.current()\n+        updatedApplicationBaggage.asMap().with {\n+          println it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyODAxMzU5OnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/test/groovy/ContextBridgeTest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1Mjo0NVrOIIKPBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1Mjo0NVrOIIKPBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyNzIwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        println it", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#discussion_r545427207", "createdAt": "2020-12-17T21:52:45Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/test/groovy/ContextBridgeTest.groovy", "diffHunk": "@@ -80,6 +82,56 @@ class ContextBridgeTest extends AgentTestRunner {\n     }\n   }\n \n+  def \"agent and application share baggage\"() {\n+    expect:\n+    def applicationBaggage = Baggage.builder()\n+      .put(\"food\", \"cheese\")\n+      .put(\"country\", \"japan\", BaggageEntryMetadata.create(\"asia\"))\n+      .build()\n+\n+    applicationBaggage.makeCurrent().withCloseable {\n+      def agentBaggage = io.opentelemetry.api.baggage.Baggage.current()\n+      agentBaggage.asMap().with {\n+        println it\n+        size() == 2\n+        get(\"food\").value == \"cheese\"\n+        get(\"food\").entryMetadata == io.opentelemetry.api.baggage.BaggageEntryMetadata.empty()\n+        get(\"country\").value == \"japan\"\n+        get(\"country\").entryMetadata == io.opentelemetry.api.baggage.BaggageEntryMetadata.create(\"asia\")\n+      }\n+\n+      agentBaggage = io.opentelemetry.api.baggage.Baggage.builder()\n+        .put(\"country\", \"italy\", io.opentelemetry.api.baggage.BaggageEntryMetadata.create(\"europe\"))\n+        .build()\n+      agentBaggage.makeCurrent().withCloseable {\n+        def updatedApplicationBaggage = Baggage.current()\n+        updatedApplicationBaggage.asMap().with {\n+          println it\n+          size() == 2\n+          get(\"food\").value == \"cheese\"\n+          get(\"food\").entryMetadata == BaggageEntryMetadata.empty()\n+          get(\"country\").value == \"italy\"\n+          get(\"country\").entryMetadata == BaggageEntryMetadata.create(\"europe\")\n+        }\n+\n+        applicationBaggage = applicationBaggage.toBuilder()\n+          .put(\"food\", \"cabbage\")\n+          .build()\n+        applicationBaggage.makeCurrent().withCloseable {\n+          agentBaggage = io.opentelemetry.api.baggage.Baggage.current()\n+          agentBaggage.asMap().with {\n+            println it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyODAxNjgzOnYy", "diffSide": "RIGHT", "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/test/groovy/ContextBridgeTest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1Mzo0MlrOIIKQ6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo1Mzo0MlrOIIKQ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyNzY4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    println it", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1927#discussion_r545427688", "createdAt": "2020-12-17T21:53:42Z", "author": {"login": "trask"}, "path": "instrumentation/opentelemetry-api-1.0/javaagent/src/test/groovy/ContextBridgeTest.groovy", "diffHunk": "@@ -80,6 +82,56 @@ class ContextBridgeTest extends AgentTestRunner {\n     }\n   }\n \n+  def \"agent and application share baggage\"() {\n+    expect:\n+    def applicationBaggage = Baggage.builder()\n+      .put(\"food\", \"cheese\")\n+      .put(\"country\", \"japan\", BaggageEntryMetadata.create(\"asia\"))\n+      .build()\n+\n+    applicationBaggage.makeCurrent().withCloseable {\n+      def agentBaggage = io.opentelemetry.api.baggage.Baggage.current()\n+      agentBaggage.asMap().with {\n+        println it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee7fa77891af6f5b79bed7892de383fc11bcc527"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4394, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}