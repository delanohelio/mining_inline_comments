{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4Mzk3MjI5", "number": 1455, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODoxNjozOFrOEw42KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODoxNjozOFrOEw42KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5Njk4NDczOnYy", "diffSide": "RIGHT", "path": "instrumentation/geode-1.4/src/main/java/io/opentelemetry/javaagent/instrumentation/geode/GeodeQueryNormalizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODoxNjozOFrOHmuMDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowMTowMlrOHm_HaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM2NDY4Nw==", "bodyText": "If this is just a simple wrapper, why do we need it?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1455#discussion_r510364687", "createdAt": "2020-10-22T18:16:38Z", "author": {"login": "iNikem"}, "path": "instrumentation/geode-1.4/src/main/java/io/opentelemetry/javaagent/instrumentation/geode/GeodeQueryNormalizer.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.javaagent.instrumentation.geode;\n+\n+import io.opentelemetry.javaagent.instrumentation.api.db.normalizer.ParseException;\n+import io.opentelemetry.javaagent.instrumentation.api.db.normalizer.SqlNormalizer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class GeodeQueryNormalizer {\n+  private static final Logger log = LoggerFactory.getLogger(GeodeQueryNormalizer.class);\n+\n+  public static String normalize(String query) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5ec2e56b87f46e64123c8c3eaf9f3da0b4730e8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY0MjAyNA==", "bodyText": "Just for the try-catch right now. In the (close) future we'll also check if the normalization is enabled (I'll add appropriate config flags in #1431)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1455#discussion_r510642024", "createdAt": "2020-10-23T06:01:02Z", "author": {"login": "mateuszrzeszutek"}, "path": "instrumentation/geode-1.4/src/main/java/io/opentelemetry/javaagent/instrumentation/geode/GeodeQueryNormalizer.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.javaagent.instrumentation.geode;\n+\n+import io.opentelemetry.javaagent.instrumentation.api.db.normalizer.ParseException;\n+import io.opentelemetry.javaagent.instrumentation.api.db.normalizer.SqlNormalizer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class GeodeQueryNormalizer {\n+  private static final Logger log = LoggerFactory.getLogger(GeodeQueryNormalizer.class);\n+\n+  public static String normalize(String query) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM2NDY4Nw=="}, "originalCommit": {"oid": "f5ec2e56b87f46e64123c8c3eaf9f3da0b4730e8"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4731, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}