{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMTczMzAx", "number": 606, "title": "Always translate HTTP status code to Status", "bodyText": "We should follow the same convention as the collector for translating from HTTP to gRPC OTel status. At the least, it provides a little more information than always setting unknown.\nhttps://github.com/open-telemetry/opentelemetry-collector/blob/master/translator/trace/grpc_http_mapper.go\n(it's a bit hilarious the file is named gRPC, the method is called opencensus and the docs describe opentelemetry)\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/9e8c5f1a62774e42e71e422ca2c0f14deef32db4/specification/trace/semantic_conventions/http.md#status\nIn a separate PR I also want to remove the config client/server error statuses. It seems to go against the spec (MUST set the span status), and intuitively I can't think why anyone would want to control what statuses are filled or not. Left it in for now to hear more background.", "createdAt": "2020-06-29T03:25:08Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606", "merged": true, "mergeCommit": {"oid": "77654a44bcb3b66421b000b72334ac148ab3ca2d"}, "closed": true, "closedAt": "2020-06-29T23:27:53Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcv4USdAH2gAyNDQxMTczMzAxOmE3YTczYmIyODY3M2ZhODA4MzBhYWFiYmMwNmZiZGJjZGQ5OThmM2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwCZhYAH2gAyNDQxMTczMzAxOmNjMjgzZmE0NDEyMzcyOTE5MjIxZWI1Y2ExNWM2MzRjNDkyNzcwNTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a7a73bb28673fa80830aaabbc06fbdbcdd998f3e", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a7a73bb28673fa80830aaabbc06fbdbcdd998f3e", "committedDate": "2020-06-29T03:17:22Z", "message": "Translate HTTP status code to Status"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0870a149d78a94314a71f142f75055736c57a93e", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0870a149d78a94314a71f142f75055736c57a93e", "committedDate": "2020-06-29T04:19:34Z", "message": "oops"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4ODgzODcz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#pullrequestreview-438883873", "createdAt": "2020-06-29T04:48:50Z", "commit": {"oid": "0870a149d78a94314a71f142f75055736c57a93e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNDo0ODo1MFrOGqEsQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNDo1MDoyOVrOGqEtwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc3MDI0Mg==", "bodyText": "i think cite the spec instead?\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md#status", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#discussion_r446770242", "createdAt": "2020-06-29T04:48:50Z", "author": {"login": "trask"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpUtil.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.auto.bootstrap.instrumentation.decorator;\n+\n+import io.opentelemetry.trace.Status;\n+\n+final class HttpUtil {\n+\n+  // https://github.com/open-telemetry/opentelemetry-collector/blob/8aa273184455591cad278c92c7cfcf75ad353d57/translator/trace/grpc_http_mapper.go#L55", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0870a149d78a94314a71f142f75055736c57a93e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc3MDYyNQ==", "bodyText": "this isn't in the spec, and i don't think we need to map it, as the way i read https://httpstatuses.com/499 is that nginx just uses this internally (b/c how can it return 499 to the client if the client closes the connection \ud83d\ude04)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#discussion_r446770625", "createdAt": "2020-06-29T04:50:29Z", "author": {"login": "trask"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpUtil.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.auto.bootstrap.instrumentation.decorator;\n+\n+import io.opentelemetry.trace.Status;\n+\n+final class HttpUtil {\n+\n+  // https://github.com/open-telemetry/opentelemetry-collector/blob/8aa273184455591cad278c92c7cfcf75ad353d57/translator/trace/grpc_http_mapper.go#L55\n+  static Status statusFromHttpStatus(int httpStatus) {\n+    if (httpStatus >= 100 && httpStatus < 400) {\n+      return Status.OK;\n+    }\n+\n+    switch (httpStatus) {\n+      case 401:\n+        return Status.UNAUTHENTICATED;\n+      case 403:\n+        return Status.PERMISSION_DENIED;\n+      case 404:\n+        return Status.NOT_FOUND;\n+      case 429:\n+        return Status.RESOURCE_EXHAUSTED;\n+      case 499:\n+        return Status.CANCELLED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0870a149d78a94314a71f142f75055736c57a93e"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8de67a001b4e8c47c955828487256b99123cd0be", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8de67a001b4e8c47c955828487256b99123cd0be", "committedDate": "2020-06-29T05:20:49Z", "message": "Use spec, not Go"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4ODk0Nzgw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#pullrequestreview-438894780", "createdAt": "2020-06-29T05:28:54Z", "commit": {"oid": "8de67a001b4e8c47c955828487256b99123cd0be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6db724e3064c7dd3cd8c57478e872406851d1765", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6db724e3064c7dd3cd8c57478e872406851d1765", "committedDate": "2020-06-29T06:14:50Z", "message": "400"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6d5bfbfb25d0ad85dc9cfbe6f24a99a8d35e54", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1d6d5bfbfb25d0ad85dc9cfbe6f24a99a8d35e54", "committedDate": "2020-06-29T06:47:41Z", "message": "JSP"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTM0ODg3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#pullrequestreview-438934887", "createdAt": "2020-06-29T07:05:30Z", "commit": {"oid": "1d6d5bfbfb25d0ad85dc9cfbe6f24a99a8d35e54"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzowNTozMFrOGqHWUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzowNTozMFrOGqHWUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMzc3Ng==", "bodyText": "we should change all errored verifications to status verifications (issue is fine to track this, it's probably lots of places)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#discussion_r446813776", "createdAt": "2020-06-29T07:05:30Z", "author": {"login": "trask"}, "path": "instrumentation/jsp-2.3/src/test/groovy/JSPInstrumentationForwardTests.groovy", "diffHunk": "@@ -525,7 +525,7 @@ class JSPInstrumentationForwardTests extends AgentTestRunner {\n           parent()\n           operationName expectedOperationName()\n           spanKind SERVER\n-          errored false\n+          errored true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6d5bfbfb25d0ad85dc9cfbe6f24a99a8d35e54"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTU2MzEw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#pullrequestreview-438956310", "createdAt": "2020-06-29T07:40:44Z", "commit": {"oid": "1d6d5bfbfb25d0ad85dc9cfbe6f24a99a8d35e54"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzo0MDo0NFrOGqIZKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzo0NTo0M1rOGqIiiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzMDg5MQ==", "bodyText": "Why don't we set Ok status?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#discussion_r446830891", "createdAt": "2020-06-29T07:40:44Z", "author": {"login": "iNikem"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpClientDecorator.java", "diffHunk": "@@ -120,8 +120,9 @@ public Span onResponse(final Span span, final RESPONSE response) {\n       if (status != null) {\n         span.setAttribute(Tags.HTTP_STATUS, status);\n \n-        if (Config.get().getHttpClientErrorStatuses().get(status)) {\n-          span.setStatus(Status.UNKNOWN);\n+        Status otelStatus = HttpUtil.statusFromHttpStatus(status);\n+        if (!otelStatus.isOk()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6d5bfbfb25d0ad85dc9cfbe6f24a99a8d35e54"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzMTY5Nw==", "bodyText": "Can we call this StatusConverter or StatusFactory or similar? Util just calls to put more methods here :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#discussion_r446831697", "createdAt": "2020-06-29T07:42:28Z", "author": {"login": "iNikem"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpUtil.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.auto.bootstrap.instrumentation.decorator;\n+\n+import io.opentelemetry.trace.Status;\n+\n+public final class HttpUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6d5bfbfb25d0ad85dc9cfbe6f24a99a8d35e54"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzMzI5MQ==", "bodyText": "getIntegerRangeSettingFromEnvironment is now used and can be removed?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#discussion_r446833291", "createdAt": "2020-06-29T07:45:43Z", "author": {"login": "iNikem"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java", "diffHunk": "@@ -173,14 +171,6 @@\n \n     excludedClasses = getListSettingFromEnvironment(TRACE_CLASSES_EXCLUDE, null);\n \n-    httpServerErrorStatuses =\n-        getIntegerRangeSettingFromEnvironment(\n-            HTTP_SERVER_ERROR_STATUSES, DEFAULT_HTTP_SERVER_ERROR_STATUSES);\n-\n-    httpClientErrorStatuses =\n-        getIntegerRangeSettingFromEnvironment(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6d5bfbfb25d0ad85dc9cfbe6f24a99a8d35e54"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eae3cb907baa9b0d05763da69ce2f8af055de379", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/eae3cb907baa9b0d05763da69ce2f8af055de379", "committedDate": "2020-06-29T08:52:06Z", "message": "Cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDA5MTE3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#pullrequestreview-439009117", "createdAt": "2020-06-29T08:55:46Z", "commit": {"oid": "eae3cb907baa9b0d05763da69ce2f8af055de379"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODo1NTo0N1rOGqK-Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODo1NTo0N1rOGqK-Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg3MzEwNw==", "bodyText": "missed this?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#discussion_r446873107", "createdAt": "2020-06-29T08:55:47Z", "author": {"login": "iNikem"}, "path": "instrumentation/finatra-2.9/src/main/java/io/opentelemetry/auto/instrumentation/finatra/FinatraInstrumentation.java", "diffHunk": "@@ -131,8 +131,9 @@ public void onSuccess(final Response response) {\n       final Span span = spanWithScope.getSpan();\n \n       // Don't use DECORATE.onResponse because this is the controller span\n-      if (Config.get().getHttpServerErrorStatuses().get(DECORATE.status(response))) {\n-        span.setStatus(Status.UNKNOWN);\n+      Status status = HttpStatusConverter.statusFromHttpStatus(DECORATE.status(response));\n+      if (!status.isOk()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eae3cb907baa9b0d05763da69ce2f8af055de379"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDA5MjQw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#pullrequestreview-439009240", "createdAt": "2020-06-29T08:55:57Z", "commit": {"oid": "eae3cb907baa9b0d05763da69ce2f8af055de379"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5e6abc64448a8e5411a16f5c0d392e9b0b126d1", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d5e6abc64448a8e5411a16f5c0d392e9b0b126d1", "committedDate": "2020-06-29T11:18:51Z", "message": "finatra take two"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8942093fde7822b50f406e29012f8ca003705839", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8942093fde7822b50f406e29012f8ca003705839", "committedDate": "2020-06-29T09:07:42Z", "message": "finatra take two"}, "afterCommit": {"oid": "d5e6abc64448a8e5411a16f5c0d392e9b0b126d1", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d5e6abc64448a8e5411a16f5c0d392e9b0b126d1", "committedDate": "2020-06-29T11:18:51Z", "message": "finatra take two"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDQxMDIz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/606#pullrequestreview-439041023", "createdAt": "2020-06-29T11:23:00Z", "commit": {"oid": "d5e6abc64448a8e5411a16f5c0d392e9b0b126d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df78d5253d5467f0769199bc48e02bed64ec3fcb", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/df78d5253d5467f0769199bc48e02bed64ec3fcb", "committedDate": "2020-06-29T12:47:52Z", "message": "Java 11 rats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d567459b88bd893fa50404d4524e6034a45008b", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3d567459b88bd893fa50404d4524e6034a45008b", "committedDate": "2020-06-29T13:57:47Z", "message": "Right branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a09a64275997042f6c2a1668b7397d218b9656a4", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a09a64275997042f6c2a1668b7397d218b9656a4", "committedDate": "2020-06-29T14:39:33Z", "message": "play"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc283fa4412372919221eb5ca15c634c49277054", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/cc283fa4412372919221eb5ca15c634c49277054", "committedDate": "2020-06-29T15:02:08Z", "message": "play"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3020, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}