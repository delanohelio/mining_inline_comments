{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5ODc4Nzg5", "number": 1482, "title": "Fix net.peer.* setting for Cassandra 4.+", "bodyText": "#1427 removed max java version to run Cassandra 4 tests. This allowed testLatestDep job to actually run them (as it uses java 11 to run). This exposed that starting from some version of Cassandra client driver the value returned by node.getBroadcastRpcAddress() changed to 0.0.0.0 in our tests. This broke tests.\nBut this also exposed that we used wrong address for net.peer.* attributes in the first place. BroadcastRpcAddress means the address that Cassandra server accepts RPC connections. In case of containers/proxy this may be completely different address from the one used by client. But node.getEndPoint() returns \"The information that the driver uses to connect to the node\". Which seems like the correct one.\nCloses #1478\nCloses #1473\nCloses #1472\nCloses #1461\nCloses #1460", "createdAt": "2020-10-26T08:58:18Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482", "merged": true, "mergeCommit": {"oid": "3db872e50fd1e59f9182a7191542b918e120cc6e"}, "closed": true, "closedAt": "2020-10-26T11:49:26Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWQb6IAH2gAyNTA5ODc4Nzg5OjBlOTQwYjY3YjA3MGJmYjQ3ZjViOGEyNmE1YTM1Y2IzYTFkYzExMDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWSI4vAFqTUxNjY1ODY4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107", "committedDate": "2020-10-26T08:52:32Z", "message": "Fix net.peer.* setting for Cassandra 4.+"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NjMzOTAw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482#pullrequestreview-516633900", "createdAt": "2020-10-26T10:17:07Z", "commit": {"oid": "0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NjU4Njgx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482#pullrequestreview-516658681", "createdAt": "2020-10-26T10:50:29Z", "commit": {"oid": "0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDo1MDoyOVrOHoKH9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDo1MDoyOVrOHoKH9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3MDk2NQ==", "bodyText": "I don't think it's related to this PR since we have many instrumentations with the same pattern - I often worry about blocking an event loop with a DNS lookup just to set a span attribute. I want (someone) to remove the spec's language encouraging a DNS lookup just to resolve an attribute.\nJust the word resolve makes it more obvious than Java where a seemingly normal getter has the chance to block and brought this point up for me :)", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482#discussion_r511870965", "createdAt": "2020-10-26T10:50:29Z", "author": {"login": "anuraaga"}, "path": "instrumentation/cassandra/cassandra-4.0/src/main/java/io/opentelemetry/javaagent/instrumentation/cassandra/v4_0/CassandraDatabaseClientTracer.java", "diffHunk": "@@ -47,8 +47,10 @@ protected InetSocketAddress peerAddress(CqlSession cqlSession) {\n   public void onResponse(Span span, ExecutionInfo executionInfo) {\n     Node coordinator = executionInfo.getCoordinator();\n     if (coordinator != null) {\n-      Optional<InetSocketAddress> address = coordinator.getBroadcastRpcAddress();\n-      address.ifPresent(inetSocketAddress -> NetPeerUtils.setNetPeer(span, inetSocketAddress));\n+      SocketAddress socketAddress = coordinator.getEndPoint().resolve();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2406, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}