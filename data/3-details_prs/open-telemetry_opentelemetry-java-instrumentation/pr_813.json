{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MDU3OTA2", "number": 813, "title": "Use Span.recordException for logging throwable", "bodyText": "I found some quirks on the way\n\n\nPreviously, our exception assertions allowed no exception. This seems like a very fragile check, and instead I have gone though and explicitly disabled the exception test itself and we can investigate whether these are limitations of instrumentation, bugs of instrumentation, or expected in #807\n\n\nMany tests actually handle exception and convert to HTTP responses. This makes exception and error to effectively be the same test and suppressing the exception test is probably correct for them. Will confirm in #807\n\n\nNote the removal of tags from some server spans is expected - the new attributes are only for exceptions, we don't map HTTP errors onto them anymore.\nI expected this PR to take a while but was even more digging than I expected :) Filed some other issues along the way.\nIn the process, looks like I fixed the null assertions everywhere, so fixes #806", "createdAt": "2020-07-27T10:10:44Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813", "merged": true, "mergeCommit": {"oid": "f6594e1a67f26d01d2c30ae7b7cbedf9c201e89b"}, "closed": true, "closedAt": "2020-07-28T05:44:44Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc49KMVgH2gAyNDU3MDU3OTA2OmI1YmEzYWY0M2M5OGI2MDFjYzM4ZTBkNGQ0ZmNjNzVlN2E1NmY5NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5PjvngH2gAyNDU3MDU3OTA2OmQ4YTk2Y2M2MzAxZDFmYWQ1ZDJhOWUwNzk5Y2I5MjM1NDNkZDc4NGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b5ba3af43c98b601cc38e0d4d4fcc75e7a56f971", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b5ba3af43c98b601cc38e0d4d4fcc75e7a56f971", "committedDate": "2020-07-27T08:01:11Z", "message": "Use Span.recordException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/20598318d7d336e4c68d032e38d93cedef0d796d", "committedDate": "2020-07-27T10:11:37Z", "message": "Fix tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad4955641ccbdeb740cdfbaec2db8f69e51472a2", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ad4955641ccbdeb740cdfbaec2db8f69e51472a2", "committedDate": "2020-07-27T10:07:45Z", "message": "Fix more tests"}, "afterCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/20598318d7d336e4c68d032e38d93cedef0d796d", "committedDate": "2020-07-27T10:11:37Z", "message": "Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NzA1MTI3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#pullrequestreview-455705127", "createdAt": "2020-07-27T11:42:47Z", "commit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo0Mjo0N1rOG3e58Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo0OToxMFrOG3fF6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzMTIxNw==", "bodyText": "Why not usual errorEvent?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r460831217", "createdAt": "2020-07-27T11:42:47Z", "author": {"login": "iNikem"}, "path": "instrumentation/jsp-2.3/src/test/groovy/JSPInstrumentationBasicTests.groovy", "diffHunk": "@@ -282,6 +282,18 @@ class JSPInstrumentationBasicTests extends AgentTestRunner {\n           operationName expectedOperationName()\n           spanKind SERVER\n           errored true\n+          event(0) {\n+            eventName(SemanticAttributes.EXCEPTION_EVENT_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzMjYxMg==", "bodyText": "If this is false, how can the if on line 128 be ever true?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r460832612", "createdAt": "2020-07-27T11:45:43Z", "author": {"login": "iNikem"}, "path": "instrumentation/ratpack-1.4/src/test/groovy/server/RatpackHttpServerTest.groovy", "diffHunk": "@@ -137,4 +135,11 @@ class RatpackHttpServerTest extends HttpServerTest<EmbeddedApp> {\n   String expectedServerSpanName(String method, ServerEndpoint endpoint) {\n     return endpoint.status == 404 ? \"/\" : endpoint == PATH_PARAM ? \"/path/:id/param\" : endpoint.path\n   }\n+\n+  @Override\n+  boolean testException() {\n+    // TODO(anuraaga): We record exception both in the ratpack controller and in the error handler.\n+    // Do we need the latter? https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/810\n+    return false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNDI4Mw==", "bodyText": "Why was this just removed?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r460834283", "createdAt": "2020-07-27T11:49:10Z", "author": {"login": "iNikem"}, "path": "instrumentation/google-http-client-1.19/src/main/java/io/opentelemetry/auto/instrumentation/googlehttpclient/GoogleHttpClientInstrumentation.java", "diffHunk": "@@ -143,7 +142,6 @@ public static void methodExit(\n           // for a failed request.  Thus, check the response code\n           if (response != null && !response.isSuccessStatusCode()) {\n             span.setStatus(Status.UNKNOWN);\n-            span.setAttribute(MoreAttributes.ERROR_MSG, response.getStatusMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjcwMTk1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#pullrequestreview-456270195", "createdAt": "2020-07-28T03:04:01Z", "commit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMzowNDowMlrOG364Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMzoyMjo1OFrOG37Kdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4OTUyMw==", "bodyText": "\ud83c\udf89", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461289523", "createdAt": "2020-07-28T03:04:02Z", "author": {"login": "trask"}, "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/BaseDecorator.java", "diffHunk": "@@ -114,12 +111,7 @@ public static void setPeer(final Span span, String peerName, String peerIp) {\n   }\n \n   public static void addThrowable(final Span span, final Throwable throwable) {\n-    span.setAttribute(MoreAttributes.ERROR_MSG, throwable.getMessage());\n-    span.setAttribute(MoreAttributes.ERROR_TYPE, throwable.getClass().getName());\n-\n-    StringWriter errorString = new StringWriter();\n-    throwable.printStackTrace(new PrintWriter(errorString));\n-    span.setAttribute(MoreAttributes.ERROR_STACK, errorString.toString());\n+    span.recordException(throwable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5MDE1Nw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461290157", "createdAt": "2020-07-28T03:06:24Z", "author": {"login": "trask"}, "path": "instrumentation/grizzly-2.0/src/test/groovy/GrizzlyTest.groovy", "diffHunk": "@@ -111,4 +111,10 @@ class GrizzlyTest extends HttpServerTest<HttpServer> {\n   String expectedServerSpanName(String method, ServerEndpoint endpoint) {\n     return \"HttpCodecFilter.handleRead\"\n   }\n+\n+  @Override\n+  boolean testException() {\n+    // TODO(anuraaga): https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/807", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5MDQyMQ==", "bodyText": "no replacement for this?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461290421", "createdAt": "2020-07-28T03:07:28Z", "author": {"login": "trask"}, "path": "instrumentation/dropwizard-testing/src/test/groovy/DropwizardTest.groovy", "diffHunk": "@@ -126,11 +124,6 @@ class DropwizardTest extends HttpServerTest<DropwizardTestSupport> {\n         \"${SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH.key()}\" { it == responseContentLength || /* async */ it == null }\n         \"servlet.context\" \"\"\n         \"servlet.path\" \"\"\n-        if (endpoint.errored) {\n-          \"error.msg\" { it == null || it == EXCEPTION.body }\n-          \"error.type\" { it == null || it == Exception.name }\n-          \"error.stack\" { it == null || it instanceof String }\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Mjk5MA==", "bodyText": "just helping with the future search \ud83d\ude04\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/807\n          \n          \n            \n                // TODO(anuraaga): https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/807", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461292990", "createdAt": "2020-07-28T03:17:55Z", "author": {"login": "trask"}, "path": "instrumentation/vertx-reactive-3.5/src/test/groovy/server/VertxRxHttpServerTest.groovy", "diffHunk": "@@ -68,6 +68,12 @@ class VertxRxHttpServerTest extends HttpServerTest<Vertx> {\n     return false\n   }\n \n+  @Override\n+  boolean testException() {\n+    // https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/807", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5NDE5OQ==", "bodyText": "there are a few places that look like they could use errorEvent", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461294199", "createdAt": "2020-07-28T03:22:58Z", "author": {"login": "trask"}, "path": "instrumentation/netty/netty-3.8/src/latestDepTest/groovy/Netty38ClientTest.groovy", "diffHunk": "@@ -97,17 +98,19 @@ class Netty38ClientTest extends HttpClientTest {\n           operationName \"CONNECT\"\n           childOf span(0)\n           errored true\n-          attributes {\n-            Class errorClass = ConnectException\n-            try {\n-              errorClass = Class.forName('io.netty.channel.AbstractChannel$AnnotatedConnectException')\n-            } catch (ClassNotFoundException e) {\n-              // Older versions use 'java.net.ConnectException' and do not have 'io.netty.channel.AbstractChannel$AnnotatedConnectException'\n+          Class errorClass = ConnectException\n+          try {\n+            errorClass = Class.forName('io.netty.channel.AbstractChannel$AnnotatedConnectException')\n+          } catch (ClassNotFoundException e) {\n+            // Older versions use 'java.net.ConnectException' and do not have 'io.netty.channel.AbstractChannel$AnnotatedConnectException'\n+          }\n+          event(0) {\n+            eventName(SemanticAttributes.EXCEPTION_EVENT_NAME)\n+            attributes {\n+              \"${SemanticAttributes.EXCEPTION_TYPE.key()}\" errorClass.name\n+              \"${SemanticAttributes.EXCEPTION_MESSAGE.key()}\" ~/Connection refused:( no further information:)? \\/127.0.0.1:$UNUSABLE_PORT/\n+              \"${SemanticAttributes.EXCEPTION_STACKTRACE.key()}\" String", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2Mjc5MzU1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#pullrequestreview-456279355", "createdAt": "2020-07-28T03:36:32Z", "commit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMzozNjozMlrOG37XgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMzo0MDo0MlrOG37bhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5NzUzNg==", "bodyText": "Don't think so - the exception is recorded in the handler span so isn't on this one. Not sure if this is an issue with the instrumentation or expected though.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461297536", "createdAt": "2020-07-28T03:36:32Z", "author": {"login": "anuraaga"}, "path": "instrumentation/dropwizard-testing/src/test/groovy/DropwizardTest.groovy", "diffHunk": "@@ -126,11 +124,6 @@ class DropwizardTest extends HttpServerTest<DropwizardTestSupport> {\n         \"${SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH.key()}\" { it == responseContentLength || /* async */ it == null }\n         \"servlet.context\" \"\"\n         \"servlet.path\" \"\"\n-        if (endpoint.errored) {\n-          \"error.msg\" { it == null || it == EXCEPTION.body }\n-          \"error.type\" { it == null || it == Exception.name }\n-          \"error.stack\" { it == null || it instanceof String }\n-        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5MDQyMQ=="}, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5NzcxMA==", "bodyText": "This is setting an HTTP response as an error tag, but our new convention is only about exceptions, not HTTP status line. Keeping this would be confusing wrt to our other tags.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461297710", "createdAt": "2020-07-28T03:37:18Z", "author": {"login": "anuraaga"}, "path": "instrumentation/google-http-client-1.19/src/main/java/io/opentelemetry/auto/instrumentation/googlehttpclient/GoogleHttpClientInstrumentation.java", "diffHunk": "@@ -143,7 +142,6 @@ public static void methodExit(\n           // for a failed request.  Thus, check the response code\n           if (response != null && !response.isSuccessStatusCode()) {\n             span.setStatus(Status.UNKNOWN);\n-            span.setAttribute(MoreAttributes.ERROR_MSG, response.getStatusMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNDI4Mw=="}, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Nzg2Mw==", "bodyText": "The assertions are more complex not just matching", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461297863", "createdAt": "2020-07-28T03:37:52Z", "author": {"login": "anuraaga"}, "path": "instrumentation/jsp-2.3/src/test/groovy/JSPInstrumentationBasicTests.groovy", "diffHunk": "@@ -282,6 +282,18 @@ class JSPInstrumentationBasicTests extends AgentTestRunner {\n           operationName expectedOperationName()\n           spanKind SERVER\n           errored true\n+          event(0) {\n+            eventName(SemanticAttributes.EXCEPTION_EVENT_NAME)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzMTIxNw=="}, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5ODAxNA==", "bodyText": "This one's because the message is matched using regex. I could make errorevent more powerful but didn't find enough of these places to warrant it yet.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461298014", "createdAt": "2020-07-28T03:38:37Z", "author": {"login": "anuraaga"}, "path": "instrumentation/netty/netty-3.8/src/latestDepTest/groovy/Netty38ClientTest.groovy", "diffHunk": "@@ -97,17 +98,19 @@ class Netty38ClientTest extends HttpClientTest {\n           operationName \"CONNECT\"\n           childOf span(0)\n           errored true\n-          attributes {\n-            Class errorClass = ConnectException\n-            try {\n-              errorClass = Class.forName('io.netty.channel.AbstractChannel$AnnotatedConnectException')\n-            } catch (ClassNotFoundException e) {\n-              // Older versions use 'java.net.ConnectException' and do not have 'io.netty.channel.AbstractChannel$AnnotatedConnectException'\n+          Class errorClass = ConnectException\n+          try {\n+            errorClass = Class.forName('io.netty.channel.AbstractChannel$AnnotatedConnectException')\n+          } catch (ClassNotFoundException e) {\n+            // Older versions use 'java.net.ConnectException' and do not have 'io.netty.channel.AbstractChannel$AnnotatedConnectException'\n+          }\n+          event(0) {\n+            eventName(SemanticAttributes.EXCEPTION_EVENT_NAME)\n+            attributes {\n+              \"${SemanticAttributes.EXCEPTION_TYPE.key()}\" errorClass.name\n+              \"${SemanticAttributes.EXCEPTION_MESSAGE.key()}\" ~/Connection refused:( no further information:)? \\/127.0.0.1:$UNUSABLE_PORT/\n+              \"${SemanticAttributes.EXCEPTION_STACKTRACE.key()}\" String", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5NDE5OQ=="}, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5ODI1NA==", "bodyText": "It can't - but I would remove that if along with the TODO if this can't ever be fixed, similar to all the tests I've only supressed the exception cases for further debugging.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461298254", "createdAt": "2020-07-28T03:39:36Z", "author": {"login": "anuraaga"}, "path": "instrumentation/ratpack-1.4/src/test/groovy/server/RatpackHttpServerTest.groovy", "diffHunk": "@@ -137,4 +135,11 @@ class RatpackHttpServerTest extends HttpServerTest<EmbeddedApp> {\n   String expectedServerSpanName(String method, ServerEndpoint endpoint) {\n     return endpoint.status == 404 ? \"/\" : endpoint == PATH_PARAM ? \"/path/:id/param\" : endpoint.path\n   }\n+\n+  @Override\n+  boolean testException() {\n+    // TODO(anuraaga): We record exception both in the ratpack controller and in the error handler.\n+    // Do we need the latter? https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/810\n+    return false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzMjYxMg=="}, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5ODU2Nw==", "bodyText": "This one I'll update", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461298567", "createdAt": "2020-07-28T03:40:42Z", "author": {"login": "anuraaga"}, "path": "testing-common/src/main/groovy/io/opentelemetry/auto/test/base/HttpServerTest.groovy", "diffHunk": "@@ -464,6 +462,16 @@ abstract class HttpServerTest<SERVER> extends AgentTestRunner {\n       } else {\n         parent()\n       }\n+      if (endpoint == EXCEPTION && !hasHandlerSpan()) {\n+        event(0) {\n+          eventName(SemanticAttributes.EXCEPTION_EVENT_NAME)\n+          attributes {\n+            \"${SemanticAttributes.EXCEPTION_TYPE.key()}\" { it == null || it == Exception.name }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20598318d7d336e4c68d032e38d93cedef0d796d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb53d5144150771cf87bb35e94f581a7b2c8df32", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bb53d5144150771cf87bb35e94f581a7b2c8df32", "committedDate": "2020-07-28T04:47:47Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1da01baea851585aaec4749f7d453b7dfc2f0fa4", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1da01baea851585aaec4749f7d453b7dfc2f0fa4", "committedDate": "2020-07-28T04:49:48Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-auto-instr-java into use-record-exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzAzNDM0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#pullrequestreview-456303434", "createdAt": "2020-07-28T05:01:42Z", "commit": {"oid": "bb53d5144150771cf87bb35e94f581a7b2c8df32"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNTowMTo0MlrOG38sWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNTowMTo0MlrOG38sWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMxOTI1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // having this set allows us to test with old verseions of the tomcat api since\n          \n          \n            \n                // having this set allows us to test with old versions of the tomcat api since", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#discussion_r461319258", "createdAt": "2020-07-28T05:01:42Z", "author": {"login": "trask"}, "path": "instrumentation/jsp-2.3/src/test/groovy/JSPInstrumentationBasicTests.groovy", "diffHunk": "@@ -38,7 +38,7 @@ class JSPInstrumentationBasicTests extends AgentTestRunner {\n   static {\n     // skip jar scanning using environment variables:\n     // http://tomcat.apache.org/tomcat-7.0-doc/config/systemprops.html#JAR_Scanning\n-    // having this set allows us to test with old versions of the tomcat api since\n+    // having this set allows us to test with old verseions of the tomcat api since", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb53d5144150771cf87bb35e94f581a7b2c8df32"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90c20e9443208930e30311bee09b388a1253beca", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/90c20e9443208930e30311bee09b388a1253beca", "committedDate": "2020-07-28T05:05:17Z", "message": "Update instrumentation/jsp-2.3/src/test/groovy/JSPInstrumentationBasicTests.groovy\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzA1MzMz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/813#pullrequestreview-456305333", "createdAt": "2020-07-28T05:07:49Z", "commit": {"oid": "90c20e9443208930e30311bee09b388a1253beca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcf849d0d974ca4de8dd8648ff1b03a3fd0032f5", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fcf849d0d974ca4de8dd8648ff1b03a3fd0032f5", "committedDate": "2020-07-28T05:08:10Z", "message": "Spotless (IntelliJ acts weird with groovy files for me :()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a154bc62bdc3c14e43c97accad6c6dcfa93ccf77", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a154bc62bdc3c14e43c97accad6c6dcfa93ccf77", "committedDate": "2020-07-28T05:09:09Z", "message": "Merge branch 'use-record-exception' of github.com:anuraaga/opentelemetry-auto-instr-java into use-record-exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8a96cc6301d1fad5d2a9e0799cb923543dd784a", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d8a96cc6301d1fad5d2a9e0799cb923543dd784a", "committedDate": "2020-07-28T05:27:23Z", "message": "Update for merge"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2868, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}