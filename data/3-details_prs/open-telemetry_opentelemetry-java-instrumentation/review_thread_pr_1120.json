{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MjMxMzM1", "number": 1120, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMDoyNjowM1rOEdoQog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo0NDozM1rOEdrkYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTAzNzc4OnYy", "diffSide": "RIGHT", "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/exporter/ExporterConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMDoyNjowM1rOHI5TIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMDoyNjowM1rOHI5TIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA4OTQ0MQ==", "bodyText": "What implements this interface?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1120#discussion_r479089441", "createdAt": "2020-08-28T10:26:03Z", "author": {"login": "iNikem"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/exporter/ExporterConfig.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.javaagent.tooling.exporter;\n+\n+/**\n+ * An interface used to provide configuration information to {@link SpanExporterFactory} and {@link\n+ * MetricExporterFactory} implementations.\n+ *\n+ * <p>This interface is intentionally kept very simple since the underlying implementations may only\n+ * have access to very basic configuration mechanisms such as system properties and environment\n+ * variables.\n+ */\n+public interface ExporterConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c5e543ed770efd1ca25c0b3f810f112e5f5cb8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTU3OTg3OnYy", "diffSide": "RIGHT", "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/exporter/DefaultExporterConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo0NDozM1rOHI-5nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo0NDozM1rOHI-5nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE4MTIxMw==", "bodyText": "@iNikem Implemented here", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1120#discussion_r479181213", "createdAt": "2020-08-28T11:44:33Z", "author": {"login": "anuraaga"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/exporter/DefaultExporterConfig.java", "diffHunk": "@@ -14,11 +14,11 @@\n  * limitations under the License.\n  */\n \n-package io.opentelemetry.javaagent.tooling;\n+package io.opentelemetry.javaagent.tooling.exporter;\n \n import io.opentelemetry.instrumentation.api.config.Config;\n \n-public class DefaultExporterConfig implements io.opentelemetry.sdk.extensions.auto.config.Config {\n+public class DefaultExporterConfig implements ExporterConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c5e543ed770efd1ca25c0b3f810f112e5f5cb8"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4836, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}