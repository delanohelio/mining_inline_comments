{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3OTg5OTE0", "number": 345, "title": "Add support for SignalFx and AppOptics tracing annotations", "bodyText": "Fixes #343", "createdAt": "2020-04-23T15:13:27Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/345", "merged": true, "mergeCommit": {"oid": "f958c2df2de7bf5393bba70de074be7fc1caed97"}, "closed": true, "closedAt": "2020-04-24T04:21:26Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaeXvoAH2gAyNDA3OTg5OTE0OjgyNzU0ZmVmODIzZjU5ZDQ4ZTMyZmIyMmQyYWU4MjZkOThjMTBlMGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaprBqgFqTM5OTYyOTY0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "82754fef823f59d48e32fb22d2ae826d98c10e0f", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/82754fef823f59d48e32fb22d2ae826d98c10e0f", "committedDate": "2020-04-23T15:11:12Z", "message": "Add support for SignalFx and AppOptics tracing annotations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjA2NTk2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/345#pullrequestreview-399606596", "createdAt": "2020-04-24T02:53:31Z", "commit": {"oid": "82754fef823f59d48e32fb22d2ae826d98c10e0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo1MzozMVrOGLEFSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo1MzozMVrOGLEFSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NDQwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static {\n          \n          \n            \n                ConfigUtils.updateConfig {\n          \n          \n            \n                  System.clearProperty(\"ota.trace.annotations\")\n          \n          \n            \n                  System.setProperty(\"ota.trace.classes.exclude\", TraceProvidersTest.name + \"*\")\n          \n          \n            \n                }\n          \n          \n            \n              }\n          \n          \n            \n            \n          \n          \n            \n              def specCleanup() {\n          \n          \n            \n                ConfigUtils.updateConfig {\n          \n          \n            \n                  System.clearProperty(\"ota.trace.classes.exclude\")\n          \n          \n            \n                }\n          \n          \n            \n              }\n          \n      \n    \n    \n  \n\nIs this needed?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/345#discussion_r414254409", "createdAt": "2020-04-24T02:53:31Z", "author": {"login": "trask"}, "path": "instrumentation/trace-annotation/src/test/groovy/TraceProvidersTest.groovy", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import io.opentelemetry.auto.test.AgentTestRunner\n+import io.opentelemetry.auto.test.utils.ConfigUtils\n+import io.opentelemetry.test.annotation.SayTracedHello\n+\n+/**\n+ * This test verifies that Otel supports various 3rd-party trace annotations\n+ */\n+class TraceProvidersTest extends AgentTestRunner {\n+\n+  static {\n+    ConfigUtils.updateConfig {\n+      System.clearProperty(\"ota.trace.annotations\")\n+      System.setProperty(\"ota.trace.classes.exclude\", TraceProvidersTest.name + \"*\")\n+    }\n+  }\n+\n+  def specCleanup() {\n+    ConfigUtils.updateConfig {\n+      System.clearProperty(\"ota.trace.classes.exclude\")\n+    }\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82754fef823f59d48e32fb22d2ae826d98c10e0f"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjI5NjQ3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/345#pullrequestreview-399629647", "createdAt": "2020-04-24T04:21:13Z", "commit": {"oid": "82754fef823f59d48e32fb22d2ae826d98c10e0f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3278, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}