{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTMzODU5", "number": 686, "title": "Move webflux context injection to the decorator", "bodyText": "Clean up for changes introduced in this pull request: #639", "createdAt": "2020-07-13T22:33:13Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/686", "merged": true, "mergeCommit": {"oid": "5bab5b9d7d8c7ad56909421b041f668207abda49"}, "closed": true, "closedAt": "2020-07-16T09:12:41Z", "author": {"login": "mabdinur"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0pO4DAH2gAyNDQ4NTMzODU5OmMzZjEyMzgxMDIyODhjMTcxNmE4ZjU1ZjhmZjg2MTFhZmQzNDdiYmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1CYcvgFqTQ0ODYwOTgzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c3f1238102288c1716a8f55f8ff8611afd347bbb", "author": {"user": {"login": "mabdinur", "name": "Munir Abdinur"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c3f1238102288c1716a8f55f8ff8611afd347bbb", "committedDate": "2020-07-13T22:32:30Z", "message": "move webflux context injection to the decorator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NjU3NTQy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/686#pullrequestreview-447657542", "createdAt": "2020-07-13T22:34:57Z", "commit": {"oid": "c3f1238102288c1716a8f55f8ff8611afd347bbb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMjozNDo1OFrOGw9Drg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMjozNDo1OFrOGw9Drg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk4NTE5OA==", "bodyText": "There's a throwable != null check in DECORATE.onError(). This if statement seems redundant.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/686#discussion_r453985198", "createdAt": "2020-07-13T22:34:58Z", "author": {"login": "mabdinur"}, "path": "instrumentation-core/spring/spring-webflux-5.0/src/main/java/io/opentelemetry/instrumentation/springwebflux/client/WebClientTracingFilter.java", "diffHunk": "@@ -52,29 +49,21 @@ public static void addFilter(\n \n   @Override\n   public Mono<ClientResponse> filter(final ClientRequest request, final ExchangeFunction next) {\n-    final Span span =\n-        tracer.spanBuilder(DECORATE.spanNameForRequest(request)).setSpanKind(CLIENT).startSpan();\n+    final Span span = DECORATE.getOrCreateSpan(request, tracer);\n     DECORATE.afterStart(span);\n \n     try (final Scope scope = TRACER.withSpan(span)) {\n       final ClientRequest mutatedRequest =\n           ClientRequest.from(request)\n-              .headers(\n-                  httpHeaders ->\n-                      OpenTelemetry.getPropagators()\n-                          .getHttpTextFormat()\n-                          .inject(Context.current(), httpHeaders, SETTER))\n+              .headers(httpHeaders -> DECORATE.inject(Context.current(), httpHeaders))\n               .build();\n       DECORATE.onRequest(span, mutatedRequest);\n \n       return next.exchange(mutatedRequest)\n           .doOnSuccessOrError(\n               (clientResponse, throwable) -> {\n-                if (throwable != null) {\n-                  DECORATE.onError(span, throwable);\n-                } else {\n-                  DECORATE.onResponse(span, clientResponse);\n-                }\n+                DECORATE.onError(span, throwable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3f1238102288c1716a8f55f8ff8611afd347bbb"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56be6d4b80d4e056c3db77185d53dcc488fffea3", "author": {"user": {"login": "mabdinur", "name": "Munir Abdinur"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/56be6d4b80d4e056c3db77185d53dcc488fffea3", "committedDate": "2020-07-14T22:31:03Z", "message": "add if statement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NjA5ODM0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/686#pullrequestreview-448609834", "createdAt": "2020-07-15T03:50:35Z", "commit": {"oid": "56be6d4b80d4e056c3db77185d53dcc488fffea3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3105, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}