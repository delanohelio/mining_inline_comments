{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNzA5Mzk4", "number": 1646, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMTo1MToxNFrOE5tPHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNTozNDoyMlrOE520Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4OTQ1NDM5OnYy", "diffSide": "RIGHT", "path": "instrumentation/instrumentation.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMTo1MToxNFrOH0VCjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDoyNDoxNVrOH0fhQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYzMjcxNw==", "bodyText": "seems better (generally at least) to exclude at dependency level, can be done below:\n  dependencies {\n    exclude(project(':instrumentation-api'))\n    exclude(project(':javaagent-api'))\n    exclude(project(':javaagent-bootstrap'))\n  }", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1646#discussion_r524632717", "createdAt": "2020-11-16T21:51:14Z", "author": {"login": "trask"}, "path": "instrumentation/instrumentation.gradle", "diffHunk": "@@ -53,6 +50,9 @@ shadowJar {\n   mergeServiceFiles()\n \n   exclude '**/module-info.class'\n+  //These classes are added to bootstrap classloader by javaagent module\n+  exclude 'io/opentelemetry/instrumentation/api/**/*.*'\n+  exclude 'io/opentelemetry/javaagent/instrumentation/api/**/*.*'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ac73b049375fefd8290fd64198900b3c9bf3f6c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgwMjg5Nw==", "bodyText": "With the dependencies changed to compileOnly do we need any change here?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1646#discussion_r524802897", "createdAt": "2020-11-17T00:21:43Z", "author": {"login": "anuraaga"}, "path": "instrumentation/instrumentation.gradle", "diffHunk": "@@ -53,6 +50,9 @@ shadowJar {\n   mergeServiceFiles()\n \n   exclude '**/module-info.class'\n+  //These classes are added to bootstrap classloader by javaagent module\n+  exclude 'io/opentelemetry/instrumentation/api/**/*.*'\n+  exclude 'io/opentelemetry/javaagent/instrumentation/api/**/*.*'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYzMjcxNw=="}, "originalCommit": {"oid": "9ac73b049375fefd8290fd64198900b3c9bf3f6c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgwNDQxOA==", "bodyText": "it's also getting these dependencies through :javaagent-tooling", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1646#discussion_r524804418", "createdAt": "2020-11-17T00:24:15Z", "author": {"login": "trask"}, "path": "instrumentation/instrumentation.gradle", "diffHunk": "@@ -53,6 +50,9 @@ shadowJar {\n   mergeServiceFiles()\n \n   exclude '**/module-info.class'\n+  //These classes are added to bootstrap classloader by javaagent module\n+  exclude 'io/opentelemetry/instrumentation/api/**/*.*'\n+  exclude 'io/opentelemetry/javaagent/instrumentation/api/**/*.*'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYzMjcxNw=="}, "originalCommit": {"oid": "9ac73b049375fefd8290fd64198900b3c9bf3f6c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTAyMzg2OnYy", "diffSide": "RIGHT", "path": "instrumentation/instrumentation.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNTozNDoyMlrOH0lA1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNToyNDo0NVrOH06Q_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg5NDQyMg==", "bodyText": "Should this also be compileOnly?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1646#discussion_r524894422", "createdAt": "2020-11-17T05:34:22Z", "author": {"login": "anuraaga"}, "path": "instrumentation/instrumentation.gradle", "diffHunk": "@@ -34,16 +34,13 @@ subprojects {\n }\n \n dependencies {\n-  implementation project(':instrumentation-api')\n-  implementation project(':javaagent-api')\n-  implementation(project(':javaagent-tooling')) {\n-    exclude module: ':javaagent-bootstrap'\n-  }\n+  compileOnly project(':instrumentation-api')\n+  compileOnly project(':javaagent-api')\n+  implementation(project(':javaagent-tooling'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ac73b049375fefd8290fd64198900b3c9bf3f6c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI0MjYyMA==", "bodyText": "javaagent module currently has only :javaagent-bootstrap in shadowInclude configuration. Which transitively depends on :javaagent-api and :instrumentation-api. All these three should be added to bootstrap classloader. This is done by javaagent module and thus these three modules should NOT come via instrumentation module. Everything that comes from the latter goes into inst folder inside jar and thus into agent classloader. javaagent-tooling should go there as well. Thus it is correct that instrumentation module includes it into its own shadowJar.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1646#discussion_r525242620", "createdAt": "2020-11-17T15:24:45Z", "author": {"login": "iNikem"}, "path": "instrumentation/instrumentation.gradle", "diffHunk": "@@ -34,16 +34,13 @@ subprojects {\n }\n \n dependencies {\n-  implementation project(':instrumentation-api')\n-  implementation project(':javaagent-api')\n-  implementation(project(':javaagent-tooling')) {\n-    exclude module: ':javaagent-bootstrap'\n-  }\n+  compileOnly project(':instrumentation-api')\n+  compileOnly project(':javaagent-api')\n+  implementation(project(':javaagent-tooling'))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg5NDQyMg=="}, "originalCommit": {"oid": "9ac73b049375fefd8290fd64198900b3c9bf3f6c"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4589, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}