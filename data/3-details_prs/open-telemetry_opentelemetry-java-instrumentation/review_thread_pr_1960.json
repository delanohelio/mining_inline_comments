{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NzgzMjM4", "number": 1960, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo0NTo0N1rOFLe8kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo0NTo0N1rOFLe8kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NTg1NjgwOnYy", "diffSide": "RIGHT", "path": "instrumentation/aws-lambda-1.0/library/README.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo0NTo0N1rOIOrm3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxMToxNzo1NFrOIQOkGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2NTQzNg==", "bodyText": "probably should follow standard config property naming? see #1414", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1960#discussion_r552265436", "createdAt": "2021-01-05T23:45:47Z", "author": {"login": "trask"}, "path": "instrumentation/aws-lambda-1.0/library/README.md", "diffHunk": "@@ -6,6 +6,8 @@ This package contains libraries to help instrument AWS lambda functions in your\n To use the instrumentation, configure `OTEL_LAMBDA_HANDLER` env property to your lambda handler method in following format `package.ClassName::methodName`\n and use one of wrappers as your lambda `Handler`.\n \n+In order to configure a span flush timeout (default is set to 1 second), please configure `OTEL_LAMBDA_FLUSH_TIMEOUT` env property. The value is in seconds.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9250c53e8082047f322fe378e6c8888d96c15f79"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU2NTA0Ng==", "bodyText": "That's a very good idea, I'm all in favour of standardisation. This is of course a bit different than the \"regular\" usage of the config properties as here we're not configuring an instrumentation but a runtime wrapper (only via env property) that uses the aws lambda instrumentation\nIf such usage fits into the model that you've proposed (for me it sounds OK), I believe that the updated property name should be: OTEL_INSTRUMENTATION_AWS-LAMBDA_FLUSH_TIMEOUT There is also another config property, defining the handler, which would then become: OTEL_INSTRUMENTATION_AWS-LAMBDA_HANDLER.\n@trask please have a look ^^", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1960#discussion_r553565046", "createdAt": "2021-01-07T20:16:30Z", "author": {"login": "kubawach"}, "path": "instrumentation/aws-lambda-1.0/library/README.md", "diffHunk": "@@ -6,6 +6,8 @@ This package contains libraries to help instrument AWS lambda functions in your\n To use the instrumentation, configure `OTEL_LAMBDA_HANDLER` env property to your lambda handler method in following format `package.ClassName::methodName`\n and use one of wrappers as your lambda `Handler`.\n \n+In order to configure a span flush timeout (default is set to 1 second), please configure `OTEL_LAMBDA_FLUSH_TIMEOUT` env property. The value is in seconds.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2NTQzNg=="}, "originalCommit": {"oid": "9250c53e8082047f322fe378e6c8888d96c15f79"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzYyNTc5OA==", "bodyText": "that sounds good, with underscore instead of dash, e.g.\nOTEL_INSTRUMENTATION_AWS_LAMBDA_FLUSH_TIMEOUT\nand\nOTEL_INSTRUMENTATION_AWS_LAMBDA_HANDLER", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1960#discussion_r553625798", "createdAt": "2021-01-07T22:23:45Z", "author": {"login": "trask"}, "path": "instrumentation/aws-lambda-1.0/library/README.md", "diffHunk": "@@ -6,6 +6,8 @@ This package contains libraries to help instrument AWS lambda functions in your\n To use the instrumentation, configure `OTEL_LAMBDA_HANDLER` env property to your lambda handler method in following format `package.ClassName::methodName`\n and use one of wrappers as your lambda `Handler`.\n \n+In order to configure a span flush timeout (default is set to 1 second), please configure `OTEL_LAMBDA_FLUSH_TIMEOUT` env property. The value is in seconds.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2NTQzNg=="}, "originalCommit": {"oid": "9250c53e8082047f322fe378e6c8888d96c15f79"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzg4Njc0Ng==", "bodyText": "Ah yes, kebab-case is for dot-property names only. Silly me :) Updated PR, please have a look.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1960#discussion_r553886746", "createdAt": "2021-01-08T11:17:54Z", "author": {"login": "kubawach"}, "path": "instrumentation/aws-lambda-1.0/library/README.md", "diffHunk": "@@ -6,6 +6,8 @@ This package contains libraries to help instrument AWS lambda functions in your\n To use the instrumentation, configure `OTEL_LAMBDA_HANDLER` env property to your lambda handler method in following format `package.ClassName::methodName`\n and use one of wrappers as your lambda `Handler`.\n \n+In order to configure a span flush timeout (default is set to 1 second), please configure `OTEL_LAMBDA_FLUSH_TIMEOUT` env property. The value is in seconds.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2NTQzNg=="}, "originalCommit": {"oid": "9250c53e8082047f322fe378e6c8888d96c15f79"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4406, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}