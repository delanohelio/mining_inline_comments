{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNzAyOTU1", "number": 51, "title": "Use OpenTelemetry API", "bodyText": "\ud83c\udf89\ud83c\udf89\ud83c\udf89\nSome instrumentation was commented out in this PR, to be brought back later (tracking in #50).\nCloses #43", "createdAt": "2020-01-08T23:34:41Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/51", "merged": true, "mergeCommit": {"oid": "64fd99862a4bc5ed6bbc22439631f7efdd0b4344"}, "closed": true, "closedAt": "2020-01-14T00:51:38Z", "author": {"login": "trask"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5gfRgAH2gAyMzYwNzAyOTU1OjdhMDM3YzA5MmE4ZDExNzdhMzM5Y2MwZGY4YTJiNDE4ZThhM2MwMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6Fc38AFqTM0MjIxNjc3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7a037c092a8d1177a339cc0df8a2b418e8a3c037", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7a037c092a8d1177a339cc0df8a2b418e8a3c037", "committedDate": "2020-01-12T04:59:44Z", "message": "Remove dd-trace-ot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8890d27e2703018a688aef3c97c3a83deded5a9", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d8890d27e2703018a688aef3c97c3a83deded5a9", "committedDate": "2020-01-12T04:59:45Z", "message": "Remove disableShadowRelocate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2493557e16118e03b96c63c15aedff49c21064c5", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/2493557e16118e03b96c63c15aedff49c21064c5", "committedDate": "2020-01-12T05:05:29Z", "message": "Remove GlobalTracer and ScopeListener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "749b43b1d120c2ef883ebabef9140f6b9761fccd", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/749b43b1d120c2ef883ebabef9140f6b9761fccd", "committedDate": "2020-01-12T05:08:17Z", "message": "Comment out instr depending on activeScope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5379c7af84ee5b03a6548dec895e8e72581e67e1", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/5379c7af84ee5b03a6548dec895e8e72581e67e1", "committedDate": "2020-01-12T05:16:04Z", "message": "OpenTelemetry implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6bf010c67e9d7964f85cbf7749032b1357f7d95", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d6bf010c67e9d7964f85cbf7749032b1357f7d95", "committedDate": "2020-01-12T05:25:27Z", "message": "Update spring-webflux instrumentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d95dcce5b0db205322da24c809c0fa1716f65c27", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d95dcce5b0db205322da24c809c0fa1716f65c27", "committedDate": "2020-01-12T05:25:27Z", "message": "Update jax-rs-annotation instrumentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7038b8c0aa6788145ac07735c78740291cfd39b", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a7038b8c0aa6788145ac07735c78740291cfd39b", "committedDate": "2020-01-12T05:25:27Z", "message": "Update test infrastruture"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2db585be56dc9b2fa63a094668db2edfb4ef5b6", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f2db585be56dc9b2fa63a094668db2edfb4ef5b6", "committedDate": "2020-01-12T05:25:27Z", "message": "Update instrumentation tests to pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f48bc212e0c7265eabed7f023c413670c1cb02e0", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f48bc212e0c7265eabed7f023c413670c1cb02e0", "committedDate": "2020-01-12T05:27:03Z", "message": "Fix ratpack failing test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed97f553ff374352f26f705463c5bf067e23694b", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ed97f553ff374352f26f705463c5bf067e23694b", "committedDate": "2020-01-08T23:14:15Z", "message": "Use OpenTelemetry API"}, "afterCommit": {"oid": "f48bc212e0c7265eabed7f023c413670c1cb02e0", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f48bc212e0c7265eabed7f023c413670c1cb02e0", "committedDate": "2020-01-12T05:27:03Z", "message": "Fix ratpack failing test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjE2Nzc0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/51#pullrequestreview-342216774", "createdAt": "2020-01-13T23:53:11Z", "commit": {"oid": "5379c7af84ee5b03a6548dec895e8e72581e67e1"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzo1MzoxMVrOFdIZGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDowMjoyOVrOFdIimw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MDUyMA==", "bodyText": "Do you know if OpenTelemetry handles this edge case already?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/51#discussion_r366090520", "createdAt": "2020-01-13T23:53:11Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentTracerImpl.java", "diffHunk": "@@ -283,55 +269,54 @@ public boolean equals(final Object obj) {\n     @Override\n     public <C> void inject(final AgentSpan span, final C carrier, final Setter<C> setter) {\n       assert span instanceof AgentSpanImpl;\n-      tracer.inject(\n-          ((AgentSpanImpl) span).getSpan().context(),\n-          new AgentPropagationImpl.Injector<>(carrier, setter));\n+      tracer\n+          .getHttpTextFormat()\n+          .inject(\n+              ((AgentSpanImpl) span).getSpan().getContext(),\n+              carrier,\n+              new AgentPropagationImpl.Injector<>(setter));\n     }\n \n-    private final class Injector<C> implements TextMapInject {\n-      private final C carrier;\n+    private final class Injector<C> implements HttpTextFormat.Setter<C> {\n       private final Setter<C> setter;\n \n-      private Injector(final C carrier, final Setter<C> setter) {\n-        this.carrier = carrier;\n+      private Injector(final Setter<C> setter) {\n         this.setter = setter;\n       }\n \n       @Override\n-      public void put(final String key, final String value) {\n+      public void put(final C carrier, final String key, final String value) {\n         setter.set(carrier, key, value);\n       }\n     }\n \n     @Override\n     public <C> AgentSpan.Context extract(final C carrier, final Getter<C> getter) {\n-      return new AgentContextImpl(tracer.extract(new Extractor(carrier, getter)));\n+      SpanContext extract;\n+      try {\n+        extract = tracer.getHttpTextFormat().extract(carrier, new Extractor<>(getter));\n+      } catch (final IllegalArgumentException e) {\n+        extract = null;\n+      }\n+      return new AgentContextImpl(extract);\n     }\n   }\n \n-  private static final class Extractor<C> implements TextMapExtract {\n-    private final Map<String, String> extracted;\n-\n-    private Extractor(final C carrier, final Getter<C> getter) {\n-      extracted = new HashMap<>();\n-      for (final String key : getter.keys(carrier)) {\n-        // extracted header value\n-        String s = getter.get(carrier, key);\n-        // in case of multiple values in the header, need to parse", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5379c7af84ee5b03a6548dec895e8e72581e67e1"}, "originalPosition": 358}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5Mjk1NQ==", "bodyText": "This is going to cause some weirdness... I couldn't think of a better solution though.  Ideas?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/51#discussion_r366092955", "createdAt": "2020-01-14T00:02:29Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/jax-rs-annotations-2/src/main/java/datadog/trace/instrumentation/jaxrs2/JaxRsAnnotationsDecorator.java", "diffHunk": "@@ -63,11 +63,10 @@ public void onJaxRsSpan(\n     }\n   }\n \n-  private void updateParent(AgentSpan span, final String resourceName) {\n+  private void updateParent(final AgentSpan span, final String resourceName) {\n     if (span == null) {\n       return;\n     }\n-    span = span.getLocalRootSpan();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95dcce5b0db205322da24c809c0fa1716f65c27"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3342, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}