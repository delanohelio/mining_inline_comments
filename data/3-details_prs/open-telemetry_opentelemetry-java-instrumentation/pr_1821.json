{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMDU2NjM4", "number": 1821, "title": "Introduce test matrix", "bodyText": "Preparation for #1595", "createdAt": "2020-12-02T14:31:22Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1821", "merged": true, "mergeCommit": {"oid": "71f1a791004b51dae28951fd8c159ab0618900e5"}, "closed": true, "closedAt": "2020-12-03T10:34:45Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiOZTRAH2gAyNTMxMDU2NjM4OjdhMDNiMjU1NTIwZDQ5ZjQ2NzdmMmE0NWQyYzI4OTgwZmY4MGZlZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdipt4cgFqTU0NDQ0ODk4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7a03b255520d49f4677f2a45d2c28980ff80fee5", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7a03b255520d49f4677f2a45d2c28980ff80fee5", "committedDate": "2020-12-02T13:16:58Z", "message": "Introduce test matrix and proper WildFly test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f890e6bdec0617c5081d570bd068d0ea9715881", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0f890e6bdec0617c5081d570bd068d0ea9715881", "committedDate": "2020-12-02T13:26:28Z", "message": "Restore test to old version until matrix is merged"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "044bb92480b95bb7abefe8411fbe9bcc399510fe", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/044bb92480b95bb7abefe8411fbe9bcc399510fe", "committedDate": "2020-12-02T14:30:57Z", "message": "Add workflow to publish test matrix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37c6211359a49296e37fcf0d3aba3828ae0db630", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/37c6211359a49296e37fcf0d3aba3828ae0db630", "committedDate": "2020-12-02T15:04:44Z", "message": "Satisfy checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24da507b91ade2fb2da46f1d1dd7d290e4041020", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/24da507b91ade2fb2da46f1d1dd7d290e4041020", "committedDate": "2020-12-02T19:29:07Z", "message": "Polish"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjg1NTMx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1821#pullrequestreview-543685531", "createdAt": "2020-12-03T07:56:02Z", "commit": {"oid": "24da507b91ade2fb2da46f1d1dd7d290e4041020"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1NjowM1rOH-E1OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1NjoyN1rOH-E35Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg1MjkyMA==", "bodyText": "Can we use docker build-arg instead of custom templating?\nhttps://docs.docker.com/engine/reference/commandline/build/#set-build-time-variables---build-arg", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1821#discussion_r534852920", "createdAt": "2020-12-03T07:56:03Z", "author": {"login": "anuraaga"}, "path": "smoke-tests/matrix/src/payara-dockerfile.template", "diffHunk": "@@ -0,0 +1,5 @@\n+FROM payara/server-full:@version@", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24da507b91ade2fb2da46f1d1dd7d290e4041020"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg1MzYwNQ==", "bodyText": "I think this is worth some comments on what it's preparing", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1821#discussion_r534853605", "createdAt": "2020-12-03T07:56:27Z", "author": {"login": "anuraaga"}, "path": "smoke-tests/matrix/build.gradle", "diffHunk": "@@ -0,0 +1,100 @@\n+import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage\n+import com.bmuschko.gradle.docker.tasks.image.DockerPushImage\n+import org.apache.tools.ant.filters.ReplaceTokens\n+\n+plugins {\n+  id \"war\"\n+  id \"com.bmuschko.docker-remote-api\" version \"6.6.1\"\n+}\n+\n+compileJava {\n+  options.release.set(8)\n+}\n+\n+repositories {\n+  jcenter()\n+}\n+dependencies {\n+  implementation(\"javax.servlet:javax.servlet-api:3.0.1\")\n+}\n+\n+static def dockerFileName(String template) {\n+  template.replace(\"-dockerfile.template\", \".dockerfile\")\n+}\n+\n+def dockerWorkingDir = new File(project.buildDir, \"docker\")\n+\n+def buildMatrixTask = tasks.create(\"buildMatrix\") {\n+  group = \"build\"\n+  description = \"Builds all Docker images for the test matrix\"\n+}\n+\n+Set<String> matrix = []\n+def pushMatrixTask = tasks.create(\"pushMatrix\", DockerPushImage) {\n+  group = \"publishing\"\n+  description = \"Push all Docker images for the test matrix\"\n+  dependsOn(buildMatrixTask)\n+  images.set(matrix)\n+}\n+\n+def targets = [\n+  \"jetty\"  : [\n+    \"9.4.35\"      : [\"8\", \"11\", \"15\"],\n+    \"10.0.0.beta3\": [\"11\", \"15\"],\n+  ],\n+  \"tomcat\" : [\n+    \"7.0.107\"   : [\"8\"],\n+    \"8.5.60\"    : [\"8\", \"11\"],\n+    \"9.0.40\"    : [\"8\", \"11\"],\n+    \"10.0.0-M10\": [\"8\", \"11\"]\n+  ],\n+  \"payara\" : [\n+    \"5.2020.6\"      : [\"8\"],\n+    \"5.2020.6-jdk11\": [\"11\"]\n+  ],\n+  \"wildfly\": [\n+    \"13.0.0.Final\": [\"8\", \"11\", \"15\"],\n+    \"17.0.1.Final\": [\"8\", \"11\", \"15\"],\n+    \"21.0.0.Final\": [\"8\", \"11\", \"15\"]\n+  ],\n+  \"liberty\": [\n+    \"20.0.0.12\": [\"8\", \"11\", \"15\", \"8-jdk-openj9\", \"11-jdk-openj9\", \"15-jdk-openj9\"]\n+  ]\n+]\n+\n+targets.each { server, data ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24da507b91ade2fb2da46f1d1dd7d290e4041020"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b28774dd4dfdd139d40cc7144c909ddce25e4a4", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3b28774dd4dfdd139d40cc7144c909ddce25e4a4", "committedDate": "2020-12-03T09:17:47Z", "message": "Use docker build args instead of replacing tokens"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNzQ4ODQ2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1821#pullrequestreview-543748846", "createdAt": "2020-12-03T09:18:43Z", "commit": {"oid": "3b28774dd4dfdd139d40cc7144c909ddce25e4a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NDQ4OTg1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1821#pullrequestreview-544448985", "createdAt": "2020-12-03T21:06:53Z", "commit": {"oid": "3b28774dd4dfdd139d40cc7144c909ddce25e4a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTowNjo1M1rOH-zm7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTowNjo1M1rOH-zm7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTYxOTMwOA==", "bodyText": "this is some really great test coverage that we were missing!!!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1821#discussion_r535619308", "createdAt": "2020-12-03T21:06:53Z", "author": {"login": "trask"}, "path": "smoke-tests/matrix/build.gradle", "diffHunk": "@@ -0,0 +1,93 @@\n+import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage\n+import com.bmuschko.gradle.docker.tasks.image.DockerPushImage\n+\n+plugins {\n+  id \"war\"\n+  id \"com.bmuschko.docker-remote-api\" version \"6.6.1\"\n+}\n+\n+compileJava {\n+  options.release.set(8)\n+}\n+\n+repositories {\n+  jcenter()\n+}\n+dependencies {\n+  implementation(\"javax.servlet:javax.servlet-api:3.0.1\")\n+}\n+\n+def buildMatrixTask = tasks.create(\"buildMatrix\") {\n+  group = \"build\"\n+  description = \"Builds all Docker images for the test matrix\"\n+}\n+\n+Set<String> matrix = []\n+tasks.create(\"pushMatrix\", DockerPushImage) {\n+  group = \"publishing\"\n+  description = \"Push all Docker images for the test matrix\"\n+  dependsOn(buildMatrixTask)\n+  images.set(matrix)\n+}\n+\n+def targets = [\n+  \"jetty\"  : [\n+    \"9.4.35\"      : [\"8\", \"11\", \"15\"],\n+    \"10.0.0.beta3\": [\"11\", \"15\"],\n+  ],\n+  \"tomcat\" : [\n+    \"7.0.107\"   : [\"8\"],\n+    \"8.5.60\"    : [\"8\", \"11\"],\n+    \"9.0.40\"    : [\"8\", \"11\"],\n+    \"10.0.0-M10\": [\"8\", \"11\"]\n+  ],\n+  \"payara\" : [\n+    \"5.2020.6\"      : [\"8\"],\n+    \"5.2020.6-jdk11\": [\"11\"]\n+  ],\n+  \"wildfly\": [\n+    \"13.0.0.Final\": [\"8\", \"11\", \"15\"],\n+    \"17.0.1.Final\": [\"8\", \"11\", \"15\"],\n+    \"21.0.0.Final\": [\"8\", \"11\", \"15\"]\n+  ],\n+  \"liberty\": [\n+    \"20.0.0.12\": [\"8\", \"11\", \"15\", \"8-jdk-openj9\", \"11-jdk-openj9\", \"15-jdk-openj9\"]\n+  ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b28774dd4dfdd139d40cc7144c909ddce25e4a4"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2119, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}