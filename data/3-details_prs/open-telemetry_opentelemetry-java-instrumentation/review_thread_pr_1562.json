{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MDM0ODgz", "number": 1562, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNjowODoxNlrOE19QJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNjowODo0NlrOE19QhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDEzNTQzOnYy", "diffSide": "RIGHT", "path": "instrumentation/jaxrs/jaxrs-1.0/src/main/java/io/opentelemetry/javaagent/instrumentation/jaxrs/v1_0/JaxRsAnnotationsInstrumentation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNjowODoxNlrOHuhRpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowNjoxMlrOHunvYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTczMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // this is required to make sure instrumentation won't apply to jax-rs 2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1562#discussion_r518541733", "createdAt": "2020-11-06T06:08:16Z", "author": {"login": "trask"}, "path": "instrumentation/jaxrs/jaxrs-1.0/src/main/java/io/opentelemetry/javaagent/instrumentation/jaxrs/v1_0/JaxRsAnnotationsInstrumentation.java", "diffHunk": "@@ -30,19 +28,12 @@\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n-@AutoService(Instrumenter.class)\n-public final class JaxRsAnnotationsInstrumentation extends Instrumenter.Default {\n-\n-  public JaxRsAnnotationsInstrumentation() {\n-    super(\"jax-rs\", \"jaxrs\", \"jax-rs-annotations\");\n-  }\n+final class JaxRsAnnotationsInstrumentation implements TypeInstrumentation {\n \n   // this is required to make sure instrumentation won't apply to jax-rs 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c1d36953e034711c53abe55a9f90a7741582104"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NzY0OQ==", "bodyText": "Nice catch!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1562#discussion_r518647649", "createdAt": "2020-11-06T10:06:12Z", "author": {"login": "mateuszrzeszutek"}, "path": "instrumentation/jaxrs/jaxrs-1.0/src/main/java/io/opentelemetry/javaagent/instrumentation/jaxrs/v1_0/JaxRsAnnotationsInstrumentation.java", "diffHunk": "@@ -30,19 +28,12 @@\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n-@AutoService(Instrumenter.class)\n-public final class JaxRsAnnotationsInstrumentation extends Instrumenter.Default {\n-\n-  public JaxRsAnnotationsInstrumentation() {\n-    super(\"jax-rs\", \"jaxrs\", \"jax-rs-annotations\");\n-  }\n+final class JaxRsAnnotationsInstrumentation implements TypeInstrumentation {\n \n   // this is required to make sure instrumentation won't apply to jax-rs 2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTczMw=="}, "originalCommit": {"oid": "5c1d36953e034711c53abe55a9f90a7741582104"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDEzNjM3OnYy", "diffSide": "RIGHT", "path": "instrumentation/jaxrs/jaxrs-1.0/src/main/java/io/opentelemetry/javaagent/instrumentation/jaxrs/v1_0/JaxRsAnnotationsInstrumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNjowODo0NlrOHuhSLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNjowODo0NlrOHuhSLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTg3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return hasClassesNamed(\"javax.ws.rs.Path\");\n          \n          \n            \n                // Optimization for expensive typeMatcher.\n          \n          \n            \n                return hasClassesNamed(\"javax.ws.rs.Path\");", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1562#discussion_r518541870", "createdAt": "2020-11-06T06:08:46Z", "author": {"login": "trask"}, "path": "instrumentation/jaxrs/jaxrs-1.0/src/main/java/io/opentelemetry/javaagent/instrumentation/jaxrs/v1_0/JaxRsAnnotationsInstrumentation.java", "diffHunk": "@@ -30,19 +28,12 @@\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n-@AutoService(Instrumenter.class)\n-public final class JaxRsAnnotationsInstrumentation extends Instrumenter.Default {\n-\n-  public JaxRsAnnotationsInstrumentation() {\n-    super(\"jax-rs\", \"jaxrs\", \"jax-rs-annotations\");\n-  }\n+final class JaxRsAnnotationsInstrumentation implements TypeInstrumentation {\n \n   // this is required to make sure instrumentation won't apply to jax-rs 2\n   @Override\n   public ElementMatcher<ClassLoader> classLoaderMatcher() {\n-    return not(hasClassesNamed(\"javax.ws.rs.container.AsyncResponse\"))\n-        // Optimization for expensive typeMatcher.\n-        .and(hasClassesNamed(\"javax.ws.rs.Path\"));\n+    return hasClassesNamed(\"javax.ws.rs.Path\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c1d36953e034711c53abe55a9f90a7741582104"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4529, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}