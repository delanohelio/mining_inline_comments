{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMTg0OTg0", "number": 1919, "title": "Skip attempting to retransform our agent classes", "bodyText": "In test output we have exceptions like\n12:49:55.808 [Test worker] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule\njava.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.javaclassloader.ClassLoaderInstrumentation$Holder\n\tat net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)\n\tat io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)\n\tat net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)\n\tat net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)\n\tat net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)\n\tat net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)\n\tat net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)\n\tat net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)\n\tat io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)\n\tat net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)\n\tat net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)\n\tat net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)\n\tat net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)\n\tat net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)\n\tat net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)\n\tat net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)\n\tat net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)\n\tat net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)\n\tat io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:165)\n\tat io.opentelemetry.instrumentation.test.AgentTestRunner.setupBeforeTests(AgentTestRunner.java:180)\n\nWhich as far as I understand happens because a resource can't be found for injected helper class.\nThis change excludes agent classes and injected helpers from retransformation candidates.", "createdAt": "2020-12-16T13:59:48Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1919", "merged": true, "mergeCommit": {"oid": "ad82c30ec27ea247c6e2c114e9f96e72439005b4"}, "closed": true, "closedAt": "2020-12-18T20:29:54Z", "author": {"login": "laurit"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmvQg6AH2gAyNTQxMTg0OTg0OmRkMWY2OThkYzA4ZDJhMGJjMjA1YzZhY2UyNjMzZDgyYWFlOWI2OWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnZ3x1AH2gAyNTQxMTg0OTg0OjA3YmRkNDc2YjYyYjMwYzlhMGIwNDNkZjNjOWQwNmFhYmQxY2ZlOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dd1f698dc08d2a0bc205c6ace2633d82aae9b69f", "author": {"user": {"login": "laurit", "name": "Lauri Tulmin"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dd1f698dc08d2a0bc205c6ace2633d82aae9b69f", "committedDate": "2020-12-16T13:49:56Z", "message": "Skip attempting to retransform our agent classes and generated helper classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNzE0OTY2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1919#pullrequestreview-553714966", "createdAt": "2020-12-16T14:04:09Z", "commit": {"oid": "dd1f698dc08d2a0bc205c6ace2633d82aae9b69f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjkyMTM3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1919#pullrequestreview-554292137", "createdAt": "2020-12-17T05:36:13Z", "commit": {"oid": "dd1f698dc08d2a0bc205c6ace2633d82aae9b69f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNTozNjoxM1rOIHld9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNTozNjoxM1rOIHld9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyNDgyMw==", "bodyText": "Removing this would remove the question @mateuszrzeszutek raised about RunnableWrapper.\nInjected classes can't be instrumented since they are injected themselves during ClassFileTransformer.transform(), so those are safe to skip, and sounds like are the culprit of the log spamming?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1919#discussion_r544824823", "createdAt": "2020-12-17T05:36:13Z", "author": {"login": "trask"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentInstaller.java", "diffHunk": "@@ -378,5 +380,37 @@ public void onComplete(\n     }\n   }\n \n+  private static class RedefinitionDiscoveryStrategy\n+      implements AgentBuilder.RedefinitionStrategy.DiscoveryStrategy {\n+    private static final AgentBuilder.RedefinitionStrategy.DiscoveryStrategy delegate =\n+        AgentBuilder.RedefinitionStrategy.DiscoveryStrategy.Reiterating.INSTANCE;\n+\n+    @Override\n+    public Iterable<Iterable<Class<?>>> resolve(Instrumentation instrumentation) {\n+      // filter out our agent classes and injected helper classes\n+      return Iterables.transform(\n+          delegate.resolve(instrumentation), i -> Iterables.filter(i, c -> !isIgnored(c)));\n+    }\n+\n+    private static boolean isIgnored(Class<?> c) {\n+      ClassLoader cl = c.getClassLoader();\n+      if (cl != null && cl.getClass() == AgentClassLoader.class) {\n+        return true;\n+      }\n+\n+      if (HelperInjector.isInjectedClass(c)) {\n+        return true;\n+      }\n+\n+      if (cl == null) {\n+        String name = c.getName();\n+        List<String> prefixes = BootstrapPackagePrefixesHolder.getBoostrapPackagePrefixes();\n+        return prefixes.stream().anyMatch(prefix -> name.startsWith(prefix));\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd1f698dc08d2a0bc205c6ace2633d82aae9b69f"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NDY5ODE3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1919#pullrequestreview-554469817", "createdAt": "2020-12-17T10:29:01Z", "commit": {"oid": "dd1f698dc08d2a0bc205c6ace2633d82aae9b69f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18f822fe1b6ba82f55f4e45338396429f32d3855", "author": {"user": {"login": "laurit", "name": "Lauri Tulmin"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/18f822fe1b6ba82f55f4e45338396429f32d3855", "committedDate": "2020-12-18T14:07:26Z", "message": "remove filtering classes base on bootstrap package prefix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "117761d78900f79a99943de592ffcba02a82150d", "author": {"user": {"login": "laurit", "name": "Lauri Tulmin"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/117761d78900f79a99943de592ffcba02a82150d", "committedDate": "2020-12-18T14:15:56Z", "message": "Merge branch 'master' into skip-our-clases-from-redefine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54373cb1a9a3177c9044612894c88b6a6806b9a1", "author": {"user": {"login": "laurit", "name": "Lauri Tulmin"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/54373cb1a9a3177c9044612894c88b6a6806b9a1", "committedDate": "2020-12-18T14:24:43Z", "message": "fix merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07bdd476b62b30c9a0b043df3c9d06aabd1cfe96", "author": {"user": {"login": "laurit", "name": "Lauri Tulmin"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/07bdd476b62b30c9a0b043df3c9d06aabd1cfe96", "committedDate": "2020-12-18T15:28:50Z", "message": "spotless fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2012, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}