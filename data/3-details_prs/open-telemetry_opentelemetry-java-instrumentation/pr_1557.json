{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NTYwOTQ1", "number": 1557, "title": "Refactor Instrumenters into InstrumentationModules - D, E, F, G, H", "bodyText": "Another part of #1274\nRefactored all instrumentations whose names begin with D, E, F, G or H", "createdAt": "2020-11-04T18:19:57Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1557", "merged": true, "mergeCommit": {"oid": "aa3ba8d165dac11d6ed5d9d4339b3b0292f0539e"}, "closed": true, "closedAt": "2020-11-09T22:41:13Z", "author": {"login": "mateuszrzeszutek"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZif2PAH2gAyNTE1NTYwOTQ1OjMzODI1YTRiYjAxYzA1NTAzMjE5ZjAxODJlMDBkOGUzM2FiMjAxNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZ0DCBgH2gAyNTE1NTYwOTQ1OmVlMDc5YTU2ZWNmMDZkZWQ0OWUyZGE4NWM2MDliOWQyZWQwYjI1OWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "33825a4bb01c05503219f0182e00d8e33ab20175", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/33825a4bb01c05503219f0182e00d8e33ab20175", "committedDate": "2020-11-05T13:36:54Z", "message": "Refactor Instrumenters into InstrumentationModules - D, E, F, G, H"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96a5493700ec430938776ca445ad9c3e45ffd2c2", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/96a5493700ec430938776ca445ad9c3e45ffd2c2", "committedDate": "2020-11-04T18:18:02Z", "message": "Refactor Instrumenters into InstrumentationModules - D, E, F, G, H"}, "afterCommit": {"oid": "33825a4bb01c05503219f0182e00d8e33ab20175", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/33825a4bb01c05503219f0182e00d8e33ab20175", "committedDate": "2020-11-05T13:36:54Z", "message": "Refactor Instrumenters into InstrumentationModules - D, E, F, G, H"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODY5ODc4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1557#pullrequestreview-524869878", "createdAt": "2020-11-06T05:42:10Z", "commit": {"oid": "33825a4bb01c05503219f0182e00d8e33ab20175"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNTo0MjoxMFrOHug1vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNjowMDo0NlrOHuhJ1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUzNDU4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // Not Using AutoService to hook up this instrumentation", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1557#discussion_r518534589", "createdAt": "2020-11-06T05:42:10Z", "author": {"login": "trask"}, "path": "instrumentation/external-annotations/src/main/java/io/opentelemetry/javaagent/instrumentation/traceannotation/TraceConfigInstrumentationModule.java", "diffHunk": "@@ -52,39 +56,32 @@ public TraceConfigInstrumentation() {\n         tracedMethods.removeAll(entry.getValue());\n       }\n     }\n+\n+    typeInstrumentations =\n+        classMethodsToTrace.entrySet().stream()\n+            .filter(e -> !e.getValue().isEmpty())\n+            .map(e -> new TracerClassInstrumentation(e.getKey(), e.getValue()))\n+            .collect(Collectors.toList());\n   }\n \n   @Override\n-  public AgentBuilder instrument(AgentBuilder agentBuilder) {\n-    if (classMethodsToTrace.isEmpty()) {\n-      return agentBuilder;\n-    }\n-\n-    for (Map.Entry<String, Set<String>> entry : classMethodsToTrace.entrySet()) {\n-      TracerClassInstrumentation tracerConfigClass =\n-          new TracerClassInstrumentation(entry.getKey(), entry.getValue());\n-      agentBuilder = tracerConfigClass.instrument(agentBuilder);\n-    }\n-    return agentBuilder;\n+  public String[] helperClassNames() {\n+    return new String[] {\n+      packageName + \".TraceAnnotationTracer\",\n+    };\n   }\n \n   @Override\n-  public int getOrder() {\n-    return 0;\n+  public List<TypeInstrumentation> typeInstrumentations() {\n+    return typeInstrumentations;\n   }\n \n   // Not Using AutoService to hook up this instrumentation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33825a4bb01c05503219f0182e00d8e33ab20175"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUzOTcwOA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1557#discussion_r518539708", "createdAt": "2020-11-06T06:00:42Z", "author": {"login": "trask"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/matcher/MuzzleGradlePluginUtil.java", "diffHunk": "@@ -107,15 +98,6 @@ public static void assertInstrumentationMuzzled(\n     // run helper injector on all instrumenters\n     if (assertPass) {\n       for (Object instrumenter : loadAllInstrumenters(agentClassLoader)) {\n-        if (instrumenter.getClass().getName().endsWith(\"TraceConfigInstrumentation\")) {\n-          // TraceConfigInstrumentation doesn't do muzzle checks\n-          // check on TracerClassInstrumentation instead\n-          instrumenter =\n-              agentClassLoader\n-                  .loadClass(instrumenter.getClass().getName() + \"$TracerClassInstrumentation\")\n-                  .getDeclaredConstructor()\n-                  .newInstance();\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33825a4bb01c05503219f0182e00d8e33ab20175"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUzOTczNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1557#discussion_r518539734", "createdAt": "2020-11-06T06:00:46Z", "author": {"login": "trask"}, "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/matcher/MuzzleGradlePluginUtil.java", "diffHunk": "@@ -50,15 +50,6 @@ public static void assertInstrumentationMuzzled(\n       throws Exception {\n     // muzzle validate all instrumenters\n     for (Object instrumenter : loadAllInstrumenters(agentClassLoader)) {\n-      if (instrumenter.getClass().getName().endsWith(\"TraceConfigInstrumentation\")) {\n-        // TraceConfigInstrumentation doesn't do muzzle checks\n-        // check on TracerClassInstrumentation instead\n-        instrumenter =\n-            agentClassLoader\n-                .loadClass(instrumenter.getClass().getName() + \"$TracerClassInstrumentation\")\n-                .getDeclaredConstructor()\n-                .newInstance();\n-      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33825a4bb01c05503219f0182e00d8e33ab20175"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee079a56ecf06ded49e2da85c609b9d2ed0b259c", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ee079a56ecf06ded49e2da85c609b9d2ed0b259c", "committedDate": "2020-11-06T10:03:43Z", "message": "Update instrumentation/external-annotations/src/main/java/io/opentelemetry/javaagent/instrumentation/traceannotation/TraceConfigInstrumentationModule.java\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2173, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}