{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNTAyNTYy", "number": 1507, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMjoxOTozNlrOEyyNtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMjoxOTozNlrOEyyNtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjg2OTY1OnYy", "diffSide": "RIGHT", "path": "instrumentation/redisson-3.0/src/test/groovy/RedissonClientTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMjoxOTozNlrOHpnTfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMjozMTo0OVrOHpnuzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM5NzYzMQ==", "bodyText": "This magic would benefit from some comment", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1507#discussion_r513397631", "createdAt": "2020-10-28T12:19:36Z", "author": {"login": "iNikem"}, "path": "instrumentation/redisson-3.0/src/test/groovy/RedissonClientTest.groovy", "diffHunk": "@@ -276,10 +279,7 @@ class RedissonClientTest extends AgentTestRunner {\n     assertTraces(2) {\n       trace(0, 1) {\n         span(0) {\n-          def lockScript = \"if (redis.call('exists', KEYS[1]) == 0) then redis.call('hset', KEYS[1], ARGV[2], 1);\" +\n-            \" redis.call('pexpire', KEYS[1], ARGV[1]); return nil; end;\" +\n-            \" if (redis.call('hexists', KEYS[1], ARGV[2]) == 1) then redis.call('hincrby', KEYS[1], ARGV[2], 1);\" +\n-            \" redis.call('pexpire', KEYS[1], ARGV[1]); return nil; end; return redis.call('pttl', KEYS[1]);\"\n+          def lockScriptPattern = compile(\"^\" + quote(\"EVAL \") + \".*\" + quote(\" 1 lock ? ?\") + \"\\$\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18bb06c51991e04ca071a14d83f7050af982b763"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQwNDYyMw==", "bodyText": "Done", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1507#discussion_r513404623", "createdAt": "2020-10-28T12:31:49Z", "author": {"login": "mateuszrzeszutek"}, "path": "instrumentation/redisson-3.0/src/test/groovy/RedissonClientTest.groovy", "diffHunk": "@@ -276,10 +279,7 @@ class RedissonClientTest extends AgentTestRunner {\n     assertTraces(2) {\n       trace(0, 1) {\n         span(0) {\n-          def lockScript = \"if (redis.call('exists', KEYS[1]) == 0) then redis.call('hset', KEYS[1], ARGV[2], 1);\" +\n-            \" redis.call('pexpire', KEYS[1], ARGV[1]); return nil; end;\" +\n-            \" if (redis.call('hexists', KEYS[1], ARGV[2]) == 1) then redis.call('hincrby', KEYS[1], ARGV[2], 1);\" +\n-            \" redis.call('pexpire', KEYS[1], ARGV[1]); return nil; end; return redis.call('pttl', KEYS[1]);\"\n+          def lockScriptPattern = compile(\"^\" + quote(\"EVAL \") + \".*\" + quote(\" 1 lock ? ?\") + \"\\$\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM5NzYzMQ=="}, "originalCommit": {"oid": "18bb06c51991e04ca071a14d83f7050af982b763"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4748, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}