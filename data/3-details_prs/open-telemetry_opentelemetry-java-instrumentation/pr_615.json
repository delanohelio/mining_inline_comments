{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxODI3Mjc2", "number": 615, "title": "Use gRPC Status for thrown exceptions too and remove redundant legacy\u2026", "bodyText": "\u2026 status attributes.\nI noticed that only exceptions explicitly returned by ResponseObserver.onError are passed through onStatus, but gRPC defines a mapping from throwable to status so we should use that for thrown exceptions.\nAlso removed the now redundant status.code attributes and assert on status instead.", "createdAt": "2020-06-30T07:05:40Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615", "merged": true, "mergeCommit": {"oid": "be7841ca337e0d8073e12ac1a88b5584f38106b1"}, "closed": true, "closedAt": "2020-07-01T03:22:10Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwQKB6gH2gAyNDQxODI3Mjc2OmY2ZmI5YWI1ZjA5ZmQyZWZhY2M5ZTRkZmZjMDYxOTQwNmRkNDkwOTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwhLM8gFqTQ0MDUxMjk4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f6fb9ab5f09fd2efacc9e4dffc0619406dd49090", "committedDate": "2020-06-30T07:03:53Z", "message": "Use gRPC Status for thrown exceptions too and remove redundant legacy status attributes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzMwNzYy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#pullrequestreview-439730762", "createdAt": "2020-06-30T07:13:51Z", "commit": {"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzoxMzo1MVrOGqu07Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzoxNToyNlrOGqu4dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDU4OQ==", "bodyText": "If there is throwable, you will end up calling setStatus twice. And it seems like second one will override one set in onError", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r447460589", "createdAt": "2020-06-30T07:13:51Z", "author": {"login": "iNikem"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,18 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n-\n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n+    super.onError(span, status.getCause());\n     span.setStatus(GrpcHelper.statusFromGrpcStatus(status));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MTQ5NQ==", "bodyText": "This looks strange to me without first checking if getCause() != null", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r447461495", "createdAt": "2020-06-30T07:15:26Z", "author": {"login": "iNikem"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,18 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n-\n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n+    super.onError(span, status.getCause());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "299127a9ad8675176b62e599f1571d455ae74871", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/299127a9ad8675176b62e599f1571d455ae74871", "committedDate": "2020-06-30T07:20:21Z", "message": "Clean up a little"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18984f8cc725b9a48cfb9893aaae42cc3235b481", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/18984f8cc725b9a48cfb9893aaae42cc3235b481", "committedDate": "2020-07-01T01:55:29Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e00582bfc5842e185506862deb5cf694de64365", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6e00582bfc5842e185506862deb5cf694de64365", "committedDate": "2020-07-01T02:21:05Z", "message": "Apply cleanup to server decorator too and add unit test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTA1MzE0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#pullrequestreview-440505314", "createdAt": "2020-07-01T02:25:07Z", "commit": {"oid": "6e00582bfc5842e185506862deb5cf694de64365"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoyNTowN1rOGrUo6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoyNTowN1rOGrUo6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MDEwNQ==", "bodyText": "i think calling straight to onComplete here would be a bit clearer\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                onClose(span, Status.fromThrowable(throwable));\n          \n          \n            \n                onComplete(span, Status.fromThrowable(throwable), throwable);", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448080105", "createdAt": "2020-07-01T02:25:07Z", "author": {"login": "trask"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,14 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n+    onComplete(span, GrpcHelper.statusFromGrpcStatus(status), status.getCause());\n+    return span;\n+  }\n \n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n-    span.setStatus(GrpcHelper.statusFromGrpcStatus(status));\n+  @Override\n+  public Span onError(Span span, Throwable throwable) {\n+    assert span != null;\n+    onClose(span, Status.fromThrowable(throwable));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e00582bfc5842e185506862deb5cf694de64365"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTEyOTgy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#pullrequestreview-440512982", "createdAt": "2020-07-01T02:53:15Z", "commit": {"oid": "6e00582bfc5842e185506862deb5cf694de64365"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjo1MzoxNVrOGrVDXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjo1MzoxNVrOGrVDXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4Njg3OA==", "bodyText": "oh yeah, that's not great, keep it as is \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448086878", "createdAt": "2020-07-01T02:53:15Z", "author": {"login": "trask"}, "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,14 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n+    onComplete(span, GrpcHelper.statusFromGrpcStatus(status), status.getCause());\n+    return span;\n+  }\n \n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n-    span.setStatus(GrpcHelper.statusFromGrpcStatus(status));\n+  @Override\n+  public Span onError(Span span, Throwable throwable) {\n+    assert span != null;\n+    onClose(span, Status.fromThrowable(throwable));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MDEwNQ=="}, "originalCommit": {"oid": "6e00582bfc5842e185506862deb5cf694de64365"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3031, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}