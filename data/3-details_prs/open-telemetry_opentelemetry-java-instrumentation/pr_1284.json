{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NjM2NjM2", "number": 1284, "title": "Review DB semantic conventions", "bodyText": "", "createdAt": "2020-09-29T07:52:37Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1284", "merged": true, "mergeCommit": {"oid": "88707c3bb078ebdf4dfd659f481089e467e8597f"}, "closed": true, "closedAt": "2020-10-01T18:17:10Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNj7QTgH2gAyNDk0NjM2NjM2Ojg0NGMyYWMyODI4NDU4ODI3ZTczZjEyOTczNWIwMWYyZjg1YmRmYTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOVhuUgFqTUwMDYwNDA0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "844c2ac2828458827e73f129735b01f2f85bdfa8", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/844c2ac2828458827e73f129735b01f2f85bdfa8", "committedDate": "2020-09-29T08:29:39Z", "message": "Review DB semantic conventions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb74b1145230ed3f2d9f35e9eb4b64cb6a41c2c1", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/eb74b1145230ed3f2d9f35e9eb4b64cb6a41c2c1", "committedDate": "2020-09-29T07:52:02Z", "message": "Review DB semantic conventions"}, "afterCommit": {"oid": "844c2ac2828458827e73f129735b01f2f85bdfa8", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/844c2ac2828458827e73f129735b01f2f85bdfa8", "committedDate": "2020-09-29T08:29:39Z", "message": "Review DB semantic conventions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NTIwNTQ0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1284#pullrequestreview-498520544", "createdAt": "2020-09-29T14:17:45Z", "commit": {"oid": "844c2ac2828458827e73f129735b01f2f85bdfa8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoxNzo0NVrOHZvi3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoxNzo0NVrOHZvi3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc1NTQyMw==", "bodyText": "I realize this is just copied, but maybe remove TODO, it seems to be an implementation of the spec with no todos from what I can tell.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1284#discussion_r496755423", "createdAt": "2020-09-29T14:17:45Z", "author": {"login": "anuraaga"}, "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/DatabaseClientTracer.java", "diffHunk": "@@ -111,32 +112,43 @@ protected void onError(Span span, Throwable throwable) {\n     }\n   }\n \n-  protected void onPeerConnection(Span span, CONNECTION connection) {\n+  protected void setNetSemanticConvention(Span span, CONNECTION connection) {\n     NetPeerUtils.setNetPeer(span, peerAddress(connection));\n   }\n \n   protected void onStatement(Span span, String statement) {\n     span.setAttribute(SemanticAttributes.DB_STATEMENT, statement);\n   }\n \n-  // TODO: \"When it's impossible to get any meaningful representation of the span name, it can be\n-  // populated using the same value as db.name\" (c) spec\n-  protected String spanName(String query) {\n-    return query == null ? DB_QUERY : query;\n-  }\n-\n-  protected abstract String normalizeQuery(QUERY query);\n+  protected abstract @NonNull String normalizeQuery(QUERY query);\n \n-  protected abstract String dbSystem(CONNECTION connection);\n+  protected abstract @NonNull String dbSystem(CONNECTION connection);\n \n-  protected abstract String dbUser(CONNECTION connection);\n+  protected String dbUser(CONNECTION connection) {\n+    return null;\n+  }\n \n-  protected abstract String dbName(CONNECTION connection);\n+  protected String dbName(CONNECTION connection) {\n+    return null;\n+  }\n \n-  // TODO make abstract after implementing in all subclasses\n   protected String dbConnectionString(CONNECTION connection) {\n     return null;\n   }\n \n   protected abstract InetSocketAddress peerAddress(CONNECTION connection);\n+\n+  // TODO: \"When it's impossible to get any meaningful representation of the span name, it can be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "844c2ac2828458827e73f129735b01f2f85bdfa8"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODc0ODY5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1284#pullrequestreview-498874869", "createdAt": "2020-09-29T20:39:43Z", "commit": {"oid": "844c2ac2828458827e73f129735b01f2f85bdfa8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDozOTo0M1rOHaAgKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDozOTo0M1rOHaAgKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAzMzI1OA==", "bodyText": "I don't think @NonNull is needed in these cases since there aren't any callers of these methods who rely on this behavior (of overriding their @Nullable parents).\nMy preference is to only use @NonNull annotation where it's really needed (which is not often).", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1284#discussion_r497033258", "createdAt": "2020-09-29T20:39:43Z", "author": {"login": "trask"}, "path": "instrumentation/cassandra/cassandra-3.0/src/main/java/io/opentelemetry/instrumentation/auto/cassandra/v3_0/CassandraDatabaseClientTracer.java", "diffHunk": "@@ -34,23 +36,24 @@ protected String getInstrumentationName() {\n   }\n \n   @Override\n-  protected String normalizeQuery(String query) {\n+  protected @NonNull String normalizeQuery(String query) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "844c2ac2828458827e73f129735b01f2f85bdfa8"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "747c546cd45c6cd89588551fa77f53b7f024e5b2", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/747c546cd45c6cd89588551fa77f53b7f024e5b2", "committedDate": "2020-10-01T12:13:20Z", "message": "Polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c76b46f477e41fdb39fa2322fe6547dba7f319e", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3c76b46f477e41fdb39fa2322fe6547dba7f319e", "committedDate": "2020-10-01T12:31:30Z", "message": "Test fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNjA0MDQ5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1284#pullrequestreview-500604049", "createdAt": "2020-10-01T18:17:01Z", "commit": {"oid": "3c76b46f477e41fdb39fa2322fe6547dba7f319e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2447, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}