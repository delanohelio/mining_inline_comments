{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNjA5OTkx", "number": 1263, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxOTowODoxNlrOEnxLsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwOTowNTozMFrOEn0ewg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTM1NzMwOnYy", "diffSide": "RIGHT", "path": "docs/contributing/debugging.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxOTowODoxNlrOHYiEUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxOTowODoxNlrOHYiEUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NjAzNA==", "bodyText": "agentmain is for \"hot attach\" and I think breakpoints may work there (though we don't use/test/doc hot attach at this time).\nnaming specific classes as examples I think is good, since lots of agent-tooling classes will work under debugger, just not the initialization code\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            in agent initialization code (`premain`/`agentmain`, `agent-tooling` artifact etc.).\n          \n          \n            \n            in agent initialization code (`OpenTelemetryAgent`, `AgentInitializer`, `AgentInstaller`, `TracerInstaller`, etc.).", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1263#discussion_r495486034", "createdAt": "2020-09-26T19:08:16Z", "author": {"login": "trask"}, "path": "docs/contributing/debugging.md", "diffHunk": "@@ -0,0 +1,33 @@\n+### Debugging\n+\n+Debugging java agent can be a challenging task since some instrumentation\n+code is directly inlined into target classes and debugger is\n+usually not attached early enough to activate breakpoints\n+in agent initialization code (`premain`/`agentmain`, `agent-tooling` artifact etc.).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecb53e4b3241c85612273a188a2de04f66d56e24"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTM2MDM3OnYy", "diffSide": "RIGHT", "path": "docs/contributing/debugging.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxOToxMjozNlrOHYiFwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxOToxMjozNlrOHYiFwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NjQwMA==", "bodyText": "I don't think we use the term \"template methods\" elsewhere. I think \"advice methods\" may be better.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1263#discussion_r495486400", "createdAt": "2020-09-26T19:12:36Z", "author": {"login": "trask"}, "path": "docs/contributing/debugging.md", "diffHunk": "@@ -0,0 +1,33 @@\n+### Debugging\n+\n+Debugging java agent can be a challenging task since some instrumentation\n+code is directly inlined into target classes and debugger is\n+usually not attached early enough to activate breakpoints\n+in agent initialization code (`premain`/`agentmain`, `agent-tooling` artifact etc.).\n+\n+#### Template methods and agent initialization", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecb53e4b3241c85612273a188a2de04f66d56e24"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTg5NzYyOnYy", "diffSide": "RIGHT", "path": "docs/contributing/debugging.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwOTowNTozMFrOHYl8Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwOTowNTozMFrOHYl8Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0OTQ3MA==", "bodyText": "IIUC, this requires remote debugging from this repo since it has the code, but not a users if they are using the agent. Since this is CONTRIBUTING.md that's totally fine :) With the linked issue I'm hoping we can provide that jar so it's easier to debug for a user though - add compileOnly dependency on obfuscated jar and use normal IntelliJ local debug, it's worked ok for me in the past.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1263#discussion_r495549470", "createdAt": "2020-09-27T09:05:30Z", "author": {"login": "anuraaga"}, "path": "docs/contributing/debugging.md", "diffHunk": "@@ -0,0 +1,33 @@\n+### Debugging\n+\n+Debugging java agent can be a challenging task since some instrumentation\n+code is directly inlined into target classes and debugger is\n+usually not attached early enough to activate breakpoints\n+in agent initialization code (`premain`/`agentmain`, `agent-tooling` artifact etc.).\n+\n+#### Template methods and agent initialization\n+\n+Breakpoints do not work in template methods, because their code is directly inlined\n+by ByteBuddy into the target class. It is good to keep these methods as small as possible.\n+The template methods are annotated with:\n+\n+```java\n+@net.bytebuddy.asm.Advice.OnMethodEnter\n+@net.bytebuddy.asm.Advice.OnMethodExit\n+```\n+\n+The best approach to debug template methods and agent initialization is to use the following statements:\n+\n+```java\n+System.out.println()\n+Thread.dumpStack()\n+```\n+\n+#### Enable debugger\n+\n+The following example shows remote debugger configuration. The breakpoints", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecb53e4b3241c85612273a188a2de04f66d56e24"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4970, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}