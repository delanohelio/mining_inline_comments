{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMzI0NjQ5", "number": 1351, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTo0NzoyN1rOEr-sZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTo0ODoxNVrOEr-tYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTUxMzk3OnYy", "diffSide": "RIGHT", "path": "instrumentation/servlet/servlet-common/src/main/java/io/opentelemetry/instrumentation/auto/servlet/dispatcher/RequestDispatcherInstrumentation.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTo0NzoyN1rOHfC4EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQyMDo0NToyMVrOHfqeHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMxNTAyNA==", "bodyText": "Here the correct parent span is important. I think this change breaks it.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1351#discussion_r502315024", "createdAt": "2020-10-09T09:47:27Z", "author": {"login": "iNikem"}, "path": "instrumentation/servlet/servlet-common/src/main/java/io/opentelemetry/instrumentation/auto/servlet/dispatcher/RequestDispatcherInstrumentation.java", "diffHunk": "@@ -115,18 +114,16 @@ public static void start(\n         parent = servletContext;\n       }\n \n-      try (Scope ignored = ContextUtils.withScopedContext(parent)) {\n-        span = TRACER.startSpan(method);\n+      span = TRACER.startSpan(method);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eac4aa651fa5586a00beae9bded018611fe6257"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4MjE5OA==", "bodyText": "Eeek, thanks for catching this!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1351#discussion_r502582198", "createdAt": "2020-10-09T17:43:14Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/servlet-common/src/main/java/io/opentelemetry/instrumentation/auto/servlet/dispatcher/RequestDispatcherInstrumentation.java", "diffHunk": "@@ -115,18 +114,16 @@ public static void start(\n         parent = servletContext;\n       }\n \n-      try (Scope ignored = ContextUtils.withScopedContext(parent)) {\n-        span = TRACER.startSpan(method);\n+      span = TRACER.startSpan(method);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMxNTAyNA=="}, "originalCommit": {"oid": "3eac4aa651fa5586a00beae9bded018611fe6257"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5NTg0Nw==", "bodyText": "Can we add a test for it?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1351#discussion_r502795847", "createdAt": "2020-10-10T14:22:58Z", "author": {"login": "anuraaga"}, "path": "instrumentation/servlet/servlet-common/src/main/java/io/opentelemetry/instrumentation/auto/servlet/dispatcher/RequestDispatcherInstrumentation.java", "diffHunk": "@@ -115,18 +114,16 @@ public static void start(\n         parent = servletContext;\n       }\n \n-      try (Scope ignored = ContextUtils.withScopedContext(parent)) {\n-        span = TRACER.startSpan(method);\n+      span = TRACER.startSpan(method);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMxNTAyNA=="}, "originalCommit": {"oid": "3eac4aa651fa5586a00beae9bded018611fe6257"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk2Mzc0MA==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1351#discussion_r502963740", "createdAt": "2020-10-11T20:45:21Z", "author": {"login": "trask"}, "path": "instrumentation/servlet/servlet-common/src/main/java/io/opentelemetry/instrumentation/auto/servlet/dispatcher/RequestDispatcherInstrumentation.java", "diffHunk": "@@ -115,18 +114,16 @@ public static void start(\n         parent = servletContext;\n       }\n \n-      try (Scope ignored = ContextUtils.withScopedContext(parent)) {\n-        span = TRACER.startSpan(method);\n+      span = TRACER.startSpan(method);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMxNTAyNA=="}, "originalCommit": {"oid": "3eac4aa651fa5586a00beae9bded018611fe6257"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTUxNjUwOnYy", "diffSide": "RIGHT", "path": "instrumentation/spymemcached-2.12/src/main/java/io/opentelemetry/instrumentation/auto/spymemcached/CompletionListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTo0ODoxNVrOHfC5tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNzo0NDowM1rOHfTNPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMxNTQ0NA==", "bodyText": "What if processResult creates new spans? Will their parent change now?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1351#discussion_r502315444", "createdAt": "2020-10-09T09:48:15Z", "author": {"login": "iNikem"}, "path": "instrumentation/spymemcached-2.12/src/main/java/io/opentelemetry/instrumentation/auto/spymemcached/CompletionListener.java", "diffHunk": "@@ -28,29 +26,27 @@ public CompletionListener(MemcachedConnection connection, String methodName) {\n   }\n \n   protected void closeAsyncSpan(T future) {\n-    try (Scope ignored = currentContextWith(span)) {\n-      try {\n-        processResult(span, future);\n-      } catch (CancellationException e) {\n+    try {\n+      processResult(span, future);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eac4aa651fa5586a00beae9bded018611fe6257"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4MjU5MQ==", "bodyText": "processResult is only used to populate span attributes, it doesn't make callbacks into the user code, so I think this is ok", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1351#discussion_r502582591", "createdAt": "2020-10-09T17:44:03Z", "author": {"login": "trask"}, "path": "instrumentation/spymemcached-2.12/src/main/java/io/opentelemetry/instrumentation/auto/spymemcached/CompletionListener.java", "diffHunk": "@@ -28,29 +26,27 @@ public CompletionListener(MemcachedConnection connection, String methodName) {\n   }\n \n   protected void closeAsyncSpan(T future) {\n-    try (Scope ignored = currentContextWith(span)) {\n-      try {\n-        processResult(span, future);\n-      } catch (CancellationException e) {\n+    try {\n+      processResult(span, future);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMxNTQ0NA=="}, "originalCommit": {"oid": "3eac4aa651fa5586a00beae9bded018611fe6257"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4647, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}