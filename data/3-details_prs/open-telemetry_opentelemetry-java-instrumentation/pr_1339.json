{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MjIyMTg1", "number": 1339, "title": "Document traceId/spanId injection into logs", "bodyText": "Resolves #1249", "createdAt": "2020-10-07T12:43:49Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339", "merged": true, "mergeCommit": {"oid": "aa3bbae2009f2df32ef6167ac8980904ecad5690"}, "closed": true, "closedAt": "2020-10-08T12:41:08Z", "author": {"login": "mateuszrzeszutek"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQMf3AgFqTUwMzg0NDk0Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQfBFgABqjM4NTQ2OTY1MDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzODQ0OTQ2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339#pullrequestreview-503844946", "createdAt": "2020-10-07T12:53:37Z", "commit": {"oid": "868a1c4365190e61187bfd476cf90bff5b1c3ee3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo1MzozN1rOHdx1jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo1MzozN1rOHdx1jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4NzI3Nw==", "bodyText": "If it is always true, why include it?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339#discussion_r500987277", "createdAt": "2020-10-07T12:53:37Z", "author": {"login": "iNikem"}, "path": "docs/logger-mdc-instrumentation.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Logger MDC auto-instrumentation\n+\n+The Mapped Diagnostic Context (MDC) is\n+\n+> an instrument for distinguishing interleaved log output from different sources.\n+> &mdash; <cite> [log4j MDC documentation](http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/MDC.html) </cite>\n+\n+It contains thread-local contextual information which is later copied to each logging event captured\n+by a logging library.\n+\n+The OTel Java agent injects several pieces of information about the current span into each logging\n+event's MDC copy:\n+\n+- `traceId` - the current trace id\n+  (same as `TracingContextUtils.getCurrentSpan().getContext().getTraceIdAsHexString()`);\n+- `spanId` - the current span id\n+  (same as `TracingContextUtils.getCurrentSpan().getContext().getSpanIdAsHexString()`);\n+- `sampled` - a boolean flag marking whether the current span is sampled or not\n+  (same as `TracingContextUtils.getCurrentSpan().getContext().isSampled()`).\n+  Only added when `sampled` is `true`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "868a1c4365190e61187bfd476cf90bff5b1c3ee3"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTM4ODU0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339#pullrequestreview-503938854", "createdAt": "2020-10-07T14:26:07Z", "commit": {"oid": "9ce2ae1066ef0ccf4ff3c8759e73f2aeab320702"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MzI0MzU4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339#pullrequestreview-504324358", "createdAt": "2020-10-07T22:58:21Z", "commit": {"oid": "9ce2ae1066ef0ccf4ff3c8759e73f2aeab320702"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NDYzMTU5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339#pullrequestreview-504463159", "createdAt": "2020-10-08T06:30:39Z", "commit": {"oid": "9ce2ae1066ef0ccf4ff3c8759e73f2aeab320702"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "241955b46035a71006491058153b86799f004813", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/241955b46035a71006491058153b86799f004813", "committedDate": "2020-10-08T10:28:05Z", "message": "Document traceId/spanId injection into logs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da7948f04bef091fdada98927aad1cc6a4d0df63", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/da7948f04bef091fdada98927aad1cc6a4d0df63", "committedDate": "2020-10-08T10:28:05Z", "message": "Document traceId/spanId injection into logs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ce2ae1066ef0ccf4ff3c8759e73f2aeab320702", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9ce2ae1066ef0ccf4ff3c8759e73f2aeab320702", "committedDate": "2020-10-07T14:17:00Z", "message": "Document traceId/spanId injection into logs"}, "afterCommit": {"oid": "da7948f04bef091fdada98927aad1cc6a4d0df63", "author": {"user": {"login": "mateuszrzeszutek", "name": "Mateusz Rzeszutek"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/da7948f04bef091fdada98927aad1cc6a4d0df63", "committedDate": "2020-10-08T10:28:05Z", "message": "Document traceId/spanId injection into logs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2484, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}