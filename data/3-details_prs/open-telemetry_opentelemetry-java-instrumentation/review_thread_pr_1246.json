{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNzg0Njg5", "number": 1246, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzo1MDo1MVrOEmnJaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNToyMzozN1rOEm4Mig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTIyNzI5OnYy", "diffSide": "RIGHT", "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzo1MDo1MVrOHWvgBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDowMjo1NFrOHWwGqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYwODk2Ng==", "bodyText": "Use System.out.printf", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r493608966", "createdAt": "2020-09-23T13:50:51Z", "author": {"login": "iNikem"}, "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,7 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(prefix + \" \" + span.getName() + \" \" + span.getSpanId() + \" \");\n+      System.out.print(String.format(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "333997ead01b0b555485e6d8ab3ac48810847891"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYxODg1Nw==", "bodyText": "oh my bad thanks for the catch!", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r493618857", "createdAt": "2020-09-23T14:02:54Z", "author": {"login": "pavolloffay"}, "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,7 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(prefix + \" \" + span.getName() + \" \" + span.getSpanId() + \" \");\n+      System.out.print(String.format(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYwODk2Ng=="}, "originalCommit": {"oid": "333997ead01b0b555485e6d8ab3ac48810847891"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDAwMDQwOnYy", "diffSide": "RIGHT", "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjozNToyMVrOHW3F3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODo0MjoxMlrOHW7xMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczMzM0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.printf(\n          \n          \n            \n                      String.format(\n          \n          \n            \n                          \"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));\n          \n          \n            \n                  System.out.printf(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId());", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r493733343", "createdAt": "2020-09-23T16:35:21Z", "author": {"login": "trask"}, "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,9 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(String.format(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));\n+      System.out.printf(\n+          String.format(\n+              \"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b81ed93ff72b5ba95feb04a843b57fd60f743b8f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwOTk3MQ==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r493809971", "createdAt": "2020-09-23T18:42:12Z", "author": {"login": "pavolloffay"}, "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,9 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(String.format(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));\n+      System.out.printf(\n+          String.format(\n+              \"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczMzM0Mw=="}, "originalCommit": {"oid": "b81ed93ff72b5ba95feb04a843b57fd60f743b8f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjAyMDU4OnYy", "diffSide": "RIGHT", "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNToyMzozN1rOHXKJiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwODoyNTowN1rOHXPVew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ==", "bodyText": "printf is sloooow - can we switch back to appending?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494045579", "createdAt": "2020-09-24T05:23:37Z", "author": {"login": "anuraaga"}, "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,7 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(prefix + \" \" + span.getName() + \" \" + span.getSpanId() + \" \");\n+      System.out.printf(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddecc14a2385978777b7a1e7f1fbf04e7918bcdb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTgwNw==", "bodyText": "Also looks like we're missing space between span ID and attributes now probably good to have that (or maybe enclose attributes in {}", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494045807", "createdAt": "2020-09-24T05:24:24Z", "author": {"login": "anuraaga"}, "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,7 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(prefix + \" \" + span.getName() + \" \" + span.getSpanId() + \" \");\n+      System.out.printf(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ=="}, "originalCommit": {"oid": "ddecc14a2385978777b7a1e7f1fbf04e7918bcdb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NjMyMA==", "bodyText": "No objection to switching back to appending. Good catch on the missing space \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494046320", "createdAt": "2020-09-24T05:26:14Z", "author": {"login": "trask"}, "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,7 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(prefix + \" \" + span.getName() + \" \" + span.getSpanId() + \" \");\n+      System.out.printf(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ=="}, "originalCommit": {"oid": "ddecc14a2385978777b7a1e7f1fbf04e7918bcdb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2MzA4MA==", "bodyText": "@anuraaga Any numbers to back that claim? :) And is it important enough for us?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494063080", "createdAt": "2020-09-24T06:17:53Z", "author": {"login": "iNikem"}, "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,7 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(prefix + \" \" + span.getName() + \" \" + span.getSpanId() + \" \");\n+      System.out.printf(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ=="}, "originalCommit": {"oid": "ddecc14a2385978777b7a1e7f1fbf04e7918bcdb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MTY0Ng==", "bodyText": "Have benchmarked similar now and again, generally 10-20x slower. The readability difference is small enough to get the free speed, and I always recommend people to just never use printf in Java, unless formatting numbers, since it's not worth the cognitive load of deciding between one or the other the performance difference is too great. So I'd consider it important for us.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494071646", "createdAt": "2020-09-24T06:39:13Z", "author": {"login": "anuraaga"}, "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,7 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(prefix + \" \" + span.getName() + \" \" + span.getSpanId() + \" \");\n+      System.out.printf(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ=="}, "originalCommit": {"oid": "ddecc14a2385978777b7a1e7f1fbf04e7918bcdb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzMDU1NQ==", "bodyText": "I will submit a PR to use the appending.\nWould it be better to use string builder", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494130555", "createdAt": "2020-09-24T08:25:07Z", "author": {"login": "pavolloffay"}, "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,7 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(prefix + \" \" + span.getName() + \" \" + span.getSpanId() + \" \");\n+      System.out.printf(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ=="}, "originalCommit": {"oid": "ddecc14a2385978777b7a1e7f1fbf04e7918bcdb"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4951, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}