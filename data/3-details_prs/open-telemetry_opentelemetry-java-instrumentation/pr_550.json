{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NDU3ODUz", "number": 550, "title": "Fix FieldBackedProvider not getting applied", "bodyText": "Servlet2Instrumentation has contextStore():\njavax.servlet.http.HttpServletResponse \u2192 javax.servlet.http.HttpServletRequest\n\nbut also has classLoaderMatcher():\nnot(hasClassesNamed(\"javax.servlet.AsyncEvent\", \"javax.servlet.AsyncListener\"))\n\nSo if Servlet2Instrumentation is the first instrumentation in the FieldBackedProvider.additionalInstrumentation() loop to use that contextStore(), its classLoaderMatcher() will be applied to the context store transformation mapping, and it won't get applied if you are using servlet 3.0 (and have javax.servlet.AsyncEvent on your classpath).\n[Note: I only see this problem if I cherry-pick specific instrumentation, it seems to not exhibit itself with the default instrumentation list]", "createdAt": "2020-06-20T20:36:32Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/550", "merged": true, "mergeCommit": {"oid": "8b0813c3b9d994808445b43a1b0a2b4c922b81fe"}, "closed": true, "closedAt": "2020-06-22T15:48:09Z", "author": {"login": "trask"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctNqI4AH2gAyNDM3NDU3ODUzOjljNjQwYmZkNjA5NzU4MGJmNzZmMzEyZTIxN2NiMTBjNzlmMjZkZWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABctxEvYAH2gAyNDM3NDU3ODUzOjkxYTczOTkyOWFlMzk1Yzc5N2MyN2Y2MDcyNjkyNDI3OTRiMGE2ZWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9c640bfd6097580bf76f312e217cb10c79f26deb", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9c640bfd6097580bf76f312e217cb10c79f26deb", "committedDate": "2020-06-20T20:27:28Z", "message": "Fix FieldBackedProvider not getting applied"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDc5MDEz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/550#pullrequestreview-434479013", "createdAt": "2020-06-21T07:59:04Z", "commit": {"oid": "9c640bfd6097580bf76f312e217cb10c79f26deb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNzo1OTowNVrOGmqXqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNzo1OTowNVrOGmqXqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5MzI1Ng==", "bodyText": "If a future developer will read this code and will encounter this comment, will it be helpful or confusing? I mean, while reading the code, is it possible that developer will wonder about classLoaderMatcher at all? It looks to me that this comment answers the question that will not be asked, this increasing cognitive load, not decreasing it.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/550#discussion_r443193256", "createdAt": "2020-06-21T07:59:05Z", "author": {"login": "iNikem"}, "path": "agent-tooling/src/main/java/io/opentelemetry/auto/tooling/context/FieldBackedProvider.java", "diffHunk": "@@ -403,10 +399,13 @@ public static void resetContextMatchers() {\n           /*\n            * For each context store defined in a current instrumentation we create an agent builder\n            * that injects necessary fields.\n+           *\n+           * Does not use classLoaderMatcher() because those can be conflicting among", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c640bfd6097580bf76f312e217cb10c79f26deb"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfc8d5d67eb41aaabc8e5e0381c43e9d36f16213", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/cfc8d5d67eb41aaabc8e5e0381c43e9d36f16213", "committedDate": "2020-06-22T04:00:59Z", "message": "Remove unhelpful comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NjQ1ODIx", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/550#pullrequestreview-434645821", "createdAt": "2020-06-22T06:53:44Z", "commit": {"oid": "cfc8d5d67eb41aaabc8e5e0381c43e9d36f16213"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0d41993f20e419120219def8477bc1794b50813", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d0d41993f20e419120219def8477bc1794b50813", "committedDate": "2020-06-22T06:54:03Z", "message": "Merge branch 'master' into fix-field-backed-provider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91a739929ae395c797c27f607269242794b0a6ed", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/91a739929ae395c797c27f607269242794b0a6ed", "committedDate": "2020-06-22T13:43:12Z", "message": "Merge branch 'master' into fix-field-backed-provider"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2971, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}