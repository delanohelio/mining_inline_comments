{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMzQ1OTIy", "number": 1839, "title": "Switch gRPC instrumentation to instrument public ServerBuilder class.", "bodyText": "This would have been harder if tracing server interceptor had to be at the beginning of the list, but since it doesn't, we can just instrument the public type without problem.\nFixes #1453", "createdAt": "2020-12-07T03:34:25Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1839", "merged": true, "mergeCommit": {"oid": "71995957307175214e7dd938644cbbf341aacce8"}, "closed": true, "closedAt": "2020-12-07T07:24:11Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjtC-rAH2gAyNTMzMzQ1OTIyOmQ0YzU4ZWNkZTJhNjQ4Y2VlNDMzZTAwZWYwMmNlYzAxNzAzNjIwMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdjwV-lAFqTU0NTg4MjcyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d4c58ecde2a648cee433e00ef02cec0170362001", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d4c58ecde2a648cee433e00ef02cec0170362001", "committedDate": "2020-12-07T03:33:34Z", "message": "Switch gRPC instrumentation to instrument public ServerBuilder class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58e54bc42f2e3818c51cdb9f9741ce01e522cc6d", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/58e54bc42f2e3818c51cdb9f9741ce01e522cc6d", "committedDate": "2020-12-07T03:35:40Z", "message": "A bit more readability (hopefully)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODY0ODUy", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1839#pullrequestreview-545864852", "createdAt": "2020-12-07T06:41:25Z", "commit": {"oid": "690c4ed707f2fa4d29a225cf4ba1e81b21130b85"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjo0MToyNlrOIAYDMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjo0MToyNlrOIAYDMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI2NDk0Ng==", "bodyText": "this string will get shaded too \ud83d\ude04", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1839#discussion_r537264946", "createdAt": "2020-12-07T06:41:26Z", "author": {"login": "trask"}, "path": "instrumentation/grpc-1.5/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/grpc/v1_5/GrpcServerBuilderInstrumentation.java", "diffHunk": "@@ -21,33 +28,61 @@\n \n public class GrpcServerBuilderInstrumentation implements TypeInstrumentation {\n \n+  @Override\n+  public ElementMatcher<ClassLoader> classLoaderOptimization() {\n+    return hasClassesNamed(\"io.grpc.ServerBuilder\");\n+  }\n+\n   @Override\n   public ElementMatcher<TypeDescription> typeMatcher() {\n-    return named(\"io.grpc.internal.AbstractServerImplBuilder\");\n+    return safeHasSuperType(named(\"io.grpc.ServerBuilder\"));\n   }\n \n   @Override\n   public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n-    return singletonMap(\n-        isMethod().and(named(\"build\")),\n-        GrpcServerBuilderInstrumentation.class.getName() + \"$AddInterceptorAdvice\");\n+    Map<ElementMatcher<MethodDescription>, String> transformers = new HashMap<>();\n+    transformers.put(\n+        isMethod()\n+            .and(isPublic())\n+            .and(named(\"intercept\"))\n+            .and(takesArgument(0, named(\"io.grpc.ServerInterceptor\"))),\n+        GrpcServerBuilderInstrumentation.class.getName() + \"$InterceptAdvice\");\n+    transformers.put(\n+        isMethod().and(isPublic()).and(named(\"build\")).and(takesArguments(0)),\n+        GrpcServerBuilderInstrumentation.class.getName() + \"$BuildAdvice\");\n+    return transformers;\n   }\n \n-  public static class AddInterceptorAdvice {\n+  public static class InterceptAdvice {\n \n     @Advice.OnMethodEnter(suppress = Throwable.class)\n-    public static void addInterceptor(\n-        @Advice.FieldValue(\"interceptors\") List<ServerInterceptor> interceptors) {\n-      boolean shouldRegister = true;\n-      for (ServerInterceptor interceptor : interceptors) {\n-        if (interceptor instanceof TracingServerInterceptor) {\n-          shouldRegister = false;\n-          break;\n-        }\n+    public static void onEnter(\n+        @Advice.This ServerBuilder<?> serverBuilder,\n+        @Advice.Argument(0) ServerInterceptor interceptor) {\n+      // Check against unshaded name.\n+      if (interceptor\n+          .getClass()\n+          .getName()\n+          .equals(\"io.opentelemetry.instrumentation.grpc.v1_5.server.TracingServerInterceptor\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690c4ed707f2fa4d29a225cf4ba1e81b21130b85"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37dc02410a20673b2573311b1954c9ae9cfe67e5", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/37dc02410a20673b2573311b1954c9ae9cfe67e5", "committedDate": "2020-12-07T06:48:25Z", "message": "hack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e34e557cc6fc2750f7597c7cddb52fee6457dd15", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e34e557cc6fc2750f7597c7cddb52fee6457dd15", "committedDate": "2020-12-07T06:56:40Z", "message": "Remove library dedupe for now since we need a better story."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "690c4ed707f2fa4d29a225cf4ba1e81b21130b85", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/690c4ed707f2fa4d29a225cf4ba1e81b21130b85", "committedDate": "2020-12-07T05:08:26Z", "message": "Silly"}, "afterCommit": {"oid": "e34e557cc6fc2750f7597c7cddb52fee6457dd15", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e34e557cc6fc2750f7597c7cddb52fee6457dd15", "committedDate": "2020-12-07T06:56:40Z", "message": "Remove library dedupe for now since we need a better story."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODc1MDI5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1839#pullrequestreview-545875029", "createdAt": "2020-12-07T07:06:46Z", "commit": {"oid": "e34e557cc6fc2750f7597c7cddb52fee6457dd15"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODgyNzI3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1839#pullrequestreview-545882727", "createdAt": "2020-12-07T07:24:02Z", "commit": {"oid": "e34e557cc6fc2750f7597c7cddb52fee6457dd15"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2143, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}