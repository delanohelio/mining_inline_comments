{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NzcyMTcx", "number": 108, "title": "Change grizzly, mongo, sparkjava, spring-data, jetty, jsp, kafka-clients, lettuce to use OpenTelemetry API directly", "bodyText": "Closes #106, #107", "createdAt": "2020-01-29T21:23:21Z", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108", "merged": true, "mergeCommit": {"oid": "291c974e9c51c61a36f1a3af400b161dceedd2dd"}, "closed": true, "closedAt": "2020-01-30T22:37:24Z", "author": {"login": "trask"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_L3rqAH2gAyMzY4NzcyMTcxOmU4MzBiZDY2NmVmMGVkM2QxOGE4ZjZiODQzMzZmZTg0ZTI0ZTRmNTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_iEpEAH2gAyMzY4NzcyMTcxOjNmZjliNjJkYjAxY2VkZTZmMzgyNjc0ZWIxMzQyMDIyYjEzZWUyZmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e830bd666ef0ed3d18a8f6b84336fe84e24e4f54", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e830bd666ef0ed3d18a8f6b84336fe84e24e4f54", "committedDate": "2020-01-29T20:21:56Z", "message": "Convert Grizzly to use OpenTelemetry API directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "641326830595d921970783e17465043a295f7ed6", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/641326830595d921970783e17465043a295f7ed6", "committedDate": "2020-01-29T20:22:09Z", "message": "Convert Mongo to use OpenTelemetry API directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "903a0fe8619366c59fa46e41fc319ef2f71d6cdc", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/903a0fe8619366c59fa46e41fc319ef2f71d6cdc", "committedDate": "2020-01-29T20:22:21Z", "message": "Convert SparkJava to use OpenTelemetry API directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80d3c38a69a2705c9302c022b3ef5e9479700a39", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/80d3c38a69a2705c9302c022b3ef5e9479700a39", "committedDate": "2020-01-29T20:22:42Z", "message": "Convert Spring Data to use OpenTelemetry API directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24b97bd8f7a76aad25bdc985f4fb0ed83a84de94", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/24b97bd8f7a76aad25bdc985f4fb0ed83a84de94", "committedDate": "2020-01-29T20:29:03Z", "message": "Convert Jetty to use OpenTelemetry API directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc52a4643a75b710be011b3ffcf8ff1e98d47fe8", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bc52a4643a75b710be011b3ffcf8ff1e98d47fe8", "committedDate": "2020-01-29T20:32:47Z", "message": "Convert JSP to use OpenTelemetry API directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfdecdc6ebdf8672b3985d64fe37c5dd62d08627", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/cfdecdc6ebdf8672b3985d64fe37c5dd62d08627", "committedDate": "2020-01-29T20:40:11Z", "message": "Convert Kafka Clients to use OpenTelemetry API directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538", "committedDate": "2020-01-29T21:03:51Z", "message": "Convert Lettuce to use OpenTelemetry API directly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTYzOTMw", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#pullrequestreview-351163930", "createdAt": "2020-01-30T21:45:48Z", "commit": {"oid": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMTo0NTo0OFrOFj684g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMTo0NTo0OFrOFj684g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxMDMzOA==", "bodyText": "this is my first PR review in here, and I know this isn't totally the right place to mention this, but what about calling this thing a SpanWithScope, rather than explicitly calling out the pair nature?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373210338", "createdAt": "2020-01-30T21:45:48Z", "author": {"login": "jkwatson"}, "path": "instrumentation/grizzly-2/src/main/java/io/opentelemetry/auto/instrumentation/grizzly/GrizzlyHttpHandlerInstrumentation.java", "diffHunk": "@@ -66,39 +64,44 @@ public boolean defaultEnabled() {\n   public static class HandleAdvice {\n \n     @Advice.OnMethodEnter(suppress = Throwable.class)\n-    public static AgentScope methodEnter(@Advice.Argument(0) final Request request) {\n+    public static SpanScopePair methodEnter(@Advice.Argument(0) final Request request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTY4NzMz", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#pullrequestreview-351168733", "createdAt": "2020-01-30T21:54:11Z", "commit": {"oid": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMTo1NDoxMVrOFj7LZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMTo1NDoxMVrOFj7LZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNDA1Mg==", "bodyText": "hmm. If this is the API that we're providing for this in the opentelemetry-java API, it makes me a little sad. Is there a better way to do this than requiring everyone to catch this?", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373214052", "createdAt": "2020-01-30T21:54:11Z", "author": {"login": "jkwatson"}, "path": "instrumentation/grizzly-2/src/main/java/io/opentelemetry/auto/instrumentation/grizzly/GrizzlyHttpHandlerInstrumentation.java", "diffHunk": "@@ -66,39 +64,44 @@ public boolean defaultEnabled() {\n   public static class HandleAdvice {\n \n     @Advice.OnMethodEnter(suppress = Throwable.class)\n-    public static AgentScope methodEnter(@Advice.Argument(0) final Request request) {\n+    public static SpanScopePair methodEnter(@Advice.Argument(0) final Request request) {\n       if (request.getAttribute(SPAN_ATTRIBUTE) != null) {\n         return null;\n       }\n \n-      final Context parentContext = propagate().extract(request, GETTER);\n-      final AgentSpan span = startSpan(\"grizzly.request\", parentContext);\n+      final Span.Builder spanBuilder = TRACER.spanBuilder(\"grizzly.request\");\n+      try {\n+        final SpanContext extractedContext = TRACER.getHttpTextFormat().extract(request, GETTER);\n+        spanBuilder.setParent(extractedContext);\n+      } catch (final IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTcxMTM4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#pullrequestreview-351171138", "createdAt": "2020-01-30T21:58:22Z", "commit": {"oid": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMTo1ODoyM1rOFj7StQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMTo1ODoyM1rOFj7StQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNTkyNQ==", "bodyText": "once we have a real SpanWithScope, it makes sense to add a close() method to it, I think.", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373215925", "createdAt": "2020-01-30T21:58:23Z", "author": {"login": "jkwatson"}, "path": "instrumentation/jetty-8/src/main/java/io/opentelemetry/auto/instrumentation/jetty8/JettyHandlerAdvice.java", "diffHunk": "@@ -80,9 +83,9 @@ public static void stopSpan(\n       if (!req.isAsyncStarted() && activated.compareAndSet(false, true)) {\n         DECORATE.onResponse(span, resp);\n         DECORATE.beforeFinish(span);\n-        span.finish(); // Finish the span manually since finishSpanOnClose was false\n+        span.end(); // Finish the span manually since finishSpanOnClose was false\n       }\n     }\n-    scope.close();\n+    spanScopePair.getScope().close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTcxOTM1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#pullrequestreview-351171935", "createdAt": "2020-01-30T21:59:47Z", "commit": {"oid": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ff9b62db01cede6f382674eb1342022b13ee2ff", "author": {"user": {"login": "trask", "name": "Trask Stalnaker"}}, "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3ff9b62db01cede6f382674eb1342022b13ee2ff", "committedDate": "2020-01-30T22:14:00Z", "message": "Merge branch 'master' into use-opentelemetry-api-directly"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3375, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}