{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2Mjc4MzM0", "number": 153, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDo1MDo0MVrODa52wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDo1MDo0MVrODa52wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTM3NDcyOnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/AbstractCobolLinePreprocessorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDo1MDo0MVrOFiFWsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDo1NjozOVrOFiFkfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI4MzYzNQ==", "bodyText": "I think we should plan a small effort to have an method overloading here instead to pass null", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/153#discussion_r371283635", "createdAt": "2020-01-27T14:50:41Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/AbstractCobolLinePreprocessorTest.java", "diffHunk": "@@ -24,8 +24,8 @@\n public abstract class AbstractCobolLinePreprocessorTest {\n \n   protected ResultWithErrors<List<CobolLine>> processText(String text) {\n-    CobolLineReaderImpl reader = new CobolLineReaderImpl(null);\n-    return reader.processLines(text, FIXED);\n+    CobolLineReaderImpl reader = new CobolLineReaderImpl();\n+    return reader.processLines(null, text, FIXED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ee68954bb07b7c0a144c155056bfb73a7883f44"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI4NzE2NQ==", "bodyText": "Yes, work in progress", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/153#discussion_r371287165", "createdAt": "2020-01-27T14:56:39Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/AbstractCobolLinePreprocessorTest.java", "diffHunk": "@@ -24,8 +24,8 @@\n public abstract class AbstractCobolLinePreprocessorTest {\n \n   protected ResultWithErrors<List<CobolLine>> processText(String text) {\n-    CobolLineReaderImpl reader = new CobolLineReaderImpl(null);\n-    return reader.processLines(text, FIXED);\n+    CobolLineReaderImpl reader = new CobolLineReaderImpl();\n+    return reader.processLines(null, text, FIXED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI4MzYzNQ=="}, "originalCommit": {"oid": "4ee68954bb07b7c0a144c155056bfb73a7883f44"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4093, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}