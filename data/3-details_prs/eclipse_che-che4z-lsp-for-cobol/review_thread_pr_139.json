{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMjI4MzM1", "number": 139, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOTowODoyMlrODXxm0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMTo1ODoxOVrODX0r4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjU2NTk0OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOTowODoyMlrOFdQUqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOTowODoyMlrOFdQUqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyMDQ1OQ==", "bodyText": "Please, make this name all capitals due to the naming convention", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366220459", "createdAt": "2020-01-14T09:08:22Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventsTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/** */\n+package com.broadcom.lsp.domain.cobol.event;\n+\n+import com.broadcom.lsp.domain.CopybookStorableProvider;\n+import com.broadcom.lsp.domain.cobol.event.model.FetchedCopybookEvent;\n+import com.broadcom.lsp.domain.cobol.event.model.RequiredCopybookEvent;\n+import com.broadcom.lsp.domain.cobol.event.model.UnknownEvent;\n+import lombok.extern.slf4j.Slf4j;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+@Slf4j\n+public class CopybookEventsTest extends CopybookStorableProvider {\n+  private static final String unknownEventMessage = \"Dummy event\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjU3OTUyOnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/DataBusGetFromCacheBadTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToxMjo1MlrOFdQdBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToxMjo1MlrOFdQdBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyMjU5OA==", "bodyText": "I think we don't really need this method due to we do not startup a DI context. If you delete it, please, do it also for the other tests in this suite.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366222598", "createdAt": "2020-01-14T09:12:52Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/DataBusGetFromCacheBadTest.java", "diffHunk": "@@ -78,7 +76,6 @@ public void setUp() {\n   @After\n   public void tearDown() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjU4NDI2OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRUTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToxNDo0MVrOFdQgHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToxNDo0MVrOFdQgHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyMzM5MQ==", "bodyText": "Please, make this field private", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366223391", "createdAt": "2020-01-14T09:14:41Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRUTest.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain.cobol.databus.impl;\n+\n+import com.broadcom.lsp.domain.CopybookStorableProvider;\n+import com.broadcom.lsp.domain.cobol.databus.api.CopybookRepository;\n+import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n+import lombok.SneakyThrows;\n+import lombok.extern.slf4j.Slf4j;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.NoSuchElementException;\n+\n+import static org.junit.Assert.*;\n+\n+@Slf4j\n+public class CopybookRepositoryLRUTest extends CopybookStorableProvider {\n+  CopybookRepositoryLRU repository;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjU4OTIwOnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToxNjoyNFrOFdQjRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToxNjoyNFrOFdQjRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyNDE5Nw==", "bodyText": "Please, make these names all capitals due to the naming convention. Also, do we need getters for them?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366224197", "createdAt": "2020-01-14T09:16:24Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain;\n+\n+import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n+import com.broadcom.lsp.domain.cobol.event.api.CopybookObserver;\n+import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import javax.inject.Singleton;\n+\n+@Slf4j\n+public class CopybookStorableProvider implements CopybookObserver<DataEvent> {\n+  @Getter private static final String unknownEventMessage = \"Dummy event\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjU5MTY5OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/DomainTestSuite.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToxNzoyM1rOFdQk4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToxNzoyM1rOFdQk4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyNDYwOA==", "bodyText": "The default parameter value may be skipped here", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366224608", "createdAt": "2020-01-14T09:17:23Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/DomainTestSuite.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain;\n+\n+import com.broadcom.lsp.domain.cobol.databus.impl.*;\n+import com.broadcom.lsp.domain.cobol.event.CopybookEventSubscribersTest;\n+import com.broadcom.lsp.domain.cobol.event.CopybookEventsTest;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+\n+/** A suite to run the databus tests. */\n+@RunWith(Suite.class)\n+@Suite.SuiteClasses(\n+    value = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjYwMjQ1OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/event/api/CopybookObserver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyMTowOFrOFdQrhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyMTowOFrOFdQrhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyNjMxMQ==", "bodyText": "I don't think that CopybookObserver is a good name because the purpose of this mechanism is to allow communications between different modules and not only for the copybooks.\nFor example, I am going to use it to allow calls from the WorkspaceService to the TextDocumentService after triggering by the watcher.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366226311", "createdAt": "2020-01-14T09:21:08Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/event/api/CopybookObserver.java", "diffHunk": "@@ -14,12 +14,12 @@\n  *\n  */\n \n-package com.broadcom.lsp.domain.cobol.databus.api;\n+package com.broadcom.lsp.domain.cobol.event.api;\n \n /**\n  * This interface implements the Observer pattern for the databus. It provides a callback method to\n  * perform some action if the required event is populated.\n  */\n-public interface DataBusObserver<O> {\n+public interface CopybookObserver<O> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjczNjc3OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventSubscribersTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDowMzozN1rOFdR-ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDowMzozN1rOFdR-ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0NzUzMA==", "bodyText": "please extract this getREQCPY in a global variable in order to avoid multiple duplicate codes, same for every other getter in the class", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366247530", "createdAt": "2020-01-14T10:03:37Z", "author": {"login": "sergiuilie"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventSubscribersTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain.cobol.event;\n+\n+import com.broadcom.lsp.domain.CopybookStorableProvider;\n+import com.broadcom.lsp.domain.cobol.event.api.CopybookEventFactory;\n+import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n+import com.broadcom.lsp.domain.cobol.event.impl.FetchedCopybookEventSubscriber;\n+import com.broadcom.lsp.domain.cobol.event.impl.RequiredCopybookEventSubscriber;\n+import com.broadcom.lsp.domain.cobol.event.impl.UnknownEventSubscriber;\n+import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n+import com.broadcom.lsp.domain.cobol.event.model.DataEventType;\n+import lombok.extern.slf4j.Slf4j;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+@Slf4j\n+public class CopybookEventSubscribersTest extends CopybookStorableProvider {\n+  static class DatabusObserverTest implements EventObserver<DataEvent> {\n+    @Override\n+    public void observerCallback(DataEvent adaptedDataEvent) {\n+      LOG.debug(\"CALLBACK WORKS!\");\n+    }\n+  }\n+\n+  DatabusObserverTest databusObserver;\n+\n+  @Before\n+  public void initObserver() {\n+    databusObserver = new DatabusObserverTest();\n+  }\n+\n+  /** This test verify that the RequiredCopybook factory creates a new RequiredCopybook event */\n+  @Test\n+  public void testRequireSubscriberFactory() {\n+    assertEquals(getREQCPY(), getRequiredSubscriberFromFactory().getEventType().getHeader());\n+  }\n+\n+  /** This test verify that the FetchedCopybook factory creates a new FetchedCopybook event */\n+  @Test\n+  public void testFetchSubscriberFactory() {\n+    assertEquals(getFETCHEDCPY(), getFetchedSubscriberFromFactory().getEventType().getHeader());\n+  }\n+\n+  /** This test verify that the Unknown factory creates a new Unknown event */\n+  @Test\n+  public void testUnknownSubscriberFactory() {\n+    assertEquals(getUNKNOWN(), getUnknownSubscriberFromFactory().getEventType().getHeader());\n+  }\n+\n+  /** This test verify that a wrong factory isn't returned back. */\n+  @Test\n+  public void negativeTestSubscriberFactory() {\n+    assertNotEquals(getREQCPY(), getFetchedSubscriberFromFactory());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7147beec94230a0d86526ac93f84bce863707f4"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MzA2ODIwOnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMTo1NzoxNlrOFdVFCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMTo1NzoxNlrOFdVFCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODM3OA==", "bodyText": "please put everything uppercase", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366298378", "createdAt": "2020-01-14T11:57:16Z", "author": {"login": "sergiuilie"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain;\n+\n+import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n+import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n+import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import javax.inject.Singleton;\n+\n+@Slf4j\n+public class CopybookStorableProvider implements EventObserver<DataEvent> {\n+  @Getter private static final String copybookName = \"Test\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7147beec94230a0d86526ac93f84bce863707f4"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MzA3MDQzOnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMTo1ODoxOVrOFdVGdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMTo1ODoxOVrOFdVGdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODc0Mw==", "bodyText": "if the field is static there is no need for \"@getter\", make the field public", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366298743", "createdAt": "2020-01-14T11:58:19Z", "author": {"login": "sergiuilie"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain;\n+\n+import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n+import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n+import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import javax.inject.Singleton;\n+\n+@Slf4j\n+public class CopybookStorableProvider implements EventObserver<DataEvent> {\n+  @Getter private static final String copybookName = \"Test\";\n+  @Getter private static final String copybookURI = \"file:///C:/Users/test/Test.cbl\";\n+  @Getter private static final String copybookContent = \"000000 IDENTIFICATION DIVISION.\";\n+  @Getter private static final String REQCPY = \"REQCPY\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7147beec94230a0d86526ac93f84bce863707f4"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4089, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}