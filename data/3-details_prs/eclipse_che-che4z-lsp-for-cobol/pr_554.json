{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMTI3Nzgy", "number": 554, "title": "refactor: Change parse line implementation", "bodyText": "Using regex for parse cobol line structure\nSigned-off-by: Anton Grigorev anton.grigorev@broadcom.com", "createdAt": "2020-10-13T09:15:35Z", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/554", "merged": true, "mergeCommit": {"oid": "32e1c614f21cdd910db5dc7fc3fcb7af365ebf27"}, "closed": true, "closedAt": "2020-10-13T13:19:01Z", "author": {"login": "grianbrcom"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSFHtUgFqTUwNzIzOTcxOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSHW0gAFqTUwNzM1Nzg2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjM5NzE5", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/554#pullrequestreview-507239719", "createdAt": "2020-10-13T09:25:12Z", "commit": {"oid": "3d8c87b99a1237ef73fe760478e326384251c888"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOToyNToxMlrOHgdn3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOToyNToyMlrOHgdoQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwMTgyMA==", "bodyText": "I expect we will have a code smell about ignored return value here.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/554#discussion_r503801820", "createdAt": "2020-10-13T09:25:12Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/preprocessor/delegates/reader/CobolLineReaderImpl.java", "diffHunk": "@@ -95,33 +99,23 @@\n     CobolLine cobolLine = new CobolLine();\n     line = getDelegate().apply(line);\n \n-    ResultWithErrors<String> result = checkLineLength(line, uri, lineNumber);\n-    String adjustedLine = result.getResult();\n-    List<SyntaxError> errors = new ArrayList<>(result.getErrors());\n-\n-    if (adjustedLine.length() > 0) {\n-      for (int i = adjustedLine.length(); i > 0; i--) {\n-        if (i > 72) {\n-          cobolLine.setCommentArea(adjustedLine.substring(72, i));\n-          i = 73;\n-        } else if (i > 11) {\n-          cobolLine.setContentAreaB(adjustedLine.substring(11, i));\n-          i = 12;\n-        } else if (i > 7) {\n-          cobolLine.setContentAreaA(adjustedLine.substring(7, i));\n-          i = 8;\n-        } else if (i > 6) {\n-          String indicatorArea = adjustedLine.substring(6, 7);\n-          ResultWithErrors<CobolLineTypeEnum> type = determineType(indicatorArea, uri, lineNumber);\n-          cobolLine.setIndicatorArea(indicatorArea);\n-          cobolLine.setType(type.getResult());\n-          errors.addAll(type.getErrors());\n-          i = 7;\n-        } else {\n-          cobolLine.setSequenceArea(adjustedLine.substring(0, i));\n-          i = 0;\n-        }\n-      }\n+    List<SyntaxError> errors = new ArrayList<>();\n+\n+    Matcher matcher = COBOL_LINE_PATTERN.matcher(line);\n+    matcher.matches();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8c87b99a1237ef73fe760478e326384251c888"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwMTkyMw==", "bodyText": "Amazing", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/554#discussion_r503801923", "createdAt": "2020-10-13T09:25:22Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/preprocessor/delegates/reader/CobolLineReaderImpl.java", "diffHunk": "@@ -43,6 +45,8 @@\n   private static final int MAX_LINE_LENGTH = 80;\n   private static final String LONG_LINE_MSG = \"Source text cannot go past column 80\";\n   private static final String INCORRECT_LINE_FORMAT_MSG = \"Unexpected indicator area content\";\n+  private static final Pattern COBOL_LINE_PATTERN = Pattern.compile(\n+      \"^(?<sequence>.{0,6})(?<indicator>.?)(?<contentA>.{0,4})(?<contentB>.{0,61})(?<comment>.{0,8})(?<extra>.*)$\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8c87b99a1237ef73fe760478e326384251c888"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MzAwMDI3", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/554#pullrequestreview-507300027", "createdAt": "2020-10-13T10:40:46Z", "commit": {"oid": "3d8c87b99a1237ef73fe760478e326384251c888"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMDo0MDo0NlrOHggdMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMDo0MDo0NlrOHggdMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg0ODI0Mw==", "bodyText": "Beautiful mind", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/554#discussion_r503848243", "createdAt": "2020-10-13T10:40:46Z", "author": {"login": "asatklichov"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/preprocessor/delegates/reader/CobolLineReaderImpl.java", "diffHunk": "@@ -43,6 +45,8 @@\n   private static final int MAX_LINE_LENGTH = 80;\n   private static final String LONG_LINE_MSG = \"Source text cannot go past column 80\";\n   private static final String INCORRECT_LINE_FORMAT_MSG = \"Unexpected indicator area content\";\n+  private static final Pattern COBOL_LINE_PATTERN = Pattern.compile(\n+      \"^(?<sequence>.{0,6})(?<indicator>.?)(?<contentA>.{0,4})(?<contentB>.{0,61})(?<comment>.{0,8})(?<extra>.*)$\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwMTkyMw=="}, "originalCommit": {"oid": "3d8c87b99a1237ef73fe760478e326384251c888"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "661e815fc5cca4a35e11d7ded14ee54f980f88fb", "author": {"user": {"login": "grianbrcom", "name": "Anton Grigorev"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/661e815fc5cca4a35e11d7ded14ee54f980f88fb", "committedDate": "2020-10-13T11:58:50Z", "message": "refactor: Change parse line implementation\n\nUsing regex for parse cobol line structure\n\nSigned-off-by: Anton Grigorev <anton.grigorev@broadcom.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d8c87b99a1237ef73fe760478e326384251c888", "author": {"user": {"login": "grianbrcom", "name": "Anton Grigorev"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/3d8c87b99a1237ef73fe760478e326384251c888", "committedDate": "2020-10-13T09:12:12Z", "message": "refactor: Change parse line implementation\n\nUsing regex for parse cobol line structure\n\nSigned-off-by: Anton Grigorev <anton.grigorev@broadcom.com>"}, "afterCommit": {"oid": "661e815fc5cca4a35e11d7ded14ee54f980f88fb", "author": {"user": {"login": "grianbrcom", "name": "Anton Grigorev"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/661e815fc5cca4a35e11d7ded14ee54f980f88fb", "committedDate": "2020-10-13T11:58:50Z", "message": "refactor: Change parse line implementation\n\nUsing regex for parse cobol line structure\n\nSigned-off-by: Anton Grigorev <anton.grigorev@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MzU3ODY2", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/554#pullrequestreview-507357866", "createdAt": "2020-10-13T12:02:08Z", "commit": {"oid": "661e815fc5cca4a35e11d7ded14ee54f980f88fb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1053, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}