{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0Njk4NDIy", "number": 665, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzo0MTo0MFrOE7i3KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNDoxNzoyNVrOE7j1Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODcyNjE2OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/com/broadcom/lsp/cobol/usecases/TestVariableUsageSeparatedByComma.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzo0MTo0MFrOH3QFqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzo0MTo0MFrOH3QFqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY5NzMyMA==", "bodyText": "You create diagnostics here, by they are not expected in the given text.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/665#discussion_r527697320", "createdAt": "2020-11-20T13:41:40Z", "author": {"login": "temanbrcom"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/usecases/TestVariableUsageSeparatedByComma.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.broadcom.lsp.cobol.usecases;\n+\n+import com.broadcom.lsp.cobol.usecases.engine.UseCaseEngine;\n+import org.eclipse.lsp4j.Diagnostic;\n+import org.eclipse.lsp4j.Position;\n+import org.eclipse.lsp4j.Range;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+/** Test variable usage separated by Commas without Whitespaces */\n+class TestVariableUsageSeparatedByComma {\n+\n+  private static final String TEXT =\n+      \"       IDENTIFICATION DIVISION.\\n\"\n+          + \"       PROGRAM-ID. programID.\\n\"\n+          + \"        DATA DIVISION.\\n\"\n+          + \"        WORKING-STORAGE SECTION.\\n\"\n+          + \"        01 {$*VAR-TEST1}.\\n\"\n+          + \"        01 {$*VAR-TEST2}.\\n\"\n+          + \"        01 {$*VAR-TEST3}.\\n\"\n+          + \"        01 {$*VAR-TEST4}.\\n\"\n+          + \"       PROCEDURE DIVISION.\\n\"\n+          + \"           CALL 'smth' USING {$VAR-TEST1},{$VAR-TEST2} BY VALUE {$VAR-TEST3}, \\n\"\n+          + \"           BY CONTENT {$VAR-TEST4} BY CONTENT ADDRESS OF TRUE.\\n\"\n+          + \"       END PROGRAM programID.\\n\";\n+\n+  @Test\n+  void test() {\n+    Map<String, Diagnostic> expected = new HashMap<>();\n+    for (int i = 4; i > 0; i--) {\n+      Range range = new Range(new Position(i + 3, 11), new Position(i + 3, 20));\n+      expected.put(\"VAR-TEST\" + i, new Diagnostic(range, null));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "559775089266066413f6d861f38312473625c1d6"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODg4NDcwOnYy", "diffSide": "RIGHT", "path": "server/src/main/antlr4/com/broadcom/lsp/cobol/core/parser/CobolParser.g4", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNDoxNzoyNVrOH3Rhxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNDoyNzo0MlrOH3R8Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcyMDkwMw==", "bodyText": "The change will fix the error, but this grammar matches a lot of cases:\nVAR1, VAR2\nVAR1, VAR2,\nVAR1 VAR2\n\nProbably, it is not correct.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/665#discussion_r527720903", "createdAt": "2020-11-20T14:17:25Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/antlr4/com/broadcom/lsp/cobol/core/parser/CobolParser.g4", "diffHunk": "@@ -793,7 +793,7 @@ callUsingPhrase\n    ;\n \n callUsingParameter\n-   : callByReferencePhrase | callByValuePhrase | callByContentPhrase\n+   : (callByReferencePhrase | callByValuePhrase | callByContentPhrase) COMMACHAR?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "559775089266066413f6d861f38312473625c1d6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcyNzY5NA==", "bodyText": "I would expect it to be:\ncallUsingPhrase\n   : USING callUsingParameter (COMMACHAR? callUsingParameter)*\n   ;\n\nShould be checked that the positive tests pass and the loose comma at the end produces a syntax error", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/665#discussion_r527727694", "createdAt": "2020-11-20T14:27:42Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/antlr4/com/broadcom/lsp/cobol/core/parser/CobolParser.g4", "diffHunk": "@@ -793,7 +793,7 @@ callUsingPhrase\n    ;\n \n callUsingParameter\n-   : callByReferencePhrase | callByValuePhrase | callByContentPhrase\n+   : (callByReferencePhrase | callByValuePhrase | callByContentPhrase) COMMACHAR?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcyMDkwMw=="}, "originalCommit": {"oid": "559775089266066413f6d861f38312473625c1d6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3862, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}