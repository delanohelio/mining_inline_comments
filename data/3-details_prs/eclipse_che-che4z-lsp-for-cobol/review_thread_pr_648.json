{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5OTQzNDg4", "number": 648, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTowNToyMFrOE4NBKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzowODowNlrOE4Qptg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzY5MDAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/LangServerBootstrap.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTowNToyMFrOHx_DXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTozNTo0OFrOHyAfIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3NTMyNQ==", "bodyText": "", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522175325", "createdAt": "2020-11-12T15:05:20Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/LangServerBootstrap.java", "diffHunk": "@@ -96,8 +96,9 @@ boolean isPipeEnabled(@NonNull String[] args) {\n       LOG.info(\"Language server started using socket communication on port [{}]\", LSP_PORT);\n       LOG.info(\"Java version: \" + Runtime.version());\n       // wait for clients to connect\n-      Socket socket = serverSocket.accept();\n-      return createServerLauncher(server, socket.getInputStream(), socket.getOutputStream());\n+      try (Socket socket = serverSocket.accept()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "957276dbf4a5720416222373cffdc37eb496d02d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5NDUyMg==", "bodyText": "INFO: Socket closed\njava.net.SocketException: Socket closed\n\tat java.base/sun.nio.ch.NioSocketImpl.ensureOpenAndConnected(NioSocketImpl.java:166)\n\tat java.base/sun.nio.ch.NioSocketImpl.beginRead(NioSocketImpl.java:232)\n\tat java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:300)\n\tat java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:351)\n\tat java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:802)\n\tat java.base/java.net.Socket$SocketInputStream.read(Socket.java:937)\n\tat java.base/java.net.Socket$SocketInputStream.read(Socket.java:932)\n\tat org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:79)\n\tat org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:99)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:830)", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522194522", "createdAt": "2020-11-12T15:30:17Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/LangServerBootstrap.java", "diffHunk": "@@ -96,8 +96,9 @@ boolean isPipeEnabled(@NonNull String[] args) {\n       LOG.info(\"Language server started using socket communication on port [{}]\", LSP_PORT);\n       LOG.info(\"Java version: \" + Runtime.version());\n       // wait for clients to connect\n-      Socket socket = serverSocket.accept();\n-      return createServerLauncher(server, socket.getInputStream(), socket.getOutputStream());\n+      try (Socket socket = serverSocket.accept()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3NTMyNQ=="}, "originalCommit": {"oid": "957276dbf4a5720416222373cffdc37eb496d02d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5ODgxNg==", "bodyText": "Have checked the first time without client-side and missed this error, thanks!\nReverted.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522198816", "createdAt": "2020-11-12T15:35:48Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/LangServerBootstrap.java", "diffHunk": "@@ -96,8 +96,9 @@ boolean isPipeEnabled(@NonNull String[] args) {\n       LOG.info(\"Language server started using socket communication on port [{}]\", LSP_PORT);\n       LOG.info(\"Java version: \" + Runtime.version());\n       // wait for clients to connect\n-      Socket socket = serverSocket.accept();\n-      return createServerLauncher(server, socket.getInputStream(), socket.getOutputStream());\n+      try (Socket socket = serverSocket.accept()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3NTMyNQ=="}, "originalCommit": {"oid": "957276dbf4a5720416222373cffdc37eb496d02d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzY5MTY4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/semantics/outline/OutlineTreeBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTowNTo0M1rOHx_EZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTowNTo0M1rOHx_EZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3NTU5MQ==", "bodyText": "", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522175591", "createdAt": "2020-11-12T15:05:43Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/semantics/outline/OutlineTreeBuilder.java", "diffHunk": "@@ -187,7 +186,7 @@ private void addOutlineNodeToTree(List<DocumentSymbol> outlineNodes, DocumentSym\n   }\n \n   @Value\n-  private class VariableNode {\n+  private static class VariableNode {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "957276dbf4a5720416222373cffdc37eb496d02d"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzY5MzQ3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/strategy/CobolErrorStrategy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTowNjowNVrOHx_FiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTowNjowNVrOHx_FiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3NTg4MQ==", "bodyText": "", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522175881", "createdAt": "2020-11-12T15:06:05Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/strategy/CobolErrorStrategy.java", "diffHunk": "@@ -64,13 +66,14 @@ public void setMessageService(MessageService messageService) {\n     this.messageService = messageService;\n   }\n \n-  private String getExpectedToken(Parser recognizer, InputMismatchException e) {\n-    if (e == null) {\n-      IntervalSet expecting = getExpectedTokens(recognizer);\n-      return expecting.toString(recognizer.getVocabulary());\n-    } else {\n-      return e.getExpectedTokens().toString(recognizer.getVocabulary());\n-    }\n+  private String getExpectedToken(@NonNull Parser recognizer, InputMismatchException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "957276dbf4a5720416222373cffdc37eb496d02d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzY5ODE2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/visitor/CobolVisitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTowNzowOVrOHx_ItQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNjoxOTozMFrOHyCmhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3NjY5Mw==", "bodyText": "", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522176693", "createdAt": "2020-11-12T15:07:09Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/visitor/CobolVisitor.java", "diffHunk": "@@ -291,7 +288,7 @@ public Class visitLocalStorageSection(LocalStorageSectionContext ctx) {\n \n   @Override\n   public Class visitStatement(StatementContext ctx) {\n-    List<Token> tokenList =\n+    @NonNull List<Token> tokenList =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "957276dbf4a5720416222373cffdc37eb496d02d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjIzMzQ3OQ==", "bodyText": "Sorry, but it will not work this way. Lombok's NonNull works only with parameters.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522233479", "createdAt": "2020-11-12T16:19:30Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/visitor/CobolVisitor.java", "diffHunk": "@@ -291,7 +288,7 @@ public Class visitLocalStorageSection(LocalStorageSectionContext ctx) {\n \n   @Override\n   public Class visitStatement(StatementContext ctx) {\n-    List<Token> tokenList =\n+    @NonNull List<Token> tokenList =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3NjY5Mw=="}, "originalCommit": {"oid": "957276dbf4a5720416222373cffdc37eb496d02d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzcwMTE1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/visitor/CobolVisitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTowNzo0N1rOHx_KmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTowNzo0N1rOHx_KmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3NzE3Ng==", "bodyText": "", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522177176", "createdAt": "2020-11-12T15:07:47Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/visitor/CobolVisitor.java", "diffHunk": "@@ -568,8 +565,9 @@ private void checkVariableStructure(\n     }\n   }\n \n-  private String extractErrorStatementText(Token childToken, Token parentToken) {\n-    return tokenStream.getTokens(childToken.getTokenIndex(), parentToken.getTokenIndex()).stream()\n+  private String extractErrorStatementText(@NonNull Token childToken, @NonNull Token parentToken) {\n+    @NonNull List<Token> tokenList = tokenStream.getTokens(childToken.getTokenIndex(), parentToken.getTokenIndex());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "957276dbf4a5720416222373cffdc37eb496d02d"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Mzc1OTk2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CopybookServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToyMDoyNVrOHx_wLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNjo1NDozOFrOHyENvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4Njc5Ng==", "bodyText": "", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522186796", "createdAt": "2020-11-12T15:20:25Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CopybookServiceImpl.java", "diffHunk": "@@ -117,7 +117,7 @@ CopybookModel resolveSync(\n       @NonNull String documentUri,\n       @NonNull CopybookProcessingMode copybookProcessingMode)\n       throws ExecutionException, InterruptedException {\n-    String cobolFileName = files.getNameFromURI(documentUri);\n+    @NonNull String cobolFileName = files.getNameFromURI(documentUri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e54be02d18b29e0cdee36d2f9ea0d84b46cf30a7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI1OTkwMw==", "bodyText": "Please, rewrite this too. The annotation will not work here as well.\nAs I see, this error is about null check between computeIfAbsent and add calls.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522259903", "createdAt": "2020-11-12T16:54:38Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CopybookServiceImpl.java", "diffHunk": "@@ -117,7 +117,7 @@ CopybookModel resolveSync(\n       @NonNull String documentUri,\n       @NonNull CopybookProcessingMode copybookProcessingMode)\n       throws ExecutionException, InterruptedException {\n-    String cobolFileName = files.getNameFromURI(documentUri);\n+    @NonNull String cobolFileName = files.getNameFromURI(documentUri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4Njc5Ng=="}, "originalCommit": {"oid": "e54be02d18b29e0cdee36d2f9ea0d84b46cf30a7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Mzc5NzE1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/strategy/CobolErrorStrategy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToyODowOVrOHyAHbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToyODowOVrOHyAHbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5Mjc1MA==", "bodyText": "Maybe, it would be better to just return an empty string?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522192750", "createdAt": "2020-11-12T15:28:09Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/strategy/CobolErrorStrategy.java", "diffHunk": "@@ -64,13 +66,14 @@ public void setMessageService(MessageService messageService) {\n     this.messageService = messageService;\n   }\n \n-  private String getExpectedToken(Parser recognizer, InputMismatchException e) {\n-    if (e == null) {\n-      IntervalSet expecting = getExpectedTokens(recognizer);\n-      return expecting.toString(recognizer.getVocabulary());\n-    } else {\n-      return e.getExpectedTokens().toString(recognizer.getVocabulary());\n-    }\n+  private String getExpectedToken(@NonNull Parser recognizer, InputMismatchException e) {\n+    IntervalSet expecting = Optional.ofNullable(e)\n+        .map(RecognitionException::getExpectedTokens)\n+        .orElse(getExpectedTokens(recognizer));\n+\n+    return Optional.ofNullable(expecting)\n+        .map(exp -> exp.toString(recognizer.getVocabulary()))\n+        .orElseThrow(() -> new RuntimeException(\"Cannot find expected tokens\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e54be02d18b29e0cdee36d2f9ea0d84b46cf30a7"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDIwNzMxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/visitor/CobolVisitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNjo1MTozN1rOHyEFBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNjo1MzozNlrOHyEKkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI1NzY2OA==", "bodyText": "Will throw an exception on null tokenList", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522257668", "createdAt": "2020-11-12T16:51:37Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/visitor/CobolVisitor.java", "diffHunk": "@@ -620,7 +620,7 @@ private void areaAWarning(Token token) {\n         .ifPresent(it -> throwException(token.getText(), it, messageService.getMessage(\"CobolVisitor.AreaAWarningMsg\")));\n   }\n \n-  private void areaBWarning(List<Token> tokenList) {\n+  private void areaBWarning(@NonNull List<Token> tokenList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8729b0ac365c265118785eb4bac17fbb52c13d9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI1OTA5MA==", "bodyText": "This makes sense. Let's see if Coverity agreed with this.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522259090", "createdAt": "2020-11-12T16:53:36Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/visitor/CobolVisitor.java", "diffHunk": "@@ -620,7 +620,7 @@ private void areaAWarning(Token token) {\n         .ifPresent(it -> throwException(token.getText(), it, messageService.getMessage(\"CobolVisitor.AreaAWarningMsg\")));\n   }\n \n-  private void areaBWarning(List<Token> tokenList) {\n+  private void areaBWarning(@NonNull List<Token> tokenList) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI1NzY2OA=="}, "originalCommit": {"oid": "f8729b0ac365c265118785eb4bac17fbb52c13d9"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDI4NTM0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CopybookServiceImpl.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzowODowNlrOHyE0Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzoxNzo1N1rOHyFPMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI2OTc2Ng==", "bodyText": "Anyway better to check cobolFileName for null.\ncopybooksForDownloading.computeIfAbsent if always not null, so it is false-positive issue in that case", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522269766", "createdAt": "2020-11-12T17:08:06Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CopybookServiceImpl.java", "diffHunk": "@@ -124,9 +124,8 @@ CopybookModel resolveSync(\n                 .getConfiguration(COPYBOOK_RESOLVE.label, cobolFileName, copybookName)\n                 .get());\n     if (uri.isEmpty()) {\n-      if (copybookProcessingMode.download) {\n-        copybooksForDownloading\n-            .computeIfAbsent(cobolFileName, s -> ConcurrentHashMap.newKeySet())\n+      if (copybookProcessingMode.download && cobolFileName != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f31b6e7d8732c8c04be0a4cc303e3636d96a5f00"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI3MjMzOA==", "bodyText": "I think that the issue is that computeIfAbsent can return null if our mapping function returns null. But maybe your assumption right.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522272338", "createdAt": "2020-11-12T17:11:42Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CopybookServiceImpl.java", "diffHunk": "@@ -124,9 +124,8 @@ CopybookModel resolveSync(\n                 .getConfiguration(COPYBOOK_RESOLVE.label, cobolFileName, copybookName)\n                 .get());\n     if (uri.isEmpty()) {\n-      if (copybookProcessingMode.download) {\n-        copybooksForDownloading\n-            .computeIfAbsent(cobolFileName, s -> ConcurrentHashMap.newKeySet())\n+      if (copybookProcessingMode.download && cobolFileName != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI2OTc2Ng=="}, "originalCommit": {"oid": "f31b6e7d8732c8c04be0a4cc303e3636d96a5f00"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI3MzMzOQ==", "bodyText": "Maybe better to check this set as well :-)", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522273339", "createdAt": "2020-11-12T17:13:11Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CopybookServiceImpl.java", "diffHunk": "@@ -124,9 +124,8 @@ CopybookModel resolveSync(\n                 .getConfiguration(COPYBOOK_RESOLVE.label, cobolFileName, copybookName)\n                 .get());\n     if (uri.isEmpty()) {\n-      if (copybookProcessingMode.download) {\n-        copybooksForDownloading\n-            .computeIfAbsent(cobolFileName, s -> ConcurrentHashMap.newKeySet())\n+      if (copybookProcessingMode.download && cobolFileName != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI2OTc2Ng=="}, "originalCommit": {"oid": "f31b6e7d8732c8c04be0a4cc303e3636d96a5f00"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI3NDU0NA==", "bodyText": "Nope :-( Have a warning from Idea that set is always not null:\n        Set<String> copybooks = copybooksForDownloading.computeIfAbsent(cobolFileName, s -> ConcurrentHashMap.newKeySet());\n        Optional.ofNullable(copybooks).ifPresent(c -> c.add(copybookName));", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522274544", "createdAt": "2020-11-12T17:14:56Z", "author": {"login": "Nurkambay"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CopybookServiceImpl.java", "diffHunk": "@@ -124,9 +124,8 @@ CopybookModel resolveSync(\n                 .getConfiguration(COPYBOOK_RESOLVE.label, cobolFileName, copybookName)\n                 .get());\n     if (uri.isEmpty()) {\n-      if (copybookProcessingMode.download) {\n-        copybooksForDownloading\n-            .computeIfAbsent(cobolFileName, s -> ConcurrentHashMap.newKeySet())\n+      if (copybookProcessingMode.download && cobolFileName != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI2OTc2Ng=="}, "originalCommit": {"oid": "f31b6e7d8732c8c04be0a4cc303e3636d96a5f00"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI3NjY1OA==", "bodyText": "I agree that it will never be a null. We will see it tomorrow.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/648#discussion_r522276658", "createdAt": "2020-11-12T17:17:57Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CopybookServiceImpl.java", "diffHunk": "@@ -124,9 +124,8 @@ CopybookModel resolveSync(\n                 .getConfiguration(COPYBOOK_RESOLVE.label, cobolFileName, copybookName)\n                 .get());\n     if (uri.isEmpty()) {\n-      if (copybookProcessingMode.download) {\n-        copybooksForDownloading\n-            .computeIfAbsent(cobolFileName, s -> ConcurrentHashMap.newKeySet())\n+      if (copybookProcessingMode.download && cobolFileName != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI2OTc2Ng=="}, "originalCommit": {"oid": "f31b6e7d8732c8c04be0a4cc303e3636d96a5f00"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3847, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}