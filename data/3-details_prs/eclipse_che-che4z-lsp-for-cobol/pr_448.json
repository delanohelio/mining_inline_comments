{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzODM0NjA5", "number": 448, "title": "Disable copybook analysis for extended documents #441", "bodyText": "Close #441.\nPurpose of this PR is to disable the copybook analysis when the COBOL file already contains the content of a copybook but the copy instruction is not removed from the code (for simplicity let's call that COBOL file, extended document).\nAt moment an extended document is defined as a COBOL file under the path .c4z/.extsrcs/, further action might be required if in the future we want support extended document coming from different locations.\nDisable the copybook analysis for extended document lead to the introduction of a new enum class consumed by the LSP server CopybookScanAnalysis:\npublic enum CopybookProcessingMode{\n  ENABLED,\n  DISABLED;\n}\nThis enum will be also consumed when the document have the sync type DID_CHANGE with the value DISABLED to avoid to process copybooks when user is typing.", "createdAt": "2020-08-06T07:15:52Z", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448", "merged": true, "mergeCommit": {"oid": "af9116d8c304e246369cea5485deefd168958e16"}, "closed": true, "closedAt": "2020-08-10T12:23:04Z", "author": {"login": "zacanbrcom"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc59jpxgH2gAyNDYzODM0NjA5OjAzYWEzODc4Y2ZmN2RkMDEyMzI0ZmVlYjQzODY0YTk0MGRiYzk1ZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9g2f0gH2gAyNDYzODM0NjA5OmExNGJiZDE3ZjY0YzM1YTEwNTAzNGZmYjMwYjI1NzZiZjA4Y2Y2NTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "03aa3878cff7dd012324feeb43864a940dbc95f2", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/03aa3878cff7dd012324feeb43864a940dbc95f2", "committedDate": "2020-07-30T11:02:55Z", "message": "refactor: Rename enum to trigger the copybook scan analysis #441"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9307587a71bf29764ddf3d19649be706152f8d7e", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/9307587a71bf29764ddf3d19649be706152f8d7e", "committedDate": "2020-08-03T06:49:21Z", "message": "refactor: Add unit tests #441"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9ecfc20d1fbc64cff969f3ea7c9a4317c096bf8", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/a9ecfc20d1fbc64cff969f3ea7c9a4317c096bf8", "committedDate": "2020-08-03T06:49:39Z", "message": "Merge remote-tracking branch 'remotes/origin/development' into 441_SuppressCpyExtSrc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "190e90be72939d21067c99070e121a7c7162bb29", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/190e90be72939d21067c99070e121a7c7162bb29", "committedDate": "2020-08-05T13:29:58Z", "message": "feat: disable copybook analysis for extended source documents #441"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "679787ea2bb78f3411ee5b6d8a5594223c7baca3", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/679787ea2bb78f3411ee5b6d8a5594223c7baca3", "committedDate": "2020-08-05T14:22:53Z", "message": "refactor: Update constant values for CopybookScanAnalysis in test to follow convention #441"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb94d726614d5104d66b93261f79726d26d210f6", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/fb94d726614d5104d66b93261f79726d26d210f6", "committedDate": "2020-08-06T07:30:47Z", "message": "fix: spelling typo and update in javadoc #441"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/3e5ba4d85de32fc5a3012aff6b4242c177fccaa0", "committedDate": "2020-08-06T07:47:38Z", "message": "fix: spelling typo and update in javadoc #441"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNjQzMTYy", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#pullrequestreview-462643162", "createdAt": "2020-08-06T15:42:45Z", "commit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNTo0Mjo0NVrOG85TCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNTo0Njo0NVrOG85eBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwNjUwNw==", "bodyText": "Are you sure that you want to provide an implementation in the interface? Usually, we must use an interface for other purposes.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r466506507", "createdAt": "2020-08-06T15:42:45Z", "author": {"login": "grianbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/utils/FileSystemService.java", "diffHunk": "@@ -73,4 +74,15 @@\n    */\n   @Nonnull\n   String decodeURI(@Nonnull String uri);\n+\n+  /**\n+   * This method validate an URI to verify if is defined as extended document, accordining to a\n+   * regex.\n+   *\n+   * @param uri document URI opened in the client\n+   * @return true if the document is an extended document, false otherwise\n+   */\n+  static boolean isFileUnderExtendedSourceFolder(String uri) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwOTMxOQ==", "bodyText": "It is not clear what you mean here. Because (?:) is a non-captured group, but inside you have a captured one. Probably file:///.*?/\\.c4z/\\.extsrcs/.+ will be enough.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r466509319", "createdAt": "2020-08-06T15:46:45Z", "author": {"login": "grianbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/utils/FileSystemService.java", "diffHunk": "@@ -73,4 +74,15 @@\n    */\n   @Nonnull\n   String decodeURI(@Nonnull String uri);\n+\n+  /**\n+   * This method validate an URI to verify if is defined as extended document, accordining to a\n+   * regex.\n+   *\n+   * @param uri document URI opened in the client\n+   * @return true if the document is an extended document, false otherwise\n+   */\n+  static boolean isFileUnderExtendedSourceFolder(String uri) {\n+    return Pattern.matches(\"file:///(?:(.*?/\\\\.c4z/\\\\.extsrcs/.+)|\\\\.c4z/\\\\.extsrcs/.+)\", uri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNjAyNzEy", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#pullrequestreview-462602712", "createdAt": "2020-08-06T14:58:40Z", "commit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDo1ODo0MFrOG83aCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNTo0NDo1NFrOG85Y_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ3NTUzMA==", "bodyText": "I think it may be just \"equals\" due to we specify it using enum.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r466475530", "createdAt": "2020-08-06T14:58:40Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/impl/CobolSemanticParserListenerImpl.java", "diffHunk": "@@ -132,12 +137,15 @@ public void exitCopyStatement(@Nonnull CopyStatementContext ctx) {\n     /*\n      * define the copy book\n      */\n-    CopySourceContext copySource = ctx.copySource();\n-    String copybookName = retrieveCopybookName(copySource);\n-    Position position = retrievePosition(copySource);\n-    defineCopybook(copybookName, position);\n-    checkCopybookNameLength(copybookName, position);\n-    this.preprocessorCleanerService.excludeStatementFromText(ctx, COMMENT_TAG, tokens);\n+\n+    if (copybookScanAnalysis.equalsIgnoreCase(\"ENABLED\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ3NzU5Ng==", "bodyText": "I'm not sure if we need this check while analyzing the extended document. In fact, it checks the semantics, but I don't know if it will be useful for the user at that stage", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r466477596", "createdAt": "2020-08-06T15:01:33Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/impl/CobolSemanticParserListenerImpl.java", "diffHunk": "@@ -132,12 +137,15 @@ public void exitCopyStatement(@Nonnull CopyStatementContext ctx) {\n     /*\n      * define the copy book\n      */\n-    CopySourceContext copySource = ctx.copySource();\n-    String copybookName = retrieveCopybookName(copySource);\n-    Position position = retrievePosition(copySource);\n-    defineCopybook(copybookName, position);\n-    checkCopybookNameLength(copybookName, position);\n-    this.preprocessorCleanerService.excludeStatementFromText(ctx, COMMENT_TAG, tokens);\n+\n+    if (copybookScanAnalysis.equalsIgnoreCase(\"ENABLED\")) {\n+      CopySourceContext copySource = ctx.copySource();\n+      String copybookName = retrieveCopybookName(copySource);\n+      Position position = retrievePosition(copySource);\n+      defineCopybook(copybookName, position);\n+      checkCopybookNameLength(copybookName, position);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4Mjg3MA==", "bodyText": "Do you use DID_CLOSE?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r466482870", "createdAt": "2020-08-06T15:09:07Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/TextDocumentSyncType.java", "diffHunk": "@@ -9,13 +9,17 @@\n  * SPDX-License-Identifier: EPL-2.0\n  *\n  * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n  *\n- *   Broadcom, Inc. - initial API and implementation\n  */\n+\n package com.ca.lsp.cobol.service;\n \n-/** This enum class used to track text synchronization type for the processed document. */\n+/**\n+ * This enum class contains the kind of document synchronization that could be sent from the client\n+ */\n public enum TextDocumentSyncType {\n   DID_OPEN,\n-  DID_CHANGE\n+  DID_CHANGE,\n+  DID_CLOSE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ5MzE0Mg==", "bodyText": "The faster would be to check the sync type first, then do regex matching", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r466493142", "createdAt": "2020-08-06T15:24:08Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/CopybookScanAnalysis.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+package com.ca.lsp.cobol.service;\n+\n+import static com.ca.lsp.cobol.service.utils.FileSystemService.isFileUnderExtendedSourceFolder;\n+\n+/** This enum class used to track text synchronization type for the processed document. */\n+public enum CopybookScanAnalysis {\n+  ENABLED,\n+  DISABLED;\n+\n+  /**\n+   * This method verify if enable or disable copybook management based on two factors: 1) the file\n+   * is an extended source file, 2) the file is open in DID_OPEN|DID_CHANGE\n+   *\n+   * @param uri of the document opened in the editor by the client\n+   * @param textDocSyncType define the document sync mode that could be [{@link\n+   *     TextDocumentSyncType#DID_OPEN}|{@link TextDocumentSyncType#DID_CHANGE}]\n+   * @return A value of that could be [{@link CopybookScanAnalysis#ENABLED}|{@link\n+   *     CopybookScanAnalysis#DISABLED}]\n+   */\n+  public static CopybookScanAnalysis getCopybookScanAnalysis(String uri, String textDocSyncType) {\n+\n+    return isFileUnderExtendedSourceFolder(uri)\n+        ? DISABLED\n+        : getCopybookScanAnalysisByDocSync(textDocSyncType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwNDkwNA==", "bodyText": "I'm not sure that you need this as a separate enum. You may just reuse the TextDocumentSyncType, but change its semantic: rename to something more descriptive, e.g. CopybookProcessingMode and redefine its elements to something kinda RESOLVE, IGNORE and SKIP.\nThe RESOLVE will act as DID_OPEN now, IGNORE as DID_CHANGE (as I can see, we don't really check this value, only equity to DID_OPEN, but let it be), and SKIP will disable the copybook processing for the extended sources.\nSo, you will call the isFileUnderExtendedSourceFolder() on didOpen or didChange and send the according value. The value is that the purpose of the parameter goes from its name, i.e. it is more descriptive. Also, you will have only one enum instead of two.\nThis is only an idea, the decision is up to you", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r466504904", "createdAt": "2020-08-06T15:40:26Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/CopybookScanAnalysis.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+package com.ca.lsp.cobol.service;\n+\n+import static com.ca.lsp.cobol.service.utils.FileSystemService.isFileUnderExtendedSourceFolder;\n+\n+/** This enum class used to track text synchronization type for the processed document. */\n+public enum CopybookScanAnalysis {\n+  ENABLED,\n+  DISABLED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwNTgyNQ==", "bodyText": "\"This method checks...\" would be more correct here", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r466505825", "createdAt": "2020-08-06T15:41:41Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/CopybookScanAnalysis.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+package com.ca.lsp.cobol.service;\n+\n+import static com.ca.lsp.cobol.service.utils.FileSystemService.isFileUnderExtendedSourceFolder;\n+\n+/** This enum class used to track text synchronization type for the processed document. */\n+public enum CopybookScanAnalysis {\n+  ENABLED,\n+  DISABLED;\n+\n+  /**\n+   * This method verify if enable or disable copybook management based on two factors: 1) the file\n+   * is an extended source file, 2) the file is open in DID_OPEN|DID_CHANGE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwNzE0NA==", "bodyText": "A couple of typos here, \"This method validates the URI to verify if is defined as an extended document, according to the regex.\"", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r466507144", "createdAt": "2020-08-06T15:43:43Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/utils/FileSystemService.java", "diffHunk": "@@ -73,4 +74,15 @@\n    */\n   @Nonnull\n   String decodeURI(@Nonnull String uri);\n+\n+  /**\n+   * This method validate an URI to verify if is defined as extended document, accordining to a\n+   * regex.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwODAyOA==", "bodyText": "\"This test verifies\" here and further", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r466508028", "createdAt": "2020-08-06T15:44:54Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java", "diffHunk": "@@ -157,6 +158,60 @@ public void testNotAllowedFileExtensionAnalysis() {\n                         .equals(\"The given document extension is unsupported: \" + CPY_EXTENSION)));\n   }\n \n+  /**\n+   * This test verify that when an extended document is opened, the code is analyzed and the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5ba4d85de32fc5a3012aff6b4242c177fccaa0"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e8c0848c5d5b1299973a3614a2dd7c058b62fdd", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/4e8c0848c5d5b1299973a3614a2dd7c058b62fdd", "committedDate": "2020-08-10T07:35:26Z", "message": "refactor: apply request of change #441"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDIzNTQw", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#pullrequestreview-464023540", "createdAt": "2020-08-10T08:00:29Z", "commit": {"oid": "4e8c0848c5d5b1299973a3614a2dd7c058b62fdd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODowMDoyOVrOG-EvKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODowMDoyOVrOG-EvKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc0MjUwNw==", "bodyText": "Isn't it overriding of an interface method?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#discussion_r467742507", "createdAt": "2020-08-10T08:00:29Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/utils/WorkspaceFileService.java", "diffHunk": "@@ -86,4 +87,16 @@ public Path getPathFromURI(@Nonnull String uri) {\n       return null;\n     }\n   }\n+\n+  /**\n+   * This method validates an URI to verify if is defined as extended document, according to a\n+   * regex.\n+   *\n+   * @param uri document URI opened in the client\n+   * @return true if the document is an extended document, false otherwise\n+   */\n+  public static boolean isFileUnderExtendedSourceFolder(String uri) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8c0848c5d5b1299973a3614a2dd7c058b62fdd"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e60ed197b6a114c2f7fa14313f3e901978f8561b", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/e60ed197b6a114c2f7fa14313f3e901978f8561b", "committedDate": "2020-08-10T08:26:31Z", "message": "refactor: improve performance for CopybookProcessingMode #441"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDQ1ODEz", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#pullrequestreview-464045813", "createdAt": "2020-08-10T08:37:41Z", "commit": {"oid": "e60ed197b6a114c2f7fa14313f3e901978f8561b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDU0NjY4", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/448#pullrequestreview-464054668", "createdAt": "2020-08-10T08:51:26Z", "commit": {"oid": "e60ed197b6a114c2f7fa14313f3e901978f8561b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e3ef20c20c238009a4752ade85bb2f369d37f5c", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/9e3ef20c20c238009a4752ade85bb2f369d37f5c", "committedDate": "2020-08-10T11:50:55Z", "message": "refactor: apply request of change #441\n\nrefactor: improve performance for CopybookProcessingMode #441"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a4c3f5bb409ba122ed335c83fcdfed34da41249", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/0a4c3f5bb409ba122ed335c83fcdfed34da41249", "committedDate": "2020-08-10T11:51:39Z", "message": "Merge remote-tracking branch 'remotes/origin/development' into 441_SuppressCpyExtSrc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a14bbd17f64c35a105034ffb30b2576bf08cf650", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/a14bbd17f64c35a105034ffb30b2576bf08cf650", "committedDate": "2020-08-10T11:51:57Z", "message": "Merge remote-tracking branch 'origin/441_SuppressCpyExtSrc' into 441_SuppressCpyExtSrc"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 975, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}