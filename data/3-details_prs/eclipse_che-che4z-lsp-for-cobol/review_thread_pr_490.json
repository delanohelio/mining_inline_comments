{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MzMzMTc4", "number": 490, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo0NDozNlrOEkBCSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo1MDo1NFrOEkBLIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjAxMTYwOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/com/ca/lsp/cobol/usecases/TestExtraneousInputEOFExpecting.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo0NDozNlrOHSs7rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjozNDoyN1rOHSuqCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MjU4OA==", "bodyText": "Is it necessary to provide sorted expected values ?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/490#discussion_r489372588", "createdAt": "2020-09-16T11:44:36Z", "author": {"login": "asatklichov"}, "path": "server/src/test/java/com/ca/lsp/cobol/usecases/TestExtraneousInputEOFExpecting.java", "diffHunk": "@@ -37,7 +37,7 @@\n   private static final String MESSAGE =\n       \"Extraneous input '<EOF>' expected {ACCEPT, ADD, ALTER, CALL, CANCEL, CLOSE, \"\n           + \"COMPUTE, CONTINUE, DELETE, DISABLE, DISPLAY, DIVIDE, ENABLE, ENTRY, \"\n-          + \"EVALUATE, EXEC, EXHIBIT, EXIT, GENERATE, GOBACK, GO, IF, INITIALIZE, \"\n+          + \"EVALUATE, EXEC, EXHIBIT, EXIT, GENERATE, GO, GOBACK, IF, INITIALIZE, \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20572f2b2aa44b47309d0898012c34c6897172a8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwMDg0Mg==", "bodyText": "They are not really sorted, it is the order of the rules in the lexer grammar. And the best practice to keep them sorted when it is possible", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/490#discussion_r489400842", "createdAt": "2020-09-16T12:34:27Z", "author": {"login": "temanbrcom"}, "path": "server/src/test/java/com/ca/lsp/cobol/usecases/TestExtraneousInputEOFExpecting.java", "diffHunk": "@@ -37,7 +37,7 @@\n   private static final String MESSAGE =\n       \"Extraneous input '<EOF>' expected {ACCEPT, ADD, ALTER, CALL, CANCEL, CLOSE, \"\n           + \"COMPUTE, CONTINUE, DELETE, DISABLE, DISPLAY, DIVIDE, ENABLE, ENTRY, \"\n-          + \"EVALUATE, EXEC, EXHIBIT, EXIT, GENERATE, GOBACK, GO, IF, INITIALIZE, \"\n+          + \"EVALUATE, EXEC, EXHIBIT, EXIT, GENERATE, GO, GOBACK, IF, INITIALIZE, \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MjU4OA=="}, "originalCommit": {"oid": "20572f2b2aa44b47309d0898012c34c6897172a8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjAzNDI0OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/com/ca/lsp/cobol/usecases/TestPerformWithoutEndNotCauseNPE.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo1MDo1NFrOHStJjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzozNDo0OVrOHSxI8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3NjE0Mw==", "bodyText": "Optional (all tests):  Hamcrest way - assertThat(\"Number of diagnostics\", diagnostics, hasSize(2));", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/490#discussion_r489376143", "createdAt": "2020-09-16T11:50:54Z", "author": {"login": "asatklichov"}, "path": "server/src/test/java/com/ca/lsp/cobol/usecases/TestPerformWithoutEndNotCauseNPE.java", "diffHunk": "@@ -49,10 +49,10 @@ public void test() {\n   @Override\n   protected void assertDiagnostics(List<Diagnostic> diagnostics) {\n     {\n-      assertEquals(1, diagnostics.size(), \"Number of diagnostics\");\n+      assertEquals(2, diagnostics.size(), \"Number of diagnostics\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20572f2b2aa44b47309d0898012c34c6897172a8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0MTUyMw==", "bodyText": "I just found an issue with determining the error positions, so I'll fix it as a separate activity and rewrite the test", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/490#discussion_r489441523", "createdAt": "2020-09-16T13:34:49Z", "author": {"login": "temanbrcom"}, "path": "server/src/test/java/com/ca/lsp/cobol/usecases/TestPerformWithoutEndNotCauseNPE.java", "diffHunk": "@@ -49,10 +49,10 @@ public void test() {\n   @Override\n   protected void assertDiagnostics(List<Diagnostic> diagnostics) {\n     {\n-      assertEquals(1, diagnostics.size(), \"Number of diagnostics\");\n+      assertEquals(2, diagnostics.size(), \"Number of diagnostics\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3NjE0Mw=="}, "originalCommit": {"oid": "20572f2b2aa44b47309d0898012c34c6897172a8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3934, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}