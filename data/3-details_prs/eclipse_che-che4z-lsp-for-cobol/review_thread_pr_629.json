{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3ODQ2Njc5", "number": 629, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODoxMzoyM1rOE3G2rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODoxMzoyM1rOE3G2rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjE5NDM5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CobolTextDocumentService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODoxMzoyM1rOHwQm3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODo0Njo0NlrOHwR1-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM2NTc4OA==", "bodyText": "Oh no =) It has become quite complicated. Could you please change it to:\nLOG.error(createDescriptiveErrorMessage(\"analysis\", uri), e);", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/629#discussion_r520365788", "createdAt": "2020-11-10T08:13:23Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CobolTextDocumentService.java", "diffHunk": "@@ -251,21 +251,23 @@ private void clearAnalysedFutureObject(String uri) {\n \n   private void analyzeDocumentFirstTime(String uri, String text, boolean userRequest) {\n     registerDocument(uri, new CobolDocumentModel(text, AnalysisResult.empty()));\n-    Future<?> docAnalysisFuture = threadPool.submit(\n+    Future<?> docAnalysisFuture =\n+        threadPool.submit(\n             () -> {\n               try {\n                 CopybookProcessingMode copybookProcessingMode =\n-                        CopybookProcessingMode.getCopybookProcessingMode(\n-                                uri,\n-                                userRequest\n-                                        ? CopybookProcessingMode.ENABLED_VERBOSE\n-                                        : CopybookProcessingMode.ENABLED);\n+                    CopybookProcessingMode.getCopybookProcessingMode(\n+                        uri,\n+                        userRequest\n+                            ? CopybookProcessingMode.ENABLED_VERBOSE\n+                            : CopybookProcessingMode.ENABLED);\n                 AnalysisResult result = engine.analyze(uri, text, copybookProcessingMode);\n                 ofNullable(docs.get(uri)).ifPresent(doc -> doc.setAnalysisResult(result));\n                 publishResult(uri, result, copybookProcessingMode);\n                 outlineMap.get(uri).complete(result.getOutlineTree());\n               } catch (Exception e) {\n-                reportExceptionIfThrown(createDescriptiveErrorMessage(\"analysis\", uri));\n+                reportExceptionIfThrown(createDescriptiveErrorMessage(\"analysis\", uri))\n+                    .accept(null, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d18600dc509ceb9df68bf5db1afb4d1f3d9a5ba"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4NjA0MA==", "bodyText": "Done.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/629#discussion_r520386040", "createdAt": "2020-11-10T08:46:46Z", "author": {"login": "ap891843"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/service/CobolTextDocumentService.java", "diffHunk": "@@ -251,21 +251,23 @@ private void clearAnalysedFutureObject(String uri) {\n \n   private void analyzeDocumentFirstTime(String uri, String text, boolean userRequest) {\n     registerDocument(uri, new CobolDocumentModel(text, AnalysisResult.empty()));\n-    Future<?> docAnalysisFuture = threadPool.submit(\n+    Future<?> docAnalysisFuture =\n+        threadPool.submit(\n             () -> {\n               try {\n                 CopybookProcessingMode copybookProcessingMode =\n-                        CopybookProcessingMode.getCopybookProcessingMode(\n-                                uri,\n-                                userRequest\n-                                        ? CopybookProcessingMode.ENABLED_VERBOSE\n-                                        : CopybookProcessingMode.ENABLED);\n+                    CopybookProcessingMode.getCopybookProcessingMode(\n+                        uri,\n+                        userRequest\n+                            ? CopybookProcessingMode.ENABLED_VERBOSE\n+                            : CopybookProcessingMode.ENABLED);\n                 AnalysisResult result = engine.analyze(uri, text, copybookProcessingMode);\n                 ofNullable(docs.get(uri)).ifPresent(doc -> doc.setAnalysisResult(result));\n                 publishResult(uri, result, copybookProcessingMode);\n                 outlineMap.get(uri).complete(result.getOutlineTree());\n               } catch (Exception e) {\n-                reportExceptionIfThrown(createDescriptiveErrorMessage(\"analysis\", uri));\n+                reportExceptionIfThrown(createDescriptiveErrorMessage(\"analysis\", uri))\n+                    .accept(null, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM2NTc4OA=="}, "originalCommit": {"oid": "9d18600dc509ceb9df68bf5db1afb4d1f3d9a5ba"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3836, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}