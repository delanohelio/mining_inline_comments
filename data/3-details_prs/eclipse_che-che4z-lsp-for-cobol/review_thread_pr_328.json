{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyOTA3MDAz", "number": 328, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODo1Njo1NVrOD5uh4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMTozMToxM1rOD6NPow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODU3NzYwOnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/package.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODo1Njo1NVrOGRJ2aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNDoxMVrOGRQF4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0MDM2MQ==", "bodyText": "local is very common scope, how do you feel about to rename it to folders or local-folders or folders-uris?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420640361", "createdAt": "2020-05-06T08:56:55Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/package.json", "diffHunk": "@@ -71,13 +75,21 @@\n                     \"type\": \"string\",\n                     \"description\": \"Current default profile for copybook downloader\"\n                 },\n-                \"broadcom-cobol-lsp.cpy-manager.paths\": {\n+                \"broadcom-cobol-lsp.cpy-manager.paths.dsn\": {\n                     \"type\": \"array\",\n                     \"items\": {\n                         \"type\": \"string\"\n                     },\n                     \"description\": \"Default list of datasets to search for copybooks\",\n                     \"uniqueItems\": true\n+                },\n+                \"broadcom-cobol-lsp.cpy-manager.paths.local\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwMDUwMQ==", "bodyText": "The name was discussed in an old meeting we had together and follow the wiki page I wrote, could be changed if necessary", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420700501", "createdAt": "2020-05-06T10:50:02Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/package.json", "diffHunk": "@@ -71,13 +75,21 @@\n                     \"type\": \"string\",\n                     \"description\": \"Current default profile for copybook downloader\"\n                 },\n-                \"broadcom-cobol-lsp.cpy-manager.paths\": {\n+                \"broadcom-cobol-lsp.cpy-manager.paths.dsn\": {\n                     \"type\": \"array\",\n                     \"items\": {\n                         \"type\": \"string\"\n                     },\n                     \"description\": \"Default list of datasets to search for copybooks\",\n                     \"uniqueItems\": true\n+                },\n+                \"broadcom-cobol-lsp.cpy-manager.paths.local\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0MDM2MQ=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MjYyNA==", "bodyText": "Sure, it's up to you.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420742624", "createdAt": "2020-05-06T12:14:11Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/package.json", "diffHunk": "@@ -71,13 +75,21 @@\n                     \"type\": \"string\",\n                     \"description\": \"Current default profile for copybook downloader\"\n                 },\n-                \"broadcom-cobol-lsp.cpy-manager.paths\": {\n+                \"broadcom-cobol-lsp.cpy-manager.paths.dsn\": {\n                     \"type\": \"array\",\n                     \"items\": {\n                         \"type\": \"string\"\n                     },\n                     \"description\": \"Default list of datasets to search for copybooks\",\n                     \"uniqueItems\": true\n+                },\n+                \"broadcom-cobol-lsp.cpy-manager.paths.local\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0MDM2MQ=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODU5MjM4OnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/settings/CopybookResolver.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTowMToxNFrOGRKAKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoyODowN1rOGRQk9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0Mjg1OQ==", "bodyText": "What is the value of this interface? can it be removed to reduce complexity?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420642859", "createdAt": "2020-05-06T09:01:14Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/CopybookResolver.ts", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+/**\n+ * This interface represent the base class that define the API to resolve a JSON segment or a list of paths\n+ * defined by the user in the settings configuration in a list of URI Paths available on the filesystem.\n+ */\n+export interface CopybookResolver {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwMTY0NA==", "bodyText": "My idea is to define the resolutions of a copybook as different strategy and the interface is a good design pattern to made available to the client rather than the concrete class", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420701644", "createdAt": "2020-05-06T10:52:20Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/CopybookResolver.ts", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+/**\n+ * This interface represent the base class that define the API to resolve a JSON segment or a list of paths\n+ * defined by the user in the settings configuration in a list of URI Paths available on the filesystem.\n+ */\n+export interface CopybookResolver {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0Mjg1OQ=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MzcxMw==", "bodyText": "Make sense. Maybe it's too early to apply a strategy pattern because we don't have that much logic for now. But it's already here, then ok )", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420743713", "createdAt": "2020-05-06T12:16:05Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/CopybookResolver.ts", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+/**\n+ * This interface represent the base class that define the API to resolve a JSON segment or a list of paths\n+ * defined by the user in the settings configuration in a list of URI Paths available on the filesystem.\n+ */\n+export interface CopybookResolver {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0Mjg1OQ=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc1MDU4Mg==", "bodyText": "yeye agree, but as u said I just prepared the field ^__^", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420750582", "createdAt": "2020-05-06T12:28:07Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/CopybookResolver.ts", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+/**\n+ * This interface represent the base class that define the API to resolve a JSON segment or a list of paths\n+ * defined by the user in the settings configuration in a list of URI Paths available on the filesystem.\n+ */\n+export interface CopybookResolver {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0Mjg1OQ=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODY1OTI2OnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/commands/ResolveLocalCopybooks.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToyMTo1N1rOGRKsiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDo1MjozM1rOGRNmIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NDIxOQ==", "bodyText": "I think you can remove this await", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420654219", "createdAt": "2020-05-06T09:21:57Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/commands/ResolveLocalCopybooks.ts", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+\n+import * as vscode from \"vscode\";\n+import {PATHS_LOCAL_KEY, SETTINGS_SECTION} from \"../constants\";\n+import {CopybookResolver} from \"../services/settings/CopybookResolver\";\n+\n+export async function resolveLocalCopybooks(copybookResolver: CopybookResolver) {\n+    if (!vscode.workspace.getConfiguration(SETTINGS_SECTION).has(PATHS_LOCAL_KEY)) {\n+        await vscode.window.showErrorMessage(\"Please, specify LOCAL paths for copybooks in settings.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwMTczMA==", "bodyText": "OK", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420701730", "createdAt": "2020-05-06T10:52:33Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/commands/ResolveLocalCopybooks.ts", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+\n+import * as vscode from \"vscode\";\n+import {PATHS_LOCAL_KEY, SETTINGS_SECTION} from \"../constants\";\n+import {CopybookResolver} from \"../services/settings/CopybookResolver\";\n+\n+export async function resolveLocalCopybooks(copybookResolver: CopybookResolver) {\n+    if (!vscode.workspace.getConfiguration(SETTINGS_SECTION).has(PATHS_LOCAL_KEY)) {\n+        await vscode.window.showErrorMessage(\"Please, specify LOCAL paths for copybooks in settings.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NDIxOQ=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODY2MTMxOnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/commands/ResolveLocalCopybooks.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToyMjozNVrOGRKt5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDo1NzoxN1rOGRNvOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NDU2Nw==", "bodyText": "It's still here, did you test it on che?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420654567", "createdAt": "2020-05-06T09:22:35Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/commands/ResolveLocalCopybooks.ts", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+\n+import * as vscode from \"vscode\";\n+import {PATHS_LOCAL_KEY, SETTINGS_SECTION} from \"../constants\";\n+import {CopybookResolver} from \"../services/settings/CopybookResolver\";\n+\n+export async function resolveLocalCopybooks(copybookResolver: CopybookResolver) {\n+    if (!vscode.workspace.getConfiguration(SETTINGS_SECTION).has(PATHS_LOCAL_KEY)) {\n+        await vscode.window.showErrorMessage(\"Please, specify LOCAL paths for copybooks in settings.\");\n+        return [];\n+    }\n+\n+    const result: string[] = copybookResolver.resolve(vscode.workspace.getConfiguration(SETTINGS_SECTION).get(PATHS_LOCAL_KEY));\n+    //TODO: Will be removed after test on CHE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwNDA1OA==", "bodyText": "Yes I did, and the note in the description of this PR show my remarks about che environment.\nForgot to remove this TODO + notification msg, thanks!", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420704058", "createdAt": "2020-05-06T10:57:17Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/commands/ResolveLocalCopybooks.ts", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+\n+import * as vscode from \"vscode\";\n+import {PATHS_LOCAL_KEY, SETTINGS_SECTION} from \"../constants\";\n+import {CopybookResolver} from \"../services/settings/CopybookResolver\";\n+\n+export async function resolveLocalCopybooks(copybookResolver: CopybookResolver) {\n+    if (!vscode.workspace.getConfiguration(SETTINGS_SECTION).has(PATHS_LOCAL_KEY)) {\n+        await vscode.window.showErrorMessage(\"Please, specify LOCAL paths for copybooks in settings.\");\n+        return [];\n+    }\n+\n+    const result: string[] = copybookResolver.resolve(vscode.workspace.getConfiguration(SETTINGS_SECTION).get(PATHS_LOCAL_KEY));\n+    //TODO: Will be removed after test on CHE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NDU2Nw=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODY3MDE4OnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/CopybooksPathGenerator.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToyNTowM1rOGRKzeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDo1ODowMFrOGRNwqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NTk5NA==", "bodyText": "This await shouldn't be here, pls remove it. I know that it's not your change, sorry.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420655994", "createdAt": "2020-05-06T09:25:03Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/CopybooksPathGenerator.ts", "diffHunk": "@@ -33,11 +33,11 @@ export class CopybooksPathGenerator {\n     }\n \n     async listDatasets(): Promise<string[]> {\n-        if (!vscode.workspace.getConfiguration(SETTINGS_SECTION).has(\"paths\")) {\n+        if (!vscode.workspace.getConfiguration(SETTINGS_SECTION).has(PATHS_ZOWE)) {\n             await vscode.window.showErrorMessage(\"Please, specify DATASET paths for copybooks in settings.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwNDQyNg==", "bodyText": "dw! ;) I still have some weakness with typescript await/async \ud83d\ude06", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420704426", "createdAt": "2020-05-06T10:58:00Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/CopybooksPathGenerator.ts", "diffHunk": "@@ -33,11 +33,11 @@ export class CopybooksPathGenerator {\n     }\n \n     async listDatasets(): Promise<string[]> {\n-        if (!vscode.workspace.getConfiguration(SETTINGS_SECTION).has(\"paths\")) {\n+        if (!vscode.workspace.getConfiguration(SETTINGS_SECTION).has(PATHS_ZOWE)) {\n             await vscode.window.showErrorMessage(\"Please, specify DATASET paths for copybooks in settings.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NTk5NA=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODkwNzg3OnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDozODo0NFrOGRNKXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoyNjo1OVrOGRQiSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NDYyMQ==", "bodyText": "What is \"*\" for?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420694621", "createdAt": "2020-05-06T10:38:44Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+import * as fs from \"fs\";\n+import * as path from \"path\";\n+import {URL} from \"url\";\n+import {CopybookResolver} from \"./CopybookResolver\";\n+import {SettingsUtils} from \"./util/SettingsUtils\";\n+\n+/**\n+ * This function construct an URI from a valid resource provided from the setting configuration\n+ * @param resource represent the file to search within the workspace folder list\n+ * @return an URI representation of the file or undefined if not found\n+ */\n+function getURIFromResource(resource: string): URL {\n+    for (const workspaceFolder of SettingsUtils.getWorkspacesURI()) {\n+        const uri: URL = new URL(path.join(workspaceFolder, resource));\n+        if (fs.existsSync(uri)) {\n+            return uri;\n+        }\n+    }\n+}\n+\n+function resolveURIList(list: string[]): string[] {\n+    const result: Set<string> = new Set<string>();\n+    list.filter(resource => resource !== \"*\").forEach(resource => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwNTYxNg==", "bodyText": "Represent \"all content\" and since we discussed and decide to not support at moment this scenario I made an unit test to be sure that user didn't put the star in the path", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420705616", "createdAt": "2020-05-06T11:00:31Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+import * as fs from \"fs\";\n+import * as path from \"path\";\n+import {URL} from \"url\";\n+import {CopybookResolver} from \"./CopybookResolver\";\n+import {SettingsUtils} from \"./util/SettingsUtils\";\n+\n+/**\n+ * This function construct an URI from a valid resource provided from the setting configuration\n+ * @param resource represent the file to search within the workspace folder list\n+ * @return an URI representation of the file or undefined if not found\n+ */\n+function getURIFromResource(resource: string): URL {\n+    for (const workspaceFolder of SettingsUtils.getWorkspacesURI()) {\n+        const uri: URL = new URL(path.join(workspaceFolder, resource));\n+        if (fs.existsSync(uri)) {\n+            return uri;\n+        }\n+    }\n+}\n+\n+function resolveURIList(list: string[]): string[] {\n+    const result: Set<string> = new Set<string>();\n+    list.filter(resource => resource !== \"*\").forEach(resource => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NDYyMQ=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0NDE4MQ==", "bodyText": "and content is only paths, right?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420744181", "createdAt": "2020-05-06T12:16:54Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+import * as fs from \"fs\";\n+import * as path from \"path\";\n+import {URL} from \"url\";\n+import {CopybookResolver} from \"./CopybookResolver\";\n+import {SettingsUtils} from \"./util/SettingsUtils\";\n+\n+/**\n+ * This function construct an URI from a valid resource provided from the setting configuration\n+ * @param resource represent the file to search within the workspace folder list\n+ * @return an URI representation of the file or undefined if not found\n+ */\n+function getURIFromResource(resource: string): URL {\n+    for (const workspaceFolder of SettingsUtils.getWorkspacesURI()) {\n+        const uri: URL = new URL(path.join(workspaceFolder, resource));\n+        if (fs.existsSync(uri)) {\n+            return uri;\n+        }\n+    }\n+}\n+\n+function resolveURIList(list: string[]): string[] {\n+    const result: Set<string> = new Set<string>();\n+    list.filter(resource => resource !== \"*\").forEach(resource => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NDYyMQ=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0OTg5Ng==", "bodyText": "Let's say you have a folder called TEST that have two file ABC and DEF.\nIf the user is tempted to say, I want all the copybooks under test could try to do {\"local\": [\"TEST/*\"]} but we decided to not support this case at moment, btw it will be pretty straightforward to modify if we'd like to introduce this support", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420749896", "createdAt": "2020-05-06T12:26:59Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+import * as fs from \"fs\";\n+import * as path from \"path\";\n+import {URL} from \"url\";\n+import {CopybookResolver} from \"./CopybookResolver\";\n+import {SettingsUtils} from \"./util/SettingsUtils\";\n+\n+/**\n+ * This function construct an URI from a valid resource provided from the setting configuration\n+ * @param resource represent the file to search within the workspace folder list\n+ * @return an URI representation of the file or undefined if not found\n+ */\n+function getURIFromResource(resource: string): URL {\n+    for (const workspaceFolder of SettingsUtils.getWorkspacesURI()) {\n+        const uri: URL = new URL(path.join(workspaceFolder, resource));\n+        if (fs.existsSync(uri)) {\n+            return uri;\n+        }\n+    }\n+}\n+\n+function resolveURIList(list: string[]): string[] {\n+    const result: Set<string> = new Set<string>();\n+    list.filter(resource => resource !== \"*\").forEach(resource => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NDYyMQ=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODkxMjA2OnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDozOTo1NFrOGRNM1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNjowNVrOGRQKJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NTI1Mw==", "bodyText": "You can have resolveURIList as member of LocalCopybookResolver", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420695253", "createdAt": "2020-05-06T10:39:54Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+import * as fs from \"fs\";\n+import * as path from \"path\";\n+import {URL} from \"url\";\n+import {CopybookResolver} from \"./CopybookResolver\";\n+import {SettingsUtils} from \"./util/SettingsUtils\";\n+\n+/**\n+ * This function construct an URI from a valid resource provided from the setting configuration\n+ * @param resource represent the file to search within the workspace folder list\n+ * @return an URI representation of the file or undefined if not found\n+ */\n+function getURIFromResource(resource: string): URL {\n+    for (const workspaceFolder of SettingsUtils.getWorkspacesURI()) {\n+        const uri: URL = new URL(path.join(workspaceFolder, resource));\n+        if (fs.existsSync(uri)) {\n+            return uri;\n+        }\n+    }\n+}\n+\n+function resolveURIList(list: string[]): string[] {\n+    const result: Set<string> = new Set<string>();\n+    list.filter(resource => resource !== \"*\").forEach(resource => {\n+        const URI: URL = getURIFromResource(resource);\n+        if (URI !== undefined) {\n+            result.add(URI.href);\n+        }\n+    });\n+    return [...result];\n+}\n+\n+/**\n+ * This class implement the resolution of paths defined into the configuration file in a list\n+ * of URIs that are present on the filesystem\n+ */\n+export class LocalCopybookResolver implements CopybookResolver {\n+    private static parse(list: string[]): string[] {\n+        if (list === undefined) {\n+            return [];\n+        }\n+        return resolveURIList(list).filter(uri => uri !== \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MzcxOA==", "bodyText": "Not sure that I get it correctly.. I will have a look to the tsc doc \ud83d\udc7c", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420743718", "createdAt": "2020-05-06T12:16:05Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+import * as fs from \"fs\";\n+import * as path from \"path\";\n+import {URL} from \"url\";\n+import {CopybookResolver} from \"./CopybookResolver\";\n+import {SettingsUtils} from \"./util/SettingsUtils\";\n+\n+/**\n+ * This function construct an URI from a valid resource provided from the setting configuration\n+ * @param resource represent the file to search within the workspace folder list\n+ * @return an URI representation of the file or undefined if not found\n+ */\n+function getURIFromResource(resource: string): URL {\n+    for (const workspaceFolder of SettingsUtils.getWorkspacesURI()) {\n+        const uri: URL = new URL(path.join(workspaceFolder, resource));\n+        if (fs.existsSync(uri)) {\n+            return uri;\n+        }\n+    }\n+}\n+\n+function resolveURIList(list: string[]): string[] {\n+    const result: Set<string> = new Set<string>();\n+    list.filter(resource => resource !== \"*\").forEach(resource => {\n+        const URI: URL = getURIFromResource(resource);\n+        if (URI !== undefined) {\n+            result.add(URI.href);\n+        }\n+    });\n+    return [...result];\n+}\n+\n+/**\n+ * This class implement the resolution of paths defined into the configuration file in a list\n+ * of URIs that are present on the filesystem\n+ */\n+export class LocalCopybookResolver implements CopybookResolver {\n+    private static parse(list: string[]): string[] {\n+        if (list === undefined) {\n+            return [];\n+        }\n+        return resolveURIList(list).filter(uri => uri !== \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NTI1Mw=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODkxNjExOnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDo0MTowN1rOGRNPUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNjoxOVrOGRQKqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NTg4OA==", "bodyText": "Inline?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420695888", "createdAt": "2020-05-06T10:41:07Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+import * as fs from \"fs\";\n+import * as path from \"path\";\n+import {URL} from \"url\";\n+import {CopybookResolver} from \"./CopybookResolver\";\n+import {SettingsUtils} from \"./util/SettingsUtils\";\n+\n+/**\n+ * This function construct an URI from a valid resource provided from the setting configuration\n+ * @param resource represent the file to search within the workspace folder list\n+ * @return an URI representation of the file or undefined if not found\n+ */\n+function getURIFromResource(resource: string): URL {\n+    for (const workspaceFolder of SettingsUtils.getWorkspacesURI()) {\n+        const uri: URL = new URL(path.join(workspaceFolder, resource));\n+        if (fs.existsSync(uri)) {\n+            return uri;\n+        }\n+    }\n+}\n+\n+function resolveURIList(list: string[]): string[] {\n+    const result: Set<string> = new Set<string>();\n+    list.filter(resource => resource !== \"*\").forEach(resource => {\n+        const URI: URL = getURIFromResource(resource);\n+        if (URI !== undefined) {\n+            result.add(URI.href);\n+        }\n+    });\n+    return [...result];\n+}\n+\n+/**\n+ * This class implement the resolution of paths defined into the configuration file in a list\n+ * of URIs that are present on the filesystem\n+ */\n+export class LocalCopybookResolver implements CopybookResolver {\n+    private static parse(list: string[]): string[] {\n+        if (list === undefined) {\n+            return [];\n+        }\n+        return resolveURIList(list).filter(uri => uri !== \"\");\n+    }\n+\n+    /**\n+     * @param list the provided list of physical path defined by the user\n+     * @return a list of resolved URIs, empty array if the input list doesn't contains any valid/found URIs\n+     */\n+    public resolve(list: string[]): string[] {\n+        return LocalCopybookResolver.parse(list);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0Mzg1MA==", "bodyText": ".. as above \ud83d\udc7c", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420743850", "createdAt": "2020-05-06T12:16:19Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+import * as fs from \"fs\";\n+import * as path from \"path\";\n+import {URL} from \"url\";\n+import {CopybookResolver} from \"./CopybookResolver\";\n+import {SettingsUtils} from \"./util/SettingsUtils\";\n+\n+/**\n+ * This function construct an URI from a valid resource provided from the setting configuration\n+ * @param resource represent the file to search within the workspace folder list\n+ * @return an URI representation of the file or undefined if not found\n+ */\n+function getURIFromResource(resource: string): URL {\n+    for (const workspaceFolder of SettingsUtils.getWorkspacesURI()) {\n+        const uri: URL = new URL(path.join(workspaceFolder, resource));\n+        if (fs.existsSync(uri)) {\n+            return uri;\n+        }\n+    }\n+}\n+\n+function resolveURIList(list: string[]): string[] {\n+    const result: Set<string> = new Set<string>();\n+    list.filter(resource => resource !== \"*\").forEach(resource => {\n+        const URI: URL = getURIFromResource(resource);\n+        if (URI !== undefined) {\n+            result.add(URI.href);\n+        }\n+    });\n+    return [...result];\n+}\n+\n+/**\n+ * This class implement the resolution of paths defined into the configuration file in a list\n+ * of URIs that are present on the filesystem\n+ */\n+export class LocalCopybookResolver implements CopybookResolver {\n+    private static parse(list: string[]): string[] {\n+        if (list === undefined) {\n+            return [];\n+        }\n+        return resolveURIList(list).filter(uri => uri !== \"\");\n+    }\n+\n+    /**\n+     * @param list the provided list of physical path defined by the user\n+     * @return a list of resolved URIs, empty array if the input list doesn't contains any valid/found URIs\n+     */\n+    public resolve(list: string[]): string[] {\n+        return LocalCopybookResolver.parse(list);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NTg4OA=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODkyODQzOnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/settings/util/SettingsUtils.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDo0NDo0NFrOGRNWxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTowMjozMFrOGRN5QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5Nzc5OA==", "bodyText": "It's better to check it by parsing https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420697798", "createdAt": "2020-05-06T10:44:44Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/util/SettingsUtils.ts", "diffHunk": "@@ -0,0 +1,30 @@\n+import * as vscode from \"vscode\";\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+export class SettingsUtils {\n+    public static isValidJSON(json: string): boolean {\n+        return (json !== undefined && json.trim().length > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwNjYyNA==", "bodyText": "makes sense \ud83d\udc4d", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r420706624", "createdAt": "2020-05-06T11:02:30Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/util/SettingsUtils.ts", "diffHunk": "@@ -0,0 +1,30 @@\n+import * as vscode from \"vscode\";\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+export class SettingsUtils {\n+    public static isValidJSON(json: string): boolean {\n+        return (json !== undefined && json.trim().length > 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5Nzc5OA=="}, "originalCommit": {"oid": "b4bd6d42185aa995d91e1f1ee5de71203f358557"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzYwOTk1OnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMTozMToxM1rOGR6UHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMTozNTo0MFrOGR6cwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQzNDM5OA==", "bodyText": "Base on the definition list is always defined.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r421434398", "createdAt": "2020-05-07T11:31:13Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+import * as fs from \"fs\";\n+import * as path from \"path\";\n+import {URL} from \"url\";\n+import {CopybookResolver} from \"./CopybookResolver\";\n+import {SettingsUtils} from \"./util/SettingsUtils\";\n+\n+/**\n+ * This class implement the resolution of paths defined into the configuration file in a list\n+ * of URIs that are present on the filesystem\n+ */\n+export class LocalCopybookResolver implements CopybookResolver {\n+\n+    /**\n+     * This function construct an URI from a valid resource provided from the setting configuration\n+     * @param resource represent the file to search within the workspace folder list\n+     * @return an URI representation of the file or undefined if not found\n+     */\n+    private static getURIFromResource(resource: string): URL {\n+        for (const workspaceFolder of SettingsUtils.getWorkspacesURI()) {\n+            const uri: URL = new URL(path.join(workspaceFolder, resource));\n+            if (fs.existsSync(uri)) {\n+                return uri;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * @param list the provided list of physical path defined by the user\n+     * @return a list of resolved URIs, empty array if the input list doesn't contains any valid/found URIs\n+     */\n+    public resolve(list: string[]): string[] {\n+        if (list === undefined) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74390a5cc0f728ed5e767877e6d0f92daa83b590"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQzNjYwOQ==", "bodyText": "well.. the list passed to the method is coming from vsc API vscode.workspace.getConfiguration(SETTINGS_SECTION).get(PATHS_LOCAL_KEY) and I'd like avoid any trouble if we get undefined, I can remove it if you think is not necessary!", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/328#discussion_r421436609", "createdAt": "2020-05-07T11:35:40Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/settings/LocalCopybookResolver.ts", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Broadcom, Inc. - initial API and implementation\n+ */\n+import * as fs from \"fs\";\n+import * as path from \"path\";\n+import {URL} from \"url\";\n+import {CopybookResolver} from \"./CopybookResolver\";\n+import {SettingsUtils} from \"./util/SettingsUtils\";\n+\n+/**\n+ * This class implement the resolution of paths defined into the configuration file in a list\n+ * of URIs that are present on the filesystem\n+ */\n+export class LocalCopybookResolver implements CopybookResolver {\n+\n+    /**\n+     * This function construct an URI from a valid resource provided from the setting configuration\n+     * @param resource represent the file to search within the workspace folder list\n+     * @return an URI representation of the file or undefined if not found\n+     */\n+    private static getURIFromResource(resource: string): URL {\n+        for (const workspaceFolder of SettingsUtils.getWorkspacesURI()) {\n+            const uri: URL = new URL(path.join(workspaceFolder, resource));\n+            if (fs.existsSync(uri)) {\n+                return uri;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * @param list the provided list of physical path defined by the user\n+     * @return a list of resolved URIs, empty array if the input list doesn't contains any valid/found URIs\n+     */\n+    public resolve(list: string[]): string[] {\n+        if (list === undefined) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQzNDM5OA=="}, "originalCommit": {"oid": "74390a5cc0f728ed5e767877e6d0f92daa83b590"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4019, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}