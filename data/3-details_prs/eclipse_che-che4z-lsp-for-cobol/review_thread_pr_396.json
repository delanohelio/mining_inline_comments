{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MTY1Mjc1", "number": 396, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjoxMDozOVrOEF6Khg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjoxMDozOVrOEF6Khg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjMxMzAyOnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/JavaCheck.ts", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjoxMDo0MFrOGkYWxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjozNDo0MFrOGkZJ4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDk2Nw==", "bodyText": "What happens if not supported ? Like an else case. And we need a test case for that scenario as well.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/396#discussion_r440800967", "createdAt": "2020-06-16T12:10:40Z", "author": {"login": "asatklichov"}, "path": "clients/cobol-lsp-vscode-extension/src/services/JavaCheck.ts", "diffHunk": "@@ -21,12 +21,13 @@ export class JavaCheck {\n     }\n     public async isJavaInstalled() {\n         return new Promise<any>((resolve, reject) => {\n+            let resolved = false;\n             const ls = cp.spawn(\"java\", [\"-version\"]);\n             ls.stderr.on(\"data\", (data: any) => {\n-                if (!JavaCheck.isJavaVersionSupported(data.toString())) {\n-                    reject(\"Minimum expected Java version is 8\");\n+                if (JavaCheck.isJavaVersionSupported(data.toString())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c650f1dbf2ab64dd62060e9b1e46dc96b9f0180a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMTg5MA==", "bodyText": "there will be a reject\nhttps://github.com/eclipse/che-che4z-lsp-for-cobol/pull/396/files#diff-f4a7f7595d05dd5c4124b39716587168R42", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/396#discussion_r440801890", "createdAt": "2020-06-16T12:12:20Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/JavaCheck.ts", "diffHunk": "@@ -21,12 +21,13 @@ export class JavaCheck {\n     }\n     public async isJavaInstalled() {\n         return new Promise<any>((resolve, reject) => {\n+            let resolved = false;\n             const ls = cp.spawn(\"java\", [\"-version\"]);\n             ls.stderr.on(\"data\", (data: any) => {\n-                if (!JavaCheck.isJavaVersionSupported(data.toString())) {\n-                    reject(\"Minimum expected Java version is 8\");\n+                if (JavaCheck.isJavaVersionSupported(data.toString())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDk2Nw=="}, "originalCommit": {"oid": "c650f1dbf2ab64dd62060e9b1e46dc96b9f0180a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMjQzMA==", "bodyText": "But, I mean on \"data\", reject case (else) missing", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/396#discussion_r440802430", "createdAt": "2020-06-16T12:13:22Z", "author": {"login": "asatklichov"}, "path": "clients/cobol-lsp-vscode-extension/src/services/JavaCheck.ts", "diffHunk": "@@ -21,12 +21,13 @@ export class JavaCheck {\n     }\n     public async isJavaInstalled() {\n         return new Promise<any>((resolve, reject) => {\n+            let resolved = false;\n             const ls = cp.spawn(\"java\", [\"-version\"]);\n             ls.stderr.on(\"data\", (data: any) => {\n-                if (!JavaCheck.isJavaVersionSupported(data.toString())) {\n-                    reject(\"Minimum expected Java version is 8\");\n+                if (JavaCheck.isJavaVersionSupported(data.toString())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDk2Nw=="}, "originalCommit": {"oid": "c650f1dbf2ab64dd62060e9b1e46dc96b9f0180a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMzkyNw==", "bodyText": "It can't be in data. Data is called for each line. And we don't know which line contains a version number.\nIf there was no good version in any of line, then JavaCheck rejects promise on close.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/396#discussion_r440803927", "createdAt": "2020-06-16T12:16:18Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/JavaCheck.ts", "diffHunk": "@@ -21,12 +21,13 @@ export class JavaCheck {\n     }\n     public async isJavaInstalled() {\n         return new Promise<any>((resolve, reject) => {\n+            let resolved = false;\n             const ls = cp.spawn(\"java\", [\"-version\"]);\n             ls.stderr.on(\"data\", (data: any) => {\n-                if (!JavaCheck.isJavaVersionSupported(data.toString())) {\n-                    reject(\"Minimum expected Java version is 8\");\n+                if (JavaCheck.isJavaVersionSupported(data.toString())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDk2Nw=="}, "originalCommit": {"oid": "c650f1dbf2ab64dd62060e9b1e46dc96b9f0180a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwNTQwOQ==", "bodyText": "In this case resolve() should be out of if block, otherwise it is confusing", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/396#discussion_r440805409", "createdAt": "2020-06-16T12:19:03Z", "author": {"login": "asatklichov"}, "path": "clients/cobol-lsp-vscode-extension/src/services/JavaCheck.ts", "diffHunk": "@@ -21,12 +21,13 @@ export class JavaCheck {\n     }\n     public async isJavaInstalled() {\n         return new Promise<any>((resolve, reject) => {\n+            let resolved = false;\n             const ls = cp.spawn(\"java\", [\"-version\"]);\n             ls.stderr.on(\"data\", (data: any) => {\n-                if (!JavaCheck.isJavaVersionSupported(data.toString())) {\n-                    reject(\"Minimum expected Java version is 8\");\n+                if (JavaCheck.isJavaVersionSupported(data.toString())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDk2Nw=="}, "originalCommit": {"oid": "c650f1dbf2ab64dd62060e9b1e46dc96b9f0180a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwNzUxMw==", "bodyText": "Sorry, I didn't get it.. which block?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/396#discussion_r440807513", "createdAt": "2020-06-16T12:23:06Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/JavaCheck.ts", "diffHunk": "@@ -21,12 +21,13 @@ export class JavaCheck {\n     }\n     public async isJavaInstalled() {\n         return new Promise<any>((resolve, reject) => {\n+            let resolved = false;\n             const ls = cp.spawn(\"java\", [\"-version\"]);\n             ls.stderr.on(\"data\", (data: any) => {\n-                if (!JavaCheck.isJavaVersionSupported(data.toString())) {\n-                    reject(\"Minimum expected Java version is 8\");\n+                if (JavaCheck.isJavaVersionSupported(data.toString())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDk2Nw=="}, "originalCommit": {"oid": "c650f1dbf2ab64dd62060e9b1e46dc96b9f0180a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgxMTIzMw==", "bodyText": "I mean, negative test-scenario is missing here", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/396#discussion_r440811233", "createdAt": "2020-06-16T12:29:45Z", "author": {"login": "asatklichov"}, "path": "clients/cobol-lsp-vscode-extension/src/services/JavaCheck.ts", "diffHunk": "@@ -21,12 +21,13 @@ export class JavaCheck {\n     }\n     public async isJavaInstalled() {\n         return new Promise<any>((resolve, reject) => {\n+            let resolved = false;\n             const ls = cp.spawn(\"java\", [\"-version\"]);\n             ls.stderr.on(\"data\", (data: any) => {\n-                if (!JavaCheck.isJavaVersionSupported(data.toString())) {\n-                    reject(\"Minimum expected Java version is 8\");\n+                if (JavaCheck.isJavaVersionSupported(data.toString())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDk2Nw=="}, "originalCommit": {"oid": "c650f1dbf2ab64dd62060e9b1e46dc96b9f0180a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgxNDA0OA==", "bodyText": "Added one", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/396#discussion_r440814048", "createdAt": "2020-06-16T12:34:40Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/JavaCheck.ts", "diffHunk": "@@ -21,12 +21,13 @@ export class JavaCheck {\n     }\n     public async isJavaInstalled() {\n         return new Promise<any>((resolve, reject) => {\n+            let resolved = false;\n             const ls = cp.spawn(\"java\", [\"-version\"]);\n             ls.stderr.on(\"data\", (data: any) => {\n-                if (!JavaCheck.isJavaVersionSupported(data.toString())) {\n-                    reject(\"Minimum expected Java version is 8\");\n+                if (JavaCheck.isJavaVersionSupported(data.toString())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDk2Nw=="}, "originalCommit": {"oid": "c650f1dbf2ab64dd62060e9b1e46dc96b9f0180a"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4063, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}