{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNTIwOTkz", "number": 707, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMjo0ODo0M1rOFHK6Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMjo0ODo0M1rOFHK6Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDYzMTM5OnYy", "diffSide": "RIGHT", "path": "server/src/main/antlr4/com/broadcom/lsp/cobol/core/parser/CICSLexer.g4", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMjo0ODo0M1rOIIhmPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzowMDowMVrOIIh8nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgwOTk4MA==", "bodyText": "Is this intended?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/707#discussion_r545809980", "createdAt": "2020-12-18T12:48:43Z", "author": {"login": "ap891843"}, "path": "server/src/main/antlr4/com/broadcom/lsp/cobol/core/parser/CICSLexer.g4", "diffHunk": "@@ -837,6 +837,7 @@ NUMERICLITERAL : (PLUSCHAR | MINUSCHAR)? DIGIT* (DOT | COMMACHAR) DIGIT+ (('e' |\n NONNUMERICLITERAL : UNTRMSTRINGLITERAL | STRINGLITERAL | DBCSLITERAL | HEXNUMBER | NULLTERMINATED;\n \n IDENTIFIER : ([a-zA-Z0-9]+ ([-_]+ [a-zA-Z0-9]+)*);\n+INVALID_IDENTIFIER : [a-zA-Z0-9#@$]+ ([-_]+ [a-zA-Z0-9#@$]+)*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d26b8481111bb3ade6eb40f89e8282383583aea3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgxNTcwOQ==", "bodyText": "Yes, it is to catch the identifiers that contain #@$ and there missed by the preprocessor.\nThe logic here is this: copybook names may contain #@$ as a part of a valid name when identifiers may not. With the previous implementation, e.g. variable name VARNAME$ was treated as a possible copybook name by the preprocessor, and as VARNAME and $ (two different tokens) by the main lexer. In this case, the mapper could not map the token one to one and the mapping might miss some tokens.\nWith this change, all the identifiers, even incorrect, will be mapped correctly.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/707#discussion_r545815709", "createdAt": "2020-12-18T13:00:01Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/antlr4/com/broadcom/lsp/cobol/core/parser/CICSLexer.g4", "diffHunk": "@@ -837,6 +837,7 @@ NUMERICLITERAL : (PLUSCHAR | MINUSCHAR)? DIGIT* (DOT | COMMACHAR) DIGIT+ (('e' |\n NONNUMERICLITERAL : UNTRMSTRINGLITERAL | STRINGLITERAL | DBCSLITERAL | HEXNUMBER | NULLTERMINATED;\n \n IDENTIFIER : ([a-zA-Z0-9]+ ([-_]+ [a-zA-Z0-9]+)*);\n+INVALID_IDENTIFIER : [a-zA-Z0-9#@$]+ ([-_]+ [a-zA-Z0-9#@$]+)*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgwOTk4MA=="}, "originalCommit": {"oid": "d26b8481111bb3ade6eb40f89e8282383583aea3"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3893, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}