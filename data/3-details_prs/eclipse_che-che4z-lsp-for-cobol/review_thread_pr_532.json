{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNzAzMTQ4", "number": 532, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo0NzoxN1rOEmiuKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDozMjozNlrOEofJew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODUwMjE3OnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/copybook/CopybookDownloadService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo0NzoxN1rOHWoXvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwODozOTozNlrOHXP7Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5MjE1Ng==", "bodyText": "From telemetry POV could be an interesting event to collect I suppose", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493492156", "createdAt": "2020-09-23T11:47:17Z", "author": {"login": "andzac"}, "path": "clients/cobol-lsp-vscode-extension/src/services/copybook/CopybookDownloadService.ts", "diffHunk": "@@ -121,15 +146,15 @@ export class CopybookDownloadService implements vscode.Disposable {\n                 switch (e.type) {\n                     case Type.InvalidCredentials:\n                         errorMessage = INVALID_CREDENTIALS_ERROR_MSG.replace(PROFILE_NAME_PLACEHOLDER, element.profile);\n+                        this.locked = true;\n+                        this.queue.clean();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE0MDI1MA==", "bodyText": "Make sense.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494140250", "createdAt": "2020-09-24T08:39:36Z", "author": {"login": "grianbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/copybook/CopybookDownloadService.ts", "diffHunk": "@@ -121,15 +146,15 @@ export class CopybookDownloadService implements vscode.Disposable {\n                 switch (e.type) {\n                     case Type.InvalidCredentials:\n                         errorMessage = INVALID_CREDENTIALS_ERROR_MSG.replace(PROFILE_NAME_PLACEHOLDER, element.profile);\n+                        this.locked = true;\n+                        this.queue.clean();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5MjE1Ng=="}, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODUzODgwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/ca/lsp/cobol/service/TextDocumentSyncType.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo1MzoyMlrOHWourw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOTo0Mzo0OVrOHXSYcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5ODAzMQ==", "bodyText": "With the new value defined here, I think is time to find a more appropriate value for that enum. In past was named TextDocumentSyncType because was the reference in the LSP protocol specification for DID_OPEN and DID_CHANGE", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493498031", "createdAt": "2020-09-23T11:53:22Z", "author": {"login": "andzac"}, "path": "server/src/main/java/com/ca/lsp/cobol/service/TextDocumentSyncType.java", "diffHunk": "@@ -20,5 +20,6 @@\n  */\n public enum TextDocumentSyncType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY5NDk5Mw==", "bodyText": "It may be replaced with according methods in CopybookProcessingMode", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493694993", "createdAt": "2020-09-23T15:39:54Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/ca/lsp/cobol/service/TextDocumentSyncType.java", "diffHunk": "@@ -20,5 +20,6 @@\n  */\n public enum TextDocumentSyncType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5ODAzMQ=="}, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE4MDQ2NQ==", "bodyText": "I've deleted this enum.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494180465", "createdAt": "2020-09-24T09:43:49Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/ca/lsp/cobol/service/TextDocumentSyncType.java", "diffHunk": "@@ -20,5 +20,6 @@\n  */\n public enum TextDocumentSyncType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5ODAzMQ=="}, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODU1MTk1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/CopybookResolution.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo1NToyOVrOHWo2hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo1NToyOVrOHWo2hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMDAzNw==", "bodyText": "use copybookProcessingMode instead of syncType", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493500037", "createdAt": "2020-09-23T11:55:29Z", "author": {"login": "andzac"}, "path": "server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/CopybookResolution.java", "diffHunk": "@@ -33,5 +34,5 @@\n    */\n   @Nullable\n   CopybookModel resolve(\n-      @Nonnull String copybookName, @Nonnull String documentUri, @Nonnull String syncType);\n+      @Nonnull String copybookName, @Nonnull String documentUri, @Nonnull CopybookProcessingMode syncType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODU1NDkwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo1NTo1NlrOHWo4ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo1NTo1NlrOHWo4ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMDUxNg==", "bodyText": "as above ;)", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493500516", "createdAt": "2020-09-23T11:55:56Z", "author": {"login": "andzac"}, "path": "server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java", "diffHunk": "@@ -28,5 +29,5 @@ GrammarPreprocessorListenerImpl create(\n       @Nonnull @Assisted(\"uri\") String uri,\n       @Nonnull BufferedTokenStream tokens,\n       @Nonnull Deque<CopybookUsage> copybookStack,\n-      @Nonnull @Assisted(\"copybookProcessingMode\") String textDocumentSyncType);\n+      @Nonnull @Assisted(\"copybookProcessingMode\") CopybookProcessingMode textDocumentSyncType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTMzODgwOnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/Middleware.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDoxMzoxNVrOHWwmJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOTowMjo0MFrOHXQ2BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYyNjkxNg==", "bodyText": "if (match !== null) {\nreturn new RequestLine(\nmatch[1],\nmatch[2],\nmatch[5],\nmatch[6],\n\"verbose\" != match[4]\n);\n}", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493626916", "createdAt": "2020-09-23T14:13:15Z", "author": {"login": "asatklichov"}, "path": "clients/cobol-lsp-vscode-extension/src/services/Middleware.ts", "diffHunk": "@@ -35,19 +30,43 @@ export class Middleware {\n         token: CancellationToken,\n         next: ConfigurationRequest.HandlerSignature): Promise<HandlerResult<any[], void>> {\n \n-        if (params.items.length > 0) {\n-            const sectionName = params.items[0].section;\n-            if (sectionName.startsWith(\"broadcom-cobol-lsp.copybook-resolve\")) {\n-                const [cobolFileName, copybookName] = Middleware.extractFileAndCopybookNames(sectionName);\n-                return [await this.copybookResolverURI.resolveCopybookURI(copybookName, cobolFileName)];\n-            }\n-            if (sectionName.startsWith(\"broadcom-cobol-lsp.copybook-download\")) {\n-                const extractedNames = params.items.map(item => Middleware.extractFileAndCopybookNames(item.section));\n-                const copybookNames = extractedNames.map(names => names[1]);\n-                this.copybookDownloader.downloadCopybooks(extractedNames[0][0], copybookNames);\n-                return [];\n+        const requestLines = params.items.map(item => Middleware.parseLine(item.section));\n+        if (requestLines.length > 0 && requestLines[0] !== null && requestLines[0].prefix == \"broadcom-cobol-lsp\") {\n+            switch (requestLines[0].command) {\n+                case \"copybook-resolve\":\n+                    return [await this.copybookResolverURI.resolveCopybookURI(requestLines[0].copybookName,\n+                        requestLines[0].cobolFileName)]\n+                case \"copybook-download\":\n+                    const copybookNames = requestLines.map(requestLine => requestLine.copybookName);\n+                    this.copybookDownloader.downloadCopybooks(requestLines[0].cobolFileName, copybookNames,\n+                        requestLines[0].quiet);\n+                    return [];\n             }\n         }\n         return next(params, token);\n     }\n+\n+    private static parseLine(line: string): RequestLine | undefined {\n+        const match = PARAMS_REGEX.exec(line);\n+        if (match === null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYyNzE2OQ==", "bodyText": "implicitly returns undefined", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493627169", "createdAt": "2020-09-23T14:13:34Z", "author": {"login": "asatklichov"}, "path": "clients/cobol-lsp-vscode-extension/src/services/Middleware.ts", "diffHunk": "@@ -35,19 +30,43 @@ export class Middleware {\n         token: CancellationToken,\n         next: ConfigurationRequest.HandlerSignature): Promise<HandlerResult<any[], void>> {\n \n-        if (params.items.length > 0) {\n-            const sectionName = params.items[0].section;\n-            if (sectionName.startsWith(\"broadcom-cobol-lsp.copybook-resolve\")) {\n-                const [cobolFileName, copybookName] = Middleware.extractFileAndCopybookNames(sectionName);\n-                return [await this.copybookResolverURI.resolveCopybookURI(copybookName, cobolFileName)];\n-            }\n-            if (sectionName.startsWith(\"broadcom-cobol-lsp.copybook-download\")) {\n-                const extractedNames = params.items.map(item => Middleware.extractFileAndCopybookNames(item.section));\n-                const copybookNames = extractedNames.map(names => names[1]);\n-                this.copybookDownloader.downloadCopybooks(extractedNames[0][0], copybookNames);\n-                return [];\n+        const requestLines = params.items.map(item => Middleware.parseLine(item.section));\n+        if (requestLines.length > 0 && requestLines[0] !== null && requestLines[0].prefix == \"broadcom-cobol-lsp\") {\n+            switch (requestLines[0].command) {\n+                case \"copybook-resolve\":\n+                    return [await this.copybookResolverURI.resolveCopybookURI(requestLines[0].copybookName,\n+                        requestLines[0].cobolFileName)]\n+                case \"copybook-download\":\n+                    const copybookNames = requestLines.map(requestLine => requestLine.copybookName);\n+                    this.copybookDownloader.downloadCopybooks(requestLines[0].cobolFileName, copybookNames,\n+                        requestLines[0].quiet);\n+                    return [];\n             }\n         }\n         return next(params, token);\n     }\n+\n+    private static parseLine(line: string): RequestLine | undefined {\n+        const match = PARAMS_REGEX.exec(line);\n+        if (match === null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYyNjkxNg=="}, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE1NTI2OA==", "bodyText": "Agree.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494155268", "createdAt": "2020-09-24T09:02:40Z", "author": {"login": "grianbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/Middleware.ts", "diffHunk": "@@ -35,19 +30,43 @@ export class Middleware {\n         token: CancellationToken,\n         next: ConfigurationRequest.HandlerSignature): Promise<HandlerResult<any[], void>> {\n \n-        if (params.items.length > 0) {\n-            const sectionName = params.items[0].section;\n-            if (sectionName.startsWith(\"broadcom-cobol-lsp.copybook-resolve\")) {\n-                const [cobolFileName, copybookName] = Middleware.extractFileAndCopybookNames(sectionName);\n-                return [await this.copybookResolverURI.resolveCopybookURI(copybookName, cobolFileName)];\n-            }\n-            if (sectionName.startsWith(\"broadcom-cobol-lsp.copybook-download\")) {\n-                const extractedNames = params.items.map(item => Middleware.extractFileAndCopybookNames(item.section));\n-                const copybookNames = extractedNames.map(names => names[1]);\n-                this.copybookDownloader.downloadCopybooks(extractedNames[0][0], copybookNames);\n-                return [];\n+        const requestLines = params.items.map(item => Middleware.parseLine(item.section));\n+        if (requestLines.length > 0 && requestLines[0] !== null && requestLines[0].prefix == \"broadcom-cobol-lsp\") {\n+            switch (requestLines[0].command) {\n+                case \"copybook-resolve\":\n+                    return [await this.copybookResolverURI.resolveCopybookURI(requestLines[0].copybookName,\n+                        requestLines[0].cobolFileName)]\n+                case \"copybook-download\":\n+                    const copybookNames = requestLines.map(requestLine => requestLine.copybookName);\n+                    this.copybookDownloader.downloadCopybooks(requestLines[0].cobolFileName, copybookNames,\n+                        requestLines[0].quiet);\n+                    return [];\n             }\n         }\n         return next(params, token);\n     }\n+\n+    private static parseLine(line: string): RequestLine | undefined {\n+        const match = PARAMS_REGEX.exec(line);\n+        if (match === null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYyNjkxNg=="}, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTQ2NDM2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDozODoxN1rOHWx0gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToxNzowMlrOHXRYJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY0Njk3OQ==", "bodyText": "If I remember correctly, ID in @Assisted required only if there are some similar types injected. Now, all the parameters have different types, so you may use @Assisted without ID", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493646979", "createdAt": "2020-09-23T14:38:17Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java", "diffHunk": "@@ -28,5 +29,5 @@ GrammarPreprocessorListenerImpl create(\n       @Nonnull @Assisted(\"uri\") String uri,\n       @Nonnull BufferedTokenStream tokens,\n       @Nonnull Deque<CopybookUsage> copybookStack,\n-      @Nonnull @Assisted(\"copybookProcessingMode\") String textDocumentSyncType);\n+      @Nonnull @Assisted(\"copybookProcessingMode\") CopybookProcessingMode textDocumentSyncType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2NDAwNw==", "bodyText": "Cool, I can even delete the entire @Assested.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494164007", "createdAt": "2020-09-24T09:17:02Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java", "diffHunk": "@@ -28,5 +29,5 @@ GrammarPreprocessorListenerImpl create(\n       @Nonnull @Assisted(\"uri\") String uri,\n       @Nonnull BufferedTokenStream tokens,\n       @Nonnull Deque<CopybookUsage> copybookStack,\n-      @Nonnull @Assisted(\"copybookProcessingMode\") String textDocumentSyncType);\n+      @Nonnull @Assisted(\"copybookProcessingMode\") CopybookProcessingMode textDocumentSyncType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY0Njk3OQ=="}, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTQ5NTEwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDo0NDozMFrOHWyH6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDo0NDozMFrOHWyH6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1MTk0NQ==", "bodyText": "Will fork for now, but later on I would prefer to change the logic using different methods with descriptive names instead of passing the boolean flag.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493651945", "createdAt": "2020-09-23T14:44:30Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -216,7 +215,7 @@ private void registerEngineAndAnalyze(String uri, String languageType, String te\n       communications.notifyThatExtensionIsUnsupported(fileExtension);\n     } else if (isCobolFile(languageType)) {\n       communications.notifyThatLoadingInProgress(uri);\n-      analyzeDocumentFirstTime(uri, text);\n+      analyzeDocumentFirstTime(uri, text, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTUwNjQyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/ca/lsp/cobol/service/CopybookProcessingMode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDo0Njo0OFrOHWyO9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDo0Njo0OFrOHWyO9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1Mzc1MA==", "bodyText": "I think this switch may be replaced with different methods dropping the TextDocumentSyncType class. Not necessary to do it now, just a note for future", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493653750", "createdAt": "2020-09-23T14:46:48Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/ca/lsp/cobol/service/CopybookProcessingMode.java", "diffHunk": "@@ -42,12 +53,23 @@ public static CopybookProcessingMode getCopybookProcessingMode(\n         : getProcessingModeByTextDocSyncType(textDocumentSyncType);\n   }\n \n-  private static CopybookProcessingMode getProcessingModeByTextDocSyncType(\n+  /**\n+   * Converts sync type into appropriate processing mode.\n+   *\n+   * @param textDocumentSyncType the sync type of the document.\n+   * @return an appropriate processing mode.\n+   */\n+  public static CopybookProcessingMode getProcessingModeByTextDocSyncType(\n       @Nonnull TextDocumentSyncType textDocumentSyncType) {\n-    if (textDocumentSyncType == TextDocumentSyncType.DID_CHANGE) {\n-      return SKIP;\n-    } else {\n-      return ENABLED;\n+    switch (textDocumentSyncType) {\n+      case DID_OPEN:\n+        return ENABLED;\n+      case DID_CHANGE:\n+        return SKIP;\n+      case USER_REQUEST:\n+        return ENABLED_VERBOSE;\n+      default:\n+        return DISABLED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTYzMzE4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNToxMTo1MlrOHWzd9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToxODo0OVrOHXRcJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3Mzk3NA==", "bodyText": "I don't see where do you check this value", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493673974", "createdAt": "2020-09-23T15:11:52Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java", "diffHunk": "@@ -22,7 +22,15 @@\n  * all the registered documents.\n  */\n public class RunAnalysisEvent extends DataEvent {\n+  public final boolean quiet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2NTAyOA==", "bodyText": "Oops, you are right. I must use it in MyTextDocumentService:observerCallback.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494165028", "createdAt": "2020-09-24T09:18:49Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java", "diffHunk": "@@ -22,7 +22,15 @@\n  * all the registered documents.\n  */\n public class RunAnalysisEvent extends DataEvent {\n+  public final boolean quiet;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3Mzk3NA=="}, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTYzNzU2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNToxMjo0OFrOHWzgyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOToyMTo0OVrOHXRjeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3NDY5OA==", "bodyText": "I think that \"verbose\" here would be more descriptive, but it depends on how do you use it", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493674698", "createdAt": "2020-09-23T15:12:48Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java", "diffHunk": "@@ -22,7 +22,15 @@\n  * all the registered documents.\n  */\n public class RunAnalysisEvent extends DataEvent {\n+  public final boolean quiet;\n+\n   public RunAnalysisEvent() {\n     super(RUN_ANALYSIS_EVENT, RUN_ANALYSIS_EVENT.getId());\n+    this.quiet = true;\n+  }\n+\n+  public RunAnalysisEvent(boolean quiet) {\n+    super(RUN_ANALYSIS_EVENT, RUN_ANALYSIS_EVENT.getId());\n+    this.quiet = quiet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2NjkwNg==", "bodyText": "Agree, I'll rename it.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494166906", "createdAt": "2020-09-24T09:21:49Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java", "diffHunk": "@@ -22,7 +22,15 @@\n  * all the registered documents.\n  */\n public class RunAnalysisEvent extends DataEvent {\n+  public final boolean quiet;\n+\n   public RunAnalysisEvent() {\n     super(RUN_ANALYSIS_EVENT, RUN_ANALYSIS_EVENT.getId());\n+    this.quiet = true;\n+  }\n+\n+  public RunAnalysisEvent(boolean quiet) {\n+    super(RUN_ANALYSIS_EVENT, RUN_ANALYSIS_EVENT.getId());\n+    this.quiet = quiet;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3NDY5OA=="}, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTY3NzAxOnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/constants.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNToyMToxN1rOHWz6Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDowMzo1MVrOHXTH_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY4MTIzOA==", "bodyText": "Maybe, it would be more descriptive to say something like \"Copybook downloading stopped due to invalid credentials\". I would recommend to discuss it with @zimlu02 or @zeibura\nBesides that, as I remember, there should be no dots at the end of the info messages", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493681238", "createdAt": "2020-09-23T15:21:17Z", "author": {"login": "temanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/constants.ts", "diffHunk": "@@ -20,6 +20,7 @@ export const COPYBOOKS_FOLDER: string = \".copybooks\";\n export const GITIGNORE_FILE: string = \".gitignore\";\n export const LANGUAGE_ID = \"COBOL\";\n export const PROCESS_DOWNLOAD_ERROR_MSG = \"Some copybooks could not be located. Ensure your configuration contains correct paths to copybooks, including nested copybooks. Missing copybooks: \";\n+export const DOWNLOAD_QUEUE_LOCKED_ERROR_MSG = \"Your queue was locked due to invalid credentials.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE5MjYzOQ==", "bodyText": "I've tried to make it more user friendly:\n\n@zimlu02, @zeibura what do you think?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494192639", "createdAt": "2020-09-24T10:03:51Z", "author": {"login": "grianbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/constants.ts", "diffHunk": "@@ -20,6 +20,7 @@ export const COPYBOOKS_FOLDER: string = \".copybooks\";\n export const GITIGNORE_FILE: string = \".gitignore\";\n export const LANGUAGE_ID = \"COBOL\";\n export const PROCESS_DOWNLOAD_ERROR_MSG = \"Some copybooks could not be located. Ensure your configuration contains correct paths to copybooks, including nested copybooks. Missing copybooks: \";\n+export const DOWNLOAD_QUEUE_LOCKED_ERROR_MSG = \"Your queue was locked due to invalid credentials.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY4MTIzOA=="}, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTczNjI3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNTozMzo1NVrOHW0fIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOTozMDo1OFrOHXR5Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY5MDY1Nw==", "bodyText": "I didn't get why did you change this", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493690657", "createdAt": "2020-09-23T15:33:55Z", "author": {"login": "temanbrcom"}, "path": "server/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java", "diffHunk": "@@ -365,8 +369,8 @@ private void verifyCallback(\n       String text,\n       String uri) {\n \n-    verify(engine, timeout(10000).times(2)).analyze(uri, text, CopybookProcessingMode.ENABLED);\n-    verify(communications, times(2)).publishDiagnostics(diagnostics);\n+    verify(engine, timeout(10000).times(1)).analyze(uri, text, CopybookProcessingMode.ENABLED);\n+    verify(communications, times(1)).publishDiagnostics(diagnostics);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE3MjUwNg==", "bodyText": "You are right. I'll return that back.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494172506", "createdAt": "2020-09-24T09:30:58Z", "author": {"login": "grianbrcom"}, "path": "server/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java", "diffHunk": "@@ -365,8 +369,8 @@ private void verifyCallback(\n       String text,\n       String uri) {\n \n-    verify(engine, timeout(10000).times(2)).analyze(uri, text, CopybookProcessingMode.ENABLED);\n-    verify(communications, times(2)).publishDiagnostics(diagnostics);\n+    verify(engine, timeout(10000).times(1)).analyze(uri, text, CopybookProcessingMode.ENABLED);\n+    verify(communications, times(1)).publishDiagnostics(diagnostics);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY5MDY1Nw=="}, "originalCommit": {"oid": "cc78943d945a523d42d2c0403720225cb9455260"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODg0NzY0OnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/__tests__/MiddlewareTest.spec.ts", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDoyMTowMlrOHZmbNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToyODowMFrOHZoneA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwNjAwNg==", "bodyText": "I would provide a better description like: \"Given an input string then parseLine returns the RequestLine expected or undefined", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r496606006", "createdAt": "2020-09-29T10:21:02Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/__tests__/MiddlewareTest.spec.ts", "diffHunk": "@@ -73,3 +73,17 @@ describe(\"Copybook downloader\", () => {\n         expect(next).toHaveBeenCalledWith(params, null);\n     });\n });\n+\n+const each = require(\"jest-each\").default;\n+describe(\"Parse line parsing test\", () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ac0e28720076a4701b623ce3d9bbdb2638541d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxMzAwNQ==", "bodyText": "This description is only a part of a test case name. See an example:", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r496613005", "createdAt": "2020-09-29T10:33:31Z", "author": {"login": "grianbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/__tests__/MiddlewareTest.spec.ts", "diffHunk": "@@ -73,3 +73,17 @@ describe(\"Copybook downloader\", () => {\n         expect(next).toHaveBeenCalledWith(params, null);\n     });\n });\n+\n+const each = require(\"jest-each\").default;\n+describe(\"Parse line parsing test\", () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwNjAwNg=="}, "originalCommit": {"oid": "d7ac0e28720076a4701b623ce3d9bbdb2638541d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxNjQzOA==", "bodyText": "I saw it, so I will reformulate it like: \"ParseLine() return a RequestLine object or undefined when the input is\" + foreach.\nYou can skip this change if u think is already well enough explicative ;)", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r496616438", "createdAt": "2020-09-29T10:40:01Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/__tests__/MiddlewareTest.spec.ts", "diffHunk": "@@ -73,3 +73,17 @@ describe(\"Copybook downloader\", () => {\n         expect(next).toHaveBeenCalledWith(params, null);\n     });\n });\n+\n+const each = require(\"jest-each\").default;\n+describe(\"Parse line parsing test\", () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwNjAwNg=="}, "originalCommit": {"oid": "d7ac0e28720076a4701b623ce3d9bbdb2638541d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyNzgxMA==", "bodyText": "What about:\ndescribe(\"ParseLine() returns a RequestLine object or undefined in the following cases:\", () => {\n\nThe description shows that it will be a parametrized test.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r496627810", "createdAt": "2020-09-29T11:01:03Z", "author": {"login": "grianbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/__tests__/MiddlewareTest.spec.ts", "diffHunk": "@@ -73,3 +73,17 @@ describe(\"Copybook downloader\", () => {\n         expect(next).toHaveBeenCalledWith(params, null);\n     });\n });\n+\n+const each = require(\"jest-each\").default;\n+describe(\"Parse line parsing test\", () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwNjAwNg=="}, "originalCommit": {"oid": "d7ac0e28720076a4701b623ce3d9bbdb2638541d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0MTkxMg==", "bodyText": "YA! u got my point that way :)", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r496641912", "createdAt": "2020-09-29T11:28:00Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/__tests__/MiddlewareTest.spec.ts", "diffHunk": "@@ -73,3 +73,17 @@ describe(\"Copybook downloader\", () => {\n         expect(next).toHaveBeenCalledWith(params, null);\n     });\n });\n+\n+const each = require(\"jest-each\").default;\n+describe(\"Parse line parsing test\", () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwNjAwNg=="}, "originalCommit": {"oid": "d7ac0e28720076a4701b623ce3d9bbdb2638541d"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODg4ODI3OnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/copybook/CopybookDownloadService.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDozMjozNlrOHZm0ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo1MTo0OVrOHZnchQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxMjUxNQ==", "bodyText": "what about to collapse one level and put there the content of processDownloadError()?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r496612515", "createdAt": "2020-09-29T10:32:36Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/copybook/CopybookDownloadService.ts", "diffHunk": "@@ -82,20 +100,28 @@ export class CopybookDownloadService implements vscode.Disposable {\n                     await this.handleQueue(element, errors, progress);\n \n                     if (this.queue.length === 0 && errors.size > 0) {\n-                        this.createErrorMessageForCopybooks(errors);\n+                        await CopybookDownloadService.createErrorMessageForCopybooks(errors);\n                         errors.clear();\n                     }\n \n                     if (this.queue.length === 0) {\n                         TelemetryService.registerEvent(\"Download copybooks from MF\", [\"copybook\", \"COBOL\", \"experiment-tag\"], \"total time to search copybooks on MF\", new Map().set(\"time elapsed\", TelemetryService.calculateTimeElapsed(startTime, Date.now())));\n-                        startTime = 0;\n+                        startTime = null;\n                     }\n                 });\n         }\n     }\n \n-    private createErrorMessageForCopybooks(datasets: Set<string>) {\n-        this.resolver.processDownloadError(PROCESS_DOWNLOAD_ERROR_MSG + Array.from(datasets));\n+    private static async createErrorMessageForCopybooks(datasets: Set<string>) {\n+        await CopybookDownloadService.processDownloadError(PROCESS_DOWNLOAD_ERROR_MSG + Array.from(datasets));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ac0e28720076a4701b623ce3d9bbdb2638541d"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMjcyNQ==", "bodyText": "processDownloadError() is also used in fetchCopybook. So, I need to put a procedure content into two places.\nUnlike the showQueueLockedDialog function, which I use only once.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r496622725", "createdAt": "2020-09-29T10:51:49Z", "author": {"login": "grianbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/services/copybook/CopybookDownloadService.ts", "diffHunk": "@@ -82,20 +100,28 @@ export class CopybookDownloadService implements vscode.Disposable {\n                     await this.handleQueue(element, errors, progress);\n \n                     if (this.queue.length === 0 && errors.size > 0) {\n-                        this.createErrorMessageForCopybooks(errors);\n+                        await CopybookDownloadService.createErrorMessageForCopybooks(errors);\n                         errors.clear();\n                     }\n \n                     if (this.queue.length === 0) {\n                         TelemetryService.registerEvent(\"Download copybooks from MF\", [\"copybook\", \"COBOL\", \"experiment-tag\"], \"total time to search copybooks on MF\", new Map().set(\"time elapsed\", TelemetryService.calculateTimeElapsed(startTime, Date.now())));\n-                        startTime = 0;\n+                        startTime = null;\n                     }\n                 });\n         }\n     }\n \n-    private createErrorMessageForCopybooks(datasets: Set<string>) {\n-        this.resolver.processDownloadError(PROCESS_DOWNLOAD_ERROR_MSG + Array.from(datasets));\n+    private static async createErrorMessageForCopybooks(datasets: Set<string>) {\n+        await CopybookDownloadService.processDownloadError(PROCESS_DOWNLOAD_ERROR_MSG + Array.from(datasets));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxMjUxNQ=="}, "originalCommit": {"oid": "d7ac0e28720076a4701b623ce3d9bbdb2638541d"}, "originalPosition": 115}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3969, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}