{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNDc5MDE2", "number": 557, "title": "Implementation for folder-based positive tests registry ", "bodyText": "FolderTextRegistry was implemented and used instead of ZipTextRegistry", "createdAt": "2020-10-14T16:00:10Z", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557", "merged": true, "mergeCommit": {"oid": "5c5114dc4060d9ebf2b9a945d095a2d158ae8e2a"}, "closed": true, "closedAt": "2020-10-15T10:25:11Z", "author": {"login": "Nurkambay"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSf6wBABqjM4Nzc1MjU2Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSvJVEABqjM4ODA3NTc4MjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20a75a38319f7ee97986ee9a265d4a38fc2f0418", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/20a75a38319f7ee97986ee9a265d4a38fc2f0418", "committedDate": "2020-10-14T15:55:37Z", "message": "Implement"}, "afterCommit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/c7f3b3292e98f8f02337cef9f744e40677bf00f8", "committedDate": "2020-10-14T16:38:45Z", "message": "Implement folder baset test registry\n\nSigned-off-by Leonid Baranov <leonid.baranov@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NTM0NDY4", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-508534468", "createdAt": "2020-10-14T16:39:36Z", "commit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjozOTozN1rOHhb0lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjo0MzoyMFrOHhb9iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgyMDg4NQ==", "bodyText": "Please, provide the Javadoc for this class", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r504820885", "createdAt": "2020-10-14T16:39:37Z", "author": {"login": "temanbrcom"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/CobolTextHelper.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import lombok.experimental.UtilityClass;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+\n+@Slf4j\n+@UtilityClass\n+public class CobolTextHelper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgyMzE3Ng==", "bodyText": "COBOL files don't necessarily have extensions, so it may cause wrong behavior in some cases.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r504823176", "createdAt": "2020-10-14T16:43:20Z", "author": {"login": "temanbrcom"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/FolderTextRegistry.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.inject.Inject;\n+import com.google.inject.Singleton;\n+import com.google.inject.name.Named;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/** Registry for Cobol source code files. */\n+@Slf4j\n+@Singleton\n+public class FolderTextRegistry implements CobolTextRegistry {\n+\n+    private static final String POSITIVE_ENTRY = \"positive\";\n+    private static final String NEGATIVE_ENTRY = \"negative\";\n+    private static final String COPYBOOK_ENTRY = \"copybooks\";\n+\n+    private final ListMultimap<String, CobolText> texts = ArrayListMultimap.create();\n+\n+    @Inject\n+    public FolderTextRegistry(@Named(\"filesToTestPath\") String pathToTestResources) {\n+        if (StringUtils.isNotEmpty(pathToTestResources)) {\n+            try {\n+                collectFilesToTest(pathToTestResources);\n+            } catch (IOException e) {\n+                LOG.error(e.getMessage());\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public List<CobolText> getPositives() {\n+        return Collections.unmodifiableList(texts.get(POSITIVE_ENTRY));\n+    }\n+\n+    @Override\n+    public List<CobolText> getNegatives() {\n+        return Collections.unmodifiableList(texts.get(NEGATIVE_ENTRY));\n+    }\n+\n+    @Override\n+    public List<CobolText> getCopybooks() {\n+        return Collections.unmodifiableList(texts.get(COPYBOOK_ENTRY));\n+    }\n+\n+    private void collectFilesToTest(String folderPath) throws IOException {\n+        Files.walk(Paths.get(folderPath))\n+                .filter(Files::isRegularFile)\n+                .forEach(this::processFile);\n+    }\n+\n+    private void processFile(Path path) {\n+        String[] parts = path.toString().split(\"/\");\n+        if (parts.length < 2) {\n+            return;\n+        }\n+\n+        String name = parts[parts.length - 1];\n+        String folder = parts[parts.length - 2];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NTc1MzA5", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-508575309", "createdAt": "2020-10-14T17:30:33Z", "commit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzozMDozNFrOHhdsqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzozNzoyNlrOHhd8hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg1MTYyNw==", "bodyText": "I hope that you can use this line here:\nfullText = IOUtils.toString(stream, StandardCharsets.UTF_8.name());\n\nWe already have Apache IO library in our project.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r504851627", "createdAt": "2020-10-14T17:30:34Z", "author": {"login": "grianbrcom"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/CobolTextHelper.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import lombok.experimental.UtilityClass;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+\n+@Slf4j\n+@UtilityClass\n+public class CobolTextHelper {\n+    public CobolText fromStream(String name, InputStream stream) {\n+        String fullText = null;\n+        try {\n+            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(stream));\n+            StringBuilder builder = new StringBuilder();\n+\n+            for (String line = bufferedReader.readLine();\n+                 line != null;\n+                 line = bufferedReader.readLine()) {\n+                builder.append(line).append(\"\\r\\n\");\n+            }\n+            fullText = builder.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg1NTY4NQ==", "bodyText": "If we don't plan to use a zip file as a registry, we can delete the entire ZipTextRegistry class and CobolTextHelper.\nIn case we work only with a folder registry, we can read a file via Files.readString(path) in FolderTextRegistry::processFile, no needs to touch InputStream at all.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r504855685", "createdAt": "2020-10-14T17:37:26Z", "author": {"login": "grianbrcom"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/TestModule.java", "diffHunk": "@@ -61,7 +62,7 @@ protected void configure() {\n     bind(CopybookService.class).to(CopybookServiceImpl.class);\n     bind(Communications.class).to(ServerCommunications.class);\n     bind(TextDocumentService.class).to(CobolTextDocumentService.class);\n-    bind(CobolTextRegistry.class).to(ZipTextRegistry.class);\n+    bind(CobolTextRegistry.class).to(FolderTextRegistry.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTIzODU2", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509123856", "createdAt": "2020-10-15T08:11:19Z", "commit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoxMToxOVrOHh6Cdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoxMTo1NlrOHh6EuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMxNTk1OA==", "bodyText": "As I see, for error case, it is still returning the object, and once used below no validation there. Better return Optional object and check ifPresent..", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r505315958", "createdAt": "2020-10-15T08:11:19Z", "author": {"login": "asatklichov"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/CobolTextHelper.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import lombok.experimental.UtilityClass;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+\n+@Slf4j\n+@UtilityClass\n+public class CobolTextHelper {\n+    public CobolText fromStream(String name, InputStream stream) {\n+        String fullText = null;\n+        try {\n+            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(stream));\n+            StringBuilder builder = new StringBuilder();\n+\n+            for (String line = bufferedReader.readLine();\n+                 line != null;\n+                 line = bufferedReader.readLine()) {\n+                builder.append(line).append(\"\\r\\n\");\n+            }\n+            fullText = builder.toString();\n+        } catch (IOException e) {\n+            LOG.error(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMxNjUzNw==", "bodyText": "Regarding to above check here only ifPresent needed", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r505316537", "createdAt": "2020-10-15T08:11:56Z", "author": {"login": "asatklichov"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/FolderTextRegistry.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.inject.Inject;\n+import com.google.inject.Singleton;\n+import com.google.inject.name.Named;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/** Registry for Cobol source code files. */\n+@Slf4j\n+@Singleton\n+public class FolderTextRegistry implements CobolTextRegistry {\n+\n+    private static final String POSITIVE_ENTRY = \"positive\";\n+    private static final String NEGATIVE_ENTRY = \"negative\";\n+    private static final String COPYBOOK_ENTRY = \"copybooks\";\n+\n+    private final ListMultimap<String, CobolText> texts = ArrayListMultimap.create();\n+\n+    @Inject\n+    public FolderTextRegistry(@Named(\"filesToTestPath\") String pathToTestResources) {\n+        if (StringUtils.isNotEmpty(pathToTestResources)) {\n+            try {\n+                collectFilesToTest(pathToTestResources);\n+            } catch (IOException e) {\n+                LOG.error(e.getMessage());\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public List<CobolText> getPositives() {\n+        return Collections.unmodifiableList(texts.get(POSITIVE_ENTRY));\n+    }\n+\n+    @Override\n+    public List<CobolText> getNegatives() {\n+        return Collections.unmodifiableList(texts.get(NEGATIVE_ENTRY));\n+    }\n+\n+    @Override\n+    public List<CobolText> getCopybooks() {\n+        return Collections.unmodifiableList(texts.get(COPYBOOK_ENTRY));\n+    }\n+\n+    private void collectFilesToTest(String folderPath) throws IOException {\n+        Files.walk(Paths.get(folderPath))\n+                .filter(Files::isRegularFile)\n+                .forEach(this::processFile);\n+    }\n+\n+    private void processFile(Path path) {\n+        String[] parts = path.toString().split(\"/\");\n+        if (parts.length < 2) {\n+            return;\n+        }\n+\n+        String name = parts[parts.length - 1];\n+        String folder = parts[parts.length - 2];\n+\n+        try (InputStream stream = Files.newInputStream(path)) {\n+            CobolText loadCobolText = CobolTextHelper.fromStream(name, stream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "originalPosition": 72}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/c7f3b3292e98f8f02337cef9f744e40677bf00f8", "committedDate": "2020-10-14T16:38:45Z", "message": "Implement folder baset test registry\n\nSigned-off-by Leonid Baranov <leonid.baranov@broadcom.com>"}, "afterCommit": {"oid": "4374bdd9b57c6b03487f91358c9efa8a36a0e632", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/4374bdd9b57c6b03487f91358c9efa8a36a0e632", "committedDate": "2020-10-15T08:52:54Z", "message": "refactor: Positive tests registry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTI5MDc5", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509129079", "createdAt": "2020-10-15T08:17:35Z", "commit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoxNzozNVrOHh6eqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoxNzozNVrOHh6eqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMyMzE3Nw==", "bodyText": "There is a new StringJoiner if you like to try here", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r505323177", "createdAt": "2020-10-15T08:17:35Z", "author": {"login": "asatklichov"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/CobolTextHelper.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import lombok.experimental.UtilityClass;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+\n+@Slf4j\n+@UtilityClass\n+public class CobolTextHelper {\n+    public CobolText fromStream(String name, InputStream stream) {\n+        String fullText = null;\n+        try {\n+            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(stream));\n+            StringBuilder builder = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f3b3292e98f8f02337cef9f744e40677bf00f8"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4374bdd9b57c6b03487f91358c9efa8a36a0e632", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/4374bdd9b57c6b03487f91358c9efa8a36a0e632", "committedDate": "2020-10-15T08:52:54Z", "message": "refactor: Positive tests registry"}, "afterCommit": {"oid": "327d4a95fe233b1df314a51d9e00ec63edacced9", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/327d4a95fe233b1df314a51d9e00ec63edacced9", "committedDate": "2020-10-15T09:03:37Z", "message": "refactor: Folder-based Positive Test Registry\n\nAuthor: Leonid Baranov <leonid.baranov@broadcom.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "327d4a95fe233b1df314a51d9e00ec63edacced9", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/327d4a95fe233b1df314a51d9e00ec63edacced9", "committedDate": "2020-10-15T09:03:37Z", "message": "refactor: Folder-based Positive Test Registry\n\nAuthor: Leonid Baranov <leonid.baranov@broadcom.com>"}, "afterCommit": {"oid": "ac16a2f9cbb0aa13bb1f7707661d74938080b56e", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/ac16a2f9cbb0aa13bb1f7707661d74938080b56e", "committedDate": "2020-10-15T09:09:07Z", "message": "refactor: Folder-baset Positive Test Registry\n\nSigned-off by: Leonid Baranov <leonid.baranov@broadcom.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac16a2f9cbb0aa13bb1f7707661d74938080b56e", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/ac16a2f9cbb0aa13bb1f7707661d74938080b56e", "committedDate": "2020-10-15T09:09:07Z", "message": "refactor: Folder-baset Positive Test Registry\n\nSigned-off by: Leonid Baranov <leonid.baranov@broadcom.com>"}, "afterCommit": {"oid": "b10a3fb737b4eeb702f15041874ab355d1b53da6", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/b10a3fb737b4eeb702f15041874ab355d1b53da6", "committedDate": "2020-10-15T09:11:59Z", "message": "Folder-based Positive Test Registry\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTgwNjc5", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509180679", "createdAt": "2020-10-15T09:18:49Z", "commit": {"oid": "b10a3fb737b4eeb702f15041874ab355d1b53da6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxODo0OVrOHh-aUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxODo0OVrOHh-aUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4NzYwMw==", "bodyText": "I just noticed that this class is not used in the dependency injection, so it would be better to remove these @Inject and @Named", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r505387603", "createdAt": "2020-10-15T09:18:49Z", "author": {"login": "temanbrcom"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/FolderTextRegistry.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.inject.Inject;\n+import com.google.inject.Singleton;\n+import com.google.inject.name.Named;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/** Registry for Cobol source code files. */\n+@Slf4j\n+@Singleton\n+public class FolderTextRegistry implements CobolTextRegistry {\n+\n+    private static final String POSITIVE_ENTRY = \"positive\";\n+    private static final String NEGATIVE_ENTRY = \"negative\";\n+    private static final String COPYBOOK_ENTRY = \"copybooks\";\n+\n+    private final ListMultimap<String, CobolText> texts = ArrayListMultimap.create();\n+\n+    @Inject", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b10a3fb737b4eeb702f15041874ab355d1b53da6"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTgxMzY4", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509181368", "createdAt": "2020-10-15T09:19:41Z", "commit": {"oid": "b10a3fb737b4eeb702f15041874ab355d1b53da6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTg1OTI3", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509185927", "createdAt": "2020-10-15T09:25:07Z", "commit": {"oid": "b10a3fb737b4eeb702f15041874ab355d1b53da6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTg5MDEy", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509189012", "createdAt": "2020-10-15T09:28:54Z", "commit": {"oid": "b10a3fb737b4eeb702f15041874ab355d1b53da6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTk0MjAy", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509194202", "createdAt": "2020-10-15T09:35:09Z", "commit": {"oid": "b10a3fb737b4eeb702f15041874ab355d1b53da6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTozNTowOVrOHh_JoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTozNTowOVrOHh_JoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM5OTcxMw==", "bodyText": "In my case, the path contains the other slashes \\. I think this regex should match both cases", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r505399713", "createdAt": "2020-10-15T09:35:09Z", "author": {"login": "temanbrcom"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/FolderTextRegistry.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.inject.Inject;\n+import com.google.inject.Singleton;\n+import com.google.inject.name.Named;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/** Registry for Cobol source code files. */\n+@Slf4j\n+@Singleton\n+public class FolderTextRegistry implements CobolTextRegistry {\n+\n+    private static final String POSITIVE_ENTRY = \"positive\";\n+    private static final String NEGATIVE_ENTRY = \"negative\";\n+    private static final String COPYBOOK_ENTRY = \"copybooks\";\n+\n+    private final ListMultimap<String, CobolText> texts = ArrayListMultimap.create();\n+\n+    @Inject\n+    public FolderTextRegistry(@Named(\"filesToTestPath\") String pathToTestResources) {\n+        if (StringUtils.isNotEmpty(pathToTestResources)) {\n+            try {\n+                collectFilesToTest(pathToTestResources);\n+            } catch (IOException e) {\n+                LOG.error(e.getMessage());\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public List<CobolText> getPositives() {\n+        return Collections.unmodifiableList(texts.get(POSITIVE_ENTRY));\n+    }\n+\n+    @Override\n+    public List<CobolText> getNegatives() {\n+        return Collections.unmodifiableList(texts.get(NEGATIVE_ENTRY));\n+    }\n+\n+    @Override\n+    public List<CobolText> getCopybooks() {\n+        return Collections.unmodifiableList(texts.get(COPYBOOK_ENTRY));\n+    }\n+\n+    private void collectFilesToTest(String folderPath) throws IOException {\n+        Files.walk(Paths.get(folderPath))\n+                .filter(Files::isRegularFile)\n+                .forEach(this::processFile);\n+    }\n+\n+    private void processFile(Path path) {\n+        String[] parts = path.toString().split(\"/\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b10a3fb737b4eeb702f15041874ab355d1b53da6"}, "originalPosition": 62}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b10a3fb737b4eeb702f15041874ab355d1b53da6", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/b10a3fb737b4eeb702f15041874ab355d1b53da6", "committedDate": "2020-10-15T09:11:59Z", "message": "Folder-based Positive Test Registry\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}, "afterCommit": {"oid": "1273d1a5ed14ec123faa5b0b514901d419f9e7b7", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/1273d1a5ed14ec123faa5b0b514901d419f9e7b7", "committedDate": "2020-10-15T09:36:11Z", "message": "Folder-based Positive Test Registry\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjAwOTA4", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509200908", "createdAt": "2020-10-15T09:43:21Z", "commit": {"oid": "1273d1a5ed14ec123faa5b0b514901d419f9e7b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0MzoyMlrOHh_hfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0MzoyMlrOHh_hfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwNTgyMA==", "bodyText": "You should also check if the given folder name is allowed (i.e. positive, negative, or copybooks), or it will consume also git files.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r505405820", "createdAt": "2020-10-15T09:43:22Z", "author": {"login": "temanbrcom"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/FolderTextRegistry.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/** Registry for Cobol source code files. */\n+@Slf4j\n+public class FolderTextRegistry implements CobolTextRegistry {\n+  private static final String POSITIVE_ENTRY = \"positive\";\n+  private static final String NEGATIVE_ENTRY = \"negative\";\n+  private static final String COPYBOOK_ENTRY = \"copybooks\";\n+\n+  private final ListMultimap<String, CobolText> texts = ArrayListMultimap.create();\n+\n+  public FolderTextRegistry(String pathToTestResources) {\n+    if (StringUtils.isNotEmpty(pathToTestResources)) {\n+        try {\n+            collectFilesToTest(pathToTestResources);\n+        } catch (IOException e) {\n+            LOG.error(e.getMessage());\n+        }\n+    }\n+  }\n+\n+  @Override\n+  public List<CobolText> getPositives() {\n+    return Collections.unmodifiableList(texts.get(POSITIVE_ENTRY));\n+  }\n+\n+  @Override\n+  public List<CobolText> getNegatives() {\n+        return Collections.unmodifiableList(texts.get(NEGATIVE_ENTRY));\n+    }\n+\n+  @Override\n+  public List<CobolText> getCopybooks() {\n+    return Collections.unmodifiableList(texts.get(COPYBOOK_ENTRY));\n+  }\n+\n+  private void collectFilesToTest(String folderPath) throws IOException {\n+    Files.walk(Paths.get(folderPath))\n+      .filter(Files::isRegularFile)\n+      .forEach(this::processFile);\n+  }\n+\n+  private void processFile(Path path) {\n+    String[] parts = path.toString().split(\"/\");\n+    if (parts.length < 2) {\n+      return;\n+    }\n+\n+    String name = parts[parts.length - 1];\n+    String folder = parts[parts.length - 2];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1273d1a5ed14ec123faa5b0b514901d419f9e7b7"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjA0NzU1", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509204755", "createdAt": "2020-10-15T09:48:08Z", "commit": {"oid": "1273d1a5ed14ec123faa5b0b514901d419f9e7b7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0ODowOFrOHh_wFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0OToxMlrOHh_zTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwOTU1OQ==", "bodyText": "Why do we need this restriction?\nIt matches folder/file.ext, and also matches file.ext. But in the last case we will have an error in line:\nString folder = parts[parts.length - 2];", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r505409559", "createdAt": "2020-10-15T09:48:08Z", "author": {"login": "grianbrcom"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/FolderTextRegistry.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/** Registry for Cobol source code files. */\n+@Slf4j\n+public class FolderTextRegistry implements CobolTextRegistry {\n+  private static final String POSITIVE_ENTRY = \"positive\";\n+  private static final String NEGATIVE_ENTRY = \"negative\";\n+  private static final String COPYBOOK_ENTRY = \"copybooks\";\n+\n+  private final ListMultimap<String, CobolText> texts = ArrayListMultimap.create();\n+\n+  public FolderTextRegistry(String pathToTestResources) {\n+    if (StringUtils.isNotEmpty(pathToTestResources)) {\n+        try {\n+            collectFilesToTest(pathToTestResources);\n+        } catch (IOException e) {\n+            LOG.error(e.getMessage());\n+        }\n+    }\n+  }\n+\n+  @Override\n+  public List<CobolText> getPositives() {\n+    return Collections.unmodifiableList(texts.get(POSITIVE_ENTRY));\n+  }\n+\n+  @Override\n+  public List<CobolText> getNegatives() {\n+        return Collections.unmodifiableList(texts.get(NEGATIVE_ENTRY));\n+    }\n+\n+  @Override\n+  public List<CobolText> getCopybooks() {\n+    return Collections.unmodifiableList(texts.get(COPYBOOK_ENTRY));\n+  }\n+\n+  private void collectFilesToTest(String folderPath) throws IOException {\n+    Files.walk(Paths.get(folderPath))\n+      .filter(Files::isRegularFile)\n+      .forEach(this::processFile);\n+  }\n+\n+  private void processFile(Path path) {\n+    String[] parts = path.toString().split(\"/\");\n+    if (parts.length < 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1273d1a5ed14ec123faa5b0b514901d419f9e7b7"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMDM4Mg==", "bodyText": "Could it be the following?\n    String name = path.getFileName().toString();\n    String folder = path.getParent().toString();", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#discussion_r505410382", "createdAt": "2020-10-15T09:49:12Z", "author": {"login": "grianbrcom"}, "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/FolderTextRegistry.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package com.broadcom.lsp.cobol.positive;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/** Registry for Cobol source code files. */\n+@Slf4j\n+public class FolderTextRegistry implements CobolTextRegistry {\n+  private static final String POSITIVE_ENTRY = \"positive\";\n+  private static final String NEGATIVE_ENTRY = \"negative\";\n+  private static final String COPYBOOK_ENTRY = \"copybooks\";\n+\n+  private final ListMultimap<String, CobolText> texts = ArrayListMultimap.create();\n+\n+  public FolderTextRegistry(String pathToTestResources) {\n+    if (StringUtils.isNotEmpty(pathToTestResources)) {\n+        try {\n+            collectFilesToTest(pathToTestResources);\n+        } catch (IOException e) {\n+            LOG.error(e.getMessage());\n+        }\n+    }\n+  }\n+\n+  @Override\n+  public List<CobolText> getPositives() {\n+    return Collections.unmodifiableList(texts.get(POSITIVE_ENTRY));\n+  }\n+\n+  @Override\n+  public List<CobolText> getNegatives() {\n+        return Collections.unmodifiableList(texts.get(NEGATIVE_ENTRY));\n+    }\n+\n+  @Override\n+  public List<CobolText> getCopybooks() {\n+    return Collections.unmodifiableList(texts.get(COPYBOOK_ENTRY));\n+  }\n+\n+  private void collectFilesToTest(String folderPath) throws IOException {\n+    Files.walk(Paths.get(folderPath))\n+      .filter(Files::isRegularFile)\n+      .forEach(this::processFile);\n+  }\n+\n+  private void processFile(Path path) {\n+    String[] parts = path.toString().split(\"/\");\n+    if (parts.length < 2) {\n+      return;\n+    }\n+\n+    String name = parts[parts.length - 1];\n+    String folder = parts[parts.length - 2];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1273d1a5ed14ec123faa5b0b514901d419f9e7b7"}, "originalPosition": 62}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1273d1a5ed14ec123faa5b0b514901d419f9e7b7", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/1273d1a5ed14ec123faa5b0b514901d419f9e7b7", "committedDate": "2020-10-15T09:36:11Z", "message": "Folder-based Positive Test Registry\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}, "afterCommit": {"oid": "e31fb951d922fa81845a816fa77bb639d541dbae", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/e31fb951d922fa81845a816fa77bb639d541dbae", "committedDate": "2020-10-15T09:53:35Z", "message": "Folder-based Positive Test Registry\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e31fb951d922fa81845a816fa77bb639d541dbae", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/e31fb951d922fa81845a816fa77bb639d541dbae", "committedDate": "2020-10-15T09:53:35Z", "message": "Folder-based Positive Test Registry\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}, "afterCommit": {"oid": "c514c4c241e6e9a3b9634bd18f4b3bbdd71accbb", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/c514c4c241e6e9a3b9634bd18f4b3bbdd71accbb", "committedDate": "2020-10-15T10:01:27Z", "message": "Folder-based Positive Test Registry\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c514c4c241e6e9a3b9634bd18f4b3bbdd71accbb", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/c514c4c241e6e9a3b9634bd18f4b3bbdd71accbb", "committedDate": "2020-10-15T10:01:27Z", "message": "Folder-based Positive Test Registry\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}, "afterCommit": {"oid": "4b44db3cc10dee2baf3f961aa002f314f0cf5e84", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/4b44db3cc10dee2baf3f961aa002f314f0cf5e84", "committedDate": "2020-10-15T10:10:50Z", "message": "Folder-based Positive Test Registry\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjI0Njg4", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509224688", "createdAt": "2020-10-15T10:13:05Z", "commit": {"oid": "4b44db3cc10dee2baf3f961aa002f314f0cf5e84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjI5NDk1", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/557#pullrequestreview-509229495", "createdAt": "2020-10-15T10:19:19Z", "commit": {"oid": "4b44db3cc10dee2baf3f961aa002f314f0cf5e84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d3f591033aa2d2ac5b33d9d01deff86a6c86a1b", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/3d3f591033aa2d2ac5b33d9d01deff86a6c86a1b", "committedDate": "2020-10-15T10:23:29Z", "message": "refactor: Folder-based Positive Test Registry #556\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b44db3cc10dee2baf3f961aa002f314f0cf5e84", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/4b44db3cc10dee2baf3f961aa002f314f0cf5e84", "committedDate": "2020-10-15T10:10:50Z", "message": "Folder-based Positive Test Registry\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}, "afterCommit": {"oid": "3d3f591033aa2d2ac5b33d9d01deff86a6c86a1b", "author": {"user": {"login": "Nurkambay", "name": "Leonid Baranov"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/3d3f591033aa2d2ac5b33d9d01deff86a6c86a1b", "committedDate": "2020-10-15T10:23:29Z", "message": "refactor: Folder-based Positive Test Registry #556\n\nSigned-off-by: Leonid Baranov <leonid.baranov@broadcom.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1057, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}