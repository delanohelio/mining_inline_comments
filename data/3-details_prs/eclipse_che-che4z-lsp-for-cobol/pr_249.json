{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2ODAwOTYz", "number": 249, "title": "Update .dep file", "bodyText": "", "createdAt": "2020-03-11T16:40:26Z", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249", "merged": true, "mergeCommit": {"oid": "d9526b64a07b411e2a18a5e202068f3f6767b8f7"}, "closed": true, "closedAt": "2020-03-30T15:48:12Z", "author": {"login": "sergiuilie"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMp3TMgH2gAyMzg2ODAwOTYzOmY2NDY2ODMwMTQ3ZDg2Y2UzNjQ4Y2YyNDg5OTAyOTUwZTQ3MGI3ZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSwI7jgFqTM4Mzk2NTkwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6466830147d86ce3648cf2489902950e470b7e1", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/f6466830147d86ce3648cf2489902950e470b7e1", "committedDate": "2020-03-11T16:39:41Z", "message": "Delete dependency file at didOpen moment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "007c58e31a8621e900b44a5d11bb43cc3fc226dc", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/007c58e31a8621e900b44a5d11bb43cc3fc226dc", "committedDate": "2020-03-11T16:46:27Z", "message": "update CHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41", "author": {"user": {"login": "zacanbrcom", "name": "Andrea Zaccaro"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/6767b2105287fc95c12c465aa3b67e175b527e41", "committedDate": "2020-03-12T07:32:19Z", "message": "Fix listDataset wrong call"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzQ4ODIx", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#pullrequestreview-373348821", "createdAt": "2020-03-12T08:16:27Z", "commit": {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODoxNjoyN1rOF1Uu_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODoyMjo0MFrOF1U42w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1ODU1Nw==", "bodyText": "MyTextDocumentService is passed as a first parameter here", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391458557", "createdAt": "2020-03-12T08:16:27Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyLanguageServerImpl.java", "diffHunk": "@@ -75,12 +75,14 @@\n       TextDocumentService textService,\n       WorkspaceService workspaceService,\n       Provider<LanguageClient> clientProvider,\n-      SettingsProvider settingsProvider) {\n+      SettingsProvider settingsProvider,\n+      MyTextDocumentService customTextService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1OTk1Ng==", "bodyText": "It is definitely not the responsibility of this class. I think that TextDocumentService should just fire an event to make CopybookService to remove the dep file", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391459956", "createdAt": "2020-03-12T08:19:58Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -213,6 +223,28 @@ private void registerEngineAndAnalyze(String uri, String languageType, String te\n     }\n   }\n \n+  /**\n+   * This method\n+   * @param uri\n+   */\n+  private void deleteDependencyFile(String uri) {\n+    Path folderPath = null;\n+    if (checkIfInitWasCalled()) {\n+      folderPath =\n+          Paths.get(\n+              getDependencyFileFolderPath()\n+                  + FileSystems.getDefault().getSeparator()\n+                  + getFileNameFromURI(uri)\n+                  + DEP_EXTENSION);\n+    }\n+    if (isFileExists(folderPath))\n+      try {\n+        Files.delete(folderPath);\n+      } catch (IOException e) {\n+        log.error(e.getMessage());\n+      }\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MTA4Mw==", "bodyText": "I've experienced that calling the JsonObject#toString this way will return a string with doubled quotes - \"\"string\"\"", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391461083", "createdAt": "2020-03-12T08:22:40Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/CopybookServiceImpl.java", "diffHunk": "@@ -236,7 +236,7 @@ public void observerCallback(RequiredCopybookEvent event) {\n     path =\n         findCopybook(\n             requiredCopybookName,\n-            (String) configurationSettingsStorable.getProfiles(),\n+            configurationSettingsStorable.getProfiles().toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzQ3MjY0", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#pullrequestreview-373347264", "createdAt": "2020-03-12T08:13:41Z", "commit": {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODoxMzo0MVrOF1UqEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODoyMToxOFrOF1U2hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1NzI5Ng==", "bodyText": "Why do we need this reference?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391457296", "createdAt": "2020-03-12T08:13:41Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyLanguageServerImpl.java", "diffHunk": "@@ -75,12 +75,14 @@\n       TextDocumentService textService,\n       WorkspaceService workspaceService,\n       Provider<LanguageClient> clientProvider,\n-      SettingsProvider settingsProvider) {\n+      SettingsProvider settingsProvider,\n+      MyTextDocumentService customTextService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1Nzk5NA==", "bodyText": "Probably you forgot to complete this statement", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391457994", "createdAt": "2020-03-12T08:15:10Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -213,6 +223,28 @@ private void registerEngineAndAnalyze(String uri, String languageType, String te\n     }\n   }\n \n+  /**\n+   * This method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1OTE0MQ==", "bodyText": "Can we move this method into the FileSystemUtils ?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391459141", "createdAt": "2020-03-12T08:17:48Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -213,6 +223,28 @@ private void registerEngineAndAnalyze(String uri, String languageType, String te\n     }\n   }\n \n+  /**\n+   * This method\n+   * @param uri\n+   */\n+  private void deleteDependencyFile(String uri) {\n+    Path folderPath = null;\n+    if (checkIfInitWasCalled()) {\n+      folderPath =\n+          Paths.get(\n+              getDependencyFileFolderPath()\n+                  + FileSystems.getDefault().getSeparator()\n+                  + getFileNameFromURI(uri)\n+                  + DEP_EXTENSION);\n+    }\n+    if (isFileExists(folderPath))\n+      try {\n+        Files.delete(folderPath);\n+      } catch (IOException e) {\n+        log.error(e.getMessage());\n+      }\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MDQ4Ng==", "bodyText": "I think we can extend the CopybookDependencyService APIs and move this implementation there, if I didn't miss anything \ud83d\udc7c", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391460486", "createdAt": "2020-03-12T08:21:18Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -262,4 +294,16 @@ private String createDescriptiveErrorMessage(String action, String uri) {\n   private BiConsumer<Object, Throwable> reportExceptionIfThrown(String message) {\n     return (res, ex) -> ofNullable(ex).ifPresent(it -> log.error(message, it));\n   }\n+\n+  private Path getDependencyFileFolderPath() {\n+    return Paths.get(\n+        getWorkspaceFoldersAsPathList(getWorkspaceFolders()).get(0)\n+            + filesystemSeparator()\n+            + COBDEPS\n+            + filesystemSeparator());\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41"}, "originalPosition": 97}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f625e7ffd523f588d55ee1e155fedfe69f6eb25", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/5f625e7ffd523f588d55ee1e155fedfe69f6eb25", "committedDate": "2020-03-12T09:50:55Z", "message": "move deletion to didClose"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8e970438e402c58ba1d11916cfad587178272bd", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/e8e970438e402c58ba1d11916cfad587178272bd", "committedDate": "2020-03-12T09:51:33Z", "message": "Merge remote-tracking branch 'origin/delete-dep' into delete-dep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f43ab0af06b5c9e8f65d1802d5fe2a1d1b8423b", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/8f43ab0af06b5c9e8f65d1802d5fe2a1d1b8423b", "committedDate": "2020-03-25T13:25:19Z", "message": "update .dep file by removing the copybooks present in the .copybooks directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66768cc0a4666647ca12382e647782bfa0cd0a8b", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/66768cc0a4666647ca12382e647782bfa0cd0a8b", "committedDate": "2020-03-25T13:35:27Z", "message": "clean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/e70d5e09e5e3db2d03dcd1eb58287bc639246d8a", "committedDate": "2020-03-25T15:50:39Z", "message": "clean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODU0MTEy", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#pullrequestreview-381854112", "createdAt": "2020-03-26T09:58:55Z", "commit": {"oid": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo1ODo1NVrOF7_Q4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo1ODo1NVrOF7_Q4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjgxOQ==", "bodyText": "can we remove this?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398446819", "createdAt": "2020-03-26T09:58:55Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -125,18 +144,45 @@ public void generateDependencyFile(String cobolFileName) {\n     }\n   }\n \n-  private Path retrieveDependencyFile(Path dependencyFolderPath, String cobolFileName) {\n-    return Paths.get(dependencyFolderPath + filesystemSeparator() + cobolFileName + DEP_EXTENSION);\n-  }\n+  @Override\n+  public void observerCallback(CopybookDepEvent event) {\n+    if (!event.getTextDocumentSync().equals(\"DID_OPEN\")) {\n \n-  private String getCobolFileNameFromUri(String documentUri) {\n-    String result = null;\n-    try {\n-      result = FilenameUtils.getBaseName(Paths.get(new URI(documentUri)).getFileName().toString());\n-    } catch (URISyntaxException e) {\n-      log.error(e.getMessage());\n+      Path path =\n+          findCopybook(\n+              event.getCopybookName(),\n+              configurationSettingsStorableProvider.get().getProfiles().toString(),\n+              configurationSettingsStorableProvider.get().getPaths());\n+\n+      Path folderPath =\n+          Paths.get(\n+              getWorkspaceFolderPaths().get(0)\n+                  + filesystemSeparator()\n+                  + COBDEPS\n+                  + filesystemSeparator());\n+\n+      // change with document name, stupid blin", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODU0NDUy", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#pullrequestreview-381854452", "createdAt": "2020-03-26T09:59:23Z", "commit": {"oid": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo1OToyM1rOF7_SAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo1OToyM1rOF7_SAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NzEwNw==", "bodyText": "can we remove this?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398447107", "createdAt": "2020-03-26T09:59:23Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -160,4 +206,60 @@ private Path createDependencyFileFolder() {\n       return folderPath;\n     }\n   }\n+\n+  /** come on */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTQwODYx", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#pullrequestreview-381940861", "createdAt": "2020-03-26T12:02:01Z", "commit": {"oid": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjowMjowMVrOF8DoQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjowMjowMVrOF8DoQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUxODMzNg==", "bodyText": "why this file is changed?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398518336", "createdAt": "2020-03-26T12:02:01Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/src/CopybooksDownloader.ts", "diffHunk": "@@ -66,7 +66,7 @@ export class CopybooksDownloader implements vscode.Disposable {\n             missingCopybooks.forEach(copybook => this.queue.push(copybook, profile));\n         } else if (missingCopybooks.length > 0) {\n             this.resolver.fixMissingDownloads(message, missingCopybooks, profile, {\n-                hasPaths: (await this.listPathDatasets()).length > 0,\n+                hasPaths: (await this.pathsService.listPathDatasets()).length > 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTU4MzI5", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#pullrequestreview-381958329", "createdAt": "2020-03-26T12:27:23Z", "commit": {"oid": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjoyNzoyNFrOF8EeEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjoyNzoyNFrOF8EeEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMjExMw==", "bodyText": "copybookDependencyService is unused within the class", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398532113", "createdAt": "2020-03-26T12:27:24Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyLanguageServerImpl.java", "diffHunk": "@@ -66,21 +67,23 @@\n   private WorkspaceService workspaceService;\n   private CopybookService copybookService;\n   private Provider<LanguageClient> clientProvider;\n-\n   private SettingsProvider settingsProvider;\n+  private CopybookDependencyService copybookDependencyService;\n \n   @Inject\n   MyLanguageServerImpl(\n       CopybookService copybookService,\n       TextDocumentService textService,\n       WorkspaceService workspaceService,\n       Provider<LanguageClient> clientProvider,\n-      SettingsProvider settingsProvider) {\n+      SettingsProvider settingsProvider,\n+      CopybookDependencyService copybookDependencyService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec3698d9c07e03521dc539821aa94a89b40082c5", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/ec3698d9c07e03521dc539821aa94a89b40082c5", "committedDate": "2020-03-26T13:26:11Z", "message": "add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6b51f8a35b7d1aea4405990ce1b6dcc9bb6db7e", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/a6b51f8a35b7d1aea4405990ce1b6dcc9bb6db7e", "committedDate": "2020-03-26T13:44:59Z", "message": "update CHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad4a89532a0fd1144491c2c74aba1486fea10315", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/ad4a89532a0fd1144491c2c74aba1486fea10315", "committedDate": "2020-03-26T16:44:07Z", "message": "apply required changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "committedDate": "2020-03-30T12:00:02Z", "message": "add sync and check if copybooks were added"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzODA5OTM3", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#pullrequestreview-383809937", "createdAt": "2020-03-30T12:38:07Z", "commit": {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjozOTowN1rOF9ntPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDoxMDo1OFrOF9ro9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1ODAxNQ==", "bodyText": "The databus observation is an implementation detail, so it would be better to implement the EventObserver in the exact class", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400158015", "createdAt": "2020-03-30T12:39:07Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyService.java", "diffHunk": "@@ -16,14 +16,17 @@\n \n package com.ca.lsp.cobol.service.delegates.dependency;\n \n+import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n+import com.broadcom.lsp.domain.cobol.event.model.CopybookDepEvent;\n+\n import java.nio.file.Path;\n import java.util.List;\n \n /**\n  * This interface defines the API to generate and update dependency file for copybook download\n  * management\n  */\n-public interface CopybookDependencyService {\n+public interface CopybookDependencyService extends EventObserver<CopybookDepEvent> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2NDAwNw==", "bodyText": "A negative check doesn't cover all the required cases here. I think it is better to compare the event's sync type with TextDocumentSyncType.DID_CHANGE.name()", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400164007", "createdAt": "2020-03-30T12:49:10Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -125,18 +145,66 @@ public void generateDependencyFile(String cobolFileName) {\n     }\n   }\n \n-  private Path retrieveDependencyFile(Path dependencyFolderPath, String cobolFileName) {\n-    return Paths.get(dependencyFolderPath + filesystemSeparator() + cobolFileName + DEP_EXTENSION);\n+  /**\n+   * This method is triggered when on databus the postData method is called and contains\n+   * CopybookDepEvent; This method implements the update logic for .dep file, by update we\n+   * understand that if the copybook is present in the .copybook folder than its name should be\n+   * remove from .dep file\n+   *\n+   * @param event of type CopybookDepEvent\n+   */\n+  @Synchronized\n+  @Override\n+  public void observerCallback(CopybookDepEvent event) {\n+    // we are not checking .dep on DID_OPEN because on DID_OPEN the file is updated with the\n+    // required copybooks\n+    if (!event.getTextDocumentSync().equals(\"DID_OPEN\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxMDg5Nw==", "bodyText": "Shouldn't it be updatedLines.equals(result)?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400210897", "createdAt": "2020-03-30T13:55:34Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -125,18 +145,66 @@ public void generateDependencyFile(String cobolFileName) {\n     }\n   }\n \n-  private Path retrieveDependencyFile(Path dependencyFolderPath, String cobolFileName) {\n-    return Paths.get(dependencyFolderPath + filesystemSeparator() + cobolFileName + DEP_EXTENSION);\n+  /**\n+   * This method is triggered when on databus the postData method is called and contains\n+   * CopybookDepEvent; This method implements the update logic for .dep file, by update we\n+   * understand that if the copybook is present in the .copybook folder than its name should be\n+   * remove from .dep file\n+   *\n+   * @param event of type CopybookDepEvent\n+   */\n+  @Synchronized\n+  @Override\n+  public void observerCallback(CopybookDepEvent event) {\n+    // we are not checking .dep on DID_OPEN because on DID_OPEN the file is updated with the\n+    // required copybooks\n+    if (!event.getTextDocumentSync().equals(\"DID_OPEN\")) {\n+\n+      Path path =\n+          findCopybook(\n+              event.getCopybookName(),\n+              configurationSettingsStorableProvider.get().getProfiles().toString(),\n+              configurationSettingsStorableProvider.get().getPaths());\n+\n+      Path folderPath =\n+          Paths.get(\n+              getWorkspaceFolderPaths().get(0)\n+                  + filesystemSeparator()\n+                  + COBDEPS\n+                  + filesystemSeparator());\n+\n+      Path dependencyFilePath =\n+          retrieveDependencyFile(folderPath, getFileNameFromURI(event.getDocumentUri()));\n+\n+      if (path != null && isFileExists(dependencyFilePath)) {\n+        removeCpyFromDep(dependencyFilePath, event.getCopybookName());\n+      }\n+    }\n   }\n \n-  private String getCobolFileNameFromUri(String documentUri) {\n-    String result = null;\n+  /**\n+   * This method removes a given string from a given file\n+   *\n+   * @param dependencyFilePath - the path to .dep file\n+   * @param copybookName\n+   */\n+  private void removeCpyFromDep(Path dependencyFilePath, String copybookName) {\n+    List<String> result = null;\n     try {\n-      result = FilenameUtils.getBaseName(Paths.get(new URI(documentUri)).getFileName().toString());\n-    } catch (URISyntaxException e) {\n+      result = Files.readAllLines(dependencyFilePath);\n+      List<String> updatedLines =\n+          result.stream().filter(s -> !s.equals(copybookName)).collect(Collectors.toList());\n+      // don't write if the lines were not modify\n+      if (updatedLines != result) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxMjU0Mg==", "bodyText": "You may inline this variable definition", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400212542", "createdAt": "2020-03-30T13:57:39Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -125,18 +145,66 @@ public void generateDependencyFile(String cobolFileName) {\n     }\n   }\n \n-  private Path retrieveDependencyFile(Path dependencyFolderPath, String cobolFileName) {\n-    return Paths.get(dependencyFolderPath + filesystemSeparator() + cobolFileName + DEP_EXTENSION);\n+  /**\n+   * This method is triggered when on databus the postData method is called and contains\n+   * CopybookDepEvent; This method implements the update logic for .dep file, by update we\n+   * understand that if the copybook is present in the .copybook folder than its name should be\n+   * remove from .dep file\n+   *\n+   * @param event of type CopybookDepEvent\n+   */\n+  @Synchronized\n+  @Override\n+  public void observerCallback(CopybookDepEvent event) {\n+    // we are not checking .dep on DID_OPEN because on DID_OPEN the file is updated with the\n+    // required copybooks\n+    if (!event.getTextDocumentSync().equals(\"DID_OPEN\")) {\n+\n+      Path path =\n+          findCopybook(\n+              event.getCopybookName(),\n+              configurationSettingsStorableProvider.get().getProfiles().toString(),\n+              configurationSettingsStorableProvider.get().getPaths());\n+\n+      Path folderPath =\n+          Paths.get(\n+              getWorkspaceFolderPaths().get(0)\n+                  + filesystemSeparator()\n+                  + COBDEPS\n+                  + filesystemSeparator());\n+\n+      Path dependencyFilePath =\n+          retrieveDependencyFile(folderPath, getFileNameFromURI(event.getDocumentUri()));\n+\n+      if (path != null && isFileExists(dependencyFilePath)) {\n+        removeCpyFromDep(dependencyFilePath, event.getCopybookName());\n+      }\n+    }\n   }\n \n-  private String getCobolFileNameFromUri(String documentUri) {\n-    String result = null;\n+  /**\n+   * This method removes a given string from a given file\n+   *\n+   * @param dependencyFilePath - the path to .dep file\n+   * @param copybookName\n+   */\n+  private void removeCpyFromDep(Path dependencyFilePath, String copybookName) {\n+    List<String> result = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxOTEyMQ==", "bodyText": "We'll receive a code smell because of the following code is a duplication of CopybookServiceImpl", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400219121", "createdAt": "2020-03-30T14:06:34Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -160,4 +228,71 @@ private Path createDependencyFileFolder() {\n       return folderPath;\n     }\n   }\n+\n+  /**\n+   * This method is used to search for a copybook against a given configuration of datasets that\n+   * represent the sub-path of the copyooks folder\n+   *\n+   * @param filename copybook name\n+   * @return The path of the existent copybook or null if not found\n+   */\n+  private Path findCopybook(String filename, String profile, List<String> datasetList) {\n+    return retrievePathOrNull(filename, generatePathListFromSettings(profile, datasetList));\n+  }\n+\n+  private Path retrievePathOrNull(String filename, List<Path> datasetPathList) {\n+    return datasetPathList.stream()\n+        .map(it -> applySearch(filename, it))\n+        .filter(Objects::nonNull)\n+        .findAny()\n+        .orElse(null);\n+  }\n+\n+  /**\n+   * @param fileName copybook name\n+   * @param targetFolderPath physical path of workspace where to search for the copybook\n+   * @return Path of the found copybook in the target folder.\n+   */\n+  private Path applySearch(String fileName, Path targetFolderPath) {\n+    try (Stream<Path> pathStream =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyMjQ1NA==", "bodyText": "It seems like we may call a CopybookDependencyServiceImpl#obaserverCallback() method directly, so we don't need a data bus broker and asynchronous awaiting.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400222454", "createdAt": "2020-03-30T14:10:58Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/DependencyServiceTest.java", "diffHunk": "@@ -44,13 +66,36 @@ public void initActivities() {\n     dependencyService.setWorkspaceFolderPaths(Collections.singletonList(workspaceFolder));\n   }\n \n+  /**\n+   * This test proves that the .dep file should update and remove the copybooks which were already\n+   * downloaded and present in the .copybook directory\n+   */\n+  @Test\n+  public void depFileUpdateTest() {\n+    // create the .dep file\n+    Path depFileReference = createDependencyFile(COPYBOOK_NAME);\n+    dependencyService.addCopybookInDepFile(CPY_OUTER_NAME_ONLY2, DOCUMENT_URI);\n+    int numberOfElements = getNumberOfElementsFromDepFile(depFileReference);\n+\n+    // trigger the event which will update the .dep file @link{CopybookDependencyServiceImpl.class}\n+    broker.postData(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzOTIxNjU4", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#pullrequestreview-383921658", "createdAt": "2020-03-30T14:38:11Z", "commit": {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDozODoxMlrOF9s8sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDozODoxMlrOF9s8sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0Mzg5MA==", "bodyText": "Paths.get cannot return null, so this check won't work. It is better to use Files::exists` here", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400243890", "createdAt": "2020-03-30T14:38:12Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -160,4 +228,71 @@ private Path createDependencyFileFolder() {\n       return folderPath;\n     }\n   }\n+\n+  /**\n+   * This method is used to search for a copybook against a given configuration of datasets that\n+   * represent the sub-path of the copyooks folder\n+   *\n+   * @param filename copybook name\n+   * @return The path of the existent copybook or null if not found\n+   */\n+  private Path findCopybook(String filename, String profile, List<String> datasetList) {\n+    return retrievePathOrNull(filename, generatePathListFromSettings(profile, datasetList));\n+  }\n+\n+  private Path retrievePathOrNull(String filename, List<Path> datasetPathList) {\n+    return datasetPathList.stream()\n+        .map(it -> applySearch(filename, it))\n+        .filter(Objects::nonNull)\n+        .findAny()\n+        .orElse(null);\n+  }\n+\n+  /**\n+   * @param fileName copybook name\n+   * @param targetFolderPath physical path of workspace where to search for the copybook\n+   * @return Path of the found copybook in the target folder.\n+   */\n+  private Path applySearch(String fileName, Path targetFolderPath) {\n+    try (Stream<Path> pathStream =\n+        Files.find(\n+            targetFolderPath,\n+            100,\n+            (path, basicFileAttributes) -> isValidFileFound(path.toFile(), fileName),\n+            FileVisitOption.FOLLOW_LINKS)) {\n+      return pathStream.findAny().orElse(null);\n+    } catch (IOException e) {\n+      log.error(e.getMessage());\n+      return null;\n+    }\n+  }\n+\n+  private List<Path> generatePathListFromSettings(String profile, List<String> datasetList) {\n+    // can happen here that copybooks or internal structure is null\n+    return datasetList.stream()\n+        .map(\n+            it ->\n+                Paths.get(\n+                    getCopybookFolder(workspaceFolderPaths.get(0))\n+                        + filesystemSeparator()\n+                        + profile\n+                        + filesystemSeparator()\n+                        + it))\n+        .filter(Objects::nonNull)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf"}, "originalPosition": 194}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "835a2414210ff0cc6fca953a31e340c384bc7d07", "author": {"user": {"login": "sergiuilie", "name": "Sergiu Ilie"}}, "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/835a2414210ff0cc6fca953a31e340c384bc7d07", "committedDate": "2020-03-30T15:17:22Z", "message": "address required changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzOTY1OTA0", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#pullrequestreview-383965904", "createdAt": "2020-03-30T15:21:55Z", "commit": {"oid": "835a2414210ff0cc6fca953a31e340c384bc7d07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1247, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}