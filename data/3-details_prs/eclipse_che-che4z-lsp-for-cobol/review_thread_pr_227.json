{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTA1NTQw", "number": 227, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODoyMDo0MFrODltlbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0MTozMFrODlt60A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODcwNzY3OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRU.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODoyMDo0MFrOFywYWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODoyMDo0MFrOFywYWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc2NTc4Nw==", "bodyText": "We can use the method reference directly CopybookStorable::isExpired", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/227#discussion_r388765787", "createdAt": "2020-03-06T08:20:40Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRU.java", "diffHunk": "@@ -84,6 +88,8 @@ public void setSort(boolean isSort) {\n   @Override\n   @SneakyThrows\n   public synchronized void persist(@NonNull CopybookStorable deepCopy) {\n+    cpyRepo.removeIf(elem -> elem.isExpired());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "082f114b526b97361b969145b73b2fdef7d6932e"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODc2MjQwOnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRUTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0MTozMFrOFyw5fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODo0MTozMFrOFyw5fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NDI3MQ==", "bodyText": "Here is better use to use a waiter", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/227#discussion_r388774271", "createdAt": "2020-03-06T08:41:30Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRUTest.java", "diffHunk": "@@ -62,6 +66,60 @@ public void testPersist() {\n     assertEquals(repository.size(), prevCacheSize + 1);\n   }\n \n+  /**\n+   * This test validates that the cache is throwing the expired elements away, the elements which\n+   * are older than 3h\n+   *\n+   * @throws NoSuchFieldException\n+   */\n+  @Test\n+  public void testCacheExpiration() throws NoSuchFieldException {\n+    long genDt = Instant.now().minus(4, ChronoUnit.HOURS).getEpochSecond();\n+\n+    CopybookStorable storableCpy = new CopybookStorable(\"REMOVE\", \"URI\", \"DUMMY CONTENT\");\n+    Field f = storableCpy.getClass().getDeclaredField(\"genDt\");\n+    f.setAccessible(true);\n+    FieldSetter.setField(storableCpy, f, genDt);\n+\n+    repository.persist(storableCpy);\n+    repository.persist(new CopybookStorable(\"NEW_STO\", \"URI\", \"DUMMY CONTENT\"));\n+    repository.persist(new CopybookStorable(\"NEW_STO232\", \"URI\", \"DUMMY CONTENT\"));\n+    repository.persist(new CopybookStorable(\"NEW_STO\", \"URI\", \"DUMMY CONTENT\"));\n+\n+    assertEquals(3, repository.size());\n+  }\n+\n+  /**\n+   * This test validates the cache sort mechanism, first is sorted by the hits and after by the\n+   * time, it is worth to mention that we need to put the thread asleep for 1ms in order to have a\n+   * time difference at the creation moment, if not it will not differentiate and the order will be\n+   * not the expected one\n+   *\n+   * @throws InterruptedException\n+   */\n+  @Test\n+  public void testCacheSort() throws InterruptedException {\n+    CopybookStorable topElem = new CopybookStorable(\"NEW_STO3\", \"URI\", \"DUMMY CONTENT\");\n+    Thread.sleep(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "082f114b526b97361b969145b73b2fdef7d6932e"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4144, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}