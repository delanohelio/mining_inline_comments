{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NjUwNjc2", "number": 684, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo1NDozNVrOE_qEFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNToxOTowMVrOE_q0mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTg0OTE4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/AbstractVariable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo1NDozNVrOH9eyaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowNDoxMVrOH-UUjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyOTYwOA==", "bodyText": "What if the variable has two definitions?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/684#discussion_r534229608", "createdAt": "2020-12-02T14:54:35Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/AbstractVariable.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.broadcom.lsp.cobol.core.model.variables;\n+\n+import com.broadcom.lsp.cobol.core.model.Locality;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NonNull;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/** This abstract class implements the functionality that is common for all the variables. */\n+@AllArgsConstructor\n+public abstract class AbstractVariable implements Variable {\n+  @Getter protected final String name;\n+  @Getter protected final String qualifier;\n+  @Getter protected final Locality definition;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45b12f4169ee3054260b9389d9ac05fb0921f23"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwNjcwMg==", "bodyText": "The uniquity check is applied on usage, so this case is valid", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/684#discussion_r535106702", "createdAt": "2020-12-03T11:04:11Z", "author": {"login": "temanbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/AbstractVariable.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.broadcom.lsp.cobol.core.model.variables;\n+\n+import com.broadcom.lsp.cobol.core.model.Locality;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NonNull;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/** This abstract class implements the functionality that is common for all the variables. */\n+@AllArgsConstructor\n+public abstract class AbstractVariable implements Variable {\n+  @Getter protected final String name;\n+  @Getter protected final String qualifier;\n+  @Getter protected final Locality definition;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyOTYwOA=="}, "originalCommit": {"oid": "c45b12f4169ee3054260b9389d9ac05fb0921f23"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTg3NzUyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/GroupItem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo1OToyNlrOH9fDew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo1OToyNlrOH9fDew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzMzk3OQ==", "bodyText": "levelNumber I guess", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/684#discussion_r534233979", "createdAt": "2020-12-02T14:59:26Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/GroupItem.java", "diffHunk": "@@ -16,46 +16,26 @@\n package com.broadcom.lsp.cobol.core.model.variables;\n \n import com.broadcom.lsp.cobol.core.model.Locality;\n+import com.broadcom.lsp.cobol.core.preprocessor.delegates.util.VariableUtils;\n+import lombok.EqualsAndHashCode;\n import lombok.Value;\n \n-import lombok.NonNull;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import static java.util.Collections.unmodifiableList;\n-\n /**\n  * This value class represents a group item COBOL variable. Group elements can have nested\n  * variables. They cannot have neither PIC nor VALUE clauses. Can be the top element of the\n  * structure with level 01, as well as nested ones with higher level numbers.\n  */\n @Value\n-public class GroupItem implements StructuredVariable {\n-  private String name;\n-  private Locality definition;\n-  private List<Variable> children = new ArrayList<>();\n-\n-  public GroupItem(@NonNull String name, @NonNull Locality definition) {\n-    this.name = name;\n-    this.definition = definition;\n-  }\n+@EqualsAndHashCode(callSuper = true)\n+public class GroupItem extends StructuredVariable {\n \n-  /**\n-   * Add a new nested variable to this structure\n-   *\n-   * @param child - a nested variable. Can be a group or element, or all the other allowed type\n-   *     item.\n-   */\n-  public void addChild(Variable child) {\n-    children.add(child);\n+  public GroupItem(int number, String name, String qualifier, Locality definition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45b12f4169ee3054260b9389d9ac05fb0921f23"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTg4OTg3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/GroupItem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTowMTo1M1rOH9fLJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTowMTo1M1rOH9fLJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzNTk0MQ==", "bodyText": "Do we need to check if it is renamable before rename it?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/684#discussion_r534235941", "createdAt": "2020-12-02T15:01:53Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/GroupItem.java", "diffHunk": "@@ -16,46 +16,26 @@\n package com.broadcom.lsp.cobol.core.model.variables;\n \n import com.broadcom.lsp.cobol.core.model.Locality;\n+import com.broadcom.lsp.cobol.core.preprocessor.delegates.util.VariableUtils;\n+import lombok.EqualsAndHashCode;\n import lombok.Value;\n \n-import lombok.NonNull;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import static java.util.Collections.unmodifiableList;\n-\n /**\n  * This value class represents a group item COBOL variable. Group elements can have nested\n  * variables. They cannot have neither PIC nor VALUE clauses. Can be the top element of the\n  * structure with level 01, as well as nested ones with higher level numbers.\n  */\n @Value\n-public class GroupItem implements StructuredVariable {\n-  private String name;\n-  private Locality definition;\n-  private List<Variable> children = new ArrayList<>();\n-\n-  public GroupItem(@NonNull String name, @NonNull Locality definition) {\n-    this.name = name;\n-    this.definition = definition;\n-  }\n+@EqualsAndHashCode(callSuper = true)\n+public class GroupItem extends StructuredVariable {\n \n-  /**\n-   * Add a new nested variable to this structure\n-   *\n-   * @param child - a nested variable. Can be a group or element, or all the other allowed type\n-   *     item.\n-   */\n-  public void addChild(Variable child) {\n-    children.add(child);\n+  public GroupItem(int number, String name, String qualifier, Locality definition) {\n+    super(name, qualifier, definition, number);\n   }\n \n-  /**\n-   * Return a list of already defined nested variables\n-   *\n-   * @return defined nested variables.\n-   */\n-  public List<Variable> getChildren() {\n-    return unmodifiableList(children);\n+  @Override\n+  public Variable rename(String renameItemName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45b12f4169ee3054260b9389d9ac05fb0921f23"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTkwMTA4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/IndependentDataItem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTowNDoxOVrOH9fSbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTowNDoxOVrOH9fSbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzNzgwNQ==", "bodyText": "If it is not renamable, then why rename didn't throw an error?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/684#discussion_r534237805", "createdAt": "2020-12-02T15:04:19Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/IndependentDataItem.java", "diffHunk": "@@ -25,10 +26,30 @@\n  * explicitly defined value; both as Strings. They cannot produce a structure in any way.\n  */\n @Value\n-@AllArgsConstructor\n-public class IndependentDataItem implements Variable {\n-  private String name;\n+@EqualsAndHashCode(callSuper = true)\n+public class IndependentDataItem extends AbstractVariable {\n   private String picClause;\n   private String value;\n-  private Locality definition;\n+\n+  public IndependentDataItem(\n+      String name, String qualifier, Locality definition, String picClause, String value) {\n+    super(name, qualifier, definition);\n+    this.picClause = picClause;\n+    this.value = value;\n+  }\n+\n+  @Override\n+  public Variable rename(String renameItemName) {\n+    return new IndependentDataItem(\n+        name,\n+        VariableUtils.renameQualifier(qualifier, renameItemName),\n+        definition,\n+        picClause,\n+        value);\n+  }\n+\n+  @Override\n+  public boolean isRenameable() {\n+    return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45b12f4169ee3054260b9389d9ac05fb0921f23"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTk3MzM2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/Renameable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNToxOTowMVrOH9f-4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNToxOTowMVrOH9f-4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI0OTE4Ng==", "bodyText": "This is odd.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/684#discussion_r534249186", "createdAt": "2020-12-02T15:19:01Z", "author": {"login": "grianbrcom"}, "path": "server/src/main/java/com/broadcom/lsp/cobol/core/model/variables/Renameable.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.broadcom.lsp.cobol.core.model.variables;\n+\n+/**\n+ * This interface contains methods to apply the RENAME function (e.g. add the given variable to the\n+ * structure of the caller). Not all the variable types allow this function, so each implementation\n+ * should apply own check. For the variable renaming means creating a new one with the qualifier\n+ * which top point to the caller.\n+ *\n+ * <p>NOTICE: This interface does not have anything to do with the renaming from LSP point of view.\n+ */\n+public interface Renameable {\n+\n+  /**\n+   * Check if this variable allows renaming depending on its type.\n+   *\n+   * @return true if a variable of that type allows renaming\n+   */\n+  boolean isRenameable();\n+\n+  /**\n+   * Create a new variable which qualifier points to a different structure. Effectively, copy the\n+   * variable to add it as a child to the variable with the given name. Used in RENAME clause.\n+   * Should be implemented even if the variable doesn't allow renaming.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45b12f4169ee3054260b9389d9ac05fb0921f23"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3879, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}