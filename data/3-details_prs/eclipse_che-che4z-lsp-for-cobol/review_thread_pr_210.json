{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MjMzMjg3", "number": 210, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOToyNjo0NFrODhcztg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODowMDozMlrODiPAmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDAxNTkwOnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/impl/CobolSemanticParserListenerImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOToyNjo0NFrOFsL7LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo1MTo1MVrOFs7lfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3NzAzNg==", "bodyText": "It seems like the problem with the test caused by this line. I think define() here should be also replaced with addUsage()", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/210#discussion_r381877036", "createdAt": "2020-02-20T09:26:44Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/impl/CobolSemanticParserListenerImpl.java", "diffHunk": "@@ -193,7 +193,7 @@ private void defineCopybook(String copybookName, Position position) {\n       return;\n     }\n     if (checkThisCopybookNotPresentInHierarchy(copybookName)) {\n-      semanticContext.getCopybooks().define(copybookName, position);\n+      semanticContext.getCopybooks().addUsage(copybookName, position);\n       semanticContext.getVariables().define(new Variable(\"-1\", copybookName), position);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc6df1dbd9e2c12d6478efd88203793351f6409"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3OTMyNQ==", "bodyText": "Also, try to replace definitions call in CobolVariableContext#buildVariableStructure() with one for usages", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/210#discussion_r381879325", "createdAt": "2020-02-20T09:30:33Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/impl/CobolSemanticParserListenerImpl.java", "diffHunk": "@@ -193,7 +193,7 @@ private void defineCopybook(String copybookName, Position position) {\n       return;\n     }\n     if (checkThisCopybookNotPresentInHierarchy(copybookName)) {\n-      semanticContext.getCopybooks().define(copybookName, position);\n+      semanticContext.getCopybooks().addUsage(copybookName, position);\n       semanticContext.getVariables().define(new Variable(\"-1\", copybookName), position);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3NzAzNg=="}, "originalCommit": {"oid": "dfc6df1dbd9e2c12d6478efd88203793351f6409"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1NzkxOQ==", "bodyText": "It was not that, the problem was in CobolSemanticParserImpl#processCopybooks", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/210#discussion_r382657919", "createdAt": "2020-02-21T15:51:51Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/impl/CobolSemanticParserListenerImpl.java", "diffHunk": "@@ -193,7 +193,7 @@ private void defineCopybook(String copybookName, Position position) {\n       return;\n     }\n     if (checkThisCopybookNotPresentInHierarchy(copybookName)) {\n-      semanticContext.getCopybooks().define(copybookName, position);\n+      semanticContext.getCopybooks().addUsage(copybookName, position);\n       semanticContext.getVariables().define(new Variable(\"-1\", copybookName), position);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3NzAzNg=="}, "originalCommit": {"oid": "dfc6df1dbd9e2c12d6478efd88203793351f6409"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjI0MDkxOnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/delegates/references/DocumentOccurrencesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODowMDozMlrOFtX0mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODowMDozMlrOFtX0mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyMDUzOQ==", "bodyText": "could you please provide a negative scenario as well in which you will try to get a reference and there is none", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/210#discussion_r383120539", "createdAt": "2020-02-24T08:00:32Z", "author": {"login": "sergiuilie"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/delegates/references/DocumentOccurrencesTest.java", "diffHunk": "@@ -159,6 +175,23 @@ public void testFindDeclarationForParagraph() throws ExecutionException, Interru\n     assertContainsRange(locations, range(15, 7, TEST_LENGTH));\n   }\n \n+  @Test\n+  public void testFindMultipleCopybookReferences() throws ExecutionException, InterruptedException {\n+    List<? extends Location> locations = invokeReferencesRequest(TEST_COPYBOOK1, true);\n+    assertEquals(2, locations.size());\n+\n+    assertContainsRange(locations, range(20, 12, COPY_LENGTH));\n+    assertContainsRange(locations, range(22, 12, COPY_LENGTH));\n+  }\n+\n+  @Test\n+  public void testFindSingleCopybookReference() throws ExecutionException, InterruptedException {\n+    List<? extends Location> locations = invokeReferencesRequest(TEST_COPYBOOK2, true);\n+    assertEquals(1, locations.size());\n+\n+    assertContainsRange(locations, range(21, 12, COPY_LENGTH));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dd61b5f383f8e711c1c23a91db31cd5c55dc8eb"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4135, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}