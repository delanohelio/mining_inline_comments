{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDEwMzYz", "number": 190, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODo1NTo1MVrODd86tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODo1Njo0OVrODd87-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzMzMzY3OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/semantics/CobolVariableContextTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODo1NTo1MVrOFm2I5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODo1NTo1MVrOFm2I5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3NzIyMg==", "bodyText": "Please add a brief description about this test", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/190#discussion_r376277222", "createdAt": "2020-02-07T08:55:51Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/semantics/CobolVariableContextTest.java", "diffHunk": "@@ -142,6 +142,21 @@ public void getVariableByNameBadTest() {\n     assertNull(get(\"NEW-VARIABLE-NOT-CREATED\"));\n   }\n \n+  @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "943cf0c22913f4a7d2803f8523c4f47506ec5185"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzMzNjkwOnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/usecases/TestMissingCopybookNotInVariableList.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODo1Njo0OVrOFm2Kvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTowNTo0MFrOFm2ZEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3NzY5NA==", "bodyText": "Pls few lines of description about the test", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/190#discussion_r376277694", "createdAt": "2020-02-07T08:56:49Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/usecases/TestMissingCopybookNotInVariableList.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.ca.lsp.cobol.usecases;\n+\n+import com.broadcom.lsp.cdi.LangServerCtx;\n+import com.ca.lsp.cobol.ConfigurableTest;\n+import com.ca.lsp.cobol.service.delegates.validations.AnalysisResult;\n+import com.ca.lsp.cobol.service.mocks.MockWorkspaceService;\n+import org.eclipse.lsp4j.Location;\n+import org.junit.Test;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.ca.lsp.cobol.service.delegates.validations.UseCaseUtils.analyze;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/** This test covers case when copybook that was not found appears as a variable. */\n+public class TestMissingCopybookNotInVariableList extends ConfigurableTest {\n+  private static final String TEXT =\n+      \"       IDENTIFICATION DIVISION.\\n\"\n+          + \"       PROGRAM-ID. TEST1.\\n\"\n+          + \"       DATA DIVISION.\\n\"\n+          + \"       WORKING-STORAGE SECTION.\\n\"\n+          + \"       01 PARENT. COPY CPYNAME.\\n\"\n+          + \"       PROCEDURE DIVISION.\\n\"\n+          + \"       MOVE 00 TO CHILD1 OF PARENT.\";\n+\n+  public TestMissingCopybookNotInVariableList() {\n+\n+    MockWorkspaceService workspaceService =\n+        LangServerCtx.getInjector().getInstance(MockWorkspaceService.class);\n+    workspaceService.setCopybooks(Collections::emptyList);\n+  }\n+\n+  @Test\n+  public void test() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "943cf0c22913f4a7d2803f8523c4f47506ec5185"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI4MTM2MA==", "bodyText": "There is a description in the file header", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/190#discussion_r376281360", "createdAt": "2020-02-07T09:05:40Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/usecases/TestMissingCopybookNotInVariableList.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.ca.lsp.cobol.usecases;\n+\n+import com.broadcom.lsp.cdi.LangServerCtx;\n+import com.ca.lsp.cobol.ConfigurableTest;\n+import com.ca.lsp.cobol.service.delegates.validations.AnalysisResult;\n+import com.ca.lsp.cobol.service.mocks.MockWorkspaceService;\n+import org.eclipse.lsp4j.Location;\n+import org.junit.Test;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.ca.lsp.cobol.service.delegates.validations.UseCaseUtils.analyze;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/** This test covers case when copybook that was not found appears as a variable. */\n+public class TestMissingCopybookNotInVariableList extends ConfigurableTest {\n+  private static final String TEXT =\n+      \"       IDENTIFICATION DIVISION.\\n\"\n+          + \"       PROGRAM-ID. TEST1.\\n\"\n+          + \"       DATA DIVISION.\\n\"\n+          + \"       WORKING-STORAGE SECTION.\\n\"\n+          + \"       01 PARENT. COPY CPYNAME.\\n\"\n+          + \"       PROCEDURE DIVISION.\\n\"\n+          + \"       MOVE 00 TO CHILD1 OF PARENT.\";\n+\n+  public TestMissingCopybookNotInVariableList() {\n+\n+    MockWorkspaceService workspaceService =\n+        LangServerCtx.getInjector().getInstance(MockWorkspaceService.class);\n+    workspaceService.setCopybooks(Collections::emptyList);\n+  }\n+\n+  @Test\n+  public void test() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3NzY5NA=="}, "originalCommit": {"oid": "943cf0c22913f4a7d2803f8523c4f47506ec5185"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4116, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}