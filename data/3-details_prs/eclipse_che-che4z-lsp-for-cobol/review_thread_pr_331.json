{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDExNjE1", "number": 331, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNTowNToyOFrOD_aXdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDo0MzoyNFrOD_nnyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODE4ODY5OnYy", "diffSide": "LEFT", "path": "clients/cobol-lsp-vscode-extension/package.json", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNTowNToyOFrOGaD9gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzoxNzozMFrOGaRhRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MTA1OA==", "bodyText": "@ishche should it be here, what do you think? As well as package-lock.json changes?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r429981058", "createdAt": "2020-05-25T15:05:28Z", "author": {"login": "temanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/package.json", "diffHunk": "@@ -114,7 +114,7 @@\n         \"test\": \"jest -w 1\"\n     },\n     \"dependencies\": {\n-        \"@zowe/imperative\": \"^4.4.5\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAwMTQ0NA==", "bodyText": "Too keep version fixed, otherwise needs another TPSR", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r430001444", "createdAt": "2020-05-25T15:57:54Z", "author": {"login": "asatklichov"}, "path": "clients/cobol-lsp-vscode-extension/package.json", "diffHunk": "@@ -114,7 +114,7 @@\n         \"test\": \"jest -w 1\"\n     },\n     \"dependencies\": {\n-        \"@zowe/imperative\": \"^4.4.5\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MTA1OA=="}, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAwMjA4NQ==", "bodyText": "Is not clear for me why it was removed from the package json..", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r430002085", "createdAt": "2020-05-25T15:59:51Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/package.json", "diffHunk": "@@ -114,7 +114,7 @@\n         \"test\": \"jest -w 1\"\n     },\n     \"dependencies\": {\n-        \"@zowe/imperative\": \"^4.4.5\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MTA1OA=="}, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAwMzI5OQ==", "bodyText": "@zacanbrcom  Not removed, just fixed version used,  \"@zowe/imperative\": \"4.4.5\" because of TPSR", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r430003299", "createdAt": "2020-05-25T16:03:18Z", "author": {"login": "asatklichov"}, "path": "clients/cobol-lsp-vscode-extension/package.json", "diffHunk": "@@ -114,7 +114,7 @@\n         \"test\": \"jest -w 1\"\n     },\n     \"dependencies\": {\n-        \"@zowe/imperative\": \"^4.4.5\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MTA1OA=="}, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwMzIwNw==", "bodyText": "Got it! TY", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r430203207", "createdAt": "2020-05-26T07:17:30Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/package.json", "diffHunk": "@@ -114,7 +114,7 @@\n         \"test\": \"jest -w 1\"\n     },\n     \"dependencies\": {\n-        \"@zowe/imperative\": \"^4.4.5\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MTA1OA=="}, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODIyMDU5OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/utils/FileSystemUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNToxNjo1OFrOGaEQug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNToxNjo1OFrOGaEQug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4NTk3OA==", "bodyText": "This logging pattern doesn't meet the requirements because it should have a descriptive error message and the caught throwable.\nIt may be like: log.error(\"Error creating parent directories for path\", e);", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r429985978", "createdAt": "2020-05-25T15:16:58Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/utils/FileSystemUtils.java", "diffHunk": "@@ -165,6 +192,21 @@ public Path getPath(@Nonnull String basePath, @Nonnull String... more) {\n         .collect(Collectors.toList());\n   }\n \n+  /**\n+   * Creates a directory by creating all nonexistent parent directories first.\n+   *\n+   * @param path\n+   * @return\n+   */\n+  public Path createFolders(Path path) {\n+    try {\n+      return Files.createDirectories(path);\n+    } catch (IOException e) {\n+      log.error(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODIyMzc5OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/utils/FileSystemUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNToxODowN1rOGaESog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNToxODowN1rOGaESog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4NjQ2Ng==", "bodyText": "Good idea to refactor it like that!", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r429986466", "createdAt": "2020-05-25T15:18:07Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/utils/FileSystemUtils.java", "diffHunk": "@@ -150,6 +157,26 @@ public Path getPath(@Nonnull String basePath, @Nonnull String... more) {\n     return Paths.get(basePath, more);\n   }\n \n+  /**\n+   * Returns full path for copybook folder which is inside .ch4z folder\n+   *\n+   * @param workspacePath\n+   * @return - full path\n+   */\n+  public Path getCopybookFolderPath(String workspacePath) {\n+    return getPath(workspacePath, C4Z_FOLDER, COPYBOOKS_FOLDER);\n+  }\n+\n+  /**\n+   * Returns full path for cobdeps folder which is inside .ch4z folder\n+   *\n+   * @param workspacePath\n+   * @return - full path\n+   */\n+  public Path getCobolDependencyFolderPath(String workspacePath) {\n+    return getPath(workspacePath, C4Z_FOLDER, COBDEPS_FOLDER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODIzMDcxOnYy", "diffSide": "LEFT", "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/AbstractCobolLinePreprocessorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNToyMDo1M1rOGaEW6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNToyMDo1M1rOGaEW6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4NzU2Mg==", "bodyText": "I would prefer to have these and following cosmetic changes (i.e. typos, documentation etc.) as a part of a separate PR with tag #23", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r429987562", "createdAt": "2020-05-25T15:20:53Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/AbstractCobolLinePreprocessorTest.java", "diffHunk": "@@ -15,14 +15,15 @@\n \n import com.ca.lsp.core.cobol.model.ResultWithErrors;\n import com.ca.lsp.core.cobol.preprocessor.sub.CobolLine;\n+import com.ca.lsp.core.cobol.preprocessor.sub.line.reader.CobolLineReader;\n import com.ca.lsp.core.cobol.preprocessor.sub.line.reader.impl.CobolLineReaderImpl;\n \n import java.util.List;\n \n public abstract class AbstractCobolLinePreprocessorTest {\n \n   protected ResultWithErrors<List<CobolLine>> processText(String text) {\n-    CobolLineReaderImpl reader = new CobolLineReaderImpl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTg0MTkzOnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/CopybooksDownloader.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxNjo0NFrOGaTfOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxNjo0NFrOGaTfOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNTQ1MA==", "bodyText": "findFiles uses a global pattern as argument. It's not OS specific AFAIK.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r430235450", "createdAt": "2020-05-26T08:16:44Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/CopybooksDownloader.ts", "diffHunk": "@@ -33,7 +34,7 @@ export class CopybooksDownloader implements vscode.Disposable {\n         private pathGenerator: CopybooksPathGenerator) { }\n \n     public async redownloadDependencies(message: string = \"Redownload dependencies requested.\") {\n-        (await vscode.workspace.findFiles(DEPENDENCIES_FOLDER + \"/**/*.dep\")).forEach(dep => {\n+        (await vscode.workspace.findFiles(path.join(C4Z_FOLDER, DEPENDENCIES_FOLDER) + \"/**/*.dep\")).forEach(dep => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTg1MjMwOnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/services/Settings.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxOTo0MlrOGaTltg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxOTo0MlrOGaTltg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNzExMA==", "bodyText": "vscode.workspace.workspaceFolders[0] can be undefine", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r430237110", "createdAt": "2020-05-26T08:19:42Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/services/Settings.ts", "diffHunk": "@@ -28,4 +30,33 @@ export function initializeSettings() {\n \n function isUndefinedInWorkspace(property: string, index: number, array: string[]): boolean {\n     return vscode.workspace.getConfiguration(SETTINGS_SECTION).inspect(property).workspaceValue == undefined;\n+}\n+\n+\n+/**\n+ * New file (e.g .gitignore) will be created or edited if exits, under project folder (e.g. workspace/.c4z) with given  pattern\n+ * \n+ * @param path \n+ * @param fileName \n+ * @param pattern \n+ */\n+export function createFileWithGivenPath(folderPath: string, fileName: string, pattern: string): void {\n+\n+    const ch4zPath = path.join(vscode.workspace.workspaceFolders[0].uri.fsPath, folderPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTg2MzAyOnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/src/extension.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoyMjo0N1rOGaTsiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOToxMTozNlrOGaVfmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzODg1Ng==", "bodyText": "Did you try the case if the user opens a new folder or change branch?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r430238856", "createdAt": "2020-05-26T08:22:47Z", "author": {"login": "ishche"}, "path": "clients/cobol-lsp-vscode-extension/src/extension.ts", "diffHunk": "@@ -92,11 +93,14 @@ export async function activate(context: vscode.ExtensionContext) {\n             new CopybooksCodeActionProvider(profileService)));\n }\n \n-function initWorkspaceTracker(downloader: CopybooksDownloader): vscode.Disposable {\n+function initWorkspaceWatcher(downloader: CopybooksDownloader): vscode.Disposable {\n     const watcher = vscode.workspace.createFileSystemWatcher(\"**/\"\n-        + DEPENDENCIES_FOLDER + \"/**/**.dep\", false, false, true);\n+        + path.join(C4Z_FOLDER, DEPENDENCIES_FOLDER) + \"/**/**.dep\", false, false, true);\n     watcher.onDidCreate(uri => downloader.downloadDependencies(uri,\n         \"Program contains dependencies to missing copybooks.\"));\n     watcher.onDidChange(uri => downloader.downloadDependencies(uri));\n+\n+    //create .gitignore file within .c4z folder\n+    createFileWithGivenPath(C4Z_FOLDER, GITIGNORE_FILE, \"/**\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI2ODMxMg==", "bodyText": "Yes, for changing ws ok, and branch change has no impact, app works fine with old hierarchy", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r430268312", "createdAt": "2020-05-26T09:11:36Z", "author": {"login": "asatklichov"}, "path": "clients/cobol-lsp-vscode-extension/src/extension.ts", "diffHunk": "@@ -92,11 +93,14 @@ export async function activate(context: vscode.ExtensionContext) {\n             new CopybooksCodeActionProvider(profileService)));\n }\n \n-function initWorkspaceTracker(downloader: CopybooksDownloader): vscode.Disposable {\n+function initWorkspaceWatcher(downloader: CopybooksDownloader): vscode.Disposable {\n     const watcher = vscode.workspace.createFileSystemWatcher(\"**/\"\n-        + DEPENDENCIES_FOLDER + \"/**/**.dep\", false, false, true);\n+        + path.join(C4Z_FOLDER, DEPENDENCIES_FOLDER) + \"/**/**.dep\", false, false, true);\n     watcher.onDidCreate(uri => downloader.downloadDependencies(uri,\n         \"Program contains dependencies to missing copybooks.\"));\n     watcher.onDidChange(uri => downloader.downloadDependencies(uri));\n+\n+    //create .gitignore file within .c4z folder\n+    createFileWithGivenPath(C4Z_FOLDER, GITIGNORE_FILE, \"/**\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzODg1Ng=="}, "originalCommit": {"oid": "4924b731d2c1d4c6608a290057948c10f7e8938a"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDM2MDQwOnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/utils/FileSystemUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDo0MzoyNFrOGaYptQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDo0MzoyNFrOGaYptQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMyMDA1Mw==", "bodyText": "In this case, it won't print the stack trace of the exception. To do that, you may use the method Logger#error(String, Throwable)", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/331#discussion_r430320053", "createdAt": "2020-05-26T10:43:24Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/utils/FileSystemUtils.java", "diffHunk": "@@ -202,7 +202,7 @@ public Path createFolders(Path path) {\n     try {\n       return Files.createDirectories(path);\n     } catch (IOException e) {\n-      log.error(e.getMessage());\n+      log.error(\"Error creating folders for \"+ path + \": \" + e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8e8af521e7106c23074dc2acaa0b8888689165"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4022, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}