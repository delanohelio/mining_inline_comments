{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMjk5NDg5", "number": 434, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMDo1NzoyM1rOEQHGvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODoyNzo1NlrOEQhObg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MzI5MDg2OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMDo1NzoyM1rOG0GFHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo0ODoxN1rOG0IAHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzI3ODc0OQ==", "bodyText": "Maybe, we may log also the URI here", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/434#discussion_r457278749", "createdAt": "2020-07-20T10:57:23Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -194,6 +191,7 @@ public void didChange(DidChangeTextDocumentParams params) {\n   public void didClose(DidCloseTextDocumentParams params) {\n     String uri = params.getTextDocument().getUri();\n     log.info(\"Document closing invoked\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b3f3d2c78349bf987158eee0ce5bb7b93baa49e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMxMDIzNw==", "bodyText": "It wasn't part of my activity, but definitely I could do it", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/434#discussion_r457310237", "createdAt": "2020-07-20T11:48:17Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -194,6 +191,7 @@ public void didChange(DidChangeTextDocumentParams params) {\n   public void didClose(DidCloseTextDocumentParams params) {\n     String uri = params.getTextDocument().getUri();\n     log.info(\"Document closing invoked\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzI3ODc0OQ=="}, "originalCommit": {"oid": "4b3f3d2c78349bf987158eee0ce5bb7b93baa49e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzM5MzQ1OnYy", "diffSide": "RIGHT", "path": "clients/cobol-lsp-vscode-extension/.vscode/settings.json", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzozOTozOFrOG0r5Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODoyNTowMlrOG0tfXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg5ODMzMA==", "bodyText": "Do we keep comments inside json-elements?", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/434#discussion_r457898330", "createdAt": "2020-07-21T07:39:38Z", "author": {"login": "asatklichov"}, "path": "clients/cobol-lsp-vscode-extension/.vscode/settings.json", "diffHunk": "@@ -13,12 +13,15 @@\n  */\n // Place your settings in this file to overwrite default and user settings.\n {\n-\t\"files.exclude\": {\n-\t\t\"out\": false // set this to true to hide the \"out\" folder with the compiled JS files\n-\t},\n-\t\"search.exclude\": {\n-\t\t\"out\": true // set this to false to include \"out\" folder in search results\n-\t},\n+    \"files.exclude\": {\n+        \"out\": false\n+        // set this to true to hide the \"out\" folder with the compiled JS files\n+    },\n+    \"search.exclude\": {\n+        \"out\": true\n+        // set this to false to include \"out\" folder in search results\n+    },\n     \"typescript.tsdk\": \"./node_modules/typescript/lib\",\n-    \"vsicons.presets.angular\": false, // we want to use the TS server from our node_modules folder to control its version\n+    \"vsicons.presets.angular\": false\n+    // we want to use the TS server from our node_modules folder to control its version", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eca4bb068cdd3bc4916737640f693e6a8ad85bd"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwMzI1OA==", "bodyText": "Good question, is modified because I made a mess removing that file and rollback it back, btw I had the feeling that is a kind of leftover that I could get rid of it", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/434#discussion_r457903258", "createdAt": "2020-07-21T07:48:24Z", "author": {"login": "zacanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/.vscode/settings.json", "diffHunk": "@@ -13,12 +13,15 @@\n  */\n // Place your settings in this file to overwrite default and user settings.\n {\n-\t\"files.exclude\": {\n-\t\t\"out\": false // set this to true to hide the \"out\" folder with the compiled JS files\n-\t},\n-\t\"search.exclude\": {\n-\t\t\"out\": true // set this to false to include \"out\" folder in search results\n-\t},\n+    \"files.exclude\": {\n+        \"out\": false\n+        // set this to true to hide the \"out\" folder with the compiled JS files\n+    },\n+    \"search.exclude\": {\n+        \"out\": true\n+        // set this to false to include \"out\" folder in search results\n+    },\n     \"typescript.tsdk\": \"./node_modules/typescript/lib\",\n-    \"vsicons.presets.angular\": false, // we want to use the TS server from our node_modules folder to control its version\n+    \"vsicons.presets.angular\": false\n+    // we want to use the TS server from our node_modules folder to control its version", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg5ODMzMA=="}, "originalCommit": {"oid": "8eca4bb068cdd3bc4916737640f693e6a8ad85bd"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkyNDQ0NA==", "bodyText": "In fact, the specification of JSON doesn't allow comments inside the structure. But I don't think it's critical in this case", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/434#discussion_r457924444", "createdAt": "2020-07-21T08:25:02Z", "author": {"login": "temanbrcom"}, "path": "clients/cobol-lsp-vscode-extension/.vscode/settings.json", "diffHunk": "@@ -13,12 +13,15 @@\n  */\n // Place your settings in this file to overwrite default and user settings.\n {\n-\t\"files.exclude\": {\n-\t\t\"out\": false // set this to true to hide the \"out\" folder with the compiled JS files\n-\t},\n-\t\"search.exclude\": {\n-\t\t\"out\": true // set this to false to include \"out\" folder in search results\n-\t},\n+    \"files.exclude\": {\n+        \"out\": false\n+        // set this to true to hide the \"out\" folder with the compiled JS files\n+    },\n+    \"search.exclude\": {\n+        \"out\": true\n+        // set this to false to include \"out\" folder in search results\n+    },\n     \"typescript.tsdk\": \"./node_modules/typescript/lib\",\n-    \"vsicons.presets.angular\": false, // we want to use the TS server from our node_modules folder to control its version\n+    \"vsicons.presets.angular\": false\n+    // we want to use the TS server from our node_modules folder to control its version", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg5ODMzMA=="}, "originalCommit": {"oid": "8eca4bb068cdd3bc4916737640f693e6a8ad85bd"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzM5NDk4OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzo0MDowMlrOG0r6Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzo0OTowNFrOG0sN6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg5ODU1MQ==", "bodyText": "Optional: List.of()", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/434#discussion_r457898551", "createdAt": "2020-07-21T07:40:02Z", "author": {"login": "asatklichov"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -193,7 +190,8 @@ public void didChange(DidChangeTextDocumentParams params) {\n   @Override\n   public void didClose(DidCloseTextDocumentParams params) {\n     String uri = params.getTextDocument().getUri();\n-    log.info(\"Document closing invoked\");\n+    log.info(String.format(\"Document closing invoked on URI %s\", uri));\n+    communications.publishDiagnostics(uri, Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eca4bb068cdd3bc4916737640f693e6a8ad85bd"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwMzU5Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/434#discussion_r457903593", "createdAt": "2020-07-21T07:49:04Z", "author": {"login": "zacanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -193,7 +190,8 @@ public void didChange(DidChangeTextDocumentParams params) {\n   @Override\n   public void didClose(DidCloseTextDocumentParams params) {\n     String uri = params.getTextDocument().getUri();\n-    log.info(\"Document closing invoked\");\n+    log.info(String.format(\"Document closing invoked on URI %s\", uri));\n+    communications.publishDiagnostics(uri, Collections.emptyList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg5ODU1MQ=="}, "originalCommit": {"oid": "8eca4bb068cdd3bc4916737640f693e6a8ad85bd"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzQwMjQ3OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzo0MTo1OVrOG0r-tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNzo0MTo1OVrOG0r-tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg5OTcwMA==", "bodyText": "Optional: Hamcrest style:\nassertThat(client.getDiagnostics(), hasSize(0));", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/434#discussion_r457899700", "createdAt": "2020-07-21T07:41:59Z", "author": {"login": "asatklichov"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java", "diffHunk": "@@ -254,6 +254,24 @@ public void testCodeActionsEndpoint() {\n     verify(actions).collect(params);\n   }\n \n+  /**\n+   * This test verify that when a {@link MyTextDocumentService#didClose(DidCloseTextDocumentParams)}\n+   * is sent from the client to dispose a document, all the related diagnostic message are disposed\n+   * from the document.\n+   */\n+  @Test\n+  public void testDidCloseDisposeDiagnostics() {\n+    service.didOpen(\n+        new DidOpenTextDocumentParams(\n+            new TextDocumentItem(DOCUMENT_URI, LANGUAGE, 1, TEXT_EXAMPLE)));\n+    assertEquals(1, closeGetter(service).size());\n+    TextDocumentIdentifier testDocument = new TextDocumentIdentifier(DOCUMENT_URI);\n+    DidCloseTextDocumentParams closedDocument = new DidCloseTextDocumentParams(testDocument);\n+    service.didClose(closedDocument);\n+    UseCaseUtils.waitForDiagnostics(client);\n+    assertEquals(0, client.getDiagnostics().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eca4bb068cdd3bc4916737640f693e6a8ad85bd"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzU3MDM4OnYy", "diffSide": "RIGHT", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODoyNzo1NlrOG0tmQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODoyNzo1NlrOG0tmQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkyNjIxMQ==", "bodyText": "Could you, please, use Communications mock to check the logic?\nThe UseCaseUtils#waitFodDiagnostic is going to be deprecated.", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/434#discussion_r457926211", "createdAt": "2020-07-21T08:27:56Z", "author": {"login": "temanbrcom"}, "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java", "diffHunk": "@@ -254,6 +255,24 @@ public void testCodeActionsEndpoint() {\n     verify(actions).collect(params);\n   }\n \n+  /**\n+   * This test verify that when a {@link MyTextDocumentService#didClose(DidCloseTextDocumentParams)}\n+   * is sent from the client to dispose a document, all the related diagnostic message are disposed\n+   * from the document.\n+   */\n+  @Test\n+  public void testDidCloseDisposeDiagnostics() {\n+    service.didOpen(\n+        new DidOpenTextDocumentParams(\n+            new TextDocumentItem(DOCUMENT_URI, LANGUAGE, 1, TEXT_EXAMPLE)));\n+    assertEquals(1, closeGetter(service).size());\n+    TextDocumentIdentifier testDocument = new TextDocumentIdentifier(DOCUMENT_URI);\n+    DidCloseTextDocumentParams closedDocument = new DidCloseTextDocumentParams(testDocument);\n+    service.didClose(closedDocument);\n+    UseCaseUtils.waitForDiagnostics(client);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b188a9bb165ff00b65b3595adf1691c395bd98e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3904, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}