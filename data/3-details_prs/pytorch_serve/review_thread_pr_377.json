{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMjM3MDMz", "number": 377, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNDo0M1rOEALJeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTozNTozNFrOEBAz3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE4MTA2OnYy", "diffSide": "RIGHT", "path": "binaries/conda/build_packages.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNDo0M1rOGbSkhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoyNzoxM1rOGbTEpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2ODk5Ng==", "bodyText": "It's worth adding these version files in this change to start with \"0.1.0\"", "url": "https://github.com/pytorch/serve/pull/377#discussion_r431268996", "createdAt": "2020-05-27T16:14:43Z", "author": {"login": "mycpuorg"}, "path": "binaries/conda/build_packages.sh", "diffHunk": "@@ -4,12 +4,18 @@ set -eou pipefail\n \n PYTHON_VERSIONS=\"3.6 3.7 3.8\"\n PKGS=\"torchserve torch-model-archiver\"\n+TORCHSERVE_VERSION=`cat ../../ts/version.txt`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "729151670771dfbad09f534f023c4e40bca7ef03"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3NjYyOQ==", "bodyText": "@mycpuorg : version.txt file has already been added for both torchserve and torch-model-archiver as a part of #360 and thus utilizing them in conda's meta.yaml as well.", "url": "https://github.com/pytorch/serve/pull/377#discussion_r431276629", "createdAt": "2020-05-27T16:26:19Z", "author": {"login": "harshbafna"}, "path": "binaries/conda/build_packages.sh", "diffHunk": "@@ -4,12 +4,18 @@ set -eou pipefail\n \n PYTHON_VERSIONS=\"3.6 3.7 3.8\"\n PKGS=\"torchserve torch-model-archiver\"\n+TORCHSERVE_VERSION=`cat ../../ts/version.txt`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2ODk5Ng=="}, "originalCommit": {"oid": "729151670771dfbad09f534f023c4e40bca7ef03"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3NzIyMg==", "bodyText": "The version has been marked as 0.1.1 in stage_release branch considering the upcoming release label.\nhttps://github.com/pytorch/serve/blob/staging_0_1_1/model-archiver/model_archiver/version.txt\nhttps://github.com/pytorch/serve/blob/staging_0_1_1/ts/version.txt", "url": "https://github.com/pytorch/serve/pull/377#discussion_r431277222", "createdAt": "2020-05-27T16:27:13Z", "author": {"login": "harshbafna"}, "path": "binaries/conda/build_packages.sh", "diffHunk": "@@ -4,12 +4,18 @@ set -eou pipefail\n \n PYTHON_VERSIONS=\"3.6 3.7 3.8\"\n PKGS=\"torchserve torch-model-archiver\"\n+TORCHSERVE_VERSION=`cat ../../ts/version.txt`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2ODk5Ng=="}, "originalCommit": {"oid": "729151670771dfbad09f534f023c4e40bca7ef03"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDk2NTcxOnYy", "diffSide": "RIGHT", "path": "binaries/conda/build_packages.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTozMjo0NVrOGcpcYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODoyOTo1OVrOGdCwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MjMyMw==", "bodyText": "For our shell scripts we prefer to use the $() notation versus back-ticks for executing commands.\nJust to keep things consistent.", "url": "https://github.com/pytorch/serve/pull/377#discussion_r432692323", "createdAt": "2020-05-29T19:32:45Z", "author": {"login": "seemethere"}, "path": "binaries/conda/build_packages.sh", "diffHunk": "@@ -4,12 +4,18 @@ set -eou pipefail\n \n PYTHON_VERSIONS=\"3.6 3.7 3.8\"\n PKGS=\"torchserve torch-model-archiver\"\n+TORCHSERVE_VERSION=`cat ../../ts/version.txt`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cee918be724b96838e74c2d8a0eb3b8a4d5d6d5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEwNjk5Ng==", "bodyText": "Done.", "url": "https://github.com/pytorch/serve/pull/377#discussion_r433106996", "createdAt": "2020-06-01T08:29:59Z", "author": {"login": "harshbafna"}, "path": "binaries/conda/build_packages.sh", "diffHunk": "@@ -4,12 +4,18 @@ set -eou pipefail\n \n PYTHON_VERSIONS=\"3.6 3.7 3.8\"\n PKGS=\"torchserve torch-model-archiver\"\n+TORCHSERVE_VERSION=`cat ../../ts/version.txt`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MjMyMw=="}, "originalCommit": {"oid": "5cee918be724b96838e74c2d8a0eb3b8a4d5d6d5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDk2OTUzOnYy", "diffSide": "RIGHT", "path": "binaries/conda/build_packages.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTozNDoxN1rOGcpe6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODozMDowOVrOGdCwdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5Mjk2OA==", "bodyText": "For this we can actually for-go having to use a template at all and instead prefer to use environment variables here.\nFor reference, this is how we do it for our upstream pytorch conda packages:\npackage:\n  name: pytorch\n  version: \"{{ environ.get('PYTORCH_BUILD_VERSION') }}\"\nhttps://github.com/pytorch/builder/blob/191b23db356f04b7501cfc818c45a1a4db66d7db/conda/pytorch-nightly/meta.yaml#L1-L3", "url": "https://github.com/pytorch/serve/pull/377#discussion_r432692968", "createdAt": "2020-05-29T19:34:17Z", "author": {"login": "seemethere"}, "path": "binaries/conda/build_packages.sh", "diffHunk": "@@ -4,12 +4,18 @@ set -eou pipefail\n \n PYTHON_VERSIONS=\"3.6 3.7 3.8\"\n PKGS=\"torchserve torch-model-archiver\"\n+TORCHSERVE_VERSION=`cat ../../ts/version.txt`\n+TORCH_MODEL_ARCHIVER_VERSION=`cat ../../model-archiver/model_archiver/version.txt`\n \n for pkg in ${PKGS}; do\n+    PKG_VERSION=$(echo $pkg | tr 'a-z' 'A-Z' | tr '-' '_')_VERSION\n+    cat $pkg/meta.yaml.tmpl | sed -e \"s/{version}/$PKG_VERSION/\" >> $pkg/meta.yaml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cee918be724b96838e74c2d8a0eb3b8a4d5d6d5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEwNzA2Mw==", "bodyText": "Done.", "url": "https://github.com/pytorch/serve/pull/377#discussion_r433107063", "createdAt": "2020-06-01T08:30:09Z", "author": {"login": "harshbafna"}, "path": "binaries/conda/build_packages.sh", "diffHunk": "@@ -4,12 +4,18 @@ set -eou pipefail\n \n PYTHON_VERSIONS=\"3.6 3.7 3.8\"\n PKGS=\"torchserve torch-model-archiver\"\n+TORCHSERVE_VERSION=`cat ../../ts/version.txt`\n+TORCH_MODEL_ARCHIVER_VERSION=`cat ../../model-archiver/model_archiver/version.txt`\n \n for pkg in ${PKGS}; do\n+    PKG_VERSION=$(echo $pkg | tr 'a-z' 'A-Z' | tr '-' '_')_VERSION\n+    cat $pkg/meta.yaml.tmpl | sed -e \"s/{version}/$PKG_VERSION/\" >> $pkg/meta.yaml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5Mjk2OA=="}, "originalCommit": {"oid": "5cee918be724b96838e74c2d8a0eb3b8a4d5d6d5"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDk3MzEwOnYy", "diffSide": "RIGHT", "path": "binaries/pip/build_wheels.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTozNTozNFrOGcphEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo1ODo1NVrOGdNq8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MzUyMQ==", "bodyText": "To make it so that cleanup is always run, regardless of where you exit in the script you can use a trap, see https://tldp.org/LDP/Bash-Beginners-Guide/html/sect_12_02.html", "url": "https://github.com/pytorch/serve/pull/377#discussion_r432693521", "createdAt": "2020-05-29T19:35:34Z", "author": {"login": "seemethere"}, "path": "binaries/pip/build_wheels.sh", "diffHunk": "@@ -0,0 +1,50 @@\n+#!/usr/bin/env bash\n+\n+set -eou pipefail\n+\n+source ../../scripts/install_utils\n+\n+cleanup()\n+{\n+  rm -rf dist\n+  rm -rf build\n+  rm -rf *.egg-info\n+}\n+\n+create_torchserve_wheel()\n+{\n+  cd ../../\n+\n+  python setup.py bdist_wheel --release --universal\n+\n+  cp dist/*.whl binaries/pip/output/\n+\n+  cleanup\n+\n+  cd -\n+}\n+\n+create_model_archiver_wheel()\n+{\n+  cd ../../model-archiver\n+\n+  python setup.py bdist_wheel --release --universal\n+\n+  cp dist/*.whl ../binaries/pip/output/\n+\n+  cleanup", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cee918be724b96838e74c2d8a0eb3b8a4d5d6d5"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4NTg3NQ==", "bodyText": "Done.", "url": "https://github.com/pytorch/serve/pull/377#discussion_r433285875", "createdAt": "2020-06-01T14:58:55Z", "author": {"login": "harshbafna"}, "path": "binaries/pip/build_wheels.sh", "diffHunk": "@@ -0,0 +1,50 @@\n+#!/usr/bin/env bash\n+\n+set -eou pipefail\n+\n+source ../../scripts/install_utils\n+\n+cleanup()\n+{\n+  rm -rf dist\n+  rm -rf build\n+  rm -rf *.egg-info\n+}\n+\n+create_torchserve_wheel()\n+{\n+  cd ../../\n+\n+  python setup.py bdist_wheel --release --universal\n+\n+  cp dist/*.whl binaries/pip/output/\n+\n+  cleanup\n+\n+  cd -\n+}\n+\n+create_model_archiver_wheel()\n+{\n+  cd ../../model-archiver\n+\n+  python setup.py bdist_wheel --release --universal\n+\n+  cp dist/*.whl ../binaries/pip/output/\n+\n+  cleanup", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MzUyMQ=="}, "originalCommit": {"oid": "5cee918be724b96838e74c2d8a0eb3b8a4d5d6d5"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1476, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}