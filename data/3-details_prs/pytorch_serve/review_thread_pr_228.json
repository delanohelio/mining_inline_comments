{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTc0MTk4", "number": 228, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMDowOTo0OFrOD0fnCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMDo0Mjo1MFrOERNifA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzcwNDQxOnYy", "diffSide": "RIGHT", "path": "ci/buildspec.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMDowOTo0OFrOGJdoow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNTo0MzoyOFrOGPCqoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU3NTkwNw==", "bodyText": "Does this work when requirements.txt is in the root dir not /ci?", "url": "https://github.com/pytorch/serve/pull/228#discussion_r412575907", "createdAt": "2020-04-22T00:09:48Z", "author": {"login": "aaronmarkham"}, "path": "ci/buildspec.yml", "diffHunk": "@@ -8,14 +8,7 @@ phases:\n       - apt-get update\n       - apt-get install -y curl\n       - pip install pip -U\n-      - pip install future\n-      - pip install Pillow\n-      - pip install pytest\n-      - pip install wheel\n-      - pip install twine\n-      - pip install pytest-mock -U\n-      - pip install requests\n-      - pip install psutil\n+      - pip install -r requirements.txt", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6732abbd01e56be4b690963026da92f23e05c995"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQyNTUwNA==", "bodyText": "Moved the requirements.txt to ci directory", "url": "https://github.com/pytorch/serve/pull/228#discussion_r418425504", "createdAt": "2020-05-01T05:43:28Z", "author": {"login": "harshbafna"}, "path": "ci/buildspec.yml", "diffHunk": "@@ -8,14 +8,7 @@ phases:\n       - apt-get update\n       - apt-get install -y curl\n       - pip install pip -U\n-      - pip install future\n-      - pip install Pillow\n-      - pip install pytest\n-      - pip install wheel\n-      - pip install twine\n-      - pip install pytest-mock -U\n-      - pip install requests\n-      - pip install psutil\n+      - pip install -r requirements.txt", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU3NTkwNw=="}, "originalCommit": {"oid": "6732abbd01e56be4b690963026da92f23e05c995"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTkzMTAwOnYy", "diffSide": "RIGHT", "path": "ci/requirements.txt", "isResolved": false, "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzozODo1MVrOGQK53Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzozNDozN1rOGWFG6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw==", "bodyText": "Missing torch requirements.\ntorchtext, torchvision etc.. ?", "url": "https://github.com/pytorch/serve/pull/228#discussion_r419609053", "createdAt": "2020-05-04T17:38:51Z", "author": {"login": "mycpuorg"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMTM4Mw==", "bodyText": "The torch package installation command is different for CPU and GPU and should not be part of requirements.txt. Also this is CI specific and the torch packages are installed through the codebuild docker files.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r419611383", "createdAt": "2020-05-04T17:42:46Z", "author": {"login": "harshbafna"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyODU0Nw==", "bodyText": "what would happen if I tried installing with just instructions based on requirements.txt ? I would fail to run examples etc. correct?", "url": "https://github.com/pytorch/serve/pull/228#discussion_r419628547", "createdAt": "2020-05-04T18:10:24Z", "author": {"login": "mycpuorg"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzMTA3Ng==", "bodyText": "This reqirements.txt is specific to CI build and code_coverage where the torch related packages are taken care by docker files. However, for manually running torchserve_sanity.sh script, the torch packages will need to be installed separately.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r419631076", "createdAt": "2020-05-04T18:14:28Z", "author": {"login": "harshbafna"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzNTIyOQ==", "bodyText": "Updated documentation to install torchserve pre-requisites before running sanity script.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r420635229", "createdAt": "2020-05-06T08:47:46Z", "author": {"login": "harshbafna"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM5NTM3Ng==", "bodyText": "Why do we need a requirements.txt then?\nWhy are you saying this txt file is specific to CI build or code coverage ? What prevents us from using it everywhere?\nThe main point of using requirements.txt is to have one central place where we list all the dependencies. It doesn't matter what we have today in ci scripts, sanity scripts etc.\nLet's list all the deps in one single place (requirements.txt) and install it from different scripts. This will be used by pip, conda etc.\nThe idea is not to miss any installations that we are experiencing.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r423395376", "createdAt": "2020-05-12T00:30:29Z", "author": {"login": "mycpuorg"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMxMjgxOQ==", "bodyText": "@mycpuorg : The only reason to keep torch related packages away from the requirements.txt file is the fact that PyTorch's official documentation provides different set of installation commands for torch packages based on the environment like Linux/Mac, CPU/GPU, Pip/Conda etc. Following are some combination which we generally use :\n\n\n\nEnvironment\nInstallation command\n\n\n\n\nLinux + Pip + Cuda\npip install torch torchvision\n\n\nLinux + Pip\npip install torch==1.5.0+cpu torchvision==0.6.0+cpu -f https://download.pytorch.org/whl/torch_stable.html\n\n\nLinux + Conda\nconda install pytorch torchvision cpuonly -c pytorch\n\n\nLinux + Conda + Cuda\nconda install pytorch torchvision cudatoolkit=10.2 -c pytorch\n\n\nMac + Pip\npip install torch torchvision\n\n\nMac + Conda\nconda install pytorch torchvision -c pytorch\n\n\n\nReference : https://pytorch.org/get-started/locally/\nIn case of CI build the torch packages are installed as part of the docker image used for CodeBuild and this requirements.txt was introduced initially to freeze all the python packages being used at the time of CI build.\nAlso, following packages are required only while executing test suites or python linting on the backend source code and model-archiver source code and not required for installing TorchServe from source :\nmock\npytest\npylint\npytest-mock\npytest-cov\n\nNote that the pytest suite is currently not executed as a part of build process.\nFor this we can split the requirements.txt into multiple parts like this :\n|-- requirements\n|   |-- common.txt\n|   |-- dev.txt\n|   `-- prod.txt\n`-- requirements.txt\n\ncommon.txt\n## contains common packages like\nfuture\npsutil\nwheel\nrequests\n\ndev.txt\n## replicates the common.txt and adds dev specific packages like :\n-r common.txt\nmock\npytest\npylint\npytest-mock\npytest-cov\n\nprod.txt\n## replicates common.txt\n-r common.txt\n\nrequirements.txt\n## replicates prod.txt\n-r prod.txt\n\nPlease let us know your thoughts and how should we handle the different installation commands provided by PyTorch for torch packages.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r424312819", "createdAt": "2020-05-13T09:48:27Z", "author": {"login": "harshbafna"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0ODU1OA==", "bodyText": "Thanks. I like the idea of modularizing the installation. But it's not clear what the expectation is for installing torch (specific) packages. The whole issue that we are trying to solve is to list and install the dep packages from one central place. Is something breaking when we do this?", "url": "https://github.com/pytorch/serve/pull/228#discussion_r424748558", "createdAt": "2020-05-13T21:43:37Z", "author": {"login": "mycpuorg"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0OTUyNg==", "bodyText": "Also, please describe what your proposal is and how the installation commands would look afterwards (forget CI, Dockerfiles, sanity scripts). Just list down the commands that an end user would be typing into the CLI after these requirements.txt changes are merged.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r424749526", "createdAt": "2020-05-13T21:45:46Z", "author": {"login": "mycpuorg"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4MTMxNg==", "bodyText": "@mycpuorg :\nThe idea here is to use 2 different requirements.txt for installing the environment specific packages for production and development envs.\nFor production environment we will use :\npip install -r requirements.txt\nThis will install all the common packages and anything specific to production environment.\nFor dev environment or CI builds we will use\npip install -r requirements/dev_requirements.txt\nwhich will install all the common packages along with the UT specific python packages.\nRegarding the torch related packages :\nThe installation works fine on normal python environments with the following pip install command which is being currently used in the installation scripts :\npip install torch torchtext torchvision\nHowever, given the different commands recommended by PyTorch for different environments, this will require more exhaustive testing on different environments using different models to be sure we can use one common command for all the environments.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r425281316", "createdAt": "2020-05-14T16:43:12Z", "author": {"login": "harshbafna"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3ODM1NQ==", "bodyText": "@harshbafna @mycpuorg What is the final resolution of this discussion? What is being proposed now and what has to be done as a future step?", "url": "https://github.com/pytorch/serve/pull/228#discussion_r425578355", "createdAt": "2020-05-15T05:45:26Z", "author": {"login": "chauhang"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgwNTU0Ng==", "bodyText": "@chauhang @mycpuorg\nI have tested the install_from_source_ubuntu script and verified all the default handlers on EC2 with CPU/GPU and Pip/Conda combination. Based on this testing we should be good to go ahead with the above mentioned approach of modularized requirements.txt which is also a best practice for keeping the production environment independent of development related.\nPlease refer the attached excel sheet for detailed report.\nTorch Package Installation Testing.xlsx", "url": "https://github.com/pytorch/serve/pull/228#discussion_r425805546", "createdAt": "2020-05-15T13:34:37Z", "author": {"login": "harshbafna"}, "path": "ci/requirements.txt", "diffHunk": "@@ -0,0 +1,10 @@\n+Pillow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwOTA1Mw=="}, "originalCommit": {"oid": "928271a94ba2ebda4b44d2ac48b0c3cf0d622328"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDE2MjY4OnYy", "diffSide": "RIGHT", "path": "docs/code_coverage.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNTo0Mzo1MVrOGV3NyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMzo1MTo0OFrOGXO7Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3NzkyOQ==", "bodyText": "Line #10 above is already doing cd ... do we need this again?", "url": "https://github.com/pytorch/serve/pull/228#discussion_r425577929", "createdAt": "2020-05-15T05:43:51Z", "author": {"login": "chauhang"}, "path": "docs/code_coverage.md", "diffHunk": "@@ -2,11 +2,20 @@\n \n ## Prerequisites\n \n-You need some additional Python modules to run the unit tests and linting.\n+* Install all `TorchServe` prerequisites. For detailed steps refer [TorchServe installation documentation](../README.md#install-torchserve).\n+\n+* Install additional Python modules to run the unit tests and linting using following commands\n+\n+```bash\n+cd <path_to_serve>\n+pip install -r ci/requirements.txt\n+```\n+\n+\n+## Run sanity script\n \n ```bash\n-pip install mock pytest pylint pytest-mock pytest-cov\n-cd serve\n+cd <path_to_serve>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d398d2b99696d8209c0f93f7b3bd805687b80e5"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAxNDk1NA==", "bodyText": "removed.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r427014954", "createdAt": "2020-05-19T03:51:48Z", "author": {"login": "harshbafna"}, "path": "docs/code_coverage.md", "diffHunk": "@@ -2,11 +2,20 @@\n \n ## Prerequisites\n \n-You need some additional Python modules to run the unit tests and linting.\n+* Install all `TorchServe` prerequisites. For detailed steps refer [TorchServe installation documentation](../README.md#install-torchserve).\n+\n+* Install additional Python modules to run the unit tests and linting using following commands\n+\n+```bash\n+cd <path_to_serve>\n+pip install -r ci/requirements.txt\n+```\n+\n+\n+## Run sanity script\n \n ```bash\n-pip install mock pytest pylint pytest-mock pytest-cov\n-cd serve\n+cd <path_to_serve>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3NzkyOQ=="}, "originalCommit": {"oid": "2d398d2b99696d8209c0f93f7b3bd805687b80e5"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDE2Mzg1OnYy", "diffSide": "RIGHT", "path": "docs/code_coverage.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNTo0NDozMlrOGV3Ofw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjowNTo1M1rOGWCFMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3ODExMQ==", "bodyText": "Is there any reason for changing this from cd serve to cd <path_to_serve>", "url": "https://github.com/pytorch/serve/pull/228#discussion_r425578111", "createdAt": "2020-05-15T05:44:32Z", "author": {"login": "chauhang"}, "path": "docs/code_coverage.md", "diffHunk": "@@ -2,11 +2,20 @@\n \n ## Prerequisites\n \n-You need some additional Python modules to run the unit tests and linting.\n+* Install all `TorchServe` prerequisites. For detailed steps refer [TorchServe installation documentation](../README.md#install-torchserve).\n+\n+* Install additional Python modules to run the unit tests and linting using following commands\n+\n+```bash\n+cd <path_to_serve>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d398d2b99696d8209c0f93f7b3bd805687b80e5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc1NTk1Mg==", "bodyText": "User could be anywhere on the terminal, just making sure we are at the correct path before executing the next command.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r425755952", "createdAt": "2020-05-15T12:05:53Z", "author": {"login": "harshbafna"}, "path": "docs/code_coverage.md", "diffHunk": "@@ -2,11 +2,20 @@\n \n ## Prerequisites\n \n-You need some additional Python modules to run the unit tests and linting.\n+* Install all `TorchServe` prerequisites. For detailed steps refer [TorchServe installation documentation](../README.md#install-torchserve).\n+\n+* Install additional Python modules to run the unit tests and linting using following commands\n+\n+```bash\n+cd <path_to_serve>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3ODExMQ=="}, "originalCommit": {"oid": "2d398d2b99696d8209c0f93f7b3bd805687b80e5"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDA5MzE5OnYy", "diffSide": "RIGHT", "path": "ts/torch_handler/base_handler.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzoyNTowMFrOGZekEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzoyNTowMFrOGZekEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2ODMzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    except RuntimeError as e: # pylint: disable=unused-variable\n          \n          \n            \n                    except RuntimeError:", "url": "https://github.com/pytorch/serve/pull/228#discussion_r429368336", "createdAt": "2020-05-22T17:25:00Z", "author": {"login": "maaquib"}, "path": "ts/torch_handler/base_handler.py", "diffHunk": "@@ -44,7 +44,7 @@ def initialize(self, ctx):\n         try:\n             logger.debug('Loading torchscript model')\n             self.model = torch.jit.load(model_pt_path)\n-        except RuntimeError as e:\n+        except RuntimeError as e: # pylint: disable=unused-variable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df673e3e6d6df0b216fe0f355d803a4d9200bed2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDEwMTI3OnYy", "diffSide": "RIGHT", "path": "docs/code_coverage.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzoyODowMlrOGZepPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMTowMTo0MVrOGZ9cZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2OTY2MQ==", "bodyText": "Whats the diff b/w the UT and IT coverage reports? Should these be written to two separate files, to avoid UT coverage being overwritten by IT coverage", "url": "https://github.com/pytorch/serve/pull/228#discussion_r429369661", "createdAt": "2020-05-22T17:28:02Z", "author": {"login": "maaquib"}, "path": "docs/code_coverage.md", "diffHunk": "@@ -1,30 +1,54 @@\n-# Execute unit testing and generate a code coverage report\n-\n-## Prerequisites\n-\n-You need some additional Python modules to run the unit tests and linting.\n+## To check branch stability run the sanity suite as follows\n \n ```bash\n-pip install mock pytest pylint pytest-mock pytest-cov\n-cd serve\n ./torchserve_sanity.sh\n ```\n \n-**The above command executes the following**\n+## To run frontend build suite run following command\n+\n+```bash\n+frontend/gradlew -p frontend clean build\n+```\n \n-* TorchServe frontend build suite which consists of :\n+TorchServe frontend build suite consists of :\n \n   * checkstyle\n   * findbugs\n   * PMD\n   * UT\n+  \n+The reports are generated at following path : `frontend/server/build/reports`\n \n-* TorchServe backend pytest suite\n+## To run backend pytest suite run following command\n \n-* torch-model-archive pytest suite\n+```bash\n+python -m pytest --cov-report html:htmlcov --cov=ts/ ts/tests/unit_tests/\n+```\n+\n+The reports are generated at following path : `htmlcov/`\n+\n+## To run python linting on `ts` package run following command\n+\n+```bash\n+pylint -rn --rcfile=./ts/tests/pylintrc ts/.;\n+```\n+\n+## To run pytest suite on model-archiver run following command\n+\n+```bash\n+python -m pytest --cov-report html:htmlcov --cov=model_archiver/ model_archiver/tests/unit_tests/\n+```\n+\n+The reports are generated at following path : `model-archiver/htmlcov/`\n+\n+## To run IT suite on model-archiver run following command\n+\n+```bash\n+cd model-archiver\n+pip install .\n+python -m pytest --cov-report html:htmlcov --cov=model_archiver/ model_archiver/tests/integ_tests/\n+```\n \n-The reports can be accessed at the following paths:\n+The reports are generated at following path : `model-archiver/htmlcov/`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df673e3e6d6df0b216fe0f355d803a4d9200bed2"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NDI3OA==", "bodyText": "Done.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r429874278", "createdAt": "2020-05-25T11:01:41Z", "author": {"login": "harshbafna"}, "path": "docs/code_coverage.md", "diffHunk": "@@ -1,30 +1,54 @@\n-# Execute unit testing and generate a code coverage report\n-\n-## Prerequisites\n-\n-You need some additional Python modules to run the unit tests and linting.\n+## To check branch stability run the sanity suite as follows\n \n ```bash\n-pip install mock pytest pylint pytest-mock pytest-cov\n-cd serve\n ./torchserve_sanity.sh\n ```\n \n-**The above command executes the following**\n+## To run frontend build suite run following command\n+\n+```bash\n+frontend/gradlew -p frontend clean build\n+```\n \n-* TorchServe frontend build suite which consists of :\n+TorchServe frontend build suite consists of :\n \n   * checkstyle\n   * findbugs\n   * PMD\n   * UT\n+  \n+The reports are generated at following path : `frontend/server/build/reports`\n \n-* TorchServe backend pytest suite\n+## To run backend pytest suite run following command\n \n-* torch-model-archive pytest suite\n+```bash\n+python -m pytest --cov-report html:htmlcov --cov=ts/ ts/tests/unit_tests/\n+```\n+\n+The reports are generated at following path : `htmlcov/`\n+\n+## To run python linting on `ts` package run following command\n+\n+```bash\n+pylint -rn --rcfile=./ts/tests/pylintrc ts/.;\n+```\n+\n+## To run pytest suite on model-archiver run following command\n+\n+```bash\n+python -m pytest --cov-report html:htmlcov --cov=model_archiver/ model_archiver/tests/unit_tests/\n+```\n+\n+The reports are generated at following path : `model-archiver/htmlcov/`\n+\n+## To run IT suite on model-archiver run following command\n+\n+```bash\n+cd model-archiver\n+pip install .\n+python -m pytest --cov-report html:htmlcov --cov=model_archiver/ model_archiver/tests/integ_tests/\n+```\n \n-The reports can be accessed at the following paths:\n+The reports are generated at following path : `model-archiver/htmlcov/`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2OTY2MQ=="}, "originalCommit": {"oid": "df673e3e6d6df0b216fe0f355d803a4d9200bed2"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDExNTUxOnYy", "diffSide": "LEFT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzozMzowMVrOGZeyRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDozMTo0MlrOGZ8upw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MTk3Mg==", "bodyText": "We should not remove the Conda install instructions for Linux and Mac", "url": "https://github.com/pytorch/serve/pull/228#discussion_r429371972", "createdAt": "2020-05-22T17:33:01Z", "author": {"login": "maaquib"}, "path": "README.md", "diffHunk": "@@ -13,86 +13,38 @@ TorchServe is a flexible and easy to use tool for serving PyTorch models.\n \n ## Install TorchServe\n \n-Conda instructions are provided in more detail, but you may also use `pip` and `virtualenv` if that is your preference.\n-**Note:** Java 11 is required. Instructions for installing Java 11 for Ubuntu or macOS are provided in the [Install with Conda](#install-with-conda) section.\n-\n-### Install with pip\n-\n-1. Install Java 11\n-\n-    ```bash\n-    sudo apt-get install openjdk-11-jdk\n-    ```\n-\n-1. Use `pip` to install TorchServe and the model archiver:\n-\n-    ``` bash\n-    pip install torch torchtext torchvision sentencepiece psutil future\n-    pip install torchserve torch-model-archiver\n-    ```\n-\n-### Install with Conda\n-**Note:** For Conda, Python 3.8 is required to run Torchserve\n-\n-#### Ubuntu\n-\n 1. Install Java 11\n \n+    For Ubuntu\n     ```bash\n     sudo apt-get install openjdk-11-jdk\n     ```\n-\n-1. Install Conda (https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df673e3e6d6df0b216fe0f355d803a4d9200bed2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUxNTE3MQ==", "bodyText": "@maaquib : We have tried to simplify the installation steps as much as possible.\n\ninstall java\n\nThis step is independent of python environment\n\n\ninstall python dependencies through requirements.txt\n\nThis will always install the dependencies using pip irrespective of the conda or pip environment.\n\n\ninstall torchserve and torch-model-archiver from conda/PyPi repo based on your environment.\n\nThis is the only step which requires conda/pip specific commands which we have added.\n\n\n\nGuide to install conda only provides steps for setting up a python virtual environment which should not be a part of torchserve installation doc. Or Else we should have a separate section for setting up a virtual env using conda/pyenv/virtualenv/venv etc.\nThoughts?", "url": "https://github.com/pytorch/serve/pull/228#discussion_r429515171", "createdAt": "2020-05-23T05:08:42Z", "author": {"login": "harshbafna"}, "path": "README.md", "diffHunk": "@@ -13,86 +13,38 @@ TorchServe is a flexible and easy to use tool for serving PyTorch models.\n \n ## Install TorchServe\n \n-Conda instructions are provided in more detail, but you may also use `pip` and `virtualenv` if that is your preference.\n-**Note:** Java 11 is required. Instructions for installing Java 11 for Ubuntu or macOS are provided in the [Install with Conda](#install-with-conda) section.\n-\n-### Install with pip\n-\n-1. Install Java 11\n-\n-    ```bash\n-    sudo apt-get install openjdk-11-jdk\n-    ```\n-\n-1. Use `pip` to install TorchServe and the model archiver:\n-\n-    ``` bash\n-    pip install torch torchtext torchvision sentencepiece psutil future\n-    pip install torchserve torch-model-archiver\n-    ```\n-\n-### Install with Conda\n-**Note:** For Conda, Python 3.8 is required to run Torchserve\n-\n-#### Ubuntu\n-\n 1. Install Java 11\n \n+    For Ubuntu\n     ```bash\n     sudo apt-get install openjdk-11-jdk\n     ```\n-\n-1. Install Conda (https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MTk3Mg=="}, "originalCommit": {"oid": "df673e3e6d6df0b216fe0f355d803a4d9200bed2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2ODQ4Mg==", "bodyText": "@harshbafna Just added review comment. That should be good enough. Let me know what you think.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r429568482", "createdAt": "2020-05-23T18:36:59Z", "author": {"login": "maaquib"}, "path": "README.md", "diffHunk": "@@ -13,86 +13,38 @@ TorchServe is a flexible and easy to use tool for serving PyTorch models.\n \n ## Install TorchServe\n \n-Conda instructions are provided in more detail, but you may also use `pip` and `virtualenv` if that is your preference.\n-**Note:** Java 11 is required. Instructions for installing Java 11 for Ubuntu or macOS are provided in the [Install with Conda](#install-with-conda) section.\n-\n-### Install with pip\n-\n-1. Install Java 11\n-\n-    ```bash\n-    sudo apt-get install openjdk-11-jdk\n-    ```\n-\n-1. Use `pip` to install TorchServe and the model archiver:\n-\n-    ``` bash\n-    pip install torch torchtext torchvision sentencepiece psutil future\n-    pip install torchserve torch-model-archiver\n-    ```\n-\n-### Install with Conda\n-**Note:** For Conda, Python 3.8 is required to run Torchserve\n-\n-#### Ubuntu\n-\n 1. Install Java 11\n \n+    For Ubuntu\n     ```bash\n     sudo apt-get install openjdk-11-jdk\n     ```\n-\n-1. Install Conda (https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MTk3Mg=="}, "originalCommit": {"oid": "df673e3e6d6df0b216fe0f355d803a4d9200bed2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MjU2Nw==", "bodyText": "@maaquib : merged the review comments, resolving this conversation.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r429862567", "createdAt": "2020-05-25T10:31:42Z", "author": {"login": "harshbafna"}, "path": "README.md", "diffHunk": "@@ -13,86 +13,38 @@ TorchServe is a flexible and easy to use tool for serving PyTorch models.\n \n ## Install TorchServe\n \n-Conda instructions are provided in more detail, but you may also use `pip` and `virtualenv` if that is your preference.\n-**Note:** Java 11 is required. Instructions for installing Java 11 for Ubuntu or macOS are provided in the [Install with Conda](#install-with-conda) section.\n-\n-### Install with pip\n-\n-1. Install Java 11\n-\n-    ```bash\n-    sudo apt-get install openjdk-11-jdk\n-    ```\n-\n-1. Use `pip` to install TorchServe and the model archiver:\n-\n-    ``` bash\n-    pip install torch torchtext torchvision sentencepiece psutil future\n-    pip install torchserve torch-model-archiver\n-    ```\n-\n-### Install with Conda\n-**Note:** For Conda, Python 3.8 is required to run Torchserve\n-\n-#### Ubuntu\n-\n 1. Install Java 11\n \n+    For Ubuntu\n     ```bash\n     sudo apt-get install openjdk-11-jdk\n     ```\n-\n-1. Install Conda (https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MTk3Mg=="}, "originalCommit": {"oid": "df673e3e6d6df0b216fe0f355d803a4d9200bed2"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTQyNTEwOnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxODozNDo1N1rOGZqxSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxODozNDo1N1rOGZqxSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2ODMyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                For Conda\n          \n          \n            \n                For [Conda](https://docs.conda.io/projects/conda/en/latest/user-guide/install)", "url": "https://github.com/pytorch/serve/pull/228#discussion_r429568329", "createdAt": "2020-05-23T18:34:57Z", "author": {"login": "maaquib"}, "path": "README.md", "diffHunk": "@@ -13,86 +13,38 @@ TorchServe is a flexible and easy to use tool for serving PyTorch models.\n \n ## Install TorchServe\n \n-Conda instructions are provided in more detail, but you may also use `pip` and `virtualenv` if that is your preference.\n-**Note:** Java 11 is required. Instructions for installing Java 11 for Ubuntu or macOS are provided in the [Install with Conda](#install-with-conda) section.\n-\n-### Install with pip\n-\n-1. Install Java 11\n-\n-    ```bash\n-    sudo apt-get install openjdk-11-jdk\n-    ```\n-\n-1. Use `pip` to install TorchServe and the model archiver:\n-\n-    ``` bash\n-    pip install torch torchtext torchvision sentencepiece psutil future\n-    pip install torchserve torch-model-archiver\n-    ```\n-\n-### Install with Conda\n-**Note:** For Conda, Python 3.8 is required to run Torchserve\n-\n-#### Ubuntu\n-\n 1. Install Java 11\n \n+    For Ubuntu\n     ```bash\n     sudo apt-get install openjdk-11-jdk\n     ```\n-\n-1. Install Conda (https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html)\n-1. Create an environment and install torchserve and torch-model-archiver\n-    For CPU\n-\n-    ```bash\n-    conda create --name torchserve torchserve torch-model-archiver psutil future pytorch torchtext torchvision -c pytorch -c powerai\n-    ```\n-\n-    For GPU\n-\n-    ```bash\n-    conda create --name torchserve torchserve torch-model-archiver psutil future pytorch torchtext torchvision cudatoolkit=10.1 -c pytorch -c powerai\n-    ```\n-\n-1. Activate the environment\n-\n-    ```bash\n-    source activate torchserve\n-    ```\n-\n-2. Optional if using torchtext models\n-    ```bash\n-    pip install sentencepiece\n-    ```\n-\n-#### macOS\n-\n-1. Install Java 11\n-\n+   \n+   For Mac\n     ```bash\n     brew tap AdoptOpenJDK/openjdk\n     brew cask install adoptopenjdk11\n     ```\n \n-1. Install Conda (https://docs.conda.io/projects/conda/en/latest/user-guide/install/macos.html)\n-1. Create an environment and install torchserve and torch-model-archiver\n+2. Install python pre-requisite packages\n \n     ```bash\n-    conda create --name torchserve torchserve torch-model-archiver psutil future pytorch torchtext torchvision -c pytorch -c powerai\n+    pip install -U -r requirements.txt\n     ```\n \n-1. Activate the environment\n+3. Install torchserve and torch-model-archiver\n \n-    ```bash\n-    source activate torchserve\n+    For Conda", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df673e3e6d6df0b216fe0f355d803a4d9200bed2"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjg5Nzc2OnYy", "diffSide": "LEFT", "path": "test/regression_tests.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjowMzowMVrOGuRNjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNDowMTowMlrOGuXSLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2OTY3OQ==", "bodyText": "What's the reason for reverting this?", "url": "https://github.com/pytorch/serve/pull/228#discussion_r451169679", "createdAt": "2020-07-07T22:03:01Z", "author": {"login": "maaquib"}, "path": "test/regression_tests.sh", "diffHunk": "@@ -28,9 +28,6 @@ install_torchserve_from_source() {\n   cd serve\n   echo \"Installing torchserve torch-model-archiver from source\"\n   ./scripts/install_from_src_ubuntu\n-  echo \"TS Branch : \" $(git rev-parse --abbrev-ref HEAD) >> $3\n-  echo \"TS Branch Commit Id : \" $(git rev-parse HEAD) >> $3\n-  echo \"Build date : \" $(date) >> $3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "130ee4e41d0e020e696765231a3c24c6748af799"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2OTE2Ng==", "bodyText": "This got introduced while rebasing from staging_0_1_1 branch to master and didn't show up as a conflict, reverted these unwanted changes.", "url": "https://github.com/pytorch/serve/pull/228#discussion_r451269166", "createdAt": "2020-07-08T04:01:02Z", "author": {"login": "harshbafna"}, "path": "test/regression_tests.sh", "diffHunk": "@@ -28,9 +28,6 @@ install_torchserve_from_source() {\n   cd serve\n   echo \"Installing torchserve torch-model-archiver from source\"\n   ./scripts/install_from_src_ubuntu\n-  echo \"TS Branch : \" $(git rev-parse --abbrev-ref HEAD) >> $3\n-  echo \"TS Branch Commit Id : \" $(git rev-parse HEAD) >> $3\n-  echo \"Build date : \" $(date) >> $3", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2OTY3OQ=="}, "originalCommit": {"oid": "130ee4e41d0e020e696765231a3c24c6748af799"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDgzMDY4OnYy", "diffSide": "RIGHT", "path": "docker/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMDo0Mjo1MFrOG1zeFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMDo0Mjo1MFrOG1zeFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA3MDk5Nw==", "bodyText": "NIT:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For the latest version, you can use the `latest-gpu` tag:\n          \n          \n            \n            For the latest version, you can use the `gpu-latest` tag:", "url": "https://github.com/pytorch/serve/pull/228#discussion_r459070997", "createdAt": "2020-07-22T20:42:50Z", "author": {"login": "maaquib"}, "path": "docker/README.md", "diffHunk": "@@ -63,7 +63,7 @@ docker run --rm -it --gpus all -p 8080:8080 -p 8081:8081 pytorch/torchserve:0.1.\n \n For the latest version, you can use the `latest-gpu` tag:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8ee55048b3a70a37c1ac4b4449683792212eb18"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1604, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}