{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MDU1NTIw", "number": 258, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzo0ODo0NVrOD3bIvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzoyNDoxNFrOD7wFYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDQyODc2OnYy", "diffSide": "RIGHT", "path": "examples/text_to_speech_synthesizer/README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzo0ODo0NVrOGNrHmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTo1MDowOFrOGQGjYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTEzMQ==", "bodyText": "This is a problem the first time through. It will start 4 workers by default, all four of which, during init, will try to download some resources to ~/.cache - the problem being that they'll overwrite each others' downloads, resulting in exceptions in the log. The behavior is not 100%, but I find it easiest to repro by starting without the --models arg on start, and using:\ncurl -X POST \"http://localhost:8081/models?initial_workers=4&url=wgsynth.mar\"\n\nThis results in error lines in the log, like:\nRuntimeError: unexpected EOF, expected 12400777 more bytes. The file might be corrupted.\n\nWhich results directly from trying to load files corrupted by download conflicts.", "url": "https://github.com/pytorch/serve/pull/258#discussion_r416991131", "createdAt": "2020-04-28T23:48:45Z", "author": {"login": "fbbradheintz"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Download the checkpoint for NVIDIA WaveGlow model :\n+ \n+    ```bash\n+   wget https://api.ngc.nvidia.com/v2/models/nvidia/waveglowpyt_fp32/versions/1/files/nvidia_waveglowpyt_fp32_20190306.pth \n+   ```\n+\n+ * Create a torch model archive using the torch-model-archiver utility to archive the above files.\n+ \n+    ```bash\n+    torch-model-archiver --model-name waveglow_synthesizer --version 1.0 --model-file waveglow_model.py --serialized-file nvidia_waveglowpyt_fp32_20190306.pth --handler waveglow_handler.py\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f19269bff69bce3c8b9d39b9ea8b3e2870b8a4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5NDI0OQ==", "bodyText": "NB: https://github.com/nvidia/DeepLearningExamples/archive/torchhub.zip appears to be the problem file.\nOne possible fix: Add a manual download step at the beginning of the example, and include the necessary files in the model archive as --extra-files. The downloaded file, even unzipped, is much smaller than the model weights (I checked).", "url": "https://github.com/pytorch/serve/pull/258#discussion_r416994249", "createdAt": "2020-04-28T23:58:01Z", "author": {"login": "fbbradheintz"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Download the checkpoint for NVIDIA WaveGlow model :\n+ \n+    ```bash\n+   wget https://api.ngc.nvidia.com/v2/models/nvidia/waveglowpyt_fp32/versions/1/files/nvidia_waveglowpyt_fp32_20190306.pth \n+   ```\n+\n+ * Create a torch model archive using the torch-model-archiver utility to archive the above files.\n+ \n+    ```bash\n+    torch-model-archiver --model-name waveglow_synthesizer --version 1.0 --model-file waveglow_model.py --serialized-file nvidia_waveglowpyt_fp32_20190306.pth --handler waveglow_handler.py\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTEzMQ=="}, "originalCommit": {"oid": "c9f19269bff69bce3c8b9d39b9ea8b3e2870b8a4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NTI4Ng==", "bodyText": "On reflection, we should probably discourage downloading large files as part of handler initialization generally, for this reason and others (e.g., worker startup timeout if a resource is slow to download).", "url": "https://github.com/pytorch/serve/pull/258#discussion_r417475286", "createdAt": "2020-04-29T17:09:03Z", "author": {"login": "fbbradheintz"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Download the checkpoint for NVIDIA WaveGlow model :\n+ \n+    ```bash\n+   wget https://api.ngc.nvidia.com/v2/models/nvidia/waveglowpyt_fp32/versions/1/files/nvidia_waveglowpyt_fp32_20190306.pth \n+   ```\n+\n+ * Create a torch model archive using the torch-model-archiver utility to archive the above files.\n+ \n+    ```bash\n+    torch-model-archiver --model-name waveglow_synthesizer --version 1.0 --model-file waveglow_model.py --serialized-file nvidia_waveglowpyt_fp32_20190306.pth --handler waveglow_handler.py\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTEzMQ=="}, "originalCommit": {"oid": "c9f19269bff69bce3c8b9d39b9ea8b3e2870b8a4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUzNzc2MA==", "bodyText": "Done. Also added a create_mar.sh script which does all the work and  generates the waveglow mar file for the user.", "url": "https://github.com/pytorch/serve/pull/258#discussion_r419537760", "createdAt": "2020-05-04T15:50:08Z", "author": {"login": "harshbafna"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Download the checkpoint for NVIDIA WaveGlow model :\n+ \n+    ```bash\n+   wget https://api.ngc.nvidia.com/v2/models/nvidia/waveglowpyt_fp32/versions/1/files/nvidia_waveglowpyt_fp32_20190306.pth \n+   ```\n+\n+ * Create a torch model archive using the torch-model-archiver utility to archive the above files.\n+ \n+    ```bash\n+    torch-model-archiver --model-name waveglow_synthesizer --version 1.0 --model-file waveglow_model.py --serialized-file nvidia_waveglowpyt_fp32_20190306.pth --handler waveglow_handler.py\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTEzMQ=="}, "originalCommit": {"oid": "c9f19269bff69bce3c8b9d39b9ea8b3e2870b8a4"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5Nzk3MTcyOnYy", "diffSide": "RIGHT", "path": "examples/text_to_speech_synthesizer/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTowNDo0NFrOGOM7TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzoyODo1MVrOGQ0CWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU0NTAzNw==", "bodyText": "One other item: At the team status meeting today, it was raised that this is not really a complete example, as it stashes the output in a file in /tmp - which does the requester no good if they're on another machine. To make the example truly valuable, it should package the file for download with the HTTP response.", "url": "https://github.com/pytorch/serve/pull/258#discussion_r417545037", "createdAt": "2020-04-29T19:04:44Z", "author": {"login": "fbbradheintz"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Download the checkpoint for NVIDIA WaveGlow model :\n+ \n+    ```bash\n+   wget https://api.ngc.nvidia.com/v2/models/nvidia/waveglowpyt_fp32/versions/1/files/nvidia_waveglowpyt_fp32_20190306.pth \n+   ```\n+\n+ * Create a torch model archive using the torch-model-archiver utility to archive the above files.\n+ \n+    ```bash\n+    torch-model-archiver --model-name waveglow_synthesizer --version 1.0 --model-file waveglow_model.py --serialized-file nvidia_waveglowpyt_fp32_20190306.pth --handler waveglow_handler.py\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt\n+    ```\n+  * Response :\n+  ```text\n+    [Audio file generated successfully at /tmp/audio.wav]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f19269bff69bce3c8b9d39b9ea8b3e2870b8a4"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4Mjk3MQ==", "bodyText": "Done.", "url": "https://github.com/pytorch/serve/pull/258#discussion_r420282971", "createdAt": "2020-05-05T17:28:51Z", "author": {"login": "harshbafna"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Download the checkpoint for NVIDIA WaveGlow model :\n+ \n+    ```bash\n+   wget https://api.ngc.nvidia.com/v2/models/nvidia/waveglowpyt_fp32/versions/1/files/nvidia_waveglowpyt_fp32_20190306.pth \n+   ```\n+\n+ * Create a torch model archive using the torch-model-archiver utility to archive the above files.\n+ \n+    ```bash\n+    torch-model-archiver --model-name waveglow_synthesizer --version 1.0 --model-file waveglow_model.py --serialized-file nvidia_waveglowpyt_fp32_20190306.pth --handler waveglow_handler.py\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt\n+    ```\n+  * Response :\n+  ```text\n+    [Audio file generated successfully at /tmp/audio.wav]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU0NTAzNw=="}, "originalCommit": {"oid": "c9f19269bff69bce3c8b9d39b9ea8b3e2870b8a4"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjA1MTYxOnYy", "diffSide": "RIGHT", "path": "examples/text_to_speech_synthesizer/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMTo0NDozNlrOGRrcPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMTo0NDozNlrOGRrcPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE5MDcxOA==", "bodyText": "Nice!", "url": "https://github.com/pytorch/serve/pull/258#discussion_r421190718", "createdAt": "2020-05-07T01:44:36Z", "author": {"login": "mycpuorg"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Generate the model archive for waveglow speech synthesis model using following command\n+ \n+    ```bash\n+    ./create_mar.sh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "321711e8d72234e58c5e138948d5f07b916d4515"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTQxNjE3OnYy", "diffSide": "RIGHT", "path": "examples/text_to_speech_synthesizer/README.md", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwODowMjo0NVrOGTBz2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMTo0Njo0MFrOGWc0Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwNTc4Ng==", "bodyText": "@mycpuorg @harshbafna  Please provide steps for how the generated audio file will be downloaded when invoked from a remote machine or invoked by a python client application requesting the inference via the http api calls in the code.\nAlso explain if there are any limits on the size of the text that can be converted to audio. The size of audio file becomes large pretty soon, so the pipe may get broken on trying to download the generated audio file.", "url": "https://github.com/pytorch/serve/pull/258#discussion_r422605786", "createdAt": "2020-05-10T08:02:45Z", "author": {"login": "chauhang"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Generate the model archive for waveglow speech synthesis model using following command\n+ \n+    ```bash\n+    ./create_mar.sh\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt -o audio.wav", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY5MTg1MA==", "bodyText": "@chauhang : We have created this example using the checkpoint files, for tacotron and waveglow model, and the inference code used by following example provided in following PyTorch blog :\nhttps://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\nHowever, this model doesn't work properly for bigger text size as input. I have created following GH issue on NVIDIA/DeeplearningExamples repo : NVIDIA/DeepLearningExamples#497", "url": "https://github.com/pytorch/serve/pull/258#discussion_r423691850", "createdAt": "2020-05-12T12:26:55Z", "author": {"login": "harshbafna"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Generate the model archive for waveglow speech synthesis model using following command\n+ \n+    ```bash\n+    ./create_mar.sh\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt -o audio.wav", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwNTc4Ng=="}, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwNzc0MA==", "bodyText": "@harshbafna It will be good to add reference to this issue in the example readme", "url": "https://github.com/pytorch/serve/pull/258#discussion_r423907740", "createdAt": "2020-05-12T17:27:03Z", "author": {"login": "chauhang"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Generate the model archive for waveglow speech synthesis model using following command\n+ \n+    ```bash\n+    ./create_mar.sh\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt -o audio.wav", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwNTc4Ng=="}, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwOTAzMQ==", "bodyText": "@harshbafna What about the steps for downloading the audio file from python client using the TorchServe REST API? Is there any special handling needed?  It will be good to include a small python client code example", "url": "https://github.com/pytorch/serve/pull/258#discussion_r423909031", "createdAt": "2020-05-12T17:29:01Z", "author": {"login": "chauhang"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Generate the model archive for waveglow speech synthesis model using following command\n+ \n+    ```bash\n+    ./create_mar.sh\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt -o audio.wav", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwNTc4Ng=="}, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxMDUyMA==", "bodyText": "@chauhang\nJust added a sample python snippet in the ReadMe.\nRegarding the issue related to the long text size, I am planning to update the waveglow handler based on the comment provided on the the ticket", "url": "https://github.com/pytorch/serve/pull/258#discussion_r423910520", "createdAt": "2020-05-12T17:31:25Z", "author": {"login": "harshbafna"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Generate the model archive for waveglow speech synthesis model using following command\n+ \n+    ```bash\n+    ./create_mar.sh\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt -o audio.wav", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwNTc4Ng=="}, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxNDA1MQ==", "bodyText": "Regarding the limits on the size of the text that can be converted to audio :\nApart from the model limitations, the data size in request and response is governed by max_request_size and max_response_size config parameters. The default value for both the parameters is 6553500 bytes.\nThese parameters are not documented in configuration.md and will be taken up as part of fix for #204 ,where we will be updating all the config params and their respective environment variable names.", "url": "https://github.com/pytorch/serve/pull/258#discussion_r423914051", "createdAt": "2020-05-12T17:37:06Z", "author": {"login": "harshbafna"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Generate the model archive for waveglow speech synthesis model using following command\n+ \n+    ```bash\n+    ./create_mar.sh\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt -o audio.wav", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwNTc4Ng=="}, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxNTk5NQ==", "bodyText": "@chauhang : Please let us know, if we should merge this PR with documentation changes for NVIDIA/DeepLearningExamples#497 and create another ticket for tracking the enhancement of waveglow_handler based on the solution from NVIDIA/DeepLearningExamples#497", "url": "https://github.com/pytorch/serve/pull/258#discussion_r423915995", "createdAt": "2020-05-12T17:40:10Z", "author": {"login": "harshbafna"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Generate the model archive for waveglow speech synthesis model using following command\n+ \n+    ```bash\n+    ./create_mar.sh\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt -o audio.wav", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwNTc4Ng=="}, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ0MzY4Ng==", "bodyText": "@chauhang : Based on the comments on NVIDIA/DeepLearningExamples#497 we will need do additional pre-processing and post-processing in the example's custom handler. Now, this will require good amount of effort to make it work with different sizes of the text and related audio output.\nHence, as you have already indicated we will document this limitation of the waveglow example with reference to above ticket. If required, we can track this enhancement through a different ticket.", "url": "https://github.com/pytorch/serve/pull/258#discussion_r424443686", "createdAt": "2020-05-13T13:37:35Z", "author": {"login": "harshbafna"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Generate the model archive for waveglow speech synthesis model using following command\n+ \n+    ```bash\n+    ./create_mar.sh\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt -o audio.wav", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwNTc4Ng=="}, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5NDAxMA==", "bodyText": "@harshbafna This should be fine. Please describe the current limitation is the doc and then merge the PR", "url": "https://github.com/pytorch/serve/pull/258#discussion_r426194010", "createdAt": "2020-05-16T21:46:40Z", "author": {"login": "chauhang"}, "path": "examples/text_to_speech_synthesizer/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Text to speech synthesis using WaveGlow & Tacotron2 model.\n+\n+**This example works only on NVIDIA CUDA device and not on CPU**\n+\n+We have used the following Waveglow/Tacotron2 model for this example: \n+\n+https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/\n+\n+We have copied WaveGlow's model file from following github repo:\n+https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/waveglow/model.py\n+\n+\n+# Install pip dependencies using following commands\n+\n+```bash\n+pip install numpy scipy unidecode inflect\n+pip install librosa --user\n+```\n+\n+# Serve the WaveGlow speech synthesis model on TorchServe\n+\n+ * Generate the model archive for waveglow speech synthesis model using following command\n+ \n+    ```bash\n+    ./create_mar.sh\n+    ```\n+   \n+ * Register the model on TorchServe using the above model archive file and run digit recognition inference\n+   \n+    ```bash\n+    mkdir model_store\n+    mv waveglow_synthesizer.mar model_store/\n+    torchserve --start --model-store model_store --models waveglow_synthesizer.mar\n+    curl -X POST http://127.0.0.1:8080/predictions/waveglow_synthesizer -T sample_text.txt -o audio.wav", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwNTc4Ng=="}, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTQ1NDk0OnYy", "diffSide": "RIGHT", "path": "examples/text_to_speech_synthesizer/create_mar.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwODozNDo1OFrOGTCF1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzozMDoyMlrOGURZ8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxMDM4OQ==", "bodyText": "@harshbafna If the torch-model-archiver is not installed, there is no error message thrown, the scripts ends silently without any .mar file. Will be better to throw and error for user in this case", "url": "https://github.com/pytorch/serve/pull/258#discussion_r422610389", "createdAt": "2020-05-10T08:34:58Z", "author": {"login": "chauhang"}, "path": "examples/text_to_speech_synthesizer/create_mar.sh", "diffHunk": "@@ -0,0 +1,15 @@\n+cd /tmp\n+rm torchhub.zip\n+wget https://github.com/nvidia/DeepLearningExamples/archive/torchhub.zip\n+rm -rf DeepLearningExamples-torchhub\n+unzip torchhub.zip\n+cd -\n+rm tacotron.zip\n+rm -rf PyTorch\n+mkdir -p PyTorch/SpeechSynthesis\n+cp -r /tmp/DeepLearningExamples-torchhub/PyTorch/SpeechSynthesis/* PyTorch/SpeechSynthesis/\n+zip -r tacotron.zip PyTorch\n+wget https://api.ngc.nvidia.com/v2/models/nvidia/tacotron2pyt_fp32/versions/1/files/nvidia_tacotron2pyt_fp32_20190306.pth\n+wget wget https://api.ngc.nvidia.com/v2/models/nvidia/waveglowpyt_fp32/versions/1/files/nvidia_waveglowpyt_fp32_20190306.pth\n+torch-model-archiver --model-name waveglow_synthesizer --version 1.0 --model-file waveglow_model.py --serialized-file nvidia_waveglowpyt_fp32_20190306.pth --handler waveglow_handler.py --extra-files tacotron.zip,nvidia_tacotron2pyt_fp32_20190306.pth", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwOTg3Mg==", "bodyText": "Done. Added pipefail in the shell script.", "url": "https://github.com/pytorch/serve/pull/258#discussion_r423909872", "createdAt": "2020-05-12T17:30:22Z", "author": {"login": "harshbafna"}, "path": "examples/text_to_speech_synthesizer/create_mar.sh", "diffHunk": "@@ -0,0 +1,15 @@\n+cd /tmp\n+rm torchhub.zip\n+wget https://github.com/nvidia/DeepLearningExamples/archive/torchhub.zip\n+rm -rf DeepLearningExamples-torchhub\n+unzip torchhub.zip\n+cd -\n+rm tacotron.zip\n+rm -rf PyTorch\n+mkdir -p PyTorch/SpeechSynthesis\n+cp -r /tmp/DeepLearningExamples-torchhub/PyTorch/SpeechSynthesis/* PyTorch/SpeechSynthesis/\n+zip -r tacotron.zip PyTorch\n+wget https://api.ngc.nvidia.com/v2/models/nvidia/tacotron2pyt_fp32/versions/1/files/nvidia_tacotron2pyt_fp32_20190306.pth\n+wget wget https://api.ngc.nvidia.com/v2/models/nvidia/waveglowpyt_fp32/versions/1/files/nvidia_waveglowpyt_fp32_20190306.pth\n+torch-model-archiver --model-name waveglow_synthesizer --version 1.0 --model-file waveglow_model.py --serialized-file nvidia_waveglowpyt_fp32_20190306.pth --handler waveglow_handler.py --extra-files tacotron.zip,nvidia_tacotron2pyt_fp32_20190306.pth", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxMDM4OQ=="}, "originalCommit": {"oid": "91ff4a59a7de5bbb2c3be004b82bdbaf0770d71e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTgwMzg3OnYy", "diffSide": "RIGHT", "path": "examples/text_to_speech_synthesizer/waveglow_handler.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzoyNDoxNFrOGURLKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzoyNjoyOVrOGURQWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwNjA4OQ==", "bodyText": "@harshbafna Can you please explain the purpose of this?", "url": "https://github.com/pytorch/serve/pull/258#discussion_r423906089", "createdAt": "2020-05-12T17:24:14Z", "author": {"login": "chauhang"}, "path": "examples/text_to_speech_synthesizer/waveglow_handler.py", "diffHunk": "@@ -62,6 +62,7 @@ def initialize(self, ctx):\n         waveglow_config = waveglow_checkpoint['config']\n         self.waveglow_model = WaveGlow(**waveglow_config)\n         self.waveglow_model.load_state_dict(waveglow_state_dict)\n+        self.waveglow_model = self.waveglow_model.remove_weightnorm(self.waveglow_model)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff90b9df5a2785f5039b4eafe40ead451b642993"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwNzQxNw==", "bodyText": "@chauhang : This has been taken up from example in : https://pytorch.org/hub/nvidia_deeplearningexamples_waveglow/", "url": "https://github.com/pytorch/serve/pull/258#discussion_r423907417", "createdAt": "2020-05-12T17:26:29Z", "author": {"login": "harshbafna"}, "path": "examples/text_to_speech_synthesizer/waveglow_handler.py", "diffHunk": "@@ -62,6 +62,7 @@ def initialize(self, ctx):\n         waveglow_config = waveglow_checkpoint['config']\n         self.waveglow_model = WaveGlow(**waveglow_config)\n         self.waveglow_model.load_state_dict(waveglow_state_dict)\n+        self.waveglow_model = self.waveglow_model.remove_weightnorm(self.waveglow_model)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwNjA4OQ=="}, "originalCommit": {"oid": "ff90b9df5a2785f5039b4eafe40ead451b642993"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1610, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}