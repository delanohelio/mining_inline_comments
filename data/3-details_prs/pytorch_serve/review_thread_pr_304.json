{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzOTgyOTA4", "number": 304, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzo0NDowNFrOD6E_2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozMzo1NlrOD6WYow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjI1ODgxOnYy", "diffSide": "RIGHT", "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzo0NDowNFrOGRtUHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzo0NDowNFrOGRtUHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMTQwNQ==", "bodyText": "Can we add negative and edge cases for this?", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421221405", "createdAt": "2020-05-07T03:44:04Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -1244,4 +1247,43 @@ private void testMetricManager() throws JsonParseException, InterruptedException\n             }\n         }\n     }\n+\n+    private void testTSPortRange()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fef31270fe70b3a1439660c206895c2621d6bc71"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDg3ODIyOnYy", "diffSide": "LEFT", "path": "frontend/server/src/test/resources/config.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjozMTo0MVrOGSGuIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozNTozMFrOGSJEkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzNzY2Ng==", "bodyText": "Why are we removing this?", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421637666", "createdAt": "2020-05-07T16:31:41Z", "author": {"login": "vdantu"}, "path": "frontend/server/src/test/resources/config.properties", "diffHunk": "@@ -25,7 +25,6 @@ certificate_file=src/test/resources/certs.pem\n # max_response_size=6553500\n max_request_size=10485760\n # blacklist_env_vars=.*USERNAME.*|.*PASSWORD.*\n-# enable_env_vars_config=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1MjI2Ng==", "bodyText": "The variable name is incorrect. The correct one is already uncommented and in use in line no: 29 below.", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421652266", "createdAt": "2020-05-07T16:55:19Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/test/resources/config.properties", "diffHunk": "@@ -25,7 +25,6 @@ certificate_file=src/test/resources/certs.pem\n # max_response_size=6553500\n max_request_size=10485760\n # blacklist_env_vars=.*USERNAME.*|.*PASSWORD.*\n-# enable_env_vars_config=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzNzY2Ng=="}, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NjE3OA==", "bodyText": "Oh. Ok. Good catch.", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421676178", "createdAt": "2020-05-07T17:35:30Z", "author": {"login": "vdantu"}, "path": "frontend/server/src/test/resources/config.properties", "diffHunk": "@@ -25,7 +25,6 @@ certificate_file=src/test/resources/certs.pem\n # max_response_size=6553500\n max_request_size=10485760\n # blacklist_env_vars=.*USERNAME.*|.*PASSWORD.*\n-# enable_env_vars_config=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzNzY2Ng=="}, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDg4ODUxOnYy", "diffSide": "RIGHT", "path": "frontend/server/src/test/resources/config_invalid_port.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjozNDozNFrOGSG08w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjozNDozNFrOGSG08w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzOTQxMQ==", "bodyText": "We can remove the commented properties in test configurations.", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421639411", "createdAt": "2020-05-07T16:34:34Z", "author": {"login": "vdantu"}, "path": "frontend/server/src/test/resources/config_invalid_port.properties", "diffHunk": "@@ -0,0 +1,5 @@\n+inference_address=https://127.0.0.1:65536\n+management_address=unix:/tmp/management.sock\n+# model_server_home=../..", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDg5MDQ4OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/test/resources/config_invalid_port.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjozNTowN1rOGSG2Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjozNTowN1rOGSG2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzOTczNA==", "bodyText": "Do we need inference_address to be true? The configuration seems to be set in the properties file itself.", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421639734", "createdAt": "2020-05-07T16:35:07Z", "author": {"login": "vdantu"}, "path": "frontend/server/src/test/resources/config_invalid_port.properties", "diffHunk": "@@ -0,0 +1,5 @@\n+inference_address=https://127.0.0.1:65536\n+management_address=unix:/tmp/management.sock\n+# model_server_home=../..\n+model_store=../modelarchive/src/test/resources/models\n+enable_envvars_config=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDg5NzQyOnYy", "diffSide": "RIGHT", "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjozNjo1OVrOGSG6qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzo0MToxM1rOGSJSAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY0MDg3Mw==", "bodyText": "I am curious to know what this file is, that we are deleting.", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421640873", "createdAt": "2020-05-07T16:36:59Z", "author": {"login": "vdantu"}, "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -1244,4 +1248,65 @@ private void testMetricManager() throws JsonParseException, InterruptedException\n             }\n         }\n     }\n+\n+    private void testTSValidPort()\n+            throws InterruptedException, GeneralSecurityException, InvalidSnapshotException,\n+                    IOException {\n+        //  test case for verifying port range refer https://github.com/pytorch/serve/issues/291\n+        server.stop();\n+        System.setProperty(\"tsConfigFile\", \"src/test/resources/config_port.properties\");\n+        FileUtils.deleteQuietly(new File(System.getProperty(\"LOG_LOCATION\"), \"config\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1MTg1NA==", "bodyText": "Due to snapshot feature, the first preference will be given to last available snapshot file instead of the properties file set in the system properties. Thus cleaning up the generated snapshot before restart.", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421651854", "createdAt": "2020-05-07T16:54:37Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -1244,4 +1248,65 @@ private void testMetricManager() throws JsonParseException, InterruptedException\n             }\n         }\n     }\n+\n+    private void testTSValidPort()\n+            throws InterruptedException, GeneralSecurityException, InvalidSnapshotException,\n+                    IOException {\n+        //  test case for verifying port range refer https://github.com/pytorch/serve/issues/291\n+        server.stop();\n+        System.setProperty(\"tsConfigFile\", \"src/test/resources/config_port.properties\");\n+        FileUtils.deleteQuietly(new File(System.getProperty(\"LOG_LOCATION\"), \"config\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY0MDg3Mw=="}, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3Mzg1Ng==", "bodyText": "Why is snapshot given a preference over the runtime configuration? Whats the order of preference for this?", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421673856", "createdAt": "2020-05-07T17:31:28Z", "author": {"login": "vdantu"}, "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -1244,4 +1248,65 @@ private void testMetricManager() throws JsonParseException, InterruptedException\n             }\n         }\n     }\n+\n+    private void testTSValidPort()\n+            throws InterruptedException, GeneralSecurityException, InvalidSnapshotException,\n+                    IOException {\n+        //  test case for verifying port range refer https://github.com/pytorch/serve/issues/291\n+        server.stop();\n+        System.setProperty(\"tsConfigFile\", \"src/test/resources/config_port.properties\");\n+        FileUtils.deleteQuietly(new File(System.getProperty(\"LOG_LOCATION\"), \"config\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY0MDg3Mw=="}, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3OTYxOQ==", "bodyText": "The preference order for properties file is as follows :\n\nSystem environment\nCommand line argument\nLast snapshot\nJava System Property.", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421679619", "createdAt": "2020-05-07T17:41:13Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -1244,4 +1248,65 @@ private void testMetricManager() throws JsonParseException, InterruptedException\n             }\n         }\n     }\n+\n+    private void testTSValidPort()\n+            throws InterruptedException, GeneralSecurityException, InvalidSnapshotException,\n+                    IOException {\n+        //  test case for verifying port range refer https://github.com/pytorch/serve/issues/291\n+        server.stop();\n+        System.setProperty(\"tsConfigFile\", \"src/test/resources/config_port.properties\");\n+        FileUtils.deleteQuietly(new File(System.getProperty(\"LOG_LOCATION\"), \"config\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY0MDg3Mw=="}, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTEwNzU1OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozMzo1NlrOGSJBJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzo0NToxOFrOGSJbpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NTMwMw==", "bodyText": "I was thinking about this test a little more. Since this test is only testing hte JAVA code path, couldn't we simply modify the TS_INFERENCE_ADDRESS property in ConfigManager and restart the server? Do we need this additional config.properties file?", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421675303", "createdAt": "2020-05-07T17:33:56Z", "author": {"login": "vdantu"}, "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -1244,4 +1248,65 @@ private void testMetricManager() throws JsonParseException, InterruptedException\n             }\n         }\n     }\n+\n+    private void testTSValidPort()\n+            throws InterruptedException, GeneralSecurityException, InvalidSnapshotException,\n+                    IOException {\n+        //  test case for verifying port range refer https://github.com/pytorch/serve/issues/291\n+        server.stop();\n+        System.setProperty(\"tsConfigFile\", \"src/test/resources/config_port.properties\");\n+        FileUtils.deleteQuietly(new File(System.getProperty(\"LOG_LOCATION\"), \"config\"));\n+        ConfigManager.init(new ConfigManager.Arguments());\n+        configManager = ConfigManager.getInstance();\n+        PluginsManager.getInstance().initialize();\n+\n+        InternalLoggerFactory.setDefaultFactory(Slf4JLoggerFactory.INSTANCE);\n+        server = new ModelServer(configManager);\n+        server.start();\n+\n+        Channel channel = null;\n+        Channel managementChannel = null;\n+        for (int i = 0; i < 5; ++i) {\n+            channel = TestUtils.connect(false, configManager);\n+            if (channel != null) {\n+                break;\n+            }\n+            Thread.sleep(100);\n+        }\n+\n+        for (int i = 0; i < 5; ++i) {\n+            managementChannel = TestUtils.connect(true, configManager);\n+            if (managementChannel != null) {\n+                break;\n+            }\n+            Thread.sleep(100);\n+        }\n+\n+        Assert.assertNotNull(channel, \"Failed to connect to inference port.\");\n+        Assert.assertNotNull(managementChannel, \"Failed to connect to management port.\");\n+\n+        testPing(channel);\n+    }\n+\n+    private void testTSInvalidPort()\n+            throws InterruptedException, GeneralSecurityException, InvalidSnapshotException,\n+                    IOException {\n+        //  test case for verifying port range refer https://github.com/pytorch/serve/issues/291\n+        //  invalid port test\n+        server.stop();\n+        System.setProperty(\"tsConfigFile\", \"src/test/resources/config_invalid_port.properties\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MjA4NA==", "bodyText": "+1\nThis is a much simpler approach. Thanks.", "url": "https://github.com/pytorch/serve/pull/304#discussion_r421682084", "createdAt": "2020-05-07T17:45:18Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -1244,4 +1248,65 @@ private void testMetricManager() throws JsonParseException, InterruptedException\n             }\n         }\n     }\n+\n+    private void testTSValidPort()\n+            throws InterruptedException, GeneralSecurityException, InvalidSnapshotException,\n+                    IOException {\n+        //  test case for verifying port range refer https://github.com/pytorch/serve/issues/291\n+        server.stop();\n+        System.setProperty(\"tsConfigFile\", \"src/test/resources/config_port.properties\");\n+        FileUtils.deleteQuietly(new File(System.getProperty(\"LOG_LOCATION\"), \"config\"));\n+        ConfigManager.init(new ConfigManager.Arguments());\n+        configManager = ConfigManager.getInstance();\n+        PluginsManager.getInstance().initialize();\n+\n+        InternalLoggerFactory.setDefaultFactory(Slf4JLoggerFactory.INSTANCE);\n+        server = new ModelServer(configManager);\n+        server.start();\n+\n+        Channel channel = null;\n+        Channel managementChannel = null;\n+        for (int i = 0; i < 5; ++i) {\n+            channel = TestUtils.connect(false, configManager);\n+            if (channel != null) {\n+                break;\n+            }\n+            Thread.sleep(100);\n+        }\n+\n+        for (int i = 0; i < 5; ++i) {\n+            managementChannel = TestUtils.connect(true, configManager);\n+            if (managementChannel != null) {\n+                break;\n+            }\n+            Thread.sleep(100);\n+        }\n+\n+        Assert.assertNotNull(channel, \"Failed to connect to inference port.\");\n+        Assert.assertNotNull(managementChannel, \"Failed to connect to management port.\");\n+\n+        testPing(channel);\n+    }\n+\n+    private void testTSInvalidPort()\n+            throws InterruptedException, GeneralSecurityException, InvalidSnapshotException,\n+                    IOException {\n+        //  test case for verifying port range refer https://github.com/pytorch/serve/issues/291\n+        //  invalid port test\n+        server.stop();\n+        System.setProperty(\"tsConfigFile\", \"src/test/resources/config_invalid_port.properties\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NTMwMw=="}, "originalCommit": {"oid": "ecfd86c51295db13cb461828f6c50c70b3a9447d"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1637, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}