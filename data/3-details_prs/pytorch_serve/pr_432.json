{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3ODAzNjA3", "number": 432, "title": "Refactor base and default handlers and restructure custom handler doc", "bodyText": "Description\n\n\nEnhanced image classifier default handler\n\nadded support for the setter and getter method to specify topk classes to be returned in the response. [default value for topk is 5]\nIf the model itself has less than 5 classes to classify then the output will now contain scores for all the classes.\nUser can now specify the number of classes to be returned in response via newly added setter api if custom handler is extending from this image classifier handler\n\n\n\nCode reusability - Mnist and Resnet-152 custom handlers have been modified to demonstrate the use of extending image_classifier default handler. A similar request was there in #414\n\nThis enables users to just add their custom preprocessing, postprocessing of inference logic with ease.\n\n\n\nUpdated required doc custome_service.md\n\n\nRemoved 'examples/text_classification/Transformers_README.md' as its not relevant.\n\n\nFixes #411 #381\nNote: mnist and resent-152-batch mar file need to be updated on S3 once this PR is merged.\nType of change\nPlease delete options that are not relevant.\n\n Bug fix (non-breaking change which fixes an issue)\n\nFeature/Issue validation/testing\nCreate mar file for mnist and resnet-152 batch inferencing.\nCtart torchserve and register these models.\n\n\n Test A: Run inference request for mnist model\n\n\n Test B: Run inference request for resnet-152 model\n\n\n Test C: Custom handler to return top 7 classes from image classifier, create a squeezenet1_1 mar using below custom handler . Run inference  and observe probability of 7 classes returned.\ncustom_handler.txt\n\n\nLogs\n\n\nmnist_custom_handler_log_output.txt\nresenet-152-custom_handler_log_output.txt\ncustom_handler_log_output.txt\nChecklist:\n\n Have you added tests that prove your fix is effective or that this feature works?\n New and existing unit tests pass locally with these changes?\n Has code been commented, particularly in hard-to-understand areas?\n Have you made corresponding changes to the documentation?", "createdAt": "2020-06-04T12:33:05Z", "url": "https://github.com/pytorch/serve/pull/432", "merged": true, "mergeCommit": {"oid": "4a67a4344b46b57a29b77f82e44e0c023d57c69e"}, "closed": true, "closedAt": "2020-08-06T19:04:03Z", "author": {"login": "shivamshriwas"}, "timelineItems": {"totalCount": 72, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn4AO6AH2gAyNDI3ODAzNjA3OmRiYmVmOTI5OWMzODUzZjI2OWE1NWFiMGRmMmY2NDAwMDQ5YmRlOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8UQQqAFqTQ2Mjc3OTg1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dbbef9299c3853f269a55ab0df2f6400049bde92", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/dbbef9299c3853f269a55ab0df2f6400049bde92", "committedDate": "2020-06-04T06:24:04Z", "message": "- updated image classifier default handler\n- updated custom resnet and mnist handlers\n- update docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6e69a5d40834c19a750f0c470a7daf6b8e2f444", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/c6e69a5d40834c19a750f0c470a7daf6b8e2f444", "committedDate": "2020-06-04T09:34:49Z", "message": "documentation update\n- removed stale Transformer_readme.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35d0813100b52c6cc6ff09b95be5a1c802122425", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/35d0813100b52c6cc6ff09b95be5a1c802122425", "committedDate": "2020-06-04T11:42:33Z", "message": "updated docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b193fbb3c6ff5e1771c9633f2f660906c724d3de", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/b193fbb3c6ff5e1771c9633f2f660906c724d3de", "committedDate": "2020-06-08T13:54:13Z", "message": "Merge branch 'staging_0_1_1' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94c6851f4fe27a556e7a6d75920439b8159d7935", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/94c6851f4fe27a556e7a6d75920439b8159d7935", "committedDate": "2020-06-10T03:04:12Z", "message": "Merge branch 'staging_0_1_1' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5929cde1f651e363b3517d14b5b6861eb2e31c75", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/5929cde1f651e363b3517d14b5b6861eb2e31c75", "committedDate": "2020-06-11T06:08:50Z", "message": "merged master branch, resolved conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3abffbfe886aa5f9b78979b7cd3fdf32d06c450a", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/3abffbfe886aa5f9b78979b7cd3fdf32d06c450a", "committedDate": "2020-06-15T18:15:55Z", "message": "Doc restructure and code fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "270c7cedff35e2c839f79f52f980a34d976a0d24", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/270c7cedff35e2c839f79f52f980a34d976a0d24", "committedDate": "2020-06-15T18:23:40Z", "message": "Updated example as per fix in default handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38488506e65ddc2ac5ef65b94bf1594022f80788", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/38488506e65ddc2ac5ef65b94bf1594022f80788", "committedDate": "2020-06-16T05:49:31Z", "message": "Enhanced base and custom handler examples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd6722e47fb1dc203ed3cb7d9611c11fd5030ca", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/8cd6722e47fb1dc203ed3cb7d9611c11fd5030ca", "committedDate": "2020-06-16T15:07:48Z", "message": "Missing checking for manifest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/0012ffc23af828493da1b9bfc145c4bea2894f59", "committedDate": "2020-06-16T17:09:27Z", "message": "Fixed some typos"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDM4MDgx", "url": "https://github.com/pytorch/serve/pull/432#pullrequestreview-433438081", "createdAt": "2020-06-18T16:10:54Z", "commit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjoxMDo1NFrOGl2a5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo0Mjo0NFrOGl3pAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0MjExOQ==", "bodyText": "Much of the initialize code seems to replicate what's in BaseHandler -- e.g. loading the model, pushing it to a device, etc. Could you call super().initialize(ctx) before adding in the rest?\nAs a side note, we should probably standardize a way to customize the handlers' behavior.", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442342119", "createdAt": "2020-06-18T16:10:54Z", "author": {"login": "htappen"}, "path": "examples/Huggingface_Transformers/Transformer_handler_generalized.py", "diffHunk": "@@ -142,27 +141,3 @@ def inference(self, inputs):\n             logger.info(\"Model predicted: '%s'\", prediction)\n \n         return [prediction]\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0MjY1Ng==", "bodyText": "Much improved! Thank you!", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442342656", "createdAt": "2020-06-18T16:11:45Z", "author": {"login": "htappen"}, "path": "examples/image_classifier/mnist/mnist_handler.py", "diffHunk": "@@ -1,55 +1,23 @@\n import io\n-import logging\n-import numpy as np\n-import os\n-import torch\n+\n from PIL import Image\n-from torch.autograd import Variable\n from torchvision import transforms\n \n-logger = logging.getLogger(__name__)\n+from ts.torch_handler.image_classifier import ImageClassifier\n \n \n-class MNISTDigitClassifier(object):\n-    \"\"\"\n-    MNISTDigitClassifier handler class. This handler takes a greyscale image\n-    and returns the digit in that image.\n+class MNISTDigitClassifier(ImageClassifier):\n     \"\"\"\n+    MNISTDigitClassifier handler class. This handler extends class ImageClassifier from image_classifier.py, a\n+    default handler. This handler takes an image and returns the number in that image.\n \n-    def __init__(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0NTQyMw==", "bodyText": "This can be part of another change, but it would be good to refactor BaseHandler to handle batching in preprocess & inference. I would suggest we make the assumption that all models used (speaking of the torch.nn.Module) support batch inputs, and offer an opt-out option to those that can;t.", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442345423", "createdAt": "2020-06-18T16:16:07Z", "author": {"login": "htappen"}, "path": "examples/image_classifier/resnet_152_batch/resnet152_handler.py", "diffHunk": "@@ -1,93 +1,25 @@\n-import io\n-import logging\n-import numpy as np\n-import os\n import torch\n-from PIL import Image\n-from torch.autograd import Variable\n-from torchvision import transforms\n \n-logger = logging.getLogger(__name__)\n+from ts.torch_handler.image_classifier import ImageClassifier\n \n \n-class BatchImageClassifier(object):\n+class BatchImageClassifier(ImageClassifier):\n     \"\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0ODIxNA==", "bodyText": "Similar story here with initialize: can we defer the basic model loading to super().initialize()?", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442348214", "createdAt": "2020-06-18T16:20:29Z", "author": {"login": "htappen"}, "path": "examples/text_to_speech_synthesizer/waveglow_handler.py", "diffHunk": "@@ -6,11 +6,12 @@\n import zipfile\n from waveglow_model import WaveGlow\n from scipy.io.wavfile import write, read\n+from ts.torch_handler.base_handler import BaseHandler\n \n logger = logging.getLogger(__name__)\n \n \n-class WaveGlowSpeechSynthesizer(object):\n+class WaveGlowSpeechSynthesizer(BaseHandler):\n \n     def __init__(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0ODU4Ng==", "bodyText": "Are you going to remove this code?", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442348586", "createdAt": "2020-06-18T16:21:06Z", "author": {"login": "htappen"}, "path": "ts/model_loader.py", "diffHunk": "@@ -115,16 +114,18 @@ def load(self, model_name, model_dir, handler, gpu_id, batch_size):\n             service = Service(model_name, model_dir, manifest, model_service.handle, gpu_id, batch_size)\n             initialize = getattr(model_service, \"initialize\")\n             if initialize is not None:\n-                # noinspection PyBroadException\n-                try:\n-                    model_service.initialize(service.context)\n+                # # noinspection PyBroadException\n+                # try:\n+                model_service.initialize(service.context)\n                     # pylint: disable=broad-except\n-                except Exception:\n-                    # noinspection PyBroadException\n-                    try:\n-                        sys.exc_clear()\n-                        # pylint: disable=broad-except\n-                    except Exception:\n-                        pass\n+                # except Exception:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1Mjg3OQ==", "bodyText": "Will this even work in any cases without preprocessing being overridden? self.model will need a torch.Tensor in the next step.\nThe goal should be to minimize the number of methods a user has to override, and for the purpose of each override to be crystal clear. In order to do that, BaseHandler needs to have a clean, obvious implementation that could function if the model doesn't need special preprocessing. Check out https://github.com/htappen/serve/blob/master/ts/torch_handler/base_handler.py#L144 -- that implements a pipeline of these steps:\n\nPreprocess: convert from list to Tensor\nInference: run model, accepting a Tensor and returning a Tensor\nPostprocess: convert from Tensor back to list", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442352879", "createdAt": "2020-06-18T16:27:59Z", "author": {"login": "htappen"}, "path": "ts/torch_handler/base_handler.py", "diffHunk": "@@ -77,14 +77,40 @@ def initialize(self, ctx):\n \n         self.initialized = True\n \n-    @abc.abstractmethod\n     def preprocess(self, data):\n-        pass\n+        \"\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1Mzk4Ng==", "bodyText": "Do you still need this override, or can this functionality be moved into BaseHandler? It seems generic to any forward pass.", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442353986", "createdAt": "2020-06-18T16:29:43Z", "author": {"login": "htappen"}, "path": "ts/torch_handler/image_classifier.py", "diffHunk": "@@ -39,24 +47,34 @@ def preprocess(self, data):\n         ])\n         image = Image.open(io.BytesIO(image))\n         image = my_preprocess(image)\n+\n+        # Convert 2D image to 1D vector\n+        image = image.unsqueeze(0)\n+\n         return image\n \n     def inference(self, data):\n         ''' Predict the class (or classes) of an image using a trained deep learning model.\n         '''\n-        # Convert 2D image to 1D vector\n-        topk = 5\n-        data = np.expand_dims(data, 0)\n-        data = torch.from_numpy(data)\n-\n         inputs = Variable(data).to(self.device)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1NDUxMA==", "bodyText": "Same comment as ImageClassifier: the inference override seems generic to any model pass that the code should be moved into BaseHandler.", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442354510", "createdAt": "2020-06-18T16:30:33Z", "author": {"login": "htappen"}, "path": "ts/torch_handler/image_segmenter.py", "diffHunk": "@@ -47,26 +47,3 @@ def inference(self, data):\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1NjYwMA==", "bodyText": "The inference override should be removed. First, these lines are generic to any model serving and should be moved to BaseHandler:\ninputs = Variable(data).to(self.device)\noutput = self.model.forward(inputs, torch.tensor([0]).to(self.device))\nNext, these bits should be in postprocess:\noutput = output.argmax(1).item() + 1\nif self.mapping:\n    output = self.mapping[str(output)]\nThe conditional should also be in BaseHandler.", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442356600", "createdAt": "2020-06-18T16:33:52Z", "author": {"login": "htappen"}, "path": "ts/torch_handler/text_classifier.py", "diffHunk": "@@ -61,26 +61,3 @@ def inference(self, data):\n \n     def postprocess(self, data):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1ODU3OA==", "bodyText": "The inference code here is generic to all models and should move to BaseHandler.", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442358578", "createdAt": "2020-06-18T16:37:19Z", "author": {"login": "htappen"}, "path": "ts/torch_handler/image_segmenter.py", "diffHunk": "@@ -47,26 +47,3 @@ def inference(self, data):\n \n     def postprocess(self, data):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1OTEzMQ==", "bodyText": "This lookup of classes seems generic to ANY classifier model. Consider moving it into BaseHandler. See https://github.com/htappen/serve/blob/master/ts/torch_handler/base_handler.py#L107 for an example.", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442359131", "createdAt": "2020-06-18T16:38:09Z", "author": {"login": "htappen"}, "path": "ts/torch_handler/image_classifier.py", "diffHunk": "@@ -39,24 +47,34 @@ def preprocess(self, data):\n         ])\n         image = Image.open(io.BytesIO(image))\n         image = my_preprocess(image)\n+\n+        # Convert 2D image to 1D vector\n+        image = image.unsqueeze(0)\n+\n         return image\n \n     def inference(self, data):\n         ''' Predict the class (or classes) of an image using a trained deep learning model.\n         '''\n-        # Convert 2D image to 1D vector\n-        topk = 5\n-        data = np.expand_dims(data, 0)\n-        data = torch.from_numpy(data)\n-\n         inputs = Variable(data).to(self.device)\n         outputs = self.model.forward(inputs)\n+        return outputs\n \n-        ps = F.softmax(outputs, dim=1)\n-        topk = getattr(ps, self.device.type)().topk(topk)\n+    def postprocess(self, data):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2MTE3Mw==", "bodyText": "The interface (a) is still unclear and (b) requires an override almost always of pre- and post-process. Instead, provide a default implementation that clarifies what a developer should do in each step AND could work without any of the other steps being overridden.\nHow about this interface?\n\npreprocess: accepts list, returns Tensor\ninference: accepts Tensor, returns Tensor\npostprocess: accepts Tensor, returns list\n\nSee https://github.com/htappen/serve/blob/master/ts/torch_handler/base_handler.py#L144", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442361173", "createdAt": "2020-06-18T16:41:29Z", "author": {"login": "htappen"}, "path": "ts/torch_handler/base_handler.py", "diffHunk": "@@ -77,14 +77,40 @@ def initialize(self, ctx):\n \n         self.initialized = True\n \n-    @abc.abstractmethod\n     def preprocess(self, data):\n-        pass\n+        \"\"\"\n+        Override to customize the pre-processing\n+        :param data: input data\n+        :return: input data\n+        \"\"\"\n+        return data\n \n-    @abc.abstractmethod\n     def inference(self, data):\n-        pass\n+        \"\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2MTM4OQ==", "bodyText": "Do you plan to remove this code?", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442361389", "createdAt": "2020-06-18T16:41:49Z", "author": {"login": "htappen"}, "path": "ts/model_loader.py", "diffHunk": "@@ -115,16 +114,18 @@ def load(self, model_name, model_dir, handler, gpu_id, batch_size):\n             service = Service(model_name, model_dir, manifest, model_service.handle, gpu_id, batch_size)\n             initialize = getattr(model_service, \"initialize\")\n             if initialize is not None:\n-                # noinspection PyBroadException\n-                try:\n-                    model_service.initialize(service.context)\n+                # # noinspection PyBroadException\n+                # try:\n+                model_service.initialize(service.context)\n                     # pylint: disable=broad-except\n-                except Exception:\n-                    # noinspection PyBroadException\n-                    try:\n-                        sys.exc_clear()\n-                        # pylint: disable=broad-except\n-                    except Exception:\n-                        pass\n+                # except Exception:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2MjExNQ==", "bodyText": "Some of the code in initialize duplicates what's in BaseHandler. Call super().initialize(context) instead of repeating the same code about loading models.", "url": "https://github.com/pytorch/serve/pull/432#discussion_r442362115", "createdAt": "2020-06-18T16:42:44Z", "author": {"login": "htappen"}, "path": "examples/text_to_speech_synthesizer/waveglow_handler.py", "diffHunk": "@@ -101,20 +102,3 @@ def postprocess(self, inference_output):\n             data = output.read()\n         os.remove(path)\n         return [data]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0012ffc23af828493da1b9bfc145c4bea2894f59"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0d9d26956d0c6c066e3aa0102bfdfea8c5f1ea1", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/e0d9d26956d0c6c066e3aa0102bfdfea8c5f1ea1", "committedDate": "2020-06-23T09:57:03Z", "message": "Removed commented code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfed825ff1c86a472cb4173c90a350ba5589e926", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/bfed825ff1c86a472cb4173c90a350ba5589e926", "committedDate": "2020-07-06T12:16:33Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6f5e5480124dd0df92e137a29d6a9e1e4d54a3a", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/b6f5e5480124dd0df92e137a29d6a9e1e4d54a3a", "committedDate": "2020-07-07T06:33:28Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0982cecab6dc5ca3512669aa3b792ba5fbe1e9cf", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/0982cecab6dc5ca3512669aa3b792ba5fbe1e9cf", "committedDate": "2020-07-07T13:23:35Z", "message": "Refactor BaseHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c9acb4a8b6d0b7bea2f1f2a825f2d842e3655b0", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/5c9acb4a8b6d0b7bea2f1f2a825f2d842e3655b0", "committedDate": "2020-07-07T14:19:30Z", "message": "Adding in unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cfe6199f1ec3ac72f69f494ecc5c59d70b6843b", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/3cfe6199f1ec3ac72f69f494ecc5c59d70b6843b", "committedDate": "2020-07-07T14:24:16Z", "message": "Fixed gitignore in this branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5aadbc706c0ab65eb1b8ada0cc721446ced5bc5", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/c5aadbc706c0ab65eb1b8ada0cc721446ced5bc5", "committedDate": "2020-07-07T16:52:28Z", "message": "Fix a bug with Image Segmenter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd2b428920e12e57bbe5f63fc87cbd2e8ca4869f", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/fd2b428920e12e57bbe5f63fc87cbd2e8ca4869f", "committedDate": "2020-07-07T19:14:48Z", "message": "Updated Object Detector to reuse functionality; consistency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ebbd9fd9441e0c6cace142cc19aad2cc46190f3", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/5ebbd9fd9441e0c6cace142cc19aad2cc46190f3", "committedDate": "2020-07-08T00:26:33Z", "message": "Fix pylint errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61d447117e21bb942aec0b7a6ceb72e329385cbe", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/61d447117e21bb942aec0b7a6ceb72e329385cbe", "committedDate": "2020-07-08T02:25:46Z", "message": "Backwards compat for index_names.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b7743c558652a240963a1e1dda804be7014a4b4", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/7b7743c558652a240963a1e1dda804be7014a4b4", "committedDate": "2020-07-08T04:52:27Z", "message": "Fixed Image Segmenter again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45ac4999fb081a97de0a3d80b2fb095e5e74b126", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/45ac4999fb081a97de0a3d80b2fb095e5e74b126", "committedDate": "2020-07-08T14:58:39Z", "message": "Made the compat layer in text actually compat."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e6619a78ef420e29fe4b83e6f26c017221663a3", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/7e6619a78ef420e29fe4b83e6f26c017221663a3", "committedDate": "2020-07-08T16:47:12Z", "message": "Removed batching from text classifier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59e7add4998d97b1cf5d9b3cfa0d046c49fb896a", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/59e7add4998d97b1cf5d9b3cfa0d046c49fb896a", "committedDate": "2020-07-09T03:58:58Z", "message": "Adding comments per review."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b90357124daa6bea47fc6161f554b92b8855f6d", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/0b90357124daa6bea47fc6161f554b92b8855f6d", "committedDate": "2020-07-09T16:39:05Z", "message": "Fixing doc feedback."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c60e08dc6c7f8dea1907b1a187452cd7202f9dc3", "author": {"user": {"login": "htappen", "name": "Henry Tappen"}}, "url": "https://github.com/pytorch/serve/commit/c60e08dc6c7f8dea1907b1a187452cd7202f9dc3", "committedDate": "2020-07-09T16:56:06Z", "message": "Updating docs about batching."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26e372a8da91690d8e5d1a25394fc90078ad34d3", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/26e372a8da91690d8e5d1a25394fc90078ad34d3", "committedDate": "2020-07-10T15:36:18Z", "message": "Merge pull request #502 from htappen/issue_411\n\nRefactor BaseHandler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMTIwOTg0", "url": "https://github.com/pytorch/serve/pull/432#pullrequestreview-451120984", "createdAt": "2020-07-19T11:01:22Z", "commit": {"oid": "26e372a8da91690d8e5d1a25394fc90078ad34d3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMTIxMTQz", "url": "https://github.com/pytorch/serve/pull/432#pullrequestreview-451121143", "createdAt": "2020-07-19T11:03:18Z", "commit": {"oid": "26e372a8da91690d8e5d1a25394fc90078ad34d3"}, "state": "DISMISSED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMTowMzoxOVrOGzunnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMToyNzowOVrOGzuwdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NDM2NQ==", "bodyText": "@shivamshriwas Is the --handler value correct? Shouldn't it be the actual file path for the handler .py file?", "url": "https://github.com/pytorch/serve/pull/432#discussion_r456894365", "createdAt": "2020-07-19T11:03:19Z", "author": {"login": "chauhang"}, "path": "examples/image_classifier/resnet_152_batch/README.md", "diffHunk": "@@ -55,7 +55,7 @@ curl http://127.0.0.1:8080/predictions/resnet152 -T ./serve/examples/image_class\n \n     ```bash\n \n-    torch-model-archiver --model-name resnet-152-batch --version 1.0  --serialized-file resnet-152-batch.pt --extra-files serve/examples/image_classifier/index_to_name.json  --handler serve/examples/image_classifier/resnet_152_batch/resnet152_handler.py\n+    torch-model-archiver --model-name resnet-152-batch --version 1.0  --serialized-file resnet-152-batch.pt --extra-files serve/examples/image_classifier/index_to_name.json  --handler image_classifier", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e372a8da91690d8e5d1a25394fc90078ad34d3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NDM4MA==", "bodyText": "@shivamshriwas Is the --handler value correct? Shouldn't it be the actual file path for the handler .py file", "url": "https://github.com/pytorch/serve/pull/432#discussion_r456894380", "createdAt": "2020-07-19T11:03:28Z", "author": {"login": "chauhang"}, "path": "examples/image_classifier/resnet_152_batch/README.md", "diffHunk": "@@ -3,7 +3,7 @@ Run the commands given in following steps from the parent directory of the root\n \n ```bash\n wget https://download.pytorch.org/models/resnet152-b121ed2d.pth\n-torch-model-archiver --model-name resnet-152-batch --version 1.0 --model-file ./serve/examples/image_classifier/resnet_152_batch/model.py --serialized-file resnet152-b121ed2d.pth --handler ./serve/examples/image_classifier/resnet_152_batch/resnet152_handler.py --extra-files ./serve/examples/image_classifier/index_to_name.json\n+torch-model-archiver --model-name resnet-152-batch --version 1.0 --model-file ./serve/examples/image_classifier/resnet_152_batch/model.py --serialized-file resnet152-b121ed2d.pth --handler image_classifier --extra-files ./serve/examples/image_classifier/index_to_name.json", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e372a8da91690d8e5d1a25394fc90078ad34d3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NjYyOA==", "bodyText": "@shivamshriwas Can you please clarify where the preprocess() function was overriden? I am seeing only the image_processing getting set, which is used in the VisualHandler base class as part of the preprocess() functions. Please update the comments accordingly for users to get clarity about this", "url": "https://github.com/pytorch/serve/pull/432#discussion_r456896628", "createdAt": "2020-07-19T11:27:09Z", "author": {"login": "chauhang"}, "path": "examples/image_classifier/mnist/mnist_handler.py", "diffHunk": "@@ -1,99 +1,23 @@\n import io\n-import logging\n-import numpy as np\n-import os\n-import torch\n+\n from PIL import Image\n-from torch.autograd import Variable\n from torchvision import transforms\n \n-logger = logging.getLogger(__name__)\n+from ts.torch_handler.image_classifier import ImageClassifier\n \n \n-class MNISTDigitClassifier(object):\n-    \"\"\"\n-    MNISTDigitClassifier handler class. This handler takes a greyscale image\n-    and returns the digit in that image.\n+class MNISTDigitClassifier(ImageClassifier):\n     \"\"\"\n+    MNISTDigitClassifier handler class. This handler extends class ImageClassifier from image_classifier.py, a\n+    default handler. This handler takes an image and returns the number in that image.\n \n-    def __init__(self):\n-        self.model = None\n-        self.mapping = None\n-        self.device = None\n-        self.initialized = False\n-\n-    def initialize(self, ctx):\n-        \"\"\"First try to load torchscript else load eager mode state_dict based model\"\"\"\n-\n-        properties = ctx.system_properties\n-        self.device = torch.device(\"cuda:\" + str(properties.get(\"gpu_id\")) if torch.cuda.is_available() else \"cpu\")\n-        model_dir = properties.get(\"model_dir\")\n-\n-        # Read model serialize/pt file\n-        model_pt_path = os.path.join(model_dir, \"mnist_cnn.pt\")\n-        # Read model definition file\n-        model_def_path = os.path.join(model_dir, \"mnist.py\")\n-        if not os.path.isfile(model_def_path):\n-            raise RuntimeError(\"Missing the model definition file\")\n-\n-        from mnist import Net\n-        state_dict = torch.load(model_pt_path, map_location=self.device)\n-        self.model = Net()\n-        self.model.load_state_dict(state_dict)\n-        self.model.to(self.device)\n-        self.model.eval()\n-\n-        logger.debug('Model file {0} loaded successfully'.format(model_pt_path))\n-        self.initialized = True\n-\n-    def preprocess(self, data):\n-        \"\"\"\n-         Scales, crops, and normalizes a PIL image for a MNIST model,\n-         returns an Numpy array\n-        \"\"\"\n-        image = data[0].get(\"data\")\n-        if image is None:\n-            image = data[0].get(\"body\")\n-\n-        mnist_transform = transforms.Compose([\n-            transforms.ToTensor(),\n-            transforms.Normalize((0.1307,), (0.3081,))\n-        ])\n-        image = Image.open(io.BytesIO(image))\n-        image = mnist_transform(image)\n-        return image\n-\n-    def inference(self, img, topk=5):\n-        ''' Predict the class (or classes) of an image using a trained deep learning model.\n-        '''\n-        # Convert 2D image to 1D vector\n-        img = np.expand_dims(img, 0)\n-        img = torch.from_numpy(img)\n-\n-        self.model.eval()\n-        inputs = Variable(img).to(self.device)\n-        outputs = self.model.forward(inputs)\n-\n-        _, y_hat = outputs.max(1)\n-        predicted_idx = str(y_hat.item())\n-        return [predicted_idx]\n-\n-    def postprocess(self, inference_output):\n-        return inference_output\n-\n-\n-_service = MNISTDigitClassifier()\n-\n-\n-def handle(data, context):\n-    if not _service.initialized:\n-        _service.initialize(context)\n-\n-    if data is None:\n-        return None\n+    Here methods preprocess() and postprocess() have been overridden while others are reused from parent class.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e372a8da91690d8e5d1a25394fc90078ad34d3"}, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8fff504f90eaa1fa6d3d5c3fb21080b243274b8", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/f8fff504f90eaa1fa6d3d5c3fb21080b243274b8", "committedDate": "2020-07-20T12:29:46Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTYwNTI1", "url": "https://github.com/pytorch/serve/pull/432#pullrequestreview-451560525", "createdAt": "2020-07-20T12:30:25Z", "commit": {"oid": "f8fff504f90eaa1fa6d3d5c3fb21080b243274b8"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fe011b3a18f11e07baa8afece9b506ae0734815", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/7fe011b3a18f11e07baa8afece9b506ae0734815", "committedDate": "2020-07-20T12:44:41Z", "message": "Fixed error introduced due to conflict resolution via web based merge tool"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae2ef1b17e1653d7abcb4a2fd47d721d422474b0", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/ae2ef1b17e1653d7abcb4a2fd47d721d422474b0", "committedDate": "2020-07-20T12:51:05Z", "message": "Corrected code comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42dd10cba0c85b3bcf0bf60b691c4a2aca567106", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/42dd10cba0c85b3bcf0bf60b691c4a2aca567106", "committedDate": "2020-07-21T16:54:30Z", "message": "- Updated Object detection & text classification handlers\n- updated docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20079b00ed257a20ce7fa7770a01ca8302d13b5f", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/20079b00ed257a20ce7fa7770a01ca8302d13b5f", "committedDate": "2020-07-21T18:09:04Z", "message": "fixed python linting errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdc14715c4bf04c51d051b3a563473f2a9a5b4b0", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/bdc14715c4bf04c51d051b3a563473f2a9a5b4b0", "committedDate": "2020-07-21T19:23:01Z", "message": "updated index to name json text classifier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ced7b926e66b88cfe5e8ac582459c97b735507ef", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/ced7b926e66b88cfe5e8ac582459c97b735507ef", "committedDate": "2020-07-21T19:23:36Z", "message": "Merge branch 'issue_411' of https://github.com/pytorch/serve into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c2474cde1e08b9d6030b5e47f54deb45f871d89", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/1c2474cde1e08b9d6030b5e47f54deb45f871d89", "committedDate": "2020-07-22T13:01:26Z", "message": "fixed object detector handler for batch support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ac516621d40f0bbca44164b7030516dc46059cd", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/4ac516621d40f0bbca44164b7030516dc46059cd", "committedDate": "2020-07-22T16:52:20Z", "message": "Fix conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16d438b561bb6b6401f94634c481d2bc959a0078", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/16d438b561bb6b6401f94634c481d2bc959a0078", "committedDate": "2020-07-22T17:21:56Z", "message": "Fixed the batch inference output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e3828fc96215878db2cddc0fab83a711f1ef749", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/9e3828fc96215878db2cddc0fab83a711f1ef749", "committedDate": "2020-07-22T17:23:03Z", "message": "update expected output as per new handler changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "422f293d161ed02efc8901d3c5d0af6e0008b6b7", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/422f293d161ed02efc8901d3c5d0af6e0008b6b7", "committedDate": "2020-07-22T17:24:18Z", "message": "Merge branch 'issue_411' of https://github.com/pytorch/serve into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fd7a5b654059c47197bbba39f4f2ea2564a17ff", "author": {"user": {"login": "maaquib", "name": "Aaqib"}}, "url": "https://github.com/pytorch/serve/commit/8fd7a5b654059c47197bbba39f4f2ea2564a17ff", "committedDate": "2020-07-22T19:31:21Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "448dee90a3f7022a1a2426cf2834f11218a63665", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/448dee90a3f7022a1a2426cf2834f11218a63665", "committedDate": "2020-07-22T20:05:01Z", "message": "updated text classification mar name in sanity suite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "137e40aeadd051301863f945c24eb1f6fdb3eacb", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/137e40aeadd051301863f945c24eb1f6fdb3eacb", "committedDate": "2020-07-22T20:07:55Z", "message": "updated text classifier mar name and removed bert scripted models"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "735ff503524ae39af281921abd4ae54973733a6a", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/735ff503524ae39af281921abd4ae54973733a6a", "committedDate": "2020-07-22T20:24:42Z", "message": "updated model zoo with new text classification url"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14ce6a1273f4187b62808dd222fa63e049814d8e", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/14ce6a1273f4187b62808dd222fa63e049814d8e", "committedDate": "2020-07-22T20:36:07Z", "message": "added model_name in while registering model in sanity suite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3030b0dffb5b8c8e556a9af2245f74cdb1e4c0d", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/e3030b0dffb5b8c8e556a9af2245f74cdb1e4c0d", "committedDate": "2020-07-23T02:32:08Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f94c8a0ffbe415c673472a023f45a00a4e1791a", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/2f94c8a0ffbe415c673472a023f45a00a4e1791a", "committedDate": "2020-07-23T02:44:15Z", "message": "updated text classification model name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24ba4f84e60f20845f62ef4b9d03e2a3b0808cf9", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/24ba4f84e60f20845f62ef4b9d03e2a3b0808cf9", "committedDate": "2020-07-23T11:20:18Z", "message": "added upgrade option for installing python dependencies in install utils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a77c44d8544b43def33237685341cb24b30e8b0a", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/a77c44d8544b43def33237685341cb24b30e8b0a", "committedDate": "2020-07-23T11:21:24Z", "message": "added upgrade option for installing python dependencies and extra numpy package in regression suite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82600266a11e83b5464217a99c42eeb6690bddc4", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/82600266a11e83b5464217a99c42eeb6690bddc4", "committedDate": "2020-07-23T11:21:58Z", "message": "refectored pytests in regression suite for better performance and reporting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8e7aeafdac2e0928b2447a7268d489de784f82e", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/c8e7aeafdac2e0928b2447a7268d489de784f82e", "committedDate": "2020-07-24T04:03:22Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5aff7b17d773d439956162f114ee60c16775f1f", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/a5aff7b17d773d439956162f114ee60c16775f1f", "committedDate": "2020-07-27T12:10:12Z", "message": "minor fix in torch-archiver command"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca3e64dcc8d0073e04dd2f63f379202049edb809", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/ca3e64dcc8d0073e04dd2f63f379202049edb809", "committedDate": "2020-07-27T12:10:41Z", "message": "reverted postprocess removal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb80537dd96ea13405cd08cc0f8a7a1dfee91a8b", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/fb80537dd96ea13405cd08cc0f8a7a1dfee91a8b", "committedDate": "2020-07-28T06:48:22Z", "message": "updated mar files in model zoo to use updated handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34aab6f12c783f3a97f8471161b945c76d5fb660", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/34aab6f12c783f3a97f8471161b945c76d5fb660", "committedDate": "2020-07-28T06:50:06Z", "message": "updated regression suite to use updated mar files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c9402a141200e1621ee485244b2983cfc109753", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/7c9402a141200e1621ee485244b2983cfc109753", "committedDate": "2020-07-29T11:05:13Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebebb17edc8b887d694100c7caa64397b9d4a427", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/ebebb17edc8b887d694100c7caa64397b9d4a427", "committedDate": "2020-07-29T12:04:24Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb15cdf54e0e13632593fc17053f4b099b4a62b8", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/bb15cdf54e0e13632593fc17053f4b099b4a62b8", "committedDate": "2020-07-29T12:39:17Z", "message": "suppressed pylint warning in UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0b85010b4d1b3c8aeba5b779b6bb4a6275f4f6a", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/a0b85010b4d1b3c8aeba5b779b6bb4a6275f4f6a", "committedDate": "2020-07-29T17:55:56Z", "message": "fixed resnet-152 mar name and expected output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e412be73cc9e874540cc78900e78e4a445d20ef", "author": {"user": {"login": "maaquib", "name": "Aaqib"}}, "url": "https://github.com/pytorch/serve/commit/1e412be73cc9e874540cc78900e78e4a445d20ef", "committedDate": "2020-07-31T17:27:36Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f852aeab22ad62acdc11902a4084be2e2e15a62b", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/f852aeab22ad62acdc11902a4084be2e2e15a62b", "committedDate": "2020-07-31T19:53:48Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "937281e58131721e8cc5acfc284982e04261d9db", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/937281e58131721e8cc5acfc284982e04261d9db", "committedDate": "2020-08-03T20:02:59Z", "message": "updated inference tests data\n- added tolerence value for resent152 models"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51d5de4002a745b8c6cda6d68301ab99666d7103", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/51d5de4002a745b8c6cda6d68301ab99666d7103", "committedDate": "2020-08-04T03:24:03Z", "message": "Added custom handler in vgg11 example (#559)\n\n* added custom handler for vgg11\r\n\r\n* added readme for vgg11 example\r\n\r\n* fixed typo in readme\r\n\r\n* updated model zoo\r\n\r\n* reverted back changes for scripted vgg11 mar file\r\n\r\n* added vgg11 model to regression test suite\r\n\r\n* disabled pylint check in UT\r\n\r\n* updated expected response for vgg11 inference in regression suite\r\n\r\n* updated expected response for vgg11 inference in regression suite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5e424a8302ef452e255ee6f1028a23975751bbd", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/b5e424a8302ef452e255ee6f1028a23975751bbd", "committedDate": "2020-08-04T19:21:19Z", "message": "conflict resolution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bab8e9123851114c68cc97a991d3e5987ddee71", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/5bab8e9123851114c68cc97a991d3e5987ddee71", "committedDate": "2020-08-04T19:28:04Z", "message": "conflict resolution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eb2eaf0644f6bfd7f7b5c9e97457ddff4fd738d", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/4eb2eaf0644f6bfd7f7b5c9e97457ddff4fd738d", "committedDate": "2020-08-05T15:46:34Z", "message": "updated expected for densenet scripted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03d8bf25ce7b89993e5d1a0fe73aee7109ec3e36", "author": {"user": {"login": "maaquib", "name": "Aaqib"}}, "url": "https://github.com/pytorch/serve/commit/03d8bf25ce7b89993e5d1a0fe73aee7109ec3e36", "committedDate": "2020-08-06T18:09:52Z", "message": "Merge branch 'master' into issue_411"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNzc5ODU0", "url": "https://github.com/pytorch/serve/pull/432#pullrequestreview-462779854", "createdAt": "2020-08-06T18:37:24Z", "commit": {"oid": "03d8bf25ce7b89993e5d1a0fe73aee7109ec3e36"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2187, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}