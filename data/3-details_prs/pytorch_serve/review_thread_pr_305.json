{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MDMyMjg2", "number": 305, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTozMTozM1rOD5xi3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxOToxNVrOD7fmFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTA3MTY1OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTozMTozM1rOGROvgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTozMTozM1rOGROvgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcyMDUxNA==", "bodyText": "Add model version as well in response.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r420720514", "createdAt": "2020-05-06T11:31:33Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -238,8 +238,11 @@ private void handleRegisterModel(\n \n         modelName = archive.getModelName();\n \n-        final String msg = \"Model \\\"\" + modelName + \"\\\" registered\";\n         if (initialWorkers <= 0) {\n+            final String msg =\n+                    \"Model \\\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02442339a708d90607a85d0d81d58181dedfa1c7"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTA3MzU1OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTozMjoxNVrOGROwww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzo1MDo1OVrOGRtasQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcyMDgzNQ==", "bodyText": "Add model version as well in response.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r420720835", "createdAt": "2020-05-06T11:32:15Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "diffHunk": "@@ -179,7 +179,9 @@ private void predict(\n         Job job = new Job(ctx, modelName, modelVersion, WorkerCommands.PREDICT, input);\n         if (!ModelManager.getInstance().addJob(job)) {\n             throw new ServiceUnavailableException(\n-                    \"No worker is available to serve request: \" + modelName);\n+                    \"No worker is available to serve request: \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02442339a708d90607a85d0d81d58181dedfa1c7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMzA4OQ==", "bodyText": "Can we say here 'Model {} has no worker to serve inference request'?", "url": "https://github.com/pytorch/serve/pull/305#discussion_r421223089", "createdAt": "2020-05-07T03:50:59Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "diffHunk": "@@ -179,7 +179,9 @@ private void predict(\n         Job job = new Job(ctx, modelName, modelVersion, WorkerCommands.PREDICT, input);\n         if (!ModelManager.getInstance().addJob(job)) {\n             throw new ServiceUnavailableException(\n-                    \"No worker is available to serve request: \" + modelName);\n+                    \"No worker is available to serve request: \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcyMDgzNQ=="}, "originalCommit": {"oid": "02442339a708d90607a85d0d81d58181dedfa1c7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTA3ODM5OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTozMzo1NFrOGROz0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTozMzo1NFrOGROz0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcyMTYxOQ==", "bodyText": "create message string in the if else block and use a common statement to return the response. Add model version as well in response for model registration call.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r420721619", "createdAt": "2020-05-06T11:33:54Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -329,8 +335,19 @@ private void updateModelWorkers(\n                                     modelManager.scaleRequestStatus(modelName, modelVersion);\n                             if (HttpResponseStatus.OK.equals(v)) {\n                                 if (status) {\n-                                    NettyUtils.sendJsonResponse(\n-                                            ctx, new StatusResponse(\"Workers scaled\"), v);\n+                                    if (isRegistration) {\n+                                        String msg =\n+                                                \"Model \\\"\"\n+                                                        + modelName\n+                                                        + \"\\\" registered with \"\n+                                                        + minWorkers\n+                                                        + \" initial workers\";\n+                                        NettyUtils.sendJsonResponse(\n+                                                ctx, new StatusResponse(msg), v);\n+                                    } else {\n+                                        NettyUtils.sendJsonResponse(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02442339a708d90607a85d0d81d58181dedfa1c7"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTA4Mjc1OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTozNToxMVrOGRO2gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTozODoxMFrOGRO8XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcyMjMwNA==", "bodyText": "rename as initWorkers", "url": "https://github.com/pytorch/serve/pull/305#discussion_r420722304", "createdAt": "2020-05-06T11:35:11Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -311,7 +316,8 @@ private void updateModelWorkers(\n             int minWorkers,\n             int maxWorkers,\n             boolean synchronous,\n-            final Function<Void, Void> onError) {\n+            final Function<Void, Void> onError,\n+            boolean isRegistration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02442339a708d90607a85d0d81d58181dedfa1c7"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcyMzgwNQ==", "bodyText": "move this argument before onError.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r420723805", "createdAt": "2020-05-06T11:38:10Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -311,7 +316,8 @@ private void updateModelWorkers(\n             int minWorkers,\n             int maxWorkers,\n             boolean synchronous,\n-            final Function<Void, Void> onError) {\n+            final Function<Void, Void> onError,\n+            boolean isRegistration) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcyMjMwNA=="}, "originalCommit": {"oid": "02442339a708d90607a85d0d81d58181dedfa1c7"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjUwODE5OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNjowMzowOFrOGRvkiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNjowMzowOFrOGRvkiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI1ODM3Nw==", "bodyText": "Improve message to contain number of workers, model name and version.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r421258377", "createdAt": "2020-05-07T06:03:08Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -329,8 +335,19 @@ private void updateModelWorkers(\n                                     modelManager.scaleRequestStatus(modelName, modelVersion);\n                             if (HttpResponseStatus.OK.equals(v)) {\n                                 if (status) {\n-                                    NettyUtils.sendJsonResponse(\n-                                            ctx, new StatusResponse(\"Workers scaled\"), v);\n+                                    if (isRegistration) {\n+                                        String msg =\n+                                                \"Model \\\"\"\n+                                                        + modelName\n+                                                        + \"\\\" registered with \"\n+                                                        + minWorkers\n+                                                        + \" initial workers\";\n+                                        NettyUtils.sendJsonResponse(\n+                                                ctx, new StatusResponse(msg), v);\n+                                    } else {\n+                                        NettyUtils.sendJsonResponse(\n+                                                ctx, new StatusResponse(\"Workers scaled\"), v);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bbea577e8c92f624e8db3848ad63706f8a6e265"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzU1MDk1OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMToxMzowNFrOGR5wpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo1OToyMlrOGR_7hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQyNTMxOQ==", "bodyText": "Add a null check for modelVersion and return default version in that case.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r421425319", "createdAt": "2020-05-07T11:13:04Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "diffHunk": "@@ -179,7 +179,12 @@ private void predict(\n         Job job = new Job(ctx, modelName, modelVersion, WorkerCommands.PREDICT, input);\n         if (!ModelManager.getInstance().addJob(job)) {\n             throw new ServiceUnavailableException(\n-                    \"No worker is available to serve request: \" + modelName);\n+                    \"Model \\\"\"\n+                            + modelName\n+                            + \"\\\" Version \"\n+                            + modelVersion", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2acfb62e50f057fb18e0588e88e26eeec0f9b2d4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyNjQwNg==", "bodyText": "Now instead of null, it will show defaultVersion", "url": "https://github.com/pytorch/serve/pull/305#discussion_r421526406", "createdAt": "2020-05-07T13:59:22Z", "author": {"login": "mjpsl"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "diffHunk": "@@ -179,7 +179,12 @@ private void predict(\n         Job job = new Job(ctx, modelName, modelVersion, WorkerCommands.PREDICT, input);\n         if (!ModelManager.getInstance().addJob(job)) {\n             throw new ServiceUnavailableException(\n-                    \"No worker is available to serve request: \" + modelName);\n+                    \"Model \\\"\"\n+                            + modelName\n+                            + \"\\\" Version \"\n+                            + modelVersion", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQyNTMxOQ=="}, "originalCommit": {"oid": "2acfb62e50f057fb18e0588e88e26eeec0f9b2d4"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDk2Mzg4OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjo1NDozMFrOGSHlPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjo0MTowOVrOGbTriQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1MTc3NQ==", "bodyText": "I am curious to understand if this message needs modification. Can't this be a generic message of how many workers are we scaling this to? If we elaborate on this message, then customers who maintain logs will know that POST /models, which is register model,  was updated with n number of workers. Adding a flag to determine the code path, ie., if this is coming from register-model or from scale model, seems a little hacky.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r421651775", "createdAt": "2020-05-07T16:54:30Z", "author": {"login": "vdantu"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -329,8 +337,19 @@ private void updateModelWorkers(\n                                     modelManager.scaleRequestStatus(modelName, modelVersion);\n                             if (HttpResponseStatus.OK.equals(v)) {\n                                 if (status) {\n-                                    NettyUtils.sendJsonResponse(\n-                                            ctx, new StatusResponse(\"Workers scaled\"), v);\n+                                    String msg =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac26fbf312d37076674e5066ec5dca5f13569b6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3Mzk3Mw==", "bodyText": "The idea is to keep the response message consistent for registration request with/without initial workers. I agree its a bit hacky.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r421673973", "createdAt": "2020-05-07T17:31:40Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -329,8 +337,19 @@ private void updateModelWorkers(\n                                     modelManager.scaleRequestStatus(modelName, modelVersion);\n                             if (HttpResponseStatus.OK.equals(v)) {\n                                 if (status) {\n-                                    NettyUtils.sendJsonResponse(\n-                                            ctx, new StatusResponse(\"Workers scaled\"), v);\n+                                    String msg =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1MTc3NQ=="}, "originalCommit": {"oid": "7ac26fbf312d37076674e5066ec5dca5f13569b6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEzMjg2Mw==", "bodyText": "Keeping these changes as message give clear information.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r422132863", "createdAt": "2020-05-08T13:09:09Z", "author": {"login": "mjpsl"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -329,8 +337,19 @@ private void updateModelWorkers(\n                                     modelManager.scaleRequestStatus(modelName, modelVersion);\n                             if (HttpResponseStatus.OK.equals(v)) {\n                                 if (status) {\n-                                    NettyUtils.sendJsonResponse(\n-                                            ctx, new StatusResponse(\"Workers scaled\"), v);\n+                                    String msg =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1MTc3NQ=="}, "originalCommit": {"oid": "7ac26fbf312d37076674e5066ec5dca5f13569b6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2ODY0NQ==", "bodyText": "@vdantu Let me know if this LGTY", "url": "https://github.com/pytorch/serve/pull/305#discussion_r429568645", "createdAt": "2020-05-23T18:39:02Z", "author": {"login": "maaquib"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -329,8 +337,19 @@ private void updateModelWorkers(\n                                     modelManager.scaleRequestStatus(modelName, modelVersion);\n                             if (HttpResponseStatus.OK.equals(v)) {\n                                 if (status) {\n-                                    NettyUtils.sendJsonResponse(\n-                                            ctx, new StatusResponse(\"Workers scaled\"), v);\n+                                    String msg =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1MTc3NQ=="}, "originalCommit": {"oid": "7ac26fbf312d37076674e5066ec5dca5f13569b6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI4NzE3Nw==", "bodyText": "I am still not convinced that passing a boolean flag to determine the error message is the the only option. But, this is is not a blocker for the PR. We can look into how to refactor this code in the future (may be return the future to the method above and populate the error message there or some such).", "url": "https://github.com/pytorch/serve/pull/305#discussion_r431287177", "createdAt": "2020-05-27T16:41:09Z", "author": {"login": "vdantu"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -329,8 +337,19 @@ private void updateModelWorkers(\n                                     modelManager.scaleRequestStatus(modelName, modelVersion);\n                             if (HttpResponseStatus.OK.equals(v)) {\n                                 if (status) {\n-                                    NettyUtils.sendJsonResponse(\n-                                            ctx, new StatusResponse(\"Workers scaled\"), v);\n+                                    String msg =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1MTc3NQ=="}, "originalCommit": {"oid": "7ac26fbf312d37076674e5066ec5dca5f13569b6"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzA5ODY4OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxNzoxMlrOGT2Yxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxNzoxMlrOGT2Yxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2NzIwNg==", "bodyText": "Remove duplication for common string in both the responses.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r423467206", "createdAt": "2020-05-12T05:17:12Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "diffHunk": "@@ -178,8 +178,23 @@ private void predict(\n \n         Job job = new Job(ctx, modelName, modelVersion, WorkerCommands.PREDICT, input);\n         if (!ModelManager.getInstance().addJob(job)) {\n-            throw new ServiceUnavailableException(\n-                    \"No worker is available to serve request: \" + modelName);\n+            String responseMessage =\n+                    \"Model \\\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17b41413a7e6d068972bac7606933b1c39875c4e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzEwMjMwOnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxOToxNVrOGT2a3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxOToxNVrOGT2a3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2Nzc0Mw==", "bodyText": "Add version in response.", "url": "https://github.com/pytorch/serve/pull/305#discussion_r423467743", "createdAt": "2020-05-12T05:19:15Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -329,8 +337,19 @@ private void updateModelWorkers(\n                                     modelManager.scaleRequestStatus(modelName, modelVersion);\n                             if (HttpResponseStatus.OK.equals(v)) {\n                                 if (status) {\n-                                    NettyUtils.sendJsonResponse(\n-                                            ctx, new StatusResponse(\"Workers scaled\"), v);\n+                                    String msg =\n+                                            minWorkers + \" Workers scaled for model \" + modelName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17b41413a7e6d068972bac7606933b1c39875c4e"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1640, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}