{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2OTIzNDIy", "number": 468, "title": "Valid Host URL(s) for model registration", "bodyText": "Description\nAddresses Security issues while loading a model from URL.\nIntroduced a config property named \"valid_hosts\" to allow model registration only from valid host URLs.\nFixes #47\nType of change\nPlease delete options that are not relevant.\n\n New feature (non-breaking change which adds functionality)\n This change requires a documentation update\n\nFeature/Issue validation/testing\nrun torch serve with config file following property in config.properties file.\nvalid_hosts=https://torchserve.s3.amazonaws.com/.*\n\n Test A\ntry to register ay model from model zoo it should get register as the model zoo URL is a valid host URL.\n Test B\ngive any other URL to register a model it will error\n\n \"Given URL https://s4.amazonaws.com/model-server/models/squeezenet_v1.1/squeezenet_v1.1.marl does not match any valid host URL(s)\"\n\n\n\nUT/IT execution results\n\n\nLogs\nserver_logs_issue_47.txt\ncmd_line_logs.txt\n\n\nChecklist:\n\n Have you added tests that prove your fix is effective or that this feature works?\n New and existing unit tests pass locally with these changes?\n Has code been commented, particularly in hard-to-understand areas?\n Have you made corresponding changes to the documentation?", "createdAt": "2020-06-19T06:47:26Z", "url": "https://github.com/pytorch/serve/pull/468", "merged": true, "mergeCommit": {"oid": "96ccbbb9b19b1e4e6817367fcf87048bfcca6cd2"}, "closed": true, "closedAt": "2020-09-23T11:32:57Z", "author": {"login": "shivamshriwas"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsFWulAH2gAyNDM2OTIzNDIyOmVjMjI0NTkyZGRjMjIwMmExYzQ4ZmYyN2RjNjg1YWQ2ZTg5ZGI3ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLqpoKgH2gAyNDM2OTIzNDIyOmVmYWM3MjE1YjRmZDljZDI4OWJiYmM5MzdmODFlY2MxM2JkZGU2YjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ec224592ddc2202a1c48ff27dc685ad6e89db7e8", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/ec224592ddc2202a1c48ff27dc685ad6e89db7e8", "committedDate": "2020-06-17T08:13:06Z", "message": "Added test cases\n-update doc with examples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3be78b3744a60b31712bf8180743e7c52178bff6", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/3be78b3744a60b31712bf8180743e7c52178bff6", "committedDate": "2020-06-17T18:07:18Z", "message": "updated docs and testcases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/f3e9081d28b36b471673c313626350da1857dddb", "committedDate": "2020-06-19T06:43:25Z", "message": "Merge branch 'master' of https://github.com/pytorch/serve into issue_47\n\n# Conflicts:\n#\tdocker/README.md\n#\tdocs/configuration.md\n#\tfrontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java\n#\tfrontend/modelarchive/src/test/java/org/pytorch/serve/archive/ModelArchiveTest.java\n#\tfrontend/server/src/main/java/org/pytorch/serve/util/ConfigManager.java\n#\tfrontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java\n#\ttest/README.md\n#\ttest/regression_tests.sh"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDgwMTcw", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-439080170", "createdAt": "2020-06-29T12:14:38Z", "commit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjoxNDozOFrOGqODYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjoxNDozOFrOGqODYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkyMzYxOA==", "bodyText": "Can we use consistent naming convention i.e. whiteListedURLs", "url": "https://github.com/pytorch/serve/pull/468#discussion_r446923618", "createdAt": "2020-06-29T12:14:38Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java", "diffHunk": "@@ -44,7 +45,8 @@ public ModelArchive(Manifest manifest, String url, File modelDir, boolean extrac\n         this.extracted = extracted;\n     }\n \n-    public static ModelArchive downloadModel(String modelStore, String url)\n+    public static ModelArchive downloadModel(\n+            List<String> urlPatternlist, String modelStore, String url)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDgyOTQz", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-439082943", "createdAt": "2020-06-29T12:18:19Z", "commit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjoxODoxOVrOGqOLcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjoxODoxOVrOGqOLcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkyNTY4MQ==", "bodyText": "Why you need this?", "url": "https://github.com/pytorch/serve/pull/468#discussion_r446925681", "createdAt": "2020-06-29T12:18:19Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java", "diffHunk": "@@ -64,6 +66,10 @@ public static ModelArchive downloadModel(String modelStore, String url)\n                 FileUtils.deleteQuietly(modelLocation);\n                 throw new DownloadModelException(\"Failed to download model from: \" + url, e);\n             }\n+        } else if (DEFAULT_URL_PATTERN.matcher(url).matches()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDgyOTcy", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-439082972", "createdAt": "2020-06-29T12:18:21Z", "commit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjoxODoyMVrOGqOLhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjoxODoyMVrOGqOLhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkyNTcwMQ==", "bodyText": "I think you will have to check if the given URL is a valid URL?", "url": "https://github.com/pytorch/serve/pull/468#discussion_r446925701", "createdAt": "2020-06-29T12:18:21Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java", "diffHunk": "@@ -84,6 +90,17 @@ public static ModelArchive downloadModel(String modelStore, String url)\n         throw new ModelNotFoundException(\"Model not found at: \" + url);\n     }\n \n+    public static boolean checkUrlWhitelisted(List<String> urlPatternList, String url) {\n+        boolean patternMatch = false;\n+        for (String temp : urlPatternList) {\n+            if (Pattern.compile(temp, Pattern.CASE_INSENSITIVE).matcher(url).matches()) {\n+                patternMatch = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDg0ODUw", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-439084850", "createdAt": "2020-06-29T12:20:44Z", "commit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjoyMDo0NFrOGqOQ9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjoyMDo0NFrOGqOQ9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkyNzA5NA==", "bodyText": "This is pending since long, let's remove the use of squeezenet real model from UT and find some alternate solution for this. Maybe make it part of sanity suite/regression if required.", "url": "https://github.com/pytorch/serve/pull/468#discussion_r446927094", "createdAt": "2020-06-29T12:20:44Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/modelarchive/src/test/java/org/pytorch/serve/archive/ModelArchiveTest.java", "diffHunk": "@@ -35,14 +39,18 @@ public void test() throws ModelException, IOException {\n         // TODO Change this once we have example models on s3\n         archive =\n                 ModelArchive.downloadModel(\n+                        URL_PATTERN_LIST,\n                         modelStore,\n                         \"https://s3.amazonaws.com/model-server/models/squeezenet_v1.1/squeezenet_v1.1.model\");\n         Assert.assertEquals(archive.getModelName(), null);\n+        ModelArchive.downloadModel(\n+                URL_PATTERN_LIST,\n+                modelStore,\n+                \"https://s3.amazonaws.com/model-server/models/squeezenet_v1.1/squeezenet_v1.1.model\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDg1MTE0", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-439085114", "createdAt": "2020-06-29T12:21:03Z", "commit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjoyMTowM1rOGqORvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjoyMTowM1rOGqORvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkyNzI5NQ==", "bodyText": "Whitelist?", "url": "https://github.com/pytorch/serve/pull/468#discussion_r446927295", "createdAt": "2020-06-29T12:21:03Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/modelarchive/src/test/java/org/pytorch/serve/archive/ModelArchiveTest.java", "diffHunk": "@@ -63,6 +72,38 @@ public void testMalformURL() throws ModelException, IOException {\n         // new implementation.\n         // TODO Change this once we have example models on s3\n         ModelArchive.downloadModel(\n-                modelStore, \"https://../model-server/models/squeezenet_v1.1/squeezenet_v1.1.mod\");\n+                URL_PATTERN_LIST,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e9081d28b36b471673c313626350da1857dddb"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e99a13e3b0960afef11cc8136a143035b1471bab", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/e99a13e3b0960afef11cc8136a143035b1471bab", "committedDate": "2020-06-30T06:42:12Z", "message": "Merge branch 'master' of https://github.com/pytorch/serve into issue_47"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f3365807dffa3ba8c28d5199ca5d3cf4f0f36a9", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/7f3365807dffa3ba8c28d5199ca5d3cf4f0f36a9", "committedDate": "2020-06-30T13:06:29Z", "message": "added test case\n- incorporated review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0232f423573294a64e46ce05b6933cf0f5a1321e", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/0232f423573294a64e46ce05b6933cf0f5a1321e", "committedDate": "2020-07-15T12:23:10Z", "message": "Merge branch 'master' into issue_47"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96ffd2ce0a9129c0e75991feb4b4d78b11b3cfbb", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/96ffd2ce0a9129c0e75991feb4b4d78b11b3cfbb", "committedDate": "2020-07-22T15:03:47Z", "message": "refactored code with allowed urls parameter changed to valid_hosts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bbc7e16e585118954397e0e7d089abbc21141e8", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/9bbc7e16e585118954397e0e7d089abbc21141e8", "committedDate": "2020-07-22T15:04:39Z", "message": "Merge branch 'master' of https://github.com/pytorch/serve into issue_47"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41c05e20621fb630a3ab9f57a643454639b71e4f", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/41c05e20621fb630a3ab9f57a643454639b71e4f", "committedDate": "2020-07-22T15:05:15Z", "message": "Merge branch 'issue_47' of https://github.com/pytorch/serve into issue_47"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODQ1MDE1", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-453845015", "createdAt": "2020-07-23T05:33:58Z", "commit": {"oid": "41c05e20621fb630a3ab9f57a643454639b71e4f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNTozMzo1OVrOG18u4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNTozMzo1OVrOG18u4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyMjc1Mw==", "bodyText": "can we use allowed_urls instead?\nAs a matter of fact, it will be as per RFC https://tools.ietf.org/id/draft-knodel-terminology-00.html#rfc.section.1.1", "url": "https://github.com/pytorch/serve/pull/468#discussion_r459222753", "createdAt": "2020-07-23T05:33:59Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "docs/configuration.md", "diffHunk": "@@ -202,8 +202,14 @@ the backend workers convert \"Bytearray to utf-8 string\" when the Content-Type of\n * `model_server_home` : Torchserve home directory. \n * `max_request_size` : The maximum allowable request size that the Torchserve accepts, in bytes. Default: 6553500\n * `max_response_size` : The maximum allowable response size that the Torchserve sends, in bytes. Default: 6553500\n+* `valid_hosts` : Comma separated regex of valid host URL(s) from where models can be registered. Default: \"http(s)?://.*\" (all URLs)\n+eg : To allow base URLs \"https://s3.amazonaws.com/\" and \"https://torchserve.s3.amazonaws.com/\" use following regex string\n+```\n+valid_hosts=https://s3.amazonaws.com/.*,https://torchserve.s3.amazonaws.com/.*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c05e20621fb630a3ab9f57a643454639b71e4f"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDcwNDIy", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-455070422", "createdAt": "2020-07-24T17:40:05Z", "commit": {"oid": "41c05e20621fb630a3ab9f57a643454639b71e4f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzo0MDowNVrOG24K1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzo0MDowNVrOG24K1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE5NjU2Nw==", "bodyText": "@shivamshriwas In case of s3 urls, is it expected they will be in https://s3.xxxx format and not \"s3://xxx\"?", "url": "https://github.com/pytorch/serve/pull/468#discussion_r460196567", "createdAt": "2020-07-24T17:40:05Z", "author": {"login": "chauhang"}, "path": "frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java", "diffHunk": "@@ -27,7 +28,7 @@\n \n     public static final Gson GSON = new GsonBuilder().setPrettyPrinting().create();\n \n-    private static final Pattern URL_PATTERN =\n+    private static final Pattern VALID_URL_PATTERN =\n             Pattern.compile(\"http(s)?://.*\", Pattern.CASE_INSENSITIVE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c05e20621fb630a3ab9f57a643454639b71e4f"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDcxNzU4", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-455071758", "createdAt": "2020-07-24T17:42:14Z", "commit": {"oid": "41c05e20621fb630a3ab9f57a643454639b71e4f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzo0MjoxNVrOG24PDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzo0MjoxNVrOG24PDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE5NzY0Ng==", "bodyText": "@shivamshriwas Please add another test for multiple urls test scenario, and failure cases where url is an invalid one", "url": "https://github.com/pytorch/serve/pull/468#discussion_r460197646", "createdAt": "2020-07-24T17:42:15Z", "author": {"login": "chauhang"}, "path": "frontend/modelarchive/src/test/java/org/pytorch/serve/archive/ModelArchiveTest.java", "diffHunk": "@@ -21,48 +25,70 @@ public void beforeTest() {\n         FileUtils.deleteQuietly(new File(tmp, \"models\"));\n     }\n \n-    @Test(expectedExceptions = ModelNotFoundException.class)\n+    @Test\n     public void test() throws ModelException, IOException {\n         String modelStore = \"src/test/resources/models\";\n-\n-        ModelArchive archive = ModelArchive.downloadModel(modelStore, \"noop.mar\");\n+        ModelArchive archive = ModelArchive.downloadModel(VALID_HOSTS_LIST, modelStore, \"noop.mar\");\n         archive.validate();\n         archive.clean();\n         Assert.assertEquals(archive.getModelName(), \"noop\");\n-\n-        // load model for s3 --> This will fail as this model is not compatible with\n-        // new implementation.\n-        // TODO Change this once we have example models on s3\n-        archive =\n-                ModelArchive.downloadModel(\n-                        modelStore,\n-                        \"https://s3.amazonaws.com/model-server/models/squeezenet_v1.1/squeezenet_v1.1.model\");\n-        Assert.assertEquals(archive.getModelName(), null);\n-        ModelArchive.removeModel(\n-                modelStore,\n-                \"https://s3.amazonaws.com/model-server/models/squeezenet_v1.1/squeezenet_v1.1.model\");\n-        Assert.assertTrue(!new File(modelStore, \"squeezenet_v1.1.model\").exists());\n-        ModelArchive.downloadModel(modelStore, \"/../noop-v1.0\");\n     }\n \n     @Test(expectedExceptions = DownloadModelException.class)\n     public void testInvalidURL() throws ModelException, IOException {\n         String modelStore = \"src/test/resources/models\";\n-        // load model for s3 --> This will fail as this model is not compatible with\n-        // new implementation.\n-        // TODO Change this once we have example models on s3\n         ModelArchive.downloadModel(\n+                VALID_HOSTS_LIST,\n                 modelStore,\n                 \"https://s3.amazonaws.com/model-server/models/squeezenet_v1.1/squeezenet_v1.1.mod\");\n     }\n \n     @Test(expectedExceptions = DownloadModelException.class)\n     public void testMalformURL() throws ModelException, IOException {\n         String modelStore = \"src/test/resources/models\";\n-        // load model for s3 --> This will fail as this model is not compatible with\n-        // new implementation.\n-        // TODO Change this once we have example models on s3\n         ModelArchive.downloadModel(\n-                modelStore, \"https://../model-server/models/squeezenet_v1.1/squeezenet_v1.1.mod\");\n+                VALID_HOSTS_LIST,\n+                modelStore,\n+                \"https://../model-server/models/squeezenet_v1.1/squeezenet_v1.1.mod\");\n+    }\n+\n+    @Test(expectedExceptions = ModelNotFoundException.class)\n+    public void testValidHostURL() throws ModelException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c05e20621fb630a3ab9f57a643454639b71e4f"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDcyMDY1", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-455072065", "createdAt": "2020-07-24T17:42:43Z", "commit": {"oid": "41c05e20621fb630a3ab9f57a643454639b71e4f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f07e5b49ae875af5af227fb969e70a4d6f105ef9", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/f07e5b49ae875af5af227fb969e70a4d6f105ef9", "committedDate": "2020-07-27T06:37:12Z", "message": "Merge branch 'master' of https://github.com/pytorch/serve into issue_47\n\n# Conflicts:\n#\tfrontend/modelarchive/src/test/java/org/pytorch/serve/archive/ModelArchiveTest.java\n#\tfrontend/server/src/main/java/org/pytorch/serve/util/ConfigManager.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc3f6f481afd6c9e09438e134bfab205f265391c", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/cc3f6f481afd6c9e09438e134bfab205f265391c", "committedDate": "2020-07-27T12:53:21Z", "message": "Incorporated review comments\n- change valid_hosts to allowed_urls\n- added test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40da3a728c1be07aa21067f124983faf050a8e56", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/40da3a728c1be07aa21067f124983faf050a8e56", "committedDate": "2020-07-29T11:15:09Z", "message": "Merge branch 'master' into issue_47"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e006f5d25343adf87ea61ffc15fad6e8d554984", "author": {"user": {"login": "chauhang", "name": "Geeta Chauhan"}}, "url": "https://github.com/pytorch/serve/commit/8e006f5d25343adf87ea61ffc15fad6e8d554984", "committedDate": "2020-07-31T05:47:27Z", "message": "Merge branch 'master' into issue_47"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4OTM4NDg3", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-458938487", "createdAt": "2020-07-31T06:14:13Z", "commit": {"oid": "40da3a728c1be07aa21067f124983faf050a8e56"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "276cdced56831a663d4a100fa9e4e754e256f61c", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/276cdced56831a663d4a100fa9e4e754e256f61c", "committedDate": "2020-09-14T07:27:09Z", "message": "Resolved Merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "057c7840033bc287ba64021d531eefd6b75d56f4", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/057c7840033bc287ba64021d531eefd6b75d56f4", "committedDate": "2020-09-14T07:42:05Z", "message": "formatted ModelArchiveTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01d70ace7dd50c725818ebd7071bcad14eb46941", "author": {"user": {"login": "shivamshriwas", "name": "shivamshriwas"}}, "url": "https://github.com/pytorch/serve/commit/01d70ace7dd50c725818ebd7071bcad14eb46941", "committedDate": "2020-09-14T07:42:39Z", "message": "Merge branch 'issue_47' of https://github.com/pytorch/serve into issue_47"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NTQ3MDg4", "url": "https://github.com/pytorch/serve/pull/468#pullrequestreview-494547088", "createdAt": "2020-09-23T11:11:04Z", "commit": {"oid": "01d70ace7dd50c725818ebd7071bcad14eb46941"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efac7215b4fd9cd289bbbc937f81ecc13bdde6b5", "author": {"user": {"login": "dhaniram-kshirsagar", "name": null}}, "url": "https://github.com/pytorch/serve/commit/efac7215b4fd9cd289bbbc937f81ecc13bdde6b5", "committedDate": "2020-09-23T11:11:53Z", "message": "Merge branch 'master' into issue_47"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2223, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}