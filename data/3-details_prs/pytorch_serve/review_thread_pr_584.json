{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMjMzOTEw", "number": 584, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxODozMzoxN1rOEcMbUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo1MTo1OVrOE60-Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTk5MTg1OnYy", "diffSide": "RIGHT", "path": "examples/image_classifier/squeezenet/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxODozMzoxN1rOHGkxCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOTo0MjoxM1rOHI2DVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY1NTg4MA==", "bodyText": "Inconsistent list level", "url": "https://github.com/pytorch/serve/pull/584#discussion_r476655880", "createdAt": "2020-08-25T18:33:17Z", "author": {"login": "maaquib"}, "path": "examples/image_classifier/squeezenet/README.md", "diffHunk": "@@ -0,0 +1,48 @@\n+#### Sample commands to create a squeezenet eager mode model archive, register it on TorchServe and run image prediction\n+\n+Run the commands given in following steps from the parent directory of the root of the repository. For example, if you cloned the repository into /home/my_path/serve, run the steps from /home/my_path\n+\n+```bash\n+wget https://download.pytorch.org/models/squeezenet1_1-f364aa15.pth\n+torch-model-archiver --model-name squeezenet1_1 --version 1.0 --model-file examples/image_classifier/squeezenet/model.py --serialized-file squeezenet1_1-f364aa15.pth --handler image_classifier --extra-files examples/image_classifier/index_to_name.json\n+mkdir model_store\n+mv squeezenet1_1 model_store/\n+torchserve --start --model-store model_store --models squeezenet1_1=squeezenet1_1.mar\n+curl http://127.0.0.1:8080/predictions/squeezenet1_1 -T examples/image_classifier/kitten.jpg\n+```\n+\n+#### TorchScript example using alexnet image classifier:\n+\n+* Save the Squeezenet1_1 model in as an executable script module or a traced script:\n+\n+  * Save model using scripting\n+```python\n+#scripted mode\n+from torchvision import models\n+import torch\n+model = models.squeezenet1_1(pretrained=True)\n+sm = torch.jit.script(model)\n+sm.save(\"squeezenet1_1.pt\")\n+```\n+\n+  * Save model using tracing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "920d38cafe62e3416909e49fb12e4797f2222c10"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAzNjI0NQ==", "bodyText": "Corrected list level", "url": "https://github.com/pytorch/serve/pull/584#discussion_r479036245", "createdAt": "2020-08-28T09:42:13Z", "author": {"login": "shivamshriwas"}, "path": "examples/image_classifier/squeezenet/README.md", "diffHunk": "@@ -0,0 +1,48 @@\n+#### Sample commands to create a squeezenet eager mode model archive, register it on TorchServe and run image prediction\n+\n+Run the commands given in following steps from the parent directory of the root of the repository. For example, if you cloned the repository into /home/my_path/serve, run the steps from /home/my_path\n+\n+```bash\n+wget https://download.pytorch.org/models/squeezenet1_1-f364aa15.pth\n+torch-model-archiver --model-name squeezenet1_1 --version 1.0 --model-file examples/image_classifier/squeezenet/model.py --serialized-file squeezenet1_1-f364aa15.pth --handler image_classifier --extra-files examples/image_classifier/index_to_name.json\n+mkdir model_store\n+mv squeezenet1_1 model_store/\n+torchserve --start --model-store model_store --models squeezenet1_1=squeezenet1_1.mar\n+curl http://127.0.0.1:8080/predictions/squeezenet1_1 -T examples/image_classifier/kitten.jpg\n+```\n+\n+#### TorchScript example using alexnet image classifier:\n+\n+* Save the Squeezenet1_1 model in as an executable script module or a traced script:\n+\n+  * Save model using scripting\n+```python\n+#scripted mode\n+from torchvision import models\n+import torch\n+model = models.squeezenet1_1(pretrained=True)\n+sm = torch.jit.script(model)\n+sm.save(\"squeezenet1_1.pt\")\n+```\n+\n+  * Save model using tracing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY1NTg4MA=="}, "originalCommit": {"oid": "920d38cafe62e3416909e49fb12e4797f2222c10"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MDAwNTk4OnYy", "diffSide": "RIGHT", "path": "ci/buildspec.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxODozNzoyOFrOHGk5uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOTo0MTo1NlrOHI2CEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY1ODEwNw==", "bodyText": "Why the older version of libssl?", "url": "https://github.com/pytorch/serve/pull/584#discussion_r476658107", "createdAt": "2020-08-25T18:37:28Z", "author": {"login": "maaquib"}, "path": "ci/buildspec.yml", "diffHunk": "@@ -8,6 +8,10 @@ phases:\n       - apt-get update\n       - apt-get install -y curl gnupg2\n       - pip install pip -U\n+      - apt-get -y install nodejs-dev node-gyp libssl1.0-dev", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "920d38cafe62e3416909e49fb12e4797f2222c10"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAzNTkyMw==", "bodyText": "removed libssl", "url": "https://github.com/pytorch/serve/pull/584#discussion_r479035923", "createdAt": "2020-08-28T09:41:56Z", "author": {"login": "shivamshriwas"}, "path": "ci/buildspec.yml", "diffHunk": "@@ -8,6 +8,10 @@ phases:\n       - apt-get update\n       - apt-get install -y curl gnupg2\n       - pip install pip -U\n+      - apt-get -y install nodejs-dev node-gyp libssl1.0-dev", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY1ODEwNw=="}, "originalCommit": {"oid": "920d38cafe62e3416909e49fb12e4797f2222c10"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTE5OTIwOnYy", "diffSide": "RIGHT", "path": "docker/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo0ODoxNVrOH2IKng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo0ODoxNVrOH2IKng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxODk0Mg==", "bodyText": "NIT:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you have not clone TorchServe source then:\n          \n          \n            \n            If you have not cloned TorchServe source then:", "url": "https://github.com/pytorch/serve/pull/584#discussion_r526518942", "createdAt": "2020-11-19T00:48:15Z", "author": {"login": "maaquib"}, "path": "docker/README.md", "diffHunk": "@@ -16,10 +16,10 @@\n \n ## First things first\n \n+If you have not clone TorchServe source then:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36dcf61df914a620044ab389b2ecfa18d94127a5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTIwMDg4OnYy", "diffSide": "RIGHT", "path": "docs/code_coverage.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo0OTowNlrOH2ILow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo0OTowNlrOH2ILow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxOTIwMw==", "bodyText": "NIT:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Ensure that node dependency are already installed in your system. Refer [Install Node dependency](#install-markdown-link-checker-dependencies)  \n          \n          \n            \n            Ensure that node dependency is already installed on your system. Refer [Install Node dependency](#install-markdown-link-checker-dependencies)", "url": "https://github.com/pytorch/serve/pull/584#discussion_r526519203", "createdAt": "2020-11-19T00:49:06Z", "author": {"login": "maaquib"}, "path": "docs/code_coverage.md", "diffHunk": "@@ -1,5 +1,7 @@\n ## To check branch stability run the sanity suite as follows\n \n+Ensure that node dependency are already installed in your system. Refer [Install Node dependency](#install-markdown-link-checker-dependencies)  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36dcf61df914a620044ab389b2ecfa18d94127a5"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTIwNjcxOnYy", "diffSide": "RIGHT", "path": "examples/image_classifier/squeezenet/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo1MTo0M1rOH2IPEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNToxODozM1rOH8YjWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyMDA4MQ==", "bodyText": "This instruction doesn't look correct. Example below should be --model-file serve/examples/image_classifier/squeezenet/model.py instead of --model-file examples/image_classifier/squeezenet/model.py", "url": "https://github.com/pytorch/serve/pull/584#discussion_r526520081", "createdAt": "2020-11-19T00:51:43Z", "author": {"login": "maaquib"}, "path": "examples/image_classifier/squeezenet/README.md", "diffHunk": "@@ -0,0 +1,48 @@\n+#### Sample commands to create a squeezenet eager mode model archive, register it on TorchServe and run image prediction\n+\n+Run the commands given in following steps from the parent directory of the root of the repository. For example, if you cloned the repository into /home/my_path/serve, run the steps from /home/my_path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36dcf61df914a620044ab389b2ecfa18d94127a5"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA3ODg3NA==", "bodyText": "Fixed the instructions.", "url": "https://github.com/pytorch/serve/pull/584#discussion_r533078874", "createdAt": "2020-12-01T05:18:33Z", "author": {"login": "harshbafna"}, "path": "examples/image_classifier/squeezenet/README.md", "diffHunk": "@@ -0,0 +1,48 @@\n+#### Sample commands to create a squeezenet eager mode model archive, register it on TorchServe and run image prediction\n+\n+Run the commands given in following steps from the parent directory of the root of the repository. For example, if you cloned the repository into /home/my_path/serve, run the steps from /home/my_path", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyMDA4MQ=="}, "originalCommit": {"oid": "36dcf61df914a620044ab389b2ecfa18d94127a5"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTIwNzI2OnYy", "diffSide": "RIGHT", "path": "examples/image_classifier/squeezenet/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo1MTo1OVrOH2IPZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo1MTo1OVrOH2IPZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyMDE2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Save the Squeezenet1_1 model in as an executable script module or a traced script:\n          \n          \n            \n            * Save the Squeezenet1_1 model as an executable script module or a traced script:", "url": "https://github.com/pytorch/serve/pull/584#discussion_r526520167", "createdAt": "2020-11-19T00:51:59Z", "author": {"login": "maaquib"}, "path": "examples/image_classifier/squeezenet/README.md", "diffHunk": "@@ -0,0 +1,48 @@\n+#### Sample commands to create a squeezenet eager mode model archive, register it on TorchServe and run image prediction\n+\n+Run the commands given in following steps from the parent directory of the root of the repository. For example, if you cloned the repository into /home/my_path/serve, run the steps from /home/my_path\n+\n+```bash\n+wget https://download.pytorch.org/models/squeezenet1_1-f364aa15.pth\n+torch-model-archiver --model-name squeezenet1_1 --version 1.0 --model-file examples/image_classifier/squeezenet/model.py --serialized-file squeezenet1_1-f364aa15.pth --handler image_classifier --extra-files examples/image_classifier/index_to_name.json\n+mkdir model_store\n+mv squeezenet1_1 model_store/\n+torchserve --start --model-store model_store --models squeezenet1_1=squeezenet1_1.mar\n+curl http://127.0.0.1:8080/predictions/squeezenet1_1 -T examples/image_classifier/kitten.jpg\n+```\n+\n+#### TorchScript example using alexnet image classifier:\n+\n+* Save the Squeezenet1_1 model in as an executable script module or a traced script:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36dcf61df914a620044ab389b2ecfa18d94127a5"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1376, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}