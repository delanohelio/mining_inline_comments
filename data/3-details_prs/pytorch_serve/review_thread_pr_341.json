{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MTc2NzA3", "number": 341, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzozMDo1NVrOD_Bd0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzozMDo1NVrOD_Bd0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDEwODk5OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/metrics/MetricCollector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzozMDo1NVrOGZeuQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOToxMjoyOFrOGZhXjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MDk0Nw==", "bodyText": "Seems like we are repeating this code. This logic exists in WorkerLifeCycle.java as well. We could probably pull this logic of pulling environtment variables and filtering out blacklisted environment variables into a util file and use the methods here and in workerlifecycle.", "url": "https://github.com/pytorch/serve/pull/341#discussion_r429370947", "createdAt": "2020-05-22T17:30:55Z", "author": {"login": "vdantu"}, "path": "frontend/server/src/main/java/org/pytorch/serve/metrics/MetricCollector.java", "diffHunk": "@@ -40,23 +42,37 @@ public void run() {\n             String pythonEnv;\n             if ((pythonPath == null || pythonPath.isEmpty())\n                     && (!workingDir.getAbsolutePath().contains(\"site-package\"))) {\n-                pythonEnv = \"PYTHONPATH=\" + workingDir.getAbsolutePath();\n+                pythonEnv = workingDir.getAbsolutePath();\n             } else {\n-                pythonEnv = \"PYTHONPATH=\" + pythonPath;\n+                pythonEnv = pythonPath;\n                 if (!workingDir.getAbsolutePath().contains(\"site-package\")) {\n                     pythonEnv += File.pathSeparatorChar + workingDir.getAbsolutePath(); // NOPMD\n                 }\n             }\n             // sbin added for macs for python sysctl pythonpath\n+            HashMap<String, String> environment = new HashMap<>(System.getenv());\n+            environment.put(\"PYTHONPATH\", pythonEnv);\n+\n             StringBuilder path = new StringBuilder();\n-            path.append(\"PATH=\").append(System.getenv(\"PATH\"));\n+            path.append(System.getenv(\"PATH\"));\n             String osName = System.getProperty(\"os.name\");\n             if (osName.startsWith(\"Mac OS X\")) {\n                 path.append(File.pathSeparatorChar).append(\"/sbin/\");\n             }\n-            String[] env = {pythonEnv, path.toString()};\n-            final Process p = Runtime.getRuntime().exec(args, env, workingDir);\n \n+            environment.put(\"PATH\", path.toString());\n+            ArrayList<String> envList = new ArrayList<>();\n+            Pattern blackList = configManager.getBlacklistPattern();\n+\n+            for (Map.Entry<String, String> entry : environment.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60340d6340bc19e742d8c349de81f8df9c2b534a"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQxNDI4NA==", "bodyText": "@harshbafna @vdantu Merging this for now. Created #386 to refactor this to a utils class", "url": "https://github.com/pytorch/serve/pull/341#discussion_r429414284", "createdAt": "2020-05-22T19:12:28Z", "author": {"login": "maaquib"}, "path": "frontend/server/src/main/java/org/pytorch/serve/metrics/MetricCollector.java", "diffHunk": "@@ -40,23 +42,37 @@ public void run() {\n             String pythonEnv;\n             if ((pythonPath == null || pythonPath.isEmpty())\n                     && (!workingDir.getAbsolutePath().contains(\"site-package\"))) {\n-                pythonEnv = \"PYTHONPATH=\" + workingDir.getAbsolutePath();\n+                pythonEnv = workingDir.getAbsolutePath();\n             } else {\n-                pythonEnv = \"PYTHONPATH=\" + pythonPath;\n+                pythonEnv = pythonPath;\n                 if (!workingDir.getAbsolutePath().contains(\"site-package\")) {\n                     pythonEnv += File.pathSeparatorChar + workingDir.getAbsolutePath(); // NOPMD\n                 }\n             }\n             // sbin added for macs for python sysctl pythonpath\n+            HashMap<String, String> environment = new HashMap<>(System.getenv());\n+            environment.put(\"PYTHONPATH\", pythonEnv);\n+\n             StringBuilder path = new StringBuilder();\n-            path.append(\"PATH=\").append(System.getenv(\"PATH\"));\n+            path.append(System.getenv(\"PATH\"));\n             String osName = System.getProperty(\"os.name\");\n             if (osName.startsWith(\"Mac OS X\")) {\n                 path.append(File.pathSeparatorChar).append(\"/sbin/\");\n             }\n-            String[] env = {pythonEnv, path.toString()};\n-            final Process p = Runtime.getRuntime().exec(args, env, workingDir);\n \n+            environment.put(\"PATH\", path.toString());\n+            ArrayList<String> envList = new ArrayList<>();\n+            Pattern blackList = configManager.getBlacklistPattern();\n+\n+            for (Map.Entry<String, String> entry : environment.entrySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MDk0Nw=="}, "originalCommit": {"oid": "60340d6340bc19e742d8c349de81f8df9c2b534a"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1657, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}