{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MDA1Nzc0", "number": 151, "title": "Do not change default version unless asked", "bodyText": "Description\nCustomers would want to perform A/B testing without disrupting status quo in production. So leaving default version untouched makes sense since we already have an API for setting default explicitly.\nFixes #43\nType of change\nPlease delete options that are not relevant.\n\n Enhancement\n\nFeature/Issue validation/testing\n\n\nRegister a model with version 1.0\n\n\nRegister another model with same name but different version , say 1.1\n\n\nThe list models api  : http://localhost:8081/models\n\nshould list the mar file associated with version 1.0 (default)\n\n\n\nTry unregistering the default version - fail\n\n\nTry unregistering 1.0 version - fail\n\n\nSet 1.1 as default version\n\n\nThe list models api  : http://localhost:8081/models\n\nshould list the mar file associated with version 1.1 (default)\n\n\n\nTry unregistering 1.1 version - fail\n\n\nTry unregistering the default version - fail (default)\n\n\nTry unregistering 1.0 version - success (non-default)\n\n\nTry unregistering 1.1 version - success (default but last version remaining for model)\n\n\nUT/IT execution results\nissue_43_frontend_build_logs.txt\n\n\nChecklist:\n\n Have you added tests that prove your fix is effective or that this feature works?\n New and existing unit tests pass locally with these changes?\n Has code been commented, particularly in hard-to-understand areas?\n Have you made corresponding changes to the documentation?", "createdAt": "2020-04-01T13:44:50Z", "url": "https://github.com/pytorch/serve/pull/151", "merged": true, "mergeCommit": {"oid": "17a29eae0500c455cfe31f409dd8ea584f06d23a"}, "closed": true, "closedAt": "2020-04-09T16:26:39Z", "author": {"login": "harshbafna"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTX7ylAH2gAyMzk3MDA1Nzc0OmUzYTkzNmIyNGQ5ZmYwOGI3Zjg5ZmMyY2FjY2YxNGMzMTcxYzI1NTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcV-7WfAFqTM5MDkzOTQ5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3a936b24d9ff08b7f89fc2caccf14c3171c2553", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/e3a936b24d9ff08b7f89fc2caccf14c3171c2553", "committedDate": "2020-04-01T13:43:46Z", "message": "changes to not change the default version of a model unless asked"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NjI3MzE5", "url": "https://github.com/pytorch/serve/pull/151#pullrequestreview-388627319", "createdAt": "2020-04-06T21:22:40Z", "commit": {"oid": "e3a936b24d9ff08b7f89fc2caccf14c3171c2553"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMToyMjo0MVrOGBqaCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMToyMjo0MVrOGBqaCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM5NjU1NA==", "bodyText": "This change looks okay, but there's a problem in line 50:\nif (this.modelsVersionMap.putIfAbsent(Double.valueOf(versionId), model) != null) {\n\nThis cast to double is problematic. The version is taken in by the model archiver as a string (qv: model-archiver/model_archiver/arg_parser.py). If someone includes a version string that can't be cast to a double (\"1.0.1\", \"v1.0\"), they'll get no error from the model archiver, but this method will throw a java.lang.NumberFormatException.\nIs there any reason modelsVersionMap can't be a ConcurrentHashMap<String, Model>?", "url": "https://github.com/pytorch/serve/pull/151#discussion_r404396554", "createdAt": "2020-04-06T21:22:41Z", "author": {"login": "fbbradheintz"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelVersionedRefs.java", "diffHunk": "@@ -55,8 +55,9 @@ public void addVersionModel(Model model, String versionId)\n                             + model.getModelName());\n         }\n \n-        // TODO what if user wants to keep existing default as it is?\n-        this.setDefaultVersion(versionId);\n+        if (this.defaultVersion == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3a936b24d9ff08b7f89fc2caccf14c3171c2553"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4ae7d5e2bfc298b6c17da942a72960f10362d09", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/b4ae7d5e2bfc298b6c17da942a72960f10362d09", "committedDate": "2020-04-07T09:10:58Z", "message": "Merge branch 'stage_release' into issue_43"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeab443435644e638c091552693d89700f6f4778", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/aeab443435644e638c091552693d89700f6f4778", "committedDate": "2020-04-07T10:20:57Z", "message": "refactored version type as string"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a616df78bc86fa05da37d4fbc3cfcce908505d6", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/8a616df78bc86fa05da37d4fbc3cfcce908505d6", "committedDate": "2020-04-07T10:24:28Z", "message": "updated documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzQwNDc5", "url": "https://github.com/pytorch/serve/pull/151#pullrequestreview-390340479", "createdAt": "2020-04-08T21:20:08Z", "commit": {"oid": "8a616df78bc86fa05da37d4fbc3cfcce908505d6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMToyMDowOFrOGDBZsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMToyMDowOFrOGDBZsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgyMTg3Mg==", "bodyText": "This PR is looking much better. The only thing missing is a test case for non-Double-parseable version strings, e.g. \"v1.0.3\".", "url": "https://github.com/pytorch/serve/pull/151#discussion_r405821872", "createdAt": "2020-04-08T21:20:08Z", "author": {"login": "fbbradheintz"}, "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -151,11 +151,11 @@ public void test()\n         testLoadModelWithInitialWorkers(managementChannel, \"noop.mar\", \"noop\");\n         testLoadModelWithInitialWorkers(managementChannel, \"noop.mar\", \"noopversioned\");\n         testLoadModelWithInitialWorkers(managementChannel, \"noop_v2.mar\", \"noopversioned\");\n-        testDescribeModel(managementChannel, \"noopversioned\", null, \"1.21\");\n-        testDescribeModel(managementChannel, \"noopversioned\", \"all\", \"1.11\");\n+        testDescribeModel(managementChannel, \"noopversioned\", null, \"1.11\");\n+        testDescribeModel(managementChannel, \"noopversioned\", \"all\", \"1.21\");\n         testDescribeModel(managementChannel, \"noopversioned\", \"1.11\", \"1.11\");\n         testPredictions(channel, \"noopversioned\", \"OK\", \"1.21\");\n-        testSetDefault(managementChannel, \"noopversioned\", \"1.11\");\n+        testSetDefault(managementChannel, \"noopversioned\", \"1.21\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a616df78bc86fa05da37d4fbc3cfcce908505d6"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df9506087dc4ea3139f6772a7c1432a1930ee2f4", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/df9506087dc4ea3139f6772a7c1432a1930ee2f4", "committedDate": "2020-04-09T11:32:44Z", "message": "changed model version to string format in UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab39fc6b6ff02a4368ccee637bc5c7722306bebf", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/ab39fc6b6ff02a4368ccee637bc5c7722306bebf", "committedDate": "2020-04-09T11:58:56Z", "message": "updated missed out version change in UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "510264c9e3741be2a8d0f355d857a29a5c3af51f", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/510264c9e3741be2a8d0f355d857a29a5c3af51f", "committedDate": "2020-04-09T13:14:24Z", "message": "updated error message on invalid model version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23df0d9ff8281b67774ebd425c4865d1b5a543e3", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/23df0d9ff8281b67774ebd425c4865d1b5a543e3", "committedDate": "2020-04-09T13:26:20Z", "message": "added UT for setting non-existent model version as default"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "447310630bccdba9170d68e8fb561a9f07ff8a8a", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/447310630bccdba9170d68e8fb561a9f07ff8a8a", "committedDate": "2020-04-09T13:37:41Z", "message": "Merge branch 'stage_release' into issue_43"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "200f3906ad147794d61874bee05bd244c3575535", "author": {"user": {"login": "harshbafna", "name": "Harsh Bafna"}}, "url": "https://github.com/pytorch/serve/commit/200f3906ad147794d61874bee05bd244c3575535", "committedDate": "2020-04-09T14:25:08Z", "message": "made changes for fixing build failures merging stage_release branch"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwOTM5NDkz", "url": "https://github.com/pytorch/serve/pull/151#pullrequestreview-390939493", "createdAt": "2020-04-09T16:17:26Z", "commit": {"oid": "200f3906ad147794d61874bee05bd244c3575535"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2464, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}