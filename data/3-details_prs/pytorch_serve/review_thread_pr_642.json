{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNDU1MjI1", "number": 642, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMTozODo1NlrOEbhyTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOToxMTo1OFrOEtn-PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MzAwNTU5OnYy", "diffSide": "RIGHT", "path": "docker/Dockerfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMTozODo1N1rOHFgkyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMTo0MjoxNVrOHFgrAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzODYzMw==", "bodyText": "Looks to be duplicate?", "url": "https://github.com/pytorch/serve/pull/642#discussion_r475538633", "createdAt": "2020-08-24T11:38:57Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "docker/Dockerfile", "diffHunk": "@@ -19,7 +19,7 @@\n ARG BASE_IMAGE=ubuntu:18.04\n \n FROM ${BASE_IMAGE} AS compile-image\n-\n+ARG BASE_IMAGE=ubuntu:18.04", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12bcdecc5da04d8fd443f241a281004856c381e2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0MDIyNQ==", "bodyText": "To refer the variable for installing cuda version specific packages, it needs to be reloaded after FROM statement.", "url": "https://github.com/pytorch/serve/pull/642#discussion_r475540225", "createdAt": "2020-08-24T11:42:15Z", "author": {"login": "harshbafna"}, "path": "docker/Dockerfile", "diffHunk": "@@ -19,7 +19,7 @@\n ARG BASE_IMAGE=ubuntu:18.04\n \n FROM ${BASE_IMAGE} AS compile-image\n-\n+ARG BASE_IMAGE=ubuntu:18.04", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzODYzMw=="}, "originalCommit": {"oid": "12bcdecc5da04d8fd443f241a281004856c381e2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Mzk5NDE0OnYy", "diffSide": "RIGHT", "path": "docker/Dockerfile", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo1MzozMVrOHRgVDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNTozMjowNlrOHj95Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExNzUxNw==", "bodyText": "@harshbafna Shouldn't this be in the else part based on the check?\nAlso please have the torchvision + cuda version a variable so that we don't have to keep changing the Dockerfile with each release", "url": "https://github.com/pytorch/serve/pull/642#discussion_r488117517", "createdAt": "2020-09-14T17:53:31Z", "author": {"login": "chauhang"}, "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1819bbd35130911ba9a599800c0714799dcffc5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY4MDk5Ng==", "bodyText": "@harshbafna ping", "url": "https://github.com/pytorch/serve/pull/642#discussion_r497680996", "createdAt": "2020-09-30T17:26:11Z", "author": {"login": "maaquib"}, "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExNzUxNw=="}, "originalCommit": {"oid": "e1819bbd35130911ba9a599800c0714799dcffc5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1NDU4NQ==", "bodyText": "@harshbafna Any update on this?", "url": "https://github.com/pytorch/serve/pull/642#discussion_r506954585", "createdAt": "2020-10-17T15:34:56Z", "author": {"login": "chauhang"}, "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExNzUxNw=="}, "originalCommit": {"oid": "e1819bbd35130911ba9a599800c0714799dcffc5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ3NjI3OQ==", "bodyText": "@chauhang: This has been taken care of. @jeremiahschung has implemented these changes. Could you please review it once again?", "url": "https://github.com/pytorch/serve/pull/642#discussion_r507476279", "createdAt": "2020-10-19T05:32:06Z", "author": {"login": "harshbafna"}, "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExNzUxNw=="}, "originalCommit": {"oid": "e1819bbd35130911ba9a599800c0714799dcffc5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDkzNTQwOnYy", "diffSide": "RIGHT", "path": "docker/Dockerfile", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowNjowNlrOHgWoog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzozOToyMFrOHhGH4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzMzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n          \n          \n            \n                pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\\n          \n          \n            \n                else \\\n          \n          \n            \n                pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver; \\\n          \n          \n            \n                fi\n          \n          \n            \n            ARG CUDA_VERSION=\"\"\n          \n          \n            \n            \n          \n          \n            \n            RUN TORCH_VER=$(curl --silent --location https://pypi.org/pypi/torch/json | python -c \"import sys, json, pkg_resources; releases = json.load(sys.stdin)['releases']; print(sorted(releases, key=pkg_resources.parse_version)[-1])\") && \\\n          \n          \n            \n                TORCH_VISION_VER=$(curl --silent --location https://pypi.org/pypi/torchvision/json | python -c \"import sys, json, pkg_resources; releases = json.load(sys.stdin)['releases']; print(sorted(releases, key=pkg_resources.parse_version)[-1])\") && \\\n          \n          \n            \n                if echo \"$BASE_IMAGE\" | grep -q \"cuda:\"; then \\\n          \n          \n            \n                    # Install CUDA version specific binary when CUDA version is specified as a build arg\n          \n          \n            \n                    if [ \"$CUDA_VERSION\" ]; then \\\n          \n          \n            \n                        pip install --no-cache-dir torch==$TORCH_VER+$CUDA_VERSION torchvision==$TORCH_VISION_VER+$CUDA_VERSION -f https://download.pytorch.org/whl/torch_stable.html; \\\n          \n          \n            \n                    # Install the binary with the latest CUDA version support\n          \n          \n            \n                    else \\\n          \n          \n            \n                        pip install --no-cache-dir torch torchvision; \\\n          \n          \n            \n                    fi \\\n          \n          \n            \n                # Install the CPU binary\n          \n          \n            \n                else \\\n          \n          \n            \n                    pip install --no-cache-dir torch==$TORCH_VER+cpu torchvision==$TORCH_VISION_VER+cpu -f https://download.pytorch.org/whl/torch_stable.html; \\\n          \n          \n            \n                fi\n          \n          \n            \n            RUN pip install --no-cache-dir torchtext torchserve torch-model-archiver", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503687330", "createdAt": "2020-10-13T06:06:06Z", "author": {"login": "jeremiahschung"}, "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\\n+    else \\\n+    pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver; \\\n+    fi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c38aabc856ae2f96b158e98e2a98762a044dce4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTQ5NQ==", "bodyText": "Added suggestion that adds:\n\nChecks for the CUDA_VERSION build argument and if present, installs the newest version of torch/torchvision with the supplied cuda version in the format of \"cuda101\", \"cuda92\".\nPulls the CPU torch/torchvision binary when the BASE_IMAGE isn't explicitly passed in with the string \"cuda\". Before, the script was pulling the GPU-enabled binaries by default for CPU image builds. The resulting image is about 1GB smaller compared to the result of the previous build. (1.92GB -> 945MB)\nSupports legacy CUDA versions (e.g. cu92, etc.)\n\nFor the latest CUDA version that torch supports, users will have to specify a base image that supports it and NOT pass in the CUDA_VERSION argument. Made suggestion in the documentation too.", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503689495", "createdAt": "2020-10-13T06:12:06Z", "author": {"login": "jeremiahschung"}, "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\\n+    else \\\n+    pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver; \\\n+    fi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzMzMA=="}, "originalCommit": {"oid": "7c38aabc856ae2f96b158e98e2a98762a044dce4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5NzA5NA==", "bodyText": "The goal here is to write the Dockerfile in a way that we don't have to modify it later.\nSince the commands \"pip install torch\" will always be updated to pull the latest GPU-enabled binary, there wasn't a way to fully automate this without a way to query the latest CUDA version that PT supports.\nI initially parsed the BASE_IMAGE string to deduce the CUDA version and tried using the -f flag to search on download.pytorch.org for all GPU based builds. This didn't work because the latest PT1.6 + CUDA 102 is named as \"torch-1.6.0\" instead of \"torch-1.6.0+cu102\" and pip failed to find the correct binary.\nSo while not ideal, users can get the latest CUDA + PT binaries by using the correct BASE_IMAGE and not supplying the CUDA_VERSION arg. For older versions, passing in the CUDA_VERSION arg will make the build find the correct binary.", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503697094", "createdAt": "2020-10-13T06:31:45Z", "author": {"login": "jeremiahschung"}, "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\\n+    else \\\n+    pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver; \\\n+    fi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzMzMA=="}, "originalCommit": {"oid": "7c38aabc856ae2f96b158e98e2a98762a044dce4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxNTg1OQ==", "bodyText": "Attaching build logs:\ncpu_log.txt\ncuda101_log.txt\ncuda102_log.txt", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503715859", "createdAt": "2020-10-13T07:11:55Z", "author": {"login": "jeremiahschung"}, "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\\n+    else \\\n+    pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver; \\\n+    fi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzMzMA=="}, "originalCommit": {"oid": "7c38aabc856ae2f96b158e98e2a98762a044dce4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ2NTM3Ng==", "bodyText": "Thanks, @jeremiahschung. Merged all the recommendations :-)", "url": "https://github.com/pytorch/serve/pull/642#discussion_r504465376", "createdAt": "2020-10-14T07:39:20Z", "author": {"login": "harshbafna"}, "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\\n+    else \\\n+    pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver; \\\n+    fi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzMzMA=="}, "originalCommit": {"oid": "7c38aabc856ae2f96b158e98e2a98762a044dce4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk2ODIzOnYy", "diffSide": "RIGHT", "path": "docker/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoxOTo0NVrOHgW8Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoxOTo0NVrOHgW8Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5MjI5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For creating GPU based image with Cuda 10.1 :\n          \n          \n            \n            For creating GPU based image with older CUDA versions (ex. CUDA 10.1):", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503692291", "createdAt": "2020-10-13T06:19:45Z", "author": {"login": "jeremiahschung"}, "path": "docker/README.md", "diffHunk": "@@ -29,7 +29,14 @@ For creating CPU based image :\n DOCKER_BUILDKIT=1 docker build --file Dockerfile -t torchserve:latest .\n ```\n \n-For creating GPU based image :\n+For creating GPU based image with Cuda 10.2 :\n+\n+```bash\n+DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .\n+```\n+\n+For creating GPU based image with Cuda 10.1 :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c38aabc856ae2f96b158e98e2a98762a044dce4"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk2ODg4OnYy", "diffSide": "RIGHT", "path": "docker/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyMDowNVrOHgW8cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyMDowNVrOHgW8cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5MjQwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .\n          \n          \n            \n            DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 --build-arg CUDA_VERSION=cu101 -t torchserve:latest .", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503692401", "createdAt": "2020-10-13T06:20:05Z", "author": {"login": "jeremiahschung"}, "path": "docker/README.md", "diffHunk": "@@ -29,7 +29,14 @@ For creating CPU based image :\n DOCKER_BUILDKIT=1 docker build --file Dockerfile -t torchserve:latest .\n ```\n \n-For creating GPU based image :\n+For creating GPU based image with Cuda 10.2 :\n+\n+```bash\n+DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .\n+```\n+\n+For creating GPU based image with Cuda 10.1 :\n+\n ```bash\n DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c38aabc856ae2f96b158e98e2a98762a044dce4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk3NTM2OnYy", "diffSide": "RIGHT", "path": "docker/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyMjozNlrOHgXAPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyMjozNlrOHgXAPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5MzM3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For creating GPU based image with Cuda 10.2 :\n          \n          \n            \n            For creating GPU based image with the latest CUDA version PyTorch supports (ex. CUDA 10.2 as of Oct 2020):", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503693373", "createdAt": "2020-10-13T06:22:36Z", "author": {"login": "jeremiahschung"}, "path": "docker/README.md", "diffHunk": "@@ -29,7 +29,14 @@ For creating CPU based image :\n DOCKER_BUILDKIT=1 docker build --file Dockerfile -t torchserve:latest .\n ```\n \n-For creating GPU based image :\n+For creating GPU based image with Cuda 10.2 :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c38aabc856ae2f96b158e98e2a98762a044dce4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2Mjc2Mjg1OnYy", "diffSide": "RIGHT", "path": "docker/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOToxMTo1OFrOHhhVCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOToxMTo1OFrOHhhVCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkxMTExNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For creating GPU based image with older CUDA versions (ex. CUDA 10.1):\n          \n          \n            \n            For creating GPU based image with older CUDA versions (ex. CUDA 10.1), make sure that the `--build-arg CUDA_VERSION=<version>` is specified. The version is in the format \"cuda92\", \"cuda101\":", "url": "https://github.com/pytorch/serve/pull/642#discussion_r504911114", "createdAt": "2020-10-14T19:11:58Z", "author": {"login": "jeremiahschung"}, "path": "docker/README.md", "diffHunk": "@@ -29,9 +29,16 @@ For creating CPU based image :\n DOCKER_BUILDKIT=1 docker build --file Dockerfile -t torchserve:latest .\n ```\n \n-For creating GPU based image :\n+For creating GPU based image with the latest CUDA version PyTorch supports (ex. CUDA 10.2 as of Oct 2020):\n+\n+```bash\n+DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .\n+```\n+\n+For creating GPU based image with older CUDA versions (ex. CUDA 10.1):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7849fbc8d2a53c59cb7d290437a76d65ee95bf25"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1407, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}