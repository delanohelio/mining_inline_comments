{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MDAyMDE4", "number": 749, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMjoxNjo1OFrOE7RJuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMjoyNTozM1rOE7RUkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTgyNDU2OnYy", "diffSide": "RIGHT", "path": "docs/default_handlers.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMjoxNjo1OFrOH20Oqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjoyMTo1M1rOH3WkXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI0MDg3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. Run and update the unit tests in [unit_tests](https://github.com/pytorch/serve/tree/master/ts/torch_handler/unit_tests). As always, make sure to run [torchserve_sanity.sh](https://github.com/pytorch/serve/tree/master/torchserve_sanity.sh) before submitting.\n          \n          \n            \n            1. Run and update the unit tests in [unit_tests](https://github.com/pytorch/serve/tree/master/ts/torch_handler/unit_tests). As always, make sure to run [torchserve_sanity.sh](https://github.com/pytorch/serve/tree/master/torchserve_sanity.py) before submitting.", "url": "https://github.com/pytorch/serve/pull/749#discussion_r527240875", "createdAt": "2020-11-19T22:16:58Z", "author": {"login": "maaquib"}, "path": "docs/default_handlers.md", "diffHunk": "@@ -46,4 +46,7 @@ For more details see [examples](https://github.com/pytorch/serve/tree/master/exa\n - [object_detector](https://github.com/pytorch/serve/tree/master/examples/object_detector/index_to_name.json)\n \n # Contributing\n-If you'd like to edit or create a new default_handler class, make sure to run and update the unit tests in [unit_tests](https://github.com/pytorch/serve/tree/master/ts/torch_handler/unit_tests). As always, make sure to run [torchserve_sanity.sh](https://github.com/pytorch/serve/tree/master/torchserve_sanity.sh) before submitting.\n+If you'd like to edit or create a new default_handler class, you need to take the following steps:\n+1. Write a new class derived from BaseHandler. Add it as a separate file in `ts/torch_handler/`\n+1. Update `model-archiver/model_packaging.py` to add in your classes name\n+1. Run and update the unit tests in [unit_tests](https://github.com/pytorch/serve/tree/master/ts/torch_handler/unit_tests). As always, make sure to run [torchserve_sanity.sh](https://github.com/pytorch/serve/tree/master/torchserve_sanity.sh) before submitting.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5df8461d10e71a94f5737f70bfa0f999a6856d05"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc5OTMwMw==", "bodyText": "The test suite can be either ran by the   ./ts/torch_handler/unit_tests/run_unit_tests.sh command or by running\npython -m pytest test_envelopes.py after the model artifacts are moved to the ts/torch_handler/unit_tests/models/tmp folder.\nAs all the unit test files requires the model artifacts to be present inside 'tmp' folder. These model artifacts are downloaded or moved to the 'tmp' in 'ts/torch_handler/unit_tests/run_unit_tests.sh' and deleted on completion.", "url": "https://github.com/pytorch/serve/pull/749#discussion_r527799303", "createdAt": "2020-11-20T16:15:24Z", "author": {"login": "abishekchiffon"}, "path": "docs/default_handlers.md", "diffHunk": "@@ -46,4 +46,7 @@ For more details see [examples](https://github.com/pytorch/serve/tree/master/exa\n - [object_detector](https://github.com/pytorch/serve/tree/master/examples/object_detector/index_to_name.json)\n \n # Contributing\n-If you'd like to edit or create a new default_handler class, make sure to run and update the unit tests in [unit_tests](https://github.com/pytorch/serve/tree/master/ts/torch_handler/unit_tests). As always, make sure to run [torchserve_sanity.sh](https://github.com/pytorch/serve/tree/master/torchserve_sanity.sh) before submitting.\n+If you'd like to edit or create a new default_handler class, you need to take the following steps:\n+1. Write a new class derived from BaseHandler. Add it as a separate file in `ts/torch_handler/`\n+1. Update `model-archiver/model_packaging.py` to add in your classes name\n+1. Run and update the unit tests in [unit_tests](https://github.com/pytorch/serve/tree/master/ts/torch_handler/unit_tests). As always, make sure to run [torchserve_sanity.sh](https://github.com/pytorch/serve/tree/master/torchserve_sanity.sh) before submitting.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI0MDg3NQ=="}, "originalCommit": {"oid": "5df8461d10e71a94f5737f70bfa0f999a6856d05"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgwMzQ4NQ==", "bodyText": "Made the suggested change in the default_handlers.", "url": "https://github.com/pytorch/serve/pull/749#discussion_r527803485", "createdAt": "2020-11-20T16:21:53Z", "author": {"login": "abishekchiffon"}, "path": "docs/default_handlers.md", "diffHunk": "@@ -46,4 +46,7 @@ For more details see [examples](https://github.com/pytorch/serve/tree/master/exa\n - [object_detector](https://github.com/pytorch/serve/tree/master/examples/object_detector/index_to_name.json)\n \n # Contributing\n-If you'd like to edit or create a new default_handler class, make sure to run and update the unit tests in [unit_tests](https://github.com/pytorch/serve/tree/master/ts/torch_handler/unit_tests). As always, make sure to run [torchserve_sanity.sh](https://github.com/pytorch/serve/tree/master/torchserve_sanity.sh) before submitting.\n+If you'd like to edit or create a new default_handler class, you need to take the following steps:\n+1. Write a new class derived from BaseHandler. Add it as a separate file in `ts/torch_handler/`\n+1. Update `model-archiver/model_packaging.py` to add in your classes name\n+1. Run and update the unit tests in [unit_tests](https://github.com/pytorch/serve/tree/master/ts/torch_handler/unit_tests). As always, make sure to run [torchserve_sanity.sh](https://github.com/pytorch/serve/tree/master/torchserve_sanity.sh) before submitting.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI0MDg3NQ=="}, "originalCommit": {"oid": "5df8461d10e71a94f5737f70bfa0f999a6856d05"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTg1MjM0OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/util/codec/ModelRequestEncoder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMjoyNTozM1rOH20flA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo1ODo0N1rOH3Vpyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI0NTIwNA==", "bodyText": "Agreed. Does look like a bug", "url": "https://github.com/pytorch/serve/pull/749#discussion_r527245204", "createdAt": "2020-11-19T22:25:33Z", "author": {"login": "maaquib"}, "path": "frontend/server/src/main/java/org/pytorch/serve/util/codec/ModelRequestEncoder.java", "diffHunk": "@@ -43,10 +43,23 @@ protected void encode(ChannelHandlerContext ctx, BaseModelRequest msg, ByteBuf o\n                 buf = handler.getBytes(StandardCharsets.UTF_8);\n             }\n \n+            // TODO: this might be a bug. If handler isn't specified, this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5df8461d10e71a94f5737f70bfa0f999a6856d05"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc4ODQ5MQ==", "bodyText": "I will create an issue for the bug.", "url": "https://github.com/pytorch/serve/pull/749#discussion_r527788491", "createdAt": "2020-11-20T15:58:47Z", "author": {"login": "abishekchiffon"}, "path": "frontend/server/src/main/java/org/pytorch/serve/util/codec/ModelRequestEncoder.java", "diffHunk": "@@ -43,10 +43,23 @@ protected void encode(ChannelHandlerContext ctx, BaseModelRequest msg, ByteBuf o\n                 buf = handler.getBytes(StandardCharsets.UTF_8);\n             }\n \n+            // TODO: this might be a bug. If handler isn't specified, this", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI0NTIwNA=="}, "originalCommit": {"oid": "5df8461d10e71a94f5737f70bfa0f999a6856d05"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1454, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}