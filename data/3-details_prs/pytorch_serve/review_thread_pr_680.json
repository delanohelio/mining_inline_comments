{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzODgxMTU0", "number": 680, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOToxMzoyOFrOEotQCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOToxNzo1MlrOEotamw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTE5ODgyOnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerThread.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOToxMzoyOFrOHZ9EMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0MDowMlrOHkzqkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk3Njk0NA==", "bodyText": "NIT: This seems to be nvidia specific. Can you investigate if we can do this in a more generic way using some opengl java library?", "url": "https://github.com/pytorch/serve/pull/680#discussion_r496976944", "createdAt": "2020-09-29T19:13:28Z", "author": {"login": "maaquib"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerThread.java", "diffHunk": "@@ -76,6 +80,47 @@ public WorkerState getState() {\n         return state;\n     }\n \n+    public String getGpuUsage() {\n+        Process process;\n+        StringBuffer gpuUsage = new StringBuffer();\n+        if (gpuId >= 0) {\n+            try {\n+                process =\n+                        Runtime.getRuntime()\n+                                .exec(\n+                                        \"nvidia-smi -i \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bda0ec8fd8aa681dcbd1c81f3f83cdc1e0035fa"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM5MjcwMw==", "bodyText": "@maaquib: Agreed, we should use a more generic approach. However, we are currently supporting NVIDIA-CUDA only. I will add a TODO for this.", "url": "https://github.com/pytorch/serve/pull/680#discussion_r504392703", "createdAt": "2020-10-14T04:22:28Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerThread.java", "diffHunk": "@@ -76,6 +80,47 @@ public WorkerState getState() {\n         return state;\n     }\n \n+    public String getGpuUsage() {\n+        Process process;\n+        StringBuffer gpuUsage = new StringBuffer();\n+        if (gpuId >= 0) {\n+            try {\n+                process =\n+                        Runtime.getRuntime()\n+                                .exec(\n+                                        \"nvidia-smi -i \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk3Njk0NA=="}, "originalCommit": {"oid": "9bda0ec8fd8aa681dcbd1c81f3f83cdc1e0035fa"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyNTU0MA==", "bodyText": "Done.", "url": "https://github.com/pytorch/serve/pull/680#discussion_r504625540", "createdAt": "2020-10-14T12:11:55Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerThread.java", "diffHunk": "@@ -76,6 +80,47 @@ public WorkerState getState() {\n         return state;\n     }\n \n+    public String getGpuUsage() {\n+        Process process;\n+        StringBuffer gpuUsage = new StringBuffer();\n+        if (gpuId >= 0) {\n+            try {\n+                process =\n+                        Runtime.getRuntime()\n+                                .exec(\n+                                        \"nvidia-smi -i \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk3Njk0NA=="}, "originalCommit": {"oid": "9bda0ec8fd8aa681dcbd1c81f3f83cdc1e0035fa"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3Nzg5Mw==", "bodyText": "@harshbafna Instead of just a TODO can you also add an issue to the backlog", "url": "https://github.com/pytorch/serve/pull/680#discussion_r508077893", "createdAt": "2020-10-19T21:38:17Z", "author": {"login": "maaquib"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerThread.java", "diffHunk": "@@ -76,6 +80,47 @@ public WorkerState getState() {\n         return state;\n     }\n \n+    public String getGpuUsage() {\n+        Process process;\n+        StringBuffer gpuUsage = new StringBuffer();\n+        if (gpuId >= 0) {\n+            try {\n+                process =\n+                        Runtime.getRuntime()\n+                                .exec(\n+                                        \"nvidia-smi -i \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk3Njk0NA=="}, "originalCommit": {"oid": "9bda0ec8fd8aa681dcbd1c81f3f83cdc1e0035fa"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM1NzI2NA==", "bodyText": "Done. Created #740.", "url": "https://github.com/pytorch/serve/pull/680#discussion_r508357264", "createdAt": "2020-10-20T09:40:02Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerThread.java", "diffHunk": "@@ -76,6 +80,47 @@ public WorkerState getState() {\n         return state;\n     }\n \n+    public String getGpuUsage() {\n+        Process process;\n+        StringBuffer gpuUsage = new StringBuffer();\n+        if (gpuId >= 0) {\n+            try {\n+                process =\n+                        Runtime.getRuntime()\n+                                .exec(\n+                                        \"nvidia-smi -i \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk3Njk0NA=="}, "originalCommit": {"oid": "9bda0ec8fd8aa681dcbd1c81f3f83cdc1e0035fa"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTIyNTg3OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerThread.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOToxNzo1MlrOHZ9TFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOToxNzo1MlrOHZ9TFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk4MDc1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            InputStream stdout = process.getInputStream();\n          \n          \n            \n                            process.waitFor();\n          \n          \n            \n                            int exitCode = process.exitValue();\n          \n          \n            \n                            if (exitCode != 0) {\n          \n          \n            \n                                // Log error message from process.getErrorStream() and return\n          \n          \n            \n                            }\n          \n          \n            \n                            InputStream stdout = process.getInputStream();", "url": "https://github.com/pytorch/serve/pull/680#discussion_r496980758", "createdAt": "2020-09-29T19:17:52Z", "author": {"login": "maaquib"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerThread.java", "diffHunk": "@@ -76,6 +80,47 @@ public WorkerState getState() {\n         return state;\n     }\n \n+    public String getGpuUsage() {\n+        Process process;\n+        StringBuffer gpuUsage = new StringBuffer();\n+        if (gpuId >= 0) {\n+            try {\n+                process =\n+                        Runtime.getRuntime()\n+                                .exec(\n+                                        \"nvidia-smi -i \"\n+                                                + gpuId\n+                                                + \" --query-gpu=utilization.gpu,utilization.memory,memory.used --format=csv\");\n+                InputStream stdout = process.getInputStream();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bda0ec8fd8aa681dcbd1c81f3f83cdc1e0035fa"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1426, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}