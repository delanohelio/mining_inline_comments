{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MjUyMjgz", "number": 462, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNjoyNToxOFrOEJvG7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODoyMjo0OFrOEPBiyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NjQ0NDYzOnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNjoyNToxOFrOGqYqfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzozMTozMVrOGtyZ4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA5NzQ2OQ==", "bodyText": "How about supporting custom package given as tar/zip or some dist file?", "url": "https://github.com/pytorch/serve/pull/462#discussion_r447097469", "createdAt": "2020-06-29T16:25:18Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java", "diffHunk": "@@ -152,6 +158,27 @@ private ModelArchive createModelArchive(\n         return archive;\n     }\n \n+    private void setupModelDependencies(Model model) throws IOException, InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0bbea16cb553a315bf081fb9b166452ffbc996"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY2NDkzMQ==", "bodyText": "This is already supported. Updated the documentation accordingly.", "url": "https://github.com/pytorch/serve/pull/462#discussion_r450664931", "createdAt": "2020-07-07T07:31:31Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java", "diffHunk": "@@ -152,6 +158,27 @@ private ModelArchive createModelArchive(\n         return archive;\n     }\n \n+    private void setupModelDependencies(Model model) throws IOException, InterruptedException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA5NzQ2OQ=="}, "originalCommit": {"oid": "bf0bbea16cb553a315bf081fb9b166452ffbc996"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTc0Nzc4OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowMjo0MVrOGsYG_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNzowNTowOVrOGsl8vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NTUzMw==", "bodyText": "Does this work if a custom python interpretor has been specified in the config? Wondering if <python_executable> -p pip -U -t ... would be more appropriate", "url": "https://github.com/pytorch/serve/pull/462#discussion_r449185533", "createdAt": "2020-07-02T18:02:41Z", "author": {"login": "maaquib"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java", "diffHunk": "@@ -152,6 +158,27 @@ private ModelArchive createModelArchive(\n         return archive;\n     }\n \n+    private void setupModelDependencies(Model model) throws IOException, InterruptedException {\n+        String requirementsFile =\n+                model.getModelArchive().getManifest().getModel().getRequirementsFile();\n+\n+        if (configManager.getInstallPyDepPerModel() && requirementsFile != null) {\n+            Path requirementsFilePath =\n+                    Paths.get(model.getModelDir().getAbsolutePath(), requirementsFile);\n+\n+            String packageInstallCommand =\n+                    \"pip install -U -t \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0bbea16cb553a315bf081fb9b166452ffbc996"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQxMjI4Ng==", "bodyText": "Done.", "url": "https://github.com/pytorch/serve/pull/462#discussion_r449412286", "createdAt": "2020-07-03T07:05:09Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java", "diffHunk": "@@ -152,6 +158,27 @@ private ModelArchive createModelArchive(\n         return archive;\n     }\n \n+    private void setupModelDependencies(Model model) throws IOException, InterruptedException {\n+        String requirementsFile =\n+                model.getModelArchive().getManifest().getModel().getRequirementsFile();\n+\n+        if (configManager.getInstallPyDepPerModel() && requirementsFile != null) {\n+            Path requirementsFilePath =\n+                    Paths.get(model.getModelDir().getAbsolutePath(), requirementsFile);\n+\n+            String packageInstallCommand =\n+                    \"pip install -U -t \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NTUzMw=="}, "originalCommit": {"oid": "bf0bbea16cb553a315bf081fb9b166452ffbc996"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTg5Mzg1OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODoyMjo0OFrOGygTyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzozMjo1OFrOGyrIFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxMTMzNg==", "bodyText": "@harshbafna How are failure cases handled? eg wrong name of package in the requirements.txt or a package that takes very long to download from internet / fails to download. How are those errors handled? Further errors need to be handled gracefully and make sure that rest of TorchServe / workers do not crash.\nAnd for models with multiple worker threads, the download should happen only once", "url": "https://github.com/pytorch/serve/pull/462#discussion_r455611336", "createdAt": "2020-07-16T08:22:48Z", "author": {"login": "chauhang"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java", "diffHunk": "@@ -152,6 +158,35 @@ private ModelArchive createModelArchive(\n         return archive;\n     }\n \n+    private void setupModelDependencies(Model model) throws IOException, InterruptedException {\n+        String requirementsFile =\n+                model.getModelArchive().getManifest().getModel().getRequirementsFile();\n+\n+        if (configManager.getInstallPyDepPerModel() && requirementsFile != null) {\n+            Path requirementsFilePath =\n+                    Paths.get(model.getModelDir().getAbsolutePath(), requirementsFile);\n+\n+            String pythonRuntime = EnvironmentUtils.getPythonRunTime(model);\n+\n+            String packageInstallCommand =\n+                    pythonRuntime\n+                            + \" -m pip install -U -t \"\n+                            + model.getModelDir().getAbsolutePath()\n+                            + \" -r \"\n+                            + requirementsFilePath; // NOPMD\n+\n+            String[] envp =\n+                    EnvironmentUtils.getEnvString(configManager.getModelServerHome(), null, null);\n+            Process process =\n+                    Runtime.getRuntime()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21df657f5b205edd838b297984ced6c26941c953"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc4ODU2NA==", "bodyText": "@chauhang\n\nHow are failure cases handled? eg wrong name of package in the requirements.txt\n\nAdded error handling in case the pip install fails. Added corresponding UT as well.\n\na package that takes very long to download from internet / fails to download\n\nThe model registration request is synchronous and there is no defined timeout. In case the download fails, then the pip command will fail and TorchServe will return an error message to the client.\n\nAnd for models with multiple worker threads, the download should happen only once\n\nThe installation of the custom packages happens at the time of model registration in a temporary directory where the model archive is extracted. This path is then added to the PYTHONPATH and is passed on to the workers at the time of worker creation.", "url": "https://github.com/pytorch/serve/pull/462#discussion_r455788564", "createdAt": "2020-07-16T13:32:58Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java", "diffHunk": "@@ -152,6 +158,35 @@ private ModelArchive createModelArchive(\n         return archive;\n     }\n \n+    private void setupModelDependencies(Model model) throws IOException, InterruptedException {\n+        String requirementsFile =\n+                model.getModelArchive().getManifest().getModel().getRequirementsFile();\n+\n+        if (configManager.getInstallPyDepPerModel() && requirementsFile != null) {\n+            Path requirementsFilePath =\n+                    Paths.get(model.getModelDir().getAbsolutePath(), requirementsFile);\n+\n+            String pythonRuntime = EnvironmentUtils.getPythonRunTime(model);\n+\n+            String packageInstallCommand =\n+                    pythonRuntime\n+                            + \" -m pip install -U -t \"\n+                            + model.getModelDir().getAbsolutePath()\n+                            + \" -r \"\n+                            + requirementsFilePath; // NOPMD\n+\n+            String[] envp =\n+                    EnvironmentUtils.getEnvString(configManager.getModelServerHome(), null, null);\n+            Process process =\n+                    Runtime.getRuntime()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxMTMzNg=="}, "originalCommit": {"oid": "21df657f5b205edd838b297984ced6c26941c953"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1527, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}