{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyOTcyOTMz", "number": 543, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzoxODoxNFrOEUsI1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzoxODoxNFrOEUsI1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTMwMTMyOnYy", "diffSide": "RIGHT", "path": "frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzoxODoxNFrOG7B5-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoxMzozOVrOG7_Ejw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU1MDM5NQ==", "bodyText": "NIT: log message is not descriptive. We should probably add the model name to go along with the etag", "url": "https://github.com/pytorch/serve/pull/543#discussion_r464550395", "createdAt": "2020-08-03T17:18:14Z", "author": {"login": "maaquib"}, "path": "frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java", "diffHunk": "@@ -133,14 +133,10 @@ public static File unzip(InputStream is, String eTag) throws IOException {\n         }\n         ZipUtils.unzip(new DigestInputStream(is, md), tmp);\n         if (eTag == null) {\n-            eTag = HexUtils.toHexString(md.digest());\n+            eTag = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n         }\n+        logger.info(\"eTag {}\", eTag);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a770a9dd10de10c4f53386e734c44f17b8845b4f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1NDk5Nw==", "bodyText": "I printed the model name and this is the log.\nTorchServeSuite > TorchServe > org.pytorch.serve.ModelServerTest > testLoadModelWithInitialWorkersWithJSONReqBody STANDARD_OUT\n2020-08-04 01:41:03,788 [DEBUG] nioEventLoopGroup-3-4 org.pytorch.serve.wlm.ModelVersionedRefs - Removed model: noop version: 1.11\n2020-08-04 01:41:03,794 [INFO ] nioEventLoopGroup-3-4 org.pytorch.serve.wlm.ModelManager - Model noop unregistered.\n2020-08-04 01:41:03,795 [INFO ] nioEventLoopGroup-3-4 ACCESS_LOG - /127.0.0.1:63658 \"DELETE /models/noop HTTP/1.1\" 200 7\n2020-08-04 01:41:03,795 [INFO ] nioEventLoopGroup-3-4 TS_METRICS - Requests2XX.Count:1|#Level:Host|#hostname:czhong03,timestamp:null\n2020-08-04 01:41:03,799 [INFO ] nioEventLoopGroup-3-4 org.pytorch.serve.wlm.ModelManager - modelName : noop\n2020-08-04 01:41:03,799 [INFO ] nioEventLoopGroup-3-4 org.pytorch.serve.archive.ModelArchive - marFileName : noop.mar\n2020-08-04 01:41:03,805 [INFO ] nioEventLoopGroup-3-4 org.pytorch.serve.archive.ModelArchive - model folder already exists: 29385dfc880480adb4ff8a26d9461d72539fb887\n2020-08-04 01:41:03,806 [INFO ] nioEventLoopGroup-3-4 ACCESS_LOG - /127.0.0.1:63658 \"POST /models HTTP/1.1\" 400 8\n2020-08-04 01:41:03,806 [INFO ] nioEventLoopGroup-3-4 TS_METRICS - Requests4XX.Count:1|#Level:Host|#hostname:czhong03,timestamp:null\nTorchServeSuite > TorchServe > org.pytorch.serve.ModelServerTest > testLoadModelWithInitialWorkersWithJSONReqBody FAILED\njava.lang.AssertionError at ModelServerTest.java:317", "url": "https://github.com/pytorch/serve/pull/543#discussion_r464754997", "createdAt": "2020-08-04T02:01:03Z", "author": {"login": "MengMeng96"}, "path": "frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java", "diffHunk": "@@ -133,14 +133,10 @@ public static File unzip(InputStream is, String eTag) throws IOException {\n         }\n         ZipUtils.unzip(new DigestInputStream(is, md), tmp);\n         if (eTag == null) {\n-            eTag = HexUtils.toHexString(md.digest());\n+            eTag = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n         }\n+        logger.info(\"eTag {}\", eTag);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU1MDM5NQ=="}, "originalCommit": {"oid": "a770a9dd10de10c4f53386e734c44f17b8845b4f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxODgzNQ==", "bodyText": "./torchserve_sanity.sh | grep --line-buffered eTag\n+ source scripts/install_utils\n++ set -euo pipefail\n+ set +u\n+ install_torch_deps\n+ '[' is_gpu_instance ']'\n+ '[' '' == cuda101 ']'\n+ pip install -U -r requirements.txt\n+ set -u\n+ install_pytest_suite_deps\n+ pip install -U -r requirements/developer.txt\n+ install_bert_dependencies\n+ pip install transformers\n+ run_backend_pytest\n+ python -m pytest --cov-report html:htmlcov --cov=ts/ ts/tests/unit_tests/\n+ echo 'Backend test suite execution successful'\n+ build_frontend\n+ frontend/gradlew -p frontend clean build\n    2020-08-04 17:38:35,334 [INFO ] Test worker org.pytorch.serve.archive.ModelArchive - eTag 8652c3fcf1494865a7fb5126afc74e4a\n    2020-08-04 17:38:36,527 [INFO ] epollEventLoopGroup-3-2 org.pytorch.serve.archive.ModelArchive - eTag cd453c8393b2476db54af1f3d544ec39\n    2020-08-04 17:38:36,650 [INFO ] epollEventLoopGroup-3-2 org.pytorch.serve.archive.ModelArchive - eTag a9cf7eae14db4aa99da3e3238287adb6\n    2020-08-04 17:38:36,748 [INFO ] epollEventLoopGroup-3-2 org.pytorch.serve.archive.ModelArchive - eTag 254257fef1704f879291a0383bf132e0\n    2020-08-04 17:38:36,844 [INFO ] epollEventLoopGroup-3-2 org.pytorch.serve.archive.ModelArchive - eTag fbd18c2405d24ea18e188f4ffef89909\n    2020-08-04 17:38:36,971 [INFO ] epollEventLoopGroup-3-2 org.pytorch.serve.archive.ModelArchive - eTag eb7bba80a9394835b36a31d0e70fe5bc\n    2020-08-04 17:38:37,080 [INFO ] epollEventLoopGroup-3-2 org.pytorch.serve.archive.ModelArchive - eTag fd300918ceb14fddbc29358aad5db14d\n    2020-08-04 17:38:37,180 [INFO ] epollEventLoopGroup-3-2 org.pytorch.serve.archive.ModelArchive - eTag 3d5f0fcf085e4934bed16e8bda5f6b7c\n    2020-08-04 17:38:37,975 [INFO ] epollEventLoopGroup-3-2 org.pytorch.serve.archive.ModelArchive - eTag 23c3f2c81fd74e13b698e786be192b92", "url": "https://github.com/pytorch/serve/pull/543#discussion_r465218835", "createdAt": "2020-08-04T17:39:00Z", "author": {"login": "maaquib"}, "path": "frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java", "diffHunk": "@@ -133,14 +133,10 @@ public static File unzip(InputStream is, String eTag) throws IOException {\n         }\n         ZipUtils.unzip(new DigestInputStream(is, md), tmp);\n         if (eTag == null) {\n-            eTag = HexUtils.toHexString(md.digest());\n+            eTag = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n         }\n+        logger.info(\"eTag {}\", eTag);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU1MDM5NQ=="}, "originalCommit": {"oid": "a770a9dd10de10c4f53386e734c44f17b8845b4f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU1MjUyNw==", "bodyText": "NIT: log message is not descriptive. We should probably add the model name to go along with the etag\n\nmodel name doesn't passed to function ModelArchive.unzip() nor function ModelArchive.downloadModel(String modelStore, String url), so add the model name to go along with the etag need to change all the functions that us them. And use UUID is an easier and better way to distinguish these files.\nWhen I run frontend/gradlew.bat -p frontend clean build on Windows 10, there are 3 test cases using the same eTag 29385dfc880480adb4ff8a26d9461d72539fb887, here is the log https://paste.ubuntu.com/p/sBjJmnWDSv/", "url": "https://github.com/pytorch/serve/pull/543#discussion_r465552527", "createdAt": "2020-08-05T08:13:39Z", "author": {"login": "MengMeng96"}, "path": "frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java", "diffHunk": "@@ -133,14 +133,10 @@ public static File unzip(InputStream is, String eTag) throws IOException {\n         }\n         ZipUtils.unzip(new DigestInputStream(is, md), tmp);\n         if (eTag == null) {\n-            eTag = HexUtils.toHexString(md.digest());\n+            eTag = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n         }\n+        logger.info(\"eTag {}\", eTag);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU1MDM5NQ=="}, "originalCommit": {"oid": "a770a9dd10de10c4f53386e734c44f17b8845b4f"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1566, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}