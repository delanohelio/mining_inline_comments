{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMjcxMTEx", "number": 447, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODozNDoxNFrOEEMmJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDo1MzozMFrOEInFlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODM2MTM0OnYy", "diffSide": "RIGHT", "path": "ts/torch_handler/object_detector.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODozNDoxNFrOGhqpWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODozNDoxNFrOGhqpWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NDkwNg==", "bodyText": "Remove unused object.", "url": "https://github.com/pytorch/serve/pull/447#discussion_r437954906", "createdAt": "2020-06-10T08:34:14Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "ts/torch_handler/object_detector.py", "diffHunk": "@@ -2,13 +2,16 @@\n Module for object detection default handler\n \"\"\"\n import io\n+import logging\n import torch\n from PIL import Image\n from torchvision import transforms\n from torchvision import __version__ as torchvision_version\n from torch.autograd import Variable\n from .vision_handler import VisionHandler\n \n+logger = logging.getLogger(__name__)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "767910565bf318685972a4f9d6edba278e45f73d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDY0NDY5OnYy", "diffSide": "RIGHT", "path": "ts/torch_handler/object_detector.py", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDo1MzozMFrOGorT2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMTo1NDoyOFrOGzk4iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMwNTgxNw==", "bodyText": "Wondering if returning an empty list is more appropriate that returning an element a single element with string val.", "url": "https://github.com/pytorch/serve/pull/447#discussion_r445305817", "createdAt": "2020-06-25T04:53:30Z", "author": {"login": "dhanainme"}, "path": "ts/torch_handler/object_detector.py", "diffHunk": "@@ -91,8 +97,9 @@ def handle(data, context):\n \n         data = _service.preprocess(data)\n         data = _service.inference(data)\n-        data = _service.postprocess(data)\n-\n-        return data\n+        if data:\n+            return _service.postprocess(data)\n+        else:\n+            return [\"No object detected\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "673a163f737b3d82d937e74cc1b9487c97f87c89"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY4ODQxMw==", "bodyText": "I am open to both ideas. Can remove the if-else block if you want .", "url": "https://github.com/pytorch/serve/pull/447#discussion_r445688413", "createdAt": "2020-06-25T16:32:26Z", "author": {"login": "harshbafna"}, "path": "ts/torch_handler/object_detector.py", "diffHunk": "@@ -91,8 +97,9 @@ def handle(data, context):\n \n         data = _service.preprocess(data)\n         data = _service.inference(data)\n-        data = _service.postprocess(data)\n-\n-        return data\n+        if data:\n+            return _service.postprocess(data)\n+        else:\n+            return [\"No object detected\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMwNTgxNw=="}, "originalCommit": {"oid": "673a163f737b3d82d937e74cc1b9487c97f87c89"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY4OTMxMA==", "bodyText": "Agreed with @dhanainme", "url": "https://github.com/pytorch/serve/pull/447#discussion_r456689310", "createdAt": "2020-07-17T21:51:20Z", "author": {"login": "maaquib"}, "path": "ts/torch_handler/object_detector.py", "diffHunk": "@@ -91,8 +97,9 @@ def handle(data, context):\n \n         data = _service.preprocess(data)\n         data = _service.inference(data)\n-        data = _service.postprocess(data)\n-\n-        return data\n+        if data:\n+            return _service.postprocess(data)\n+        else:\n+            return [\"No object detected\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMwNTgxNw=="}, "originalCommit": {"oid": "673a163f737b3d82d937e74cc1b9487c97f87c89"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczNDg1OQ==", "bodyText": "Done.", "url": "https://github.com/pytorch/serve/pull/447#discussion_r456734859", "createdAt": "2020-07-18T01:54:28Z", "author": {"login": "harshbafna"}, "path": "ts/torch_handler/object_detector.py", "diffHunk": "@@ -91,8 +97,9 @@ def handle(data, context):\n \n         data = _service.preprocess(data)\n         data = _service.inference(data)\n-        data = _service.postprocess(data)\n-\n-        return data\n+        if data:\n+            return _service.postprocess(data)\n+        else:\n+            return [\"No object detected\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMwNTgxNw=="}, "originalCommit": {"oid": "673a163f737b3d82d937e74cc1b9487c97f87c89"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1511, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}