{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNjc0OTE2", "number": 282, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzoxMTo0M1rOD360yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzozNzo0M1rOD37XDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTYyMDU4OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzoxMTo0M1rOGOci5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMDo0ODozNlrOGOj8Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgwMDkzMg==", "bodyText": "Should this be 'throw ModelVersionNotFoundException'? Also, let's keep only one class.", "url": "https://github.com/pytorch/serve/pull/282#discussion_r417800932", "createdAt": "2020-04-30T07:11:43Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -270,13 +270,14 @@ private void handleUnregisterModel(\n         } else if (httpResponseStatus == HttpResponseStatus.BAD_REQUEST) {\n             throw new ModelVersionNotFoundException(\n                     String.format(\n-                            \"Model version: %s not found for model: %s\", modelVersion, modelName));\n+                            \"Model version: %s does not exist for model: %s\",\n+                            modelVersion, modelName));\n         } else if (httpResponseStatus == HttpResponseStatus.INTERNAL_SERVER_ERROR) {\n             throw new InternalServerException(\"Interrupted while cleaning resources: \" + modelName);\n         } else if (httpResponseStatus == HttpResponseStatus.REQUEST_TIMEOUT) {\n             throw new RequestTimeoutException(\"Timed out while cleaning resources: \" + modelName);\n         } else if (httpResponseStatus == HttpResponseStatus.FORBIDDEN) {\n-            throw new InternalServerException(\n+            throw new InvalidModelVersionException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65213a19218fa7472951b923b645b7103a2cdbbe"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjE1MQ==", "bodyText": "InvalidModelVersionException for case where user tries to unregister the default version.", "url": "https://github.com/pytorch/serve/pull/282#discussion_r417922151", "createdAt": "2020-04-30T10:48:36Z", "author": {"login": "harshbafna"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -270,13 +270,14 @@ private void handleUnregisterModel(\n         } else if (httpResponseStatus == HttpResponseStatus.BAD_REQUEST) {\n             throw new ModelVersionNotFoundException(\n                     String.format(\n-                            \"Model version: %s not found for model: %s\", modelVersion, modelName));\n+                            \"Model version: %s does not exist for model: %s\",\n+                            modelVersion, modelName));\n         } else if (httpResponseStatus == HttpResponseStatus.INTERNAL_SERVER_ERROR) {\n             throw new InternalServerException(\"Interrupted while cleaning resources: \" + modelName);\n         } else if (httpResponseStatus == HttpResponseStatus.REQUEST_TIMEOUT) {\n             throw new RequestTimeoutException(\"Timed out while cleaning resources: \" + modelName);\n         } else if (httpResponseStatus == HttpResponseStatus.FORBIDDEN) {\n-            throw new InternalServerException(\n+            throw new InvalidModelVersionException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgwMDkzMg=="}, "originalCommit": {"oid": "65213a19218fa7472951b923b645b7103a2cdbbe"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTY3ODE2OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/HttpRequestHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzoyOTowMFrOGOdFGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzoyOTowMFrOGOdFGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgwOTY5MQ==", "bodyText": "As per #196, it should be 404 and not 403. Why 403? Also, let's keep things simple i.e. Catch ModelVersionNotFound exception in NOT-FOUND if clause above instead of having base as illegalArgexception.", "url": "https://github.com/pytorch/serve/pull/282#discussion_r417809691", "createdAt": "2020-04-30T07:29:00Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/HttpRequestHandler.java", "diffHunk": "@@ -61,6 +61,9 @@ protected void channelRead0(ChannelHandlerContext ctx, FullHttpRequest req) {\n         } catch (OutOfMemoryError e) {\n             logger.trace(\"\", e);\n             NettyUtils.sendError(ctx, HttpResponseStatus.INSUFFICIENT_STORAGE, e);\n+        } catch (IllegalArgumentException e) {\n+            logger.error(\"\", e);\n+            NettyUtils.sendError(ctx, HttpResponseStatus.FORBIDDEN, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65213a19218fa7472951b923b645b7103a2cdbbe"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTcwODI4OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzozNzo0M1rOGOdXfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzozNzo0M1rOGOdXfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgxNDM5OA==", "bodyText": "I think it should be NOT_FOUND as commented above.", "url": "https://github.com/pytorch/serve/pull/282#discussion_r417814398", "createdAt": "2020-04-30T07:37:43Z", "author": {"login": "dhaniram-kshirsagar"}, "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -426,7 +430,7 @@ private void testSetInvalidVersionDefault(String modelName, String defaultVersio\n         TestUtils.getLatch().await();\n \n         ErrorResponse resp = JsonUtils.GSON.fromJson(TestUtils.getResult(), ErrorResponse.class);\n-        Assert.assertEquals(resp.getCode(), HttpResponseStatus.INTERNAL_SERVER_ERROR.code());\n+        Assert.assertEquals(resp.getCode(), HttpResponseStatus.BAD_REQUEST.code());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65213a19218fa7472951b923b645b7103a2cdbbe"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1621, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}