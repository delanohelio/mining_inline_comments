{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NjMyMzYy", "number": 809, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxODoxNzo1MVrOE-Esng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxODoyMzoxMlrOE-EwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNTI0MTI2OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxODoxNzo1MVrOH7F1dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTo1MTo0N1rOH8zfaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcyMzYzNg==", "bodyText": "@abishekchiffon Please set the new explain param to false by default", "url": "https://github.com/pytorch/serve/pull/809#discussion_r531723636", "createdAt": "2020-11-27T18:17:51Z", "author": {"login": "chauhang"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "diffHunk": "@@ -100,7 +117,7 @@ private void validatePredictionsEndpoint(String[] segments) {\n     }\n \n     private void handlePredictions(\n-            ChannelHandlerContext ctx, FullHttpRequest req, String[] segments)\n+            ChannelHandlerContext ctx, FullHttpRequest req, String[] segments, boolean explain)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b09200263c1898ceb120d1145e9a8ca8ae21a808"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ3NDMzNA==", "bodyText": "Java lacks a built-in way to define default arguments for methods. Shall I overload handlePredictions to achieve this?", "url": "https://github.com/pytorch/serve/pull/809#discussion_r532474334", "createdAt": "2020-11-30T10:00:51Z", "author": {"login": "abishekchiffon"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "diffHunk": "@@ -100,7 +117,7 @@ private void validatePredictionsEndpoint(String[] segments) {\n     }\n \n     private void handlePredictions(\n-            ChannelHandlerContext ctx, FullHttpRequest req, String[] segments)\n+            ChannelHandlerContext ctx, FullHttpRequest req, String[] segments, boolean explain)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcyMzYzNg=="}, "originalCommit": {"oid": "b09200263c1898ceb120d1145e9a8ca8ae21a808"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUyMDIzNQ==", "bodyText": "@abishekchiffon Yes, please go ahead", "url": "https://github.com/pytorch/serve/pull/809#discussion_r533520235", "createdAt": "2020-12-01T15:51:47Z", "author": {"login": "chauhang"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "diffHunk": "@@ -100,7 +117,7 @@ private void validatePredictionsEndpoint(String[] segments) {\n     }\n \n     private void handlePredictions(\n-            ChannelHandlerContext ctx, FullHttpRequest req, String[] segments)\n+            ChannelHandlerContext ctx, FullHttpRequest req, String[] segments, boolean explain)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcyMzYzNg=="}, "originalCommit": {"oid": "b09200263c1898ceb120d1145e9a8ca8ae21a808"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNTI0Mjg3OnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxODoxODo1NFrOH7F2ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDo1MDoyNlrOH7-jPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcyMzg5OQ==", "bodyText": "@abishekchiffon In case of explain, will there be two values for the header added (from line 131 and 133)?", "url": "https://github.com/pytorch/serve/pull/809#discussion_r531723899", "createdAt": "2020-11-27T18:18:54Z", "author": {"login": "chauhang"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "diffHunk": "@@ -111,9 +128,28 @@ private void handlePredictions(\n         if (segments.length == 4) {\n             modelVersion = segments[3];\n         }\n+        req.headers().add(\"explain\", \"False\");\n+        if (explain) {\n+            req.headers().add(\"explain\", \"True\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b09200263c1898ceb120d1145e9a8ca8ae21a808"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY1Mjg2MQ==", "bodyText": "The key will be overridden with new values.", "url": "https://github.com/pytorch/serve/pull/809#discussion_r532652861", "createdAt": "2020-11-30T14:50:26Z", "author": {"login": "abishekchiffon"}, "path": "frontend/server/src/main/java/org/pytorch/serve/http/InferenceRequestHandler.java", "diffHunk": "@@ -111,9 +128,28 @@ private void handlePredictions(\n         if (segments.length == 4) {\n             modelVersion = segments[3];\n         }\n+        req.headers().add(\"explain\", \"False\");\n+        if (explain) {\n+            req.headers().add(\"explain\", \"True\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcyMzg5OQ=="}, "originalCommit": {"oid": "b09200263c1898ceb120d1145e9a8ca8ae21a808"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNTI0NjQzOnYy", "diffSide": "RIGHT", "path": "frontend/server/src/main/java/org/pytorch/serve/openapi/OpenApiUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxODoyMDo0MlrOH7F4Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNTowNzoxM1rOH7_Ufg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcyNDM4Nw==", "bodyText": "@abishekchiffon Please add some comments on why the /v1/modelsxxx api is needed", "url": "https://github.com/pytorch/serve/pull/809#discussion_r531724387", "createdAt": "2020-11-27T18:20:42Z", "author": {"login": "chauhang"}, "path": "frontend/server/src/main/java/org/pytorch/serve/openapi/OpenApiUtils.java", "diffHunk": "@@ -37,6 +37,7 @@ public static String listApis(ConnectorType type) {\n     private static void listInferenceApis(OpenApi openApi) {\n         openApi.addPath(\"/\", getApiDescriptionPath(\"apiDescription\", false));\n         openApi.addPath(\"/ping\", getPingPath());\n+        openApi.addPath(\"/v1/models/{model_name}:predict\", getPredictionsPath(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b09200263c1898ceb120d1145e9a8ca8ae21a808"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY2NTQ3MA==", "bodyText": "Added the comments", "url": "https://github.com/pytorch/serve/pull/809#discussion_r532665470", "createdAt": "2020-11-30T15:07:13Z", "author": {"login": "abishekchiffon"}, "path": "frontend/server/src/main/java/org/pytorch/serve/openapi/OpenApiUtils.java", "diffHunk": "@@ -37,6 +37,7 @@ public static String listApis(ConnectorType type) {\n     private static void listInferenceApis(OpenApi openApi) {\n         openApi.addPath(\"/\", getApiDescriptionPath(\"apiDescription\", false));\n         openApi.addPath(\"/ping\", getPingPath());\n+        openApi.addPath(\"/v1/models/{model_name}:predict\", getPredictionsPath(false));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcyNDM4Nw=="}, "originalCommit": {"oid": "b09200263c1898ceb120d1145e9a8ca8ae21a808"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNTI1MDQzOnYy", "diffSide": "RIGHT", "path": "requirements/torch.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxODoyMzoxMlrOH7F6rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDowMzowOVrOH7zv4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcyNDk3Mg==", "bodyText": "@abishekchiffon Is this update needed in other requirements files as well? torch_cpu.txt, torch_cu101.txt", "url": "https://github.com/pytorch/serve/pull/809#discussion_r531724972", "createdAt": "2020-11-27T18:23:12Z", "author": {"login": "chauhang"}, "path": "requirements/torch.txt", "diffHunk": "@@ -1,4 +1,5 @@\n torch==1.6.0\n torchvision==0.7.0\n torchtext==0.7.0\n-torchaudio==0.6.0\n\\ No newline at end of file\n+torchaudio==0.6.0\n+captum==0.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b09200263c1898ceb120d1145e9a8ca8ae21a808"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ3NTg3NA==", "bodyText": "Moved the captum requirements to common.txt", "url": "https://github.com/pytorch/serve/pull/809#discussion_r532475874", "createdAt": "2020-11-30T10:03:09Z", "author": {"login": "abishekchiffon"}, "path": "requirements/torch.txt", "diffHunk": "@@ -1,4 +1,5 @@\n torch==1.6.0\n torchvision==0.7.0\n torchtext==0.7.0\n-torchaudio==0.6.0\n\\ No newline at end of file\n+torchaudio==0.6.0\n+captum==0.2.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcyNDk3Mg=="}, "originalCommit": {"oid": "b09200263c1898ceb120d1145e9a8ca8ae21a808"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1350, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}