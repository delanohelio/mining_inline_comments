{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4OTA5NDE3", "number": 7337, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxOTowMjo1OFrOEmvh8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzowNDozN1rOEpBVGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDYwMDgzOnYy", "diffSide": "RIGHT", "path": "patches/minecraft/net/minecraft/entity/EntityClassification.java.patch", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxOTowMjo1OFrOHW88Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMToyOToyNlrOHXBpdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgyOTE1MQ==", "bodyText": "I have my doubts if this second line is actually needed as the Codec seems to reference Enum#values and not the cached VALUES_MAP.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7337#discussion_r493829151", "createdAt": "2020-09-23T19:02:58Z", "author": {"login": "pupnewfster"}, "path": "patches/minecraft/net/minecraft/entity/EntityClassification.java.patch", "diffHunk": "@@ -9,13 +9,20 @@\n     MONSTER(\"monster\", 70, false, false, 128),\n     CREATURE(\"creature\", 10, true, true, 128),\n     AMBIENT(\"ambient\", 15, true, false, 128),\n-@@ -57,6 +57,10 @@\n+@@ -57,6 +57,17 @@\n        return this.field_82707_i;\n     }\n  \n +   public static EntityClassification create(String name, String id, int maxNumberOfCreatureIn, boolean isPeacefulCreatureIn, boolean isAnimalIn, int despawnDistance) {\n +      throw new IllegalStateException(\"Enum not extended\");\n +   }\n++\n++   @Override\n++   @Deprecated\n++   public void init() {\n++      field_220364_f.put(this.field_220365_j, this);\n++      field_233667_g_ = IStringSerializable.func_233023_a_(EntityClassification::values, EntityClassification::func_233670_a_);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f772d8dd8fc43bdc7cb55ac9b52e1844bab6d2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgzMDk0NA==", "bodyText": "yes but it caches it instantly. so a better way might be to change that simply (in IStringSerializable). remove the first line and do .get() on the function directly.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7337#discussion_r493830944", "createdAt": "2020-09-23T19:06:13Z", "author": {"login": "Cyborgmas"}, "path": "patches/minecraft/net/minecraft/entity/EntityClassification.java.patch", "diffHunk": "@@ -9,13 +9,20 @@\n     MONSTER(\"monster\", 70, false, false, 128),\n     CREATURE(\"creature\", 10, true, true, 128),\n     AMBIENT(\"ambient\", 15, true, false, 128),\n-@@ -57,6 +57,10 @@\n+@@ -57,6 +57,17 @@\n        return this.field_82707_i;\n     }\n  \n +   public static EntityClassification create(String name, String id, int maxNumberOfCreatureIn, boolean isPeacefulCreatureIn, boolean isAnimalIn, int despawnDistance) {\n +      throw new IllegalStateException(\"Enum not extended\");\n +   }\n++\n++   @Override\n++   @Deprecated\n++   public void init() {\n++      field_220364_f.put(this.field_220365_j, this);\n++      field_233667_g_ = IStringSerializable.func_233023_a_(EntityClassification::values, EntityClassification::func_233670_a_);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgyOTE1MQ=="}, "originalCommit": {"oid": "02f772d8dd8fc43bdc7cb55ac9b52e1844bab6d2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3NTE2Mw==", "bodyText": "the latter would probably be the better solution as it would also resolve this for other extensible enums that use this (currently only net.minecraft.world.gen.feature.jigsaw.JigsawPattern.PlacementBehaviour though).\nBut it is more \"intrusive\", although I can't see any issues on first sight/test), I am not going to make that call", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7337#discussion_r493875163", "createdAt": "2020-09-23T20:28:30Z", "author": {"login": "maxanier"}, "path": "patches/minecraft/net/minecraft/entity/EntityClassification.java.patch", "diffHunk": "@@ -9,13 +9,20 @@\n     MONSTER(\"monster\", 70, false, false, 128),\n     CREATURE(\"creature\", 10, true, true, 128),\n     AMBIENT(\"ambient\", 15, true, false, 128),\n-@@ -57,6 +57,10 @@\n+@@ -57,6 +57,17 @@\n        return this.field_82707_i;\n     }\n  \n +   public static EntityClassification create(String name, String id, int maxNumberOfCreatureIn, boolean isPeacefulCreatureIn, boolean isAnimalIn, int despawnDistance) {\n +      throw new IllegalStateException(\"Enum not extended\");\n +   }\n++\n++   @Override\n++   @Deprecated\n++   public void init() {\n++      field_220364_f.put(this.field_220365_j, this);\n++      field_233667_g_ = IStringSerializable.func_233023_a_(EntityClassification::values, EntityClassification::func_233670_a_);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgyOTE1MQ=="}, "originalCommit": {"oid": "02f772d8dd8fc43bdc7cb55ac9b52e1844bab6d2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3OTM3Mw==", "bodyText": "Makeing the codec a public non-final is a non-starter.\nPerhaps the better solution would be to introduce a new codec type for extensible enums?\nAnd then change the codec to use that instead of the default enum one.\nOr, we could change the default enum one {if its in MC code} to not cache the values.\nEither option is better then letting all modders change the entire codec object willy nilly.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7337#discussion_r493879373", "createdAt": "2020-09-23T20:36:09Z", "author": {"login": "LexManos"}, "path": "patches/minecraft/net/minecraft/entity/EntityClassification.java.patch", "diffHunk": "@@ -9,13 +9,20 @@\n     MONSTER(\"monster\", 70, false, false, 128),\n     CREATURE(\"creature\", 10, true, true, 128),\n     AMBIENT(\"ambient\", 15, true, false, 128),\n-@@ -57,6 +57,10 @@\n+@@ -57,6 +57,17 @@\n        return this.field_82707_i;\n     }\n  \n +   public static EntityClassification create(String name, String id, int maxNumberOfCreatureIn, boolean isPeacefulCreatureIn, boolean isAnimalIn, int despawnDistance) {\n +      throw new IllegalStateException(\"Enum not extended\");\n +   }\n++\n++   @Override\n++   @Deprecated\n++   public void init() {\n++      field_220364_f.put(this.field_220365_j, this);\n++      field_233667_g_ = IStringSerializable.func_233023_a_(EntityClassification::values, EntityClassification::func_233670_a_);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgyOTE1MQ=="}, "originalCommit": {"oid": "02f772d8dd8fc43bdc7cb55ac9b52e1844bab6d2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwNjI5Mw==", "bodyText": "ok, removed the caching as Cybogmas suggested, but just for the two enums that are IExtensibleEnum", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7337#discussion_r493906293", "createdAt": "2020-09-23T21:29:26Z", "author": {"login": "maxanier"}, "path": "patches/minecraft/net/minecraft/entity/EntityClassification.java.patch", "diffHunk": "@@ -9,13 +9,20 @@\n     MONSTER(\"monster\", 70, false, false, 128),\n     CREATURE(\"creature\", 10, true, true, 128),\n     AMBIENT(\"ambient\", 15, true, false, 128),\n-@@ -57,6 +57,10 @@\n+@@ -57,6 +57,17 @@\n        return this.field_82707_i;\n     }\n  \n +   public static EntityClassification create(String name, String id, int maxNumberOfCreatureIn, boolean isPeacefulCreatureIn, boolean isAnimalIn, int despawnDistance) {\n +      throw new IllegalStateException(\"Enum not extended\");\n +   }\n++\n++   @Override\n++   @Deprecated\n++   public void init() {\n++      field_220364_f.put(this.field_220365_j, this);\n++      field_233667_g_ = IStringSerializable.func_233023_a_(EntityClassification::values, EntityClassification::func_233670_a_);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgyOTE1MQ=="}, "originalCommit": {"oid": "02f772d8dd8fc43bdc7cb55ac9b52e1844bab6d2"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDYwMzg3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/META-INF/accesstransformer.cfg", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxOTowMzo1NVrOHW8-Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxOTowMzo1NVrOHW8-Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgyOTY1NQ==", "bodyText": "For future reference (or if I am wrong about modifying the codec being wrong), when you modify the access transformer file you should run the checkATs task as it orders things alphabetically and entity should be way before world.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7337#discussion_r493829655", "createdAt": "2020-09-23T19:03:55Z", "author": {"login": "pupnewfster"}, "path": "src/main/resources/META-INF/accesstransformer.cfg", "diffHunk": "@@ -315,4 +315,5 @@ public net.minecraft.world.gen.layer.LayerUtil func_202829_a(JLnet/minecraft/wor\n private-f net.minecraft.world.raid.Raid$WaveMember field_221284_f # VALUES\n public net.minecraft.world.server.ServerChunkProvider field_186029_c # chunkGenerator\n public net.minecraft.world.server.ServerChunkProvider field_73251_h # worldObj\n-public net.minecraft.world.storage.FolderName <init>(Ljava/lang/String;)V # constructor\n\\ No newline at end of file\n+public net.minecraft.world.storage.FolderName <init>(Ljava/lang/String;)V # constructor\n+public-f net.minecraft.entity.EntityClassification field_233667_g_ # CODEC", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f772d8dd8fc43bdc7cb55ac9b52e1844bab6d2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDQ4ODU2OnYy", "diffSide": "RIGHT", "path": "patches/minecraft/net/minecraft/entity/EntityClassification.java.patch", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzowNDozN1rOHach5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzowNDozN1rOHach5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ5MjQ1Mw==", "bodyText": "vanilla calls getName instead of using the raw field, we should mirror this (even though it shouldn't make a difference)", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7337#discussion_r497492453", "createdAt": "2020-09-30T13:04:37Z", "author": {"login": "ichttt"}, "path": "patches/minecraft/net/minecraft/entity/EntityClassification.java.patch", "diffHunk": "@@ -9,13 +9,28 @@\n     MONSTER(\"monster\", 70, false, false, 128),\n     CREATURE(\"creature\", 10, true, true, 128),\n     AMBIENT(\"ambient\", 15, true, false, 128),\n-@@ -57,6 +57,10 @@\n+@@ -14,7 +14,7 @@\n+    WATER_AMBIENT(\"water_ambient\", 20, true, false, 64),\n+    MISC(\"misc\", -1, true, true, 128);\n+ \n+-   public static final Codec<EntityClassification> field_233667_g_ = IStringSerializable.func_233023_a_(EntityClassification::values, EntityClassification::func_233670_a_);\n++   public static final Codec<EntityClassification> field_233667_g_ = net.minecraftforge.common.IExtensibleEnum.createCodecForExtensibleEnum(EntityClassification::values, EntityClassification::func_233670_a_);\n+    private static final Map<String, EntityClassification> field_220364_f = Arrays.stream(values()).collect(Collectors.toMap(EntityClassification::func_220363_a, (p_220362_0_) -> {\n+       return p_220362_0_;\n+    }));\n+@@ -57,6 +57,16 @@\n        return this.field_82707_i;\n     }\n  \n +   public static EntityClassification create(String name, String id, int maxNumberOfCreatureIn, boolean isPeacefulCreatureIn, boolean isAnimalIn, int despawnDistance) {\n +      throw new IllegalStateException(\"Enum not extended\");\n +   }\n++\n++   @Override\n++   @Deprecated\n++   public void init() {\n++      field_220364_f.put(this.field_220365_j, this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b04a184fddf2ee0a8012a5548a3f50859054414"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 811, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}