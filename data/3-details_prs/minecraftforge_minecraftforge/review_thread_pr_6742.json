{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTYzODI5", "number": 6742, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxMjoyNlrOECiBRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoxNzowMlrOECrXsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDg5OTkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxMjoyNlrOGfC1UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxMjoyNlrOGfC1UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTQ1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)\n          \n          \n            \n                /**\n          \n          \n            \n                 * Use for vanilla/forge registries. See example above.\n          \n          \n            \n                 */\n          \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435205456", "createdAt": "2020-06-04T12:12:26Z", "author": {"login": "Cyborgmas"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -56,15 +59,35 @@\n  */\n public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n {\n-    private final IForgeRegistry<T> type;\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDkwMTY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxMjo1N1rOGfC2Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoyODowOVrOGfDW3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTcyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)\n          \n          \n            \n                /**\n          \n          \n            \n                 * Use for custom registries that are made during the NewRegistry event. \n          \n          \n            \n                 */\n          \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435205723", "createdAt": "2020-06-04T12:12:57Z", "author": {"login": "Cyborgmas"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -56,15 +59,35 @@\n  */\n public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n {\n-    private final IForgeRegistry<T> type;\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)\n+    {\n+        return new DeferredRegister<B>(reg, modid);\n+    }\n+\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIxMDY2Mg==", "bodyText": "In java it isn't @see THING it is {@link THING}", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435210662", "createdAt": "2020-06-04T12:22:18Z", "author": {"login": "pupnewfster"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -56,15 +59,35 @@\n  */\n public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n {\n-    private final IForgeRegistry<T> type;\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)\n+    {\n+        return new DeferredRegister<B>(reg, modid);\n+    }\n+\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTcyMw=="}, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIxMjU5MA==", "bodyText": "Hmm it worked though. Gave me a link to the function.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435212590", "createdAt": "2020-06-04T12:25:32Z", "author": {"login": "Cyborgmas"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -56,15 +59,35 @@\n  */\n public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n {\n-    private final IForgeRegistry<T> type;\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)\n+    {\n+        return new DeferredRegister<B>(reg, modid);\n+    }\n+\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTcyMw=="}, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIxNDA0NQ==", "bodyText": "Ah turns out java also has a @see I just have never actually seen it used before so didn't realize it was actually a thing.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435214045", "createdAt": "2020-06-04T12:28:09Z", "author": {"login": "pupnewfster"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -56,15 +59,35 @@\n  */\n public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n {\n-    private final IForgeRegistry<T> type;\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)\n+    {\n+        return new DeferredRegister<B>(reg, modid);\n+    }\n+\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTcyMw=="}, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDkwMzY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxMzozMVrOGfC3lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxMzozMVrOGfC3lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNjAzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {\n          \n          \n            \n                /**\n          \n          \n            \n                 * For custom registries only, fills the {@link #registryFactory} to be called later see {@link #register(IEventBus)}\n          \n          \n            \n                 *\n          \n          \n            \n                 * Calls {@link RegistryBuilder#setName} and {@link RegistryBuilder#setType} automatically.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param name  Path of the registry's {@link ResourceLocation}\n          \n          \n            \n                 * @param sup   Supplier of the RegistryBuilder that is called to fill {@link #type} during the NewRegistry event\n          \n          \n            \n                 * @return      A supplier of the {@link IForgeRegistry} created by the builder.\n          \n          \n            \n                 */\n          \n          \n            \n                public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435206038", "createdAt": "2020-06-04T12:13:31Z", "author": {"login": "Cyborgmas"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -80,13 +103,32 @@ public DeferredRegister(IForgeRegistry<T> reg, String modid)\n         Objects.requireNonNull(name);\n         Objects.requireNonNull(sup);\n         final ResourceLocation key = new ResourceLocation(modid, name);\n-        RegistryObject<I> ret = RegistryObject.of(key, this.type);\n+\n+        RegistryObject<I> ret;\n+        if (this.type != null)\n+            ret = RegistryObject.of(key, this.type);\n+        else if (this.superType != null)\n+            ret = RegistryObject.of(key, this.superType, this.modid);\n+        else\n+            throw new IllegalStateException(\"Could not create RegistryObject in DeferredRegister\");\n+\n         if (entries.putIfAbsent((RegistryObject<T>) ret, () -> sup.get().setRegistryName(key)) != null) {\n             throw new IllegalArgumentException(\"Duplicate registration \" + name);\n         }\n+\n         return ret;\n     }\n \n+    public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDkwNjQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxNDoyNVrOGfC5Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxNDoyNVrOGfC5Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNjQ5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * See the example usage.\n          \n          \n            \n                 * See the example usage.\n          \n          \n            \n                 *\n          \n          \n            \n                 * If using this for a custom registry, creates the the registry for you in {@link #createRegistry} using the {@link RegistryEvent.NewRegistry} event\n          \n          \n            \n                 * If no {@link #registryFactory} was provided, listens to the NewRegistry event on {@link EventPriority.LOWEST} to check if the registry was properly created.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435206491", "createdAt": "2020-06-04T12:14:25Z", "author": {"login": "Cyborgmas"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -80,13 +103,32 @@ public DeferredRegister(IForgeRegistry<T> reg, String modid)\n         Objects.requireNonNull(name);\n         Objects.requireNonNull(sup);\n         final ResourceLocation key = new ResourceLocation(modid, name);\n-        RegistryObject<I> ret = RegistryObject.of(key, this.type);\n+\n+        RegistryObject<I> ret;\n+        if (this.type != null)\n+            ret = RegistryObject.of(key, this.type);\n+        else if (this.superType != null)\n+            ret = RegistryObject.of(key, this.superType, this.modid);\n+        else\n+            throw new IllegalStateException(\"Could not create RegistryObject in DeferredRegister\");\n+\n         if (entries.putIfAbsent((RegistryObject<T>) ret, () -> sup.get().setRegistryName(key)) != null) {\n             throw new IllegalArgumentException(\"Duplicate registration \" + name);\n         }\n+\n         return ret;\n     }\n \n+    public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {\n+        if (this.superType == null)\n+            throw new IllegalStateException(\"Cannot create a registry without specifying a base type\");\n+        if (this.type != null || this.registryFactory != null)\n+            throw new IllegalStateException(\"Cannot create a registry for a type that already exists\");\n+\n+        this.registryFactory = () -> sup.get().setName(new ResourceLocation(modid, name)).setType(this.superType);\n+        return () -> this.type;\n+    }\n+\n     /**\n      * Adds our event handler to the specified event bus, this MUST be called in order for this class to function.\n      * See the example usage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjQzMTg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoxNzowMlrOGfSFsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozMzo0NVrOGfS0qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1NTQxMQ==", "bodyText": "As a reference to Class<T> superType is now stored in DeferredRegister would it make more sense to just compare event.getGenericType() to that rather than querying the registry for it?", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435455411", "createdAt": "2020-06-04T18:17:02Z", "author": {"login": "pupnewfster"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -108,7 +156,7 @@ public void register(IEventBus bus)\n \n     private void addEntries(RegistryEvent.Register<?> event)\n     {\n-        if (event.getGenericType() == this.type.getRegistrySuperType())\n+        if (this.type != null && event.getGenericType() == this.type.getRegistrySuperType())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NzQzMw==", "bodyText": "No, because the intent is to not have superType be in here/definitive.\nAs one of the intentions is to be able to be used as a soft link.\nBy referring to the registry by name or some other method.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435467433", "createdAt": "2020-06-04T18:33:45Z", "author": {"login": "LexManos"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -108,7 +156,7 @@ public void register(IEventBus bus)\n \n     private void addEntries(RegistryEvent.Register<?> event)\n     {\n-        if (event.getGenericType() == this.type.getRegistrySuperType())\n+        if (this.type != null && event.getGenericType() == this.type.getRegistrySuperType())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1NTQxMQ=="}, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 107}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 960, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}