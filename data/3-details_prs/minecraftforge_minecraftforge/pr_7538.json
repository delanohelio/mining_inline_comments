{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNzI0MzA2", "number": 7538, "title": "Add a SoundType subclass that uses suppliers", "bodyText": "The Chicken-and-Egg Problem\nOne of the difficulties in using custom SoundTypes for modded blocks is the faux chicken-and-egg problem of Block, SoundEvent, and SoundType.\nTo add a custom sound type for a block, you have two options: override a method (which offers great flexibility in what sound is used, at the cost of needing to subclass), or passing the SoundType to the AbstractBlock.Properties constructor. Since the block properties is needed to construct the Block instance, the SoundType instance needs to be constructed before the block.\nTo construct a SoundType instance, you need to pass in 5 SoundEvent instances: the place sound, the break sound, the hit sound (when breaking the block), the step sound, and the fall sound (when falling on the block AFAIK).\nThe faux chicken-and-egg problem is thus: SoundEvents must be registered. However, the SoundEvents must also be available to construct the SoundType, which must be constructed before the Block using it is registered. However, Blocks are loaded/registered wayy before SoundEvents1.\nTwo Possible Solutions\nThe first solution would be to statically initialize the SoundEvents and register them later. This is not preferrable due to the use of static initialization which is stated to be something that Forge is discouraging. Plus, this prevents the use of the DeferredRegister system (since RegistryObject errors when retrieving the inner object before the corresponding registry is loaded).\nThe other solution, which fits Forge's goal of reloadable registries, is extending SoundType to accept Supplier<SoundEvent>s instead. This is the more preferred and cleaner of the two, since it both does not need to use any sort of static initialization for SoundEvent, and allows the use of DeferredRegister and RegistryObjects (since RegistryObjects are Suppliers too).\nThis Pull Request's Solution\nHowever, there is no such subclass of SoundType in Forge, which means that mods who have custom SoundTypes needs to all make their own subclass, and it is not obvious to new modders on how to add custom sound types to their block using RegistryObjects, meaning they will ask the same question again and again.\nThis PR remedies this deficiency, by adding a new ForgeSoundType class under net.minecraftforge.common.util. This class is a subclass of SoundType, which accepts Supplier<SoundEvent> instead of SoundEvent in the constructor.\n\nnull is passed into the superclass constructor, because no \"blank/empty\" SoundEvent exists, and using a predefined sound event may be confusing in the future if a bug ever occurs. This value should never be exposed, since the only access would be the getters, which are overriden by ForgeSoundType.\n\nThe casts were added by a review by LexManos, for the purpose of making sure that if Mojang were to change the parameters of the original SoundType constructor, this class's constructor will cause a compile-time error.\n\n\nThe constructor for SoundType was marked with @Deprecated, and a regular comment2 was placed alongside it, pointing modders to use ForgeSoundType for suppliers instead.\nThis PR includes a test mod (custom_sound_type_test) which was used to verify that ForgeSoundType works as expected.\n\nThe test mod adds a new block, the custom_sound_type_test:test_block which has a custom ForgeSoundType and SoundEvent, all of which point to the entity/mob/zombie/hit1.ogg sound (hitting, falling, breaking, placing, steps).\n\n\n\nChecking each of the calls to the 5 getters will reveal that they are called during ingame, way after the sound events are registered. This means it should be safe to use this class with RegistryObjects.\nTL;DR: New class to Forge named ForgeSoundType, a replacement for SoundType that uses Supplier<SoundEvent> instead of SoundEvent directly in the constructor.\n^ 1: Registry load order is currently defined as: minecraft:block first, minecraft:item second, then all other registries in alphabetical order according to their name (so forge:* goes first before minecraft:*).\n^ 2: I followed the established precedent of using regular comments instead of documentation comments.", "createdAt": "2020-12-07T14:42:30Z", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538", "merged": true, "mergeCommit": {"oid": "8ec4253068cd6d4310aea70d5953bbeacc3f5520"}, "closed": true, "closedAt": "2020-12-28T21:09:04Z", "author": {"login": "sciwhiz12"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdj1y6nAH2gAyNTMzNzI0MzA2OmI2NmJhYzUxMjk5MmVjOTIzMGUwMDhmMmY1ZjkyNmVlY2JjZDVmZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdqstsLgH2gAyNTMzNzI0MzA2OjczNWFjNDFhZWFmMDhjM2Y2OTdiNjFmODIzNGRlYTEzMjRkMDMxOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b66bac512992ec9230e008f2f5f926eecbcd5fff", "author": {"user": {"login": "sciwhiz12", "name": null}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/b66bac512992ec9230e008f2f5f926eecbcd5fff", "committedDate": "2020-12-07T13:45:10Z", "message": "Add a SoundType subclass that uses suppliers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MjE3MDMw", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#pullrequestreview-546217030", "createdAt": "2020-12-07T14:45:36Z", "commit": {"oid": "b66bac512992ec9230e008f2f5f926eecbcd5fff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0NTozNlrOIAqMQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0NTozNlrOIAqMQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MjE3OQ==", "bodyText": "Might be worth throwing some java docs on this class that gives a brief summary of why this exists (given you wrote a very detailed thing for the PR explaining it you can probably just copy paste parts of that here)", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r537562179", "createdAt": "2020-12-07T14:45:36Z", "author": {"login": "pupnewfster"}, "path": "src/main/java/net/minecraftforge/common/util/ForgeSoundType.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Minecraft Forge\n+ * Copyright (c) 2016-2020.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.common.util;\n+\n+import net.minecraft.block.SoundType;\n+import net.minecraft.util.SoundEvent;\n+\n+import javax.annotation.Nonnull;\n+import java.util.function.Supplier;\n+\n+public class ForgeSoundType extends SoundType", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b66bac512992ec9230e008f2f5f926eecbcd5fff"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2f5c836f632feccf09429fd4d624e473d1cff13", "author": {"user": {"login": "sciwhiz12", "name": null}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/c2f5c836f632feccf09429fd4d624e473d1cff13", "committedDate": "2020-12-07T15:03:36Z", "message": "Add javadoc to ForgeSoundType"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2Mzg3NzA0", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#pullrequestreview-546387704", "createdAt": "2020-12-07T17:46:55Z", "commit": {"oid": "c2f5c836f632feccf09429fd4d624e473d1cff13"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo0Njo1NVrOIAyyTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo0Njo1NVrOIAyyTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwMjk5MA==", "bodyText": "I would move this comment to the Constructor, and then @deprecate the constructor. As the class itself isn't deprecated, it's the new instances that are.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r537702990", "createdAt": "2020-12-07T17:46:55Z", "author": {"login": "LexManos"}, "path": "patches/minecraft/net/minecraft/block/SoundType.java.patch", "diffHunk": "@@ -0,0 +1,10 @@\n+--- a/net/minecraft/block/SoundType.java\n++++ b/net/minecraft/block/SoundType.java\n+@@ -3,6 +3,7 @@\n+ import net.minecraft.util.SoundEvent;\n+ import net.minecraft.util.SoundEvents;\n+ \n++// Forge: Use {@link net.minecraftforge.common.util.ForgeSoundType} instead for suppliers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2f5c836f632feccf09429fd4d624e473d1cff13"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2Mzk0OTY2", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#pullrequestreview-546394966", "createdAt": "2020-12-07T17:55:39Z", "commit": {"oid": "c2f5c836f632feccf09429fd4d624e473d1cff13"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1NTozOVrOIAzKgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1NTozOVrOIAzKgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwOTE4Ng==", "bodyText": "I know this sounds dumb, but can you add (SoundEvent) casts to all these nulls?\nThe other option is writing some form of dev-time validation that this class has the same methods/constructors as the parent.\nThe idea is to make it a error if Mojang changes any of the argument types.\nThus notifying us that we need to update this class.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r537709186", "createdAt": "2020-12-07T17:55:39Z", "author": {"login": "LexManos"}, "path": "src/main/java/net/minecraftforge/common/util/ForgeSoundType.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Minecraft Forge\n+ * Copyright (c) 2016-2020.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.common.util;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.SoundType;\n+import net.minecraft.util.SoundEvent;\n+import net.minecraftforge.fml.RegistryObject;\n+import net.minecraftforge.registries.DeferredRegister;\n+\n+import javax.annotation.Nonnull;\n+import java.util.function.Supplier;\n+\n+/**\n+ * A subclass of {@link SoundType} that uses {@link Supplier<SoundEvent>}s.\n+ * <p>\n+ * This class allows mod developers to safely create custom {@code SoundType}s for use in their e.g. {@link Block}.\n+ * <p>\n+ * The problem with using {@code SoundType} directly is it requires {@link SoundEvent} instances directly, because\n+ * {@code SoundType}s are required to be present during {@link Block} creation and registration. However,\n+ * {@code SoundEvent} must also be registered.\n+ * <p>\n+ * A possible solution of initializing {@code SoundEvent}s first would require static initialization of the\n+ * {@code SoundEvent} instances and later registration, which goes against the contract of the registry system and\n+ * prevents the use of {@link DeferredRegister} and {@link RegistryObject}s.\n+ * <p>\n+ * This class offers an alternative and preferable solution, by allowing mods to create {@link SoundType}s using\n+ * {@link Supplier}s of {@link SoundEvent}s instead, which do not require static initialization of {@code SoundEvent}s\n+ * and allow the direct use of {@code RegistryObject}s.\n+ *\n+ * @see SoundType\n+ */\n+public class ForgeSoundType extends SoundType\n+{\n+    private final Supplier<SoundEvent> breakSound;\n+    private final Supplier<SoundEvent> stepSound;\n+    private final Supplier<SoundEvent> placeSound;\n+    private final Supplier<SoundEvent> hitSound;\n+    private final Supplier<SoundEvent> fallSound;\n+\n+    public ForgeSoundType(float volumeIn, float pitchIn, Supplier<SoundEvent> breakSoundIn, Supplier<SoundEvent> stepSoundIn, Supplier<SoundEvent> placeSoundIn, Supplier<SoundEvent> hitSoundIn, Supplier<SoundEvent> fallSoundIn)\n+    {\n+        super(volumeIn, pitchIn, null, null, null, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2f5c836f632feccf09429fd4d624e473d1cff13"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1717d5904668fa2448e5ebb31ff8e50d9d33b528", "author": {"user": {"login": "sciwhiz12", "name": null}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/1717d5904668fa2448e5ebb31ff8e50d9d33b528", "committedDate": "2020-12-08T04:58:14Z", "message": "Add SoundEvent casts to null parameters in superclass constructor call\n\nThis makes the constructor error if the superclass constructor's parameters changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e2fa517bbf909a776b3b3fd83fd52a79256b94e", "author": {"user": {"login": "sciwhiz12", "name": null}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/0e2fa517bbf909a776b3b3fd83fd52a79256b94e", "committedDate": "2020-12-08T04:59:13Z", "message": "Deprecate and move comment to SoundType constructor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Mjk5MDI1", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#pullrequestreview-556299025", "createdAt": "2020-12-21T11:03:36Z", "commit": {"oid": "0e2fa517bbf909a776b3b3fd83fd52a79256b94e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "735ac41aeaf08c3f697b61f8234dea1324d03196", "author": {"user": {"login": "LexManos", "name": "LexManos"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/735ac41aeaf08c3f697b61f8234dea1324d03196", "committedDate": "2020-12-28T21:07:47Z", "message": "Merge branch '1.16.x' into forge_sound_type"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2245, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}