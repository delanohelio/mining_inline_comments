{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyOTYzMzc4", "number": 7271, "title": "Add validation via resources for tag providers", "bodyText": "Removes the hack of running the vanilla tag datagen and then filtering out its content.\nAdds an (optional) ExistingFileHelper param to TagsProvider. If present, this will be used to search for existing tags on the resource path.\nAdds a new (default) method to ITagEntry: exists, which accepts a String (the tag \"type\" or folder name) and an ExistingFileHelper and returns true if this entry exists. For item entries, this checks the item registry. For tag entries, it looks in the existing data files. Optional entries always return true (the default impl).\nUpdates all the forge code to use the new ctors on tag providers, and re-ran the datagen test.\nMoved ExistingFileHelper out of client package.", "createdAt": "2020-08-25T06:05:59Z", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7271", "merged": true, "mergeCommit": {"oid": "be5885155c0072721c95a23a0b2ee13483c37b8a"}, "closed": true, "closedAt": "2020-09-03T03:18:23Z", "author": {"login": "tterrag1098"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCQ4x5gH2gAyNDcyOTYzMzc4OjY5ZTM5ODRhNDg4YjU0ZDgyOWI3ODg5MGZiOGU5NWQyYmExZWVhM2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFHzI7gH2gAyNDcyOTYzMzc4OmFiOWE2NjBiODEzNWUyOGRhMDgwNTNkMzA1ZDllNTNlMzlhMzAyMDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "69e3984a488b54d829b78890fb8e95d2ba1eea3e", "author": {"user": {"login": "tterrag1098", "name": "tterrag"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/69e3984a488b54d829b78890fb8e95d2ba1eea3e", "committedDate": "2020-08-25T06:05:35Z", "message": "Add validation via resources for tag providers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0NTczNjU3", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7271#pullrequestreview-474573657", "createdAt": "2020-08-25T15:03:11Z", "commit": {"oid": "69e3984a488b54d829b78890fb8e95d2ba1eea3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowMzoxMVrOHGceXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowMzoxMVrOHGceXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUyMDAzMA==", "bodyText": "Pretty sure ItemEntry is meant for a single entry, EntityTypeTags and FluidTags are also ItemEntry's.\nThe DataGeneratorTest uses BlockTags but I am guessing it worked on the fact that blocks and items share the same name.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7271#discussion_r476520030", "createdAt": "2020-08-25T15:03:11Z", "author": {"login": "Cyborgmas"}, "path": "patches/minecraft/net/minecraft/tags/ITag.java.patch", "diffHunk": "@@ -41,18 +41,37 @@\n           jsonobject.add(\"values\", jsonarray);\n           return jsonobject;\n        }\n-@@ -178,6 +189,7 @@\n+@@ -152,6 +163,8 @@\n+       <T> boolean func_230238_a_(Function<ResourceLocation, ITag<T>> p_230238_1_, Function<ResourceLocation, T> p_230238_2_, Consumer<T> p_230238_3_);\n+ \n+       void func_230237_a_(JsonArray p_230237_1_);\n++\n++      default boolean exists(String type, net.minecraftforge.common.data.ExistingFileHelper existingFileHelper) { return true; }\n+    }\n+ \n+    public static class ItemEntry implements ITag.ITagEntry {\n+@@ -178,6 +191,12 @@\n        public String toString() {\n           return this.field_232969_a_.toString();\n        }\n +      @Override public boolean equals(Object o) { return o == this || (o instanceof ITag.ItemEntry && java.util.Objects.equals(this.field_232969_a_, ((ITag.ItemEntry) o).field_232969_a_)); }\n++\n++      @Override\n++      public boolean exists(String type, net.minecraftforge.common.data.ExistingFileHelper existingFileHelper) {\n++         return net.minecraftforge.registries.ForgeRegistries.ITEMS.containsKey(field_232969_a_);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69e3984a488b54d829b78890fb8e95d2ba1eea3e"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1Nzg1OTM3", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7271#pullrequestreview-475785937", "createdAt": "2020-08-26T19:15:18Z", "commit": {"oid": "69e3984a488b54d829b78890fb8e95d2ba1eea3e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOToxNToxOVrOHHaNyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOToxNzoxN1rOHHaR3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzMTU5Mg==", "bodyText": "I would just remove the else and keep the brackets, as this commented out curly bracket is floating around quite freely otherwise (which might cause issues when porting patches)", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7271#discussion_r477531592", "createdAt": "2020-08-26T19:15:19Z", "author": {"login": "ichttt"}, "path": "patches/minecraft/net/minecraft/data/TagsProvider.java.patch", "diffHunk": "@@ -1,34 +1,56 @@\n --- a/net/minecraft/data/TagsProvider.java\n +++ b/net/minecraft/data/TagsProvider.java\n-@@ -28,11 +28,17 @@\n+@@ -28,11 +28,19 @@\n     protected final DataGenerator field_200433_a;\n     protected final Registry<T> field_200435_c;\n     protected final Map<ResourceLocation, ITag.Builder> field_200434_b = Maps.newLinkedHashMap();\n +   protected String modId;\n++   net.minecraftforge.common.data.ExistingFileHelper existingFileHelper;\n  \n +   @Deprecated//Forge, Use ModID version.\n     protected TagsProvider(DataGenerator p_i49827_1_, Registry<T> p_i49827_2_) {\n -      this.field_200433_a = p_i49827_1_;\n -      this.field_200435_c = p_i49827_2_;\n-+       this(p_i49827_1_, p_i49827_2_, \"vanilla\");\n++       this(p_i49827_1_, p_i49827_2_, \"vanilla\", null);\n     }\n-+   protected TagsProvider(DataGenerator generatorIn, Registry<T> registryIn, String modId) {\n++   protected TagsProvider(DataGenerator generatorIn, Registry<T> registryIn, String modId, @javax.annotation.Nullable net.minecraftforge.common.data.ExistingFileHelper existingFileHelper) {\n +      this.field_200433_a = generatorIn;\n +      this.field_200435_c = registryIn;\n +      this.modId = modId;\n++      this.existingFileHelper = existingFileHelper;\n +   }\n  \n     protected abstract void func_200432_c();\n  \n-@@ -53,6 +59,7 @@\n-          } else {\n+@@ -49,10 +57,17 @@\n+       this.field_200434_b.forEach((p_240524_4_, p_240524_5_) -> {\n+          List<ITag.Proxy> list = p_240524_5_.func_232963_b_(function, function1).collect(Collectors.toList());\n+          if (!list.isEmpty()) {\n++            // FORGE: Add validation via existing resources\n++            for (ITag.Proxy missingTag : list) {\n++               // Vanilla tag types use plural names, revisit this when/if we add custom tag types\n++               if (existingFileHelper == null || !missingTag.func_232968_a_().exists(((Registry)Registry.field_212617_f).func_177774_c(field_200435_c).func_110623_a() + \"s\", existingFileHelper))\n+             throw new IllegalArgumentException(String.format(\"Couldn't define tag %s as it is missing following references: %s\", p_240524_4_, list.stream().map(Objects::toString).collect(Collectors.joining(\",\"))));\n+-         } else {\n++            }\n++         } //else {\n++            // FORGE: Run this code always, it will be skipped if the above code throws an exception\n              JsonObject jsonobject = p_240524_5_.func_232965_c_();\n              Path path = this.func_200431_a(p_240524_4_);\n +            if (path == null) return; //Forge: Allow running this data provider without writing it. Recipe provider needs valid tags.\n  \n              try {\n                 String s = field_200437_e.toJson((JsonElement)jsonobject);\n-@@ -78,7 +85,7 @@\n+@@ -70,7 +85,7 @@\n+                field_200436_d.error(\"Couldn't save tags to {}\", path, ioexception);\n+             }\n+ \n+-         }\n++//         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69e3984a488b54d829b78890fb8e95d2ba1eea3e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzMjE0Ng==", "bodyText": "should be private or protected, but package-private makes no sense here", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7271#discussion_r477532146", "createdAt": "2020-08-26T19:16:22Z", "author": {"login": "ichttt"}, "path": "patches/minecraft/net/minecraft/data/TagsProvider.java.patch", "diffHunk": "@@ -1,34 +1,56 @@\n --- a/net/minecraft/data/TagsProvider.java\n +++ b/net/minecraft/data/TagsProvider.java\n-@@ -28,11 +28,17 @@\n+@@ -28,11 +28,19 @@\n     protected final DataGenerator field_200433_a;\n     protected final Registry<T> field_200435_c;\n     protected final Map<ResourceLocation, ITag.Builder> field_200434_b = Maps.newLinkedHashMap();\n +   protected String modId;\n++   net.minecraftforge.common.data.ExistingFileHelper existingFileHelper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69e3984a488b54d829b78890fb8e95d2ba1eea3e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzMjYzNg==", "bodyText": "Unnecessary import here and a few times below", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7271#discussion_r477532636", "createdAt": "2020-08-26T19:17:17Z", "author": {"login": "ichttt"}, "path": "src/main/java/net/minecraftforge/client/model/generators/BlockModelBuilder.java", "diffHunk": "@@ -20,6 +20,7 @@\n package net.minecraftforge.client.model.generators;\n \n import net.minecraft.util.ResourceLocation;\n+import net.minecraftforge.common.data.ExistingFileHelper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69e3984a488b54d829b78890fb8e95d2ba1eea3e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6efe17fb1b58eae6637479ab09467302133daac0", "author": {"user": {"login": "tterrag1098", "name": "tterrag"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/6efe17fb1b58eae6637479ab09467302133daac0", "committedDate": "2020-09-03T01:34:06Z", "message": "Remove code from ITagEntry subclasses, add protected getTagFolder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4ce18212201ca1ffd30686539acf00200de2cf2", "author": {"user": {"login": "tterrag1098", "name": "tterrag"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/a4ce18212201ca1ffd30686539acf00200de2cf2", "committedDate": "2020-09-03T02:08:34Z", "message": "Simplify TagsProvider patch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6da1bcadb0732c131de2b4dbb9f00a74427a36c6", "author": {"user": {"login": "tterrag1098", "name": "tterrag"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/6da1bcadb0732c131de2b4dbb9f00a74427a36c6", "committedDate": "2020-09-03T03:05:59Z", "message": "Add exc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab9a660b8135e28da08053d305d9e53e39a30207", "author": {"user": {"login": "tterrag1098", "name": "tterrag"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/ab9a660b8135e28da08053d305d9e53e39a30207", "committedDate": "2020-09-03T03:12:03Z", "message": "Merge remote-tracking branch 'upstream/1.16.x' into 1.16.x-tag_datagen\n\n# Conflicts:\n#\tsrc/main/java/net/minecraftforge/fml/event/lifecycle/GatherDataEvent.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2451, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}