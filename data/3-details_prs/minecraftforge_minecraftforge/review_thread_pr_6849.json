{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODQ4OTI0", "number": 6849, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNzoyMzowM1rOEJUzWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo1NDozMlrOEKQSZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjEzNDY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/resource/IForgeDataPackRegistries.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNzoyMzowM1rOGpz-Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNzoyMzowM1rOGpz-Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5NjMzMA==", "bodyText": "Because this is in an interface, this is public, it should not be.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6849#discussion_r446496330", "createdAt": "2020-06-27T07:23:03Z", "author": {"login": "covers1624"}, "path": "src/main/java/net/minecraftforge/resource/IForgeDataPackRegistries.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package net.minecraftforge.resource;\n+\n+import net.minecraft.resources.IFutureReloadListener;\n+import net.minecraftforge.common.loot.LootModifierManager;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+public interface IForgeDataPackRegistries {\n+   List<IFutureReloadListener> resources = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6029e67c24fcbfc5d048ca801ca9422a2405c2d6"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjQ3MjQzOnYy", "diffSide": "LEFT", "path": "patches/minecraft/net/minecraft/resources/DataPackRegistries.java.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxNToyMDowOFrOGp2cWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxNToyMTozNVrOGp2c5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzNjc5NA==", "bodyText": "Wasn't this getter used by Global Loot Modifiers ? I think they are broken right now though.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6849#discussion_r446536794", "createdAt": "2020-06-27T15:20:08Z", "author": {"login": "Nukeologist"}, "path": "patches/minecraft/net/minecraft/resources/DataPackRegistries.java.patch", "diffHunk": "@@ -1,28 +1,10 @@\n --- a/net/minecraft/resources/DataPackRegistries.java\n +++ b/net/minecraft/resources/DataPackRegistries.java\n-@@ -22,6 +22,8 @@\n-    private final AdvancementManager field_240958_h_ = new AdvancementManager(this.field_240956_f_);\n-    private final FunctionReloader field_240959_i_;\n- \n-+   private final net.minecraftforge.common.loot.LootModifierManager lootManager = new net.minecraftforge.common.loot.LootModifierManager();\n-+\n-    public DataPackRegistries(Commands.EnvironmentType p_i232598_1_, int p_i232598_2_) {\n-       this.field_240953_c_ = new Commands(p_i232598_1_);\n-       this.field_240959_i_ = new FunctionReloader(p_i232598_2_, this.field_240953_c_.func_197054_a());\n-@@ -31,6 +33,7 @@\n+@@ -31,6 +31,7 @@\n        this.field_240952_b_.func_219534_a(this.field_240957_g_);\n        this.field_240952_b_.func_219534_a(this.field_240959_i_);\n        this.field_240952_b_.func_219534_a(this.field_240958_h_);\n-+      this.field_240952_b_.func_219534_a(this.lootManager);\n++      net.minecraftforge.event.ForgeEventFactory.onResourceReload().forEach(field_240952_b_::func_219534_a);\n     }\n  \n     public FunctionReloader func_240960_a_() {\n-@@ -85,4 +88,8 @@\n-    public void close() {\n-       this.field_240952_b_.close();\n-    }\n-+\n-+   public net.minecraftforge.common.loot.LootModifierManager getLootModifierManager() {\n-+      return lootManager;\n-+   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2631f08bc2826ba6cd7d316d910d606fb58117ec"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzNjkzMg==", "bodyText": "woops ill re add a getter", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6849#discussion_r446536932", "createdAt": "2020-06-27T15:21:35Z", "author": {"login": "Cyborgmas"}, "path": "patches/minecraft/net/minecraft/resources/DataPackRegistries.java.patch", "diffHunk": "@@ -1,28 +1,10 @@\n --- a/net/minecraft/resources/DataPackRegistries.java\n +++ b/net/minecraft/resources/DataPackRegistries.java\n-@@ -22,6 +22,8 @@\n-    private final AdvancementManager field_240958_h_ = new AdvancementManager(this.field_240956_f_);\n-    private final FunctionReloader field_240959_i_;\n- \n-+   private final net.minecraftforge.common.loot.LootModifierManager lootManager = new net.minecraftforge.common.loot.LootModifierManager();\n-+\n-    public DataPackRegistries(Commands.EnvironmentType p_i232598_1_, int p_i232598_2_) {\n-       this.field_240953_c_ = new Commands(p_i232598_1_);\n-       this.field_240959_i_ = new FunctionReloader(p_i232598_2_, this.field_240953_c_.func_197054_a());\n-@@ -31,6 +33,7 @@\n+@@ -31,6 +31,7 @@\n        this.field_240952_b_.func_219534_a(this.field_240957_g_);\n        this.field_240952_b_.func_219534_a(this.field_240959_i_);\n        this.field_240952_b_.func_219534_a(this.field_240958_h_);\n-+      this.field_240952_b_.func_219534_a(this.lootManager);\n++      net.minecraftforge.event.ForgeEventFactory.onResourceReload().forEach(field_240952_b_::func_219534_a);\n     }\n  \n     public FunctionReloader func_240960_a_() {\n-@@ -85,4 +88,8 @@\n-    public void close() {\n-       this.field_240952_b_.close();\n-    }\n-+\n-+   public net.minecraftforge.common.loot.LootModifierManager getLootModifierManager() {\n-+      return lootManager;\n-+   }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzNjc5NA=="}, "originalCommit": {"oid": "2631f08bc2826ba6cd7d316d910d606fb58117ec"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjYyMjUzOnYy", "diffSide": "LEFT", "path": "src/main/java/net/minecraftforge/common/ForgeMod.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxODozOTo1OFrOGp3iaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxODozOTo1OFrOGp3iaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU1NDcyOQ==", "bodyText": "Why are the imports in this file changing?", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6849#discussion_r446554729", "createdAt": "2020-06-27T18:39:58Z", "author": {"login": "pupnewfster"}, "path": "src/main/java/net/minecraftforge/common/ForgeMod.java", "diffHunk": "@@ -23,8 +23,8 @@\n import net.minecraft.entity.ai.attributes.RangedAttribute;\n import net.minecraft.util.SoundEvent;\n import net.minecraft.world.storage.IServerConfiguration;\n-import net.minecraft.world.storage.IWorldInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2631f08bc2826ba6cd7d316d910d606fb58117ec"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Mjg3MTkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/event/AddReloadListenerEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMDozODozM1rOGp5TZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMDozODozM1rOGp5TZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4MzY1NA==", "bodyText": "Might want to emphasize this is for server reload listeners. Only clue in the javadoc is the link to data pack registries, but I could see someone getting confused and trying to use this for the client side resource pack reload listeners.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6849#discussion_r446583654", "createdAt": "2020-06-28T00:38:33Z", "author": {"login": "KnightMiner"}, "path": "src/main/java/net/minecraftforge/event/AddReloadListenerEvent.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package net.minecraftforge.event;\n+\n+import com.google.common.collect.ImmutableList;\n+import net.minecraft.resources.DataPackRegistries;\n+import net.minecraft.resources.IFutureReloadListener;\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.eventbus.api.Event;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * The main ResourceManager is recreated on each reload, through {@link DataPackRegistries}'s creation.\n+ *\n+ * The event is fired on each reload and lets modders add their own ReloadListeners.\n+ * The event is fired on the {@link MinecraftForge#EVENT_BUS}\n+ */\n+public class AddReloadListenerEvent extends Event", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ee329e63b986ddfdb583faf8e6ff95a146d93e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTg4MDY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/common/loot/LootModifierManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo1NDozMlrOGrMLsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDo1NjowMFrOGrOIjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0MTU1NA==", "bodyText": "Forge has its own internal handler, so this shouldn't have this weird meta instance thing...\nWhat is the point of people having access to the instance?", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6849#discussion_r447941554", "createdAt": "2020-06-30T19:54:32Z", "author": {"login": "LexManos"}, "path": "src/main/java/net/minecraftforge/common/loot/LootModifierManager.java", "diffHunk": "@@ -154,4 +161,17 @@ private IGlobalLootModifier deserializeModifier(ResourceLocation location, JsonE\n         return registeredLootModifiers.values();\n     }\n \n+    @SubscribeEvent\n+    public static void onResourceReload(AddReloadListenerEvent event)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4950447c05e29dbed1ba0bf273dc28073810ad77"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1ODg5NQ==", "bodyText": "used here https://github.com/MinecraftForge/MinecraftForge/blob/1.16.x/src/main/java/net/minecraftforge/common/ForgeHooks.java#L1169 but commented for now. I can put this in the InternalHandler if its better suited.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6849#discussion_r447958895", "createdAt": "2020-06-30T20:27:40Z", "author": {"login": "Cyborgmas"}, "path": "src/main/java/net/minecraftforge/common/loot/LootModifierManager.java", "diffHunk": "@@ -154,4 +161,17 @@ private IGlobalLootModifier deserializeModifier(ResourceLocation location, JsonE\n         return registeredLootModifiers.values();\n     }\n \n+    @SubscribeEvent\n+    public static void onResourceReload(AddReloadListenerEvent event)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0MTU1NA=="}, "originalCommit": {"oid": "4950447c05e29dbed1ba0bf273dc28073810ad77"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3MzUxNg==", "bodyText": "Yes this should be moved to the internal handler as there is no sense in exposing a modder facing API if we can avoid it when it comes to internal instances of things.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6849#discussion_r447973516", "createdAt": "2020-06-30T20:56:00Z", "author": {"login": "pupnewfster"}, "path": "src/main/java/net/minecraftforge/common/loot/LootModifierManager.java", "diffHunk": "@@ -154,4 +161,17 @@ private IGlobalLootModifier deserializeModifier(ResourceLocation location, JsonE\n         return registeredLootModifiers.values();\n     }\n \n+    @SubscribeEvent\n+    public static void onResourceReload(AddReloadListenerEvent event)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0MTU1NA=="}, "originalCommit": {"oid": "4950447c05e29dbed1ba0bf273dc28073810ad77"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 930, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}