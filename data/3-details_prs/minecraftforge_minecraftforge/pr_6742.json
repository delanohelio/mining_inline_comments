{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTYzODI5", "number": 6742, "title": "Add custom registry type support to DeferredRegister.", "bodyText": "Still needs javadocs, and some way of making a soft DeferredRegistry.\nBut I couldn't think of a way to make sure type saftey in a soft reference, as we need the base class.", "createdAt": "2020-06-04T03:21:24Z", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742", "merged": true, "mergeCommit": {"oid": "fd9bf64d5345a5c1f814a138aa57f476b390c411"}, "closed": true, "closedAt": "2020-06-12T22:28:43Z", "author": {"login": "LexManos"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn1W0IgH2gAyNDI3NTYzODI5OjFlYmY4ZTAxYjRkN2Q5OTYwNTk4NTkyNTJiY2ZmZGQxMjU0NTM3NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqqlCRAH2gAyNDI3NTYzODI5OjQxYzQ5MDVmZTlhNjQxOGJmNTM5MDVlYmY0OGI4Y2NhOTVmY2UzMDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751", "author": {"user": {"login": "LexManos", "name": "LexManos"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/1ebf8e01b4d7d996059859252bcffdd125453751", "committedDate": "2020-06-04T03:19:01Z", "message": "Add custom registry type support to DeferredRegister."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0Mzc4MTQy", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#pullrequestreview-424378142", "createdAt": "2020-06-04T12:12:26Z", "commit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxMjoyNlrOGfC1UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjoxNDoyNVrOGfC5Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTQ1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)\n          \n          \n            \n                /**\n          \n          \n            \n                 * Use for vanilla/forge registries. See example above.\n          \n          \n            \n                 */\n          \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435205456", "createdAt": "2020-06-04T12:12:26Z", "author": {"login": "Cyborgmas"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -56,15 +59,35 @@\n  */\n public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n {\n-    private final IForgeRegistry<T> type;\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTcyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)\n          \n          \n            \n                /**\n          \n          \n            \n                 * Use for custom registries that are made during the NewRegistry event. \n          \n          \n            \n                 */\n          \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435205723", "createdAt": "2020-06-04T12:12:57Z", "author": {"login": "Cyborgmas"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -56,15 +59,35 @@\n  */\n public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n {\n-    private final IForgeRegistry<T> type;\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)\n+    {\n+        return new DeferredRegister<B>(reg, modid);\n+    }\n+\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNjAzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {\n          \n          \n            \n                /**\n          \n          \n            \n                 * For custom registries only, fills the {@link #registryFactory} to be called later see {@link #register(IEventBus)}\n          \n          \n            \n                 *\n          \n          \n            \n                 * Calls {@link RegistryBuilder#setName} and {@link RegistryBuilder#setType} automatically.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param name  Path of the registry's {@link ResourceLocation}\n          \n          \n            \n                 * @param sup   Supplier of the RegistryBuilder that is called to fill {@link #type} during the NewRegistry event\n          \n          \n            \n                 * @return      A supplier of the {@link IForgeRegistry} created by the builder.\n          \n          \n            \n                 */\n          \n          \n            \n                public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435206038", "createdAt": "2020-06-04T12:13:31Z", "author": {"login": "Cyborgmas"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -80,13 +103,32 @@ public DeferredRegister(IForgeRegistry<T> reg, String modid)\n         Objects.requireNonNull(name);\n         Objects.requireNonNull(sup);\n         final ResourceLocation key = new ResourceLocation(modid, name);\n-        RegistryObject<I> ret = RegistryObject.of(key, this.type);\n+\n+        RegistryObject<I> ret;\n+        if (this.type != null)\n+            ret = RegistryObject.of(key, this.type);\n+        else if (this.superType != null)\n+            ret = RegistryObject.of(key, this.superType, this.modid);\n+        else\n+            throw new IllegalStateException(\"Could not create RegistryObject in DeferredRegister\");\n+\n         if (entries.putIfAbsent((RegistryObject<T>) ret, () -> sup.get().setRegistryName(key)) != null) {\n             throw new IllegalArgumentException(\"Duplicate registration \" + name);\n         }\n+\n         return ret;\n     }\n \n+    public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNjQ5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * See the example usage.\n          \n          \n            \n                 * See the example usage.\n          \n          \n            \n                 *\n          \n          \n            \n                 * If using this for a custom registry, creates the the registry for you in {@link #createRegistry} using the {@link RegistryEvent.NewRegistry} event\n          \n          \n            \n                 * If no {@link #registryFactory} was provided, listens to the NewRegistry event on {@link EventPriority.LOWEST} to check if the registry was properly created.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435206491", "createdAt": "2020-06-04T12:14:25Z", "author": {"login": "Cyborgmas"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -80,13 +103,32 @@ public DeferredRegister(IForgeRegistry<T> reg, String modid)\n         Objects.requireNonNull(name);\n         Objects.requireNonNull(sup);\n         final ResourceLocation key = new ResourceLocation(modid, name);\n-        RegistryObject<I> ret = RegistryObject.of(key, this.type);\n+\n+        RegistryObject<I> ret;\n+        if (this.type != null)\n+            ret = RegistryObject.of(key, this.type);\n+        else if (this.superType != null)\n+            ret = RegistryObject.of(key, this.superType, this.modid);\n+        else\n+            throw new IllegalStateException(\"Could not create RegistryObject in DeferredRegister\");\n+\n         if (entries.putIfAbsent((RegistryObject<T>) ret, () -> sup.get().setRegistryName(key)) != null) {\n             throw new IllegalArgumentException(\"Duplicate registration \" + name);\n         }\n+\n         return ret;\n     }\n \n+    public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {\n+        if (this.superType == null)\n+            throw new IllegalStateException(\"Cannot create a registry without specifying a base type\");\n+        if (this.type != null || this.registryFactory != null)\n+            throw new IllegalStateException(\"Cannot create a registry for a type that already exists\");\n+\n+        this.registryFactory = () -> sup.get().setName(new ResourceLocation(modid, name)).setType(this.superType);\n+        return () -> this.type;\n+    }\n+\n     /**\n      * Adds our event handler to the specified event bus, this MUST be called in order for this class to function.\n      * See the example usage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NzEwNDI2", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#pullrequestreview-424710426", "createdAt": "2020-06-04T18:17:02Z", "commit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoxNzowMlrOGfSFsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoxNzowMlrOGfSFsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1NTQxMQ==", "bodyText": "As a reference to Class<T> superType is now stored in DeferredRegister would it make more sense to just compare event.getGenericType() to that rather than querying the registry for it?", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435455411", "createdAt": "2020-06-04T18:17:02Z", "author": {"login": "pupnewfster"}, "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -108,7 +156,7 @@ public void register(IEventBus bus)\n \n     private void addEntries(RegistryEvent.Register<?> event)\n     {\n-        if (event.getGenericType() == this.type.getRegistrySuperType())\n+        if (this.type != null && event.getGenericType() == this.type.getRegistrySuperType())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebf8e01b4d7d996059859252bcffdd125453751"}, "originalPosition": 107}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d74ef665071c840d117144efa9d58f58badaf5c", "author": {"user": {"login": "LexManos", "name": "LexManos"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/6d74ef665071c840d117144efa9d58f58badaf5c", "committedDate": "2020-06-12T22:24:54Z", "message": "Update src/main/java/net/minecraftforge/registries/DeferredRegister.java\n\nCo-authored-by: Cyborgmas <thpetuaudletang@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "143fcd0b617a143d6039af828e4500c15a4cd731", "author": {"user": {"login": "LexManos", "name": "LexManos"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/143fcd0b617a143d6039af828e4500c15a4cd731", "committedDate": "2020-06-12T22:26:39Z", "message": "Update src/main/java/net/minecraftforge/registries/DeferredRegister.java\n\nCo-authored-by: Cyborgmas <thpetuaudletang@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41c4905fe9a6418bf53905ebf48b8cca95fce304", "author": {"user": {"login": "LexManos", "name": "LexManos"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/41c4905fe9a6418bf53905ebf48b8cca95fce304", "committedDate": "2020-06-12T22:27:22Z", "message": "Update src/main/java/net/minecraftforge/registries/DeferredRegister.java\n\nCo-authored-by: Cyborgmas <thpetuaudletang@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2075, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}