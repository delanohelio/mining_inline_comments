{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNDgwNjk3", "number": 6825, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1NzoxOFrOEJJIxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1NzoxOFrOEJJIxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDIyMzQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/common/PlantType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1NzoxOFrOGph6Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzozNTowM1rOGppLfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwMDQxOA==", "bodyText": "I don't think calling get() while another thread is in the middle of computeIfAbsent is thread-safe", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6825#discussion_r446200418", "createdAt": "2020-06-26T13:57:18Z", "author": {"login": "gigaherz"}, "path": "src/main/java/net/minecraftforge/common/PlantType.java", "diffHunk": "@@ -41,24 +43,33 @@\n \n     /**\n      * Getting a custom {@link PlantType}, or an existing one if it has the same name as that one. Your plant should implement {@link IPlantable}\n-     * and return this custom type in {@link IPlantable#getPlantType(IBlockAccess, BlockPos)}.\n+     * and return this custom type in {@link IPlantable#getPlantType(IBlockReader, BlockPos)}.\n      *\n      * <p>If your new plant grows on blocks like any one of them above, never create a new {@link PlantType}.\n-     * This enumeration is only functioning in\n-     * {@link net.minecraft.block.Block#canSustainPlant(IBlockState, IWorldReader, BlockPos, EnumFacing, IPlantable)},\n+     * This Type is only functioning in\n+     * {@link net.minecraft.block.Block#canSustainPlant(BlockState, IBlockReader, BlockPos, Direction, IPlantable)},\n      * which you are supposed to override this function in your new block and create a new plant type to grow on that block.\n      *\n-     * <p>You can create an instance of your plant type in your API and let your/others mods access it. It will be faster than calling this method.\n+     * This method can be called during parallel loading\n      * @param name the name of the type of plant, you had better follow the style above\n      * @return the acquired {@link PlantType}, a new one if not found.\n      */\n     public static PlantType get(String name)\n     {\n-        return VALUES.computeIfAbsent(name, e -> {\n-            if (INVALID_CHARACTERS.matcher(e).find())\n-                throw new IllegalArgumentException(\"PlantType.get() called with invalid name: \" + name);\n-            return new PlantType(e);\n-        });\n+        PlantType type = VALUES.get(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2face67e4b88b4a08deee4fc6df99b61bc8384a7"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxOTQ4Nw==", "bodyText": "So I did some reading, and it turns out computeIfAbset that ConcurrentHashMap actually allows the behaviour as I used it, however, computeIfAbsent is already enoguh, as the implementation for ConcurrentHashMap is written so it guranteeres that not race condition will occur", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6825#discussion_r446319487", "createdAt": "2020-06-26T17:35:03Z", "author": {"login": "ichttt"}, "path": "src/main/java/net/minecraftforge/common/PlantType.java", "diffHunk": "@@ -41,24 +43,33 @@\n \n     /**\n      * Getting a custom {@link PlantType}, or an existing one if it has the same name as that one. Your plant should implement {@link IPlantable}\n-     * and return this custom type in {@link IPlantable#getPlantType(IBlockAccess, BlockPos)}.\n+     * and return this custom type in {@link IPlantable#getPlantType(IBlockReader, BlockPos)}.\n      *\n      * <p>If your new plant grows on blocks like any one of them above, never create a new {@link PlantType}.\n-     * This enumeration is only functioning in\n-     * {@link net.minecraft.block.Block#canSustainPlant(IBlockState, IWorldReader, BlockPos, EnumFacing, IPlantable)},\n+     * This Type is only functioning in\n+     * {@link net.minecraft.block.Block#canSustainPlant(BlockState, IBlockReader, BlockPos, Direction, IPlantable)},\n      * which you are supposed to override this function in your new block and create a new plant type to grow on that block.\n      *\n-     * <p>You can create an instance of your plant type in your API and let your/others mods access it. It will be faster than calling this method.\n+     * This method can be called during parallel loading\n      * @param name the name of the type of plant, you had better follow the style above\n      * @return the acquired {@link PlantType}, a new one if not found.\n      */\n     public static PlantType get(String name)\n     {\n-        return VALUES.computeIfAbsent(name, e -> {\n-            if (INVALID_CHARACTERS.matcher(e).find())\n-                throw new IllegalArgumentException(\"PlantType.get() called with invalid name: \" + name);\n-            return new PlantType(e);\n-        });\n+        PlantType type = VALUES.get(name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwMDQxOA=="}, "originalCommit": {"oid": "2face67e4b88b4a08deee4fc6df99b61bc8384a7"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 924, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}