{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MjI3ODc5", "number": 6411, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTozMToxM1rODV2RpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1ODozMFrODgAGBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjM1OTQwOnYy", "diffSide": "RIGHT", "path": "patches/minecraft/net/minecraft/item/Food.java.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTozMToxM1rOFaR4PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTozMToxM1rOFaR4PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMDIyMQ==", "bodyText": "This breaks binary compatibility as it's a public function, any mod could be calling it. Bad idea if you you want to pull this into 1.14, or just for general mods in 1.14\nWhy not map the list to resolve the suppliers so you keep the old return type?", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6411#discussion_r363100221", "createdAt": "2020-01-05T15:31:13Z", "author": {"login": "KnightMiner"}, "path": "patches/minecraft/net/minecraft/item/Food.java.patch", "diffHunk": "@@ -0,0 +1,49 @@\n+--- a/net/minecraft/item/Food.java\n++++ b/net/minecraft/item/Food.java\n+@@ -11,9 +11,9 @@\n+    private final boolean field_221472_c;\n+    private final boolean field_221473_d;\n+    private final boolean field_221474_e;\n+-   private final List<Pair<EffectInstance, Float>> field_221475_f;\n++   private final List<Pair<java.util.function.Supplier<EffectInstance>, Float>> field_221475_f;\n+ \n+-   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<EffectInstance, Float>> p_i50106_6_) {\n++   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<java.util.function.Supplier<EffectInstance>, Float>> p_i50106_6_) {\n+       this.field_221470_a = p_i50106_1_;\n+       this.field_221471_b = p_i50106_2_;\n+       this.field_221472_c = p_i50106_3_;\n+@@ -42,7 +42,7 @@\n+       return this.field_221474_e;\n+    }\n+ \n+-   public List<Pair<EffectInstance, Float>> func_221464_f() {\n++   public List<Pair<java.util.function.Supplier<EffectInstance>, Float>> func_221464_f() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09bf21778ae577aa5fd01882da48a079bd98b473"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjM2NDcyOnYy", "diffSide": "RIGHT", "path": "patches/minecraft/net/minecraft/item/Food.java.patch", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTo0NDoxNFrOFaR68Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzowNjowN1rOFaSMhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMDkxMw==", "bodyText": "I have an AT on this constructor in one of my mods as I extend this class to replace hunger and saturation with suppliers (override the getters to pull from a server config file). Since ATs break when a Forge patches change the signature, could we change this to protected in the patch so I don't need my AT? Alternatively, if Forge does not want to change scope then can we keep the old constructor and have it call the new one?\nI'm open for discussion on this comment, if anyone knows a better way to do what I'm doing without more patches. Adding a food interface I can implement instead would probably be better for my needs, but outside the scope of this PR.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6411#discussion_r363100913", "createdAt": "2020-01-05T15:44:14Z", "author": {"login": "KnightMiner"}, "path": "patches/minecraft/net/minecraft/item/Food.java.patch", "diffHunk": "@@ -0,0 +1,49 @@\n+--- a/net/minecraft/item/Food.java\n++++ b/net/minecraft/item/Food.java\n+@@ -11,9 +11,9 @@\n+    private final boolean field_221472_c;\n+    private final boolean field_221473_d;\n+    private final boolean field_221474_e;\n+-   private final List<Pair<EffectInstance, Float>> field_221475_f;\n++   private final List<Pair<java.util.function.Supplier<EffectInstance>, Float>> field_221475_f;\n+ \n+-   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<EffectInstance, Float>> p_i50106_6_) {\n++   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<java.util.function.Supplier<EffectInstance>, Float>> p_i50106_6_) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09bf21778ae577aa5fd01882da48a079bd98b473"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNDA1MQ==", "bodyText": "I am also pretty sure forge does not like overwriting constructors/built in methods. Instead they should be deprecated and create ones with suppliers. And then reference the new supplier ones from the deprecated ones. For example: https://github.com/MinecraftForge/MinecraftForge/blob/1.15.x/patches/minecraft/net/minecraft/block/FlowerPotBlock.java.patch\nI believe the main reason forge does this is so it doesn't mess with the mapping process, though I could be wrong about that so if someone knows differently feel free to chime in.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6411#discussion_r363104051", "createdAt": "2020-01-05T16:40:10Z", "author": {"login": "pupnewfster"}, "path": "patches/minecraft/net/minecraft/item/Food.java.patch", "diffHunk": "@@ -0,0 +1,49 @@\n+--- a/net/minecraft/item/Food.java\n++++ b/net/minecraft/item/Food.java\n+@@ -11,9 +11,9 @@\n+    private final boolean field_221472_c;\n+    private final boolean field_221473_d;\n+    private final boolean field_221474_e;\n+-   private final List<Pair<EffectInstance, Float>> field_221475_f;\n++   private final List<Pair<java.util.function.Supplier<EffectInstance>, Float>> field_221475_f;\n+ \n+-   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<EffectInstance, Float>> p_i50106_6_) {\n++   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<java.util.function.Supplier<EffectInstance>, Float>> p_i50106_6_) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMDkxMw=="}, "originalCommit": {"oid": "09bf21778ae577aa5fd01882da48a079bd98b473"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNDI5Nw==", "bodyText": "Yeah I was considering that although I thought they only did that in order to not break binary compatibility thus avoiding having to patch other vanilla classes to cater for the change however, this constructor is private so I assumed it was alright to change. But yes, if it\u2019s to do with the mapping process or some other reason I shall update it accordingly.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6411#discussion_r363104297", "createdAt": "2020-01-05T16:44:34Z", "author": {"login": "Sm0keySa1m0n"}, "path": "patches/minecraft/net/minecraft/item/Food.java.patch", "diffHunk": "@@ -0,0 +1,49 @@\n+--- a/net/minecraft/item/Food.java\n++++ b/net/minecraft/item/Food.java\n+@@ -11,9 +11,9 @@\n+    private final boolean field_221472_c;\n+    private final boolean field_221473_d;\n+    private final boolean field_221474_e;\n+-   private final List<Pair<EffectInstance, Float>> field_221475_f;\n++   private final List<Pair<java.util.function.Supplier<EffectInstance>, Float>> field_221475_f;\n+ \n+-   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<EffectInstance, Float>> p_i50106_6_) {\n++   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<java.util.function.Supplier<EffectInstance>, Float>> p_i50106_6_) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMDkxMw=="}, "originalCommit": {"oid": "09bf21778ae577aa5fd01882da48a079bd98b473"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNDk3Mw==", "bodyText": "No it's nothing to do with binary compatibility. We don't remove vanilla methods.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6411#discussion_r363104973", "createdAt": "2020-01-05T16:57:17Z", "author": {"login": "tterrag1098"}, "path": "patches/minecraft/net/minecraft/item/Food.java.patch", "diffHunk": "@@ -0,0 +1,49 @@\n+--- a/net/minecraft/item/Food.java\n++++ b/net/minecraft/item/Food.java\n+@@ -11,9 +11,9 @@\n+    private final boolean field_221472_c;\n+    private final boolean field_221473_d;\n+    private final boolean field_221474_e;\n+-   private final List<Pair<EffectInstance, Float>> field_221475_f;\n++   private final List<Pair<java.util.function.Supplier<EffectInstance>, Float>> field_221475_f;\n+ \n+-   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<EffectInstance, Float>> p_i50106_6_) {\n++   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<java.util.function.Supplier<EffectInstance>, Float>> p_i50106_6_) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMDkxMw=="}, "originalCommit": {"oid": "09bf21778ae577aa5fd01882da48a079bd98b473"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNTQxMg==", "bodyText": "Alright, I'll add it back, although if I did, nothing would be calling it because it's only called by the build function in the food builder and I'm modifying that to pass a Supplier instead (and it's private).", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6411#discussion_r363105412", "createdAt": "2020-01-05T17:06:07Z", "author": {"login": "Sm0keySa1m0n"}, "path": "patches/minecraft/net/minecraft/item/Food.java.patch", "diffHunk": "@@ -0,0 +1,49 @@\n+--- a/net/minecraft/item/Food.java\n++++ b/net/minecraft/item/Food.java\n+@@ -11,9 +11,9 @@\n+    private final boolean field_221472_c;\n+    private final boolean field_221473_d;\n+    private final boolean field_221474_e;\n+-   private final List<Pair<EffectInstance, Float>> field_221475_f;\n++   private final List<Pair<java.util.function.Supplier<EffectInstance>, Float>> field_221475_f;\n+ \n+-   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<EffectInstance, Float>> p_i50106_6_) {\n++   private Food(int p_i50106_1_, float p_i50106_2_, boolean p_i50106_3_, boolean p_i50106_4_, boolean p_i50106_5_, List<Pair<java.util.function.Supplier<EffectInstance>, Float>> p_i50106_6_) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMDkxMw=="}, "originalCommit": {"oid": "09bf21778ae577aa5fd01882da48a079bd98b473"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjM3Mjg3OnYy", "diffSide": "RIGHT", "path": "patches/minecraft/net/minecraft/entity/LivingEntity.java.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNjowNTozNlrOFaR_bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNjozNDoxMlrOFaSF1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjA2Mg==", "bodyText": "This is not equivelent to the previous code. The old code ensured the effect instance was not null, you are just ensuring the supplier is not null (could NPE if the supplier resolves to null)\nIf you make the other change I requested and keep the old signature this issue will resolve", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6411#discussion_r363102062", "createdAt": "2020-01-05T16:05:36Z", "author": {"login": "KnightMiner"}, "path": "patches/minecraft/net/minecraft/entity/LivingEntity.java.patch", "diffHunk": "@@ -459,6 +459,18 @@\n     }\n  \n     public boolean func_70094_T() {\n+@@ -2829,9 +2894,9 @@\n+    private void func_213349_a(ItemStack p_213349_1_, World p_213349_2_, LivingEntity p_213349_3_) {\n+       Item item = p_213349_1_.func_77973_b();\n+       if (item.func_219971_r()) {\n+-         for(Pair<EffectInstance, Float> pair : item.func_219967_s().func_221464_f()) {\n++         for(Pair<java.util.function.Supplier<EffectInstance>, Float> pair : item.func_219967_s().func_221464_f()) {\n+             if (!p_213349_2_.field_72995_K && pair.getLeft() != null && p_213349_2_.field_73012_v.nextFloat() < pair.getRight()) {\n+-               p_213349_3_.func_195064_c(new EffectInstance(pair.getLeft()));\n++               p_213349_3_.func_195064_c(new EffectInstance(pair.getLeft().get()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09bf21778ae577aa5fd01882da48a079bd98b473"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMzcwMQ==", "bodyText": "What I\u2019ll do is do as you suggested above and resolve the supplier instances on the getter method.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6411#discussion_r363103701", "createdAt": "2020-01-05T16:34:12Z", "author": {"login": "Sm0keySa1m0n"}, "path": "patches/minecraft/net/minecraft/entity/LivingEntity.java.patch", "diffHunk": "@@ -459,6 +459,18 @@\n     }\n  \n     public boolean func_70094_T() {\n+@@ -2829,9 +2894,9 @@\n+    private void func_213349_a(ItemStack p_213349_1_, World p_213349_2_, LivingEntity p_213349_3_) {\n+       Item item = p_213349_1_.func_77973_b();\n+       if (item.func_219971_r()) {\n+-         for(Pair<EffectInstance, Float> pair : item.func_219967_s().func_221464_f()) {\n++         for(Pair<java.util.function.Supplier<EffectInstance>, Float> pair : item.func_219967_s().func_221464_f()) {\n+             if (!p_213349_2_.field_72995_K && pair.getLeft() != null && p_213349_2_.field_73012_v.nextFloat() < pair.getRight()) {\n+-               p_213349_3_.func_195064_c(new EffectInstance(pair.getLeft()));\n++               p_213349_3_.func_195064_c(new EffectInstance(pair.getLeft().get()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjA2Mg=="}, "originalCommit": {"oid": "09bf21778ae577aa5fd01882da48a079bd98b473"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODgyNTY2OnYy", "diffSide": "RIGHT", "path": "patches/minecraft/net/minecraft/item/Food.java.patch", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1ODozMFrOFqCD-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1ODozMFrOFqCD-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxODI5OA==", "bodyText": "@ichttt This is a obvious mix of tabs vs spaces, see later in the file.\nAnd the patch could be so much smaller if this was the normal method redirect by having the old function call the new.\nBut it's not that bad. I'll just clean it next time I remember/touch these patches.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6411#discussion_r379618298", "createdAt": "2020-02-14T19:58:30Z", "author": {"login": "LexManos"}, "path": "patches/minecraft/net/minecraft/item/Food.java.patch", "diffHunk": "@@ -0,0 +1,73 @@\n+--- a/net/minecraft/item/Food.java\n++++ b/net/minecraft/item/Food.java\n+@@ -11,15 +11,26 @@\n+    private final boolean field_221472_c;\n+    private final boolean field_221473_d;\n+    private final boolean field_221474_e;\n+-   private final List<Pair<EffectInstance, Float>> field_221475_f;\n++   private final List<Pair<java.util.function.Supplier<EffectInstance>, Float>> field_221475_f;\n++   \n++   private Food(Food.Builder builder) {\n++\t   this.field_221470_a = builder.field_221458_a;\n++\t   this.field_221471_b = builder.field_221459_b;\n++\t   this.field_221472_c = builder.field_221460_c;\n++\t   this.field_221473_d = builder.field_221461_d;\n++\t   this.field_221474_e = builder.field_221462_e;\n++\t   this.field_221475_f = builder.field_221463_f;\n++   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e93e6e918961a89ef9afe02963fd540135c7a1cd"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1027, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}