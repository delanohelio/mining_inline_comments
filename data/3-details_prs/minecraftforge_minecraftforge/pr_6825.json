{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNDgwNjk3", "number": 6825, "title": "Make Type classes safe to use in concurrent loading", "bodyText": "This makes ToolType and PlantType threadsafe. It tries to avoid synchronisation as much as possible, and only does it when it needs to write a new value.", "createdAt": "2020-06-26T09:28:38Z", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6825", "merged": true, "mergeCommit": {"oid": "7858abe96d72fbb5665476d680f1b0d147c28404"}, "closed": true, "closedAt": "2020-06-29T20:29:33Z", "author": {"login": "ichttt"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu_zQOAH2gAyNDQwNDgwNjk3OjAyZjM1ZmQ4MDgwY2Y4YWIwOGMyNjRlYTRhZWM1MDBlZTE1NzgwZjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvGw3wAH2gAyNDQwNDgwNjk3OjM1YWEwYWY0ZjNhNjgwNGIxNTNkNDJmNzBkYzk4NmIxZjQzMGVhYzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "02f35fd8080cf8ab08c264ea4aec500ee15780f9", "author": {"user": {"login": "ichttt", "name": "ichttt"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/02f35fd8080cf8ab08c264ea4aec500ee15780f9", "committedDate": "2020-06-26T09:26:36Z", "message": "Make Type classes safe to use in concurrent loading"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2face67e4b88b4a08deee4fc6df99b61bc8384a7", "author": {"user": {"login": "ichttt", "name": "ichttt"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/2face67e4b88b4a08deee4fc6df99b61bc8384a7", "committedDate": "2020-06-26T09:28:28Z", "message": "Actually make PlantType safe"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MzE3NjU0", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6825#pullrequestreview-438317654", "createdAt": "2020-06-26T13:57:17Z", "commit": {"oid": "2face67e4b88b4a08deee4fc6df99b61bc8384a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1NzoxOFrOGph6Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1NzoxOFrOGph6Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwMDQxOA==", "bodyText": "I don't think calling get() while another thread is in the middle of computeIfAbsent is thread-safe", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6825#discussion_r446200418", "createdAt": "2020-06-26T13:57:18Z", "author": {"login": "gigaherz"}, "path": "src/main/java/net/minecraftforge/common/PlantType.java", "diffHunk": "@@ -41,24 +43,33 @@\n \n     /**\n      * Getting a custom {@link PlantType}, or an existing one if it has the same name as that one. Your plant should implement {@link IPlantable}\n-     * and return this custom type in {@link IPlantable#getPlantType(IBlockAccess, BlockPos)}.\n+     * and return this custom type in {@link IPlantable#getPlantType(IBlockReader, BlockPos)}.\n      *\n      * <p>If your new plant grows on blocks like any one of them above, never create a new {@link PlantType}.\n-     * This enumeration is only functioning in\n-     * {@link net.minecraft.block.Block#canSustainPlant(IBlockState, IWorldReader, BlockPos, EnumFacing, IPlantable)},\n+     * This Type is only functioning in\n+     * {@link net.minecraft.block.Block#canSustainPlant(BlockState, IBlockReader, BlockPos, Direction, IPlantable)},\n      * which you are supposed to override this function in your new block and create a new plant type to grow on that block.\n      *\n-     * <p>You can create an instance of your plant type in your API and let your/others mods access it. It will be faster than calling this method.\n+     * This method can be called during parallel loading\n      * @param name the name of the type of plant, you had better follow the style above\n      * @return the acquired {@link PlantType}, a new one if not found.\n      */\n     public static PlantType get(String name)\n     {\n-        return VALUES.computeIfAbsent(name, e -> {\n-            if (INVALID_CHARACTERS.matcher(e).find())\n-                throw new IllegalArgumentException(\"PlantType.get() called with invalid name: \" + name);\n-            return new PlantType(e);\n-        });\n+        PlantType type = VALUES.get(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2face67e4b88b4a08deee4fc6df99b61bc8384a7"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35aa0af4f3a6804b153d42f70dc986b1f430eac8", "author": {"user": {"login": "ichttt", "name": "ichttt"}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/35aa0af4f3a6804b153d42f70dc986b1f430eac8", "committedDate": "2020-06-26T17:33:20Z", "message": "Just use computeIfAbsent directly"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1971, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}