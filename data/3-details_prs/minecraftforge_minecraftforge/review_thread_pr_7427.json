{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MDIyMjEy", "number": 7427, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozMzo0OVrOE0ZyKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMjozNzoyN1rOE2SqfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzgzODUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozMzo0OVrOHsG4Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozMzo0OVrOHsG4Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxMjEwNg==", "bodyText": "Braces on newlines, please.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r516012106", "createdAt": "2020-11-02T14:33:49Z", "author": {"login": "sciwhiz12"}, "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +93,35 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n+        int maxBackups = 5;\n+        File bakFileLocation = commentedFileConfig.getFile().getParentFile();\n+        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n+        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n+        File bakFile = new File(bakFileLocation, bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        try\n+        {\n+            for(int i = maxBackups; i > 0; i--){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68e010520afb1c1f8d51dee587901faaeb54026f"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzgzOTE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozMzo1OFrOHsG4pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozMzo1OFrOHsG4pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxMjE5Ng==", "bodyText": "Braces on newlines, please.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r516012196", "createdAt": "2020-11-02T14:33:58Z", "author": {"login": "sciwhiz12"}, "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +93,35 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n+        int maxBackups = 5;\n+        File bakFileLocation = commentedFileConfig.getFile().getParentFile();\n+        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n+        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n+        File bakFile = new File(bakFileLocation, bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        try\n+        {\n+            for(int i = maxBackups; i > 0; i--){\n+                File oldBak = new File(bakFileLocation, bakFileName + \"-\" + i + \".\" + bakFileExtension);\n+                if(oldBak.exists()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68e010520afb1c1f8d51dee587901faaeb54026f"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzg1NDc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozNzozNlrOHsHCTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoxMTowNlrOHsLJ4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxNDY2OA==", "bodyText": "Just asking, wouldn't this be better as a static constant, instead of a local constant?", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r516014668", "createdAt": "2020-11-02T14:37:36Z", "author": {"login": "sciwhiz12"}, "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +93,35 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n+        int maxBackups = 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68e010520afb1c1f8d51dee587901faaeb54026f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4MjE0Nw==", "bodyText": "Added an overload that allows the caller to choose maxBackups and a TODO requesting ideas on how to allow mods to set maxBackups for their own config", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r516082147", "createdAt": "2020-11-02T16:11:06Z", "author": {"login": "DaemonUmbra"}, "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +93,35 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n+        int maxBackups = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxNDY2OA=="}, "originalCommit": {"oid": "68e010520afb1c1f8d51dee587901faaeb54026f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjIzODk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMTo1MzoyNFrOHsd5oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMTo1MzoyNFrOHsd5oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4OTI4MQ==", "bodyText": "Use NIO, not java.io.File. This will be a lot cleaner..", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r516389281", "createdAt": "2020-11-03T01:53:24Z", "author": {"login": "cpw"}, "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +93,42 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig)\n+    {\n+        backUpConfig(commentedFileConfig, 5); //TODO: Think of a way for mods to set their own preference (include a sanity check as well, no disk stuffing)\n+    }\n+\n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig, final int maxBackups)\n+    {\n+        File bakFileLocation = commentedFileConfig.getFile().getParentFile();\n+        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n+        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n+        File bakFile = new File(bakFileLocation, bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        try\n+        {\n+            for(int i = maxBackups; i > 0; i--)\n+            {\n+                File oldBak = new File(bakFileLocation, bakFileName + \"-\" + i + \".\" + bakFileExtension);\n+                if(oldBak.exists())\n+                {\n+                    if(i == maxBackups)\n+                    {\n+                        if (oldBak.delete()) continue;\n+                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as the oldest backup, {}, could not be deleted\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n+                        return;\n+                    }\n+                    if (!oldBak.renameTo(new File(bakFileLocation, bakFileName + \"-\" + (i + 1) + \".\" + bakFileExtension)))\n+                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as an old backup, {}, could not be renamed\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ad08caca2bc3f4e80307b13390ff3e86af09370"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzY0MzQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMjozNzoyN1rOHvCajg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMjo1NTo0NlrOHvChKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDY4Ng==", "bodyText": "Before anyone comments on this part, Log4J doesn't seem to have a method for both {} params and throwable printing at the same time.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r519084686", "createdAt": "2020-11-07T02:37:27Z", "author": {"login": "DaemonUmbra"}, "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +92,38 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig)\n+    {\n+        backUpConfig(commentedFileConfig, 5); //TODO: Think of a way for mods to set their own preference (include a sanity check as well, no disk stuffing)\n+    }\n+\n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig, final int maxBackups)\n+    {\n+        Path bakFileLocation = commentedFileConfig.getNioPath().getParent();\n+        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n+        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n+        Path bakFile = bakFileLocation.resolve(bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        try\n+        {\n+            for(int i = maxBackups; i > 0; i--)\n+            {\n+                Path oldBak = bakFileLocation.resolve(bakFileName + \"-\" + i + \".\" + bakFileExtension);\n+                if(Files.exists(oldBak))\n+                {\n+                    if(i >= maxBackups)\n+                        Files.delete(oldBak);\n+                    else\n+                        Files.move(oldBak, bakFileLocation.resolve(bakFileName + \"-\" + (i + 1) + \".\" + bakFileExtension));\n+                }\n+            }\n+            Files.copy(commentedFileConfig.getNioPath(), bakFile);\n+        }\n+        catch (IOException exception)\n+        {\n+            LOGGER.warn(CONFIG, \"Failed to back up config file \" + commentedFileConfig.getNioPath(), exception);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e5821c153f7a5373325977e1699cbb987c688f0"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NTYwOA==", "bodyText": "Actually it does, I looked it up at one point, and it turns out log4j has \"hidden\" functionality that makes it treat it as such if it has one more passed to it than the parameters and is a throwable.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r519085608", "createdAt": "2020-11-07T02:47:44Z", "author": {"login": "pupnewfster"}, "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +92,38 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig)\n+    {\n+        backUpConfig(commentedFileConfig, 5); //TODO: Think of a way for mods to set their own preference (include a sanity check as well, no disk stuffing)\n+    }\n+\n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig, final int maxBackups)\n+    {\n+        Path bakFileLocation = commentedFileConfig.getNioPath().getParent();\n+        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n+        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n+        Path bakFile = bakFileLocation.resolve(bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        try\n+        {\n+            for(int i = maxBackups; i > 0; i--)\n+            {\n+                Path oldBak = bakFileLocation.resolve(bakFileName + \"-\" + i + \".\" + bakFileExtension);\n+                if(Files.exists(oldBak))\n+                {\n+                    if(i >= maxBackups)\n+                        Files.delete(oldBak);\n+                    else\n+                        Files.move(oldBak, bakFileLocation.resolve(bakFileName + \"-\" + (i + 1) + \".\" + bakFileExtension));\n+                }\n+            }\n+            Files.copy(commentedFileConfig.getNioPath(), bakFile);\n+        }\n+        catch (IOException exception)\n+        {\n+            LOGGER.warn(CONFIG, \"Failed to back up config file \" + commentedFileConfig.getNioPath(), exception);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDY4Ng=="}, "originalCommit": {"oid": "2e5821c153f7a5373325977e1699cbb987c688f0"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NjM3Ng==", "bodyText": "TIL", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r519086376", "createdAt": "2020-11-07T02:55:46Z", "author": {"login": "DaemonUmbra"}, "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +92,38 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig)\n+    {\n+        backUpConfig(commentedFileConfig, 5); //TODO: Think of a way for mods to set their own preference (include a sanity check as well, no disk stuffing)\n+    }\n+\n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig, final int maxBackups)\n+    {\n+        Path bakFileLocation = commentedFileConfig.getNioPath().getParent();\n+        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n+        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n+        Path bakFile = bakFileLocation.resolve(bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        try\n+        {\n+            for(int i = maxBackups; i > 0; i--)\n+            {\n+                Path oldBak = bakFileLocation.resolve(bakFileName + \"-\" + i + \".\" + bakFileExtension);\n+                if(Files.exists(oldBak))\n+                {\n+                    if(i >= maxBackups)\n+                        Files.delete(oldBak);\n+                    else\n+                        Files.move(oldBak, bakFileLocation.resolve(bakFileName + \"-\" + (i + 1) + \".\" + bakFileExtension));\n+                }\n+            }\n+            Files.copy(commentedFileConfig.getNioPath(), bakFile);\n+        }\n+        catch (IOException exception)\n+        {\n+            LOGGER.warn(CONFIG, \"Failed to back up config file \" + commentedFileConfig.getNioPath(), exception);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDY4Ng=="}, "originalCommit": {"oid": "2e5821c153f7a5373325977e1699cbb987c688f0"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 842, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}