{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyMjkyMTM0", "number": 6994, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTowNTo1NFrOEQD3Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTowNjo1N1rOEQD5ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1Mjc1OTUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/client/IWeatherRenderHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTowNTo1NFrOG0BWVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMjo1MToxMlrOG0Kq3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIwMTIzNg==", "bodyText": "Now that we have seperate interfaces for everything, we might as well add more specific context, so pass in the LightTexture and the position here", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6994#discussion_r457201236", "createdAt": "2020-07-20T09:05:54Z", "author": {"login": "ichttt"}, "path": "src/main/java/net/minecraftforge/client/IWeatherRenderHandler.java", "diffHunk": "@@ -19,14 +19,14 @@\n \n package net.minecraftforge.client;\n \n-import net.minecraftforge.api.distmarker.Dist;\n import net.minecraft.client.Minecraft;\n import net.minecraft.client.world.ClientWorld;\n-import net.minecraftforge.api.distmarker.OnlyIn;\n \n+/**\n+ * Call {@link net.minecraft.client.world.DimensionRenderInfo#setWeatherRenderHandler(IWeatherRenderHandler)}, obtained from a {@link ClientWorld} with an implementation of this to override all weather rendering with your own.\n+ * This includes rain and snow.\n+ */\n @FunctionalInterface\n-public interface IRenderHandler\n-{\n-    @OnlyIn(Dist.CLIENT)\n+public interface IWeatherRenderHandler {\n     void render(int ticks, float partialTicks, ClientWorld world, Minecraft mc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b362d01a648feb9f64ac0431cf3287019660627"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM1Mzk0OA==", "bodyText": "Makes sense. Both are still obtainable (via mc.gameRenderer.getLightTexture() and mc.gameRenderer.getActiveRenderInfo().getProjectedView()), but it's simpler if the user doesn't have to track those down as I did :)", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6994#discussion_r457353948", "createdAt": "2020-07-20T12:51:12Z", "author": {"login": "alcatrazEscapee"}, "path": "src/main/java/net/minecraftforge/client/IWeatherRenderHandler.java", "diffHunk": "@@ -19,14 +19,14 @@\n \n package net.minecraftforge.client;\n \n-import net.minecraftforge.api.distmarker.Dist;\n import net.minecraft.client.Minecraft;\n import net.minecraft.client.world.ClientWorld;\n-import net.minecraftforge.api.distmarker.OnlyIn;\n \n+/**\n+ * Call {@link net.minecraft.client.world.DimensionRenderInfo#setWeatherRenderHandler(IWeatherRenderHandler)}, obtained from a {@link ClientWorld} with an implementation of this to override all weather rendering with your own.\n+ * This includes rain and snow.\n+ */\n @FunctionalInterface\n-public interface IRenderHandler\n-{\n-    @OnlyIn(Dist.CLIENT)\n+public interface IWeatherRenderHandler {\n     void render(int ticks, float partialTicks, ClientWorld world, Minecraft mc);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIwMTIzNg=="}, "originalCommit": {"oid": "8b362d01a648feb9f64ac0431cf3287019660627"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1Mjc2NTM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/client/ICloudRenderHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTowNjo1N1rOG0BZhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTowNjo1N1rOG0BZhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIwMjA1NA==", "bodyText": "You can also pass the pos in here as an additional parameter", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6994#discussion_r457202054", "createdAt": "2020-07-20T09:06:57Z", "author": {"login": "ichttt"}, "path": "src/main/java/net/minecraftforge/client/ICloudRenderHandler.java", "diffHunk": "@@ -24,13 +24,10 @@\n import net.minecraft.client.world.ClientWorld;\n \n /**\n- * Call {@link net.minecraft.world.dimension.Dimension#setSkyRenderer} with an implementation of this\n- * to override all sky rendering with your own. This includes the sun, moon, stars, and sky-coloring.\n+ * Call {@link net.minecraft.client.world.DimensionRenderInfo#setCloudRenderHandler(ICloudRenderHandler)}, obtained from a {@link ClientWorld} with an implementation of this to override all cloud rendering with your own.\n+ * This is only responsible for rendering clouds.\n  */\n-public interface SkyRenderHandler extends IRenderHandler {\n-\t@Override\n-\tdefault void render(int ticks, float partialTicks, ClientWorld world, Minecraft mc) {}\n-\n-\tvoid render(int ticks, float partialTicks, MatrixStack matrixStack, ClientWorld world, Minecraft mc);\n-\n+@FunctionalInterface\n+public interface ICloudRenderHandler {\n+    void render(int ticks, float partialTicks, MatrixStack matrixStack, ClientWorld world, Minecraft mc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b362d01a648feb9f64ac0431cf3287019660627"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 911, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}