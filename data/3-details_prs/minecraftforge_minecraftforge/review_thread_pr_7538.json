{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNzI0MzA2", "number": 7538, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0NTozNlrOFB0LTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1NTozOVrOFB6IEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDQ3NzU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/common/util/ForgeSoundType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDo0NTozNlrOIAqMQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTowNjozNFrOIArONw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MjE3OQ==", "bodyText": "Might be worth throwing some java docs on this class that gives a brief summary of why this exists (given you wrote a very detailed thing for the PR explaining it you can probably just copy paste parts of that here)", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r537562179", "createdAt": "2020-12-07T14:45:36Z", "author": {"login": "pupnewfster"}, "path": "src/main/java/net/minecraftforge/common/util/ForgeSoundType.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Minecraft Forge\n+ * Copyright (c) 2016-2020.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.common.util;\n+\n+import net.minecraft.block.SoundType;\n+import net.minecraft.util.SoundEvent;\n+\n+import javax.annotation.Nonnull;\n+import java.util.function.Supplier;\n+\n+public class ForgeSoundType extends SoundType", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b66bac512992ec9230e008f2f5f926eecbcd5fff"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3OTA2Mw==", "bodyText": "Added a condensed/summarized version of the PR description as javadocs to the ForgeSoundType class. This should give modders more insight into why it exists.\n(I thought about linking this PR's URL in the @see section, but decided against it for now. If modders are curious, they could always git blame/search on GitHub to find the commit and this PR).", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r537579063", "createdAt": "2020-12-07T15:06:34Z", "author": {"login": "sciwhiz12"}, "path": "src/main/java/net/minecraftforge/common/util/ForgeSoundType.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Minecraft Forge\n+ * Copyright (c) 2016-2020.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.common.util;\n+\n+import net.minecraft.block.SoundType;\n+import net.minecraft.util.SoundEvent;\n+\n+import javax.annotation.Nonnull;\n+import java.util.function.Supplier;\n+\n+public class ForgeSoundType extends SoundType", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MjE3OQ=="}, "originalCommit": {"oid": "b66bac512992ec9230e008f2f5f926eecbcd5fff"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTQxMDg3OnYy", "diffSide": "RIGHT", "path": "patches/minecraft/net/minecraft/block/SoundType.java.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo0Njo1NVrOIAyyTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNTowMDo0MFrOIBHJFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwMjk5MA==", "bodyText": "I would move this comment to the Constructor, and then @deprecate the constructor. As the class itself isn't deprecated, it's the new instances that are.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r537702990", "createdAt": "2020-12-07T17:46:55Z", "author": {"login": "LexManos"}, "path": "patches/minecraft/net/minecraft/block/SoundType.java.patch", "diffHunk": "@@ -0,0 +1,10 @@\n+--- a/net/minecraft/block/SoundType.java\n++++ b/net/minecraft/block/SoundType.java\n+@@ -3,6 +3,7 @@\n+ import net.minecraft.util.SoundEvent;\n+ import net.minecraft.util.SoundEvents;\n+ \n++// Forge: Use {@link net.minecraftforge.common.util.ForgeSoundType} instead for suppliers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2f5c836f632feccf09429fd4d624e473d1cff13"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNjUwMA==", "bodyText": "Moved the comment, and deprecated the constructor for SoundType.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r538036500", "createdAt": "2020-12-08T05:00:40Z", "author": {"login": "sciwhiz12"}, "path": "patches/minecraft/net/minecraft/block/SoundType.java.patch", "diffHunk": "@@ -0,0 +1,10 @@\n+--- a/net/minecraft/block/SoundType.java\n++++ b/net/minecraft/block/SoundType.java\n+@@ -3,6 +3,7 @@\n+ import net.minecraft.util.SoundEvent;\n+ import net.minecraft.util.SoundEvents;\n+ \n++// Forge: Use {@link net.minecraftforge.common.util.ForgeSoundType} instead for suppliers", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwMjk5MA=="}, "originalCommit": {"oid": "c2f5c836f632feccf09429fd4d624e473d1cff13"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTQ1MjM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/minecraftforge/common/util/ForgeSoundType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1NTozOVrOIAzKgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNTowMjoyNlrOIBHLZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwOTE4Ng==", "bodyText": "I know this sounds dumb, but can you add (SoundEvent) casts to all these nulls?\nThe other option is writing some form of dev-time validation that this class has the same methods/constructors as the parent.\nThe idea is to make it a error if Mojang changes any of the argument types.\nThus notifying us that we need to update this class.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r537709186", "createdAt": "2020-12-07T17:55:39Z", "author": {"login": "LexManos"}, "path": "src/main/java/net/minecraftforge/common/util/ForgeSoundType.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Minecraft Forge\n+ * Copyright (c) 2016-2020.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.common.util;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.SoundType;\n+import net.minecraft.util.SoundEvent;\n+import net.minecraftforge.fml.RegistryObject;\n+import net.minecraftforge.registries.DeferredRegister;\n+\n+import javax.annotation.Nonnull;\n+import java.util.function.Supplier;\n+\n+/**\n+ * A subclass of {@link SoundType} that uses {@link Supplier<SoundEvent>}s.\n+ * <p>\n+ * This class allows mod developers to safely create custom {@code SoundType}s for use in their e.g. {@link Block}.\n+ * <p>\n+ * The problem with using {@code SoundType} directly is it requires {@link SoundEvent} instances directly, because\n+ * {@code SoundType}s are required to be present during {@link Block} creation and registration. However,\n+ * {@code SoundEvent} must also be registered.\n+ * <p>\n+ * A possible solution of initializing {@code SoundEvent}s first would require static initialization of the\n+ * {@code SoundEvent} instances and later registration, which goes against the contract of the registry system and\n+ * prevents the use of {@link DeferredRegister} and {@link RegistryObject}s.\n+ * <p>\n+ * This class offers an alternative and preferable solution, by allowing mods to create {@link SoundType}s using\n+ * {@link Supplier}s of {@link SoundEvent}s instead, which do not require static initialization of {@code SoundEvent}s\n+ * and allow the direct use of {@code RegistryObject}s.\n+ *\n+ * @see SoundType\n+ */\n+public class ForgeSoundType extends SoundType\n+{\n+    private final Supplier<SoundEvent> breakSound;\n+    private final Supplier<SoundEvent> stepSound;\n+    private final Supplier<SoundEvent> placeSound;\n+    private final Supplier<SoundEvent> hitSound;\n+    private final Supplier<SoundEvent> fallSound;\n+\n+    public ForgeSoundType(float volumeIn, float pitchIn, Supplier<SoundEvent> breakSoundIn, Supplier<SoundEvent> stepSoundIn, Supplier<SoundEvent> placeSoundIn, Supplier<SoundEvent> hitSoundIn, Supplier<SoundEvent> fallSoundIn)\n+    {\n+        super(volumeIn, pitchIn, null, null, null, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2f5c836f632feccf09429fd4d624e473d1cff13"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNzA5Mw==", "bodyText": "Adding casts like that does makes sense, once the idea behind it is known. I've added the casts to the nulls.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r538037093", "createdAt": "2020-12-08T05:02:26Z", "author": {"login": "sciwhiz12"}, "path": "src/main/java/net/minecraftforge/common/util/ForgeSoundType.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Minecraft Forge\n+ * Copyright (c) 2016-2020.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.common.util;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.SoundType;\n+import net.minecraft.util.SoundEvent;\n+import net.minecraftforge.fml.RegistryObject;\n+import net.minecraftforge.registries.DeferredRegister;\n+\n+import javax.annotation.Nonnull;\n+import java.util.function.Supplier;\n+\n+/**\n+ * A subclass of {@link SoundType} that uses {@link Supplier<SoundEvent>}s.\n+ * <p>\n+ * This class allows mod developers to safely create custom {@code SoundType}s for use in their e.g. {@link Block}.\n+ * <p>\n+ * The problem with using {@code SoundType} directly is it requires {@link SoundEvent} instances directly, because\n+ * {@code SoundType}s are required to be present during {@link Block} creation and registration. However,\n+ * {@code SoundEvent} must also be registered.\n+ * <p>\n+ * A possible solution of initializing {@code SoundEvent}s first would require static initialization of the\n+ * {@code SoundEvent} instances and later registration, which goes against the contract of the registry system and\n+ * prevents the use of {@link DeferredRegister} and {@link RegistryObject}s.\n+ * <p>\n+ * This class offers an alternative and preferable solution, by allowing mods to create {@link SoundType}s using\n+ * {@link Supplier}s of {@link SoundEvent}s instead, which do not require static initialization of {@code SoundEvent}s\n+ * and allow the direct use of {@code RegistryObject}s.\n+ *\n+ * @see SoundType\n+ */\n+public class ForgeSoundType extends SoundType\n+{\n+    private final Supplier<SoundEvent> breakSound;\n+    private final Supplier<SoundEvent> stepSound;\n+    private final Supplier<SoundEvent> placeSound;\n+    private final Supplier<SoundEvent> hitSound;\n+    private final Supplier<SoundEvent> fallSound;\n+\n+    public ForgeSoundType(float volumeIn, float pitchIn, Supplier<SoundEvent> breakSoundIn, Supplier<SoundEvent> stepSoundIn, Supplier<SoundEvent> placeSoundIn, Supplier<SoundEvent> hitSoundIn, Supplier<SoundEvent> fallSoundIn)\n+    {\n+        super(volumeIn, pitchIn, null, null, null, null, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwOTE4Ng=="}, "originalCommit": {"oid": "c2f5c836f632feccf09429fd4d624e473d1cff13"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 792, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}