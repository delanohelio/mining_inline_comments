{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0ODM2MzM2", "number": 7503, "title": "[1.16] Fix PointOfInterestType not being added to blockstate map when registered", "bodyText": "When vanilla registers a PointOfInterestType, its blockstates are added to the map that is used to find POI's in the world. The forge registry does not add blockstates to that map. This PR resolves this by making the map a slave map (as suggested by tterrag) and using callbacks to add blockstates to it.\nThis will (probably) not break mods currently adding POIs because the method they are (probably) using to register their POI blockstates to the map now does nothing.", "createdAt": "2020-11-20T17:07:27Z", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7503", "merged": true, "mergeCommit": {"oid": "545723dc8c564b361b9678b3b9bcfe889c3a265c"}, "closed": true, "closedAt": "2020-12-28T20:17:52Z", "author": {"login": "mrp-v2"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdp9XYugH2gAyNTI0ODM2MzM2OjgzODExMzBlY2ZkZDEyMjVhNGRhNTI1NTgzNDBkMjdmZWNkODRmOTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdp-GiTgFqTU1ODg3Nzk2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8381130ecfdd1225a4da52558340d27fecd84f97", "author": {"user": {"login": "mrp-v2", "name": null}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/8381130ecfdd1225a4da52558340d27fecd84f97", "committedDate": "2020-12-26T13:57:53Z", "message": "fix PointOfInterestType registry not updating the blockstate map"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5db4f68cacd86455c9520684cb0faad6c8ca6099", "author": {"user": {"login": "mrp-v2", "name": null}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/5db4f68cacd86455c9520684cb0faad6c8ca6099", "committedDate": "2020-11-20T17:03:34Z", "message": "fix PointOfInterestType registry not updating the blockstate map"}, "afterCommit": {"oid": "8381130ecfdd1225a4da52558340d27fecd84f97", "author": {"user": {"login": "mrp-v2", "name": null}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/8381130ecfdd1225a4da52558340d27fecd84f97", "committedDate": "2020-12-26T13:57:53Z", "message": "fix PointOfInterestType registry not updating the blockstate map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODcyMDIw", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7503#pullrequestreview-558872020", "createdAt": "2020-12-26T13:57:25Z", "commit": {"oid": "5db4f68cacd86455c9520684cb0faad6c8ca6099"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxMzo1NzoyNlrOILjZ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxNDowMjo1N1rOILjlzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk4NTMxMA==", "bodyText": "We are not vanilla, might want to make this message a bit more useful and not use Util.pauseDevMode.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7503#discussion_r548985310", "createdAt": "2020-12-26T13:57:26Z", "author": {"login": "diesieben07"}, "path": "src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -613,6 +618,38 @@ public void onCreate(IForgeRegistryInternal<Feature<?>> owner, RegistryManager s\n         }\n     }\n \n+    private static class PointOfInterestTypeCallbacks implements IForgeRegistry.AddCallback<PointOfInterestType> , IForgeRegistry.ClearCallback<PointOfInterestType>, IForgeRegistry.CreateCallback<PointOfInterestType>\n+    {\n+        static final PointOfInterestTypeCallbacks INSTANCE = new PointOfInterestTypeCallbacks();\n+        \n+        @Override\n+        public void onAdd(IForgeRegistryInternal<PointOfInterestType> owner, RegistryManager stage, int id, PointOfInterestType obj, @Nullable PointOfInterestType oldObj)\n+        {\n+            Map<BlockState, PointOfInterestType> map = owner.getSlaveMap(BLOCKSTATE_TO_POINT_OF_INTEREST_TYPE, Map.class);\n+            if (oldObj != null)\n+            {\n+                oldObj.getBlockStates().forEach(map::remove);\n+            }\n+            obj.getBlockStates().forEach((state) -> \n+            {\n+                if (map.put(state, obj) != null)\n+                {\n+                    throw Util.pauseDevMode(new IllegalStateException(String.format(\"%s is defined in too many tags\", state)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5db4f68cacd86455c9520684cb0faad6c8ca6099"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk4Njc1MA==", "bodyText": "Formatting: Put the annotation on its own line like everywhere else.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7503#discussion_r548986750", "createdAt": "2020-12-26T14:01:05Z", "author": {"login": "diesieben07"}, "path": "src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -615,6 +620,38 @@ public void onCreate(IForgeRegistryInternal<Feature<?>> owner, RegistryManager s\n         }\n     }\n \n+    private static class PointOfInterestTypeCallbacks implements IForgeRegistry.AddCallback<PointOfInterestType> , IForgeRegistry.ClearCallback<PointOfInterestType>, IForgeRegistry.CreateCallback<PointOfInterestType>\n+    {\n+        static final PointOfInterestTypeCallbacks INSTANCE = new PointOfInterestTypeCallbacks();\n+        \n+        @Override\n+        public void onAdd(IForgeRegistryInternal<PointOfInterestType> owner, RegistryManager stage, int id, PointOfInterestType obj, @Nullable PointOfInterestType oldObj)\n+        {\n+            Map<BlockState, PointOfInterestType> map = owner.getSlaveMap(BLOCKSTATE_TO_POINT_OF_INTEREST_TYPE, Map.class);\n+            if (oldObj != null)\n+            {\n+                oldObj.getBlockStates().forEach(map::remove);\n+            }\n+            obj.getBlockStates().forEach((state) -> \n+            {\n+                if (map.put(state, obj) != null)\n+                {\n+                    throw Util.pauseDevMode(new IllegalStateException(String.format(\"%s is defined in too many tags\", state)));\n+                }\n+            });\n+        }\n+\n+        @Override public void onClear(IForgeRegistryInternal<PointOfInterestType> owner, RegistryManager stage)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8381130ecfdd1225a4da52558340d27fecd84f97"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk4Njg0Nw==", "bodyText": "Formatting", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7503#discussion_r548986847", "createdAt": "2020-12-26T14:01:11Z", "author": {"login": "diesieben07"}, "path": "src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -615,6 +620,38 @@ public void onCreate(IForgeRegistryInternal<Feature<?>> owner, RegistryManager s\n         }\n     }\n \n+    private static class PointOfInterestTypeCallbacks implements IForgeRegistry.AddCallback<PointOfInterestType> , IForgeRegistry.ClearCallback<PointOfInterestType>, IForgeRegistry.CreateCallback<PointOfInterestType>\n+    {\n+        static final PointOfInterestTypeCallbacks INSTANCE = new PointOfInterestTypeCallbacks();\n+        \n+        @Override\n+        public void onAdd(IForgeRegistryInternal<PointOfInterestType> owner, RegistryManager stage, int id, PointOfInterestType obj, @Nullable PointOfInterestType oldObj)\n+        {\n+            Map<BlockState, PointOfInterestType> map = owner.getSlaveMap(BLOCKSTATE_TO_POINT_OF_INTEREST_TYPE, Map.class);\n+            if (oldObj != null)\n+            {\n+                oldObj.getBlockStates().forEach(map::remove);\n+            }\n+            obj.getBlockStates().forEach((state) -> \n+            {\n+                if (map.put(state, obj) != null)\n+                {\n+                    throw Util.pauseDevMode(new IllegalStateException(String.format(\"%s is defined in too many tags\", state)));\n+                }\n+            });\n+        }\n+\n+        @Override public void onClear(IForgeRegistryInternal<PointOfInterestType> owner, RegistryManager stage)\n+        {\n+            owner.getSlaveMap(BLOCKSTATE_TO_POINT_OF_INTEREST_TYPE, Map.class).clear();\n+        }\n+\n+        @Override public void onCreate(IForgeRegistryInternal<PointOfInterestType> owner, RegistryManager stage)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8381130ecfdd1225a4da52558340d27fecd84f97"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk4NzI5Nw==", "bodyText": "Why?", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7503#discussion_r548987297", "createdAt": "2020-12-26T14:01:43Z", "author": {"login": "diesieben07"}, "path": "src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -77,6 +74,7 @@\n import net.minecraftforge.common.world.ForgeWorldType;\n import net.minecraftforge.event.RegistryEvent;\n import net.minecraftforge.event.RegistryEvent.MissingMappings;\n+import net.minecraftforge.eventbus.api.SubscribeEvent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8381130ecfdd1225a4da52558340d27fecd84f97"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk4ODM2NA==", "bodyText": "I liked the previous solution of if (false), better. Its a smaller patch and you can add a comment explaining why this is disabled.", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7503#discussion_r548988364", "createdAt": "2020-12-26T14:02:57Z", "author": {"login": "diesieben07"}, "path": "patches/minecraft/net/minecraft/village/PointOfInterestType.java.patch", "diffHunk": "@@ -9,3 +9,33 @@\n     private static final Supplier<Set<PointOfInterestType>> field_234168_y_ = Suppliers.memoize(() -> {\n        return Registry.field_218370_L.func_201756_e().map(VillagerProfession::func_221149_b).collect(Collectors.toSet());\n     });\n+@@ -36,7 +36,7 @@\n+    }).filter((p_234173_0_) -> {\n+       return p_234173_0_.func_177229_b(BedBlock.field_176472_a) == BedPart.HEAD;\n+    }).collect(ImmutableSet.toImmutableSet());\n+-   private static final Map<BlockState, PointOfInterestType> field_221073_u = Maps.newHashMap();\n++   private static final Map<BlockState, PointOfInterestType> field_221073_u = net.minecraftforge.registries.GameData.getBlockStatePointOfInterestTypeMap();\n+    public static final PointOfInterestType field_221054_b = func_226360_a_(\"unemployed\", ImmutableSet.of(), 1, field_221071_s, 1);\n+    public static final PointOfInterestType field_221055_c = func_226359_a_(\"armorer\", func_221042_a(Blocks.field_222424_lM), 1, 1);\n+    public static final PointOfInterestType field_221056_d = func_226359_a_(\"butcher\", func_221042_a(Blocks.field_222423_lL), 1, 1);\n+@@ -112,16 +112,14 @@\n+    }\n+ \n+    private static PointOfInterestType func_221052_a(PointOfInterestType p_221052_0_) {\n+-      p_221052_0_.field_221075_w.forEach((p_234169_1_) -> {\n+-         PointOfInterestType pointofinteresttype = field_221073_u.put(p_234169_1_, p_221052_0_);\n+-         if (pointofinteresttype != null) {\n+-            throw (IllegalStateException)Util.func_229757_c_(new IllegalStateException(String.format(\"%s is defined in too many tags\", p_234169_1_)));\n+-         }\n+-      });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8381130ecfdd1225a4da52558340d27fecd84f97"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd8b28882586736aa4fade65033d7673e2b27d1b", "author": {"user": {"login": "mrp-v2", "name": null}}, "url": "https://github.com/MinecraftForge/MinecraftForge/commit/dd8b28882586736aa4fade65033d7673e2b27d1b", "committedDate": "2020-12-26T14:19:02Z", "message": "address some comments from @diesieben07"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODc3OTY3", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7503#pullrequestreview-558877967", "createdAt": "2020-12-26T14:49:23Z", "commit": {"oid": "dd8b28882586736aa4fade65033d7673e2b27d1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2230, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}