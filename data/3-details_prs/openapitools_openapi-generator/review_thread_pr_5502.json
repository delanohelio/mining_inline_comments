{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNDU2NzI5", "number": 5502, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTo0OTo0NFrODkUXGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTo0OTo0NFrODkUXGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDA4OTIxOnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/kotlin-gson/src/main/kotlin/org/openapitools/client/infrastructure/ApiClient.kt", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTo0OTo0NFrOFwkmuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxODoxNDoyOVrOFxQ_PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3NTcwNQ==", "bodyText": "Hum, I'm curious on why this change was generated.\nWhat OS are you using?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5502#discussion_r386475705", "createdAt": "2020-03-02T15:49:44Z", "author": {"login": "4brunu"}, "path": "samples/client/petstore/kotlin-gson/src/main/kotlin/org/openapitools/client/infrastructure/ApiClient.kt", "diffHunk": "@@ -173,12 +173,6 @@ open class ApiClient(val baseUrl: String) {\n     }\n \n     protected inline fun <reified T: Any> parseDateToQueryString(value : T): String {\n-        /*\n-        .replace(\"\\\"\", \"\") converts the json object string to an actual string for the query parameter.\n-        The moshi or gson adapter allows a more generic solution instead of trying to use a native\n-        formatter. It also easily allows to provide a simple way to define a custom date format pattern\n-        inside a gson/moshi adapter.\n-        */\n-        return Serializer.gson.toJson(value, T::class.java).replace(\"\\\"\", \"\")\n+        return value.toString()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd7221a7dff3871ebbc8ec210cb5e7010f8b04f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3NjI1Mw==", "bodyText": "macOS 10.15.3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5502#discussion_r386476253", "createdAt": "2020-03-02T15:50:29Z", "author": {"login": "adamkaplan"}, "path": "samples/client/petstore/kotlin-gson/src/main/kotlin/org/openapitools/client/infrastructure/ApiClient.kt", "diffHunk": "@@ -173,12 +173,6 @@ open class ApiClient(val baseUrl: String) {\n     }\n \n     protected inline fun <reified T: Any> parseDateToQueryString(value : T): String {\n-        /*\n-        .replace(\"\\\"\", \"\") converts the json object string to an actual string for the query parameter.\n-        The moshi or gson adapter allows a more generic solution instead of trying to use a native\n-        formatter. It also easily allows to provide a simple way to define a custom date format pattern\n-        inside a gson/moshi adapter.\n-        */\n-        return Serializer.gson.toJson(value, T::class.java).replace(\"\\\"\", \"\")\n+        return value.toString()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3NTcwNQ=="}, "originalCommit": {"oid": "1cd7221a7dff3871ebbc8ec210cb5e7010f8b04f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzODc4NA==", "bodyText": "Can you please run ./mvnw package && sh bin/kotlin-client-all.sh and commit the changes?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5502#discussion_r387138784", "createdAt": "2020-03-03T16:26:17Z", "author": {"login": "4brunu"}, "path": "samples/client/petstore/kotlin-gson/src/main/kotlin/org/openapitools/client/infrastructure/ApiClient.kt", "diffHunk": "@@ -173,12 +173,6 @@ open class ApiClient(val baseUrl: String) {\n     }\n \n     protected inline fun <reified T: Any> parseDateToQueryString(value : T): String {\n-        /*\n-        .replace(\"\\\"\", \"\") converts the json object string to an actual string for the query parameter.\n-        The moshi or gson adapter allows a more generic solution instead of trying to use a native\n-        formatter. It also easily allows to provide a simple way to define a custom date format pattern\n-        inside a gson/moshi adapter.\n-        */\n-        return Serializer.gson.toJson(value, T::class.java).replace(\"\\\"\", \"\")\n+        return value.toString()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3NTcwNQ=="}, "originalCommit": {"oid": "1cd7221a7dff3871ebbc8ec210cb5e7010f8b04f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwMjg3Ng==", "bodyText": "Done, thank you!\nSuggest adding the ./mvn package step to the contributing steps", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5502#discussion_r387202876", "createdAt": "2020-03-03T18:14:29Z", "author": {"login": "adamkaplan"}, "path": "samples/client/petstore/kotlin-gson/src/main/kotlin/org/openapitools/client/infrastructure/ApiClient.kt", "diffHunk": "@@ -173,12 +173,6 @@ open class ApiClient(val baseUrl: String) {\n     }\n \n     protected inline fun <reified T: Any> parseDateToQueryString(value : T): String {\n-        /*\n-        .replace(\"\\\"\", \"\") converts the json object string to an actual string for the query parameter.\n-        The moshi or gson adapter allows a more generic solution instead of trying to use a native\n-        formatter. It also easily allows to provide a simple way to define a custom date format pattern\n-        inside a gson/moshi adapter.\n-        */\n-        return Serializer.gson.toJson(value, T::class.java).replace(\"\\\"\", \"\")\n+        return value.toString()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3NTcwNQ=="}, "originalCommit": {"oid": "1cd7221a7dff3871ebbc8ec210cb5e7010f8b04f"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3753, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}