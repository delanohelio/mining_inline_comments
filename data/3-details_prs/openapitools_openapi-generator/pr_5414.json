{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4ODc3MTg4", "number": 5414, "title": "[go-experimental] Fix nullable support", "bodyText": "This fixes [1] while also making the support for explicit nulls much more similar to what we have for Java clients with jackson-databind-nullable.\nNotes:\n\nSupport for container fields is not implemented due to lack of generics in Go. This might become possible with more work, but I didn't want to further complicate this PR.\nThe performance of generated clients might get hit a bit because of the newly added custom marshalling functions. This is a tradeoff taken to achieve correctness of the implementation (see the description of [1] for reasoning of why this is needed).\n\n[1] #5278\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\n@antihax (2017/11) @bvwells (2017/12) @grokify (2018/07) @kemokemo (2018/09) @bkabrda (2019/07)", "createdAt": "2020-02-24T09:00:21Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5414", "merged": true, "mergeCommit": {"oid": "4c5785dc37eee942d8f51f0d4f2396a2176f36cf"}, "closed": true, "closedAt": "2020-03-24T09:44:13Z", "author": {"login": "bkabrda"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGgC0SAH2gAyMzc4ODc3MTg4OmNkNTExODE3ZjIwNGMyZTE4MmQ1MDZiY2FhYjA0OWZlMWZlMGI4Njk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPPr6OgFqTM3Nzk1OTQyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cd511817f204c2e182d506bcaab049fe1fe0b869", "author": {"user": {"login": "bkabrda", "name": "Slavek Kabrda"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/cd511817f204c2e182d506bcaab049fe1fe0b869", "committedDate": "2020-02-21T13:49:40Z", "message": "Fix nullable support in go-experimental client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6660e347ac5716e9050d951ecf686be80228a36b", "author": {"user": {"login": "bkabrda", "name": "Slavek Kabrda"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6660e347ac5716e9050d951ecf686be80228a36b", "committedDate": "2020-02-24T08:55:21Z", "message": "Fix support for models with parents and container fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c6693ad8cd30df1ec044e075faec331925550f", "author": {"user": {"login": "bkabrda", "name": "Slavek Kabrda"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/89c6693ad8cd30df1ec044e075faec331925550f", "committedDate": "2020-02-24T11:02:47Z", "message": "Make sure that oneOf interfaces serialize properly even if they're required (non-pointers) on other models"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a214508a651a020d467561beb370c897abfb7f27", "author": {"user": {"login": "bkabrda", "name": "Slavek Kabrda"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a214508a651a020d467561beb370c897abfb7f27", "committedDate": "2020-03-17T14:07:36Z", "message": "Spaces => tabs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69b5cf00e407c03ccbb853ce64194ec793ae54ca", "author": {"user": {"login": "bkabrda", "name": "Slavek Kabrda"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/69b5cf00e407c03ccbb853ce64194ec793ae54ca", "committedDate": "2020-03-17T14:55:31Z", "message": "Regenerate samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "711acec112e20c6cec803dc1b61dd35afc745cc3", "author": {"user": {"login": "bkabrda", "name": "Slavek Kabrda"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/711acec112e20c6cec803dc1b61dd35afc745cc3", "committedDate": "2020-03-19T08:56:34Z", "message": "Make some methods of nullables pointer-receivers, add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NTc0ODA2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5414#pullrequestreview-377574806", "createdAt": "2020-03-19T10:03:26Z", "commit": {"oid": "711acec112e20c6cec803dc1b61dd35afc745cc3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDowMzoyNlrOF4ni8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDowMzoyNlrOF4ni8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxMjQ5Nw==", "bodyText": "Since we return if the value inside the nullable is set, why don't we return the value inside the nullable too directly ? Might simplify usage of nullables ?\nHaven't thought about it deeply, just throwing that out there. Let me know what you think", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5414#discussion_r394912497", "createdAt": "2020-03-19T10:03:26Z", "author": {"login": "zippolyte"}, "path": "modules/openapi-generator/src/main/resources/go-experimental/model.mustache", "diffHunk": "@@ -111,26 +123,31 @@ func (o *{{classname}}) Set{{name}}(v {{dataType}}) {\n {{^required}}\n // Get{{name}} returns the {{name}} field value if set, zero value otherwise.\n func (o *{{classname}}) Get{{name}}() {{dataType}} {\n-\tif o == nil || o.{{name}} == nil {\n+\tif o == nil {{^isNullable}}|| o.{{name}} == nil{{/isNullable}} {\n \t\tvar ret {{dataType}}\n \t\treturn ret\n \t}\n-\treturn *o.{{name}}\n+\treturn {{^isNullable}}*{{/isNullable}}o.{{name}}\n }\n \n // Get{{name}}Ok returns a tuple with the {{name}} field value if set, zero value otherwise\n // and a boolean to check if the value has been set.\n func (o *{{classname}}) Get{{name}}Ok() ({{dataType}}, bool) {\n-\tif o == nil || o.{{name}} == nil {\n+\tif o == nil {{^isNullable}}|| o.{{name}} == nil{{/isNullable}} {\n \t\tvar ret {{dataType}}\n \t\treturn ret, false\n \t}\n+{{#isNullable}}\n+\treturn o.{{name}}, {{#isContainer}}o.{{name}} == nil{{/isContainer}}{{^isContainer}}o.{{name}}.IsSet(){{/isContainer}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "711acec112e20c6cec803dc1b61dd35afc745cc3"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abed6770facb2ff073af07549b60aa719a060cdb", "author": {"user": {"login": "bkabrda", "name": "Slavek Kabrda"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/abed6770facb2ff073af07549b60aa719a060cdb", "committedDate": "2020-03-19T14:55:00Z", "message": "Improve the Get/Set logic to make usage more convenient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3ODQzNjQx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5414#pullrequestreview-377843641", "createdAt": "2020-03-19T15:40:29Z", "commit": {"oid": "abed6770facb2ff073af07549b60aa719a060cdb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3ODcxMzM0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5414#pullrequestreview-377871334", "createdAt": "2020-03-19T16:09:32Z", "commit": {"oid": "abed6770facb2ff073af07549b60aa719a060cdb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjowOTozMlrOF41rlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoyNjo1NFrOF42bKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NDA4Nw==", "bodyText": "Let's document the caveat in case of explicit null", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5414#discussion_r395144087", "createdAt": "2020-03-19T16:09:32Z", "author": {"login": "zippolyte"}, "path": "modules/openapi-generator/src/main/resources/go-experimental/model.mustache", "diffHunk": "@@ -57,167 +56,319 @@ type {{classname}} struct {\n // and makes sure properties required by API are set, but the set of arguments\n // will change when the set of required properties is changed\n func New{{classname}}({{#vars}}{{#required}}{{nameInCamelCase}} {{dataType}}, {{/required}}{{/vars}}) *{{classname}} {\n-    this := {{classname}}{}\n+\tthis := {{classname}}{}\n {{#vars}}\n {{#required}}\n-    this.{{name}} = {{nameInCamelCase}}\n+\tthis.{{name}} = {{nameInCamelCase}}\n {{/required}}\n {{^required}}\n {{#defaultValue}}\n {{^isContainer}}\n-    var {{nameInCamelCase}} {{{dataType}}} = {{#isNullable}}{{{dataType}}}{Value: {{/isNullable}}{{{.}}}{{#isNullable}} }{{/isNullable}}\n-    this.{{name}} = {{^required}}&{{/required}}{{nameInCamelCase}}\n+{{#isNullable}}\n+\tvar {{nameInCamelCase}} {{{datatypeWithEnum}}} = {{{.}}}\n+\tthis.{{name}} = *New{{{dataType}}}(&{{nameInCamelCase}})\n+{{/isNullable}}\n+{{^isNullable}}\n+\tvar {{nameInCamelCase}} {{{dataType}}} = {{{.}}}\n+\tthis.{{name}} = &{{nameInCamelCase}}\n+{{/isNullable}}\n {{/isContainer}}\n {{/defaultValue}}\n {{/required}}\n {{/vars}}\n-    return &this\n+\treturn &this\n }\n \n // New{{classname}}WithDefaults instantiates a new {{classname}} object\n // This constructor will only assign default values to properties that have it defined,\n // but it doesn't guarantee that properties required by API are set\n func New{{classname}}WithDefaults() *{{classname}} {\n-    this := {{classname}}{}\n+\tthis := {{classname}}{}\n {{#vars}}\n {{#defaultValue}}\n {{^isContainer}}\n-    var {{nameInCamelCase}} {{{dataType}}} = {{#isNullable}}{{{dataType}}}{Value: {{/isNullable}}{{{.}}}{{#isNullable}} }{{/isNullable}}\n-    this.{{name}} = {{^required}}&{{/required}}{{nameInCamelCase}}\n+{{#isNullable}}\n+{{!we use datatypeWithEnum here, since it will represent the non-nullable name of the datatype, e.g. int64 for NullableInt64}}\n+\tvar {{nameInCamelCase}} {{{datatypeWithEnum}}} = {{{.}}}\n+\tthis.{{name}} = *New{{{dataType}}}(&{{nameInCamelCase}})\n+{{/isNullable}}\n+{{^isNullable}}\n+\tvar {{nameInCamelCase}} {{{dataType}}} = {{{.}}}\n+\tthis.{{name}} = {{^required}}&{{/required}}{{nameInCamelCase}}\n+{{/isNullable}}\n {{/isContainer}}\n {{/defaultValue}}\n {{/vars}}\n-    return &this\n+\treturn &this\n }\n \n {{#vars}}\n {{#required}}\n // Get{{name}} returns the {{name}} field value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abed6770facb2ff073af07549b60aa719a060cdb"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE1NjI2NA==", "bodyText": "Has... is defined for every non required types, not just for nullables I believe.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5414#discussion_r395156264", "createdAt": "2020-03-19T16:26:54Z", "author": {"login": "zippolyte"}, "path": "modules/openapi-generator/src/main/resources/go-experimental/model_doc.mustache", "diffHunk": "@@ -36,37 +36,40 @@ but it doesn't guarantee that properties required by API are set\n {{#vars}}\n ### Get{{name}}\n \n-`func (o *{{classname}}) Get{{name}}() {{dataType}}`\n+`func (o *{{classname}}) Get{{name}}() {{vendorExtensions.x-basetype}}`\n \n Get{{name}} returns the {{name}} field if non-nil, zero value otherwise.\n \n ### Get{{name}}Ok\n \n-`func (o *{{classname}}) Get{{name}}Ok() ({{dataType}}, bool)`\n+`func (o *{{classname}}) Get{{name}}Ok() (*{{vendorExtensions.x-basetype}}, bool)`\n \n Get{{name}}Ok returns a tuple with the {{name}} field if it's non-nil, zero value otherwise\n and a boolean to check if the value has been set.\n \n+### Set{{name}}\n+\n+`func (o *{{classname}}) Set{{name}}(v {{vendorExtensions.x-basetype}})`\n+\n+Set{{name}} sets {{name}} field to given value.\n+\n+{{#isNullable}}\n ### Has{{name}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abed6770facb2ff073af07549b60aa719a060cdb"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afc84265dd57192f0868d9b895e54ee24993fecb", "author": {"user": {"login": "bkabrda", "name": "Slavek Kabrda"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/afc84265dd57192f0868d9b895e54ee24993fecb", "committedDate": "2020-03-19T16:40:15Z", "message": "Address review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3OTU5NDIy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5414#pullrequestreview-377959422", "createdAt": "2020-03-19T17:51:29Z", "commit": {"oid": "afc84265dd57192f0868d9b895e54ee24993fecb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2664, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}