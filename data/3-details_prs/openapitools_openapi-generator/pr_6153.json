{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNjg0OTAx", "number": 6153, "title": "[core] Add type and format properties to model of inline response", "bodyText": "I tried to copy original Schema instance, but failed I guess. Need a small help from a core team.\nCloses #6150\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-05-03T23:32:41Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153", "merged": true, "mergeCommit": {"oid": "6a08ec59c0349ae13f51391920227a2bb3f5a68b"}, "closed": true, "closedAt": "2020-08-03T22:37:38Z", "author": {"login": "ybelenko"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd0NiQAFqTQwNDY3MjU0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc67CkvAH2gAyNDEyNjg0OTAxOjJiZDM3OWJkMmYzODhiNzQ0YTkwZTI4ZjVkZTFhYTNkMmE1OGJlNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjcyNTQw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#pullrequestreview-404672540", "createdAt": "2020-05-04T00:19:43Z", "commit": {"oid": "8e033b3a4e8e87685d8360ba6f471136b75470ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMDoxOTo0NFrOGPwqdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMDoxOTo0NFrOGPwqdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE3OTEyNQ==", "bodyText": "I wonder how to clone schema instance here. I need to change result of Json.pretty(schema); but keep original instance not modified.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r419179125", "createdAt": "2020-05-04T00:19:44Z", "author": {"login": "ybelenko"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2129,6 +2129,25 @@ public CodegenModel fromModel(String name, Schema schema) {\n             return null;\n         }\n \n+        String modelJson = Json.pretty(schema);\n+        if (schema.getType() == null ) {\n+            Schema copy = ModelUtils.unaliasSchema(this.openAPI, schema, importMapping);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e033b3a4e8e87685d8360ba6f471136b75470ea"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e033b3a4e8e87685d8360ba6f471136b75470ea", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8e033b3a4e8e87685d8360ba6f471136b75470ea", "committedDate": "2020-05-03T23:26:02Z", "message": "Refresh samples"}, "afterCommit": {"oid": "5114dcc0b659bf45f23f94095364c92bef0ce342", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/5114dcc0b659bf45f23f94095364c92bef0ce342", "committedDate": "2020-05-09T07:35:01Z", "message": "Refresh samples"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5114dcc0b659bf45f23f94095364c92bef0ce342", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/5114dcc0b659bf45f23f94095364c92bef0ce342", "committedDate": "2020-05-09T07:35:01Z", "message": "Refresh samples"}, "afterCommit": {"oid": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "committedDate": "2020-05-09T12:41:40Z", "message": "Refresh samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODY5MTI3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#pullrequestreview-425869127", "createdAt": "2020-06-08T00:50:39Z", "commit": {"oid": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMDo1MDo0MFrOGgM4pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMDo1MTozMVrOGgM4_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxODcyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String modelJson = Json.pretty(schema);\n          \n          \n            \n                    String modelJson;", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r436418725", "createdAt": "2020-06-08T00:50:40Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2146,6 +2146,25 @@ public CodegenModel fromModel(String name, Schema schema) {\n             return null;\n         }\n \n+        String modelJson = Json.pretty(schema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxODgxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    } else {\n          \n          \n            \n                        modelJson = Json.pretty(schema)\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nThis coupled with the above solution will prevent prettifying this twice.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r436418815", "createdAt": "2020-06-08T00:51:31Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2146,6 +2146,25 @@ public CodegenModel fromModel(String name, Schema schema) {\n             return null;\n         }\n \n+        String modelJson = Json.pretty(schema);\n+        if (schema.getType() == null ) {\n+            Schema copy = ModelUtils.unaliasSchema(this.openAPI, schema, importMapping);\n+            if (ModelUtils.isIntegerSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.INTEGER_TYPE);\n+            } else if (ModelUtils.isNumberSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.NUMBER_TYPE);\n+            } else if (ModelUtils.isStringSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.STRING_TYPE);\n+            } else if (ModelUtils.isBooleanSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.BOOLEAN_TYPE);\n+            } else if (ModelUtils.isArraySchema(schema)) {\n+                copy.setType(\"array\");\n+            } else if (ModelUtils.isObjectSchema(schema) || ModelUtils.isComposedSchema(schema) || ModelUtils.isMapSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.OBJECT_TYPE);\n+            }\n+            modelJson = Json.pretty(copy);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "committedDate": "2020-05-09T12:41:40Z", "message": "Refresh samples"}, "afterCommit": {"oid": "49de85e778d5dc47b46cf493becdae27f432251b", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/49de85e778d5dc47b46cf493becdae27f432251b", "committedDate": "2020-06-09T12:04:54Z", "message": "Refresh samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MTY0OTM1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#pullrequestreview-427164935", "createdAt": "2020-06-09T13:44:34Z", "commit": {"oid": "49de85e778d5dc47b46cf493becdae27f432251b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzo0NDozNVrOGhKkrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzo0NDozNVrOGhKkrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyOTQyMw==", "bodyText": "Here I agree type: object was missing. It it there in the original document (modules/openapi-generator/src/test/resources/2_0/petstore-with-fake-endpoints-models-for-testing.yaml), it makes sense to add it.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r437429423", "createdAt": "2020-06-09T13:44:35Z", "author": {"login": "sebastien-rosset"}, "path": "samples/client/petstore/go-experimental/go-petstore/api/openapi.yaml", "diffHunk": "@@ -2090,10 +2093,12 @@ components:\n       properties:\n         breed:\n           type: string\n+      type: object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49de85e778d5dc47b46cf493becdae27f432251b"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MTY3OTMy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#pullrequestreview-427167932", "createdAt": "2020-06-09T13:47:41Z", "commit": {"oid": "49de85e778d5dc47b46cf493becdae27f432251b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzo0Nzo0MVrOGhKxdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzo0Nzo0MVrOGhKxdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzMjY5Mg==", "bodyText": "In JSON schema, allOf means a compliant validator must validate the payload against all of the nested schemas under allOf. Since Animal is already specified as a type: object, it's redundant and verbose to add type: object here.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r437432692", "createdAt": "2020-06-09T13:47:41Z", "author": {"login": "sebastien-rosset"}, "path": "samples/client/petstore/go-experimental/go-petstore/api/openapi.yaml", "diffHunk": "@@ -1422,14 +1422,17 @@ components:\n       allOf:\n       - $ref: '#/components/schemas/Animal'\n       - $ref: '#/components/schemas/Dog_allOf'\n+      type: object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49de85e778d5dc47b46cf493becdae27f432251b"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "49de85e778d5dc47b46cf493becdae27f432251b", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/49de85e778d5dc47b46cf493becdae27f432251b", "committedDate": "2020-06-09T12:04:54Z", "message": "Refresh samples"}, "afterCommit": {"oid": "267e09078e589ea3aa26fe6f74c41a8b4a3b0c00", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/267e09078e589ea3aa26fe6f74c41a8b4a3b0c00", "committedDate": "2020-06-13T19:46:05Z", "message": "Refresh samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTYyMzYz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#pullrequestreview-430162363", "createdAt": "2020-06-13T19:56:49Z", "commit": {"oid": "267e09078e589ea3aa26fe6f74c41a8b4a3b0c00"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxOTo1Njo1MFrOGjZH-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxOTo1Njo1MFrOGjZH-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NDk4NQ==", "bodyText": "I've figured out Java debugger finally and found that InlineModelResolver strips data type here. That's my fix.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r439764985", "createdAt": "2020-06-13T19:56:50Z", "author": {"login": "ybelenko"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -621,6 +621,9 @@ private Schema modelFromProperty(OpenAPI openAPI, Schema object, String path) {\n         XML xml = object.getXml();\n         Map<String, Schema> properties = object.getProperties();\n         Schema model = new Schema();\n+        if (object.getType() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "267e09078e589ea3aa26fe6f74c41a8b4a3b0c00"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "267e09078e589ea3aa26fe6f74c41a8b4a3b0c00", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/267e09078e589ea3aa26fe6f74c41a8b4a3b0c00", "committedDate": "2020-06-13T19:46:05Z", "message": "Refresh samples"}, "afterCommit": {"oid": "1550753d8fc66126bfaf2f5e40fbe487b94e8eb6", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/1550753d8fc66126bfaf2f5e40fbe487b94e8eb6", "committedDate": "2020-07-11T11:48:07Z", "message": "Refresh samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e2259b1eed5354bf6766999c7b97384d4034cd3", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3e2259b1eed5354bf6766999c7b97384d4034cd3", "committedDate": "2020-07-17T10:31:00Z", "message": "Save type of inline schema in modelJson prop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b26eca23ac51680524d4aae29ac9e616ad03f7c", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/1b26eca23ac51680524d4aae29ac9e616ad03f7c", "committedDate": "2020-07-17T10:31:01Z", "message": "Add fix suggested by Jim Schubert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1eb83a87154ac88d682ba94c599a1babde80ec6", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e1eb83a87154ac88d682ba94c599a1babde80ec6", "committedDate": "2020-07-17T10:31:01Z", "message": "Revert \"Add fix suggested by Jim Schubert\"\n\nThis reverts commit 3a1951b62088836aa116444fffb90c83719b4927."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2ff8c43d02d94277777bd9d9c99d4ef98c4513f", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d2ff8c43d02d94277777bd9d9c99d4ef98c4513f", "committedDate": "2020-07-17T10:31:01Z", "message": "Revert \"Save type of inline schema in modelJson prop\"\n\nThis reverts commit f88dcb13594b3e21b734b8b1569ca29bcbf9cb13."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa77a31b5b9ea025c80884f2b3b1eb3f4e69a18f", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/fa77a31b5b9ea025c80884f2b3b1eb3f4e69a18f", "committedDate": "2020-07-17T10:31:01Z", "message": "Keep schema type in InlineModelResolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4105317c9a61cfb7c6e6403acd3c46903e1e14c6", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/4105317c9a61cfb7c6e6403acd3c46903e1e14c6", "committedDate": "2020-07-17T10:31:01Z", "message": "Add test for InlineModelResolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "324bd3283017ffb5109af264e858bce9527ec6a1", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/324bd3283017ffb5109af264e858bce9527ec6a1", "committedDate": "2020-07-17T10:31:40Z", "message": "Add data formats to test spec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01a491e9915e5eea4984ac62e6a404a0eeeda9b9", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/01a491e9915e5eea4984ac62e6a404a0eeeda9b9", "committedDate": "2020-07-17T10:31:41Z", "message": "Save data format in inline models"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "committedDate": "2020-07-17T10:43:28Z", "message": "Refresh samples"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1550753d8fc66126bfaf2f5e40fbe487b94e8eb6", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/1550753d8fc66126bfaf2f5e40fbe487b94e8eb6", "committedDate": "2020-07-11T11:48:07Z", "message": "Refresh samples"}, "afterCommit": {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "committedDate": "2020-07-17T10:43:28Z", "message": "Refresh samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTc5ODQ2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#pullrequestreview-459579846", "createdAt": "2020-08-01T13:57:20Z", "commit": {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTg0MTY0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#pullrequestreview-459584164", "createdAt": "2020-08-01T15:12:03Z", "commit": {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxNToxMjowM1rOG6eiQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxNToxMjowM1rOG6eiQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3MDg4Mg==", "bodyText": "Can you explain the test you are exercising by adding the format keyword at the object level? In 3.0.3, the format keyword can be specified for primitive types, not for object types. See http://spec.openapis.org/oas/v3.0.3#dataTypeFormat:\n\nPrimitives have an optional modifier property: format.\n\nOr maybe you are trying to say the format keyword should not have been specified in the object type? If so, what is the reason the format keyword should not be stripped? I need to re-read the spec more carefully, but shouldn't we fail the OAI documentation validation if the format keyword is specified for an object type?\n# `format` keyword is applicable to primitive types, not object types\n\nOr did you mean to add the format keyword for the foo property?\nproperties:\n  foo:\n    format: date-time\n    type: string", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r463970882", "createdAt": "2020-08-01T15:12:03Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/test/resources/3_0/6150_model_json_inline.yaml", "diffHunk": "@@ -0,0 +1,77 @@\n+openapi: \"3.0.0\"\n+info:\n+  version: 1.0.0\n+  title: Test inline response model\n+  description: Test inline response model.\n+  license:\n+    name: MIT\n+paths:\n+  /foobar:\n+    get:\n+      operationId: testOperation\n+      description: No type property in modelJson of InlineResponse200\n+      responses:\n+        200:\n+          description: InlineResponse200 itself.\n+          content:\n+            application/json:\n+              schema:\n+                type: object\n+                # OAS3 spec allows to use any value in format field\n+                format: unknown\n+                properties:\n+                  foo:\n+                    type: string\n+                  bar:\n+                    type: string\n+    post:\n+      operationId: testOperationPost\n+      description: No type property in modelJson of InlineResponse200\n+      responses:\n+        400:\n+          description: InlineResponse200 itself.\n+          content:\n+            application/json:\n+              schema:\n+                title: FooBarObject\n+                type: object\n+                # wrong format just to make sure it won't be stripped\n+                format: date-time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTg1MjAz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#pullrequestreview-459585203", "createdAt": "2020-08-01T15:26:03Z", "commit": {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxNToyNjowM1rOG6en4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxNToyNjowM1rOG6en4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3MjMyMA==", "bodyText": "Same question/comment as what I wrote for line 39 below. What is the purpose of specifying the format keyword for an object type in your test?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r463972320", "createdAt": "2020-08-01T15:26:03Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/test/resources/3_0/6150_model_json_inline.yaml", "diffHunk": "@@ -0,0 +1,77 @@\n+openapi: \"3.0.0\"\n+info:\n+  version: 1.0.0\n+  title: Test inline response model\n+  description: Test inline response model.\n+  license:\n+    name: MIT\n+paths:\n+  /foobar:\n+    get:\n+      operationId: testOperation\n+      description: No type property in modelJson of InlineResponse200\n+      responses:\n+        200:\n+          description: InlineResponse200 itself.\n+          content:\n+            application/json:\n+              schema:\n+                type: object\n+                # OAS3 spec allows to use any value in format field\n+                format: unknown", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTg5Njc3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#pullrequestreview-459589677", "createdAt": "2020-08-01T16:42:57Z", "commit": {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxNjo0Mjo1N1rOG6fBuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxNjo0Mjo1N1rOG6fBuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3ODkzNw==", "bodyText": "IMO, there may be a contradiction in the OAS spec (both 3.0.3 and 3.1) versus the JSON schema specification.\nI have opened OAI/OpenAPI-Specification#2301. It would be interesting to have @wing328  and @jimschubert  opinions.\nIn any case, I suggest adding the code comments below because later it can be hard for maintainers to understand the context and why this was done.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        model.setFormat(object.getFormat());\n          \n          \n            \n                        // Even though the `format` keyword typically applies to primitive types only,\n          \n          \n            \n                        // the JSON schema specification states `format` can be used for any model type instance\n          \n          \n            \n                        // including object types.\n          \n          \n            \n                        model.setFormat(object.getFormat());", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r463978937", "createdAt": "2020-08-01T16:42:57Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -621,6 +621,12 @@ private Schema modelFromProperty(OpenAPI openAPI, Schema object, String path) {\n         XML xml = object.getXml();\n         Map<String, Schema> properties = object.getProperties();\n         Schema model = new Schema();\n+        if (object.getType() != null) {\n+            model.setType(object.getType());\n+        }\n+        if (object.getFormat() != null) {\n+            model.setFormat(object.getFormat());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bd379bd2f388b744a90e28f5de1aa3d2a58be66", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/2bd379bd2f388b744a90e28f5de1aa3d2a58be66", "committedDate": "2020-08-02T10:40:54Z", "message": "Add comments suggested by @sebastien-rosset"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2334, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}