{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDkyNzUx", "number": 6229, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwMjowMToxNVrOD7Da-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwMjowMToxNVrOD7Da-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjQ4NjMzOnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/python-experimental/test/test_child.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwMjowMToxNVrOGTKH_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwMjoyMTo0OFrOGTKYRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc0MjAxNA==", "bodyText": "nit:\nWe should be checking against our specific petstore_api.ApiAttributeErrors here\nnot the general python AttributeError", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6229#discussion_r422742014", "createdAt": "2020-05-11T02:01:15Z", "author": {"login": "spacether"}, "path": "samples/client/petstore/python-experimental/test/test_child.py", "diffHunk": "@@ -64,19 +64,24 @@ def testChild(self):\n \n         # setting a value that doesn't exist raises an exception\n         # with a key\n-        with self.assertRaises(petstore_api.ApiKeyError):\n+        with self.assertRaises(AttributeError):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7446edc1544ddbe0f54e10775760f960481db5f5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc0MzcyNQ==", "bodyText": "I thought about with but actually I think it's better to check for AttributeError because that's exactly what hasattr/getattr/setattr expect. A slight improvement would be to assert for bot exceptions.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6229#discussion_r422743725", "createdAt": "2020-05-11T02:09:42Z", "author": {"login": "sebastien-rosset"}, "path": "samples/client/petstore/python-experimental/test/test_child.py", "diffHunk": "@@ -64,19 +64,24 @@ def testChild(self):\n \n         # setting a value that doesn't exist raises an exception\n         # with a key\n-        with self.assertRaises(petstore_api.ApiKeyError):\n+        with self.assertRaises(AttributeError):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc0MjAxNA=="}, "originalCommit": {"oid": "7446edc1544ddbe0f54e10775760f960481db5f5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc0NjE4Mw==", "bodyText": "If we asserted only the AttributeError then we are not proving that we are raising an api.ApiAttributeError. It would be more specific to check both or api.ApiAttributeError because that is the specific exception that we expect our package to raise.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6229#discussion_r422746183", "createdAt": "2020-05-11T02:21:48Z", "author": {"login": "spacether"}, "path": "samples/client/petstore/python-experimental/test/test_child.py", "diffHunk": "@@ -64,19 +64,24 @@ def testChild(self):\n \n         # setting a value that doesn't exist raises an exception\n         # with a key\n-        with self.assertRaises(petstore_api.ApiKeyError):\n+        with self.assertRaises(AttributeError):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc0MjAxNA=="}, "originalCommit": {"oid": "7446edc1544ddbe0f54e10775760f960481db5f5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3518, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}