{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MjY5NDAy", "number": 7410, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo0NToyMlrOEkYADQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMTo0Mzo1OFrOEkyJrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTc3NDIxOnYy", "diffSide": "LEFT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/TypeScriptNodeClientCodegen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo0NToyMlrOHTSRVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo0NToyMlrOHTSRVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4NDM0MQ==", "bodyText": "looks like now the getModelnameFromModelFilename method is no longer used and can be removed?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410#discussion_r489984341", "createdAt": "2020-09-17T05:45:22Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/TypeScriptNodeClientCodegen.java", "diffHunk": "@@ -222,8 +223,7 @@ public String toModelImport(String name) {\n         // Add additional filename information for model imports in the apis\n         List<Map<String, Object>> imports = (List<Map<String, Object>>) operations.get(\"imports\");\n         for (Map<String, Object> im : imports) {\n-            im.put(\"filename\", im.get(\"import\"));\n-            im.put(\"classname\", getModelnameFromModelFilename(im.get(\"filename\").toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76fde612943bc791e355c7012cc1047e6a96036"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTc4ODY1OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/typescript/typescriptnode/TypeScriptNodeClientCodegenTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo1MjoxMFrOHTSZrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo1MjoxMFrOHTSZrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4NjQ3Nw==", "bodyText": "Perhaps just nitpicking - but maybe there could be a better name for this method? Right now it's kind of unclear what its intention is (unless I read the actual method body).", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410#discussion_r489986477", "createdAt": "2020-09-17T05:52:10Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/typescript/typescriptnode/TypeScriptNodeClientCodegenTest.java", "diffHunk": "@@ -134,4 +136,42 @@ public void mappedApiImportTest() {\n         Assert.assertEquals(codegen.toApiImport(\"Category\"), mappedName);\n     }\n \n+    @Test(description = \"correctly produces imports without import mapping\")\n+    public void postProcessOperationsWithModelsTestWithoutImportMapping() {\n+        final String importName = \"../model/pet\";\n+        Map<String, Object> operations = postProcessOperationsHelper(importName);\n+\n+        codegen.postProcessOperationsWithModels(operations, Collections.emptyList());\n+        List<Map<String, Object>> extractedImports = (List<Map<String, Object>>) operations.get(\"imports\");\n+        Assert.assertEquals(extractedImports.get(0).get(\"filename\"), importName);\n+    }\n+\n+    @Test(description = \"correctly produces imports with import mapping\")\n+    public void postProcessOperationsWithModelsTestWithImportMapping() {\n+        final String importName = \"@namespace/dir/category\";\n+        Map<String, Object> operations = postProcessOperationsHelper(importName);\n+\n+        codegen.postProcessOperationsWithModels(operations, Collections.emptyList());\n+        List<Map<String, Object>> extractedImports = (List<Map<String, Object>>) operations.get(\"imports\");\n+\n+        Assert.assertEquals(extractedImports.get(0).get(\"filename\"), importName);\n+    }\n+\n+    private Map<String, Object> postProcessOperationsHelper(String importName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76fde612943bc791e355c7012cc1047e6a96036"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDA1ODcxOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/TypeScriptNodeClientCodegen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMTo0Mzo1OFrOHT7EzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMTo0Mzo1OFrOHT7EzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY1Mjg3Ng==", "bodyText": "@mahirk not a blocker on this pr, but wanted to comment since you said you were planning to look at ts implementation in other generators...\nsince modelPackage is passed by the user, this could result in models// when passed with trailing slash. It might be best to use StringUtils, something like:\nreturn DEFAULT_MODEL_IMPORT_DIRECTORY_PREFIX + \n    StringUtils.appendIfMissing(modelPackage(), \"/\") +\n    camelize(toModelName(name), true);", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410#discussion_r490652876", "createdAt": "2020-09-18T01:43:58Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/TypeScriptNodeClientCodegen.java", "diffHunk": "@@ -162,7 +163,7 @@ public String toModelImport(String name) {\n             return importMapping.get(name);\n         }\n \n-        return modelPackage() + \"/\" + camelize(toModelName(name), true);\n+        return DEFAULT_MODEL_IMPORT_DIRECTORY_PREFIX + modelPackage() + \"/\" + camelize(toModelName(name), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f112e6742761a541d8305273b47ea8483b470143"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4159, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}