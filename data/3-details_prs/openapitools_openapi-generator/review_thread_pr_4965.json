{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNDE0NDUw", "number": 4965, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMjo0MjozNFrODXaY2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMjo0MjozNFrODXaY2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODc2MTg1OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/php-slim4-server/openapi_data_mocker.mustache", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMjo0MjozNFrOFcsh0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwODowODowN1rOFfJ_nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzNDAwMQ==", "bodyText": "What about throwing a warning/error saying it's not supported so the users get notified?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4965#discussion_r365634001", "createdAt": "2020-01-13T02:42:34Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/resources/php-slim4-server/openapi_data_mocker.mustache", "diffHunk": "@@ -127,6 +127,22 @@ final class OpenApiDataMocker implements IMocker\n         $exclusiveMinimum = false,\n         $exclusiveMaximum = false\n     ) {\n+        $dataFormat = is_string($dataFormat) ? strtolower($dataFormat) : $dataFormat;\n+        switch ($dataFormat) {\n+            case IMocker::DATA_FORMAT_INT32:\n+                // -2147483647..2147483647\n+                $minimum = is_numeric($minimum) ? max($minimum, -2147483647) : -2147483647;\n+                $maximum = is_numeric($maximum) ? min($maximum, 2147483647) : 2147483647;\n+                break;\n+            case IMocker::DATA_FORMAT_INT64:\n+                // -9223372036854775807..9223372036854775807\n+                $minimum = is_numeric($minimum) ? max($minimum, -9223372036854775807) : -9223372036854775807;\n+                $maximum = is_numeric($maximum) ? min($maximum, 9223372036854775807) : 9223372036854775807;\n+                break;\n+            default:\n+                // do nothing, unsupported format", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31920fa5f7acf5a7aad5ad8a425f87f945ebdd4e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0OTM3OQ==", "bodyText": "Accordingly to OAS spec any value can be used in format field. So it's not an exception to me. If this was a part of standalone library\\package I would add throwing an exception, but it's autogenerated build, so nobody will catch exceptions in 99% cases.\nHowever, PHP is able to raise warning or notice which doesn't stop code execution, but breaks JSON output.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4965#discussion_r365649379", "createdAt": "2020-01-13T05:14:50Z", "author": {"login": "ybelenko"}, "path": "modules/openapi-generator/src/main/resources/php-slim4-server/openapi_data_mocker.mustache", "diffHunk": "@@ -127,6 +127,22 @@ final class OpenApiDataMocker implements IMocker\n         $exclusiveMinimum = false,\n         $exclusiveMaximum = false\n     ) {\n+        $dataFormat = is_string($dataFormat) ? strtolower($dataFormat) : $dataFormat;\n+        switch ($dataFormat) {\n+            case IMocker::DATA_FORMAT_INT32:\n+                // -2147483647..2147483647\n+                $minimum = is_numeric($minimum) ? max($minimum, -2147483647) : -2147483647;\n+                $maximum = is_numeric($maximum) ? min($maximum, 2147483647) : 2147483647;\n+                break;\n+            case IMocker::DATA_FORMAT_INT64:\n+                // -9223372036854775807..9223372036854775807\n+                $minimum = is_numeric($minimum) ? max($minimum, -9223372036854775807) : -9223372036854775807;\n+                $maximum = is_numeric($maximum) ? min($maximum, 9223372036854775807) : 9223372036854775807;\n+                break;\n+            default:\n+                // do nothing, unsupported format", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzNDAwMQ=="}, "originalCommit": {"oid": "31920fa5f7acf5a7aad5ad8a425f87f945ebdd4e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxMzkxNg==", "bodyText": "Ok. That's fine with me.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4965#discussion_r368213916", "createdAt": "2020-01-18T08:08:07Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/resources/php-slim4-server/openapi_data_mocker.mustache", "diffHunk": "@@ -127,6 +127,22 @@ final class OpenApiDataMocker implements IMocker\n         $exclusiveMinimum = false,\n         $exclusiveMaximum = false\n     ) {\n+        $dataFormat = is_string($dataFormat) ? strtolower($dataFormat) : $dataFormat;\n+        switch ($dataFormat) {\n+            case IMocker::DATA_FORMAT_INT32:\n+                // -2147483647..2147483647\n+                $minimum = is_numeric($minimum) ? max($minimum, -2147483647) : -2147483647;\n+                $maximum = is_numeric($maximum) ? min($maximum, 2147483647) : 2147483647;\n+                break;\n+            case IMocker::DATA_FORMAT_INT64:\n+                // -9223372036854775807..9223372036854775807\n+                $minimum = is_numeric($minimum) ? max($minimum, -9223372036854775807) : -9223372036854775807;\n+                $maximum = is_numeric($maximum) ? min($maximum, 9223372036854775807) : 9223372036854775807;\n+                break;\n+            default:\n+                // do nothing, unsupported format", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzNDAwMQ=="}, "originalCommit": {"oid": "31920fa5f7acf5a7aad5ad8a425f87f945ebdd4e"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4012, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}