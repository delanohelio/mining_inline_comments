{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MTg3NTk3", "number": 7725, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTozNDoxMVrOEuDeYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTozNDo1NVrOEuDfrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzI2ODgyOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/typescript-angular/README.mustache", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTozNDoxMVrOHiN3Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODo0MTo0NlrOHiVR8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MDc5NQ==", "bodyText": "please keep the alias example with as, see #7722 (comment)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7725#discussion_r505640795", "createdAt": "2020-10-15T15:34:11Z", "author": {"login": "macjohnny"}, "path": "modules/openapi-generator/src/main/resources/typescript-angular/README.mustache", "diffHunk": "@@ -124,21 +124,23 @@ export class AppComponent {\n }\n ```\n \n-Note: The ApiModule is restricted to being instantiated once app wide.\n+Note: The {{apiModuleClassName}} is restricted to being instantiated once app wide.\n This is to ensure that all services are treated as singletons.\n \n #### Using multiple OpenAPI files / APIs / ApiModules\n In order to use multiple `ApiModules` generated from different OpenAPI files,\n-you can create an alias name when importing the modules\n-in order to avoid naming conflicts:\n+you can avoid naming conflicts by configuring `apiModulePrefix` when generating other modules.\n+\n+Eg: Configuring another module using `apiModulePrefix` of `Other`:\n+\n ```\n-import { ApiModule } from 'my-api-path';\n-import { ApiModule as OtherApiModule } from 'my-other-api-path';\n+import { {{apiModuleClassName}} } from 'my-api-path';\n+import { OtherApiModule } from 'my-other-api-path';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06d17ef2f434815519c8c3dbf3e2115e29af825a"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2MjI4OA==", "bodyText": "Done", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7725#discussion_r505762288", "createdAt": "2020-10-15T18:41:46Z", "author": {"login": "sorohan"}, "path": "modules/openapi-generator/src/main/resources/typescript-angular/README.mustache", "diffHunk": "@@ -124,21 +124,23 @@ export class AppComponent {\n }\n ```\n \n-Note: The ApiModule is restricted to being instantiated once app wide.\n+Note: The {{apiModuleClassName}} is restricted to being instantiated once app wide.\n This is to ensure that all services are treated as singletons.\n \n #### Using multiple OpenAPI files / APIs / ApiModules\n In order to use multiple `ApiModules` generated from different OpenAPI files,\n-you can create an alias name when importing the modules\n-in order to avoid naming conflicts:\n+you can avoid naming conflicts by configuring `apiModulePrefix` when generating other modules.\n+\n+Eg: Configuring another module using `apiModulePrefix` of `Other`:\n+\n ```\n-import { ApiModule } from 'my-api-path';\n-import { ApiModule as OtherApiModule } from 'my-other-api-path';\n+import { {{apiModuleClassName}} } from 'my-api-path';\n+import { OtherApiModule } from 'my-other-api-path';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MDc5NQ=="}, "originalCommit": {"oid": "06d17ef2f434815519c8c3dbf3e2115e29af825a"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzI3MjE0OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/typescript-angular/README.mustache", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTozNDo1NVrOHiN5Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzo1NzowMFrOHiTh_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTMxNQ==", "bodyText": "please reword to include the case when the prefix cannot be set:\n#7722 (comment)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7725#discussion_r505641315", "createdAt": "2020-10-15T15:34:55Z", "author": {"login": "macjohnny"}, "path": "modules/openapi-generator/src/main/resources/typescript-angular/README.mustache", "diffHunk": "@@ -124,21 +124,23 @@ export class AppComponent {\n }\n ```\n \n-Note: The ApiModule is restricted to being instantiated once app wide.\n+Note: The {{apiModuleClassName}} is restricted to being instantiated once app wide.\n This is to ensure that all services are treated as singletons.\n \n #### Using multiple OpenAPI files / APIs / ApiModules\n In order to use multiple `ApiModules` generated from different OpenAPI files,\n-you can create an alias name when importing the modules\n-in order to avoid naming conflicts:\n+you can avoid naming conflicts by configuring `apiModulePrefix` when generating other modules.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06d17ef2f434815519c8c3dbf3e2115e29af825a"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczMzYyOA==", "bodyText": "I've just reverted the wording (but changed it to use {{apiModuleClassName}}). I think it's best like this. Now only the sample for with-prefixed-module-name has changed.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7725#discussion_r505733628", "createdAt": "2020-10-15T17:57:00Z", "author": {"login": "sorohan"}, "path": "modules/openapi-generator/src/main/resources/typescript-angular/README.mustache", "diffHunk": "@@ -124,21 +124,23 @@ export class AppComponent {\n }\n ```\n \n-Note: The ApiModule is restricted to being instantiated once app wide.\n+Note: The {{apiModuleClassName}} is restricted to being instantiated once app wide.\n This is to ensure that all services are treated as singletons.\n \n #### Using multiple OpenAPI files / APIs / ApiModules\n In order to use multiple `ApiModules` generated from different OpenAPI files,\n-you can create an alias name when importing the modules\n-in order to avoid naming conflicts:\n+you can avoid naming conflicts by configuring `apiModulePrefix` when generating other modules.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTMxNQ=="}, "originalCommit": {"oid": "06d17ef2f434815519c8c3dbf3e2115e29af825a"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4105, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}