{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MDM5MjI3", "number": 5944, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzowOTo0MFrOD0v4Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMjoyNDozMFrOEaRtsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NjM2OTU5OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/Java/libraries/microprofile-kumuluzee/pojo.mustache", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzowOTo0MFrOGJ1g9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzowOTo0MFrOGJ1g9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk2NzE1Ng==", "bodyText": "please add the option {{>additionalModelTypeAnnotations}} on the top of the public class {{ classname }} for users/developers to add custom annotations", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5944#discussion_r412967156", "createdAt": "2020-04-22T13:09:40Z", "author": {"login": "Ravisankar-Challa"}, "path": "modules/openapi-generator/src/main/resources/Java/libraries/microprofile-kumuluzee/pojo.mustache", "diffHunk": "@@ -0,0 +1,129 @@\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlEnumValue;\n+import javax.json.bind.annotation.JsonbProperty;\n+\n+{{#withXml}}\n+@XmlAccessorType(XmlAccessType.FIELD)\n+{{#hasVars}} @XmlType(name = \"{{classname}}\", propOrder =\n+    { {{#vars}}\"{{name}}\"{{^-last}}, {{/-last}}{{/vars}}\n+}){{/hasVars}}\n+{{^hasVars}}@XmlType(name = \"{{classname}}\"){{/hasVars}}\n+{{^parent}}@XmlRootElement(name=\"{{classname}}\"){{/parent}}\n+{{/withXml}}\n+{{#description}}\n+/**\n+  * {{{description}}}\n+ **/\n+{{/description}}\n+public class {{classname}} {{#parent}}extends {{{parent}}}{{/parent}}{{#serializableModel}} implements Serializable{{/serializableModel}} {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0d79d0d21c5b2cb02599faa9226ae2b2fb635e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTg4NTI5OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMjoyNDoxMlrOHDm-vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMjoyNDoxMlrOHDm-vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0NjQzMQ==", "bodyText": "I'll fix the typo (Ivalid => Invalid) and string interpolation '{}' in another PR.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5944#discussion_r473546431", "createdAt": "2020-08-20T02:24:12Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "diffHunk": "@@ -254,6 +262,17 @@ public void processOpts() {\n         }\n         additionalProperties.put(PLAY_VERSION, playVersion);\n \n+        // Microprofile framework\n+        if (additionalProperties.containsKey(MICROPROFILE_FRAMEWORK)) {\n+            this.setMicroprofileFramework(additionalProperties.get(MICROPROFILE_FRAMEWORK).toString());\n+\n+            if (!MICROPROFILE_KUMULUZEE.equals(microprofileFramework)) {\n+                throw new RuntimeException(\"Ivalid microprofileFramework '{}'. Must be 'kumuluzee' or none.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "203b62fcca729769270860d2899b09ce63d71969"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTg4NjU3OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMjoyNDozMFrOHDm_nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMjoyNDozMFrOHDm_nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0NjY1NQ==", "bodyText": "I'll change it back to PLAY_26 as the default play version in another PR.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5944#discussion_r473546655", "createdAt": "2020-08-20T02:24:30Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "diffHunk": "@@ -91,7 +96,9 @@\n     // (mustache does not allow for boolean operators so we need this extra field)\n     protected boolean doNotUseRx = true;\n     protected boolean usePlayWS = false;\n-    protected String playVersion = PLAY_26;\n+    protected String playVersion = PLAY_25;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "203b62fcca729769270860d2899b09ce63d71969"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3553, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}