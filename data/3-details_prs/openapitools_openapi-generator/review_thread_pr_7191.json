{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MDExNTIz", "number": 7191, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMzoxNzowNlrOEcZVlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMjozMjo1M1rOEfzEoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjEwNzExOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMzoxNzowNlrOHG6Q4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOToxMTo0NlrOHHDH2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwODA5OQ==", "bodyText": "Shall we decode it at the start of the function getSimpleRef instead?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7191#discussion_r477008099", "createdAt": "2020-08-26T03:17:06Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -386,6 +388,11 @@ public static String getSimpleRef(String ref) {\n \n         }\n \n+        try {\n+            ref = URLDecoder.decode(ref, \"UTF-8\");\n+        } catch (UnsupportedEncodingException ignored) {\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78fb8c3ce455e8101d39a4d12e3ad81ac9248ffc"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1MzI0MA==", "bodyText": "I had the same thought, but why decoding a String part which gets thrown away? I see no reason to do so\nBy the way, I think we should also unescape these special cases:", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7191#discussion_r477153240", "createdAt": "2020-08-26T09:11:46Z", "author": {"login": "SimonIT"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -386,6 +388,11 @@ public static String getSimpleRef(String ref) {\n \n         }\n \n+        try {\n+            ref = URLDecoder.decode(ref, \"UTF-8\");\n+        } catch (UnsupportedEncodingException ignored) {\n+        }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwODA5OQ=="}, "originalCommit": {"oid": "78fb8c3ce455e8101d39a4d12e3ad81ac9248ffc"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzc4MDgwOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMjozMjo1M1rOHMTpFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwODoxNDozNVrOHMbU2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY2Njc3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ref = ref.replace(\"~1\", \"/\").replace(\"~0\", \"~\");\n          \n          \n            \n                    // see https://tools.ietf.org/html/rfc6901#section-3\n          \n          \n            \n                    // Because the characters '~' (%x7E) and '/' (%x2F) have special meanings in\n          \n          \n            \n                    // JSON Pointer, '~' needs to be encoded as '~0' and '/' needs to be encoded \n          \n          \n            \n                    // as '~1' when these characters appear in a reference token.\n          \n          \n            \n                    // This reverses that encoding.\n          \n          \n            \n                    ref = ref.replace(\"~1\", \"/\").replace(\"~0\", \"~\");", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7191#discussion_r482666773", "createdAt": "2020-09-03T02:32:53Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -386,6 +388,13 @@ public static String getSimpleRef(String ref) {\n \n         }\n \n+        try {\n+            ref = URLDecoder.decode(ref, \"UTF-8\");\n+        } catch (UnsupportedEncodingException ignored) {\n+        }\n+\n+        ref = ref.replace(\"~1\", \"/\").replace(\"~0\", \"~\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2634d46009f0f477dffdf3517d9d7e268e0638b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc5MjY2NA==", "bodyText": "@jimschubert Also added a unit test", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7191#discussion_r482792664", "createdAt": "2020-09-03T08:14:35Z", "author": {"login": "sbu-WBT"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -386,6 +388,13 @@ public static String getSimpleRef(String ref) {\n \n         }\n \n+        try {\n+            ref = URLDecoder.decode(ref, \"UTF-8\");\n+        } catch (UnsupportedEncodingException ignored) {\n+        }\n+\n+        ref = ref.replace(\"~1\", \"/\").replace(\"~0\", \"~\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY2Njc3Mw=="}, "originalCommit": {"oid": "e2634d46009f0f477dffdf3517d9d7e268e0638b"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4286, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}