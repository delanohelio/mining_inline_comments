{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDM2Nzgx", "number": 6262, "title": "[python-experimental] Support schema property which has $ref to 'oneOf' schema", "bodyText": "This PR adds support for use cases when a schema property is referencing another schema which is itself a oneOf.\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-05-12T01:46:52Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6262", "merged": true, "mergeCommit": {"oid": "1a6cc67fccfdda7015985882b09497726640b61d"}, "closed": true, "closedAt": "2020-05-13T16:11:44Z", "author": {"login": "sebastien-rosset"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgaN4QgH2gAyNDE2NDM2NzgxOmVhZGNhN2FiYjhhMTZlN2UwMmRkNjhkODA0MWQxMTlhNmZmOTk3MGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg7NudgFqTQxMTA4MzA3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eadca7abb8a16e7e02dd68d8041d119a6ff9970b", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/eadca7abb8a16e7e02dd68d8041d119a6ff9970b", "committedDate": "2020-05-12T01:44:21Z", "message": "Add reference to oneOf schema"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "603b6fb200ebf372ef7343f1e81aa4b6b64a6ccd", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/603b6fb200ebf372ef7343f1e81aa4b6b64a6ccd", "committedDate": "2020-05-12T03:59:56Z", "message": "Add model showing unit test failure with ref to oneOf schema"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMjA4Nzg0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6262#pullrequestreview-410208784", "createdAt": "2020-05-12T16:19:30Z", "commit": {"oid": "603b6fb200ebf372ef7343f1e81aa4b6b64a6ccd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjoxOTozMVrOGUOm3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjoxOTozMVrOGUOm3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2NDAyOA==", "bodyText": "Thanks for adding this test\nThis test is helpful because it demonstrates that there is a bug here and drawings are not able to accept Shape/Triangle instances because type checking is failing.\nSo the pattern that we have been using is to have this test_deserialization.py file verify deserializing json payloads into python classes.\nWe use the files like test_drawing.py to demonstrate that we can instantiate model instances correctly.\nIn order to follow our patterns on where tests are how about\n\nmoving this test into samples/openapi3/client/petstore/python-experimental/test/test_drawing.py ?\n\nIf you want to add a test here can you update it to demonstrate deserializing a Drawing json payload?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6262#discussion_r423864028", "createdAt": "2020-05-12T16:19:31Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/python-experimental/tests/test_deserialization.py", "diffHunk": "@@ -161,3 +161,26 @@ def test_deserialize_mammal(self):\n         self.assertTrue(isinstance(deserialized, petstore_api.Zebra))\n         self.assertEqual(deserialized.type, zebra_type)\n         self.assertEqual(deserialized.class_name, class_name)\n+\n+    def test_deserialize_oneof_reference(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603b6fb200ebf372ef7343f1e81aa4b6b64a6ccd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMjEyNTA3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6262#pullrequestreview-410212507", "createdAt": "2020-05-12T16:23:44Z", "commit": {"oid": "603b6fb200ebf372ef7343f1e81aa4b6b64a6ccd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjoyMzo0NFrOGUOyYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjoyMzo0NFrOGUOyYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2Njk3OQ==", "bodyText": "This line is hard for me to understand. Why are we expecting the instance type to be BiologyHominid. Should it be petstore_api .Drawing?\nAlso, because Drawing is an object type schema (ModelNormal subclass) in python, and doesn't have a discriminator, we will never pick a different class when moving through the new method, so we are sure that instances that we make from it will always be of type Drawing.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6262#discussion_r423866979", "createdAt": "2020-05-12T16:23:44Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/python-experimental/tests/test_deserialization.py", "diffHunk": "@@ -161,3 +161,26 @@ def test_deserialize_mammal(self):\n         self.assertTrue(isinstance(deserialized, petstore_api.Zebra))\n         self.assertEqual(deserialized.type, zebra_type)\n         self.assertEqual(deserialized.class_name, class_name)\n+\n+    def test_deserialize_oneof_reference(self):\n+\n+        inst = petstore_api.Drawing(\n+            # 'main_shape' has type 'Shape', which is a oneOf [triangle, quadrilateral]\n+            # composed schema. So we should be able to assign a petstore_api.Triangle\n+            # to a 'main_shape'.\n+            main_shape=petstore_api.Triangle(\n+                shape_type=\"Triangle\",\n+                triangle_type=\"IsoscelesTriangle\"\n+            ),\n+            shapes=[\n+                petstore_api.Triangle(\n+                    shape_type=\"Triangle\",\n+                    triangle_type=\"IsoscelesTriangle\"\n+                ),\n+                petstore_api.Shape(\n+                    shape_type=\"Quadrilateral\",\n+                    quadrilateral_type=\"ComplexQuadrilateral\"\n+                ),\n+            ],\n+        )\n+        assert isinstance(inst, petstore_api.BiologyHominid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "603b6fb200ebf372ef7343f1e81aa4b6b64a6ccd"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b2ed9e770ea9eff45429eaf90b24cfb3b366ea0", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7b2ed9e770ea9eff45429eaf90b24cfb3b366ea0", "committedDate": "2020-05-12T16:58:42Z", "message": "Updates get_discriminator_class to return visited_composed_classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9811b8c5ae4f524fdc7cb6b957b04e8963ed0174", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/9811b8c5ae4f524fdc7cb6b957b04e8963ed0174", "committedDate": "2020-05-12T18:09:07Z", "message": "Fixes broken test, adds is_valid_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "245c850dc8b02fba0737e46941061c67ee5f886a", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/245c850dc8b02fba0737e46941061c67ee5f886a", "committedDate": "2020-05-12T18:25:34Z", "message": "Merge branch 'master' of github.com:CiscoM31/openapi-generator into python-oneof-schema-reference"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "942edf03f02535e5165d0d56f6433b3fd4a9c6d8", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/942edf03f02535e5165d0d56f6433b3fd4a9c6d8", "committedDate": "2020-05-12T18:34:54Z", "message": "move unit test to  test_drawing.py file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5050b0a80aba8d553283d2e8e2ea644811121aa", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/f5050b0a80aba8d553283d2e8e2ea644811121aa", "committedDate": "2020-05-12T18:47:58Z", "message": "Add more unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "251086b5751733ac309c478323adc5b6c829eed2", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/251086b5751733ac309c478323adc5b6c829eed2", "committedDate": "2020-05-12T19:29:12Z", "message": "invoke git pull from spacether fork"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2feed29dd73e68b9695a023de5eedf1ab392eccd", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/2feed29dd73e68b9695a023de5eedf1ab392eccd", "committedDate": "2020-05-12T19:29:22Z", "message": "invoke git pull from spacether fork"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a05ff65b341a1a7b57498c26f0ae57a4a391bd3", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3a05ff65b341a1a7b57498c26f0ae57a4a391bd3", "committedDate": "2020-05-12T19:32:09Z", "message": "invoke git pull from spacether fork"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzY1OTUw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6262#pullrequestreview-410365950", "createdAt": "2020-05-12T19:42:13Z", "commit": {"oid": "3a05ff65b341a1a7b57498c26f0ae57a4a391bd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTo0MjoxM1rOGUWMXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTo0MjoxM1rOGUWMXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4ODMxNw==", "bodyText": "Can we keep one of these classes as Triangle, or a specific one like EquilateralTriangle?\nThat requires that our solution depends upon Shape's discriminator and not on instance._visited_composed_classes containing Shape.\nWe should be able to pass any of these class inputs for shapes:\n\npetstore_api.Shape\npetstore_api.Triangle\npetstore_api.EquilateralTriangle\netc", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6262#discussion_r423988317", "createdAt": "2020-05-12T19:42:13Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/python-experimental/test/test_drawing.py", "diffHunk": "@@ -0,0 +1,58 @@\n+# coding: utf-8\n+\n+\"\"\"\n+    OpenAPI Petstore\n+\n+    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\  # noqa: E501\n+\n+    The version of the OpenAPI document: 1.0.0\n+    Generated by: https://openapi-generator.tech\n+\"\"\"\n+\n+\n+from __future__ import absolute_import\n+\n+import unittest\n+\n+import petstore_api\n+\n+\n+class TestDrawing(unittest.TestCase):\n+    \"\"\"Drawing unit test stubs\"\"\"\n+\n+    def setUp(self):\n+        self.api_client = petstore_api.ApiClient()\n+\n+    def tearDown(self):\n+        pass\n+\n+    def test_deserialize_oneof_reference(self):\n+        isosceles_triangle = petstore_api.Shape(\n+            shape_type=\"Triangle\",\n+            triangle_type=\"IsoscelesTriangle\"\n+        )\n+        assert isinstance(isosceles_triangle, petstore_api.IsoscelesTriangle)\n+        inst = petstore_api.Drawing(\n+            # 'main_shape' has type 'Shape', which is a oneOf [triangle, quadrilateral]\n+            # composed schema. So we should be able to assign a petstore_api.Triangle\n+            # to a 'main_shape'.\n+            main_shape=isosceles_triangle,\n+            shapes=[\n+                petstore_api.Shape(\n+                    shape_type=\"Triangle\",\n+                    triangle_type=\"EquilateralTriangle\"\n+                ),\n+                petstore_api.Shape(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a05ff65b341a1a7b57498c26f0ae57a4a391bd3"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40ecbfb82bf5d333a4420b7d082b8d4381a1a927", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/40ecbfb82bf5d333a4420b7d082b8d4381a1a927", "committedDate": "2020-05-12T19:49:57Z", "message": "Improve unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDgzMDc3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6262#pullrequestreview-411083077", "createdAt": "2020-05-13T16:11:03Z", "commit": {"oid": "40ecbfb82bf5d333a4420b7d082b8d4381a1a927"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2402, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}