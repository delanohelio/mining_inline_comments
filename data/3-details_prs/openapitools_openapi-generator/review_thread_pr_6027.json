{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3OTMwNjk3", "number": 6027, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMToyMzoyNlrOD6bQfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMTo0MDo1N1rOD6bkmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTkwNTkwOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMToyMzoyNlrOGSQzYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMjo0OTo0MFrOGS63WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMjg1MA==", "bodyText": "Does this change anything except inverting the condition and adding continue?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r421802850", "createdAt": "2020-05-07T21:23:26Z", "author": {"login": "TiFu"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultGenerator.java", "diffHunk": "@@ -783,40 +783,40 @@ private void generateSupportingFiles(List<File> files, Map<String, Object> bundl\n                     continue;\n                 }\n \n-                if (ignoreProcessor.allowsFile(new File(outputFilename))) {\n-                    // support.templateFile is the unmodified/original supporting file name (e.g. build.sh.mustache)\n-                    // templatingEngine.templateExists dispatches resolution to this, performing template-engine specific inspect of support file extensions.\n-                    if (templatingEngine.templateExists(this, support.templateFile)) {\n-                        String templateContent = templatingEngine.compileTemplate(this, bundle, support.templateFile);\n-                        writeToFile(outputFilename, templateContent);\n-                        File written = new File(outputFilename);\n-                        files.add(written);\n-                        if (config.isEnablePostProcessFile()) {\n-                            config.postProcessFile(written, \"supporting-mustache\");\n-                        }\n-                    } else {\n-                        InputStream in = null;\n-\n-                        try {\n-                            in = new FileInputStream(templateFile);\n-                        } catch (Exception e) {\n-                            // continue\n-                        }\n-                        if (in == null) {\n-                            in = this.getClass().getClassLoader().getResourceAsStream(getCPResourcePath(templateFile));\n-                        }\n-                        File outputFile = writeInputStreamToFile(outputFilename, in, templateFile);\n-                        files.add(outputFile);\n-                        if (config.isEnablePostProcessFile() && !dryRun) {\n-                            config.postProcessFile(outputFile, \"supporting-common\");\n-                        }\n-                    }\n-\n-                } else {\n+                if (!ignoreProcessor.allowsFile(new File(outputFilename))) {\n                     if (dryRun) {\n                         dryRunStatusMap.put(outputFilename, new DryRunStatus(java.nio.file.Paths.get(outputFilename), DryRunStatus.State.Ignored));\n                     }\n                     LOGGER.info(\"Skipped generation of {} due to rule in .openapi-generator-ignore\", outputFilename);\n+                    continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20259fa2dd640c0166a6517902d4617879bd4437"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ5MTk5Mg==", "bodyText": "No, as noted in the commit message this only improves the code style to make it easier to understand.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r422491992", "createdAt": "2020-05-09T12:49:40Z", "author": {"login": "bodograumann"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultGenerator.java", "diffHunk": "@@ -783,40 +783,40 @@ private void generateSupportingFiles(List<File> files, Map<String, Object> bundl\n                     continue;\n                 }\n \n-                if (ignoreProcessor.allowsFile(new File(outputFilename))) {\n-                    // support.templateFile is the unmodified/original supporting file name (e.g. build.sh.mustache)\n-                    // templatingEngine.templateExists dispatches resolution to this, performing template-engine specific inspect of support file extensions.\n-                    if (templatingEngine.templateExists(this, support.templateFile)) {\n-                        String templateContent = templatingEngine.compileTemplate(this, bundle, support.templateFile);\n-                        writeToFile(outputFilename, templateContent);\n-                        File written = new File(outputFilename);\n-                        files.add(written);\n-                        if (config.isEnablePostProcessFile()) {\n-                            config.postProcessFile(written, \"supporting-mustache\");\n-                        }\n-                    } else {\n-                        InputStream in = null;\n-\n-                        try {\n-                            in = new FileInputStream(templateFile);\n-                        } catch (Exception e) {\n-                            // continue\n-                        }\n-                        if (in == null) {\n-                            in = this.getClass().getClassLoader().getResourceAsStream(getCPResourcePath(templateFile));\n-                        }\n-                        File outputFile = writeInputStreamToFile(outputFilename, in, templateFile);\n-                        files.add(outputFile);\n-                        if (config.isEnablePostProcessFile() && !dryRun) {\n-                            config.postProcessFile(outputFile, \"supporting-common\");\n-                        }\n-                    }\n-\n-                } else {\n+                if (!ignoreProcessor.allowsFile(new File(outputFilename))) {\n                     if (dryRun) {\n                         dryRunStatusMap.put(outputFilename, new DryRunStatus(java.nio.file.Paths.get(outputFilename), DryRunStatus.State.Ignored));\n                     }\n                     LOGGER.info(\"Skipped generation of {} due to rule in .openapi-generator-ignore\", outputFilename);\n+                    continue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMjg1MA=="}, "originalCommit": {"oid": "20259fa2dd640c0166a6517902d4617879bd4437"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTkzNzc2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/typescript/http/http.mustache", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMTozMzo1NlrOGSRHFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMToyMToyMFrOGUs9BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNzg5NQ==", "bodyText": "Would it make sense to define a type for this? type Body = string | FormData | undefined or something similar?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r421807895", "createdAt": "2020-05-07T21:33:56Z", "author": {"login": "TiFu"}, "path": "modules/openapi-generator/src/main/resources/typescript/http/http.mustache", "diffHunk": "@@ -112,7 +112,7 @@ export class RequestContext {\n     \treturn this.headers;\n     }\n     \n-    public getBody(): string | FormData { \n+    public getBody(): string | FormData | undefined{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20259fa2dd640c0166a6517902d4617879bd4437"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ5MjMwMQ==", "bodyText": "I'll have to think about that ;-)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r422492301", "createdAt": "2020-05-09T12:52:41Z", "author": {"login": "bodograumann"}, "path": "modules/openapi-generator/src/main/resources/typescript/http/http.mustache", "diffHunk": "@@ -112,7 +112,7 @@ export class RequestContext {\n     \treturn this.headers;\n     }\n     \n-    public getBody(): string | FormData { \n+    public getBody(): string | FormData | undefined{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNzg5NQ=="}, "originalCommit": {"oid": "20259fa2dd640c0166a6517902d4617879bd4437"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2MTIyMQ==", "bodyText": "I have added a type RequestBody. setBody can also be used with it, so setting the body to undefined removes it.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r424361221", "createdAt": "2020-05-13T11:21:20Z", "author": {"login": "bodograumann"}, "path": "modules/openapi-generator/src/main/resources/typescript/http/http.mustache", "diffHunk": "@@ -112,7 +112,7 @@ export class RequestContext {\n     \treturn this.headers;\n     }\n     \n-    public getBody(): string | FormData { \n+    public getBody(): string | FormData | undefined{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNzg5NQ=="}, "originalCommit": {"oid": "20259fa2dd640c0166a6517902d4617879bd4437"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTk1NzM5OnYy", "diffSide": "LEFT", "path": "modules/openapi-generator/src/main/resources/typescript/generators/fetch-api.mustache", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMTo0MDo1N1rOGSRTIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMToyMDoyOFrOGUs7Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgxMDk3OA==", "bodyText": "Should generators/jquery.mustache also be removed?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r421810978", "createdAt": "2020-05-07T21:40:57Z", "author": {"login": "TiFu"}, "path": "modules/openapi-generator/src/main/resources/typescript/generators/fetch-api.mustache", "diffHunk": "@@ -1,7 +0,0 @@\n-export * from './http/http';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20259fa2dd640c0166a6517902d4617879bd4437"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ5MjI0Ng==", "bodyText": "Ah yes definitely, guess that got lost during rebasing.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r422492246", "createdAt": "2020-05-09T12:51:58Z", "author": {"login": "bodograumann"}, "path": "modules/openapi-generator/src/main/resources/typescript/generators/fetch-api.mustache", "diffHunk": "@@ -1,7 +0,0 @@\n-export * from './http/http';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgxMDk3OA=="}, "originalCommit": {"oid": "20259fa2dd640c0166a6517902d4617879bd4437"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2MDc2Mw==", "bodyText": "Ok, removed it now.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r424360763", "createdAt": "2020-05-13T11:20:28Z", "author": {"login": "bodograumann"}, "path": "modules/openapi-generator/src/main/resources/typescript/generators/fetch-api.mustache", "diffHunk": "@@ -1,7 +0,0 @@\n-export * from './http/http';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgxMDk3OA=="}, "originalCommit": {"oid": "20259fa2dd640c0166a6517902d4617879bd4437"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3585, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}