{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4ODEwNzA5", "number": 5161, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzozOTozNFrODcAHDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzo0MDoyMlrODcAH9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjg4NTI0OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/api_doc_example.mustache", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzozOTozNFrOFjz1_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzozNjozNlrOFmkDHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5Mzg4NQ==", "bodyText": "Some endpoints need to instantiate a configuration instance, set auth method info on it, and then use that configuration when instantiating the api_client.\nFor each endpoint, can you loop through authmethods, select the first one, set the relevant configuration for it, and then use it?\n{{#hasAuthMethods}}\n{{authMethods}}\n{{#-first}}\n{{isBasicBasic}}\nconfig = blah\n{{/isBasicBasic}}\n{{isBasicBearer}}\nconfig = blah\n{{/isBasicBearer}}\n{{isHttpSignature}}\nconfig = blah\n{{/isHttpSignature}}\n{{/-first}}\n{{/authMethods}}\nwith {{{packageName}}}.ApiClient(configuration) as api_client:\n{{/hasAuthMethods}}\n{{^hasAuthMethods}}\nwith {{{packageName}}}.ApiClient() as api_client:\n{{/hasAuthMethods}}", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5161#discussion_r373093885", "createdAt": "2020-01-30T17:39:34Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/api_doc_example.mustache", "diffHunk": "@@ -5,24 +5,17 @@ import {{{packageName}}}\n from {{{packageName}}}.rest import ApiException\n from pprint import pprint\n {{> python_doc_auth_partial}}\n-{{#hasAuthMethods}}\n-# Defining host is optional and default to {{{basePath}}}\n-configuration.host = \"{{{basePath}}}\"\n # Enter a context with an instance of the API client\n+{{#hasAuthMethods}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20f9aee16c1b0e59ceb0b4b8fada5be7c0deeaf3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2OTc3Mg==", "bodyText": "I think most of that is handled already by the python_doc_auth_partial fragment, content of that fragment is here: https://github.com/OpenAPITools/openapi-generator/blob/20f9aee16c1b0e59ceb0b4b8fada5be7c0deeaf3/modules/openapi-generator/src/main/resources/python/python_doc_auth_partial.mustache", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5161#discussion_r375969772", "createdAt": "2020-02-06T17:15:53Z", "author": {"login": "fabianvf"}, "path": "modules/openapi-generator/src/main/resources/python/api_doc_example.mustache", "diffHunk": "@@ -5,24 +5,17 @@ import {{{packageName}}}\n from {{{packageName}}}.rest import ApiException\n from pprint import pprint\n {{> python_doc_auth_partial}}\n-{{#hasAuthMethods}}\n-# Defining host is optional and default to {{{basePath}}}\n-configuration.host = \"{{{basePath}}}\"\n # Enter a context with an instance of the API client\n+{{#hasAuthMethods}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5Mzg4NQ=="}, "originalCommit": {"oid": "20f9aee16c1b0e59ceb0b4b8fada5be7c0deeaf3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MDgzMQ==", "bodyText": "Ah, I missed that, sorry. Thank you for pointing me there. This is good as-is.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5161#discussion_r375980831", "createdAt": "2020-02-06T17:36:36Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/api_doc_example.mustache", "diffHunk": "@@ -5,24 +5,17 @@ import {{{packageName}}}\n from {{{packageName}}}.rest import ApiException\n from pprint import pprint\n {{> python_doc_auth_partial}}\n-{{#hasAuthMethods}}\n-# Defining host is optional and default to {{{basePath}}}\n-configuration.host = \"{{{basePath}}}\"\n # Enter a context with an instance of the API client\n+{{#hasAuthMethods}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5Mzg4NQ=="}, "originalCommit": {"oid": "20f9aee16c1b0e59ceb0b4b8fada5be7c0deeaf3"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjg4NzU4OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api_doc_example.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzo0MDoyMlrOFjz3iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzozNzowNFrOFmkEJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5NDI4MQ==", "bodyText": "Above comment also applies here", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5161#discussion_r373094281", "createdAt": "2020-01-30T17:40:22Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api_doc_example.mustache", "diffHunk": "@@ -4,20 +4,15 @@ import time\n import {{{packageName}}}\n from pprint import pprint\n {{> python_doc_auth_partial}}\n-{{#hasAuthMethods}}\n-# Defining host is optional and default to {{{basePath}}}\n-configuration.host = \"{{{basePath}}}\"\n # Enter a context with an instance of the API client\n+{{#hasAuthMethods}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20f9aee16c1b0e59ceb0b4b8fada5be7c0deeaf3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MTA5Mg==", "bodyText": "My mistake, we are all set.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5161#discussion_r375981092", "createdAt": "2020-02-06T17:37:04Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api_doc_example.mustache", "diffHunk": "@@ -4,20 +4,15 @@ import time\n import {{{packageName}}}\n from pprint import pprint\n {{> python_doc_auth_partial}}\n-{{#hasAuthMethods}}\n-# Defining host is optional and default to {{{basePath}}}\n-configuration.host = \"{{{basePath}}}\"\n # Enter a context with an instance of the API client\n+{{#hasAuthMethods}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5NDI4MQ=="}, "originalCommit": {"oid": "20f9aee16c1b0e59ceb0b4b8fada5be7c0deeaf3"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3885, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}