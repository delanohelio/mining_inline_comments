{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NTY1MjI5", "number": 6078, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMTozNzozNFrOD2-YDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODo0MDo1M1rOD3VKsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTcxNjYzOnYy", "diffSide": "RIGHT", "path": "samples/server/petstore/php-symfony/SymfonyBundle-php/Controller/PetController.php", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMTozNzozNFrOGM-vrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTowMTozNlrOGNKGIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2NDEwOA==", "bodyText": "Please fix coding style at least in your changes(line 65 and 494).\n$  ./vendor/bin/phpcs --standard=PSR2 -n -s ./Controller/PetController.php\n\nFILE: ...store/php-symfony/SymfonyBundle-php/Controller/PetController.php\n----------------------------------------------------------------------\nFOUND 3 ERRORS AFFECTING 3 LINES\n----------------------------------------------------------------------\n  19 | ERROR | [x] Whitespace found at end of line\n     |       |     (Squiz.WhiteSpace.SuperfluousWhitespace.EndLine)\n  65 | ERROR | [x] No space found after comma in function call\n     |       |     (Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma)\n 494 | ERROR | [x] No space found after comma in function call\n     |       |     (Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma)\n----------------------------------------------------------------------\nPHPCBF CAN FIX THE 3 MARKED SNIFF VIOLATIONS AUTOMATICALLY\n----------------------------------------------------------------------", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6078#discussion_r416264108", "createdAt": "2020-04-28T01:37:34Z", "author": {"login": "ybelenko"}, "path": "samples/server/petstore/php-symfony/SymfonyBundle-php/Controller/PetController.php", "diffHunk": "@@ -62,7 +62,7 @@ public function addPetAction(Request $request)\n     {\n         // Make sure that the client is providing something that we can consume\n         $consumes = ['application/json', 'application/xml'];\n-        $inputFormat = $request->headers->has('Content-Type')?$request->headers->get('Content-Type'):$consumes[0];\n+        $inputFormat = $request->headers->has('Content-Type')?explode(\";\",$request->headers->get('Content-Type'))[0]:$consumes[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fddfbbcf1dd37d572be8291c2a93942dcdc27712"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ1MDA4Mw==", "bodyText": "Fix code style, add spaces, as PSR recommends. I`m write previous version of code in style, that already used in this file, think that was more appreciated :)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6078#discussion_r416450083", "createdAt": "2020-04-28T09:01:36Z", "author": {"login": "reznikartem"}, "path": "samples/server/petstore/php-symfony/SymfonyBundle-php/Controller/PetController.php", "diffHunk": "@@ -62,7 +62,7 @@ public function addPetAction(Request $request)\n     {\n         // Make sure that the client is providing something that we can consume\n         $consumes = ['application/json', 'application/xml'];\n-        $inputFormat = $request->headers->has('Content-Type')?$request->headers->get('Content-Type'):$consumes[0];\n+        $inputFormat = $request->headers->has('Content-Type')?explode(\";\",$request->headers->get('Content-Type'))[0]:$consumes[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2NDEwOA=="}, "originalCommit": {"oid": "fddfbbcf1dd37d572be8291c2a93942dcdc27712"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTcyMjg5OnYy", "diffSide": "RIGHT", "path": "samples/server/petstore/php-symfony/SymfonyBundle-php/Controller/StoreController.php", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMTo0MDozMVrOGM-zMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMTo0MDozMVrOGM-zMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2NTAwOA==", "bodyText": "$  ./vendor/bin/phpcs --standard=PSR2 -n -s ./Controller/StoreController.php\n\nFILE: ...ore/php-symfony/SymfonyBundle-php/Controller/StoreController.php\n----------------------------------------------------------------------\nFOUND 2 ERRORS AFFECTING 2 LINES\n----------------------------------------------------------------------\n  19 | ERROR | [x] Whitespace found at end of line\n     |       |     (Squiz.WhiteSpace.SuperfluousWhitespace.EndLine)\n 287 | ERROR | [x] No space found after comma in function call\n     |       |     (Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma)\n----------------------------------------------------------------------\nPHPCBF CAN FIX THE 2 MARKED SNIFF VIOLATIONS AUTOMATICALLY\n----------------------------------------------------------------------", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6078#discussion_r416265008", "createdAt": "2020-04-28T01:40:31Z", "author": {"login": "ybelenko"}, "path": "samples/server/petstore/php-symfony/SymfonyBundle-php/Controller/StoreController.php", "diffHunk": "@@ -284,7 +284,7 @@ public function placeOrderAction(Request $request)\n     {\n         // Make sure that the client is providing something that we can consume\n         $consumes = [];\n-        $inputFormat = $request->headers->has('Content-Type')?$request->headers->get('Content-Type'):$consumes[0];\n+        $inputFormat = $request->headers->has('Content-Type')?explode(\";\",$request->headers->get('Content-Type'))[0]:$consumes[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fddfbbcf1dd37d572be8291c2a93942dcdc27712"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTcyNTYwOnYy", "diffSide": "RIGHT", "path": "samples/server/petstore/php-symfony/SymfonyBundle-php/Controller/UserController.php", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMTo0MToyNlrOGM-0jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTowMjozNFrOGNKIjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2NTM1OA==", "bodyText": "$consumes = [];\n$inputFormat = $request->headers->has('Content-Type')?$request->headers->get('Content-Type'):$consumes[0];\n// request without Content-Type returns $consumes[0] which doesn't exist\n// so I think it throws unexpected index error\nBut it was there before you, so you don't have to fix it. Just an observation.\nAnd PHPCodeSniffer errors:\n$  ./vendor/bin/phpcs --standard=PSR2 -n -s ./Controller/UserController.php\n\nFILE: ...tore/php-symfony/SymfonyBundle-php/Controller/UserController.php\n----------------------------------------------------------------------\nFOUND 5 ERRORS AFFECTING 5 LINES\n----------------------------------------------------------------------\n  19 | ERROR | [x] Whitespace found at end of line\n     |       |     (Squiz.WhiteSpace.SuperfluousWhitespace.EndLine)\n  64 | ERROR | [x] No space found after comma in function call\n     |       |     (Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma)\n 141 | ERROR | [x] No space found after comma in function call\n     |       |     (Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma)\n 220 | ERROR | [x] No space found after comma in function call\n     |       |     (Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma)\n 595 | ERROR | [x] No space found after comma in function call\n     |       |     (Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma)\n----------------------------------------------------------------------\nPHPCBF CAN FIX THE 5 MARKED SNIFF VIOLATIONS AUTOMATICALLY\n----------------------------------------------------------------------", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6078#discussion_r416265358", "createdAt": "2020-04-28T01:41:26Z", "author": {"login": "ybelenko"}, "path": "samples/server/petstore/php-symfony/SymfonyBundle-php/Controller/UserController.php", "diffHunk": "@@ -61,7 +61,7 @@ public function createUserAction(Request $request)\n     {\n         // Make sure that the client is providing something that we can consume\n         $consumes = [];\n-        $inputFormat = $request->headers->has('Content-Type')?$request->headers->get('Content-Type'):$consumes[0];\n+        $inputFormat = $request->headers->has('Content-Type')?explode(\";\",$request->headers->get('Content-Type'))[0]:$consumes[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fddfbbcf1dd37d572be8291c2a93942dcdc27712"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ1MDcwMg==", "bodyText": "I`m add check for $consumes length", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6078#discussion_r416450702", "createdAt": "2020-04-28T09:02:34Z", "author": {"login": "reznikartem"}, "path": "samples/server/petstore/php-symfony/SymfonyBundle-php/Controller/UserController.php", "diffHunk": "@@ -61,7 +61,7 @@ public function createUserAction(Request $request)\n     {\n         // Make sure that the client is providing something that we can consume\n         $consumes = [];\n-        $inputFormat = $request->headers->has('Content-Type')?$request->headers->get('Content-Type'):$consumes[0];\n+        $inputFormat = $request->headers->has('Content-Type')?explode(\";\",$request->headers->get('Content-Type'))[0]:$consumes[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2NTM1OA=="}, "originalCommit": {"oid": "fddfbbcf1dd37d572be8291c2a93942dcdc27712"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzQ1MDczOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/php-symfony/api_controller.mustache", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODo0MDo1M1rOGNh3tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDoxMTowNVrOGNlBQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzOTYwNg==", "bodyText": "Well, PR is ready to be merged now. But I would suggest to put your changes into base Controller/Controller.php class method and cover it with unit tests to avoid this bug in future. Public method(maybe static) like:\npublic static function isContentTypeAllowed(Request $request, array $consumes = []): bool;\nOf course you can stay with your changes, it's just a suggestion.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6078#discussion_r416839606", "createdAt": "2020-04-28T18:40:53Z", "author": {"login": "ybelenko"}, "path": "modules/openapi-generator/src/main/resources/php-symfony/api_controller.mustache", "diffHunk": "@@ -60,10 +60,16 @@ class {{controllerName}} extends Controller\n         {{#bodyParams}}\n         // Make sure that the client is providing something that we can consume\n         $consumes = [{{#consumes}}'{{{mediaType}}}'{{#hasMore}}, {{/hasMore}}{{/consumes}}];\n-        $inputFormat = $request->headers->has('Content-Type')?$request->headers->get('Content-Type'):$consumes[0];\n-        if (!in_array($inputFormat, $consumes)) {\n-            // We can't consume the content that the client is sending us\n-            return new Response('', 415);\n+        if (sizeof($consumes) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58c4d251f2b228d62cc0ab919ec68bbdfd54b09d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5MTIwMg==", "bodyText": "This is a shame, but I'm not sure that I can correctly cover the code with a unit test :( There is no experience with this yet.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6078#discussion_r416891202", "createdAt": "2020-04-28T20:11:05Z", "author": {"login": "reznikartem"}, "path": "modules/openapi-generator/src/main/resources/php-symfony/api_controller.mustache", "diffHunk": "@@ -60,10 +60,16 @@ class {{controllerName}} extends Controller\n         {{#bodyParams}}\n         // Make sure that the client is providing something that we can consume\n         $consumes = [{{#consumes}}'{{{mediaType}}}'{{#hasMore}}, {{/hasMore}}{{/consumes}}];\n-        $inputFormat = $request->headers->has('Content-Type')?$request->headers->get('Content-Type'):$consumes[0];\n-        if (!in_array($inputFormat, $consumes)) {\n-            // We can't consume the content that the client is sending us\n-            return new Response('', 415);\n+        if (sizeof($consumes) > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzOTYwNg=="}, "originalCommit": {"oid": "58c4d251f2b228d62cc0ab919ec68bbdfd54b09d"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3601, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}