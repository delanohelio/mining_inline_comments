{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NDA0NDg3", "number": 8269, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwOToyNDoyOFrOFJIZnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwOToyNjo0NFrOFJIa0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTE5MTMyOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwOToyNDoyOFrOILaqjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwOToyNDoyOFrOILaqjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjEyNA==", "bodyText": "remove", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r548842124", "createdAt": "2020-12-25T09:24:28Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -32,6 +32,7 @@\n import org.apache.commons.io.FilenameUtils;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.logging.Log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTE5MjU1OnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/dart-dio/petstore_client_lib/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwOToyNTozMFrOILarJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjoxNTo0N1rOINvnTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjI3OA==", "bodyText": "these all will need to be reverted and squashed to prevent git history pollution", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r548842278", "createdAt": "2020-12-25T09:25:30Z", "author": {"login": "agilob"}, "path": "samples/client/petstore/dart-dio/petstore_client_lib/README.md", "diffHunk": "@@ -57,36 +57,36 @@ All URIs are relative to *http://petstore.swagger.io/v2*\n \n Class | Method | HTTP request | Description\n ------------ | ------------- | ------------- | -------------\n-*PetApi* | [**addPet**](doc//PetApi.md#addpet) | **post** /pet | Add a new pet to the store\n-*PetApi* | [**deletePet**](doc//PetApi.md#deletepet) | **delete** /pet/{petId} | Deletes a pet\n-*PetApi* | [**findPetsByStatus**](doc//PetApi.md#findpetsbystatus) | **get** /pet/findByStatus | Finds Pets by status\n-*PetApi* | [**findPetsByTags**](doc//PetApi.md#findpetsbytags) | **get** /pet/findByTags | Finds Pets by tags\n-*PetApi* | [**getPetById**](doc//PetApi.md#getpetbyid) | **get** /pet/{petId} | Find pet by ID\n-*PetApi* | [**updatePet**](doc//PetApi.md#updatepet) | **put** /pet | Update an existing pet\n-*PetApi* | [**updatePetWithForm**](doc//PetApi.md#updatepetwithform) | **post** /pet/{petId} | Updates a pet in the store with form data\n-*PetApi* | [**uploadFile**](doc//PetApi.md#uploadfile) | **post** /pet/{petId}/uploadImage | uploads an image\n-*StoreApi* | [**deleteOrder**](doc//StoreApi.md#deleteorder) | **delete** /store/order/{orderId} | Delete purchase order by ID\n-*StoreApi* | [**getInventory**](doc//StoreApi.md#getinventory) | **get** /store/inventory | Returns pet inventories by status\n-*StoreApi* | [**getOrderById**](doc//StoreApi.md#getorderbyid) | **get** /store/order/{orderId} | Find purchase order by ID\n-*StoreApi* | [**placeOrder**](doc//StoreApi.md#placeorder) | **post** /store/order | Place an order for a pet\n-*UserApi* | [**createUser**](doc//UserApi.md#createuser) | **post** /user | Create user\n-*UserApi* | [**createUsersWithArrayInput**](doc//UserApi.md#createuserswitharrayinput) | **post** /user/createWithArray | Creates list of users with given input array\n-*UserApi* | [**createUsersWithListInput**](doc//UserApi.md#createuserswithlistinput) | **post** /user/createWithList | Creates list of users with given input array\n-*UserApi* | [**deleteUser**](doc//UserApi.md#deleteuser) | **delete** /user/{username} | Delete user\n-*UserApi* | [**getUserByName**](doc//UserApi.md#getuserbyname) | **get** /user/{username} | Get user by user name\n-*UserApi* | [**loginUser**](doc//UserApi.md#loginuser) | **get** /user/login | Logs user into the system\n-*UserApi* | [**logoutUser**](doc//UserApi.md#logoutuser) | **get** /user/logout | Logs out current logged in user session\n-*UserApi* | [**updateUser**](doc//UserApi.md#updateuser) | **put** /user/{username} | Updated user\n+*PetApi* | [**addPet**](doc\\/PetApi.md#addpet) | **post** /pet | Add a new pet to the store", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI4MjUxMA==", "bodyText": "Ok the \"last\" one.\nI don't really understand what I have to do. I follow contribution by using git bash, as I'm on windows,  to run generate-samples.sh\nI already revert the commit but don't know what to do then ?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r551282510", "createdAt": "2021-01-04T12:15:47Z", "author": {"login": "UnleashSpirit"}, "path": "samples/client/petstore/dart-dio/petstore_client_lib/README.md", "diffHunk": "@@ -57,36 +57,36 @@ All URIs are relative to *http://petstore.swagger.io/v2*\n \n Class | Method | HTTP request | Description\n ------------ | ------------- | ------------- | -------------\n-*PetApi* | [**addPet**](doc//PetApi.md#addpet) | **post** /pet | Add a new pet to the store\n-*PetApi* | [**deletePet**](doc//PetApi.md#deletepet) | **delete** /pet/{petId} | Deletes a pet\n-*PetApi* | [**findPetsByStatus**](doc//PetApi.md#findpetsbystatus) | **get** /pet/findByStatus | Finds Pets by status\n-*PetApi* | [**findPetsByTags**](doc//PetApi.md#findpetsbytags) | **get** /pet/findByTags | Finds Pets by tags\n-*PetApi* | [**getPetById**](doc//PetApi.md#getpetbyid) | **get** /pet/{petId} | Find pet by ID\n-*PetApi* | [**updatePet**](doc//PetApi.md#updatepet) | **put** /pet | Update an existing pet\n-*PetApi* | [**updatePetWithForm**](doc//PetApi.md#updatepetwithform) | **post** /pet/{petId} | Updates a pet in the store with form data\n-*PetApi* | [**uploadFile**](doc//PetApi.md#uploadfile) | **post** /pet/{petId}/uploadImage | uploads an image\n-*StoreApi* | [**deleteOrder**](doc//StoreApi.md#deleteorder) | **delete** /store/order/{orderId} | Delete purchase order by ID\n-*StoreApi* | [**getInventory**](doc//StoreApi.md#getinventory) | **get** /store/inventory | Returns pet inventories by status\n-*StoreApi* | [**getOrderById**](doc//StoreApi.md#getorderbyid) | **get** /store/order/{orderId} | Find purchase order by ID\n-*StoreApi* | [**placeOrder**](doc//StoreApi.md#placeorder) | **post** /store/order | Place an order for a pet\n-*UserApi* | [**createUser**](doc//UserApi.md#createuser) | **post** /user | Create user\n-*UserApi* | [**createUsersWithArrayInput**](doc//UserApi.md#createuserswitharrayinput) | **post** /user/createWithArray | Creates list of users with given input array\n-*UserApi* | [**createUsersWithListInput**](doc//UserApi.md#createuserswithlistinput) | **post** /user/createWithList | Creates list of users with given input array\n-*UserApi* | [**deleteUser**](doc//UserApi.md#deleteuser) | **delete** /user/{username} | Delete user\n-*UserApi* | [**getUserByName**](doc//UserApi.md#getuserbyname) | **get** /user/{username} | Get user by user name\n-*UserApi* | [**loginUser**](doc//UserApi.md#loginuser) | **get** /user/login | Logs user into the system\n-*UserApi* | [**logoutUser**](doc//UserApi.md#logoutuser) | **get** /user/logout | Logs out current logged in user session\n-*UserApi* | [**updateUser**](doc//UserApi.md#updateuser) | **put** /user/{username} | Updated user\n+*PetApi* | [**addPet**](doc\\/PetApi.md#addpet) | **post** /pet | Add a new pet to the store", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjI3OA=="}, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTE5MzI5OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwOToyNTo1NVrOILargw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwOTo0MjoxNFrOINrE5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjM3MQ==", "bodyText": "Arrays.asList use set to remove duplicates", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r548842371", "createdAt": "2020-12-25T09:25:55Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -289,8 +290,7 @@ public void processOpts() {\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\";\")));\n+            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE5MzMwMw==", "bodyText": "I didn't want to change the original code that List uses.\nDo you think this is \"necessary\"?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r550193303", "createdAt": "2020-12-30T13:22:32Z", "author": {"login": "UnleashSpirit"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -289,8 +290,7 @@ public void processOpts() {\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\";\")));\n+            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjM3MQ=="}, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE5NzU4OQ==", "bodyText": "Using stream and distinct to avoid duplicates and potentiel side effect of using Set", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r551197589", "createdAt": "2021-01-04T09:22:00Z", "author": {"login": "UnleashSpirit"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -289,8 +290,7 @@ public void processOpts() {\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\";\")));\n+            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjM3MQ=="}, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE5OTA3NA==", "bodyText": "From performance perspective stream.distinct is many times slower than loading things to hashset.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r551199074", "createdAt": "2021-01-04T09:24:54Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -289,8 +290,7 @@ public void processOpts() {\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\";\")));\n+            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjM3MQ=="}, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwODE2NA==", "bodyText": "So something like String[] -> Set -> List\nnew ArrayList<>(Sets.newHashSet(additionalAnnotationsList.trim().split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")))", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r551208164", "createdAt": "2021-01-04T09:42:14Z", "author": {"login": "UnleashSpirit"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -289,8 +290,7 @@ public void processOpts() {\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\";\")));\n+            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjM3MQ=="}, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTE5NDQwOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwOToyNjo0NFrOILasGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwODoyOTo1NlrOINpBOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjUyMA==", "bodyText": "0 tests for this. please add tests for ; and the new splitting characters too (including \\r\\n and \\n", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r548842520", "createdAt": "2020-12-25T09:26:44Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -289,8 +290,7 @@ public void processOpts() {\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\";\")));\n+            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE5NDE4MQ==", "bodyText": "I tried in AbstractJavaCodegenTest.java but without getter for additionalModelTypeAnnotations, I found irrelevant to do\n@Test\npublic void testAdditionalModelTypeAnnotations() throws Exception {\n\tOpenAPI openAPI = TestUtils.createOpenAPI();\n\n        final AbstractJavaCodegen codegen = new P_AbstractJavaCodegen();\n        codegen.additionalProperties().put(AbstractJavaCodegen.ADDITIONAL_MODEL_TYPE_ANNOTATIONS, \"@Foo;@Bar\");\n        codegen.processOpts();\n        codegen.preprocessOpenAPI(openAPI);\n\n        Assert.assertEquals(codegen.additionalProperties().get(AbstractJavaCodegen.ADDITIONAL_MODEL_TYPE_ANNOTATIONS), \"@Foo;@Bar\");\n}\n\nAny idea ?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r550194181", "createdAt": "2020-12-30T13:25:34Z", "author": {"login": "UnleashSpirit"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -289,8 +290,7 @@ public void processOpts() {\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\";\")));\n+            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjUyMA=="}, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE3NDQ1Ng==", "bodyText": "Well, I add a getter for additionalModelTypeAnnotations to test the list easily", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r551174456", "createdAt": "2021-01-04T08:29:56Z", "author": {"login": "UnleashSpirit"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -289,8 +290,7 @@ public void processOpts() {\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\";\")));\n+            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjUyMA=="}, "originalCommit": {"oid": "da509c39f363da046fbd457e1ab67ef0f62f3561"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3958, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}