{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMTU3OTcz", "number": 5621, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxNjoyN1rODo8IKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNTo1MzozNFrODo-jGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjU0NzYwOnYy", "diffSide": "LEFT", "path": "samples/client/petstore/python-asyncio/tests/test_pet_api.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxNjoyN1rOF3zRNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToyNTozOVrOF3zZgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NTk4OA==", "bodyText": "I only see this being used in this one file. Why did you move it to the util file?\nIf it is used in more than one file it makes sense to put it there as a common utility tool, but if it is only needed here can you keep it here?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5621#discussion_r394055988", "createdAt": "2020-03-18T01:16:27Z", "author": {"login": "spacether"}, "path": "samples/client/petstore/python-asyncio/tests/test_pet_api.py", "diffHunk": "@@ -27,15 +27,6 @@\n HOST = 'http://localhost:80/v2'\n \n \n-def async_test(f):\n-    def wrapper(*args, **kwargs):\n-        coro = asyncio.coroutine(f)\n-        future = coro(*args, **kwargs)\n-        loop = asyncio.get_event_loop()\n-        loop.run_until_complete(future)\n-    return wrapper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4914ce8f46b461de882c9dc9ac534a9882f25819"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NzM3Ng==", "bodyText": "Yeah, my mistake... I've just added new file.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5621#discussion_r394057376", "createdAt": "2020-03-18T01:22:25Z", "author": {"login": "tomplus"}, "path": "samples/client/petstore/python-asyncio/tests/test_pet_api.py", "diffHunk": "@@ -27,15 +27,6 @@\n HOST = 'http://localhost:80/v2'\n \n \n-def async_test(f):\n-    def wrapper(*args, **kwargs):\n-        coro = asyncio.coroutine(f)\n-        future = coro(*args, **kwargs)\n-        loop = asyncio.get_event_loop()\n-        loop.run_until_complete(future)\n-    return wrapper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NTk4OA=="}, "originalCommit": {"oid": "4914ce8f46b461de882c9dc9ac534a9882f25819"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1ODExNQ==", "bodyText": "Looks good as-is", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5621#discussion_r394058115", "createdAt": "2020-03-18T01:25:39Z", "author": {"login": "spacether"}, "path": "samples/client/petstore/python-asyncio/tests/test_pet_api.py", "diffHunk": "@@ -27,15 +27,6 @@\n HOST = 'http://localhost:80/v2'\n \n \n-def async_test(f):\n-    def wrapper(*args, **kwargs):\n-        coro = asyncio.coroutine(f)\n-        future = coro(*args, **kwargs)\n-        loop = asyncio.get_event_loop()\n-        loop.run_until_complete(future)\n-    return wrapper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NTk4OA=="}, "originalCommit": {"oid": "4914ce8f46b461de882c9dc9ac534a9882f25819"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjU1MzI5OnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/python-asyncio/petstore_api/rest.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToyMDoyN1rOF3zU4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToyNzoxMFrOF3za4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NjkyOQ==", "bodyText": "Can you add a test that checks the pool manager and ensures that it is closed like we did here:\nsamples/client/petstore/python-experimental/tests/test_api_client.py?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5621#discussion_r394056929", "createdAt": "2020-03-18T01:20:27Z", "author": {"login": "spacether"}, "path": "samples/client/petstore/python-asyncio/petstore_api/rest.py", "diffHunk": "@@ -85,8 +85,9 @@ def __init__(self, configuration, pools_size=4, maxsize=None):\n                 connector=connector\n             )\n \n-    def __del__(self):\n-        asyncio.ensure_future(self.pool_manager.close())\n+    def close(self):\n+        if not self.pool_manager.closed:\n+            asyncio.ensure_future(self.pool_manager.close())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4914ce8f46b461de882c9dc9ac534a9882f25819"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1ODAyMw==", "bodyText": "There is such test. Sorry, I forgot to commit it before.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5621#discussion_r394058023", "createdAt": "2020-03-18T01:25:24Z", "author": {"login": "tomplus"}, "path": "samples/client/petstore/python-asyncio/petstore_api/rest.py", "diffHunk": "@@ -85,8 +85,9 @@ def __init__(self, configuration, pools_size=4, maxsize=None):\n                 connector=connector\n             )\n \n-    def __del__(self):\n-        asyncio.ensure_future(self.pool_manager.close())\n+    def close(self):\n+        if not self.pool_manager.closed:\n+            asyncio.ensure_future(self.pool_manager.close())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NjkyOQ=="}, "originalCommit": {"oid": "4914ce8f46b461de882c9dc9ac534a9882f25819"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1ODQ2Ng==", "bodyText": "Test is below", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5621#discussion_r394058466", "createdAt": "2020-03-18T01:27:10Z", "author": {"login": "spacether"}, "path": "samples/client/petstore/python-asyncio/petstore_api/rest.py", "diffHunk": "@@ -85,8 +85,9 @@ def __init__(self, configuration, pools_size=4, maxsize=None):\n                 connector=connector\n             )\n \n-    def __del__(self):\n-        asyncio.ensure_future(self.pool_manager.close())\n+    def close(self):\n+        if not self.pool_manager.closed:\n+            asyncio.ensure_future(self.pool_manager.close())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NjkyOQ=="}, "originalCommit": {"oid": "4914ce8f46b461de882c9dc9ac534a9882f25819"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjU2MjM4OnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/python-asyncio/tests/test_api_client.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToyNjo1MVrOF3zaog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMTozMzoxNVrOF3zgdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1ODQwMg==", "bodyText": "Can you delete HOST, I don't think we use it here", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5621#discussion_r394058402", "createdAt": "2020-03-18T01:26:51Z", "author": {"login": "spacether"}, "path": "samples/client/petstore/python-asyncio/tests/test_api_client.py", "diffHunk": "@@ -0,0 +1,31 @@\n+# coding: utf-8\n+\n+# flake8: noqa\n+\n+import os\n+import unittest\n+import asyncio\n+import weakref\n+\n+from tests.util import async_test\n+import petstore_api\n+\n+HOST = 'http://localhost:80/v2'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c31ab94af0d593d528228361eab32cced07e972"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1OTg5Mw==", "bodyText": "Sure, removed.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5621#discussion_r394059893", "createdAt": "2020-03-18T01:33:15Z", "author": {"login": "tomplus"}, "path": "samples/client/petstore/python-asyncio/tests/test_api_client.py", "diffHunk": "@@ -0,0 +1,31 @@\n+# coding: utf-8\n+\n+# flake8: noqa\n+\n+import os\n+import unittest\n+import asyncio\n+import weakref\n+\n+from tests.util import async_test\n+import petstore_api\n+\n+HOST = 'http://localhost:80/v2'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1ODQwMg=="}, "originalCommit": {"oid": "4c31ab94af0d593d528228361eab32cced07e972"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Mjk0NDI0OnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/python-asyncio/tests/test_api_client.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNTo1MzozNFrOF33KPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMTozOToxNVrOF4BJHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExOTc0Mw==", "bodyText": "When do we check that the pool_manager is closed?\nWhy is rest_pool_ref.closed not True?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5621#discussion_r394119743", "createdAt": "2020-03-18T05:53:34Z", "author": {"login": "spacether"}, "path": "samples/client/petstore/python-asyncio/tests/test_api_client.py", "diffHunk": "@@ -0,0 +1,27 @@\n+# coding: utf-8\n+\n+# flake8: noqa\n+\n+import unittest\n+import weakref\n+\n+from tests.util import async_test\n+import petstore_api\n+\n+\n+class TestApiClient(unittest.TestCase):\n+\n+    @async_test\n+    def test_context_manager_closes_client(self):\n+\n+        with petstore_api.ApiClient() as client:\n+            # thread pool\n+            self.assertIsNotNone(client.pool)\n+            pool_ref = weakref.ref(client._pool)\n+            self.assertIsNotNone(pool_ref())\n+            # pool_manager\n+            self.assertFalse(client.rest_client.pool_manager.closed)\n+            rest_pool_ref = client.rest_client.pool_manager\n+\n+        self.assertIsNone(pool_ref())\n+        self.assertFalse(rest_pool_ref.closed)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b2e910c823f7bb5ccaab098dd660449ea849046"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI4MzI5Mg==", "bodyText": "Thanks for spotting this. I had to switch to the asynchronous context generator to make it works. Please take a look again.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5621#discussion_r394283292", "createdAt": "2020-03-18T11:39:15Z", "author": {"login": "tomplus"}, "path": "samples/client/petstore/python-asyncio/tests/test_api_client.py", "diffHunk": "@@ -0,0 +1,27 @@\n+# coding: utf-8\n+\n+# flake8: noqa\n+\n+import unittest\n+import weakref\n+\n+from tests.util import async_test\n+import petstore_api\n+\n+\n+class TestApiClient(unittest.TestCase):\n+\n+    @async_test\n+    def test_context_manager_closes_client(self):\n+\n+        with petstore_api.ApiClient() as client:\n+            # thread pool\n+            self.assertIsNotNone(client.pool)\n+            pool_ref = weakref.ref(client._pool)\n+            self.assertIsNotNone(pool_ref())\n+            # pool_manager\n+            self.assertFalse(client.rest_client.pool_manager.closed)\n+            rest_pool_ref = client.rest_client.pool_manager\n+\n+        self.assertIsNone(pool_ref())\n+        self.assertFalse(rest_pool_ref.closed)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExOTc0Mw=="}, "originalCommit": {"oid": "4b2e910c823f7bb5ccaab098dd660449ea849046"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3666, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}