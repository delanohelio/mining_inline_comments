{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NDcxMTEy", "number": 5427, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo0ODoyNVrODioe-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo1NToyOFrODiopYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjQxNDY1OnYy", "diffSide": "LEFT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo0ODoyNVrOFt_Tcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo0ODoyNVrOFt_Tcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc2NzQxMA==", "bodyText": "I carelessly removed this special case.\nPlease let me know if there is a particular reason to handle upper case differently from everything else!", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5427#discussion_r383767410", "createdAt": "2020-02-25T09:48:25Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "diffHunk": "@@ -274,39 +283,36 @@ public String modelFileFolder() {\n \n     @Override\n     public String toParamName(String name) {\n-        // sanitize name\n         name = sanitizeName(name, \"[^\\\\w$]\");\n \n         if (\"_\".equals(name)) {\n             name = \"_u\";\n         }\n \n-        // if it's all uppper case, do nothing\n-        if (name.matches(\"^[A-Z_]*$\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e99a086101d6cdff3beebab2a1b92d446fa70e"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjQzMzA1OnYy", "diffSide": "LEFT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo1MzowOVrOFt_enA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo1MzowOVrOFt_enA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3MDI2OA==", "bodyText": "this would never happen, because at this point name has been sanitized with even more restrictive rules", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5427#discussion_r383770268", "createdAt": "2020-02-25T09:53:09Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "diffHunk": "@@ -274,39 +283,36 @@ public String modelFileFolder() {\n \n     @Override\n     public String toParamName(String name) {\n-        // sanitize name\n         name = sanitizeName(name, \"[^\\\\w$]\");\n \n         if (\"_\".equals(name)) {\n             name = \"_u\";\n         }\n \n-        // if it's all uppper case, do nothing\n-        if (name.matches(\"^[A-Z_]*$\")) {\n-            return name;\n-        }\n-\n-        name = getNameUsingModelPropertyNaming(name);\n-\n-        // for reserved word or word starting with number, append _\n-        if (isReservedWord(name) || name.matches(\"^\\\\d.*\")) {\n-            name = escapeReservedWord(name);\n-        }\n+        name = camelize(name, true);\n+        name = toSafeIdentifier(name);\n \n         return name;\n     }\n \n     @Override\n     public String toVarName(String name) {\n-        name = this.toParamName(name);\n-        \n-        // if the property name has any breaking characters such as :, ;, . etc.\n-        // then wrap the name within single quotes.\n-        // my:interface:property: string; => 'my:interface:property': string;\n-        if (propertyHasBreakingCharacters(name)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e99a086101d6cdff3beebab2a1b92d446fa70e"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjQ0MTMwOnYy", "diffSide": "LEFT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/TypeScriptRxjsClientCodegen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo1NToyOFrOFt_jyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo1NToyOFrOFt_jyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3MTU5NQ==", "bodyText": "This was not used either in the class or in the mustache templates. Most likely - copy/paste from another generator with runtime conversion support (like typescript-fetch)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5427#discussion_r383771595", "createdAt": "2020-02-25T09:55:28Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/TypeScriptRxjsClientCodegen.java", "diffHunk": "@@ -89,8 +89,6 @@ public void setNpmRepository(String npmRepository) {\n     @Override\n     public void processOpts() {\n         super.processOpts();\n-        additionalProperties.put(\"isOriginalModelPropertyNaming\", getModelPropertyNaming().equals(\"original\"));\n-        additionalProperties.put(\"modelPropertyNaming\", getModelPropertyNaming());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e99a086101d6cdff3beebab2a1b92d446fa70e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3722, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}