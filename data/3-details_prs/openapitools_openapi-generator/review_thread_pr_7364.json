{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMjYzMzk4", "number": 7364, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMjowMTozMlrOEj24WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzo1NDozMVrOEj7v3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDM0Nzc3OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/JavaVertXWebServer/supportFiles/pom.mustache", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMjowMTozMlrOHSdToQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjo0MTo0N1rOHS5ZgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNjU3Nw==", "bodyText": "@slinkydeveloper Is it correct to say that Vert.x 4.x only works with JDK11 or later?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7364#discussion_r489116577", "createdAt": "2020-09-16T02:01:32Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/resources/JavaVertXWebServer/supportFiles/pom.mustache", "diffHunk": "@@ -65,16 +80,15 @@\n         <plugins>\n             <plugin>\n                 <artifactId>maven-compiler-plugin</artifactId>\n-                <version>3.3</version>\n+                <version>${maven-compiler-plugin.version}</version>\n                 <configuration>\n-                    <source>1.8</source>\n-                    <target>1.8</target>\n+                    <source>11</source>\n+                    <target>11</target>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0252364d1f20d93d789f5d226de26e4be55ea741"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5MjM0MA==", "bodyText": "Nope, it works java 8+", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7364#discussion_r489192340", "createdAt": "2020-09-16T06:26:59Z", "author": {"login": "slinkydeveloper"}, "path": "modules/openapi-generator/src/main/resources/JavaVertXWebServer/supportFiles/pom.mustache", "diffHunk": "@@ -65,16 +80,15 @@\n         <plugins>\n             <plugin>\n                 <artifactId>maven-compiler-plugin</artifactId>\n-                <version>3.3</version>\n+                <version>${maven-compiler-plugin.version}</version>\n                 <configuration>\n-                    <source>1.8</source>\n-                    <target>1.8</target>\n+                    <source>11</source>\n+                    <target>11</target>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNjU3Nw=="}, "originalCommit": {"oid": "0252364d1f20d93d789f5d226de26e4be55ea741"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNDI4NQ==", "bodyText": "Then shall we keep the same value 1.8?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7364#discussion_r489234285", "createdAt": "2020-09-16T07:50:01Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/resources/JavaVertXWebServer/supportFiles/pom.mustache", "diffHunk": "@@ -65,16 +80,15 @@\n         <plugins>\n             <plugin>\n                 <artifactId>maven-compiler-plugin</artifactId>\n-                <version>3.3</version>\n+                <version>${maven-compiler-plugin.version}</version>\n                 <configuration>\n-                    <source>1.8</source>\n-                    <target>1.8</target>\n+                    <source>11</source>\n+                    <target>11</target>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNjU3Nw=="}, "originalCommit": {"oid": "0252364d1f20d93d789f5d226de26e4be55ea741"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3NjgzMg==", "bodyText": "done", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7364#discussion_r489576832", "createdAt": "2020-09-16T16:41:47Z", "author": {"login": "slinkydeveloper"}, "path": "modules/openapi-generator/src/main/resources/JavaVertXWebServer/supportFiles/pom.mustache", "diffHunk": "@@ -65,16 +80,15 @@\n         <plugins>\n             <plugin>\n                 <artifactId>maven-compiler-plugin</artifactId>\n-                <version>3.3</version>\n+                <version>${maven-compiler-plugin.version}</version>\n                 <configuration>\n-                    <source>1.8</source>\n-                    <target>1.8</target>\n+                    <source>11</source>\n+                    <target>11</target>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNjU3Nw=="}, "originalCommit": {"oid": "0252364d1f20d93d789f5d226de26e4be55ea741"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTE0NTI2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaVertXWebServerCodegen.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzo1NDozMVrOHSkqKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQwNzo0Mzo0NVrOHU40Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNzAzNA==", "bodyText": "@slinkydeveloper what about updating typeMapping instead to map these types (e.g. UUID) with \"String\"?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7364#discussion_r489237034", "createdAt": "2020-09-16T07:54:31Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaVertXWebServerCodegen.java", "diffHunk": "@@ -141,11 +135,39 @@ public void postProcessModelProperty(CodegenModel model, CodegenProperty propert\n                 if (operation.returnType == null) {\n                     operation.returnType = \"Void\";\n                 }\n+                if (operation.allParams.stream().anyMatch(p -> p.isFormParam && p.isFile)) {\n+                    // If there is a file upload, exclude other form params since it's not clear how the user should access to these\n+                    operation.allParams = operation\n+                        .allParams\n+                        .stream()\n+                        .filter(p -> !p.isFormParam || p.isFile)\n+                        .collect(Collectors.toList());\n+                } else if (operation.allParams.stream().anyMatch(p -> p.isFormParam)) {\n+                    // In Vert.x 4 Web OpenAPI the forms are handled as single json object\n+                    // We create a dummy param here and remove the other ones\n+                    CodegenParameter dummyParam = new CodegenParameter();\n+                    dummyParam.isFormParam = true;\n+                    dummyParam.isFile = false;\n+                    dummyParam.dataType = \"JsonObject\";\n+                    dummyParam.paramName = \"formBody\";\n+                    operation.allParams = Stream.concat(\n+                        operation.allParams.stream().filter(p -> !p.isFormParam),\n+                        Stream.of(dummyParam)\n+                    ).collect(Collectors.toList());\n+                }\n             }\n         }\n         return newObjs;\n     }\n \n+    @Override\n+    public void postProcessParameter(CodegenParameter parameter) {\n+        super.postProcessParameter(parameter);\n+        if (parameter.isUuid || parameter.isDate || parameter.isDateTime) {\n+            parameter.dataType = \"String\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0252364d1f20d93d789f5d226de26e4be55ea741"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3NTUyNA==", "bodyText": "WDYM? Vert.x doesn't have any \"strong\" mapping for uuid/date/datetime", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7364#discussion_r489575524", "createdAt": "2020-09-16T16:39:40Z", "author": {"login": "slinkydeveloper"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaVertXWebServerCodegen.java", "diffHunk": "@@ -141,11 +135,39 @@ public void postProcessModelProperty(CodegenModel model, CodegenProperty propert\n                 if (operation.returnType == null) {\n                     operation.returnType = \"Void\";\n                 }\n+                if (operation.allParams.stream().anyMatch(p -> p.isFormParam && p.isFile)) {\n+                    // If there is a file upload, exclude other form params since it's not clear how the user should access to these\n+                    operation.allParams = operation\n+                        .allParams\n+                        .stream()\n+                        .filter(p -> !p.isFormParam || p.isFile)\n+                        .collect(Collectors.toList());\n+                } else if (operation.allParams.stream().anyMatch(p -> p.isFormParam)) {\n+                    // In Vert.x 4 Web OpenAPI the forms are handled as single json object\n+                    // We create a dummy param here and remove the other ones\n+                    CodegenParameter dummyParam = new CodegenParameter();\n+                    dummyParam.isFormParam = true;\n+                    dummyParam.isFile = false;\n+                    dummyParam.dataType = \"JsonObject\";\n+                    dummyParam.paramName = \"formBody\";\n+                    operation.allParams = Stream.concat(\n+                        operation.allParams.stream().filter(p -> !p.isFormParam),\n+                        Stream.of(dummyParam)\n+                    ).collect(Collectors.toList());\n+                }\n             }\n         }\n         return newObjs;\n     }\n \n+    @Override\n+    public void postProcessParameter(CodegenParameter parameter) {\n+        super.postProcessParameter(parameter);\n+        if (parameter.isUuid || parameter.isDate || parameter.isDateTime) {\n+            parameter.dataType = \"String\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNzAzNA=="}, "originalCommit": {"oid": "0252364d1f20d93d789f5d226de26e4be55ea741"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTMxNTg1MQ==", "bodyText": "I'll submit a separate PR to show you how I would have done it.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7364#discussion_r491315851", "createdAt": "2020-09-19T07:42:34Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaVertXWebServerCodegen.java", "diffHunk": "@@ -141,11 +135,39 @@ public void postProcessModelProperty(CodegenModel model, CodegenProperty propert\n                 if (operation.returnType == null) {\n                     operation.returnType = \"Void\";\n                 }\n+                if (operation.allParams.stream().anyMatch(p -> p.isFormParam && p.isFile)) {\n+                    // If there is a file upload, exclude other form params since it's not clear how the user should access to these\n+                    operation.allParams = operation\n+                        .allParams\n+                        .stream()\n+                        .filter(p -> !p.isFormParam || p.isFile)\n+                        .collect(Collectors.toList());\n+                } else if (operation.allParams.stream().anyMatch(p -> p.isFormParam)) {\n+                    // In Vert.x 4 Web OpenAPI the forms are handled as single json object\n+                    // We create a dummy param here and remove the other ones\n+                    CodegenParameter dummyParam = new CodegenParameter();\n+                    dummyParam.isFormParam = true;\n+                    dummyParam.isFile = false;\n+                    dummyParam.dataType = \"JsonObject\";\n+                    dummyParam.paramName = \"formBody\";\n+                    operation.allParams = Stream.concat(\n+                        operation.allParams.stream().filter(p -> !p.isFormParam),\n+                        Stream.of(dummyParam)\n+                    ).collect(Collectors.toList());\n+                }\n             }\n         }\n         return newObjs;\n     }\n \n+    @Override\n+    public void postProcessParameter(CodegenParameter parameter) {\n+        super.postProcessParameter(parameter);\n+        if (parameter.isUuid || parameter.isDate || parameter.isDateTime) {\n+            parameter.dataType = \"String\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNzAzNA=="}, "originalCommit": {"oid": "0252364d1f20d93d789f5d226de26e4be55ea741"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY2NDQ3MQ==", "bodyText": "I've filed #7457. Please take a look when you've time.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7364#discussion_r491664471", "createdAt": "2020-09-20T07:43:45Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaVertXWebServerCodegen.java", "diffHunk": "@@ -141,11 +135,39 @@ public void postProcessModelProperty(CodegenModel model, CodegenProperty propert\n                 if (operation.returnType == null) {\n                     operation.returnType = \"Void\";\n                 }\n+                if (operation.allParams.stream().anyMatch(p -> p.isFormParam && p.isFile)) {\n+                    // If there is a file upload, exclude other form params since it's not clear how the user should access to these\n+                    operation.allParams = operation\n+                        .allParams\n+                        .stream()\n+                        .filter(p -> !p.isFormParam || p.isFile)\n+                        .collect(Collectors.toList());\n+                } else if (operation.allParams.stream().anyMatch(p -> p.isFormParam)) {\n+                    // In Vert.x 4 Web OpenAPI the forms are handled as single json object\n+                    // We create a dummy param here and remove the other ones\n+                    CodegenParameter dummyParam = new CodegenParameter();\n+                    dummyParam.isFormParam = true;\n+                    dummyParam.isFile = false;\n+                    dummyParam.dataType = \"JsonObject\";\n+                    dummyParam.paramName = \"formBody\";\n+                    operation.allParams = Stream.concat(\n+                        operation.allParams.stream().filter(p -> !p.isFormParam),\n+                        Stream.of(dummyParam)\n+                    ).collect(Collectors.toList());\n+                }\n             }\n         }\n         return newObjs;\n     }\n \n+    @Override\n+    public void postProcessParameter(CodegenParameter parameter) {\n+        super.postProcessParameter(parameter);\n+        if (parameter.isUuid || parameter.isDate || parameter.isDateTime) {\n+            parameter.dataType = \"String\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNzAzNA=="}, "originalCommit": {"oid": "0252364d1f20d93d789f5d226de26e4be55ea741"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4224, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}