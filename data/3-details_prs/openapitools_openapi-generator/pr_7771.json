{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MDQ5MTM0", "number": 7771, "title": "[typescript-rxjs] Added support for servers", "bodyText": "PR checklist\n\n Read the contribution guidelines.\n Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\nDescription of the PR\n\nallows the typescript-rxjs client to retrieve all server URLs defined in the spec (based on #1361)\nbased on the main typescript project\n\n(if somebody could tell me, if typescript-rxjs is still a good idea to use or if the main typescript generator would be a better option (as it seems to use rxjs as well), I would highly appreciate it)\ncc @TiFu (2017/07) @taxpon (2017/07) @sebastianhaas (2017/07) @kenisteward (2017/07) @Vrolijkx (2017/09) @macjohnny (2018/01) @topce (2018/10) @akehir (2019/07) @petejohansonxo (2019/11) @amakhrov (2020/02)", "createdAt": "2020-10-20T19:37:22Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7771", "merged": true, "mergeCommit": {"oid": "9af73d0a0c64f88ff72bd21e8758b424af78d2d1"}, "closed": true, "closedAt": "2020-10-22T11:09:04Z", "author": {"login": "BenICE"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUfPENABqjM5MDA3NzE1NzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdU9kTdgFqTUxNDQ3MTI2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5c81d2d31140b7b7bf7661dc8db3f9b4477b43b", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e5c81d2d31140b7b7bf7661dc8db3f9b4477b43b", "committedDate": "2020-10-20T19:20:42Z", "message": "regenerated typescript-rxjs samples"}, "afterCommit": {"oid": "2b41a6e0b43331c964c718939d90cc001e77a765", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/2b41a6e0b43331c964c718939d90cc001e77a765", "committedDate": "2020-10-20T20:57:13Z", "message": "regenerated typescript-rxjs samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDAyMjA1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7771#pullrequestreview-513402205", "createdAt": "2020-10-21T07:57:08Z", "commit": {"oid": "2b41a6e0b43331c964c718939d90cc001e77a765"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzo1NzowOFrOHle9Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzo1NzowOFrOHle9Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA2NjU3NA==", "bodyText": "better only export the servers variable\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            export const server{{-index}} = new ServerConfiguration<{ {{#variables}} \"{{name}}\": {{#enumValues}}\"{{.}}\"{{^-last}} | {{/-last}}{{/enumValues}}{{^enumValues}}string{{/enumValues}}{{^-last}},{{/-last}} {{/variables}} }>(\"{{url}}\", { {{#variables}} \"{{name}}\": \"{{defaultValue}}\" {{^-last}},{{/-last}}{{/variables}} }, \"{{description}}\")\n          \n          \n            \n            const server{{-index}} = new ServerConfiguration<{ {{#variables}} \"{{name}}\": {{#enumValues}}\"{{.}}\"{{^-last}} | {{/-last}}{{/enumValues}}{{^enumValues}}string{{/enumValues}}{{^-last}},{{/-last}} {{/variables}} }>(\"{{url}}\", { {{#variables}} \"{{name}}\": \"{{defaultValue}}\" {{^-last}},{{/-last}}{{/variables}} }, \"{{description}}\")\n          \n      \n    \n    \n  \n\nand add server to the reserved keywords in \n  \n    \n      openapi-generator/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/TypeScriptRxjsClientCodegen.java\n    \n    \n        Lines 331 to 347\n      in\n      240c046\n    \n    \n    \n    \n\n        \n          \n           private void addExtraReservedWords() { \n        \n\n        \n          \n               this.reservedWords.add(\"BASE_PATH\"); \n        \n\n        \n          \n               this.reservedWords.add(\"BaseAPI\"); \n        \n\n        \n          \n               this.reservedWords.add(\"COLLECTION_FORMATS\"); \n        \n\n        \n          \n               this.reservedWords.add(\"ConfigurationParameters\"); \n        \n\n        \n          \n               this.reservedWords.add(\"Configuration\"); \n        \n\n        \n          \n               this.reservedWords.add(\"HttpMethod\"); \n        \n\n        \n          \n               this.reservedWords.add(\"HttpHeaders\"); \n        \n\n        \n          \n               this.reservedWords.add(\"HttpQuery\"); \n        \n\n        \n          \n               this.reservedWords.add(\"HttpBody\"); \n        \n\n        \n          \n               this.reservedWords.add(\"RequestArgs\"); \n        \n\n        \n          \n               this.reservedWords.add(\"RequestOpts\"); \n        \n\n        \n          \n               this.reservedWords.add(\"ResponseArgs\"); \n        \n\n        \n          \n               this.reservedWords.add(\"Middleware\"); \n        \n\n        \n          \n               this.reservedWords.add(\"AjaxRequest\"); \n        \n\n        \n          \n               this.reservedWords.add(\"AjaxResponse\"); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nto avoid naming conflicts with existing parameters", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7771#discussion_r509066574", "createdAt": "2020-10-21T07:57:08Z", "author": {"login": "macjohnny"}, "path": "modules/openapi-generator/src/main/resources/typescript-rxjs/servers.mustache", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ *\n+ * Represents the configuration of a server including its\n+ * url template and variable configuration based on the url.\n+ *\n+ */\n+export class ServerConfiguration<T extends { [key: string]: string }> {\n+    public constructor(private url: string, private variableConfiguration: T, private description: string) {}\n+\n+    /**\n+     * Sets the value of the variables of this server.\n+     *\n+     * @param variableConfiguration a partial variable configuration for the variables contained in the url\n+     */\n+    public setVariables(variableConfiguration: Partial<T>) {\n+        Object.assign(this.variableConfiguration, variableConfiguration);\n+    }\n+\n+\tpublic getConfiguration(): T {\n+\t\treturn this.variableConfiguration\n+\t}\n+\n+\tpublic getDescription(): string {\n+\t\treturn this.description\n+\t}\n+\n+\t/**\n+\t * Constructions the URL this server using the url with variables\n+\t * replaced with their respective values\n+\t */\t\n+\tpublic getUrl(): string {\n+\t\tlet replacedUrl = this.url;\n+\t\tfor (const key in this.variableConfiguration) {\n+\t\t\tvar re = new RegExp(\"{\" + key + \"}\",\"g\");\n+\t\t\treplacedUrl = replacedUrl.replace(re, this.variableConfiguration[key]);\n+\t\t}\n+\t\treturn replacedUrl\n+\t}\n+}\n+\n+{{#servers}}\n+export const server{{-index}} = new ServerConfiguration<{ {{#variables}} \"{{name}}\": {{#enumValues}}\"{{.}}\"{{^-last}} | {{/-last}}{{/enumValues}}{{^enumValues}}string{{/enumValues}}{{^-last}},{{/-last}} {{/variables}} }>(\"{{url}}\", { {{#variables}} \"{{name}}\": \"{{defaultValue}}\" {{^-last}},{{/-last}}{{/variables}} }, \"{{description}}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b41a6e0b43331c964c718939d90cc001e77a765"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2063018a5677ac8ddf26b3bb72d690cd719d71a7", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/2063018a5677ac8ddf26b3bb72d690cd719d71a7", "committedDate": "2020-10-21T15:22:31Z", "message": "adding multiple servers support to typescript-rxjs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32e6b950c01384268d96f796a917f89b7d5e35cd", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/32e6b950c01384268d96f796a917f89b7d5e35cd", "committedDate": "2020-10-21T15:45:44Z", "message": "regenerated typescript-rxjs samples"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b41a6e0b43331c964c718939d90cc001e77a765", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/2b41a6e0b43331c964c718939d90cc001e77a765", "committedDate": "2020-10-20T20:57:13Z", "message": "regenerated typescript-rxjs samples"}, "afterCommit": {"oid": "32e6b950c01384268d96f796a917f89b7d5e35cd", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/32e6b950c01384268d96f796a917f89b7d5e35cd", "committedDate": "2020-10-21T15:45:44Z", "message": "regenerated typescript-rxjs samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NDcxMjY5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7771#pullrequestreview-514471269", "createdAt": "2020-10-22T08:17:59Z", "commit": {"oid": "32e6b950c01384268d96f796a917f89b7d5e35cd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODoxNzo1OVrOHmV-ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODoxNzo1OVrOHmV-ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk2Nzk3Mg==", "bodyText": "will there always be servers?\naccording to https://swagger.io/specification/#fixed-fields\nservers is\nAn array of Server Objects, which provide connectivity information to a target server. If the servers property is not provided, or is an empty array, the default value would be a Server Object with a url value of /.\n\nDid you check this works if we have an empty list?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7771#discussion_r509967972", "createdAt": "2020-10-22T08:17:59Z", "author": {"login": "macjohnny"}, "path": "modules/openapi-generator/src/main/resources/typescript-rxjs/runtime.mustache", "diffHunk": "@@ -3,8 +3,9 @@\n import { Observable, of{{#withProgressSubscriber}}, Subscriber{{/withProgressSubscriber}} } from 'rxjs';\n import { ajax, AjaxRequest, AjaxResponse } from 'rxjs/ajax';\n import { map, concatMap } from 'rxjs/operators';\n+import { servers } from './servers';\n \n-export const BASE_PATH = '{{{basePath}}}'.replace(/\\/+$/, '');\n+export const BASE_PATH = servers[0].getUrl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32e6b950c01384268d96f796a917f89b7d5e35cd"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3039, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}