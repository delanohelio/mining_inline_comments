{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTYxMDQx", "number": 5924, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDowNDowN1rODxzWYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDowNzoxMFrODxzaTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTQ4MTI4OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/signing.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDowNDowN1rOGFe2dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDowNDowN1rOGFe2dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMTUyNQ==", "bodyText": "The standard python practice is to use is None when comparing to None.\nCan you change this and the below lines to that pattern?\n\n141\n147\n\nIf a user passes in an instance of a custom class then using self.hash_algorithm == None could be True when we don't expect it to be per https://stackoverflow.com/questions/14247373/python-none-comparison-should-i-use-is-or", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5924#discussion_r408401525", "createdAt": "2020-04-14T20:04:07Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/signing.mustache", "diffHunk": "@@ -118,6 +130,24 @@ class HttpSigningConfiguration(object):\n         self.private_key_path = private_key_path\n         self.private_key_passphrase = private_key_passphrase\n         self.signing_algorithm = signing_algorithm\n+        self.hash_algorithm = hash_algorithm\n+        if signing_scheme == SCHEME_RSA_SHA256:\n+            if self.hash_algorithm == None:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23e28102fa5c427aedff4264af9223a79998ea2b"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTQ5MTM0OnYy", "diffSide": "RIGHT", "path": "samples/openapi3/client/petstore/python-experimental/petstore_api/signing.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDowNzoxMFrOGFe86g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoyMTo0MFrOGFfb6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMzE3OA==", "bodyText": "Where is self.hash_algorithm used other than these exception raising checks?\nIf it is only used for exception raising, why assign it as the self.hash_algorithm instance variable?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5924#discussion_r408403178", "createdAt": "2020-04-14T20:07:10Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/python-experimental/petstore_api/signing.py", "diffHunk": "@@ -126,6 +138,24 @@ def __init__(self, key_id, signing_scheme, private_key_path,\n         self.private_key_path = private_key_path\n         self.private_key_passphrase = private_key_passphrase\n         self.signing_algorithm = signing_algorithm\n+        self.hash_algorithm = hash_algorithm", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23e28102fa5c427aedff4264af9223a79998ea2b"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwODM4Ng==", "bodyText": "It's used while creating the digest in the _get_message_digest function.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5924#discussion_r408408386", "createdAt": "2020-04-14T20:16:43Z", "author": {"login": "sebastien-rosset"}, "path": "samples/openapi3/client/petstore/python-experimental/petstore_api/signing.py", "diffHunk": "@@ -126,6 +138,24 @@ def __init__(self, key_id, signing_scheme, private_key_path,\n         self.private_key_path = private_key_path\n         self.private_key_passphrase = private_key_passphrase\n         self.signing_algorithm = signing_algorithm\n+        self.hash_algorithm = hash_algorithm", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMzE3OA=="}, "originalCommit": {"oid": "23e28102fa5c427aedff4264af9223a79998ea2b"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQxMTExMw==", "bodyText": "Ah, thanks I missed that", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5924#discussion_r408411113", "createdAt": "2020-04-14T20:21:40Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/python-experimental/petstore_api/signing.py", "diffHunk": "@@ -126,6 +138,24 @@ def __init__(self, key_id, signing_scheme, private_key_path,\n         self.private_key_path = private_key_path\n         self.private_key_passphrase = private_key_passphrase\n         self.signing_algorithm = signing_algorithm\n+        self.hash_algorithm = hash_algorithm", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMzE3OA=="}, "originalCommit": {"oid": "23e28102fa5c427aedff4264af9223a79998ea2b"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3536, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}