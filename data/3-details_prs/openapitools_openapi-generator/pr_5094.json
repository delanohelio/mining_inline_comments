{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDA1MjYy", "number": 5094, "title": "[python] Cleanup ThreadPool with atexit rather than __del__", "bodyText": "This removes the __del__ function from the generated Python client,\nand replaces it with a cleanup function. When a ThreadPool is created,\nthe cleanup function is registered with the atexit module.\nThis fixes #5093, where the API client could hang indefinitely at\ngarbage collection.\nRelated to swagger-api/swagger-codegen#10002\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\ncc @taxpon @frol @mbohlool @cbornet @kenjones-cisco @tomplus @Jyhess @slash-arun @spacether", "createdAt": "2020-01-23T14:56:50Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094", "merged": true, "mergeCommit": {"oid": "15345e1620dcbaaff9de4a0a3482e9ffc5255c3a"}, "closed": true, "closedAt": "2020-01-29T05:58:12Z", "author": {"login": "fabianvf"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9Oc8uABqjI5NzQ3NDk4NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-_gPUAFqTM0OTg3NjUzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "469be73aa58c726cc8b4ba9fd6b40572af7185e5", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/469be73aa58c726cc8b4ba9fd6b40572af7185e5", "committedDate": "2020-01-23T14:56:37Z", "message": "Update petstore examples"}, "afterCommit": {"oid": "72baae9af43b3c37688767a79bd802932f9a6182", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/72baae9af43b3c37688767a79bd802932f9a6182", "committedDate": "2020-01-23T18:14:25Z", "message": "Update petstore examples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NTQxODgx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#pullrequestreview-347541881", "createdAt": "2020-01-23T19:12:58Z", "commit": {"oid": "5ec0714980e87e8deec7c062239eb9b5d08e06da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMjo1OFrOFhJjxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMjo1OFrOFhJjxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzk0MQ==", "bodyText": "after the pool is closed and joined we should unregister the atexit -  https://docs.python.org/3/library/atexit.html#atexit.unregister; this is so that we don't keep the client instance in memory until the application dies", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370303941", "createdAt": "2020-01-23T19:12:58Z", "author": {"login": "gaborbernat"}, "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -75,7 +76,13 @@ class ApiClient(object):\n         self.user_agent = '{{#httpUserAgent}}{{{.}}}{{/httpUserAgent}}{{^httpUserAgent}}OpenAPI-Generator/{{{packageVersion}}}/python{{/httpUserAgent}}'\n         self.client_side_validation = configuration.client_side_validation\n \n-    def __del__(self):\n+    def __enter__(self):\n+        return self\n+\n+    def __exit__(self, exc_type, exc_value, traceback):\n+        self.close()\n+\n+    def close(self):\n         if self._pool:\n             self._pool.close()\n             self._pool.join()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec0714980e87e8deec7c062239eb9b5d08e06da"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ec0714980e87e8deec7c062239eb9b5d08e06da", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/5ec0714980e87e8deec7c062239eb9b5d08e06da", "committedDate": "2020-01-23T18:42:34Z", "message": "Test to ensure threadpool is cleaned up"}, "afterCommit": {"oid": "e185e3dd3f0114f69e6ede2d8ca671c2ac853bee", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e185e3dd3f0114f69e6ede2d8ca671c2ac853bee", "committedDate": "2020-01-23T19:20:02Z", "message": "Test to ensure threadpool is cleaned up"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e185e3dd3f0114f69e6ede2d8ca671c2ac853bee", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e185e3dd3f0114f69e6ede2d8ca671c2ac853bee", "committedDate": "2020-01-23T19:20:02Z", "message": "Test to ensure threadpool is cleaned up"}, "afterCommit": {"oid": "32fb9fbf7c4be74c1b68f67aeee32ee6fc95062d", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/32fb9fbf7c4be74c1b68f67aeee32ee6fc95062d", "committedDate": "2020-01-23T19:52:32Z", "message": "Test to ensure threadpool is cleaned up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NTY2Njkx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#pullrequestreview-347566691", "createdAt": "2020-01-23T19:54:27Z", "commit": {"oid": "32fb9fbf7c4be74c1b68f67aeee32ee6fc95062d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOTo1NDoyN1rOFhKv0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOTo1NDoyN1rOFhKv0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyMzQxMQ==", "bodyText": "it looks like atexit.unregister doesn't exist in Python 2, so I added this guard", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370323411", "createdAt": "2020-01-23T19:54:27Z", "author": {"login": "fabianvf"}, "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -75,18 +76,27 @@ class ApiClient(object):\n         self.user_agent = '{{#httpUserAgent}}{{{.}}}{{/httpUserAgent}}{{^httpUserAgent}}OpenAPI-Generator/{{{packageVersion}}}/python{{/httpUserAgent}}'\n         self.client_side_validation = configuration.client_side_validation\n \n-    def __del__(self):\n+    def __enter__(self):\n+        return self\n+\n+    def __exit__(self, exc_type, exc_value, traceback):\n+        self.close()\n+\n+    def close(self):\n         if self._pool:\n             self._pool.close()\n             self._pool.join()\n             self._pool = None\n+            if hasattr(atexit, 'unregister'):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32fb9fbf7c4be74c1b68f67aeee32ee6fc95062d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6140f378c6c88333d66098a345e088957ed7a30", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/b6140f378c6c88333d66098a345e088957ed7a30", "committedDate": "2020-01-23T20:36:18Z", "message": "[python] Cleanup ThreadPool with atexit rather than __del__\n\nThis removes the `__del__` function from the generated Python client,\nand replaces it with a `cleanup` function. When a ThreadPool is created,\nthe cleanup function is registered with the `atexit` module.\n\nThis fixes #5093, where the API client could hang indefinitely at\ngarbage collection."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2e3676e90dadbef86c811d2640b0461e05f93f4", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a2e3676e90dadbef86c811d2640b0461e05f93f4", "committedDate": "2020-01-23T20:36:18Z", "message": "Update petstore examples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6880e3f5e5eb1eb33eda3fa8397002bb5a15f08a", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6880e3f5e5eb1eb33eda3fa8397002bb5a15f08a", "committedDate": "2020-01-23T20:36:18Z", "message": "Test to ensure threadpool is cleaned up"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32fb9fbf7c4be74c1b68f67aeee32ee6fc95062d", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/32fb9fbf7c4be74c1b68f67aeee32ee6fc95062d", "committedDate": "2020-01-23T19:52:32Z", "message": "Test to ensure threadpool is cleaned up"}, "afterCommit": {"oid": "6880e3f5e5eb1eb33eda3fa8397002bb5a15f08a", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6880e3f5e5eb1eb33eda3fa8397002bb5a15f08a", "committedDate": "2020-01-23T20:36:18Z", "message": "Test to ensure threadpool is cleaned up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8c5c5555ff2c996a3d0c385e0f0bb3347f19b3d", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d8c5c5555ff2c996a3d0c385e0f0bb3347f19b3d", "committedDate": "2020-01-23T22:15:51Z", "message": "Docs now encourage using the context manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70f802176b7d6ef136e94b2b3bde74c4995b8454", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/70f802176b7d6ef136e94b2b3bde74c4995b8454", "committedDate": "2020-01-23T22:18:35Z", "message": "Regenerate docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979", "author": {"user": {"login": "fabianvf", "name": "Fabian von Feilitzsch"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/1d179e03b3009c76e5977668cdaa53adff6ef979", "committedDate": "2020-01-24T19:54:29Z", "message": "Update samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQ0NTk1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#pullrequestreview-348244595", "createdAt": "2020-01-24T21:49:33Z", "commit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0OTozM1rOFhrXOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0OTozM1rOFhrXOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Nzc4Nw==", "bodyText": "Can you add a line above {{#hasAuthMethods}} instantiating configuration?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370857787", "createdAt": "2020-01-24T21:49:33Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/api_doc_example.mustache", "diffHunk": "@@ -8,22 +8,26 @@ from pprint import pprint\n {{#hasAuthMethods}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQ2MjIx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#pullrequestreview-348246221", "createdAt": "2020-01-24T21:53:15Z", "commit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MzoxNVrOFhrcSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MzoxNVrOFhrcSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1OTA4Mg==", "bodyText": "Can you add a line above {{#hasAuthMethods}} instantiating configuration?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370859082", "createdAt": "2020-01-24T21:53:15Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api_doc_example.mustache", "diffHunk": "@@ -7,51 +7,55 @@ from pprint import pprint\n {{#hasAuthMethods}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQ4NjI3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#pullrequestreview-348248627", "createdAt": "2020-01-24T21:58:25Z", "commit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1ODoyNVrOFhrjsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1ODoyNVrOFhrjsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MDk3Nw==", "bodyText": "Aren't these blocks {{#hasAuthMethods}}/{{^hasAuthMethods}} identical except for setting\nconfiguration.host?\nPlease move the identical block contents  underneath the {{/hasAuthMethods}} on line 25", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370860977", "createdAt": "2020-01-24T21:58:25Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/api_doc_example.mustache", "diffHunk": "@@ -8,22 +8,26 @@ from pprint import pprint\n {{#hasAuthMethods}}\n # Defining host is optional and default to {{{basePath}}}\n configuration.host = \"{{{basePath}}}\"\n-# Create an instance of the API class\n-api_instance = {{{packageName}}}.{{{classname}}}({{{packageName}}}.ApiClient(configuration))\n-{{#allParams}}{{paramName}} = {{{example}}} # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}\n-{{/allParams}}\n+# Enter a context with an instance of the API client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQ5MTc0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#pullrequestreview-348249174", "createdAt": "2020-01-24T21:59:37Z", "commit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1OTozN1rOFhrlPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1OTozN1rOFhrlPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTM3Mw==", "bodyText": "Do we need to instantiate configuration here?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370861373", "createdAt": "2020-01-24T21:59:37Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/README_common.mustache", "diffHunk": "@@ -7,18 +7,20 @@ from pprint import pprint\n {{> python_doc_auth_partial}}\n # Defining host is optional and default to {{{basePath}}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQ5NzYw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#pullrequestreview-348249760", "createdAt": "2020-01-24T22:00:57Z", "commit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowMDo1N1rOFhrm8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowMDo1N1rOFhrm8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTgxMA==", "bodyText": "Aren't these blocks {{#hasAuthMethods}}/{{^hasAuthMethods}} identical except for setting\nconfiguration.host?\nPlease move the identical block contents  underneath the {{/hasAuthMethods}} on line 20", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370861810", "createdAt": "2020-01-24T22:00:57Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api_doc_example.mustache", "diffHunk": "@@ -7,51 +7,55 @@ from pprint import pprint\n {{#hasAuthMethods}}\n # Defining host is optional and default to {{{basePath}}}\n configuration.host = \"{{{basePath}}}\"\n-# Create an instance of the API class\n-api_instance = {{{packageName}}}.{{{classname}}}({{{packageName}}}.ApiClient(configuration))\n+# Enter a context with an instance of the API client\n+with {{{packageName}}}.ApiClient(configuration) as api_client:\n+    # Create an instance of the API class\n+    api_instance = {{{packageName}}}.{{{classname}}}(api_client)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODc2NTM3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#pullrequestreview-349876537", "createdAt": "2020-01-29T05:57:28Z", "commit": {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2852, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}