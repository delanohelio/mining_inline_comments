{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNDUzODE3", "number": 5642, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjoxMToxNlrODp2B9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjoxMToxNlrODp2B9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjAzNDQ2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/C-libcurl/apiClient.c.mustache", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjoxMToxNlrOF5RP_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjozMzozMVrOF5R4Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU5NTc3NA==", "bodyText": "I think\ndecoded_byte_index\nshoud change to\n*decoded_byte_index\n\nin the function \"base64decode\"", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5642#discussion_r395595774", "createdAt": "2020-03-20T12:11:16Z", "author": {"login": "ityuhui"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/apiClient.c.mustache", "diffHunk": "@@ -606,7 +606,7 @@ char *sbi_base64decode (const void *b64_decode_this, int decode_this_many_bytes)\n     BIO_write(mem_bio, b64_decode_this, decode_this_many_bytes); //Base64 data saved in source.\n     BIO_push(b64_bio, mem_bio);          //Link the BIOs by creating a filter-source BIO chain.\n     BIO_set_flags(b64_bio, BIO_FLAGS_BASE64_NO_NL);          //Don't require trailing newlines.\n-    int decoded_byte_index = 0;   //Index where the next base64_decoded byte should be written.\n+    decoded_byte_index = 0;   //Index where the next base64_decoded byte should be written.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5558b6c11b28d5b373d528a272eb5569b85650d9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwNjA5NA==", "bodyText": "Thank @ityuhui , I changed the assigning to use local variable and then assign it to pointer as ++ is not working on pointer variables.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5642#discussion_r395606094", "createdAt": "2020-03-20T12:33:31Z", "author": {"login": "zhemant"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/apiClient.c.mustache", "diffHunk": "@@ -606,7 +606,7 @@ char *sbi_base64decode (const void *b64_decode_this, int decode_this_many_bytes)\n     BIO_write(mem_bio, b64_decode_this, decode_this_many_bytes); //Base64 data saved in source.\n     BIO_push(b64_bio, mem_bio);          //Link the BIOs by creating a filter-source BIO chain.\n     BIO_set_flags(b64_bio, BIO_FLAGS_BASE64_NO_NL);          //Don't require trailing newlines.\n-    int decoded_byte_index = 0;   //Index where the next base64_decoded byte should be written.\n+    decoded_byte_index = 0;   //Index where the next base64_decoded byte should be written.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU5NTc3NA=="}, "originalCommit": {"oid": "5558b6c11b28d5b373d528a272eb5569b85650d9"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3672, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}