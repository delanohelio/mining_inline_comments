{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4ODI3Mzgz", "number": 5162, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODowNDo1OVrODb05dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOToyNDoxNlrODb2LGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTA0ODIxOnYy", "diffSide": "RIGHT", "path": "docs/generators/javascript-flowtyped.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODowNDo1OVrOFjiLew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOToyMDowMVrOFjkDYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgwNDQ3NQ==", "bodyText": "why is the javascript-flowtyped affected?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5162#discussion_r372804475", "createdAt": "2020-01-30T08:04:59Z", "author": {"login": "macjohnny"}, "path": "docs/generators/javascript-flowtyped.md", "diffHunk": "@@ -7,6 +7,7 @@ sidebar_label: javascript-flowtyped\n | ------ | ----------- | ------ | ------- |\n |allowUnicodeIdentifiers|boolean, toggles whether unicode identifiers are allowed in names or not, default is false| |false|\n |ensureUniqueParams|Whether to ensure parameter names are unique in an operation (rename parameters that are not).| |true|\n+|enumPropertyNaming|Naming convention for enum properties: 'camelCase', 'PascalCase', 'snake_case', 'UPPERCASE', and 'original'| |PascalCase|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78843d1c6104aa050f003061a98ec4e7562a3462"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgwNTU3OA==", "bodyText": "I was surprised also.\nBut apparently,\nclass JavascriptFlowtypedClientCodegen extends AbstractTypeScriptClientCodegen", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5162#discussion_r372805578", "createdAt": "2020-01-30T08:08:28Z", "author": {"login": "amakhrov"}, "path": "docs/generators/javascript-flowtyped.md", "diffHunk": "@@ -7,6 +7,7 @@ sidebar_label: javascript-flowtyped\n | ------ | ----------- | ------ | ------- |\n |allowUnicodeIdentifiers|boolean, toggles whether unicode identifiers are allowed in names or not, default is false| |false|\n |ensureUniqueParams|Whether to ensure parameter names are unique in an operation (rename parameters that are not).| |true|\n+|enumPropertyNaming|Naming convention for enum properties: 'camelCase', 'PascalCase', 'snake_case', 'UPPERCASE', and 'original'| |PascalCase|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgwNDQ3NQ=="}, "originalCommit": {"oid": "78843d1c6104aa050f003061a98ec4e7562a3462"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzNTE3MA==", "bodyText": "ah, ok alright", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5162#discussion_r372835170", "createdAt": "2020-01-30T09:20:01Z", "author": {"login": "macjohnny"}, "path": "docs/generators/javascript-flowtyped.md", "diffHunk": "@@ -7,6 +7,7 @@ sidebar_label: javascript-flowtyped\n | ------ | ----------- | ------ | ------- |\n |allowUnicodeIdentifiers|boolean, toggles whether unicode identifiers are allowed in names or not, default is false| |false|\n |ensureUniqueParams|Whether to ensure parameter names are unique in an operation (rename parameters that are not).| |true|\n+|enumPropertyNaming|Naming convention for enum properties: 'camelCase', 'PascalCase', 'snake_case', 'UPPERCASE', and 'original'| |PascalCase|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgwNDQ3NQ=="}, "originalCommit": {"oid": "78843d1c6104aa050f003061a98ec4e7562a3462"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTI1NDA0OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOToyMzowOVrOFjkJKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzo1MDo1M1rOFj0Lzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzNjY1MA==", "bodyText": "maybe the available values in ENUM_PROPERTY_NAMING_TYPE could be listed automatically, so the comment will not be outdated", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5162#discussion_r372836650", "createdAt": "2020-01-30T09:23:09Z", "author": {"login": "macjohnny"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "diffHunk": "@@ -588,6 +592,37 @@ public String toEnumName(CodegenProperty property) {\n         }\n     }\n \n+    protected void setEnumPropertyNaming(String naming) {\n+        try {\n+            enumPropertyNaming = ENUM_PROPERTY_NAMING_TYPE.valueOf(naming);\n+        } catch (IllegalArgumentException e) {\n+            throw new IllegalArgumentException(\"Invalid enum property naming '\" +\n+                    naming + \"'. Must be 'original', 'camelCase', \" +\n+                    \"'PascalCase', 'snake_case', or 'UPPERCASE'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a9a1ba45debac2d55ff1cd131f1663c4c459c8"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzODI2Mw==", "bodyText": "Good idea, will do!", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5162#discussion_r372838263", "createdAt": "2020-01-30T09:26:31Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "diffHunk": "@@ -588,6 +592,37 @@ public String toEnumName(CodegenProperty property) {\n         }\n     }\n \n+    protected void setEnumPropertyNaming(String naming) {\n+        try {\n+            enumPropertyNaming = ENUM_PROPERTY_NAMING_TYPE.valueOf(naming);\n+        } catch (IllegalArgumentException e) {\n+            throw new IllegalArgumentException(\"Invalid enum property naming '\" +\n+                    naming + \"'. Must be 'original', 'camelCase', \" +\n+                    \"'PascalCase', 'snake_case', or 'UPPERCASE'\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzNjY1MA=="}, "originalCommit": {"oid": "26a9a1ba45debac2d55ff1cd131f1663c4c459c8"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5OTQ3MA==", "bodyText": "and done", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5162#discussion_r373099470", "createdAt": "2020-01-30T17:50:53Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "diffHunk": "@@ -588,6 +592,37 @@ public String toEnumName(CodegenProperty property) {\n         }\n     }\n \n+    protected void setEnumPropertyNaming(String naming) {\n+        try {\n+            enumPropertyNaming = ENUM_PROPERTY_NAMING_TYPE.valueOf(naming);\n+        } catch (IllegalArgumentException e) {\n+            throw new IllegalArgumentException(\"Invalid enum property naming '\" +\n+                    naming + \"'. Must be 'original', 'camelCase', \" +\n+                    \"'PascalCase', 'snake_case', or 'UPPERCASE'\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzNjY1MA=="}, "originalCommit": {"oid": "26a9a1ba45debac2d55ff1cd131f1663c4c459c8"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTI1NzIzOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/typescript/typescriptangular/TypeScriptAngularClientCodegenTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOToyNDoxNlrOFjkLKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzo1MDoyNlrOFj0K-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzNzE2Mw==", "bodyText": "maybe you would want to add a test for the non-original case, too?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5162#discussion_r372837163", "createdAt": "2020-01-30T09:24:16Z", "author": {"login": "macjohnny"}, "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/typescript/typescriptangular/TypeScriptAngularClientCodegenTest.java", "diffHunk": "@@ -16,6 +17,22 @@\n \n \n public class TypeScriptAngularClientCodegenTest {\n+    @Test\n+    public void toEnumVarName() {\n+        TypeScriptAngularClientCodegen codegen = new TypeScriptAngularClientCodegen();\n+        codegen.processOpts();\n+\n+        Assert.assertEquals(codegen.toEnumVarName(\"valid_id\", \"string\"), \"ValidId\");\n+        Assert.assertEquals(codegen.toEnumVarName(\"illegal-id+\", \"string\"), \"IllegalId\");\n+\n+        codegen = new TypeScriptAngularClientCodegen();\n+        codegen.additionalProperties().put(CodegenConstants.ENUM_PROPERTY_NAMING, CodegenConstants.ENUM_PROPERTY_NAMING_TYPE.original.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a9a1ba45debac2d55ff1cd131f1663c4c459c8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5OTI1Nw==", "bodyText": "Done", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5162#discussion_r373099257", "createdAt": "2020-01-30T17:50:26Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/typescript/typescriptangular/TypeScriptAngularClientCodegenTest.java", "diffHunk": "@@ -16,6 +17,22 @@\n \n \n public class TypeScriptAngularClientCodegenTest {\n+    @Test\n+    public void toEnumVarName() {\n+        TypeScriptAngularClientCodegen codegen = new TypeScriptAngularClientCodegen();\n+        codegen.processOpts();\n+\n+        Assert.assertEquals(codegen.toEnumVarName(\"valid_id\", \"string\"), \"ValidId\");\n+        Assert.assertEquals(codegen.toEnumVarName(\"illegal-id+\", \"string\"), \"IllegalId\");\n+\n+        codegen = new TypeScriptAngularClientCodegen();\n+        codegen.additionalProperties().put(CodegenConstants.ENUM_PROPERTY_NAMING, CodegenConstants.ENUM_PROPERTY_NAMING_TYPE.original.name());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzNzE2Mw=="}, "originalCommit": {"oid": "26a9a1ba45debac2d55ff1cd131f1663c4c459c8"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3886, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}