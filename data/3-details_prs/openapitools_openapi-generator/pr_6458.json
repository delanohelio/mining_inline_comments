{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MDkxNjI5", "number": 6458, "title": "[python] Fix date-time parsing", "bodyText": "Fixes #6433\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\n@taxpon (2017/07) @frol (2017/07) @mbohlool (2017/07) @cbornet (2017/09) @kenjones-cisco (2017/11) @tomplus (2018/10) @Jyhess (2019/01) @arun-nalla (2019/11) @spacether (2019/11)", "createdAt": "2020-05-27T20:16:05Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458", "merged": true, "mergeCommit": {"oid": "d07f459ce35d3eaf54330e3d5e356a92ee32bfe1"}, "closed": true, "closedAt": "2020-06-04T01:26:32Z", "author": {"login": "jirikuncar"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclfFiRgH2gAyNDI0MDkxNjI5OjdmNzFjNWY0YzYwY2RhZTU2OTkxODYzMTljNDY2NmQ1YjY0ZGI4OTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnzAMfAFqTQyNDAyNTA4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7f71c5f4c60cdae5699186319c4666d5b64db899", "author": {"user": {"login": "jirikuncar", "name": "Jiri Kuncar"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7f71c5f4c60cdae5699186319c4666d5b64db899", "committedDate": "2020-05-27T20:14:23Z", "message": "Date and date-time examples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54d14bddaf3615a26242d76381a13efe29d55052", "author": {"user": {"login": "jirikuncar", "name": "Jiri Kuncar"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/54d14bddaf3615a26242d76381a13efe29d55052", "committedDate": "2020-05-27T20:14:23Z", "message": "[python-experimental] fix date-time processing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMTI5Mzc2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#pullrequestreview-420129376", "createdAt": "2020-05-28T13:52:53Z", "commit": {"oid": "54d14bddaf3615a26242d76381a13efe29d55052"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzo1Mjo1M1rOGb2JeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzo1Mjo1M1rOGb2JeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg1MTg5Ng==", "bodyText": "I suggest adding a few unit tests to show deserialization with time zone. Since shipDate is part or the Order schema, you can edit samples/openapi3/client/petstore/python-experimental/test/test_order.py to add unit tests there.\nCurrently there are no unit tests in that particular file, you can look for unit test examples in test_drawing.py and samples/openapi3/client/petstore/python-experimental/tests/*.py.\nIt should be easy to add a few unit test cases with positive and negative tests, i.e. with correct date/datetime, incorrect dates/datetime, correct/incorrect timezone.\nUpdate: the issue you have reported is about codegen failing when the OAS doc has time zone information, as opposed to runtime failures based on the payload. Still, I think it would be good to validate the python serialization/deserialization works properly with some test payloads", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#discussion_r431851896", "createdAt": "2020-05-28T13:52:53Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml", "diffHunk": "@@ -1202,6 +1203,7 @@ components:\n         shipDate:\n           type: string\n           format: date-time\n+          example: '2020-02-02T20:20:20.000222Z'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54d14bddaf3615a26242d76381a13efe29d55052"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMTc3Njc1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#pullrequestreview-420177675", "createdAt": "2020-05-28T14:36:06Z", "commit": {"oid": "54d14bddaf3615a26242d76381a13efe29d55052"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDozNjowNlrOGb4OSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDozNjowNlrOGb4OSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4NTg5Nw==", "bodyText": "You could put an example with a timezone offset, such as 2007-12-03T10:15:30+01:00", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#discussion_r431885897", "createdAt": "2020-05-28T14:36:06Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml", "diffHunk": "@@ -1462,9 +1464,11 @@ components:\n         date:\n           type: string\n           format: date\n+          example: '2020-02-02'\n         dateTime:\n           type: string\n           format: date-time\n+          example: '2020-02-02T20:20:20.000222Z'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54d14bddaf3615a26242d76381a13efe29d55052"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTE0ODUy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#pullrequestreview-421114852", "createdAt": "2020-05-29T16:40:49Z", "commit": {"oid": "54d14bddaf3615a26242d76381a13efe29d55052"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjo0MDo1MFrOGckJuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjo0MDo1MFrOGckJuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYwNTYyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      example: '2020-02-02T20:20:20.000222Z'\n          \n          \n            \n                      example: '2007-12-03T10:15:30+01:00'", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#discussion_r432605625", "createdAt": "2020-05-29T16:40:50Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml", "diffHunk": "@@ -1462,9 +1464,11 @@ components:\n         date:\n           type: string\n           format: date\n+          example: '2020-02-02'\n         dateTime:\n           type: string\n           format: date-time\n+          example: '2020-02-02T20:20:20.000222Z'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54d14bddaf3615a26242d76381a13efe29d55052"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4192348c8594c23612cdf00e2b20a7655bac423", "author": {"user": {"login": "jirikuncar", "name": "Jiri Kuncar"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/b4192348c8594c23612cdf00e2b20a7655bac423", "committedDate": "2020-05-29T16:42:16Z", "message": "Apply suggestions from code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzEyOTM5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#pullrequestreview-421312939", "createdAt": "2020-05-29T21:42:49Z", "commit": {"oid": "b4192348c8594c23612cdf00e2b20a7655bac423"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo0Mjo1MFrOGcs6rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo0Mjo1MFrOGcs6rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0OTIyOA==", "bodyText": "Can you explain what this code is doing?\nIs it assigning the UTC time zone if the date lacks a time zone?\nIf so I am concerned that we are adding information which is not present.\nIs there a spec which directs us to do this?\nWhat happens when invalid values are set as examples/defaults like \"1-2\" or \"NotADateOrDateTime\"?\nHow about adding a sample spec with invalid dates at:\nhttps://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/test/resources/2_0/issue-xxx.yaml\nAnd adding a pythonclientexperimentaltest.java test case?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#discussion_r432749228", "createdAt": "2020-05-29T21:42:50Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "diffHunk": "@@ -235,15 +235,19 @@ public String toDefaultValue(Schema p) {\n             // convert the example if it exists\n             Object currentExample = p.getExample();\n             if (currentExample != null) {\n-                date = (Date) currentExample;\n+                try {\n+                    date = (OffsetDateTime) currentExample;\n+                } catch (ClassCastException e) {\n+                    date = ((Date) currentExample).toInstant().atOffset(ZoneOffset.UTC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4192348c8594c23612cdf00e2b20a7655bac423"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDM5MDYw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#pullrequestreview-421439060", "createdAt": "2020-05-30T19:57:54Z", "commit": {"oid": "b4192348c8594c23612cdf00e2b20a7655bac423"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxOTo1Nzo1NVrOGc1DNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMDowNDoyMFrOGc1Exg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MjQ4NA==", "bodyText": "I'd recommend using DateTimeFormatter.ISO_DATE_TIME, which accurately represents the structure supported by the date-time datatype of OpenAPI Spec.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#discussion_r432882484", "createdAt": "2020-05-30T19:57:55Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "diffHunk": "@@ -212,20 +213,19 @@ public String toDefaultValue(Schema p) {\n         }\n \n         // convert datetime and date enums if they exist\n-        DateFormat iso8601Date = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.ROOT);\n-        DateFormat iso8601DateTime = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", Locale.ROOT);\n-        TimeZone utc = TimeZone.getTimeZone(\"UTC\");\n-        iso8601Date.setTimeZone(utc);\n-        iso8601DateTime.setTimeZone(utc);\n+        DateTimeFormatter iso8601Date = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\", Locale.ROOT);\n+        DateTimeFormatter iso8601DateTime = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", Locale.ROOT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4192348c8594c23612cdf00e2b20a7655bac423"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MjcxNA==", "bodyText": "I'd recommend using DateTimeFormatter.ISO_LOCAL_DATE which resolves values strictly. That is, it will fail for invalid dates.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#discussion_r432882714", "createdAt": "2020-05-30T20:01:21Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "diffHunk": "@@ -212,20 +213,19 @@ public String toDefaultValue(Schema p) {\n         }\n \n         // convert datetime and date enums if they exist\n-        DateFormat iso8601Date = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.ROOT);\n-        DateFormat iso8601DateTime = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", Locale.ROOT);\n-        TimeZone utc = TimeZone.getTimeZone(\"UTC\");\n-        iso8601Date.setTimeZone(utc);\n-        iso8601DateTime.setTimeZone(utc);\n+        DateTimeFormatter iso8601Date = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\", Locale.ROOT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4192348c8594c23612cdf00e2b20a7655bac423"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4Mjg0NQ==", "bodyText": "I think this and the following line will result in odd conversion if the input is not in UTC?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#discussion_r432882845", "createdAt": "2020-05-30T20:03:25Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "diffHunk": "@@ -212,20 +213,19 @@ public String toDefaultValue(Schema p) {\n         }\n \n         // convert datetime and date enums if they exist\n-        DateFormat iso8601Date = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.ROOT);\n-        DateFormat iso8601DateTime = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", Locale.ROOT);\n-        TimeZone utc = TimeZone.getTimeZone(\"UTC\");\n-        iso8601Date.setTimeZone(utc);\n-        iso8601DateTime.setTimeZone(utc);\n+        DateTimeFormatter iso8601Date = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\", Locale.ROOT);\n+        DateTimeFormatter iso8601DateTime = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", Locale.ROOT);\n+        iso8601Date.withZone(ZoneOffset.UTC.normalized());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4192348c8594c23612cdf00e2b20a7655bac423"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4Mjg4Ng==", "bodyText": "This second operation should probably be wrapped in a try/catch with a warning which returns an empty string whenever the value can't be parsed.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#discussion_r432882886", "createdAt": "2020-05-30T20:04:20Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "diffHunk": "@@ -235,15 +235,19 @@ public String toDefaultValue(Schema p) {\n             // convert the example if it exists\n             Object currentExample = p.getExample();\n             if (currentExample != null) {\n-                date = (Date) currentExample;\n+                try {\n+                    date = (OffsetDateTime) currentExample;\n+                } catch (ClassCastException e) {\n+                    date = ((Date) currentExample).toInstant().atOffset(ZoneOffset.UTC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4192348c8594c23612cdf00e2b20a7655bac423"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12ffeb0da503b794e9be7b5eda80f912a86e576a", "author": {"user": {"login": "jirikuncar", "name": "Jiri Kuncar"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/12ffeb0da503b794e9be7b5eda80f912a86e576a", "committedDate": "2020-06-01T11:29:53Z", "message": "Resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eae87fd1cda42670299cbcc3bc475cc470f6497", "author": {"user": {"login": "jirikuncar", "name": "Jiri Kuncar"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6eae87fd1cda42670299cbcc3bc475cc470f6497", "committedDate": "2020-06-01T11:34:18Z", "message": "Merge remote-tracking branch 'origin/jirikuncar/python-experimental/date-time-parsing' into jirikuncar/python-experimental/date-time-parsing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24832a1cc13dd42a5fd2a7df1d02ae8212cc62e2", "author": {"user": {"login": "jirikuncar", "name": "Jiri Kuncar"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/24832a1cc13dd42a5fd2a7df1d02ae8212cc62e2", "committedDate": "2020-06-01T14:01:46Z", "message": "Fix date(-time) example parsing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5da6b763eed7304a7ffd59c8e6daa78e3d29c565", "author": {"user": {"login": "jirikuncar", "name": "Jiri Kuncar"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/5da6b763eed7304a7ffd59c8e6daa78e3d29c565", "committedDate": "2020-06-01T14:05:51Z", "message": "Merge remote-tracking branch 'upstream/master' into jirikuncar/python-experimental/date-time-parsing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1ba8b3250ffa23e54d24e5ea9431da0185d997e", "author": {"user": {"login": "jirikuncar", "name": "Jiri Kuncar"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a1ba8b3250ffa23e54d24e5ea9431da0185d997e", "committedDate": "2020-06-01T16:24:09Z", "message": "Add unit test for toDefaultValue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDI1MDgz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6458#pullrequestreview-424025083", "createdAt": "2020-06-04T00:34:30Z", "commit": {"oid": "a1ba8b3250ffa23e54d24e5ea9431da0185d997e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2159, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}