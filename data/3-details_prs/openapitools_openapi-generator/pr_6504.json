{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NTczMDg0", "number": 6504, "title": "[JS] adding handling for epoch dates", "bodyText": "\u2026 (#6497)\nAdded simple branching logic where a number is sent directly to the Date constructor or execute the previous logic.\n\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\ncc @CodeNinjai @frol @cliffano", "createdAt": "2020-05-31T07:18:03Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6504", "merged": true, "mergeCommit": {"oid": "9f1d012d14601a25fb6faeb9f790412efec19fae"}, "closed": true, "closedAt": "2020-08-04T15:55:38Z", "author": {"login": "tray2100"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmtwmagBqjMzOTA3MzA0OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7n4mYAFqTQ2MDg5NDgzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b11630f0059ff9d7cdfd19246a0920d72e517fe", "author": {"user": {"login": "tray2100", "name": "Troy P"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8b11630f0059ff9d7cdfd19246a0920d72e517fe", "committedDate": "2020-05-31T07:06:52Z", "message": "adding handling for epoch dates in javascript ApiClient mustache file (#6497)"}, "afterCommit": {"oid": "40a7e53b19267611d11c307f8aead367050d8fd3", "author": {"user": {"login": "mik-laj", "name": "Kamil Bregu\u0142a"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/40a7e53b19267611d11c307f8aead367050d8fd3", "committedDate": "2020-05-30T15:15:53Z", "message": "Improve handling spaces in example command (#6482)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd7910c47ea3a12ad63677c26087d9b7b2c3b37c", "author": {"user": {"login": "tray2100", "name": "Troy P"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/cd7910c47ea3a12ad63677c26087d9b7b2c3b37c", "committedDate": "2020-06-13T09:36:04Z", "message": "adding handling for epoch dates in javascript ApiClient mustache file (#6497)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4fc19770422aa1b288377b5c9b6dddfe89de1437", "author": {"user": {"login": "tray2100", "name": "Troy P"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/4fc19770422aa1b288377b5c9b6dddfe89de1437", "committedDate": "2020-05-31T15:52:43Z", "message": "adding handling for epoch dates in javascript ApiClient mustache file (#6497)"}, "afterCommit": {"oid": "cd7910c47ea3a12ad63677c26087d9b7b2c3b37c", "author": {"user": {"login": "tray2100", "name": "Troy P"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/cd7910c47ea3a12ad63677c26087d9b7b2c3b37c", "committedDate": "2020-06-13T09:36:04Z", "message": "adding handling for epoch dates in javascript ApiClient mustache file (#6497)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwODk0ODMz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6504#pullrequestreview-460894833", "createdAt": "2020-08-04T14:55:43Z", "commit": {"oid": "cd7910c47ea3a12ad63677c26087d9b7b2c3b37c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDo1NTo0NFrOG7kRCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDo1NTo0NFrOG7kRCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTExMzM1Mw==", "bodyText": "The Number.isNaN() method determines whether a value is NaN (Not-A-Number).\n\nRef: https://www.w3schools.com/jsref/jsref_isnan_number.asp\nDid you mean to check if str is a number?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6504#discussion_r465113353", "createdAt": "2020-08-04T14:55:44Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/resources/Javascript/ApiClient.mustache", "diffHunk": "@@ -541,12 +541,15 @@\n {{/usePromises}}  };\n \n {{#emitJSDoc}}  /**\n-   * Parses an ISO-8601 string representation of a date value.\n+   * Parses an ISO-8601 string representation or epoch representation of a date value.\n    * @param {String} str The date value as a string.\n    * @returns {Date} The parsed date object.\n    */\n {{/emitJSDoc}}  exports.parseDate = function(str) {\n-    return new Date(str.replace(/T/i, ' '));\n+    if (isNaN(str)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7910c47ea3a12ad63677c26087d9b7b2c3b37c"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2190, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}