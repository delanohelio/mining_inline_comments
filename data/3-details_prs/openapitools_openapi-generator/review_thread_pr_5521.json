{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNTU2OTc0", "number": 5521, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODowMjo1OVrODo1J3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODowMjo1OVrODo1J3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTQwNTEwOnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/typescript/tests/default/test/api/PetApi.test.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODowMjo1OVrOF3n9xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwOToxMjoyNlrOGHGQ5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3MDc4OA==", "bodyText": "Not sure I agree that mutating the Buffer is more convenient or even more intuitive than passing a composite of {name, data}.\nWhat is the benefit of this approach?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5521#discussion_r393870788", "createdAt": "2020-03-17T18:02:59Z", "author": {"login": "amakhrov"}, "path": "samples/client/petstore/typescript/tests/default/test/api/PetApi.test.ts", "diffHunk": "@@ -120,7 +120,7 @@ describe(\"PetApi\", () =>{\n \n     it(\"uploadFile\", (done) => {\n         const image = fs.readFileSync(__dirname + \"/pet.png\")\n-        petApi.uploadFile(pet.id, \"Metadata\", { name: \"pet.png\", data: image}).then((response: any) => {\n+        petApi.uploadFile(pet.id, \"Metadata\", Object.assign(image, { name: \"pet.png\" })).then((response: any) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3106f9cd39f170561cb8bd03354f301574b8c7e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4MjExMw==", "bodyText": "True, for node you could argue this not more / less convenient.\nI mostly did it because of the browser platform though.\nThere you usually handle File objects, which already contain a name.\nI'd be happy to hear how you would weigh this.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5521#discussion_r394182113", "createdAt": "2020-03-18T08:42:07Z", "author": {"login": "bodograumann"}, "path": "samples/client/petstore/typescript/tests/default/test/api/PetApi.test.ts", "diffHunk": "@@ -120,7 +120,7 @@ describe(\"PetApi\", () =>{\n \n     it(\"uploadFile\", (done) => {\n         const image = fs.readFileSync(__dirname + \"/pet.png\")\n-        petApi.uploadFile(pet.id, \"Metadata\", { name: \"pet.png\", data: image}).then((response: any) => {\n+        petApi.uploadFile(pet.id, \"Metadata\", Object.assign(image, { name: \"pet.png\" })).then((response: any) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3MDc4OA=="}, "originalCommit": {"oid": "c3106f9cd39f170561cb8bd03354f301574b8c7e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYwNzc5Mg==", "bodyText": "This could also be an generator-specific configuration, couldn't it? Just generate the appropriate wrapper ({name, data} composite for anything node, and what is in this PR for the browser) and then internally map this to an appropriate type before doing all the api logic.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5521#discussion_r399607792", "createdAt": "2020-03-28T02:26:27Z", "author": {"login": "TiFu"}, "path": "samples/client/petstore/typescript/tests/default/test/api/PetApi.test.ts", "diffHunk": "@@ -120,7 +120,7 @@ describe(\"PetApi\", () =>{\n \n     it(\"uploadFile\", (done) => {\n         const image = fs.readFileSync(__dirname + \"/pet.png\")\n-        petApi.uploadFile(pet.id, \"Metadata\", { name: \"pet.png\", data: image}).then((response: any) => {\n+        petApi.uploadFile(pet.id, \"Metadata\", Object.assign(image, { name: \"pet.png\" })).then((response: any) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3MDc4OA=="}, "originalCommit": {"oid": "c3106f9cd39f170561cb8bd03354f301574b8c7e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5NTg0NA==", "bodyText": "I could get on board with that, @TiFu. As long as you think that this won't be too much additional complexity.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5521#discussion_r410095844", "createdAt": "2020-04-17T09:12:26Z", "author": {"login": "bodograumann"}, "path": "samples/client/petstore/typescript/tests/default/test/api/PetApi.test.ts", "diffHunk": "@@ -120,7 +120,7 @@ describe(\"PetApi\", () =>{\n \n     it(\"uploadFile\", (done) => {\n         const image = fs.readFileSync(__dirname + \"/pet.png\")\n-        petApi.uploadFile(pet.id, \"Metadata\", { name: \"pet.png\", data: image}).then((response: any) => {\n+        petApi.uploadFile(pet.id, \"Metadata\", Object.assign(image, { name: \"pet.png\" })).then((response: any) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3MDc4OA=="}, "originalCommit": {"oid": "c3106f9cd39f170561cb8bd03354f301574b8c7e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3767, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}