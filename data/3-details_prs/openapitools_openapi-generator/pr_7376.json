{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNjE0OTky", "number": 7376, "title": "Tweaks for php generator, based on issues reported by PHP static analysis tools (PHPStan)", "bodyText": "About\nPurpose of this PR is to start fixing small and not so small issues found by PHPStan, after having applied CS Fixer 2.x.\nhese templates are directly used in my specialization of OpenAPI generator, you can see a sample Reddit client. The purpose of the specialization is to iterate quickly, being able to collect many issues and fix them in bulk.\nHow to see the issues (required functional Docker):\nReported by Psalm:\ngit clone git@github.com:flexolabs/reddit-client.git\ncd reddit-client/\nmake composer-install\nmake psalm\n\nYou can also run PHPStan, but need to change level in phpstan.neon.dist to:\nlevel: max\nand then run:\nmake phpstan\n\nWith everything enabled (strict rules, all other checks), this version of PHPStan finds 109 errors for me.\nPR checklist\n\n Read the contribution guidelines.\n Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\n@jebentier (2017/07), @dkarlovi (2017/07), @mandrean (2017/08), @jfastnacht (2017/09), @ackintosh (2017/09) heart, @ybelenko (2018/07), @renepardon (2018/12)", "createdAt": "2020-09-09T07:47:38Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376", "merged": true, "mergeCommit": {"oid": "2c59f1dc8cda32e173694d650d9498f047eb0180"}, "closed": true, "closedAt": "2020-09-27T09:42:52Z", "author": {"login": "dkarlovi"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG8lWigH2gAyNDgyNjE0OTkyOjI4MWU4ZjRkMTJmNDg1ZWQ2NDBiZDUwZTJmNzk2NTAxYzQ4M2UzMTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdM7vFKgFqTQ5NzA2Nzg2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312", "author": {"user": {"login": "dkarlovi", "name": "Dalibor Karlovi\u0107"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/281e8f4d12f485ed640bd50e2f796501c483e312", "committedDate": "2020-09-08T19:15:53Z", "message": "Small tweaks for php generator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzU0MTkx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376#pullrequestreview-484754191", "createdAt": "2020-09-09T07:59:47Z", "commit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzo1OTo0OFrOHO7WTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODo1NToxMFrOHO9hBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxNDQ3OA==", "bodyText": "Type completely missing here.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376#discussion_r485414478", "createdAt": "2020-09-09T07:59:48Z", "author": {"login": "dkarlovi"}, "path": "modules/openapi-generator/src/main/resources/php/Configuration.mustache", "diffHunk": "@@ -423,7 +426,7 @@ class Configuration\n     /**\n      * Returns an array of host settings\n      *\n-     * @return an array of host settings\n+     * @return array an array of host settings", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxNDYzMA==", "bodyText": "Type completely missing here.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376#discussion_r485414630", "createdAt": "2020-09-09T08:00:04Z", "author": {"login": "dkarlovi"}, "path": "modules/openapi-generator/src/main/resources/php/Configuration.mustache", "diffHunk": "@@ -461,9 +464,9 @@ class Configuration\n     /**\n      * Returns URL based on the index and variables\n      *\n-     * @param index array index of the host settings\n-     * @param variables hash of variable and the corresponding value (optional)\n-     * @return URL based on host settings\n+     * @param int        $index     index of the host settings\n+     * @param array|null $variables hash of variable and the corresponding value (optional)\n+     * @return string URL based on host settings", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxNTE1Nw==", "bodyText": "Code simplified since it's returning, no need for elseif.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376#discussion_r485415157", "createdAt": "2020-09-09T08:00:53Z", "author": {"login": "dkarlovi"}, "path": "modules/openapi-generator/src/main/resources/php/ObjectSerializer.mustache", "diffHunk": "@@ -51,20 +51,26 @@ class ObjectSerializer\n      * @param string $type   the OpenAPIToolsType of the data\n      * @param string $format the format of the OpenAPITools type of the data\n      *\n-     * @return string|object serialized form of $data\n+     * @return scalar|object|array|null serialized form of $data\n      */\n     public static function sanitizeForSerialization($data, $type = null, $format = null)\n     {\n         if (is_scalar($data) || null === $data) {\n             return $data;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxNTI5MA==", "bodyText": "CS change", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376#discussion_r485415290", "createdAt": "2020-09-09T08:01:10Z", "author": {"login": "dkarlovi"}, "path": "modules/openapi-generator/src/main/resources/php/api.mustache", "diffHunk": "@@ -80,17 +80,17 @@ use {{invokerPackage}}\\ObjectSerializer;\n     /**\n      * Set the host index\n      *\n-     * @param  int Host index (required)\n+     * @param int $hostIndex Host index (required)\n      */\n-    public function setHostIndex($host_index)\n+    public function setHostIndex($hostIndex)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxNTM5NA==", "bodyText": "Missing type.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376#discussion_r485415394", "createdAt": "2020-09-09T08:01:23Z", "author": {"login": "dkarlovi"}, "path": "modules/openapi-generator/src/main/resources/php/api.mustache", "diffHunk": "@@ -80,17 +80,17 @@ use {{invokerPackage}}\\ObjectSerializer;\n     /**\n      * Set the host index\n      *\n-     * @param  int Host index (required)\n+     * @param int $hostIndex Host index (required)\n      */\n-    public function setHostIndex($host_index)\n+    public function setHostIndex($hostIndex)\n     {\n-        $this->hostIndex = $host_index;\n+        $this->hostIndex = $hostIndex;\n     }\n \n     /**\n      * Get the host index\n      *\n-     * @return Host index\n+     * @return int Host index", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxNjMxNw==", "bodyText": "Tests were placed in totally wrong namespace.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376#discussion_r485416317", "createdAt": "2020-09-09T08:03:01Z", "author": {"login": "dkarlovi"}, "path": "modules/openapi-generator/src/main/resources/php/api_test.mustache", "diffHunk": "@@ -16,7 +16,7 @@\n  * Please update the test case below to test the endpoint.\n  */\n \n-namespace {{invokerPackage}};\n+namespace {{invokerPackage}}\\Test\\Api;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0OTg2OQ==", "bodyText": "Tests placed in the wrong namespace.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376#discussion_r485449869", "createdAt": "2020-09-09T08:55:01Z", "author": {"login": "dkarlovi"}, "path": "modules/openapi-generator/src/main/resources/php/composer.mustache", "diffHunk": "@@ -36,6 +36,6 @@\n         \"psr-4\": { \"{{escapedInvokerPackage}}\\\\\" : \"{{srcBasePath}}/\" }\n     },\n     \"autoload-dev\": {\n-        \"psr-4\": { \"{{escapedInvokerPackage}}\\\\\" : \"{{testBasePath}}/\" }\n+        \"psr-4\": { \"{{escapedInvokerPackage}}\\\\Test\\\\\" : \"{{testBasePath}}/\" }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0OTk5MQ==", "bodyText": "Generics.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376#discussion_r485449991", "createdAt": "2020-09-09T08:55:10Z", "author": {"login": "dkarlovi"}, "path": "modules/openapi-generator/src/main/resources/php/model.mustache", "diffHunk": "@@ -38,6 +38,11 @@ use \\{{invokerPackage}}\\ObjectSerializer;\n  * @package  {{invokerPackage}}\n  * @author   OpenAPI Generator team\n  * @link     https://openapi-generator.tech\n+{{^isEnum}}\n+ * @implements \\ArrayAccess<TKey, TValue>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDY3ODY3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7376#pullrequestreview-497067867", "createdAt": "2020-09-27T09:40:09Z", "commit": {"oid": "281e8f4d12f485ed640bd50e2f796501c483e312"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3247, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}