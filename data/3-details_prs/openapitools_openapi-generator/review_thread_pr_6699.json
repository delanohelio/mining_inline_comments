{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1OTE0MjYw", "number": 6699, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOToyNjoxMlrOEJEQbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDo1MjozNVrOEJKVeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTQyMzgwOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/Java/libraries/retrofit2/ApiClient.mustache", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOToyNjoxMlrOGpaHzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOToyNjoxMlrOGpaHzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA3Mjc4Mg==", "bodyText": "May be better to throw an Exception with an explicit message if okBuilder is null ?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6699#discussion_r446072782", "createdAt": "2020-06-26T09:26:12Z", "author": {"login": "cbornet"}, "path": "modules/openapi-generator/src/main/resources/Java/libraries/retrofit2/ApiClient.mustache", "diffHunk": "@@ -357,7 +365,9 @@ public class ApiClient {\n       throw new RuntimeException(\"auth name \\\"\" + authName + \"\\\" already in api authorizations\");\n     }\n     apiAuthorizations.put(authName, authorization);\n-    okBuilder.addInterceptor(authorization);\n+    if(okBuilder != null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0855b3d38d8340a426d0cd6474aa2badbc71be6"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDQxNjQ3OnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/java/retrofit2/src/main/java/org/openapitools/client/ApiClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDo1MTo0N1rOGpj3QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDo1MTo0N1rOGpj3QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzMjM4NQ==", "bodyText": "space missing", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6699#discussion_r446232385", "createdAt": "2020-06-26T14:51:47Z", "author": {"login": "cbornet"}, "path": "samples/client/petstore/java/retrofit2/src/main/java/org/openapitools/client/ApiClient.java", "diffHunk": "@@ -137,7 +137,7 @@ public void createDefaultAdapter() {\n   public <S> S createService(Class<S> serviceClass) {\n     if (okHttpClient != null) {\n         return adapterBuilder.client(okHttpClient).build().create(serviceClass);\n-    else {\n+    }else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26f777ac42bf8d73041fafb71b913a341d8bf7ba"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDQxOTc4OnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/java/retrofit2/src/main/java/org/openapitools/client/ApiClient.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDo1MjozNVrOGpj5Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoyMDoxMFrOGqQlOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzMjkxOA==", "bodyText": "Use RuntimeException ? (or even better : create an ApiClientException)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6699#discussion_r446232918", "createdAt": "2020-06-26T14:52:35Z", "author": {"login": "cbornet"}, "path": "samples/client/petstore/java/retrofit2/src/main/java/org/openapitools/client/ApiClient.java", "diffHunk": "@@ -311,9 +311,11 @@ public ApiClient addAuthorization(String authName, Interceptor authorization) {\n       throw new RuntimeException(\"auth name \\\"\" + authName + \"\\\" already in api authorizations\");\n     }\n     apiAuthorizations.put(authName, authorization);\n-    if(okBuilder != null){\n-      okBuilder.addInterceptor(authorization);\n+    if(okBuilder == null){\n+    \tthrow new Exception(\"okBuilder is null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26f777ac42bf8d73041fafb71b913a341d8bf7ba"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzNjA4MQ==", "bodyText": "The message could be more explicit. Something like \"the ApiClient was created with a built okClient so it's not possible to add an authorization interceptor to it\".", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6699#discussion_r446236081", "createdAt": "2020-06-26T14:57:38Z", "author": {"login": "cbornet"}, "path": "samples/client/petstore/java/retrofit2/src/main/java/org/openapitools/client/ApiClient.java", "diffHunk": "@@ -311,9 +311,11 @@ public ApiClient addAuthorization(String authName, Interceptor authorization) {\n       throw new RuntimeException(\"auth name \\\"\" + authName + \"\\\" already in api authorizations\");\n     }\n     apiAuthorizations.put(authName, authorization);\n-    if(okBuilder != null){\n-      okBuilder.addInterceptor(authorization);\n+    if(okBuilder == null){\n+    \tthrow new Exception(\"okBuilder is null\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzMjkxOA=="}, "originalCommit": {"oid": "26f777ac42bf8d73041fafb71b913a341d8bf7ba"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkzOTQ2MA==", "bodyText": "What is the advantage of creating an own ApiClientException comparing to the RuntimeException here in this case?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6699#discussion_r446939460", "createdAt": "2020-06-29T12:41:01Z", "author": {"login": "tgerth"}, "path": "samples/client/petstore/java/retrofit2/src/main/java/org/openapitools/client/ApiClient.java", "diffHunk": "@@ -311,9 +311,11 @@ public ApiClient addAuthorization(String authName, Interceptor authorization) {\n       throw new RuntimeException(\"auth name \\\"\" + authName + \"\\\" already in api authorizations\");\n     }\n     apiAuthorizations.put(authName, authorization);\n-    if(okBuilder != null){\n-      okBuilder.addInterceptor(authorization);\n+    if(okBuilder == null){\n+    \tthrow new Exception(\"okBuilder is null\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzMjkxOA=="}, "originalCommit": {"oid": "26f777ac42bf8d73041fafb71b913a341d8bf7ba"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0Mjg2Ng==", "bodyText": "See https://rules.sonarsource.com/java/RSPEC-112 . But we already have a bunch of RuntimeException so...", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6699#discussion_r446942866", "createdAt": "2020-06-29T12:46:23Z", "author": {"login": "cbornet"}, "path": "samples/client/petstore/java/retrofit2/src/main/java/org/openapitools/client/ApiClient.java", "diffHunk": "@@ -311,9 +311,11 @@ public ApiClient addAuthorization(String authName, Interceptor authorization) {\n       throw new RuntimeException(\"auth name \\\"\" + authName + \"\\\" already in api authorizations\");\n     }\n     apiAuthorizations.put(authName, authorization);\n-    if(okBuilder != null){\n-      okBuilder.addInterceptor(authorization);\n+    if(okBuilder == null){\n+    \tthrow new Exception(\"okBuilder is null\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzMjkxOA=="}, "originalCommit": {"oid": "26f777ac42bf8d73041fafb71b913a341d8bf7ba"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2NTA0OQ==", "bodyText": "Ah ok I see but as you said we already have many RuntimeExceptions so I will use a RuntimeException here if that's ok and then maybe in future you/we can change them to own Exceptions.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6699#discussion_r446965049", "createdAt": "2020-06-29T13:20:10Z", "author": {"login": "tgerth"}, "path": "samples/client/petstore/java/retrofit2/src/main/java/org/openapitools/client/ApiClient.java", "diffHunk": "@@ -311,9 +311,11 @@ public ApiClient addAuthorization(String authName, Interceptor authorization) {\n       throw new RuntimeException(\"auth name \\\"\" + authName + \"\\\" already in api authorizations\");\n     }\n     apiAuthorizations.put(authName, authorization);\n-    if(okBuilder != null){\n-      okBuilder.addInterceptor(authorization);\n+    if(okBuilder == null){\n+    \tthrow new Exception(\"okBuilder is null\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzMjkxOA=="}, "originalCommit": {"oid": "26f777ac42bf8d73041fafb71b913a341d8bf7ba"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3334, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}