{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NDg5Mzg2", "number": 7028, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo1Mjo1NlrOERb1xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo1Mjo1NlrOERb1xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzE3MzgwOnYy", "diffSide": "RIGHT", "path": "samples/openapi3/client/petstore/java/jersey2-java8/src/test/java/org/openapitools/client/ApiClientTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo1Mjo1NlrOG2JFYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMDo0NDo0OFrOG2q82w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyNTEyMA==", "bodyText": "I spent far too long yesterday thinking about exactly this test.  I think this may be sufficient:\n        Signature requestSignature = Signature.fromString(headerParams.get(\"Authorization\"), Algorithm.RSA_SHA512);\n        Verifier verify = new Verifier(PEM.readPublicKey(new ByteArrayInputStream(publicKeyPem.getBytes())), requestSignature);\n        assert verify.verify(\"post\", uri.toString(), headerParams);", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7028#discussion_r459425120", "createdAt": "2020-07-23T12:52:56Z", "author": {"login": "timgclark"}, "path": "samples/openapi3/client/petstore/java/jersey2-java8/src/test/java/org/openapitools/client/ApiClientTest.java", "diffHunk": "@@ -1,29 +1,81 @@\n package org.openapitools.client;\n \n+import org.openapitools.client.auth.Authentication;\n+import org.openapitools.client.auth.HttpSignatureAuth;\n import org.openapitools.client.model.*;\n import org.openapitools.client.ApiClient;\n \n import java.lang.Exception;\n-import java.util.Arrays;\n-import java.util.Date;\n-import java.util.TimeZone;\n-import java.text.SimpleDateFormat;\n-import java.time.OffsetDateTime;\n-import java.time.ZoneId;\n-import java.time.format.DateTimeFormatter;\n+import java.security.spec.AlgorithmParameterSpec;\n+import java.util.*;\n+import java.net.URI;\n import org.junit.*;\n+import org.tomitribe.auth.signatures.Algorithm;\n+import org.tomitribe.auth.signatures.Signer;\n+import org.tomitribe.auth.signatures.SigningAlgorithm;\n+import java.security.spec.PSSParameterSpec;\n+import java.security.spec.MGF1ParameterSpec;\n+import org.tomitribe.auth.signatures.*;\n+import java.io.ByteArrayInputStream;\n+import java.security.PublicKey;\n+import java.security.PrivateKey;\n+\n import static org.junit.Assert.*;\n \n public class ApiClientTest {\n     ApiClient apiClient = null;\n     Pet pet = null;\n \n+    private final String privateKeyPem = \"-----BEGIN RSA PRIVATE KEY-----\\n\" +\n+            \"MIICXgIBAAKBgQDCFENGw33yGihy92pDjZQhl0C36rPJj+CvfSC8+q28hxA161QF\\n\" +\n+            \"NUd13wuCTUcq0Qd2qsBe/2hFyc2DCJJg0h1L78+6Z4UMR7EOcpfdUE9Hf3m/hs+F\\n\" +\n+            \"UR45uBJeDK1HSFHD8bHKD6kv8FPGfJTotc+2xjJwoYi+1hqp1fIekaxsyQIDAQAB\\n\" +\n+            \"AoGBAJR8ZkCUvx5kzv+utdl7T5MnordT1TvoXXJGXK7ZZ+UuvMNUCdN2QPc4sBiA\\n\" +\n+            \"QWvLw1cSKt5DsKZ8UETpYPy8pPYnnDEz2dDYiaew9+xEpubyeW2oH4Zx71wqBtOK\\n\" +\n+            \"kqwrXa/pzdpiucRRjk6vE6YY7EBBs/g7uanVpGibOVAEsqH1AkEA7DkjVH28WDUg\\n\" +\n+            \"f1nqvfn2Kj6CT7nIcE3jGJsZZ7zlZmBmHFDONMLUrXR/Zm3pR5m0tCmBqa5RK95u\\n\" +\n+            \"412jt1dPIwJBANJT3v8pnkth48bQo/fKel6uEYyboRtA5/uHuHkZ6FQF7OUkGogc\\n\" +\n+            \"mSJluOdc5t6hI1VsLn0QZEjQZMEOWr+wKSMCQQCC4kXJEsHAve77oP6HtG/IiEn7\\n\" +\n+            \"kpyUXRNvFsDE0czpJJBvL/aRFUJxuRK91jhjC68sA7NsKMGg5OXb5I5Jj36xAkEA\\n\" +\n+            \"gIT7aFOYBFwGgQAQkWNKLvySgKbAZRTeLBacpHMuQdl1DfdntvAyqpAZ0lY0RKmW\\n\" +\n+            \"G6aFKaqQfOXKCyWoUiVknQJAXrlgySFci/2ueKlIE1QqIiLSZ8V8OlpFLRnb1pzI\\n\" +\n+            \"7U1yQXnTAEFYM560yJlzUpOb1V4cScGd365tiSMvxLOvTA==\\n\" +\n+            \"-----END RSA PRIVATE KEY-----\\n\";\n+\n     @Before\n     public void setup() {\n         apiClient = new ApiClient();\n         pet = new Pet();\n     }\n \n+    @Test\n+    public void testUpdateParamsForAuth() throws Exception {\n+        Map<String, String> headerParams = new HashMap<String, String>();\n+        List<Pair> queryParams = new ArrayList<>();\n+\n+        URI uri = new URI(\"/api/v1/telemetry/TimeSeries\");\n+\n+        // auth name\n+        String[] authNames = {\"http_signature_test\"};\n+\n+        HashMap<String, Authentication> authMap = new HashMap<String, Authentication>();\n+\n+        HttpSignatureAuth signatureAuth = new HttpSignatureAuth(\"some-key-1\", SigningAlgorithm.HS2019, Algorithm.RSA_SHA512, null,\n+                null, Arrays.asList(new String[] { \"(request-target)\" }), 128L);\n+\n+        signatureAuth.setPrivateKey(PEM.readPrivateKey(new ByteArrayInputStream(privateKeyPem.getBytes())));\n+\n+        authMap.put(\"http_signature_test\", signatureAuth);\n+\n+        ApiClient client = new ApiClient(authMap);\n+\n+        client.updateParamsForAuth(authNames, queryParams, headerParams, null, null, \"post\", uri);\n+\n+        // hard to test as expire will always be different", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3977d9ed15f6c58f3779c21447ece2664520747b"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg0MDYxMw==", "bodyText": "Thanks. Let me try.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7028#discussion_r459840613", "createdAt": "2020-07-24T03:55:01Z", "author": {"login": "wing328"}, "path": "samples/openapi3/client/petstore/java/jersey2-java8/src/test/java/org/openapitools/client/ApiClientTest.java", "diffHunk": "@@ -1,29 +1,81 @@\n package org.openapitools.client;\n \n+import org.openapitools.client.auth.Authentication;\n+import org.openapitools.client.auth.HttpSignatureAuth;\n import org.openapitools.client.model.*;\n import org.openapitools.client.ApiClient;\n \n import java.lang.Exception;\n-import java.util.Arrays;\n-import java.util.Date;\n-import java.util.TimeZone;\n-import java.text.SimpleDateFormat;\n-import java.time.OffsetDateTime;\n-import java.time.ZoneId;\n-import java.time.format.DateTimeFormatter;\n+import java.security.spec.AlgorithmParameterSpec;\n+import java.util.*;\n+import java.net.URI;\n import org.junit.*;\n+import org.tomitribe.auth.signatures.Algorithm;\n+import org.tomitribe.auth.signatures.Signer;\n+import org.tomitribe.auth.signatures.SigningAlgorithm;\n+import java.security.spec.PSSParameterSpec;\n+import java.security.spec.MGF1ParameterSpec;\n+import org.tomitribe.auth.signatures.*;\n+import java.io.ByteArrayInputStream;\n+import java.security.PublicKey;\n+import java.security.PrivateKey;\n+\n import static org.junit.Assert.*;\n \n public class ApiClientTest {\n     ApiClient apiClient = null;\n     Pet pet = null;\n \n+    private final String privateKeyPem = \"-----BEGIN RSA PRIVATE KEY-----\\n\" +\n+            \"MIICXgIBAAKBgQDCFENGw33yGihy92pDjZQhl0C36rPJj+CvfSC8+q28hxA161QF\\n\" +\n+            \"NUd13wuCTUcq0Qd2qsBe/2hFyc2DCJJg0h1L78+6Z4UMR7EOcpfdUE9Hf3m/hs+F\\n\" +\n+            \"UR45uBJeDK1HSFHD8bHKD6kv8FPGfJTotc+2xjJwoYi+1hqp1fIekaxsyQIDAQAB\\n\" +\n+            \"AoGBAJR8ZkCUvx5kzv+utdl7T5MnordT1TvoXXJGXK7ZZ+UuvMNUCdN2QPc4sBiA\\n\" +\n+            \"QWvLw1cSKt5DsKZ8UETpYPy8pPYnnDEz2dDYiaew9+xEpubyeW2oH4Zx71wqBtOK\\n\" +\n+            \"kqwrXa/pzdpiucRRjk6vE6YY7EBBs/g7uanVpGibOVAEsqH1AkEA7DkjVH28WDUg\\n\" +\n+            \"f1nqvfn2Kj6CT7nIcE3jGJsZZ7zlZmBmHFDONMLUrXR/Zm3pR5m0tCmBqa5RK95u\\n\" +\n+            \"412jt1dPIwJBANJT3v8pnkth48bQo/fKel6uEYyboRtA5/uHuHkZ6FQF7OUkGogc\\n\" +\n+            \"mSJluOdc5t6hI1VsLn0QZEjQZMEOWr+wKSMCQQCC4kXJEsHAve77oP6HtG/IiEn7\\n\" +\n+            \"kpyUXRNvFsDE0czpJJBvL/aRFUJxuRK91jhjC68sA7NsKMGg5OXb5I5Jj36xAkEA\\n\" +\n+            \"gIT7aFOYBFwGgQAQkWNKLvySgKbAZRTeLBacpHMuQdl1DfdntvAyqpAZ0lY0RKmW\\n\" +\n+            \"G6aFKaqQfOXKCyWoUiVknQJAXrlgySFci/2ueKlIE1QqIiLSZ8V8OlpFLRnb1pzI\\n\" +\n+            \"7U1yQXnTAEFYM560yJlzUpOb1V4cScGd365tiSMvxLOvTA==\\n\" +\n+            \"-----END RSA PRIVATE KEY-----\\n\";\n+\n     @Before\n     public void setup() {\n         apiClient = new ApiClient();\n         pet = new Pet();\n     }\n \n+    @Test\n+    public void testUpdateParamsForAuth() throws Exception {\n+        Map<String, String> headerParams = new HashMap<String, String>();\n+        List<Pair> queryParams = new ArrayList<>();\n+\n+        URI uri = new URI(\"/api/v1/telemetry/TimeSeries\");\n+\n+        // auth name\n+        String[] authNames = {\"http_signature_test\"};\n+\n+        HashMap<String, Authentication> authMap = new HashMap<String, Authentication>();\n+\n+        HttpSignatureAuth signatureAuth = new HttpSignatureAuth(\"some-key-1\", SigningAlgorithm.HS2019, Algorithm.RSA_SHA512, null,\n+                null, Arrays.asList(new String[] { \"(request-target)\" }), 128L);\n+\n+        signatureAuth.setPrivateKey(PEM.readPrivateKey(new ByteArrayInputStream(privateKeyPem.getBytes())));\n+\n+        authMap.put(\"http_signature_test\", signatureAuth);\n+\n+        ApiClient client = new ApiClient(authMap);\n+\n+        client.updateParamsForAuth(authNames, queryParams, headerParams, null, null, \"post\", uri);\n+\n+        // hard to test as expire will always be different", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyNTEyMA=="}, "originalCommit": {"oid": "3977d9ed15f6c58f3779c21447ece2664520747b"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk3OTk5NQ==", "bodyText": "@timgclark I've merged this PR into master. I wonder if you can file a separate PR to enhance the test. Thank you.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7028#discussion_r459979995", "createdAt": "2020-07-24T10:44:48Z", "author": {"login": "wing328"}, "path": "samples/openapi3/client/petstore/java/jersey2-java8/src/test/java/org/openapitools/client/ApiClientTest.java", "diffHunk": "@@ -1,29 +1,81 @@\n package org.openapitools.client;\n \n+import org.openapitools.client.auth.Authentication;\n+import org.openapitools.client.auth.HttpSignatureAuth;\n import org.openapitools.client.model.*;\n import org.openapitools.client.ApiClient;\n \n import java.lang.Exception;\n-import java.util.Arrays;\n-import java.util.Date;\n-import java.util.TimeZone;\n-import java.text.SimpleDateFormat;\n-import java.time.OffsetDateTime;\n-import java.time.ZoneId;\n-import java.time.format.DateTimeFormatter;\n+import java.security.spec.AlgorithmParameterSpec;\n+import java.util.*;\n+import java.net.URI;\n import org.junit.*;\n+import org.tomitribe.auth.signatures.Algorithm;\n+import org.tomitribe.auth.signatures.Signer;\n+import org.tomitribe.auth.signatures.SigningAlgorithm;\n+import java.security.spec.PSSParameterSpec;\n+import java.security.spec.MGF1ParameterSpec;\n+import org.tomitribe.auth.signatures.*;\n+import java.io.ByteArrayInputStream;\n+import java.security.PublicKey;\n+import java.security.PrivateKey;\n+\n import static org.junit.Assert.*;\n \n public class ApiClientTest {\n     ApiClient apiClient = null;\n     Pet pet = null;\n \n+    private final String privateKeyPem = \"-----BEGIN RSA PRIVATE KEY-----\\n\" +\n+            \"MIICXgIBAAKBgQDCFENGw33yGihy92pDjZQhl0C36rPJj+CvfSC8+q28hxA161QF\\n\" +\n+            \"NUd13wuCTUcq0Qd2qsBe/2hFyc2DCJJg0h1L78+6Z4UMR7EOcpfdUE9Hf3m/hs+F\\n\" +\n+            \"UR45uBJeDK1HSFHD8bHKD6kv8FPGfJTotc+2xjJwoYi+1hqp1fIekaxsyQIDAQAB\\n\" +\n+            \"AoGBAJR8ZkCUvx5kzv+utdl7T5MnordT1TvoXXJGXK7ZZ+UuvMNUCdN2QPc4sBiA\\n\" +\n+            \"QWvLw1cSKt5DsKZ8UETpYPy8pPYnnDEz2dDYiaew9+xEpubyeW2oH4Zx71wqBtOK\\n\" +\n+            \"kqwrXa/pzdpiucRRjk6vE6YY7EBBs/g7uanVpGibOVAEsqH1AkEA7DkjVH28WDUg\\n\" +\n+            \"f1nqvfn2Kj6CT7nIcE3jGJsZZ7zlZmBmHFDONMLUrXR/Zm3pR5m0tCmBqa5RK95u\\n\" +\n+            \"412jt1dPIwJBANJT3v8pnkth48bQo/fKel6uEYyboRtA5/uHuHkZ6FQF7OUkGogc\\n\" +\n+            \"mSJluOdc5t6hI1VsLn0QZEjQZMEOWr+wKSMCQQCC4kXJEsHAve77oP6HtG/IiEn7\\n\" +\n+            \"kpyUXRNvFsDE0czpJJBvL/aRFUJxuRK91jhjC68sA7NsKMGg5OXb5I5Jj36xAkEA\\n\" +\n+            \"gIT7aFOYBFwGgQAQkWNKLvySgKbAZRTeLBacpHMuQdl1DfdntvAyqpAZ0lY0RKmW\\n\" +\n+            \"G6aFKaqQfOXKCyWoUiVknQJAXrlgySFci/2ueKlIE1QqIiLSZ8V8OlpFLRnb1pzI\\n\" +\n+            \"7U1yQXnTAEFYM560yJlzUpOb1V4cScGd365tiSMvxLOvTA==\\n\" +\n+            \"-----END RSA PRIVATE KEY-----\\n\";\n+\n     @Before\n     public void setup() {\n         apiClient = new ApiClient();\n         pet = new Pet();\n     }\n \n+    @Test\n+    public void testUpdateParamsForAuth() throws Exception {\n+        Map<String, String> headerParams = new HashMap<String, String>();\n+        List<Pair> queryParams = new ArrayList<>();\n+\n+        URI uri = new URI(\"/api/v1/telemetry/TimeSeries\");\n+\n+        // auth name\n+        String[] authNames = {\"http_signature_test\"};\n+\n+        HashMap<String, Authentication> authMap = new HashMap<String, Authentication>();\n+\n+        HttpSignatureAuth signatureAuth = new HttpSignatureAuth(\"some-key-1\", SigningAlgorithm.HS2019, Algorithm.RSA_SHA512, null,\n+                null, Arrays.asList(new String[] { \"(request-target)\" }), 128L);\n+\n+        signatureAuth.setPrivateKey(PEM.readPrivateKey(new ByteArrayInputStream(privateKeyPem.getBytes())));\n+\n+        authMap.put(\"http_signature_test\", signatureAuth);\n+\n+        ApiClient client = new ApiClient(authMap);\n+\n+        client.updateParamsForAuth(authNames, queryParams, headerParams, null, null, \"post\", uri);\n+\n+        // hard to test as expire will always be different", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyNTEyMA=="}, "originalCommit": {"oid": "3977d9ed15f6c58f3779c21447ece2664520747b"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4244, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}