{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNDk5MjIw", "number": 5933, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzo0NToyNFrOD0nLsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzo0NToyNFrOD0nLsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDk0NTE1OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzo0NToyNFrOGJoPeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDoxOToxMlrOGNWauA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc0OTY5MA==", "bodyText": "@jimschubert will line 598 generateYAMLSpecFile(objs); be removed because we're now generating the spec in JSON? or it's intended to generate the spec in both YAML and JSON?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5933#discussion_r412749690", "createdAt": "2020-04-22T07:45:24Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -594,6 +594,7 @@ private void addSecurityExtensions(OpenAPI openAPI) {\n             }\n         }\n \n+        generateJSONSpecFile(objs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ed55b96ffdfd67a9d1671ac93b5706aeddadaee"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU5Njc3NA==", "bodyText": "I think they should both be included for consistency across all generators, tbh. We're limiting what people can extend or customize when we don't have a consistent model bound to templates.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5933#discussion_r416596774", "createdAt": "2020-04-28T13:06:49Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -594,6 +594,7 @@ private void addSecurityExtensions(OpenAPI openAPI) {\n             }\n         }\n \n+        generateJSONSpecFile(objs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc0OTY5MA=="}, "originalCommit": {"oid": "5ed55b96ffdfd67a9d1671ac93b5706aeddadaee"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MTk2MA==", "bodyText": "As discussed, this is more like a proactive enhancement that the user didn't ask for. I'm ok with that and let's see if there are users asking for something similar in other generators.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5933#discussion_r416651960", "createdAt": "2020-04-28T14:19:12Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -594,6 +594,7 @@ private void addSecurityExtensions(OpenAPI openAPI) {\n             }\n         }\n \n+        generateJSONSpecFile(objs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc0OTY5MA=="}, "originalCommit": {"oid": "5ed55b96ffdfd67a9d1671ac93b5706aeddadaee"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3548, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}