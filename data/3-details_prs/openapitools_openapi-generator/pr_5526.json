{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MDQyMTkx", "number": 5526, "title": "Adds parseFlattenSpec", "bodyText": "We automatically flatten inline models in specs in allOf and other composed schemas into new different Schemas. All of our testing was not including that flattening.\nThis PR adds the function parseFlattenSpec which includes the flattening and uses it in all tests except for the inline model resolver tests.\nThis PR was extracted from work in: https://github.com/OpenAPITools/openapi-generator/pull/4906/files and is blocking that PR\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\nCore Team Members\n@wing328 (2015/07)\n@jimschubert (2016/05)\n@cbornet (2016/05)\n@ackintosh (2018/02)\n@jmini (2018/04)\n@etherealjoy (2019/06)", "createdAt": "2020-03-05T03:08:19Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5526", "merged": true, "mergeCommit": {"oid": "0a3272697de84afe29b0b54fea37d9517d073fb5"}, "closed": true, "closedAt": "2020-03-17T01:12:37Z", "author": {"login": "spacether"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLM-23AH2gAyMzg0MDQyMTkxOmQ1YjEyNzEyOGZiMTJjMWNlYTk1OTkxMWY4YzhjZjI4Y2RiMjg1NGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNsV2NgH2gAyMzg0MDQyMTkxOmMwNzcxYTQ5MTQ5NTM2OGNmNjdlMzAwNTRkMWUyYmFlNmEyNzU3Nzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d5b127128fb12c1cea959911f8c8cf28cdb2854c", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d5b127128fb12c1cea959911f8c8cf28cdb2854c", "committedDate": "2020-03-07T04:26:46Z", "message": "Adds parseFlattenSpec, updates tests and helper functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2f0cd04e825180dbe3bf2fc2a07c6f8c60aba4d", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d2f0cd04e825180dbe3bf2fc2a07c6f8c60aba4d", "committedDate": "2020-03-07T04:26:46Z", "message": "Adds fixes for java tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbc71a836e0ff376e66de05d6f9f40608bb39b7d", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bbc71a836e0ff376e66de05d6f9f40608bb39b7d", "committedDate": "2020-03-07T04:26:46Z", "message": "Runs ensure-up-to-date"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d44f6270fb49072149195ffaecd00a7e3d1e1951", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d44f6270fb49072149195ffaecd00a7e3d1e1951", "committedDate": "2020-03-05T09:14:44Z", "message": "Runs ensure-up-to-date"}, "afterCommit": {"oid": "bbc71a836e0ff376e66de05d6f9f40608bb39b7d", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bbc71a836e0ff376e66de05d6f9f40608bb39b7d", "committedDate": "2020-03-07T04:26:46Z", "message": "Runs ensure-up-to-date"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTgxOTQx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5526#pullrequestreview-373181941", "createdAt": "2020-03-11T22:58:18Z", "commit": {"oid": "bbc71a836e0ff376e66de05d6f9f40608bb39b7d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjo1ODoxOVrOF1MGSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjo1ODoxOVrOF1MGSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNzA2Ng==", "bodyText": "Typo: Schmea.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5526#discussion_r391317066", "createdAt": "2020-03-11T22:58:19Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -1126,7 +1134,10 @@ public static String getParentName(ComposedSchema composedSchema, Map<String, Sc\n                     } else {\n                         // not a parent since discriminator.propertyName is not set\n                         hasAmbiguousParents = true;\n-                        refedWithoutDiscriminator.add(parentName);\n+                        Boolean isNotExtractedInlineSchmea = !parentName.equals(schemaName+\"_allOf\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbc71a836e0ff376e66de05d6f9f40608bb39b7d"}, "originalPosition": 120}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "180e1902f70ff68f02b3aaf2bc027209dad42d10", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/180e1902f70ff68f02b3aaf2bc027209dad42d10", "committedDate": "2020-03-12T00:10:39Z", "message": "Fixes typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczODM1OTc1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5526#pullrequestreview-373835975", "createdAt": "2020-03-12T19:19:41Z", "commit": {"oid": "180e1902f70ff68f02b3aaf2bc027209dad42d10"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOToxOTo0MVrOF1r_EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOToyMToyNlrOF1sCfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzOTUwNQ==", "bodyText": "boolean instead of Boolean? Don't think we actually need an object here", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5526#discussion_r391839505", "createdAt": "2020-03-12T19:19:41Z", "author": {"login": "TiFu"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -1126,7 +1134,10 @@ public static String getParentName(ComposedSchema composedSchema, Map<String, Sc\n                     } else {\n                         // not a parent since discriminator.propertyName is not set\n                         hasAmbiguousParents = true;\n-                        refedWithoutDiscriminator.add(parentName);\n+                        Boolean isNotExtractedInlineSchema = !parentName.equals(schemaName+\"_allOf\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "180e1902f70ff68f02b3aaf2bc027209dad42d10"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0MDM4Mw==", "bodyText": "Call TestUtils.parseSpec instead of reimplementing parsing here?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5526#discussion_r391840383", "createdAt": "2020-03-12T19:21:26Z", "author": {"login": "TiFu"}, "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/TestUtils.java", "diffHunk": "@@ -28,6 +28,30 @@\n \n public class TestUtils {\n \n+    /**\n+     * Helper method for parsing specs as a generator would be presented at runtime (inline models resolved, flattened).\n+     *\n+     * @param specFilePath The path to the specification file\n+     * @return A processed OpenAPI document\n+     */\n+    public static OpenAPI parseFlattenSpec(String specFilePath) {\n+        OpenAPI openAPI = new OpenAPIParser().readLocation(specFilePath, null, new ParseOptions()).getOpenAPI();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "180e1902f70ff68f02b3aaf2bc027209dad42d10"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c73bb01cbdb5ef733cb856de17887ebab3a5e419", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/c73bb01cbdb5ef733cb856de17887ebab3a5e419", "committedDate": "2020-03-12T20:10:46Z", "message": "Updates Boolean to boolean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef117ed484472069f098f2931d3603bf2fb485e1", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ef117ed484472069f098f2931d3603bf2fb485e1", "committedDate": "2020-03-13T15:30:34Z", "message": "Adds parseSPec invocation inside parseFlattenSpec"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0Njc5MzMy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5526#pullrequestreview-374679332", "createdAt": "2020-03-14T00:33:07Z", "commit": {"oid": "ef117ed484472069f098f2931d3603bf2fb485e1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMDozMzowN1rOF2WmGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMDozODozM1rOF2Wr3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzNzYyNQ==", "bodyText": "Be careful when refactoring things like this. While YAML (as used in this method) may process schemas in a consistent order, JSON does not have a determinate order on object properties.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5526#discussion_r392537625", "createdAt": "2020-03-14T00:33:07Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/utils/ModelUtilsTest.java", "diffHunk": "@@ -26,86 +26,84 @@\n import org.testng.Assert;\n import org.testng.annotations.Test;\n \n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n+import java.util.*;\n \n public class ModelUtilsTest {\n \n     @Test\n     public void testGetAllUsedSchemas() {\n-        final OpenAPI openAPI = TestUtils.parseSpec(\"src/test/resources/3_0/unusedSchemas.yaml\");\n+        final OpenAPI openAPI = TestUtils.parseFlattenSpec(\"src/test/resources/3_0/unusedSchemas.yaml\");\n         List<String> allUsedSchemas = ModelUtils.getAllUsedSchemas(openAPI);\n-        Assert.assertEquals(allUsedSchemas.size(), 41);\n-\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObjShared\"), \"contains 'SomeObjShared'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj1\"), \"contains 'UnusedObj1'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj2\"), \"contains 'SomeObj2'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj3\"), \"contains 'SomeObj3'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj6\"), \"contains 'SomeObj6'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj7\"), \"contains 'SomeObj7'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj8\"), \"contains 'SomeObj8'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj9A\"), \"contains 'SomeObj9A'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj9B\"), \"contains 'SomeObj9B'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj10A\"), \"contains 'SomeObj10A'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj10B\"), \"contains 'SomeObj10B'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj11\"), \"contains 'SomeObj11'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeArrayObj12\"), \"contains 'SomeArrayObj12'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"ArrayItem12\"), \"contains 'ArrayItem12'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeArrayObj13\"), \"contains 'SomeArrayObj13'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"ArrayItem13\"), \"contains 'ArrayItem13'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj14\"), \"contains 'SomeObj14'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"PropertyObj14\"), \"contains 'PropertyObj14'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj15\"), \"contains 'SomeObj15'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeMapObj16\"), \"contains 'SomeMapObj16'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"MapItem16\"), \"contains 'MapItem16'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj17\"), \"contains 'SomeObj17'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj18\"), \"contains 'SomeObj18'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"Common18\"), \"contains 'Common18'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"Obj19ByAge\"), \"contains 'Obj19ByAge'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"Obj19ByType\"), \"contains 'Obj19ByType'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj20\"), \"contains 'SomeObj20'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"OtherObj20\"), \"contains 'OtherObj20'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"PingDataInput21\"), \"contains 'PingDataInput21'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"PingDataOutput21\"), \"contains 'PingDataOutput21'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SInput22\"), \"contains 'SInput22'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SOutput22\"), \"contains 'SInput22'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeHeader23\"), \"contains 'SomeHeader23'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeHeader24\"), \"contains 'SomeHeader24'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj25\"), \"contains 'SomeObj25'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"SomeObj26\"), \"contains 'SomeObj26'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"Param27\"), \"contains 'Param27'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"Param28\"), \"contains 'Param28'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"Parent30\"), \"contains 'Parent30'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"AChild30\"), \"contains 'AChild30'\");\n-        Assert.assertTrue(allUsedSchemas.contains(\"BChild30\"), \"contains 'BChild30'\");\n+        Assert.assertEquals(allUsedSchemas.size(), 42);\n+        List<String> expectedallUsedSchemas = Arrays.asList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef117ed484472069f098f2931d3603bf2fb485e1"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzNzc0OQ==", "bodyText": "This comment is unnecessary.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5526#discussion_r392537749", "createdAt": "2020-03-14T00:34:04Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/TestUtils.java", "diffHunk": "@@ -28,6 +28,30 @@\n \n public class TestUtils {\n \n+    /**\n+     * Helper method for parsing specs as a generator would be presented at runtime (inline models resolved, flattened).\n+     *\n+     * @param specFilePath The path to the specification file\n+     * @return A processed OpenAPI document\n+     */\n+    public static OpenAPI parseFlattenSpec(String specFilePath) {\n+        OpenAPI openAPI = parseSpec(specFilePath);\n+        // resolve inline models", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef117ed484472069f098f2931d3603bf2fb485e1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzOTEwMQ==", "bodyText": "What is the point of this for loop? Why can't you just do composedSchema.getName() to get this schema's name? I think this needs a comment because it could be a pretty large performance impact on huge schema documents.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5526#discussion_r392539101", "createdAt": "2020-03-14T00:38:33Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -1110,6 +1110,14 @@ public static String getParentName(ComposedSchema composedSchema, Map<String, Sc\n         int nullSchemaChildrenCount = 0;\n         boolean hasAmbiguousParents = false;\n         List<String> refedWithoutDiscriminator = new ArrayList<>();\n+        String schemaName = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef117ed484472069f098f2931d3603bf2fb485e1"}, "originalPosition": 104}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60c23e9a54dafe417a8e78c63333f8223594c263", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/60c23e9a54dafe417a8e78c63333f8223594c263", "committedDate": "2020-03-14T20:58:17Z", "message": "Removes comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f77fee638c0565e1c710e14793358965048b80aa", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/f77fee638c0565e1c710e14793358965048b80aa", "committedDate": "2020-03-14T21:44:13Z", "message": "Changes to List.containsAll to check presence not order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25475a2d58ee1a04b090d255817fe7092bdeaebd", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/25475a2d58ee1a04b090d255817fe7092bdeaebd", "committedDate": "2020-03-14T22:02:04Z", "message": "Switches two tests to use containsAll"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0771a491495368cf67e30054d1e2bae6a275778", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/c0771a491495368cf67e30054d1e2bae6a275778", "committedDate": "2020-03-14T22:06:47Z", "message": "Updates another test to use containsAll"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2744, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}