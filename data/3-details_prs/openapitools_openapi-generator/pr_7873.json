{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MjYwNTc2", "number": 7873, "title": "Fix a few issues with go examples generation", "bodyText": "This fixes a bunch of issues seen when generating go examples, namely\n\nNumbers aren't casted to the right type\nThe time import is missing\nEnums are treated as regular models\nExample values are used correctly\n\n\nPR checklist\n\n Read the contribution guidelines.\n Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-11-04T09:42:30Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7873", "merged": true, "mergeCommit": {"oid": "777031f24f7ed6e4549e62fa4cde3a417629f70d"}, "closed": true, "closedAt": "2020-11-12T15:36:40Z", "author": {"login": "therve"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZKiP2AH2gAyNTE1MjYwNTc2OjgyZjEwZWI5N2ViZTUwZDU5YWQ4ODlkMjhiZWFiZGYxMGM4ODMxMmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABde7-lJgFqTUzNjAzODA0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "82f10eb97ebe50d59ad889d28beabdf10c88312a", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/82f10eb97ebe50d59ad889d28beabdf10c88312a", "committedDate": "2020-11-04T09:41:48Z", "message": "Fix a few issues with go examples generation\n\nThis fixes a bunch of issues seen when generating go examples, namely\n - Numbers aren't casted to the right type\n - The time import is missing\n - Enums are treated as regular models"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14156cb129192f8288949abb88072ddf9fb43c42", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/14156cb129192f8288949abb88072ddf9fb43c42", "committedDate": "2020-11-04T09:43:41Z", "message": "Rebuild more samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67a316dd912d56fe19fd7b61756d7c62515c76a2", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/67a316dd912d56fe19fd7b61756d7c62515c76a2", "committedDate": "2020-11-04T11:02:50Z", "message": "Use examples properly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad2949ce7144f3f68ae3b826e23961532cc20499", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ad2949ce7144f3f68ae3b826e23961532cc20499", "committedDate": "2020-11-05T08:35:31Z", "message": "Handle multiple instances in the same doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7e110a9f66247fb3cff3651796f83bddf02d0dd", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e7e110a9f66247fb3cff3651796f83bddf02d0dd", "committedDate": "2020-11-05T08:49:07Z", "message": "Fix wrong array closure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d0a9d06881571dead4208b22190d6074e365dc8", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3d0a9d06881571dead4208b22190d6074e365dc8", "committedDate": "2020-11-05T09:50:42Z", "message": "Handle model arrays"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ea35ecf913136fe99d3ba9cdaf3d36313ef303f", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/9ea35ecf913136fe99d3ba9cdaf3d36313ef303f", "committedDate": "2020-11-05T10:31:13Z", "message": "Fix file and enum namespace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63ea632a5b1b97c28a5648fa71600a3e514d73e6", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/63ea632a5b1b97c28a5648fa71600a3e514d73e6", "committedDate": "2020-11-05T13:30:28Z", "message": "Regenerate samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a6712aa0d0e917accc2ca6f04148e12843365a7", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/1a6712aa0d0e917accc2ca6f04148e12843365a7", "committedDate": "2020-11-05T13:40:26Z", "message": "Handle maps of complex types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efa4f60054d55a7c2347ed9bfc14d0bb24c4dd08", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/efa4f60054d55a7c2347ed9bfc14d0bb24c4dd08", "committedDate": "2020-11-05T17:38:35Z", "message": "Handle oneOf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca56a1935a61b69e0ba3d80919bc2c8e70568ea8", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ca56a1935a61b69e0ba3d80919bc2c8e70568ea8", "committedDate": "2020-11-05T17:42:41Z", "message": "Fix padding"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ceff6447bf354d655e8f253d193d92649bc100", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/48ceff6447bf354d655e8f253d193d92649bc100", "committedDate": "2020-11-09T13:38:48Z", "message": "Fix enum doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33de7b47b8f251f00109d9fe4e033f3298565c0e", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/33de7b47b8f251f00109d9fe4e033f3298565c0e", "committedDate": "2020-11-09T14:18:08Z", "message": "Removes links to basic types in arrays"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ef17db3d743b5111fd0dd8385c0f9a105edf74f", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6ef17db3d743b5111fd0dd8385c0f9a105edf74f", "committedDate": "2020-11-09T14:26:22Z", "message": "Remove links to basic types in maps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "889dae7cdf78a35ad1584dbd1c3168979447d621", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/889dae7cdf78a35ad1584dbd1c3168979447d621", "committedDate": "2020-11-09T17:53:13Z", "message": "Fix enum links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bdb91ff37abac9790f2cd44054927174846440b", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/9bdb91ff37abac9790f2cd44054927174846440b", "committedDate": "2020-11-09T19:27:41Z", "message": "Minor indent fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MDI5Njc5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7873#pullrequestreview-527029679", "createdAt": "2020-11-10T09:51:24Z", "commit": {"oid": "9bdb91ff37abac9790f2cd44054927174846440b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTo1MToyNFrOHwUdWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMDoxMjoyNVrOHwVV9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyODg5MA==", "bodyText": "Is this just a leftover from local testing? I don't think we should turn off tests.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7873#discussion_r520428890", "createdAt": "2020-11-10T09:51:24Z", "author": {"login": "bkabrda"}, "path": "Dockerfile", "diffHunk": "@@ -20,7 +20,7 @@ COPY ./modules/openapi-generator ${GEN_DIR}/modules/openapi-generator\n COPY ./pom.xml ${GEN_DIR}\n \n # Pre-compile openapi-generator-cli\n-RUN mvn -am -pl \"modules/openapi-generator-cli\" package\n+RUN mvn -DskipTests -am -pl \"modules/openapi-generator-cli\" package", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bdb91ff37abac9790f2cd44054927174846440b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ0MDk2OQ==", "bodyText": "I'd suggest using \"map[string][]\".length() instead of 13. It's self-commenting and also prevents off-by-one errors. (There are couple instances of this, so please fix them all)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7873#discussion_r520440969", "createdAt": "2020-11-10T10:08:49Z", "author": {"login": "bkabrda"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/GoClientCodegen.java", "diffHunk": "@@ -448,26 +448,44 @@ public CodegenProperty fromProperty(String name, Schema p) {\n             for (CodegenParameter p : op.allParams) {\n                 p.vendorExtensions.put(\"x-go-example\", constructExampleCode(p, modelMaps, processedModelMaps));\n             }\n+            processedModelMaps.clear();\n         }\n \n-        processedModelMaps.clear();\n         for (CodegenOperation operation : operationList) {\n+            boolean needTimeImport = false;\n             for (CodegenParameter cp : operation.allParams) {\n                 cp.vendorExtensions.put(\"x-go-example\", constructExampleCode(cp, modelMaps, processedModelMaps));\n+                if (cp.isDateTime || cp.isDate) { // datetime or date\n+                    needTimeImport = true;\n+                }\n+            }\n+            if (needTimeImport) {\n+                operation.vendorExtensions.put(\"x-go-import\", \"    \\\"time\\\"\");\n             }\n+            processedModelMaps.clear();\n         }\n \n         return objs;\n     }\n \n     private String constructExampleCode(CodegenParameter codegenParameter, HashMap<String, CodegenModel> modelMaps, HashMap<String, Integer> processedModelMap) {\n         if (codegenParameter.isArray) { // array\n-            return codegenParameter.dataType + \"{\" + constructExampleCode(codegenParameter.items, modelMaps, processedModelMap) + \"}\";\n+            String prefix = codegenParameter.dataType;\n+            String dataType = codegenParameter.dataType.substring(2);\n+            if (modelMaps.containsKey(dataType)) {\n+                prefix = \"[]\" + goImportAlias + \".\" + dataType;\n+            }\n+            return prefix + \"{\" + constructExampleCode(codegenParameter.items, modelMaps, processedModelMap) + \"}\";\n         } else if (codegenParameter.isMap) {\n-            return codegenParameter.dataType + \"{ \\\"key\\\": \" + constructExampleCode(codegenParameter.items, modelMaps, processedModelMap) + \"}\";\n+            String prefix = codegenParameter.dataType;\n+            String dataType = codegenParameter.dataType.substring(13); // map[string][]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bdb91ff37abac9790f2cd44054927174846440b"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ0MzM4Mw==", "bodyText": "I think if you just use\n{{#vendorExtensions.x-go-import}}\n{{{vendorExtensions.x-go-import}}}\n{{/vendorExtensions.x-go-import}}\n\nwithout any heading/trailing whitespace, it will still produce no output (not even blank lines) if there are no extra imports - this would make the template code nicer.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7873#discussion_r520443383", "createdAt": "2020-11-10T10:12:25Z", "author": {"login": "bkabrda"}, "path": "modules/openapi-generator/src/main/resources/go/api_doc.mustache", "diffHunk": "@@ -28,7 +28,8 @@ package main\n import (\n     \"context\"\n     \"fmt\"\n-    \"os\"\n+    \"os\"{{#vendorExtensions.x-go-import}}\n+{{{vendorExtensions.x-go-import}}}{{/vendorExtensions.x-go-import}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bdb91ff37abac9790f2cd44054927174846440b"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f35ab0e226c8e547feca668f029e0d815d2cf87", "author": {"user": {"login": "therve", "name": "Thomas Herv\u00e9"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8f35ab0e226c8e547feca668f029e0d815d2cf87", "committedDate": "2020-11-10T10:29:33Z", "message": "Handle review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MDM4Mjk0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7873#pullrequestreview-529038294", "createdAt": "2020-11-12T12:28:33Z", "commit": {"oid": "8f35ab0e226c8e547feca668f029e0d815d2cf87"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MDM4MDQ5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7873#pullrequestreview-536038049", "createdAt": "2020-11-22T08:07:43Z", "commit": {"oid": "8f35ab0e226c8e547feca668f029e0d815d2cf87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQwODowNzo0M1rOH30zvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQwODowNzo0M1rOH30zvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI5ODk0Mg==", "bodyText": "@therve FYI. I've fled #7998 to fix the string comparison in this line and a few other lines in this file.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7873#discussion_r528298942", "createdAt": "2020-11-22T08:07:43Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/GoClientCodegen.java", "diffHunk": "@@ -448,26 +448,44 @@ public CodegenProperty fromProperty(String name, Schema p) {\n             for (CodegenParameter p : op.allParams) {\n                 p.vendorExtensions.put(\"x-go-example\", constructExampleCode(p, modelMaps, processedModelMaps));\n             }\n+            processedModelMaps.clear();\n         }\n \n-        processedModelMaps.clear();\n         for (CodegenOperation operation : operationList) {\n+            boolean needTimeImport = false;\n             for (CodegenParameter cp : operation.allParams) {\n                 cp.vendorExtensions.put(\"x-go-example\", constructExampleCode(cp, modelMaps, processedModelMaps));\n+                if (cp.isDateTime || cp.isDate) { // datetime or date\n+                    needTimeImport = true;\n+                }\n+            }\n+            if (needTimeImport) {\n+                operation.vendorExtensions.put(\"x-go-import\", \"    \\\"time\\\"\");\n             }\n+            processedModelMaps.clear();\n         }\n \n         return objs;\n     }\n \n     private String constructExampleCode(CodegenParameter codegenParameter, HashMap<String, CodegenModel> modelMaps, HashMap<String, Integer> processedModelMap) {\n         if (codegenParameter.isArray) { // array\n-            return codegenParameter.dataType + \"{\" + constructExampleCode(codegenParameter.items, modelMaps, processedModelMap) + \"}\";\n+            String prefix = codegenParameter.dataType;\n+            String dataType = StringUtils.removeStart(codegenParameter.dataType, \"[]\");\n+            if (modelMaps.containsKey(dataType)) {\n+                prefix = \"[]\" + goImportAlias + \".\" + dataType;\n+            }\n+            return prefix + \"{\" + constructExampleCode(codegenParameter.items, modelMaps, processedModelMap) + \"}\";\n         } else if (codegenParameter.isMap) {\n-            return codegenParameter.dataType + \"{ \\\"key\\\": \" + constructExampleCode(codegenParameter.items, modelMaps, processedModelMap) + \"}\";\n+            String prefix = codegenParameter.dataType;\n+            String dataType = StringUtils.removeStart(codegenParameter.dataType, \"map[string][]\");\n+            if (modelMaps.containsKey(dataType)) {\n+                prefix = \"map[string][]\" + goImportAlias + \".\" + dataType;\n+            }\n+            return prefix + \"{\\\"key\\\": \" + constructExampleCode(codegenParameter.items, modelMaps, processedModelMap) + \"}\";\n         } else if (codegenParameter.isPrimitiveType) { // primitive type\n             if (codegenParameter.isString) {\n-                if (StringUtils.isEmpty(codegenParameter.example)) {\n+                if (!StringUtils.isEmpty(codegenParameter.example) && codegenParameter.example != \"null\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f35ab0e226c8e547feca668f029e0d815d2cf87"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2961, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}