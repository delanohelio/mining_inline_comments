{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0Mzc4NjA3", "number": 7157, "title": "[python-exp] simplify examples", "bodyText": "All examples are now generated in one method\n\nendpoint parameters\nModel property examples\nModel examples\n\n\nExamples are recursively generated in that method\nadds ensureQuotes method to make sure that string values have double quotes, single quotes, or triple quotes and allows newlines in values\nreduces run time of the python-experimental generator by storing a map going from python class name to its schema, and uses it in updateCodegenPropertyEnum @sebastien-rosset\n\n\nPR checklist\n\n Read the contribution guidelines.\n Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-08-07T04:15:10Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7157", "merged": true, "mergeCommit": {"oid": "866df36c947d772dcdb85d3161b7b144fa54eb9e"}, "closed": true, "closedAt": "2020-08-20T04:27:32Z", "author": {"login": "spacether"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8egrZgFqTQ2MzA2NjQyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAn81lgH2gAyNDY0Mzc4NjA3OjM1MTI2NjM2Y2IzMWUzZmRlNzRmMTU5ZWQ0NmRmMzllZjI3MzBhYmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMDY2NDI2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7157#pullrequestreview-463066426", "createdAt": "2020-08-07T06:34:22Z", "commit": {"oid": "e548541d35b96b5ca1f64cb80cfa003f969850b0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjozNDoyM1rOG9OKhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjozNDoyM1rOG9OKhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg0ODM4OA==", "bodyText": "That's a special case we added a while ago for type:string, format:number to map the type into BigDecimal in Java as format: double or format:float of type:number have been mapped accordingly. PM me if you need more info.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7157#discussion_r466848388", "createdAt": "2020-08-07T06:34:23Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "diffHunk": "@@ -1106,71 +1119,432 @@ protected void addAdditionPropertiesToCodeGenModel(CodegenModel codegenModel, Sc\n         // to false, i.e. no additional properties are allowed.\n     }\n \n+    protected String toExampleValueBase(Schema schema) {\n+        if (schema.getExample() != null) {\n+            return schema.getExample().toString();\n+        }\n+\n+        return toDefaultValue(schema);\n+    }\n+\n     @Override\n-    public void setParameterExampleValue(CodegenParameter p) {\n-        // we have a custom version of this function so we can set the file\n-        // type example value\n-        String example;\n+    public String toExampleValue(Schema schema) {\n+        return toExampleValueRecursive(schema, new ArrayList<String>(), 1, \"\", 0);\n+    }\n \n-        if (p.defaultValue == null) {\n-            example = p.example;\n+    private String toExampleValueRecursive(Schema schema, List<String> included_schemas, int indentationLevel, String prefix, Integer exampleLine) {\n+        final String indentionConst = \"    \";\n+        String currentIndentation = \"\";\n+        String closingIndentation = \"\";\n+        for (int i=0 ; i < indentationLevel ; i++) currentIndentation += indentionConst;\n+        String example = toExampleValueBase(schema);\n+        if (exampleLine.equals(0)) {\n+            closingIndentation = currentIndentation;\n+            currentIndentation = \"\";\n         } else {\n-            p.example = p.defaultValue;\n-            return;\n+            closingIndentation = currentIndentation;\n+        }\n+        String fullPrefix = currentIndentation + prefix;\n+\n+        if (ModelUtils.isNullType(schema) && null != example) {\n+            // The 'null' type is allowed in OAS 3.1 and above. It is not supported by OAS 3.0.x,\n+            // though this tooling supports it.\n+            return fullPrefix + \"None\";\n+        }\n+        // correct \"true\"s into \"True\"s, since super.toExampleValue uses \"toString()\" on Java booleans\n+        if (ModelUtils.isBooleanSchema(schema) && null!=example) {\n+            if (\"false\".equalsIgnoreCase(example)) {\n+                example = \"False\";\n+            } else {\n+                example = \"True\";\n+            }\n         }\n \n-        String type = p.baseType;\n-        if (type == null) {\n-            type = p.dataType;\n+        // correct \"&#39;\"s into \"'\"s after toString()\n+        if (ModelUtils.isStringSchema(schema) && schema.getDefault() != null && !ModelUtils.isDateSchema(schema) && !ModelUtils.isDateTimeSchema(schema)) {\n+            example = (String) schema.getDefault();\n         }\n \n-        if (\"String\".equalsIgnoreCase(type) || \"str\".equalsIgnoreCase(type)) {\n-            if (example == null) {\n-                example = p.paramName + \"_example\";\n+        if (StringUtils.isNotBlank(example) && !\"null\".equals(example)) {\n+            if (ModelUtils.isStringSchema(schema)) {\n+                example = \"'\" + example + \"'\";\n+            }\n+            return fullPrefix + example;\n+        }\n+\n+        if (schema.getEnum() != null && !schema.getEnum().isEmpty()) {\n+            // Enum case:\n+            example = schema.getEnum().get(0).toString();\n+            if (ModelUtils.isStringSchema(schema)) {\n+                example = \"'\" + escapeText(example) + \"'\";\n+            }\n+            if (null == example)\n+                LOGGER.warn(\"Empty enum. Cannot built an example!\");\n+\n+            return fullPrefix + example;\n+        } else if (null != schema.get$ref()) {\n+            // $ref case:\n+            Map<String, Schema> allDefinitions = ModelUtils.getSchemas(this.openAPI);\n+            String ref = ModelUtils.getSimpleRef(schema.get$ref());\n+            if (allDefinitions != null) {\n+                Schema refSchema = allDefinitions.get(ref);\n+                if (null == refSchema) {\n+                    return fullPrefix + \"None\";\n+                } else {\n+                    String refTitle = refSchema.getTitle();\n+                    if (StringUtils.isBlank(refTitle) || \"null\".equals(refTitle)) {\n+                        refSchema.setTitle(ref);\n+                    }\n+                    if (StringUtils.isNotBlank(schema.getTitle()) && !\"null\".equals(schema.getTitle())) {\n+                        included_schemas.add(schema.getTitle());\n+                    }\n+                    return toExampleValueRecursive(refSchema, included_schemas, indentationLevel, prefix, exampleLine);\n+                }\n+            } else {\n+                LOGGER.warn(\"allDefinitions not defined in toExampleValue!\\n\");\n+            }\n+        }\n+        if (ModelUtils.isDateSchema(schema)) {\n+            example = \"datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()\";\n+            return fullPrefix + example;\n+        } else if (ModelUtils.isDateTimeSchema(schema)) {\n+            example = \"datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')\";\n+            return fullPrefix + example;\n+        } else if (ModelUtils.isBinarySchema(schema)) {\n+            example = \"open('/path/to/file', 'rb')\";\n+            return fullPrefix + example;\n+        } else if (ModelUtils.isByteArraySchema(schema)) {\n+            example = \"'YQ=='\";\n+            return fullPrefix + example;\n+        } else if (ModelUtils.isStringSchema(schema)) {\n+            // a BigDecimal:\n+            if (\"Number\".equalsIgnoreCase(schema.getFormat())) {return fullPrefix + \"1\";}\n+            // TODO why is Number handled here?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e548541d35b96b5ca1f64cb80cfa003f969850b0"}, "originalPosition": 152}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed46a23b45e445425e3915380976aa477559ade1", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ed46a23b45e445425e3915380976aa477559ade1", "committedDate": "2020-08-17T06:32:41Z", "message": "Fixes python test"}, "afterCommit": {"oid": "a03c0d884bd6456ddfdad6036b04f7233a5cff33", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a03c0d884bd6456ddfdad6036b04f7233a5cff33", "committedDate": "2020-08-17T06:36:14Z", "message": "Adds example setting code in python-experimental with one fn setting example values\n\nFixes sample indentations\n\nHandles composed schema models, object model and arraymodels\n\nAdds brackets in arraymodel input\n\nSets modelName with map schemas\n\nRemoves included_schemas arguments, dicriminator examples do not include property examples\n\nRefactors modelName into toExampleValueRecursive argument\n\nFixes bug where example models contained themselves\n\nStops using model ExampleGenerator examples because they are inconsistent with the ones in python-experimental\n\nUses example values if they exist\n\nRemoves single quotes from enum examples\n\nFixes password example\n\nAdds commented our regex handling, commented out because it breaks\n\nHandles AnyType schema examples\n\nAdds x_example values for simple string properties, uses toExampleValue for all example generation\n\nAdds examples for simple string parameters\n\nUpdates comments in toExampleValueBase\n\nFixes the double nested bug for AdditionalPropertiesWithArrayOfEnums\n\nFixes bug where NumberWithValidations had double nesting\n\nUpdates simple string examples in arrays\n\nFixes array string examples\n\nFixes example for string endpoint body example\n\nAdds exampleFromStringOrArraySchema\n\nAdds regex examples, pegs slf4j-version to v1.7.29 for rgxgen\n\nAdds comment about regex seed\n\nUpdates pattern matcher to not handle ^ and $\n\nUpdates used sample values\n\nAdds ensureQuotes\n\nAdds ensureQuotes\n\nFixes double quote bug\n\nUpdates mustache file\n\nAdds ensureQuotes to key handling\n\nAdds modelNameToSchema map, reduces run time by using it\n\nFixes java tests\n\nRegenerates python-experimental samples\n\nFixes python test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a03c0d884bd6456ddfdad6036b04f7233a5cff33", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a03c0d884bd6456ddfdad6036b04f7233a5cff33", "committedDate": "2020-08-17T06:36:14Z", "message": "Adds example setting code in python-experimental with one fn setting example values\n\nFixes sample indentations\n\nHandles composed schema models, object model and arraymodels\n\nAdds brackets in arraymodel input\n\nSets modelName with map schemas\n\nRemoves included_schemas arguments, dicriminator examples do not include property examples\n\nRefactors modelName into toExampleValueRecursive argument\n\nFixes bug where example models contained themselves\n\nStops using model ExampleGenerator examples because they are inconsistent with the ones in python-experimental\n\nUses example values if they exist\n\nRemoves single quotes from enum examples\n\nFixes password example\n\nAdds commented our regex handling, commented out because it breaks\n\nHandles AnyType schema examples\n\nAdds x_example values for simple string properties, uses toExampleValue for all example generation\n\nAdds examples for simple string parameters\n\nUpdates comments in toExampleValueBase\n\nFixes the double nested bug for AdditionalPropertiesWithArrayOfEnums\n\nFixes bug where NumberWithValidations had double nesting\n\nUpdates simple string examples in arrays\n\nFixes array string examples\n\nFixes example for string endpoint body example\n\nAdds exampleFromStringOrArraySchema\n\nAdds regex examples, pegs slf4j-version to v1.7.29 for rgxgen\n\nAdds comment about regex seed\n\nUpdates pattern matcher to not handle ^ and $\n\nUpdates used sample values\n\nAdds ensureQuotes\n\nAdds ensureQuotes\n\nFixes double quote bug\n\nUpdates mustache file\n\nAdds ensureQuotes to key handling\n\nAdds modelNameToSchema map, reduces run time by using it\n\nFixes java tests\n\nRegenerates python-experimental samples\n\nFixes python test"}, "afterCommit": {"oid": "79268a3a1140b772232fe891f703eb6bcadc1b2c", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/79268a3a1140b772232fe891f703eb6bcadc1b2c", "committedDate": "2020-08-17T06:38:46Z", "message": "Adds example setting code in python-experimental with one fn setting example values\n\nFixes sample indentations\n\nHandles composed schema models, object model and arraymodels\n\nAdds brackets in arraymodel input\n\nSets modelName with map schemas\n\nRemoves included_schemas arguments, dicriminator examples do not include property examples\n\nRefactors modelName into toExampleValueRecursive argument\n\nFixes bug where example models contained themselves\n\nStops using model ExampleGenerator examples because they are inconsistent with the ones in python-experimental\n\nUses example values if they exist\n\nRemoves single quotes from enum examples\n\nFixes password example\n\nAdds commented our regex handling, commented out because it breaks\n\nHandles AnyType schema examples\n\nAdds x_example values for simple string properties, uses toExampleValue for all example generation\n\nAdds examples for simple string parameters\n\nUpdates comments in toExampleValueBase\n\nFixes the double nested bug for AdditionalPropertiesWithArrayOfEnums\n\nFixes bug where NumberWithValidations had double nesting\n\nUpdates simple string examples in arrays\n\nFixes array string examples\n\nFixes example for string endpoint body example\n\nAdds exampleFromStringOrArraySchema\n\nAdds regex examples, pegs slf4j-version to v1.7.29 for rgxgen\n\nAdds comment about regex seed\n\nUpdates pattern matcher to not handle ^ and $\n\nUpdates used sample values\n\nAdds ensureQuotes\n\nAdds ensureQuotes\n\nFixes double quote bug\n\nUpdates mustache file\n\nAdds ensureQuotes to key handling\n\nAdds modelNameToSchema map, reduces run time by using it\n\nFixes java tests\n\nRegenerates python-experimental samples\n\nFixes python test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NTQ5NzU4", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7157#pullrequestreview-468549758", "createdAt": "2020-08-17T15:08:50Z", "commit": {"oid": "6e37d4faadcda8048d6a6d39a002270b8d54f92a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToxMTo0NFrOHBs7dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToxMTo0NFrOHBs7dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0Njc0MQ==", "bodyText": "This seems to be the same code as my PR #7220. I've noticed other code generators have similar issues, that's why I put the map in DefaultCodeGenerator.  It would be good if we can either get my PR in then that can be reused for your PR, or even remove this part of the enhancement and when my PR is in, the performance optimization will be applied.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7157#discussion_r471546741", "createdAt": "2020-08-17T15:11:44Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "diffHunk": "@@ -37,19 +40,23 @@\n import org.openapitools.codegen.meta.Stability;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import com.github.curiousoddman.rgxgen.RgxGen;\n \n import java.time.OffsetDateTime;\n import java.time.ZoneOffset;\n import java.time.format.DateTimeFormatter;\n import java.io.File;\n import java.util.*;\n import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n \n+import static org.openapitools.codegen.utils.OnceLogger.once;\n import static org.openapitools.codegen.utils.StringUtils.camelize;\n import static org.openapitools.codegen.utils.StringUtils.underscore;\n \n public class PythonClientExperimentalCodegen extends PythonClientCodegen {\n     private static final Logger LOGGER = LoggerFactory.getLogger(PythonClientExperimentalCodegen.class);\n+    private Map<String, Schema> modelNameToSchema = new HashMap<String, Schema>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79268a3a1140b772232fe891f703eb6bcadc1b2c"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79268a3a1140b772232fe891f703eb6bcadc1b2c", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/79268a3a1140b772232fe891f703eb6bcadc1b2c", "committedDate": "2020-08-17T06:38:46Z", "message": "Adds example setting code in python-experimental with one fn setting example values\n\nFixes sample indentations\n\nHandles composed schema models, object model and arraymodels\n\nAdds brackets in arraymodel input\n\nSets modelName with map schemas\n\nRemoves included_schemas arguments, dicriminator examples do not include property examples\n\nRefactors modelName into toExampleValueRecursive argument\n\nFixes bug where example models contained themselves\n\nStops using model ExampleGenerator examples because they are inconsistent with the ones in python-experimental\n\nUses example values if they exist\n\nRemoves single quotes from enum examples\n\nFixes password example\n\nAdds commented our regex handling, commented out because it breaks\n\nHandles AnyType schema examples\n\nAdds x_example values for simple string properties, uses toExampleValue for all example generation\n\nAdds examples for simple string parameters\n\nUpdates comments in toExampleValueBase\n\nFixes the double nested bug for AdditionalPropertiesWithArrayOfEnums\n\nFixes bug where NumberWithValidations had double nesting\n\nUpdates simple string examples in arrays\n\nFixes array string examples\n\nFixes example for string endpoint body example\n\nAdds exampleFromStringOrArraySchema\n\nAdds regex examples, pegs slf4j-version to v1.7.29 for rgxgen\n\nAdds comment about regex seed\n\nUpdates pattern matcher to not handle ^ and $\n\nUpdates used sample values\n\nAdds ensureQuotes\n\nAdds ensureQuotes\n\nFixes double quote bug\n\nUpdates mustache file\n\nAdds ensureQuotes to key handling\n\nAdds modelNameToSchema map, reduces run time by using it\n\nFixes java tests\n\nRegenerates python-experimental samples\n\nFixes python test"}, "afterCommit": {"oid": "a5d019b64f0657c2bee0bfb937d74f6f1b01709f", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a5d019b64f0657c2bee0bfb937d74f6f1b01709f", "committedDate": "2020-08-18T19:25:30Z", "message": "Adds example setting code in python-experimental with one fn setting example values\n\nFixes sample indentations\n\nHandles composed schema models, object model and arraymodels\n\nAdds brackets in arraymodel input\n\nSets modelName with map schemas\n\nRemoves included_schemas arguments, dicriminator examples do not include property examples\n\nRefactors modelName into toExampleValueRecursive argument\n\nFixes bug where example models contained themselves\n\nStops using model ExampleGenerator examples because they are inconsistent with the ones in python-experimental\n\nUses example values if they exist\n\nRemoves single quotes from enum examples\n\nFixes password example\n\nAdds commented our regex handling, commented out because it breaks\n\nHandles AnyType schema examples\n\nAdds x_example values for simple string properties, uses toExampleValue for all example generation\n\nAdds examples for simple string parameters\n\nUpdates comments in toExampleValueBase\n\nFixes the double nested bug for AdditionalPropertiesWithArrayOfEnums\n\nFixes bug where NumberWithValidations had double nesting\n\nUpdates simple string examples in arrays\n\nFixes array string examples\n\nFixes example for string endpoint body example\n\nAdds exampleFromStringOrArraySchema\n\nAdds regex examples, pegs slf4j-version to v1.7.29 for rgxgen\n\nAdds comment about regex seed\n\nUpdates pattern matcher to not handle ^ and $\n\nUpdates used sample values\n\nAdds ensureQuotes\n\nAdds ensureQuotes\n\nFixes double quote bug\n\nUpdates mustache file\n\nAdds ensureQuotes to key handling\n\nAdds modelNameToSchema map, reduces run time by using it\n\nFixes java tests\n\nRegenerates python-experimental samples\n\nFixes python test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24aad07717e52c27245fa57f5e31476d876ba95b", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/24aad07717e52c27245fa57f5e31476d876ba95b", "committedDate": "2020-08-19T15:50:05Z", "message": "Adds example setting code in python-experimental with one fn setting example values\n\nFixes sample indentations\n\nHandles composed schema models, object model and arraymodels\n\nAdds brackets in arraymodel input\n\nSets modelName with map schemas\n\nRemoves included_schemas arguments, dicriminator examples do not include property examples\n\nRefactors modelName into toExampleValueRecursive argument\n\nFixes bug where example models contained themselves\n\nStops using model ExampleGenerator examples because they are inconsistent with the ones in python-experimental\n\nUses example values if they exist\n\nRemoves single quotes from enum examples\n\nFixes password example\n\nAdds commented our regex handling, commented out because it breaks\n\nHandles AnyType schema examples\n\nAdds x_example values for simple string properties, uses toExampleValue for all example generation\n\nAdds examples for simple string parameters\n\nUpdates comments in toExampleValueBase\n\nFixes the double nested bug for AdditionalPropertiesWithArrayOfEnums\n\nFixes bug where NumberWithValidations had double nesting\n\nUpdates simple string examples in arrays\n\nFixes array string examples\n\nFixes example for string endpoint body example\n\nAdds exampleFromStringOrArraySchema\n\nAdds regex examples, pegs slf4j-version to v1.7.29 for rgxgen\n\nAdds comment about regex seed\n\nUpdates pattern matcher to not handle ^ and $\n\nUpdates used sample values\n\nAdds ensureQuotes\n\nAdds ensureQuotes\n\nFixes double quote bug\n\nUpdates mustache file\n\nAdds ensureQuotes to key handling\n\nAdds modelNameToSchema map, reduces run time by using it\n\nFixes java tests\n\nRegenerates python-experimental samples\n\nFixes python test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcf0f0973847a32e9a4981bb4641ed218462b476", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/dcf0f0973847a32e9a4981bb4641ed218462b476", "committedDate": "2020-08-19T15:50:05Z", "message": "Rebased on master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa5ac8ba936a58924a3fa536c7bd192dbf2a2675", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/fa5ac8ba936a58924a3fa536c7bd192dbf2a2675", "committedDate": "2020-08-19T15:50:05Z", "message": "Adds getModelNameToSchemaCache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93f96dd6f479eb23969ded0f3a8ab42487c14612", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/93f96dd6f479eb23969ded0f3a8ab42487c14612", "committedDate": "2020-08-18T19:46:09Z", "message": "Rebased on master"}, "afterCommit": {"oid": "fa5ac8ba936a58924a3fa536c7bd192dbf2a2675", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/fa5ac8ba936a58924a3fa536c7bd192dbf2a2675", "committedDate": "2020-08-19T15:50:05Z", "message": "Adds getModelNameToSchemaCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a4469b32d503b2461694f53fc3e0dac756f709d", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/5a4469b32d503b2461694f53fc3e0dac756f709d", "committedDate": "2020-08-20T01:47:45Z", "message": "Updates toDefaultValue to not mutate schemas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "412db5dac5499b106900c2f80be71f3fdb06941d", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/412db5dac5499b106900c2f80be71f3fdb06941d", "committedDate": "2020-08-20T03:31:46Z", "message": "Has all dates and datetimes default and example setting use the same helper function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69e7cc558c019b5f6471ac205d4d8895af75c24a", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/69e7cc558c019b5f6471ac205d4d8895af75c24a", "committedDate": "2020-08-20T03:41:38Z", "message": "Samples regenerated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35126636cb31e3fde74f159ed46df39ef2730abf", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/35126636cb31e3fde74f159ed46df39ef2730abf", "committedDate": "2020-08-20T03:49:59Z", "message": "indentation tweak, removes txt from sample file"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3326, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}