{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMTExNTc0", "number": 5207, "title": "[typescript] Make additional properties access safer", "bodyText": "Instead of asserting that any key access returns a valid property, force\nthe consumer to check that the value is defined.\nWhen declaring an object with additional properties\n  /store/inventory:\n    get:\n      tags:\n        - store\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      produces:\n        - application/json\n      parameters: []\n      responses:\n        '200':\n          description: successful operation\n          schema:\n            type: object\n            additionalProperties:\n              type: integer\n              format: int32\nThe generated interface is unsafe, because it asserts that any property access on the response returns a value. In reality, a property access can return undefined, which will cause a runtime failure.\nasync getInventory(): Promise<{ [key: string]: number; }\nIf the compiler is running with strict null checking, we can avoid the problem by declaring that property access can return undefined, forcing the consumer to verity that they got an actual value:\nasync getInventory(): Promise<{ [key: string]: number | undefined; }>\n\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\ncc @TiFu @taxpon @sebastianhaas @kenisteward @Vrolijkx @macjohnny @nicokoenig @topce @akehir @petejohansonxo", "createdAt": "2020-02-04T23:56:45Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5207", "merged": true, "mergeCommit": {"oid": "a8015ad8c1ce07cb2582b64e377b3a8856bfa2f7"}, "closed": true, "closedAt": "2020-02-10T06:47:30Z", "author": {"login": "asmundg"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBKOqEAH2gAyMzcxMTExNTc0OjA3YTc3MjcwYzZhNzhhMDcxNGFhODE5NDgzYjcyYzU3Y2QxN2I3MWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcC3aEZgFqTM1NTcxNjY5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "07a77270c6a78a0714aa819483b72c57cd17b71f", "author": {"user": {"login": "asmundg", "name": "\u00c5smund Grammeltvedt"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/07a77270c6a78a0714aa819483b72c57cd17b71f", "committedDate": "2020-02-04T23:35:04Z", "message": "[typescript-fetch] Make additional properties access safer\n\nInstead of asserting that any key access returns a valid property, force\nthe consumer to check that the value is defined."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d9e650b627ee7a615d7097dac27661fe0e43dc8", "author": {"user": {"login": "asmundg", "name": "\u00c5smund Grammeltvedt"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3d9e650b627ee7a615d7097dac27661fe0e43dc8", "committedDate": "2020-02-04T23:44:31Z", "message": "Update tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19aee766856eb0f3f95f924bc984bd90f6a6eb86", "author": {"user": {"login": "asmundg", "name": "\u00c5smund Grammeltvedt"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/19aee766856eb0f3f95f924bc984bd90f6a6eb86", "committedDate": "2020-02-06T19:25:46Z", "message": "Put null-safe additional props behind and flag and share"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d0384c95a16499fb8e2fcab19bc1d964980329d", "author": {"user": {"login": "asmundg", "name": "\u00c5smund Grammeltvedt"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/4d0384c95a16499fb8e2fcab19bc1d964980329d", "committedDate": "2020-02-06T19:27:49Z", "message": "Undo over copy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74da96b8a50298560c405748289e61ad63682360", "author": {"user": {"login": "asmundg", "name": "\u00c5smund Grammeltvedt"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/74da96b8a50298560c405748289e61ad63682360", "committedDate": "2020-02-06T21:09:43Z", "message": "Update docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODE0NjMx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5207#pullrequestreview-354814631", "createdAt": "2020-02-06T22:22:17Z", "commit": {"oid": "74da96b8a50298560c405748289e61ad63682360"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjoyMjoxN1rOFmsQ2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjoyMjoxN1rOFmsQ2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExNTQxNg==", "bodyText": "Suggest moving it to AbstractTypescript codegen. I believe the purpose of CodegenConstants is to store stuff that is applicable to many if not all generators. While the change introduced in this PR is very typescript-specific", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5207#discussion_r376115416", "createdAt": "2020-02-06T22:22:17Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/CodegenConstants.java", "diffHunk": "@@ -251,6 +251,9 @@\n     public static final String SUPPORTS_ES6 = \"supportsES6\";\n     public static final String SUPPORTS_ES6_DESC = \"Generate code that conforms to ES6.\";\n \n+    public static final String NULL_SAFE_ADDITIONAL_PROPS = \"nullSafeAdditionalProps\";\n+    public static final String NULL_SAFE_ADDITIONAL_PROPS_DESC = \"Set to make additional properties types declare that their indexer may return undefined\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74da96b8a50298560c405748289e61ad63682360"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27bdc97f7bd1bb28f042911355f90e811682f507", "author": {"user": {"login": "asmundg", "name": "\u00c5smund Grammeltvedt"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/27bdc97f7bd1bb28f042911355f90e811682f507", "committedDate": "2020-02-06T22:51:20Z", "message": "Rearrange code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODY0NTQz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5207#pullrequestreview-354864543", "createdAt": "2020-02-07T00:25:23Z", "commit": {"oid": "27bdc97f7bd1bb28f042911355f90e811682f507"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTgyNjky", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5207#pullrequestreview-354982692", "createdAt": "2020-02-07T08:01:34Z", "commit": {"oid": "27bdc97f7bd1bb28f042911355f90e811682f507"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5952d899c830472b807cbb01e982295a63ad1c52", "author": {"user": {"login": "asmundg", "name": "\u00c5smund Grammeltvedt"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/5952d899c830472b807cbb01e982295a63ad1c52", "committedDate": "2020-02-07T16:42:19Z", "message": "Move to unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NzE2Njk2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5207#pullrequestreview-355716696", "createdAt": "2020-02-10T06:47:11Z", "commit": {"oid": "5952d899c830472b807cbb01e982295a63ad1c52"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2936, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}