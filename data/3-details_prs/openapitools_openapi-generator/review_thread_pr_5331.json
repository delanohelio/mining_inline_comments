{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzQyMDAy", "number": 5331, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjozMToxNlrODgw-JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToxMzozOFrODjNCrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjgzMzY1OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjozMToxNlrOFrJexQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjozMToxNlrOFrJexQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc4ODQyMQ==", "bodyText": "We want to standardize vendor extension naming with lower cases only separated by hyphens so what about usingx-all-of-name instead?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5331#discussion_r380788421", "createdAt": "2020-02-18T16:31:16Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -1752,6 +1752,10 @@ public String getSchemaType(Schema schema) {\n      */\n     @SuppressWarnings(\"static-method\")\n     public String toAllOfName(List<String> names, ComposedSchema composedSchema) {\n+        Map<String, Object> exts = composedSchema.getExtensions();\n+        if (exts != null && exts.containsKey(\"x-allOf-name\")) {\n+            return (String) exts.get(\"x-allOf-name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee3d3acd144ecfaba7fbc5c1a443e8568028a33e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjQwNDI4OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/java/JavaModelEnumTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToxMzozOFrOFu4ilA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToxMzozOFrOFu4ilA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwNTE3Mg==", "bodyText": "Do our tests cover this new code?\nThis model: https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/test/resources/2_0/petstore-with-fake-endpoints-models-for-testing.yaml#L1422\ndoes not contain x-all-of-name\nAlso doesn't this test already require that the schema not be null?\nDown below we test that the CodegenModel generated form the schema contains vars, which means that the schema had to not be null to contain those vars.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5331#discussion_r384705172", "createdAt": "2020-02-26T19:13:38Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/java/JavaModelEnumTest.java", "diffHunk": "@@ -172,6 +172,7 @@ public void testEnumTestSchema() {\n         codegen.setOpenAPI(openAPI);\n \n         Schema enumTest = openAPI.getComponents().getSchemas().get(\"Enum_Test\");\n+        Assert.assertNotNull(enumTest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6d770cf564b25b03016c17dd3b9dc633b08bc2d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3818, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}