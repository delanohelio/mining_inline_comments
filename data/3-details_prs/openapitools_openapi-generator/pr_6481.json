{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTMzNjky", "number": 6481, "title": "[Rust][Client][Reqwest] Better http error handling", "bodyText": "When the server response is not OK (code >= 300), return error is not a generic \"Reqwest::Error\" but a custom \"ResponseError\", containing the status, the raw body (String), and a deserialization as \"serde_json::Value\" when it is possible.\nRelated issue: #6178\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\ncc @frol (2017/07) @farcaller (2017/08) @bjgill (2017/12) @richardwhiuk (2019/07) @paladinzh (2020/05) @wing328", "createdAt": "2020-05-29T07:24:53Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6481", "merged": true, "mergeCommit": {"oid": "8e2bf99ffbfc58c17f2ee23f7880e3eaf4ac8eac"}, "closed": true, "closedAt": "2020-06-13T04:28:53Z", "author": {"login": "bcourtine"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl8rUbAH2gAyNDI0OTMzNjkyOjllMzU2NWU3MWQ0ZjE0MTliMWQ1N2VkYmFmMjI0M2Q4MmQ4YzllOTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqjMiCAH2gAyNDI0OTMzNjkyOmE3MmJlNDhmMzBlNTUxMzQyOTE4ZmI2MzU0NmVjZTIyNDE1M2NjYTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9e3565e71d4f1419b1d57edbaf2243d82d8c9e93", "author": {"user": {"login": "bcourtine", "name": "Beno\u00eet Courtine"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/9e3565e71d4f1419b1d57edbaf2243d82d8c9e93", "committedDate": "2020-05-29T06:42:54Z", "message": "Stronger typing for http errors with Rust client. (#5609)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "948d653806c6593cca5a96c59b6f53efdca255ee", "author": {"user": {"login": "bcourtine", "name": "Beno\u00eet Courtine"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/948d653806c6593cca5a96c59b6f53efdca255ee", "committedDate": "2020-05-29T07:12:10Z", "message": "Merge branch 'master' into 5609-rust-client-better-error-typing (support async with reqwest 0.10+)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODE2ODk0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6481#pullrequestreview-420816894", "createdAt": "2020-05-29T10:00:33Z", "commit": {"oid": "948d653806c6593cca5a96c59b6f53efdca255ee"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMDowMDozNFrOGcWkcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMDowMDozNFrOGcWkcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM4MzA4OA==", "bodyText": "hey \ud83d\ude4b\u200d\u2642\ufe0f  great attempt on this issue, but this isn't complete yet.\nThe openapi spec allows for defining a schema for every possible response status: eg\n\"responses\": {\n    \"200\": {},\n    \"202\": {},\n    \"400\": {},\n    \"default\": {}\n}\nso instead of just checking for a success status, you'll need to match over the response status.\nand deserialize based on the defined schema for that status as well as the fallback(default) schema.\nI imagine this means that the return type of methods would become an enum,\npub enum OperationIdResponse {\n    Status200(Status200Schema),\n    Status202(Status202Schema),\n    Status400(Status400Schema),\n    Unspecified(DefaultSchema)\n}\n\n// .. snip\nmatch response.status().as_u16() {\n    200 => Ok(OperationIdResponse::Status200(response.json().await?))\n    202 => Ok(OperationIdResponse::Status202(response.json().await?))\n    400 => Ok(OperationIdResponse::Status400(response.json().await?))\n    _ => Ok(OperationIdResponse::Unspecified(response.json().await?))\n}\n// .. snip", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6481#discussion_r432383088", "createdAt": "2020-05-29T10:00:34Z", "author": {"login": "seunlanlege"}, "path": "samples/client/petstore/rust/reqwest/fileResponseTest/src/apis/default_api.rs", "diffHunk": "@@ -47,7 +47,16 @@ impl DefaultApi for DefaultApiClient {\n         }\n \n         let req = req_builder.build()?;\n-        Ok(client.execute(req)?.error_for_status()?.json()?)\n+        let mut resp = client.execute(req)?;\n+        if resp.status().is_success() {\n+            Ok(resp.json()?)\n+        } else {\n+            let status = resp.status();\n+            let content = resp.text()?;\n+            let entity: Option<serde_json::Value> = serde_json::from_str(&content).ok();\n+            let error = crate::apis::ResponseErrorContent { status, content, entity };\n+            Err(Error::ResponseError(error))\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "948d653806c6593cca5a96c59b6f53efdca255ee"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed3e8fbc9b4cdb4e3547817a38fb73e1c4ae5f52", "author": {"user": {"login": "bcourtine", "name": "Beno\u00eet Courtine"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ed3e8fbc9b4cdb4e3547817a38fb73e1c4ae5f52", "committedDate": "2020-05-29T11:56:56Z", "message": "Error structure can be parametrized (but is still hardcoded with `serde_json::Value` in generated code)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ad86b3ddf70f5671a15d7f82c9ef6be7f2f93e6", "author": {"user": {"login": "bcourtine", "name": "Beno\u00eet Courtine"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3ad86b3ddf70f5671a15d7f82c9ef6be7f2f93e6", "committedDate": "2020-05-29T12:14:34Z", "message": "Each API method has is own enum of functionnal errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "755fc693a6ec85647d88b3010c26afbdeba43c70", "author": {"user": {"login": "bcourtine", "name": "Beno\u00eet Courtine"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/755fc693a6ec85647d88b3010c26afbdeba43c70", "committedDate": "2020-05-29T12:46:40Z", "message": "Fix the missing \"Debug\" derivation for API error enums."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff3d510a69b0c6d266c79d2a2d38472c36554782", "author": {"user": {"login": "bcourtine", "name": "Beno\u00eet Courtine"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ff3d510a69b0c6d266c79d2a2d38472c36554782", "committedDate": "2020-05-30T07:46:10Z", "message": "Generate models for error deserialization."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "250d0ede69feb121f54cd0e05d9fb20b2ce2a05e", "author": {"user": {"login": "bcourtine", "name": "Beno\u00eet Courtine"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/250d0ede69feb121f54cd0e05d9fb20b2ce2a05e", "committedDate": "2020-06-09T08:04:19Z", "message": "Handle several 2xx success models."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a890621306cbeaacfdd3bb2543362c2887983f59", "author": {"user": {"login": "bcourtine", "name": "Beno\u00eet Courtine"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a890621306cbeaacfdd3bb2543362c2887983f59", "committedDate": "2020-06-09T17:24:21Z", "message": "Expose new API objects, required to use the API (params, success, error structs/enums)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "733fd9d601b19862de26b8424106f60cd9716e6c", "author": {"user": {"login": "bcourtine", "name": "Beno\u00eet Courtine"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/733fd9d601b19862de26b8424106f60cd9716e6c", "committedDate": "2020-06-09T20:24:53Z", "message": "Merge remote-tracking branch 'upstream/master' into 5609-rust-client-better-error-typing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a72be48f30e551342918fb63546ece224153cca0", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a72be48f30e551342918fb63546ece224153cca0", "committedDate": "2020-06-12T13:51:16Z", "message": "Merge branch 'master' of https://github.com/openapitools/openapi-generator into 5609-rust-client-better-error-typing"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2168, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}